uint64_t sub_1C0141644()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  long long v22;
  long long v23;
  long long v24;
  char v25;
  long long v26;
  uint64_t (*v27)(void);
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  id v34;
  void *v35;
  void *v36;
  uint64_t v37;

  v2 = *(void *)(v0 + 280);
  v1 = *(uint64_t **)(v0 + 288);
  v3 = *(void *)(v0 + 272);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *v1 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCBD8], v3);
  v4 = sub_1C151E26C();
  v5 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    return MEMORY[0x1F415EBC8](v5);
  }
  v6 = *(void *)(v0 + 248);
  v7 = *(void *)(v0 + 256);
  v8 = *(void *)(v0 + 240);
  v9 = *(void *)(v0 + 216);
  v10 = *(void *)(v0 + 224);
  v11 = *(void *)(v0 + 208);
  v12 = objc_msgSend(*(id *)(v0 + 184), sel_remoteURL);
  sub_1C1515F1C();

  sub_1C1518DCC();
  v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(void *)(v0 + 296) = v13;
  *(void *)(v0 + 304) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v8, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6) == 1)
  {
    v14 = sub_1C01530F8(*(void *)(v0 + 208), (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
LABEL_8:
    if (sub_1C01065B8(v14, v15)) {
      objc_msgSend(*(id *)(*(void *)(v0 + 200) + 136), sel_d_resetAssetHandle_, *(void *)(v0 + 184));
    }
    v30 = *(void **)(v0 + 184);
    v29 = *(void *)(v0 + 192);
    v31 = *(void *)(v29 + 40);
    v32 = *(unsigned char *)(v29 + 48);
    v33 = swift_task_alloc();
    *(void *)(v33 + 16) = v30;
    *(void *)(v33 + 24) = v31;
    *(unsigned char *)(v33 + 32) = v32;
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901F8);
    sub_1C151932C();
    swift_task_dealloc();
    *(void *)(swift_allocObject() + 16) = v30;
    v34 = v30;
    v35 = (void *)sub_1C1518E7C();
    *(void *)(v0 + 312) = sub_1C1518FFC();

    swift_release();
    swift_release();
    v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v36;
    *v36 = v0;
    v36[1] = sub_1C0141A78;
    v5 = v0 + 160;
    return MEMORY[0x1F415EBC8](v5);
  }
  v16 = *(void *)(v0 + 264);
  sub_1C01054A0(*(void *)(v0 + 208), v16, type metadata accessor for FormatService.CacheFormatFile);
  sub_1C0EB8150((_OWORD *)(v0 + 128));
  sub_1BFDDF774(v16, type metadata accessor for FormatService.CacheFormatFile);
  v14 = swift_dynamicCast();
  if ((v14 & 1) == 0) {
    goto LABEL_8;
  }
  v17 = *(void *)(v0 + 176);
  v18 = *(void *)(v0 + 24);
  v19 = *(void *)(v0 + 64);
  v20 = *(void *)(v0 + 72);
  v21 = *(unsigned char *)(v0 + 120);
  v22 = *(_OWORD *)(v0 + 32);
  v23 = *(_OWORD *)(v0 + 48);
  v24 = *(_OWORD *)(v0 + 80);
  v25 = *(unsigned char *)(v0 + 96) & 1;
  v26 = *(_OWORD *)(v0 + 104);
  *(void *)v17 = *(void *)(v0 + 16);
  *(void *)(v17 + 8) = v18;
  *(_OWORD *)(v17 + 16) = v22;
  *(_OWORD *)(v17 + 32) = v23;
  *(void *)(v17 + 48) = v19;
  *(void *)(v17 + 56) = v20;
  *(_OWORD *)(v17 + 64) = v24;
  *(unsigned char *)(v17 + 80) = v25;
  *(_OWORD *)(v17 + 88) = v26;
  *(unsigned char *)(v17 + 104) = v21;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_1C0141A78()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v2 = sub_1C015C32C;
  }
  else
  {
    swift_release();
    v2 = sub_1C0141B94;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0141B94()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v4 = *(void **)(v0 + 176);
  v3 = *(void **)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 160);
  unint64_t v6 = *(void *)(v0 + 168);
  id v7 = objc_msgSend(v3, sel_remoteURL);
  sub_1C1515F1C();

  sub_1C0146590(v5, v6, v1, v3, v2, v4);
  (*(void (**)(void, void))(v0 + 296))(*(void *)(v0 + 232), *(void *)(v0 + 216));
  sub_1BFE95664(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1C0141CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[21] = a3;
  v4[22] = v3;
  v4[19] = a1;
  v4[20] = a2;
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  v4[23] = swift_task_alloc();
  uint64_t v5 = sub_1C1515FDC();
  v4[24] = v5;
  v4[25] = *(void *)(v5 - 8);
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatService.CacheFormatFile(0);
  v4[28] = v6;
  v4[29] = *(void *)(v6 - 8);
  v4[30] = swift_task_alloc();
  uint64_t v7 = sub_1C151E24C();
  v4[31] = v7;
  v4[32] = *(void *)(v7 - 8);
  v4[33] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0141EAC, 0, 0);
}

uint64_t sub_1C0141EAC()
{
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v1 = *(uint64_t **)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 248);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *uint64_t v1 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCBD8], v3);
  char v4 = sub_1C151E26C();
  uint64_t v5 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v7 = *(void *)(v0 + 232);
  uint64_t v8 = *(void *)(v0 + 216);
  uint64_t v9 = *(void *)(v0 + 192);
  uint64_t v10 = *(void *)(v0 + 200);
  uint64_t v11 = *(void *)(v0 + 184);
  id v12 = objc_msgSend(*(id *)(v0 + 160), sel_remoteURL);
  sub_1C1515F1C();

  sub_1C1518DCC();
  v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(void *)(v0 + 272) = v13;
  *(void *)(v0 + 280) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v8, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6) == 1)
  {
    uint64_t v14 = sub_1C01530F8(*(void *)(v0 + 184), (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
LABEL_8:
    if (sub_1C01065B8(v14, v15)) {
      objc_msgSend(*(id *)(*(void *)(v0 + 176) + 136), sel_d_resetAssetHandle_, *(void *)(v0 + 160));
    }
    v27 = *(void **)(v0 + 160);
    uint64_t v26 = *(void *)(v0 + 168);
    uint64_t v28 = *(void *)(v26 + 40);
    char v29 = *(unsigned char *)(v26 + 48);
    uint64_t v30 = swift_task_alloc();
    *(void *)(v30 + 16) = v27;
    *(void *)(v30 + 24) = v28;
    *(unsigned char *)(v30 + 32) = v29;
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901F8);
    sub_1C151932C();
    swift_task_dealloc();
    *(void *)(swift_allocObject() + 16) = v27;
    id v31 = v27;
    v32 = (void *)sub_1C1518E7C();
    *(void *)(v0 + 288) = sub_1C1518FFC();

    swift_release();
    swift_release();
    v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v33;
    void *v33 = v0;
    v33[1] = sub_1C01422C4;
    uint64_t v5 = v0 + 136;
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v16 = *(void *)(v0 + 240);
  sub_1C01054A0(*(void *)(v0 + 184), v16, type metadata accessor for FormatService.CacheFormatFile);
  sub_1C0EB8150((_OWORD *)(v0 + 104));
  sub_1BFDDF774(v16, type metadata accessor for FormatService.CacheFormatFile);
  uint64_t v14 = swift_dynamicCast();
  if ((v14 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v17 = *(void *)(v0 + 152);
  uint64_t v18 = *(void *)(v0 + 24);
  char v19 = *(unsigned char *)(v0 + 96);
  long long v20 = *(_OWORD *)(v0 + 32);
  long long v21 = *(_OWORD *)(v0 + 48);
  long long v22 = *(_OWORD *)(v0 + 64);
  long long v23 = *(_OWORD *)(v0 + 80);
  *(void *)uint64_t v17 = *(void *)(v0 + 16);
  *(void *)(v17 + 8) = v18;
  *(_OWORD *)(v17 + 16) = v20;
  *(_OWORD *)(v17 + 32) = v21;
  *(_OWORD *)(v17 + 48) = v22;
  *(_OWORD *)(v17 + 64) = v23;
  *(unsigned char *)(v17 + 80) = v19;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_1C01422C4()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0142510;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C01423E0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C01423E0()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void **)(v0 + 152);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 136);
  unint64_t v6 = *(void *)(v0 + 144);
  id v7 = objc_msgSend(v3, sel_remoteURL);
  sub_1C1515F1C();

  sub_1C0146D54(v5, v6, v1, v3, v2, v4);
  (*(void (**)(void, void))(v0 + 272))(*(void *)(v0 + 208), *(void *)(v0 + 192));
  sub_1BFE95664(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1C0142510()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C01425B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[24] = a3;
  v4[25] = v3;
  v4[22] = a1;
  v4[23] = a2;
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  v4[26] = swift_task_alloc();
  uint64_t v5 = sub_1C1515FDC();
  v4[27] = v5;
  v4[28] = *(void *)(v5 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatService.CacheFormatFile(0);
  v4[31] = v6;
  v4[32] = *(void *)(v6 - 8);
  v4[33] = swift_task_alloc();
  uint64_t v7 = sub_1C151E24C();
  v4[34] = v7;
  v4[35] = *(void *)(v7 - 8);
  v4[36] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C01427A0, 0, 0);
}

uint64_t sub_1C01427A0()
{
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v1 = *(uint64_t **)(v0 + 288);
  uint64_t v3 = *(void *)(v0 + 272);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *uint64_t v1 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCBD8], v3);
  char v4 = sub_1C151E26C();
  uint64_t v5 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 256);
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v9 = *(void *)(v0 + 216);
  uint64_t v10 = *(void *)(v0 + 224);
  uint64_t v11 = *(void *)(v0 + 208);
  id v12 = objc_msgSend(*(id *)(v0 + 184), sel_remoteURL);
  sub_1C1515F1C();

  sub_1C1518DCC();
  v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(void *)(v0 + 296) = v13;
  *(void *)(v0 + 304) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v8, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6) == 1)
  {
    uint64_t v14 = sub_1C01530F8(*(void *)(v0 + 208), (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
LABEL_8:
    if (sub_1C01065B8(v14, v15)) {
      objc_msgSend(*(id *)(*(void *)(v0 + 200) + 136), sel_d_resetAssetHandle_, *(void *)(v0 + 184));
    }
    id v31 = *(void **)(v0 + 184);
    uint64_t v30 = *(void *)(v0 + 192);
    uint64_t v32 = *(void *)(v30 + 40);
    char v33 = *(unsigned char *)(v30 + 48);
    uint64_t v34 = swift_task_alloc();
    *(void *)(v34 + 16) = v31;
    *(void *)(v34 + 24) = v32;
    *(unsigned char *)(v34 + 32) = v33;
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901F8);
    sub_1C151932C();
    swift_task_dealloc();
    *(void *)(swift_allocObject() + 16) = v31;
    id v35 = v31;
    v36 = (void *)sub_1C1518E7C();
    *(void *)(v0 + 312) = sub_1C1518FFC();

    swift_release();
    swift_release();
    v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 320) = v37;
    void *v37 = v0;
    v37[1] = sub_1C0142BE4;
    uint64_t v5 = v0 + 160;
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v16 = *(void *)(v0 + 264);
  sub_1C01054A0(*(void *)(v0 + 208), v16, type metadata accessor for FormatService.CacheFormatFile);
  sub_1C0EB8150((_OWORD *)(v0 + 128));
  sub_1BFDDF774(v16, type metadata accessor for FormatService.CacheFormatFile);
  uint64_t v14 = swift_dynamicCast();
  if ((v14 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v17 = *(void *)(v0 + 176);
  uint64_t v18 = *(void *)(v0 + 24);
  long long v20 = *(_OWORD *)(v0 + 48);
  long long v19 = *(_OWORD *)(v0 + 64);
  uint64_t v21 = *(void *)(v0 + 80);
  int v22 = *(_DWORD *)(v0 + 88);
  uint64_t v23 = *(void *)(v0 + 112);
  char v24 = *(unsigned char *)(v0 + 122);
  __int16 v25 = *(_WORD *)(v0 + 120);
  long long v26 = *(_OWORD *)(v0 + 32);
  long long v27 = *(_OWORD *)(v0 + 96);
  *(void *)uint64_t v17 = *(void *)(v0 + 16);
  *(void *)(v17 + 8) = v18;
  *(_OWORD *)(v17 + 16) = v26;
  *(_OWORD *)(v17 + 32) = v20;
  *(_OWORD *)(v17 + 48) = v19;
  *(void *)(v17 + 64) = v21;
  *(unsigned char *)(v17 + 72) = v22 & 1;
  *(_OWORD *)(v17 + 80) = v27;
  *(void *)(v17 + 96) = v23;
  *(_WORD *)(v17 + 104) = v25;
  *(unsigned char *)(v17 + 106) = v24;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

uint64_t sub_1C0142BE4()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0142E30;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C0142D00;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0142D00()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v4 = *(void **)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 160);
  unint64_t v6 = *(void *)(v0 + 168);
  id v7 = objc_msgSend(v3, sel_remoteURL);
  sub_1C1515F1C();

  sub_1C01474CC(v5, v6, v1, v3, v2, v4);
  (*(void (**)(void, void))(v0 + 296))(*(void *)(v0 + 232), *(void *)(v0 + 216));
  sub_1BFE95664(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1C0142E30()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0142ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[17] = a3;
  v4[18] = v3;
  v4[15] = a1;
  v4[16] = a2;
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  v4[19] = swift_task_alloc();
  uint64_t v5 = sub_1C1515FDC();
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for FormatService.CacheFormatFile(0);
  v4[24] = v6;
  v4[25] = *(void *)(v6 - 8);
  v4[26] = swift_task_alloc();
  uint64_t v7 = sub_1C151E24C();
  v4[27] = v7;
  v4[28] = *(void *)(v7 - 8);
  v4[29] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C01430C0, 0, 0);
}

uint64_t sub_1C01430C0()
{
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v1 = *(uint64_t **)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 216);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *uint64_t v1 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCBD8], v3);
  char v4 = sub_1C151E26C();
  uint64_t v5 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v6 = *(void *)(v0 + 192);
  uint64_t v7 = *(void *)(v0 + 200);
  uint64_t v8 = *(void *)(v0 + 184);
  uint64_t v9 = *(void *)(v0 + 160);
  uint64_t v10 = *(void *)(v0 + 168);
  uint64_t v11 = *(void *)(v0 + 152);
  id v12 = objc_msgSend(*(id *)(v0 + 128), sel_remoteURL);
  sub_1C1515F1C();

  sub_1C1518DCC();
  v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  *(void *)(v0 + 240) = v13;
  *(void *)(v0 + 248) = (v10 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v8, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6) == 1)
  {
    uint64_t v14 = sub_1C01530F8(*(void *)(v0 + 152), (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
LABEL_8:
    if (sub_1C01065B8(v14, v15)) {
      objc_msgSend(*(id *)(*(void *)(v0 + 144) + 136), sel_d_resetAssetHandle_, *(void *)(v0 + 128));
    }
    __int16 v25 = *(void **)(v0 + 128);
    uint64_t v24 = *(void *)(v0 + 136);
    uint64_t v26 = *(void *)(v24 + 40);
    char v27 = *(unsigned char *)(v24 + 48);
    uint64_t v28 = swift_task_alloc();
    *(void *)(v28 + 16) = v25;
    *(void *)(v28 + 24) = v26;
    *(unsigned char *)(v28 + 32) = v27;
    sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB8901F8);
    sub_1C151932C();
    swift_task_dealloc();
    *(void *)(swift_allocObject() + 16) = v25;
    id v29 = v25;
    uint64_t v30 = (void *)sub_1C1518E7C();
    *(void *)(v0 + 256) = sub_1C1518FFC();

    swift_release();
    swift_release();
    id v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v31;
    *id v31 = v0;
    v31[1] = sub_1C01434D0;
    uint64_t v5 = v0 + 104;
    return MEMORY[0x1F415EBC8](v5);
  }
  uint64_t v16 = *(void *)(v0 + 208);
  sub_1C01054A0(*(void *)(v0 + 152), v16, type metadata accessor for FormatService.CacheFormatFile);
  sub_1C0EB8150((_OWORD *)(v0 + 72));
  sub_1BFDDF774(v16, type metadata accessor for FormatService.CacheFormatFile);
  uint64_t v14 = swift_dynamicCast();
  if ((v14 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v17 = *(void *)(v0 + 120);
  uint64_t v18 = *(void *)(v0 + 24);
  uint64_t v19 = *(void *)(v0 + 64);
  long long v20 = *(_OWORD *)(v0 + 32);
  long long v21 = *(_OWORD *)(v0 + 48);
  *(void *)uint64_t v17 = *(void *)(v0 + 16);
  *(void *)(v17 + 8) = v18;
  *(_OWORD *)(v17 + 16) = v20;
  *(_OWORD *)(v17 + 32) = v21;
  *(void *)(v17 + 48) = v19;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_1C01434D0()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C014371C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C01435EC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C01435EC()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v4 = *(void **)(v0 + 120);
  uint64_t v3 = *(void **)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 104);
  unint64_t v6 = *(void *)(v0 + 112);
  id v7 = objc_msgSend(v3, sel_remoteURL);
  sub_1C1515F1C();

  sub_1C0147CA4(v5, v6, v1, v3, v2, v4);
  (*(void (**)(void, void))(v0 + 240))(*(void *)(v0 + 176), *(void *)(v0 + 160));
  sub_1BFE95664(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1C014371C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C01437C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C005E7F4;
  return sub_1C0133E64(a1, a2, a4, a5);
}

uint64_t sub_1C014388C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C005E7F4;
  return sub_1C01347E0(a1, a2, a4, a5);
}

uint64_t sub_1C0143954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C005E7F4;
  return sub_1C0135308(a1, a2, a4, a5);
}

uint64_t sub_1C0143A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C005E7F4;
  return sub_1C0135E30(a1, a2, a4, a5);
}

uint64_t sub_1C0143AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C005E7F4;
  return sub_1C0136828(a1, a2, a4, a5);
}

uint64_t sub_1C0143BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C005E7F4;
  return sub_1C013732C(a1, a2, a4, a5);
}

uint64_t sub_1C0143C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C005E7F4;
  return sub_1C0137E84(a1, a2, a4, a5);
}

uint64_t sub_1C0143D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C005E7F4;
  return sub_1C0138998(a1, a2, a4, a5);
}

uint64_t sub_1C0143E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1C005E7F4;
  return sub_1C01393DC(a1, a2, a4, a5);
}

uint64_t sub_1C0143ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v56 = a5;
  v49[0] = a4;
  uint64_t v54 = a1;
  uint64_t v52 = a6;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  MEMORY[0x1F4188790](v7);
  v53 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0158D58(0, &qword_1EB8745F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  v57 = (char *)v49 - v11;
  uint64_t v12 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, v9);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v51 = (uint64_t)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v49 - v18;
  uint64_t v20 = type metadata accessor for FormatService.CacheFormatFile(0);
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  uint64_t v24 = sub_1C06599C4(MEMORY[0x1E4FBC860]);
  uint64_t v25 = *(void *)(v60 + 480);
  uint64_t v60 = a3;
  v49[1] = v25;
  sub_1C1518DCC();
  uint64_t v50 = v21;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1C014FD48(&qword_1EB873A60, 255, (void (*)(uint64_t))type metadata accessor for FormatFile);
    uint64_t v26 = v61;
    sub_1C1517D9C();
    if (v26)
    {
      swift_release();
      sub_1C01530F8((uint64_t)v19, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
      uint64_t v27 = v26;
      goto LABEL_9;
    }
    uint64_t v55 = v24;
    sub_1C01054A0((uint64_t)v14, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v28 = (void *)v49[0];
    *(void *)&v23[*(int *)(v20 + 20)] = v49[0];
    id v29 = v28;
    sub_1C01530F8((uint64_t)v19, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
  }
  else
  {
    uint64_t v55 = v24;
    sub_1C01054A0((uint64_t)v19, (uint64_t)v23, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1C0EB8150(&v62);
  uint64_t v30 = type metadata accessor for FormatPackage();
  uint64_t v31 = (uint64_t)v57;
  char v32 = swift_dynamicCast();
  char v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  if (v32)
  {
    v33(v31, 0, 1, v30);
    sub_1C01054A0(v31, v52, (uint64_t (*)(void))type metadata accessor for FormatPackage);
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v53, v60, v59);
    uint64_t v34 = v51;
    sub_1BFE338B4((uint64_t)v23, v51, type metadata accessor for FormatService.CacheFormatFile);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v34, 0, 1, v20);
    sub_1C1518DDC();
    swift_release();
    return sub_1BFDDF774((uint64_t)v23, type metadata accessor for FormatService.CacheFormatFile);
  }
  v33(v31, 1, 1, v30);
  sub_1C01530F8(v31, (uint64_t)&qword_1EB8745F0, (uint64_t)type metadata accessor for FormatPackage, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  uint64_t v27 = swift_allocError();
  strcpy(v36, "FormatPackage");
  *((_WORD *)v36 + 7) = -4864;
  *((void *)v36 + 2) = 1635017028;
  *((void *)v36 + 3) = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BFDDF774((uint64_t)v23, type metadata accessor for FormatService.CacheFormatFile);
LABEL_9:
  type metadata accessor for FormatServiceOptions();
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1C1527210;
  uint64_t v38 = v60;
  uint64_t v39 = sub_1C1515E2C();
  uint64_t v41 = v40;
  uint64_t v42 = MEMORY[0x1E4FBB1A0];
  *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v43 = sub_1BFE9C558();
  *(void *)(v37 + 64) = v43;
  *(void *)(v37 + 32) = v39;
  *(void *)(v37 + 40) = v41;
  *(void *)&long long v62 = 0;
  *((void *)&v62 + 1) = 0xE000000000000000;
  uint64_t v63 = v27;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  long long v44 = v62;
  *(void *)(v37 + 96) = v42;
  *(void *)(v37 + 104) = v43;
  *(_OWORD *)(v37 + 72) = v44;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  swift_allocError();
  uint64_t v46 = v45;
  sub_1C0157218();
  uint64_t v48 = *(int *)(v47 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v46, v38, v59);
  *(void *)(v46 + v48) = v27;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C014473C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v59 = a5;
  v51[0] = a4;
  uint64_t v57 = a1;
  uint64_t v54 = a6;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v60 = *(void *)(v7 - 8);
  uint64_t v61 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v55 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v9);
  uint64_t v56 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v53 = (uint64_t)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v51 - v14;
  uint64_t v16 = type metadata accessor for FormatService.CacheFormatFile(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1C06599C4(MEMORY[0x1E4FBC860]);
  uint64_t v20 = *(void *)(v62 + 480);
  uint64_t v62 = a3;
  v51[1] = v20;
  sub_1C1518DCC();
  uint64_t v52 = v17;
  uint64_t v21 = v17;
  uint64_t v22 = v16;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v16) == 1)
  {
    sub_1C014FD48(&qword_1EB873A60, 255, (void (*)(uint64_t))type metadata accessor for FormatFile);
    uint64_t v23 = (uint64_t)v56;
    uint64_t v24 = v68;
    sub_1C1517D9C();
    if (v24)
    {
      swift_release();
      sub_1C01530F8((uint64_t)v15, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
      uint64_t v25 = v24;
      goto LABEL_9;
    }
    sub_1C01054A0(v23, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v26 = (void *)v51[0];
    *(void *)&v19[*(int *)(v22 + 20)] = v51[0];
    id v27 = v26;
    sub_1C01530F8((uint64_t)v15, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
  }
  else
  {
    sub_1C01054A0((uint64_t)v15, (uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1C0EB8150(&v67);
  if (swift_dynamicCast())
  {
    nullsub_1(&v65);
    sub_1C0153CA0((uint64_t)&v65, (uint64_t)v63, &qword_1EA1971B0, (uint64_t)&type metadata for FormatGroup);
    sub_1C0153CA0((uint64_t)v63, (uint64_t)v64, &qword_1EA1971B0, (uint64_t)&type metadata for FormatGroup);
    long long v28 = v64[7];
    id v29 = v54;
    v54[6] = v64[6];
    v29[7] = v28;
    v29[8] = v64[8];
    long long v30 = v64[3];
    v29[2] = v64[2];
    v29[3] = v30;
    long long v31 = v64[5];
    v29[4] = v64[4];
    v29[5] = v31;
    long long v32 = v64[1];
    *id v29 = v64[0];
    v29[1] = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v55, v62, v61);
    uint64_t v33 = v53;
    sub_1BFE338B4((uint64_t)v19, v53, type metadata accessor for FormatService.CacheFormatFile);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v33, 0, 1, v22);
    sub_1C1518DDC();
    swift_release();
    return sub_1BFDDF774((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
  }
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  uint64_t v35 = swift_allocError();
  void *v36 = 0x724774616D726F46;
  v36[1] = 0xEB0000000070756FLL;
  v36[2] = 1635017028;
  v36[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v35;
  swift_willThrow();
  swift_release();
  sub_1BFDDF774((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
LABEL_9:
  uint64_t v68 = *(void *)(v59 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1C1527210;
  uint64_t v38 = v62;
  uint64_t v39 = sub_1C1515E2C();
  uint64_t v41 = v40;
  uint64_t v42 = MEMORY[0x1E4FBB1A0];
  *(void *)(v37 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v43 = sub_1BFE9C558();
  *(void *)(v37 + 64) = v43;
  *(void *)(v37 + 32) = v39;
  *(void *)(v37 + 40) = v41;
  uint64_t v65 = 0;
  unint64_t v66 = 0xE000000000000000;
  uint64_t v44 = v25;
  *(void *)&v64[0] = v25;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v45 = v65;
  unint64_t v46 = v66;
  *(void *)(v37 + 96) = v42;
  *(void *)(v37 + 104) = v43;
  *(void *)(v37 + 72) = v45;
  *(void *)(v37 + 80) = v46;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  swift_allocError();
  uint64_t v48 = v47;
  sub_1C0157218();
  uint64_t v50 = *(int *)(v49 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(v48, v38, v61);
  *(void *)(v48 + v50) = v44;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C0144F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v52 = a5;
  uint64_t v45 = a4;
  uint64_t v63 = a3;
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v48 = a6;
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v49 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v47 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = type metadata accessor for FormatService.CacheFormatFile(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1C06599C4(MEMORY[0x1E4FBC860]);
  uint64_t v46 = *(void *)(v55 + 480);
  sub_1C1518DCC();
  uint64_t v55 = v17;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1C014FD48(&qword_1EB873A60, 255, (void (*)(uint64_t))type metadata accessor for FormatFile);
    uint64_t v20 = v56;
    sub_1C1517D9C();
    uint64_t v21 = v20;
    if (v20)
    {
      swift_release();
      sub_1C01530F8((uint64_t)v15, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
      goto LABEL_9;
    }
    sub_1C01054A0((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v22 = v45;
    *(void *)&v19[*(int *)(v16 + 20)] = v45;
    id v23 = v22;
    sub_1C01530F8((uint64_t)v15, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
  }
  else
  {
    sub_1C01054A0((uint64_t)v15, (uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1C0EB8150(&v62);
  if (swift_dynamicCast())
  {
    nullsub_1(&v60);
    sub_1C0153CA0((uint64_t)&v60, (uint64_t)v57, &qword_1EA197170, (uint64_t)&type metadata for FormatItem);
    sub_1C0153CA0((uint64_t)v57, (uint64_t)v58, &qword_1EA197170, (uint64_t)&type metadata for FormatItem);
    long long v24 = v58[5];
    uint64_t v25 = v48;
    v48[4] = v58[4];
    v25[5] = v24;
    v25[6] = v59[0];
    *(_OWORD *)((char *)v25 + 105) = *(_OWORD *)((char *)v59 + 9);
    long long v26 = v58[1];
    *uint64_t v25 = v58[0];
    v25[1] = v26;
    long long v27 = v58[3];
    v25[2] = v58[2];
    v25[3] = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v49, v63, v54);
    uint64_t v28 = v47;
    sub_1BFE338B4((uint64_t)v19, v47, type metadata accessor for FormatService.CacheFormatFile);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v28, 0, 1, v16);
    sub_1C1518DDC();
    swift_release();
    return sub_1BFDDF774((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
  }
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  uint64_t v30 = swift_allocError();
  *long long v31 = 0x744974616D726F46;
  v31[1] = 0xEA00000000006D65;
  v31[2] = 1635017028;
  v31[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = v30;
  swift_willThrow();
  swift_release();
  sub_1BFDDF774((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
LABEL_9:
  uint64_t v56 = *(void *)(v52 + *(int *)(type metadata accessor for FormatServiceOptions() + 52));
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1C1527210;
  uint64_t v33 = sub_1C1515E2C();
  uint64_t v35 = v34;
  uint64_t v36 = MEMORY[0x1E4FBB1A0];
  *(void *)(v32 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v37 = sub_1BFE9C558();
  *(void *)(v32 + 64) = v37;
  *(void *)(v32 + 32) = v33;
  *(void *)(v32 + 40) = v35;
  uint64_t v60 = 0;
  unint64_t v61 = 0xE000000000000000;
  *(void *)&v58[0] = v21;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v38 = v60;
  unint64_t v39 = v61;
  *(void *)(v32 + 96) = v36;
  *(void *)(v32 + 104) = v37;
  *(void *)(v32 + 72) = v38;
  *(void *)(v32 + 80) = v39;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  swift_allocError();
  uint64_t v41 = v40;
  sub_1C0157218();
  uint64_t v43 = *(int *)(v42 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 16))(v41, v63, v54);
  *(void *)(v41 + v43) = v21;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C01456F0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v47 = a2;
  uint64_t v48 = a5;
  uint64_t v42 = a4;
  uint64_t v46 = a1;
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v45 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v44 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v16 = type metadata accessor for FormatService.CacheFormatFile(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1C06599C4(MEMORY[0x1E4FBC860]);
  uint64_t v20 = *(void *)(v51 + 480);
  uint64_t v51 = a3;
  uint64_t v43 = v20;
  sub_1C1518DCC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1C014FD48(&qword_1EB873A60, 255, (void (*)(uint64_t))type metadata accessor for FormatFile);
    uint64_t v21 = v52;
    sub_1C1517D9C();
    if (v21)
    {
      swift_release();
      sub_1C01530F8((uint64_t)v15, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
      uint64_t v22 = v21;
LABEL_9:
      type metadata accessor for FormatServiceOptions();
      sub_1C151F36C();
      sub_1BFFDEB20();
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1C1527210;
      uint64_t v29 = v51;
      uint64_t v30 = sub_1C1515E2C();
      uint64_t v32 = v31;
      uint64_t v33 = MEMORY[0x1E4FBB1A0];
      *(void *)(v28 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v34 = sub_1BFE9C558();
      *(void *)(v28 + 64) = v34;
      *(void *)(v28 + 32) = v30;
      *(void *)(v28 + 40) = v32;
      *(void *)&long long v53 = 0;
      *((void *)&v53 + 1) = 0xE000000000000000;
      uint64_t v54 = v22;
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
      sub_1C152036C();
      long long v35 = v53;
      *(void *)(v28 + 96) = v33;
      *(void *)(v28 + 104) = v34;
      *(_OWORD *)(v28 + 72) = v35;
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      uint64_t v25 = type metadata accessor for FormatServiceError();
      sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
      swift_allocError();
      uint64_t v37 = v36;
      sub_1C0157218();
      uint64_t v39 = *(int *)(v38 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v37, v29, v50);
      *(void *)(v37 + v39) = v22;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return v25;
    }
    sub_1C01054A0((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatFile);
    id v23 = v42;
    *(void *)&v19[*(int *)(v16 + 20)] = v42;
    id v24 = v23;
    sub_1C01530F8((uint64_t)v15, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
  }
  else
  {
    sub_1C01054A0((uint64_t)v15, (uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1C0EB8150(&v53);
  type metadata accessor for FormatSnippet();
  if ((swift_dynamicCast() & 1) == 0)
  {
    type metadata accessor for FormatServiceError();
    sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
    uint64_t v22 = swift_allocError();
    strcpy(v27, "FormatSnippet");
    *((_WORD *)v27 + 7) = -4864;
    *((void *)v27 + 2) = 1635017028;
    *((void *)v27 + 3) = 0xE400000000000000;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    sub_1BFDDF774((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
    goto LABEL_9;
  }
  uint64_t v25 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v45, v51, v50);
  uint64_t v26 = v44;
  sub_1BFE338B4((uint64_t)v19, v44, type metadata accessor for FormatService.CacheFormatFile);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
  sub_1C1518DDC();
  swift_release();
  sub_1BFDDF774((uint64_t)v19, type metadata accessor for FormatService.CacheFormatFile);
  return v25;
}

uint64_t sub_1C0145E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v55 = a5;
  uint64_t v48 = a4;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v51 = a6;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v50 = (uint64_t)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = type metadata accessor for FormatService.CacheFormatFile(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1C06599C4(MEMORY[0x1E4FBC860]);
  uint64_t v21 = *(void *)(v58 + 480);
  uint64_t v58 = a3;
  uint64_t v49 = v21;
  sub_1C1518DCC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1C014FD48(&qword_1EB873A60, 255, (void (*)(uint64_t))type metadata accessor for FormatFile);
    uint64_t v22 = v66;
    sub_1C1517D9C();
    if (v22)
    {
      swift_release();
      sub_1C01530F8((uint64_t)v16, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
      uint64_t v23 = v22;
      goto LABEL_9;
    }
    sub_1C01054A0((uint64_t)v11, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatFile);
    id v24 = v48;
    *(void *)&v20[*(int *)(v17 + 20)] = v48;
    id v25 = v24;
    sub_1C01530F8((uint64_t)v16, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
  }
  else
  {
    sub_1C01054A0((uint64_t)v16, (uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1C0EB8150(&v65);
  if (swift_dynamicCast())
  {
    unint64_t v26 = v60;
    uint64_t v27 = v64;
    uint64_t v28 = v51;
    uint64_t v29 = v52;
    *uint64_t v51 = v59;
    v28[1] = v26;
    long long v30 = v62;
    *((_OWORD *)v28 + 1) = v61;
    *((_OWORD *)v28 + 2) = v30;
    *((_OWORD *)v28 + 3) = v63;
    v28[8] = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v29, v58, v57);
    uint64_t v31 = v50;
    sub_1BFE338B4((uint64_t)v20, v50, type metadata accessor for FormatService.CacheFormatFile);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v31, 0, 1, v17);
    sub_1C1518DDC();
    swift_release();
    return sub_1BFDDF774((uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
  }
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  uint64_t v23 = swift_allocError();
  void *v33 = 0x745374616D726F46;
  v33[1] = 0xEB00000000656C79;
  v33[2] = 1635017028;
  v33[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BFDDF774((uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
LABEL_9:
  type metadata accessor for FormatServiceOptions();
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1C1527210;
  uint64_t v35 = v58;
  uint64_t v36 = sub_1C1515E2C();
  uint64_t v38 = v37;
  uint64_t v39 = MEMORY[0x1E4FBB1A0];
  *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v40 = sub_1BFE9C558();
  *(void *)(v34 + 64) = v40;
  *(void *)(v34 + 32) = v36;
  *(void *)(v34 + 40) = v38;
  uint64_t v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  *(void *)&long long v65 = v23;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v41 = v59;
  unint64_t v42 = v60;
  *(void *)(v34 + 96) = v39;
  *(void *)(v34 + 104) = v40;
  *(void *)(v34 + 72) = v41;
  *(void *)(v34 + 80) = v42;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  swift_allocError();
  uint64_t v44 = v43;
  sub_1C0157218();
  uint64_t v46 = *(int *)(v45 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v44, v35, v57);
  *(void *)(v44 + v46) = v23;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C0146590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v58 = a5;
  uint64_t v50 = a4;
  uint64_t v57 = a2;
  uint64_t v56 = a1;
  uint64_t v52 = a6;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v55 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v54 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v49 - v15;
  uint64_t v17 = type metadata accessor for FormatService.CacheFormatFile(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1C06599C4(MEMORY[0x1E4FBC860]);
  uint64_t v21 = *(void *)(v61 + 480);
  uint64_t v61 = a3;
  uint64_t v51 = v21;
  sub_1C1518DCC();
  uint64_t v53 = v18;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1C014FD48(&qword_1EB873A60, 255, (void (*)(uint64_t))type metadata accessor for FormatFile);
    uint64_t v22 = v73;
    sub_1C1517D9C();
    if (v22)
    {
      swift_release();
      sub_1C01530F8((uint64_t)v16, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
      uint64_t v23 = v22;
      goto LABEL_9;
    }
    sub_1C01054A0((uint64_t)v11, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatFile);
    id v24 = v50;
    *(void *)&v20[*(int *)(v17 + 20)] = v50;
    id v25 = v24;
    sub_1C01530F8((uint64_t)v16, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
  }
  else
  {
    sub_1C01054A0((uint64_t)v16, (uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1C0EB8150(&v72);
  if (swift_dynamicCast())
  {
    unint64_t v26 = v63;
    uint64_t v27 = v66;
    uint64_t v28 = v67;
    char v29 = v69;
    char v30 = v71;
    uint64_t v31 = v52;
    *uint64_t v52 = v62;
    v31[1] = v26;
    long long v32 = v65;
    *((_OWORD *)v31 + 1) = v64;
    *((_OWORD *)v31 + 2) = v32;
    v31[6] = v27;
    v31[7] = v28;
    *((_OWORD *)v31 + 4) = v68;
    *((unsigned char *)v31 + 80) = v29 & 1;
    *(_OWORD *)(v31 + 11) = v70;
    *((unsigned char *)v31 + 104) = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v55, v61, v60);
    uint64_t v33 = v54;
    sub_1BFE338B4((uint64_t)v20, v54, type metadata accessor for FormatService.CacheFormatFile);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v33, 0, 1, v17);
    sub_1C1518DDC();
    swift_release();
    return sub_1BFDDF774((uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
  }
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  uint64_t v23 = swift_allocError();
  *uint64_t v35 = 0xD000000000000013;
  v35[1] = 0x80000001C16046C0;
  v35[2] = 1635017028;
  v35[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BFDDF774((uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
LABEL_9:
  type metadata accessor for FormatServiceOptions();
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1C1527210;
  uint64_t v37 = v61;
  uint64_t v38 = sub_1C1515E2C();
  uint64_t v40 = v39;
  uint64_t v41 = MEMORY[0x1E4FBB1A0];
  *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v42 = sub_1BFE9C558();
  *(void *)(v36 + 64) = v42;
  *(void *)(v36 + 32) = v38;
  *(void *)(v36 + 40) = v40;
  uint64_t v62 = 0;
  unint64_t v63 = 0xE000000000000000;
  *(void *)&long long v72 = v23;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v43 = v62;
  unint64_t v44 = v63;
  *(void *)(v36 + 96) = v41;
  *(void *)(v36 + 104) = v42;
  *(void *)(v36 + 72) = v43;
  *(void *)(v36 + 80) = v44;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  swift_allocError();
  uint64_t v46 = v45;
  sub_1C0157218();
  uint64_t v48 = *(int *)(v47 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16))(v46, v37, v60);
  *(void *)(v46 + v48) = v23;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C0146D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v55 = a5;
  uint64_t v48 = a4;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v51 = a6;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v50 = (uint64_t)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = type metadata accessor for FormatService.CacheFormatFile(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1C06599C4(MEMORY[0x1E4FBC860]);
  uint64_t v21 = *(void *)(v58 + 480);
  uint64_t v58 = a3;
  uint64_t v49 = v21;
  sub_1C1518DCC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1C014FD48(&qword_1EB873A60, 255, (void (*)(uint64_t))type metadata accessor for FormatFile);
    uint64_t v22 = v67;
    sub_1C1517D9C();
    if (v22)
    {
      swift_release();
      sub_1C01530F8((uint64_t)v16, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
      uint64_t v23 = v22;
      goto LABEL_9;
    }
    sub_1C01054A0((uint64_t)v11, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatFile);
    id v24 = v48;
    *(void *)&v20[*(int *)(v17 + 20)] = v48;
    id v25 = v24;
    sub_1C01530F8((uint64_t)v16, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
  }
  else
  {
    sub_1C01054A0((uint64_t)v16, (uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1C0EB8150(&v66);
  if (swift_dynamicCast())
  {
    unint64_t v26 = v60;
    char v27 = v65;
    uint64_t v28 = v51;
    *uint64_t v51 = v59;
    v28[1] = v26;
    long long v29 = v62;
    *((_OWORD *)v28 + 1) = v61;
    *((_OWORD *)v28 + 2) = v29;
    long long v30 = v64;
    *((_OWORD *)v28 + 3) = v63;
    *((_OWORD *)v28 + 4) = v30;
    *((unsigned char *)v28 + 80) = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v52, v58, v57);
    uint64_t v31 = v50;
    sub_1BFE338B4((uint64_t)v20, v50, type metadata accessor for FormatService.CacheFormatFile);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v31, 0, 1, v17);
    sub_1C1518DDC();
    swift_release();
    return sub_1BFDDF774((uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
  }
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  uint64_t v23 = swift_allocError();
  void *v33 = 0x795474616D726F46;
  v33[1] = 0xEA00000000006570;
  v33[2] = 1635017028;
  v33[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BFDDF774((uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
LABEL_9:
  type metadata accessor for FormatServiceOptions();
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1C1527210;
  uint64_t v35 = v58;
  uint64_t v36 = sub_1C1515E2C();
  uint64_t v38 = v37;
  uint64_t v39 = MEMORY[0x1E4FBB1A0];
  *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v40 = sub_1BFE9C558();
  *(void *)(v34 + 64) = v40;
  *(void *)(v34 + 32) = v36;
  *(void *)(v34 + 40) = v38;
  uint64_t v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  *(void *)&long long v66 = v23;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v41 = v59;
  unint64_t v42 = v60;
  *(void *)(v34 + 96) = v39;
  *(void *)(v34 + 104) = v40;
  *(void *)(v34 + 72) = v41;
  *(void *)(v34 + 80) = v42;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  swift_allocError();
  uint64_t v44 = v43;
  sub_1C0157218();
  uint64_t v46 = *(int *)(v45 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v44, v35, v57);
  *(void *)(v44 + v46) = v23;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C01474CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v60 = a5;
  uint64_t v52 = a4;
  uint64_t v59 = a2;
  uint64_t v58 = a1;
  uint64_t v54 = a6;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v57 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v56 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v17 = type metadata accessor for FormatService.CacheFormatFile(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1C06599C4(MEMORY[0x1E4FBC860]);
  uint64_t v21 = *(void *)(v63 + 480);
  uint64_t v63 = a3;
  uint64_t v53 = v21;
  sub_1C1518DCC();
  uint64_t v55 = v18;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1C014FD48(&qword_1EB873A60, 255, (void (*)(uint64_t))type metadata accessor for FormatFile);
    uint64_t v22 = v76;
    sub_1C1517D9C();
    if (v22)
    {
      swift_release();
      sub_1C01530F8((uint64_t)v16, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
      uint64_t v23 = v22;
      goto LABEL_9;
    }
    sub_1C01054A0((uint64_t)v11, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatFile);
    id v24 = v52;
    *(void *)&v20[*(int *)(v17 + 20)] = v52;
    id v25 = v24;
    sub_1C01530F8((uint64_t)v16, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
  }
  else
  {
    sub_1C01054A0((uint64_t)v16, (uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1C0EB8150(&v75);
  if (swift_dynamicCast())
  {
    unint64_t v26 = v65;
    long long v27 = v68;
    uint64_t v28 = v69;
    char v29 = v70;
    uint64_t v30 = v72;
    __int16 v31 = v73;
    char v32 = v74;
    uint64_t v33 = v54;
    *uint64_t v54 = v64;
    v33[1] = v26;
    long long v34 = v67;
    *((_OWORD *)v33 + 1) = v66;
    *((_OWORD *)v33 + 2) = v34;
    *((_OWORD *)v33 + 3) = v27;
    v33[8] = v28;
    *((unsigned char *)v33 + 72) = v29 & 1;
    *((_OWORD *)v33 + 5) = v71;
    v33[12] = v30;
    *((unsigned char *)v33 + 106) = v32;
    *((_WORD *)v33 + 52) = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v57, v63, v62);
    uint64_t v35 = v56;
    sub_1BFE338B4((uint64_t)v20, v56, type metadata accessor for FormatService.CacheFormatFile);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 56))(v35, 0, 1, v17);
    sub_1C1518DDC();
    swift_release();
    return sub_1BFDDF774((uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
  }
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  uint64_t v23 = swift_allocError();
  void *v37 = 0xD000000000000010;
  v37[1] = 0x80000001C16046A0;
  v37[2] = 1635017028;
  v37[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BFDDF774((uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
LABEL_9:
  type metadata accessor for FormatServiceOptions();
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1C1527210;
  uint64_t v39 = v63;
  uint64_t v40 = sub_1C1515E2C();
  uint64_t v42 = v41;
  uint64_t v43 = MEMORY[0x1E4FBB1A0];
  *(void *)(v38 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v44 = sub_1BFE9C558();
  *(void *)(v38 + 64) = v44;
  *(void *)(v38 + 32) = v40;
  *(void *)(v38 + 40) = v42;
  uint64_t v64 = 0;
  unint64_t v65 = 0xE000000000000000;
  *(void *)&long long v75 = v23;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v45 = v64;
  unint64_t v46 = v65;
  *(void *)(v38 + 96) = v43;
  *(void *)(v38 + 104) = v44;
  *(void *)(v38 + 72) = v45;
  *(void *)(v38 + 80) = v46;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  swift_allocError();
  uint64_t v48 = v47;
  sub_1C0157218();
  uint64_t v50 = *(int *)(v49 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16))(v48, v39, v62);
  *(void *)(v48 + v50) = v23;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C0147CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v55 = a5;
  uint64_t v48 = a4;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v51 = a6;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FormatFile();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0158D58(0, qword_1EB87D640, type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v50 = (uint64_t)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v47 - v15;
  uint64_t v17 = type metadata accessor for FormatService.CacheFormatFile(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  sub_1C06599C4(MEMORY[0x1E4FBC860]);
  uint64_t v21 = *(void *)(v58 + 480);
  uint64_t v58 = a3;
  uint64_t v49 = v21;
  sub_1C1518DCC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1C014FD48(&qword_1EB873A60, 255, (void (*)(uint64_t))type metadata accessor for FormatFile);
    uint64_t v22 = v65;
    sub_1C1517D9C();
    if (v22)
    {
      swift_release();
      sub_1C01530F8((uint64_t)v16, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
      uint64_t v23 = v22;
      goto LABEL_9;
    }
    sub_1C01054A0((uint64_t)v11, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatFile);
    id v24 = v48;
    *(void *)&v20[*(int *)(v17 + 20)] = v48;
    id v25 = v24;
    sub_1C01530F8((uint64_t)v16, (uint64_t)qword_1EB87D640, (uint64_t)type metadata accessor for FormatService.CacheFormatFile, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C0158D58);
  }
  else
  {
    sub_1C01054A0((uint64_t)v16, (uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
  }
  sub_1C0EB8150(&v64);
  if (swift_dynamicCast())
  {
    unint64_t v26 = v60;
    uint64_t v27 = v63;
    uint64_t v28 = v51;
    char v29 = v52;
    *uint64_t v51 = v59;
    v28[1] = v26;
    long long v30 = v62;
    *((_OWORD *)v28 + 1) = v61;
    *((_OWORD *)v28 + 2) = v30;
    v28[6] = v27;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v29, v58, v57);
    uint64_t v31 = v50;
    sub_1BFE338B4((uint64_t)v20, v50, type metadata accessor for FormatService.CacheFormatFile);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v31, 0, 1, v17);
    sub_1C1518DDC();
    swift_release();
    return sub_1BFDDF774((uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
  }
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  uint64_t v23 = swift_allocError();
  void *v33 = 0xD000000000000012;
  v33[1] = 0x80000001C1604680;
  v33[2] = 1635017028;
  v33[3] = 0xE400000000000000;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  sub_1BFDDF774((uint64_t)v20, type metadata accessor for FormatService.CacheFormatFile);
LABEL_9:
  type metadata accessor for FormatServiceOptions();
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1C1527210;
  uint64_t v35 = v58;
  uint64_t v36 = sub_1C1515E2C();
  uint64_t v38 = v37;
  uint64_t v39 = MEMORY[0x1E4FBB1A0];
  *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v40 = sub_1BFE9C558();
  *(void *)(v34 + 64) = v40;
  *(void *)(v34 + 32) = v36;
  *(void *)(v34 + 40) = v38;
  uint64_t v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  *(void *)&long long v64 = v23;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v41 = v59;
  unint64_t v42 = v60;
  *(void *)(v34 + 96) = v39;
  *(void *)(v34 + 104) = v40;
  *(void *)(v34 + 72) = v41;
  *(void *)(v34 + 80) = v42;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatServiceError();
  sub_1C014FD48(&qword_1EB8601C0, 255, (void (*)(uint64_t))type metadata accessor for FormatServiceError);
  swift_allocError();
  uint64_t v44 = v43;
  sub_1C0157218();
  uint64_t v46 = *(int *)(v45 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v44, v35, v57);
  *(void *)(v44 + v46) = v23;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C01483F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEBC130();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE338B4(v2 + *(int *)(a1 + 20), (uint64_t)v7, (uint64_t (*)(void))sub_1BFEBC130);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    sub_1C01054A0((uint64_t)&v7[*(int *)(v11 + 48)], (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFDDF774((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    sub_1C01054A0((uint64_t)&v7[*(int *)(v12 + 48)], (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v13 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t))(*(void *)(v13 - 8) + 8))(v7, v13);
  }
  sub_1BFE338B4((uint64_t)&v10[*(int *)(v8 + 28)], a2, (uint64_t (*)(void))sub_1BFEC0CE8);
  return sub_1BFDDF774((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
}

void sub_1C0148650(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for FormatService.ThemePackage(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1C06363D8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1C01486F8(v5);
  *a1 = v3;
}

void sub_1C01486F8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v130 = type metadata accessor for FormatService.ThemePackage(0);
  uint64_t v4 = *(void *)(v130 - 8);
  MEMORY[0x1F4188790](v130);
  uint64_t v125 = (uint64_t)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v136 = (uint64_t)&v120 - v7;
  MEMORY[0x1F4188790](v8);
  v134 = (uint64_t *)((char *)&v120 - v9);
  MEMORY[0x1F4188790](v10);
  v133 = (uint64_t *)((char *)&v120 - v11);
  uint64_t v12 = a1[1];
  uint64_t v13 = sub_1C152086C();
  if (v13 >= v12)
  {
    if (v12 < 0) {
      goto LABEL_139;
    }
    if (v12) {
      sub_1C01491A4(0, v12, 1, a1);
    }
    return;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_147;
  }
  uint64_t v122 = v13;
  if (v12 < 2)
  {
    uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v127 = MEMORY[0x1E4FBC860]
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v121 = MEMORY[0x1E4FBC860];
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_105:
      if (v20 >= 2)
      {
        uint64_t v113 = v4;
        uint64_t v114 = *a1;
        do
        {
          unint64_t v115 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_134;
          }
          if (!v114) {
            goto LABEL_146;
          }
          uint64_t v116 = *(void *)&v18[16 * v115 + 32];
          uint64_t v117 = *(void *)&v18[16 * v20 + 24];
          sub_1C0149460(v114 + *(void *)(v113 + 72) * v116, v114 + *(void *)(v113 + 72) * *(void *)&v18[16 * v20 + 16], v114 + *(void *)(v113 + 72) * v117, v127);
          if (v2) {
            break;
          }
          if (v117 < v116) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v18 = sub_1C063604C((uint64_t)v18);
          }
          if (v115 >= *((void *)v18 + 2)) {
            goto LABEL_136;
          }
          v118 = &v18[16 * v115 + 32];
          *(void *)v118 = v116;
          *((void *)v118 + 1) = v117;
          unint64_t v119 = *((void *)v18 + 2);
          if (v20 > v119) {
            goto LABEL_137;
          }
          memmove(&v18[16 * v20 + 16], &v18[16 * v20 + 32], 16 * (v119 - v20));
          *((void *)v18 + 2) = v119 - 1;
          unint64_t v20 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(void *)(v121 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_1C151ECCC();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v121 = v16;
    unint64_t v127 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v18 = (char *)MEMORY[0x1E4FBC860];
  v128 = a1;
  uint64_t v129 = v4;
  while (1)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v19 + 1;
    if (v19 + 1 >= v12)
    {
      uint64_t v28 = v19 + 1;
    }
    else
    {
      uint64_t v23 = *a1;
      uint64_t v138 = *(void *)(v4 + 72);
      id v24 = v133;
      sub_1BFE338B4(v23 + v138 * v22, (uint64_t)v133, type metadata accessor for FormatService.ThemePackage);
      uint64_t v25 = v23 + v138 * v21;
      uint64_t v126 = v21;
      unint64_t v26 = v134;
      sub_1BFE338B4(v25, (uint64_t)v134, type metadata accessor for FormatService.ThemePackage);
      uint64_t v135 = *v24;
      uint64_t v132 = *v26;
      uint64_t v27 = (uint64_t)v26;
      uint64_t v21 = v126;
      sub_1BFDDF774(v27, type metadata accessor for FormatService.ThemePackage);
      sub_1BFDDF774((uint64_t)v24, type metadata accessor for FormatService.ThemePackage);
      uint64_t v28 = v21 + 2;
      uint64_t v137 = v12;
      uint64_t v124 = v23;
      if (v21 + 2 >= v12)
      {
        uint64_t v4 = v129;
      }
      else
      {
        v123 = v18;
        uint64_t v131 = v138 * v22;
        uint64_t v29 = v23;
        uint64_t v30 = v138 * v28;
        while (1)
        {
          uint64_t v31 = v28;
          char v32 = v133;
          int v33 = v135 < v132;
          sub_1BFE338B4(v29 + v30, (uint64_t)v133, type metadata accessor for FormatService.ThemePackage);
          uint64_t v34 = v134;
          sub_1BFE338B4(v29 + v131, (uint64_t)v134, type metadata accessor for FormatService.ThemePackage);
          int v35 = *v32 >= *v34;
          sub_1BFDDF774((uint64_t)v34, type metadata accessor for FormatService.ThemePackage);
          sub_1BFDDF774((uint64_t)v32, type metadata accessor for FormatService.ThemePackage);
          if (v33 == v35) {
            break;
          }
          ++v28;
          v29 += v138;
          uint64_t v12 = v137;
          if (v137 == v31 + 1)
          {
            uint64_t v28 = v137;
            a1 = v128;
            uint64_t v4 = v129;
            uint64_t v18 = v123;
            uint64_t v21 = v126;
            goto LABEL_24;
          }
        }
        a1 = v128;
        uint64_t v4 = v129;
        uint64_t v18 = v123;
        uint64_t v21 = v126;
        uint64_t v12 = v137;
      }
LABEL_24:
      if (v135 < v132)
      {
        if (v28 < v21) {
          goto LABEL_140;
        }
        if (v21 < v28)
        {
          v123 = v18;
          uint64_t v120 = v2;
          uint64_t v36 = v21;
          uint64_t v37 = 0;
          uint64_t v38 = v138;
          uint64_t v39 = v138 * (v28 - 1);
          uint64_t v40 = v28 * v138;
          uint64_t v41 = v36;
          uint64_t v42 = v36 * v138;
          do
          {
            if (v41 != v28 + v37 - 1)
            {
              uint64_t v43 = v124;
              if (!v124) {
                goto LABEL_145;
              }
              unint64_t v44 = v124 + v42;
              sub_1C01054A0(v124 + v42, v125, type metadata accessor for FormatService.ThemePackage);
              if (v42 < v39 || v44 >= v43 + v40)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v42 != v39)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_1C01054A0(v125, v43 + v39, type metadata accessor for FormatService.ThemePackage);
              uint64_t v12 = v137;
              uint64_t v38 = v138;
            }
            ++v41;
            --v37;
            v39 -= v38;
            v40 -= v38;
            v42 += v38;
          }
          while (v41 < v28 + v37);
          uint64_t v2 = v120;
          a1 = v128;
          uint64_t v4 = v129;
          uint64_t v18 = v123;
          uint64_t v21 = v126;
        }
      }
    }
    if (v28 < v12)
    {
      if (__OFSUB__(v28, v21)) {
        goto LABEL_138;
      }
      if (v28 - v21 < v122) {
        break;
      }
    }
LABEL_56:
    if (v28 < v21) {
      goto LABEL_133;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v135 = v28;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v18 = sub_1C0634CC8(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v63 = *((void *)v18 + 2);
    unint64_t v62 = *((void *)v18 + 3);
    unint64_t v20 = v63 + 1;
    if (v63 >= v62 >> 1) {
      uint64_t v18 = sub_1C0634CC8((char *)(v62 > 1), v63 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    long long v64 = v18 + 32;
    uint64_t v65 = &v18[16 * v63 + 32];
    uint64_t v66 = v135;
    *(void *)uint64_t v65 = v21;
    *((void *)v65 + 1) = v66;
    if (v63)
    {
      while (1)
      {
        unint64_t v67 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v72 = &v64[16 * v20];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_122;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_123;
          }
          unint64_t v79 = v20 - 2;
          v80 = &v64[16 * v20 - 32];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_125;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_128;
          }
          if (v84 >= v75)
          {
            v102 = &v64[16 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_132;
            }
            BOOL v95 = v70 < v105;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v96 = *((void *)v18 + 4);
            uint64_t v97 = *((void *)v18 + 5);
            BOOL v78 = __OFSUB__(v97, v96);
            uint64_t v89 = v97 - v96;
            char v90 = v78;
            goto LABEL_87;
          }
          uint64_t v69 = *((void *)v18 + 4);
          uint64_t v68 = *((void *)v18 + 5);
          BOOL v78 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          char v71 = v78;
        }
        if (v71) {
          goto LABEL_124;
        }
        unint64_t v79 = v20 - 2;
        v85 = &v64[16 * v20 - 32];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v88 = __OFSUB__(v86, v87);
        uint64_t v89 = v86 - v87;
        char v90 = v88;
        if (v88) {
          goto LABEL_127;
        }
        v91 = &v64[16 * v67];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v78 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v78) {
          goto LABEL_130;
        }
        if (__OFADD__(v89, v94)) {
          goto LABEL_131;
        }
        if (v89 + v94 >= v70)
        {
          BOOL v95 = v70 < v94;
LABEL_93:
          if (v95) {
            unint64_t v67 = v79;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v90) {
          goto LABEL_126;
        }
        v98 = &v64[16 * v67];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v78 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v78) {
          goto LABEL_129;
        }
        if (v101 < v89) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v20)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v128) {
          goto LABEL_144;
        }
        v107 = v18;
        v108 = &v64[16 * v106];
        uint64_t v109 = *(void *)v108;
        v110 = &v64[16 * v67];
        uint64_t v111 = *((void *)v110 + 1);
        sub_1C0149460(*v128 + *(void *)(v129 + 72) * *(void *)v108, *v128 + *(void *)(v129 + 72) * *(void *)v110, *v128 + *(void *)(v129 + 72) * v111, v127);
        if (v2) {
          goto LABEL_116;
        }
        if (v111 < v109) {
          goto LABEL_119;
        }
        if (v67 > *((void *)v107 + 2)) {
          goto LABEL_120;
        }
        *(void *)v108 = v109;
        *(void *)&v64[16 * v106 + 8] = v111;
        unint64_t v112 = *((void *)v107 + 2);
        if (v67 >= v112) {
          goto LABEL_121;
        }
        uint64_t v18 = v107;
        unint64_t v20 = v112 - 1;
        memmove(&v64[16 * v67], v110 + 16, 16 * (v112 - 1 - v67));
        *((void *)v107 + 2) = v112 - 1;
        if (v112 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    a1 = v128;
    uint64_t v4 = v129;
    uint64_t v12 = v128[1];
    uint64_t v19 = v135;
    if (v135 >= v12) {
      goto LABEL_105;
    }
  }
  if (__OFADD__(v21, v122)) {
    goto LABEL_141;
  }
  if (v21 + v122 >= v12) {
    uint64_t v45 = v12;
  }
  else {
    uint64_t v45 = v21 + v122;
  }
  if (v45 >= v21)
  {
    if (v28 != v45)
    {
      uint64_t v126 = v21;
      v123 = v18;
      uint64_t v124 = v45;
      uint64_t v120 = v2;
      uint64_t v46 = *(void *)(v4 + 72);
      uint64_t v47 = v46 * (v28 - 1);
      uint64_t v131 = v46;
      uint64_t v48 = v28 * v46;
      do
      {
        uint64_t v50 = 0;
        uint64_t v51 = v126;
        uint64_t v135 = v28;
        uint64_t v132 = v48;
        while (1)
        {
          uint64_t v137 = v51;
          uint64_t v52 = *a1;
          uint64_t v53 = v48 + v50 + *a1;
          uint64_t v54 = v133;
          sub_1BFE338B4(v53, (uint64_t)v133, type metadata accessor for FormatService.ThemePackage);
          uint64_t v55 = v47;
          uint64_t v56 = v47 + v50 + v52;
          uint64_t v57 = v134;
          sub_1BFE338B4(v56, (uint64_t)v134, type metadata accessor for FormatService.ThemePackage);
          uint64_t v138 = *v54;
          uint64_t v58 = *v57;
          sub_1BFDDF774((uint64_t)v57, type metadata accessor for FormatService.ThemePackage);
          sub_1BFDDF774((uint64_t)v54, type metadata accessor for FormatService.ThemePackage);
          if (v138 >= v58) {
            break;
          }
          uint64_t v59 = *a1;
          if (!*a1) {
            goto LABEL_143;
          }
          uint64_t v48 = v132;
          uint64_t v47 = v55;
          uint64_t v60 = v59 + v55 + v50;
          sub_1C01054A0(v59 + v132 + v50, v136, type metadata accessor for FormatService.ThemePackage);
          swift_arrayInitWithTakeFrontToBack();
          sub_1C01054A0(v136, v60, type metadata accessor for FormatService.ThemePackage);
          v50 -= v131;
          uint64_t v51 = v137 + 1;
          uint64_t v49 = v135;
          if (v135 == v137 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v49 = v135;
        uint64_t v47 = v55;
        uint64_t v48 = v132;
LABEL_49:
        uint64_t v28 = v49 + 1;
        v47 += v131;
        v48 += v131;
      }
      while (v28 != v124);
      uint64_t v28 = v124;
      uint64_t v2 = v120;
      uint64_t v18 = v123;
      uint64_t v21 = v126;
    }
    goto LABEL_56;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  sub_1C15203FC();
  __break(1u);
}

void sub_1C01491A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v32 = a1;
  uint64_t v33 = type metadata accessor for FormatService.ThemePackage(0);
  MEMORY[0x1F4188790](v33);
  uint64_t v40 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v36 = (uint64_t *)((char *)&v30 - v9);
  MEMORY[0x1F4188790](v10);
  int v35 = (uint64_t *)((char *)&v30 - v12);
  uint64_t v39 = a3;
  uint64_t v31 = a2;
  if (a3 != a2)
  {
    uint64_t v13 = *(void *)(v11 + 72);
    uint64_t v14 = v13 * (v39 - 1);
    uint64_t v37 = v13;
    uint64_t v15 = v13 * v39;
    uint64_t v34 = a4;
LABEL_5:
    uint64_t v16 = 0;
    uint64_t v17 = v32;
    uint64_t v38 = v15;
    while (1)
    {
      uint64_t v18 = *a4;
      uint64_t v19 = v15 + v16 + *a4;
      unint64_t v20 = v35;
      sub_1BFE338B4(v19, (uint64_t)v35, type metadata accessor for FormatService.ThemePackage);
      uint64_t v21 = v14 + v16 + v18;
      uint64_t v22 = v14;
      uint64_t v23 = v36;
      sub_1BFE338B4(v21, (uint64_t)v36, type metadata accessor for FormatService.ThemePackage);
      uint64_t v41 = *v20;
      uint64_t v24 = *v23;
      uint64_t v25 = (uint64_t)v23;
      uint64_t v14 = v22;
      sub_1BFDDF774(v25, type metadata accessor for FormatService.ThemePackage);
      uint64_t v26 = (uint64_t)v20;
      uint64_t v15 = v38;
      sub_1BFDDF774(v26, type metadata accessor for FormatService.ThemePackage);
      BOOL v27 = v41 < v24;
      a4 = v34;
      if (!v27)
      {
LABEL_4:
        uint64_t v14 = v22 + v37;
        v15 += v37;
        if (++v39 == v31) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v28 = *v34;
      if (!*v34) {
        break;
      }
      uint64_t v29 = v28 + v22 + v16;
      sub_1C01054A0(v28 + v15 + v16, v40, type metadata accessor for FormatService.ThemePackage);
      swift_arrayInitWithTakeFrontToBack();
      sub_1C01054A0(v40, v29, type metadata accessor for FormatService.ThemePackage);
      v16 -= v37;
      if (v39 == ++v17) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C0149460(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v47 = type metadata accessor for FormatService.ThemePackage(0);
  MEMORY[0x1F4188790](v47);
  uint64_t v49 = (uint64_t *)((char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v44 - v10);
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v52 = a1;
  unint64_t v51 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v29 = a4 + v18;
      unint64_t v50 = a4 + v18;
      unint64_t v52 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v31 = -v13;
        unint64_t v45 = a1;
        unint64_t v46 = a4;
        do
        {
          unint64_t v48 = a3 + v31;
          sub_1BFE338B4(v29 + v31, (uint64_t)v11, type metadata accessor for FormatService.ThemePackage);
          unint64_t v32 = a2 + v31;
          uint64_t v33 = v11;
          uint64_t v34 = v49;
          sub_1BFE338B4(a2 + v31, (uint64_t)v49, type metadata accessor for FormatService.ThemePackage);
          uint64_t v35 = *v33;
          uint64_t v36 = *v34;
          uint64_t v37 = (uint64_t)v34;
          uint64_t v11 = v33;
          sub_1BFDDF774(v37, type metadata accessor for FormatService.ThemePackage);
          sub_1BFDDF774((uint64_t)v33, type metadata accessor for FormatService.ThemePackage);
          if (v35 >= v36)
          {
            unint64_t v41 = v50;
            v50 += v31;
            unint64_t v38 = v48;
            if (a3 < v41 || v48 >= v41)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v32 = a2;
              unint64_t v40 = v45;
              unint64_t v39 = v46;
            }
            else
            {
              unint64_t v40 = v45;
              unint64_t v39 = v46;
              if (a3 != v41) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v32 = a2;
            }
          }
          else
          {
            unint64_t v38 = v48;
            if (a3 < a2 || v48 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v40 = v45;
              unint64_t v39 = v46;
            }
            else
            {
              unint64_t v40 = v45;
              unint64_t v39 = v46;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v52 += v31;
          }
          unint64_t v29 = v50;
          if (v50 <= v39) {
            break;
          }
          a2 = v32;
          a3 = v38;
        }
        while (v32 > v40);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v48 = a4 + v17;
    unint64_t v50 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v20 = v49;
      do
      {
        sub_1BFE338B4(a2, (uint64_t)v11, type metadata accessor for FormatService.ThemePackage);
        sub_1BFE338B4(a4, (uint64_t)v20, type metadata accessor for FormatService.ThemePackage);
        unint64_t v21 = a2;
        uint64_t v22 = *v11;
        uint64_t v23 = *v20;
        sub_1BFDDF774((uint64_t)v20, type metadata accessor for FormatService.ThemePackage);
        sub_1BFDDF774((uint64_t)v11, type metadata accessor for FormatService.ThemePackage);
        unint64_t v24 = v52;
        if (v22 >= v23)
        {
          unint64_t v27 = v51 + v13;
          if (v52 < v51 || v52 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v52 != v51)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v51 = v27;
          unint64_t v25 = v21;
        }
        else
        {
          unint64_t v25 = v21 + v13;
          if (v52 < v21 || v52 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v52 == v21)
          {
            unint64_t v24 = v21;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v52 = v24 + v13;
        a4 = v51;
        if (v51 >= v48) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_69:
    sub_1C06350EC(&v52, &v51, (uint64_t *)&v50);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void *sub_1C0149964(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15204BC();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v22 = v4;
      unint64_t v23 = v7;
      unint64_t v24 = v7 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v9 = v4 - 4;
        if (v24)
        {
          uint64_t v10 = (void *)MEMORY[0x1C18C7CB0](v4 - 4, v7);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v10 = (void *)swift_unknownObjectRetain();
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v12 = v8;
        uint64_t v13 = v10;
        uint64_t v14 = a3;
        id v15 = objc_msgSend(v10, sel_identifier, v22);
        uint64_t v16 = sub_1C151E62C();
        uint64_t v18 = v17;

        a3 = v14;
        BOOL v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        char v20 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }
        swift_unknownObjectRelease();
        ++v4;
        uint64_t v8 = v12;
        BOOL v19 = v11 == v12;
        unint64_t v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1C0149B10(void *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = a1;
  uint64_t v14 = a1;
  if (a2 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C15204BC();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v9 = i - 4;
        if ((a2 & 0xC000000000000001) != 0)
        {
          uint64_t v6 = (void *)MEMORY[0x1C18C7CB0](i - 4, a2);
          BOOL v10 = __OFADD__(v9, 1);
          uint64_t v11 = i - 3;
          if (v10) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v6 = *(void **)(a2 + 8 * i);
          swift_unknownObjectRetain();
          BOOL v10 = __OFADD__(v9, 1);
          uint64_t v11 = i - 3;
          if (v10)
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        uint64_t v13 = v6;
        sub_1C01287D8(&v14, &v13, a3);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          return v6;
        }
        swift_unknownObjectRelease();
        if (v11 == v7)
        {
          swift_bridgeObjectRelease();
          return v14;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C0149C58(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = a1;
  uint64_t v8 = (void *)a1;
  if (a2 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C15204BC();
    if (v9) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v11 = i - 4;
        if ((a2 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = (void *)MEMORY[0x1C18C7CB0](i - 4, a2);
          BOOL v12 = __OFADD__(v11, 1);
          uint64_t v13 = i - 3;
          if (v12) {
            goto LABEL_13;
          }
        }
        else
        {
          uint64_t v8 = *(void **)(a2 + 8 * i);
          swift_unknownObjectRetain();
          BOOL v12 = __OFADD__(v11, 1);
          uint64_t v13 = i - 3;
          if (v12)
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        id v15 = v8;
        sub_1C0129168(&v16, &v15, a3, a4);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v8;
        }
        swift_unknownObjectRelease();
        if (v13 == v9)
        {
          swift_bridgeObjectRelease();
          return v16;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v8;
}

uint64_t sub_1C0149DAC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v18 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v8 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = MEMORY[0x1C18C7CB0](i - 4, a1);
          uint64_t v10 = i - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(a1 + 8 * i);
          swift_retain();
          uint64_t v10 = i - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        uint64_t v17 = v9;
        sub_1C0126C94(&v17, a2, a3, a4, &v16);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        uint64_t v11 = swift_release();
        if (v16)
        {
          MEMORY[0x1C18C66D0](v11);
          if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
        }
        if (v10 == v6)
        {
          swift_bridgeObjectRelease();
          return v18;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C0149F64(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = a1;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v23 = v3;
      uint64_t v24 = a2;
      unint64_t v7 = v5 & 0xC000000000000001;
      uint64_t v8 = 4;
      unint64_t v25 = v5;
      unint64_t v26 = v5 & 0xC000000000000001;
      uint64_t v27 = v6;
      while (1)
      {
        uint64_t v3 = v8 - 4;
        if (v7)
        {
          uint64_t v9 = (void *)MEMORY[0x1C18C7CB0](v8 - 4, v5);
          uint64_t v10 = v8 - 3;
          if (__OFADD__(v3, 1)) {
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v9 = *(void **)(v5 + 8 * v8);
          swift_retain();
          uint64_t v10 = v8 - 3;
          if (__OFADD__(v3, 1))
          {
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
        }
        if (*(void *)(a2 + 16))
        {
          uint64_t v12 = v9[2];
          uint64_t v11 = v9[3];
          swift_bridgeObjectRetain();
          unint64_t v13 = sub_1BFEF2D8C(v12, v11);
          if (v14)
          {
            id v15 = *(id *)(*(void *)(a2 + 56) + 8 * v13);
            swift_bridgeObjectRelease();
            uint64_t v16 = v9[7];
            if (v9[5])
            {
              id v28 = objc_allocWithZone(MEMORY[0x1E4F7E510]);
              swift_bridgeObjectRetain_n();
              id v17 = v15;
              swift_bridgeObjectRetain_n();
              uint64_t v18 = (void *)sub_1C151E5EC();
              swift_bridgeObjectRelease();
              if (!v16)
              {
                BOOL v19 = 0;
                goto LABEL_20;
              }
LABEL_19:
              BOOL v19 = (void *)sub_1C151E5EC();
              swift_bridgeObjectRelease();
LABEL_20:
              id v21 = objc_msgSend(v28, sel_initWithTitle_issueDescription_, v18, v19, v23);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E4F8]), sel_initWithIssue_overrides_, v15, v21);
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              a2 = v24;
              unint64_t v5 = v25;
            }
            else
            {
              if (v16)
              {
                id v28 = objc_allocWithZone(MEMORY[0x1E4F7E510]);
                swift_bridgeObjectRetain_n();
                id v20 = v15;
                uint64_t v18 = 0;
                goto LABEL_19;
              }
              swift_release();
            }
            MEMORY[0x1C18C66D0]();
            unint64_t v7 = v26;
            if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();
            uint64_t v6 = v27;
            goto LABEL_5;
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
LABEL_5:
        ++v8;
        if (v10 == v6)
        {
          swift_bridgeObjectRelease();
          return v29;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void sub_1C014A274(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FormatContentSubgroup();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v21 = (uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v20 = *(void *)(a1 + 16);
  if (v20)
  {
    unint64_t v12 = 0;
    uint64_t v18 = a2;
    uint64_t v19 = a1;
    while (v12 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v14 = *(void *)(v6 + 72);
      sub_1BFE338B4(a1 + v13 + v14 * v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
      BOOL v15 = sub_1C0107434((uint64_t)v10, a2);
      if (v2)
      {
        sub_1BFDDF774((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v15)
      {
        sub_1C01054A0((uint64_t)v10, v21, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1C05F64E8(0, *(void *)(v11 + 16) + 1, 1);
        }
        uint64_t v11 = v22;
        unint64_t v17 = *(void *)(v22 + 16);
        unint64_t v16 = *(void *)(v22 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1C05F64E8(v16 > 1, v17 + 1, 1);
          uint64_t v11 = v22;
        }
        *(void *)(v11 + 16) = v17 + 1;
        sub_1C01054A0(v21, v11 + v13 + v17 * v14, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
        a2 = v18;
        a1 = v19;
      }
      else
      {
        sub_1BFDDF774((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
      }
      if (v20 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C014A4F8(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatContent.Resolved() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  uint64_t v9 = v7 + v8 + 8;
  uint64_t v10 = v1 + v6;
  uint64_t v11 = *(void *)(v1 + v7);
  uint64_t v12 = v1 + (v9 & ~v8);
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v13;
  *unint64_t v13 = v3;
  v13[1] = sub_1C005E7F4;
  return sub_1C0115A04(a1, v10, v11, v12);
}

uint64_t sub_1C014A654(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for FormatContent.Resolved() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  uint64_t v9 = v7 + v8 + 8;
  uint64_t v10 = v1 + v6;
  uint64_t v11 = *(void *)(v1 + v7);
  uint64_t v12 = v1 + (v9 & ~v8);
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v13;
  *unint64_t v13 = v3;
  v13[1] = sub_1C005E7F4;
  return sub_1C0116D00(a1, v10, v11, v12);
}

uint64_t sub_1C014A7AC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C014A7EC()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 16);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1C005E7F4;
  *(_OWORD *)(v2 + 16) = v3;
  return MEMORY[0x1F4188298](sub_1C011815C, 0, 0);
}

uint64_t sub_1C014A898()
{
  uint64_t v1 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v3 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v1[5];
  uint64_t v5 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v6 = v3 + v1[14];
  unint64_t v7 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + v7[5];
    swift_bridgeObjectRelease();
    uint64_t v9 = type metadata accessor for FormatWebEmbed();
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void *)(v11 - 8);
    unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v25(v10, v11);
    uint64_t v13 = v8 + *(int *)(v9 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11)) {
      v25(v13, v11);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v14 = v6 + v7[8];
    uint64_t v15 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = type metadata accessor for GenericDataVisualization();
        v25(v14 + *(int *)(v16 + 20), v11);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v17 = v6 + v7[9];
    sub_1BFEC84E0();
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v21 = v3 + v1[18];
  uint64_t v22 = sub_1C151D6DC();
  uint64_t v23 = *(void *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  return swift_deallocObject();
}

uint64_t sub_1C014AD58()
{
  uint64_t v2 = *(void *)(type metadata accessor for FormatContent.Resolved() - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  void v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_1C005E7F4;
  return MEMORY[0x1F4188298](sub_1C0118380, 0, 0);
}

uint64_t dispatch thunk of FormatServiceType.resolveResult(content:pool:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1C014AF5C;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_1C014AF5C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of FormatServiceType.prefetch(content:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1C005E7F4;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t method lookup function for FormatService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatService);
}

uint64_t sub_1C014B190(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *(void *)a1 = *a2;
    a1 = v34 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    type metadata accessor for FormatFile();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v174 = v6;
        uint64_t v35 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v35;
        uint64_t v36 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v36;
        uint64_t v37 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v37;
        uint64_t v38 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v38;
        uint64_t v39 = a2[8];
        *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
        *(void *)(a1 + 64) = v39;
        uint64_t v40 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v40;
        __dsta = a2 + 12;
        unsigned __int8 v41 = *((unsigned char *)a2 + 106);
        int v42 = *((unsigned __int16 *)a2 + 52);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v41 == 255)
        {
          *(void *)(a1 + 96) = *__dsta;
          *(_DWORD *)(a1 + 103) = *(_DWORD *)((char *)a2 + 103);
        }
        else
        {
          uint64_t v113 = v42 & 0xFF00FFFF | (v41 << 16);
          uint64_t v114 = *__dsta;
          sub_1BFFA742C(*__dsta, v113, SBYTE2(v113), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *(void *)(a1 + 96) = v114;
          *(_WORD *)(a1 + 104) = v113;
          *(unsigned char *)(a1 + 106) = BYTE2(v113);
        }
        uint64_t v6 = v174;
        goto LABEL_48;
      case 2u:
        uint64_t v43 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v43;
        uint64_t v44 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v44;
        uint64_t v45 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v45;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(void *)(a1 + 56) = a2[7];
        unint64_t v46 = a2 + 8;
        unint64_t v47 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v47 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *v46;
        }
        else
        {
          *(unsigned char *)(a1 + 64) = *(unsigned char *)v46;
          *(void *)(a1 + 72) = v47;
          swift_bridgeObjectRetain();
        }
        uint64_t v118 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v118;
        uint64_t v119 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v119;
        uint64_t v120 = a2[15];
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v120;
        *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
        *(void *)(a1 + 136) = a2[17];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 3u:
        uint64_t v48 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v48;
        uint64_t v49 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v49;
        uint64_t v50 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v50;
        unint64_t v51 = a2 + 6;
        unint64_t v52 = a2[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v52 >= 0xF)
        {
          *(void *)(a1 + 48) = *v51;
          *(void *)(a1 + 56) = v52;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 48) = *(_OWORD *)v51;
        }
        uint64_t v115 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v115;
        uint64_t v116 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v116;
        uint64_t v117 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v117;
        *(void *)(a1 + 112) = a2[14];
        *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 4u:
        uint64_t v53 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v53;
        uint64_t v54 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v54;
        uint64_t v55 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v55;
        *(void *)(a1 + 48) = a2[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 5u:
        uint64_t v176 = v6;
        uint64_t v90 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v90;
        uint64_t v91 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v91;
        uint64_t v92 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v92;
        *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
        uint64_t v93 = a2[8];
        *(void *)(a1 + 56) = a2[7];
        *(void *)(a1 + 64) = v93;
        uint64_t v94 = a2[10];
        *(void *)(a1 + 72) = a2[9];
        *(void *)(a1 + 80) = v94;
        uint64_t v95 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v95;
        uint64_t v96 = a2[14];
        *(void *)(a1 + 104) = a2[13];
        *(void *)(a1 + 112) = v96;
        uint64_t v97 = a2[16];
        *(void *)(a1 + 120) = a2[15];
        *(void *)(a1 + 128) = v97;
        uint64_t v98 = a2[18];
        *(void *)(a1 + 136) = a2[17];
        *(void *)(a1 + 144) = v98;
        *(void *)(a1 + 152) = a2[19];
        v165 = a2 + 20;
        __dstc = (_OWORD *)(a1 + 160);
        unint64_t v158 = a2[21];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v158 >= 2)
        {
          if (v158 == 2)
          {
            _OWORD *__dstc = *v165;
          }
          else
          {
            *(unsigned char *)(a1 + 160) = *(unsigned char *)v165;
            *(void *)(a1 + 168) = v158;
            swift_bridgeObjectRetain();
          }
        }
        else
        {
          _OWORD *__dstc = *v165;
        }
        v166 = (int *)type metadata accessor for FormatPackage();
        uint64_t v121 = v166[23];
        uint64_t v122 = (void *)(a1 + v121);
        uint64_t v123 = (uint64_t)a2 + v121;
        uint64_t v124 = *(uint64_t *)((char *)a2 + v121 + 8);
        *uint64_t v122 = *(uint64_t *)((char *)a2 + v121);
        v122[1] = v124;
        uint64_t v125 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v126 = v125[6];
        unint64_t v127 = (char *)v122 + v126;
        uint64_t v128 = v123 + v126;
        uint64_t v129 = *(void *)(v123 + v126 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v129 == 1)
        {
          long long v130 = *(_OWORD *)(v128 + 16);
          *(_OWORD *)unint64_t v127 = *(_OWORD *)v128;
          *((_OWORD *)v127 + 1) = v130;
          *((_OWORD *)v127 + 2) = *(_OWORD *)(v128 + 32);
        }
        else
        {
          *(void *)unint64_t v127 = *(void *)v128;
          *((void *)v127 + 1) = v129;
          uint64_t v131 = *(void *)(v128 + 24);
          *((void *)v127 + 2) = *(void *)(v128 + 16);
          *((void *)v127 + 3) = v131;
          uint64_t v132 = *(void *)(v128 + 40);
          *((void *)v127 + 4) = *(void *)(v128 + 32);
          *((void *)v127 + 5) = v132;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v133 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        v134 = &v127[v133];
        uint64_t v135 = (const void *)(v128 + v133);
        uint64_t v136 = sub_1C1518CDC();
        uint64_t v137 = *(void *)(v136 - 8);
        __dstd = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v137 + 48);
        if (__dstd(v135, 1, v136))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v134, v135, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v137 + 16))(v134, v135, v136);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v134, 0, 1, v136);
        }
        uint64_t v139 = v125[7];
        v140 = (char *)v122 + v139;
        v141 = (const void *)(v123 + v139);
        if (__dstd((const void *)(v123 + v139), 1, v136))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v137 + 16))(v140, v141, v136);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v140, 0, 1, v136);
        }
        *(void *)((char *)v122 + v125[8]) = *(void *)(v123 + v125[8]);
        uint64_t v143 = v166[24];
        uint64_t v144 = a1 + v143;
        uint64_t v145 = (uint64_t)a2 + v143;
        uint64_t v146 = sub_1C151928C();
        v147 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v146 - 8) + 16);
        swift_bridgeObjectRetain();
        v147(v144, v145, v146);
        uint64_t v148 = v166[25];
        v149 = (void *)(a1 + v148);
        v150 = (char *)a2 + v148;
        if (__dstd((char *)a2 + v148, 1, v136))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v149, v150, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v137 + 16))(v149, v150, v136);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v137 + 56))(v149, 0, 1, v136);
        }
        uint64_t v6 = v176;
        goto LABEL_48;
      case 6u:
        uint64_t v99 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v99;
        *(void *)(a1 + 16) = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 7u:
        *(void *)a1 = *a2;
        swift_retain();
        goto LABEL_48;
      case 8u:
        uint64_t v100 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v100;
        uint64_t v101 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v101;
        uint64_t v102 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v102;
        uint64_t v103 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v103;
        *(void *)(a1 + 64) = a2[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 9u:
        uint64_t v56 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v56;
        uint64_t v57 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v57;
        uint64_t v58 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v58;
        uint64_t v59 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v59;
        uint64_t v60 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v60;
        *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
        uint64_t v61 = a2[12];
        *(void *)(a1 + 88) = a2[11];
        *(void *)(a1 + 96) = v61;
        *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_48;
      case 0xAu:
        uint64_t v104 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v104;
        uint64_t v177 = v6;
        uint64_t v105 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v105;
        uint64_t v106 = a2[4];
        uint64_t v107 = a2[5];
        uint64_t v108 = a2[6];
        uint64_t v109 = a2[7];
        uint64_t v110 = a2[8];
        uint64_t v111 = a2[9];
        unsigned __int8 v112 = *((unsigned char *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v106, v107, v108, v109, v110, v111, v112);
        *(void *)(a1 + 32) = v106;
        *(void *)(a1 + 40) = v107;
        *(void *)(a1 + 48) = v108;
        *(void *)(a1 + 56) = v109;
        *(void *)(a1 + 64) = v110;
        *(void *)(a1 + 72) = v111;
        *(unsigned char *)(a1 + 80) = v112;
        uint64_t v6 = v177;
        goto LABEL_48;
      case 0xBu:
        uint64_t v175 = v6;
        uint64_t v62 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v62;
        uint64_t v63 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v63;
        uint64_t v64 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v64;
        uint64_t v65 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v66 = (void *)(a1 + v65);
        uint64_t v67 = (uint64_t)a2 + v65;
        uint64_t v68 = *(uint64_t *)((char *)a2 + v65 + 8);
        *uint64_t v66 = *(uint64_t *)((char *)a2 + v65);
        v66[1] = v68;
        uint64_t v69 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v70 = v69[5];
        uint64_t v163 = v67 + v70;
        __dste = (char *)v66 + v70;
        uint64_t v71 = sub_1C151631C();
        v160 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v160(__dste, v163, v71);
        uint64_t v72 = v69[6];
        uint64_t v73 = (void *)((char *)v66 + v72);
        uint64_t v74 = (void *)(v67 + v72);
        uint64_t v164 = v74[1];
        *uint64_t v73 = *v74;
        v73[1] = v164;
        uint64_t v75 = v69[7];
        uint64_t v76 = (void *)((char *)v66 + v75);
        uint64_t v77 = (void *)(v67 + v75);
        uint64_t v78 = v77[1];
        *uint64_t v76 = *v77;
        v76[1] = v78;
        uint64_t v79 = v69[8];
        v80 = (void *)((char *)v66 + v79);
        uint64_t v81 = (void *)(v67 + v79);
        uint64_t v82 = v81[1];
        void *v80 = *v81;
        v80[1] = v82;
        uint64_t v83 = v69[9];
        uint64_t v84 = (void *)((char *)v66 + v83);
        v85 = (void *)(v67 + v83);
        uint64_t v86 = v85[1];
        *uint64_t v84 = *v85;
        v84[1] = v86;
        uint64_t v87 = v69[10];
        __dstb = (char *)v66 + v87;
        v157 = (const void *)(v67 + v87);
        uint64_t v88 = sub_1C151D6DC();
        uint64_t v156 = *(void *)(v88 - 8);
        v161 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v156 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v161(v157, 1, v88))
        {
          sub_1BFEE3854(0);
          memcpy(__dstb, v157, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v156 + 16))(__dstb, v157, v88);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v156 + 56))(__dstb, 0, 1, v88);
        }
        *(void *)((char *)v66 + v69[11]) = *(void *)(v67 + v69[11]);
        *(void *)((char *)v66 + v69[12]) = *(void *)(v67 + v69[12]);
        *(void *)((char *)v66 + v69[13]) = *(void *)(v67 + v69[13]);
        *(void *)((char *)v66 + v69[14]) = *(void *)(v67 + v69[14]);
        *(void *)((char *)v66 + v69[15]) = *(void *)(v67 + v69[15]);
        *(void *)((char *)v66 + v69[16]) = *(void *)(v67 + v69[16]);
        *(void *)((char *)v66 + v69[17]) = *(void *)(v67 + v69[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        uint64_t v6 = v175;
        goto LABEL_49;
      default:
        uint64_t v173 = v6;
        uint64_t v7 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v7;
        uint64_t v8 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v9 = v8[5];
        uint64_t v10 = a1 + v9;
        uint64_t v11 = (uint64_t)a2 + v9;
        uint64_t v12 = sub_1C151631C();
        uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        uint64_t v14 = v8[6];
        uint64_t v15 = (void *)(a1 + v14);
        uint64_t v16 = (uint64_t *)((char *)a2 + v14);
        uint64_t v17 = v16[1];
        *uint64_t v15 = *v16;
        v15[1] = v17;
        uint64_t v18 = v8[7];
        uint64_t v19 = (void *)(a1 + v18);
        uint64_t v20 = (uint64_t *)((char *)a2 + v18);
        uint64_t v21 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v21;
        uint64_t v22 = v8[8];
        uint64_t v23 = (void *)(a1 + v22);
        uint64_t v24 = (uint64_t *)((char *)a2 + v22);
        uint64_t v25 = v24[1];
        *uint64_t v23 = *v24;
        v23[1] = v25;
        uint64_t v26 = v8[9];
        uint64_t v27 = (void *)(a1 + v26);
        id v28 = (uint64_t *)((char *)a2 + v26);
        uint64_t v29 = v28[1];
        void *v27 = *v28;
        v27[1] = v29;
        uint64_t v30 = v8[10];
        v162 = (char *)a2 + v30;
        __dst = (void *)(a1 + v30);
        uint64_t v31 = sub_1C151D6DC();
        uint64_t v32 = *(void *)(v31 - 8);
        v159 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v159(v162, 1, v31))
        {
          sub_1BFEE3854(0);
          memcpy(__dst, v162, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v32 + 16))(__dst, v162, v31);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
        }
        uint64_t v6 = v173;
        *(void *)(a1 + v8[11]) = *(uint64_t *)((char *)a2 + v8[11]);
        *(void *)(a1 + v8[12]) = *(uint64_t *)((char *)a2 + v8[12]);
        *(void *)(a1 + v8[13]) = *(uint64_t *)((char *)a2 + v8[13]);
        *(void *)(a1 + v8[14]) = *(uint64_t *)((char *)a2 + v8[14]);
        *(void *)(a1 + v8[15]) = *(uint64_t *)((char *)a2 + v8[15]);
        *(void *)(a1 + v8[16]) = *(uint64_t *)((char *)a2 + v8[16]);
        *(void *)(a1 + v8[17]) = *(uint64_t *)((char *)a2 + v8[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_48:
        swift_storeEnumTagMultiPayload();
LABEL_49:
        uint64_t v152 = *(int *)(v6 + 20);
        v153 = *(void **)((char *)a2 + v152);
        *(void *)(a1 + v152) = v153;
        id v154 = v153;
        break;
    }
  }
  return a1;
}

void sub_1C014C1A8(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for FormatContent(0);
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + *(int *)(v4 + 40);
      uint64_t v8 = sub_1C151D6DC();
      uint64_t v9 = *(void *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      }
      goto LABEL_31;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(unsigned __int8 *)(a1 + 106) != 255)
      {
        uint64_t v10 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
        sub_1BFFA742C(*(void *)(a1 + 96), v10, SBYTE2(v10), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
      }
      break;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 72) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      goto LABEL_31;
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 56) >= 0xFuLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 168) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      uint64_t v11 = (int *)type metadata accessor for FormatPackage();
      uint64_t v12 = a1 + v11[23];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = type metadata accessor for FormatCompilerOptions(0);
      uint64_t v14 = v12 + *(int *)(v13 + 24);
      if (*(void *)(v14 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v15 = v14 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v16 = sub_1C1518CDC();
      uint64_t v17 = *(void *)(v16 - 8);
      uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (!v18(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      }
      uint64_t v19 = v12 + *(int *)(v13 + 28);
      if (!v18(v19, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v16);
      }
      swift_bridgeObjectRelease();
      uint64_t v20 = a1 + v11[24];
      uint64_t v21 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      uint64_t v22 = a1 + v11[25];
      if (!v18(v22, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v22, v16);
      }
      break;
    case 6u:
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 7u:
      swift_release();
      break;
    case 8u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_32;
    case 0xAu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(*(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v23 = a1 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
      swift_bridgeObjectRelease();
      uint64_t v24 = type metadata accessor for FormatContent(0);
      uint64_t v25 = v23 + *(int *)(v24 + 20);
      uint64_t v26 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = v23 + *(int *)(v24 + 40);
      uint64_t v28 = sub_1C151D6DC();
      uint64_t v29 = *(void *)(v28 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28)) {
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
      }
LABEL_31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_32:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v30 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_1C014C9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for FormatFile();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v171 = a3;
      uint64_t v33 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v33;
      uint64_t v34 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v34;
      uint64_t v35 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v35;
      uint64_t v36 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v36;
      uint64_t v37 = *(void *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 64) = v37;
      uint64_t v38 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v38;
      __dsta = (uint64_t *)(a2 + 96);
      unsigned __int8 v39 = *(unsigned char *)(a2 + 106);
      int v40 = *(unsigned __int16 *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v39 == 255)
      {
        *(void *)(a1 + 96) = *__dsta;
        *(_DWORD *)(a1 + 103) = *(_DWORD *)(a2 + 103);
      }
      else
      {
        uint64_t v108 = v40 & 0xFF00FFFF | (v39 << 16);
        uint64_t v109 = *__dsta;
        sub_1BFFA742C(*__dsta, v108, SBYTE2(v108), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
        *(void *)(a1 + 96) = v109;
        *(_WORD *)(a1 + 104) = v108;
        *(unsigned char *)(a1 + 106) = BYTE2(v108);
      }
      a3 = v171;
      goto LABEL_44;
    case 2u:
      uint64_t v41 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v41;
      uint64_t v42 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v42;
      uint64_t v43 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v43;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v44 = (_OWORD *)(a2 + 64);
      unint64_t v45 = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v45 <= 2)
      {
        *(_OWORD *)(a1 + 64) = *v44;
      }
      else
      {
        *(unsigned char *)(a1 + 64) = *(unsigned char *)v44;
        *(void *)(a1 + 72) = v45;
        swift_bridgeObjectRetain();
      }
      uint64_t v113 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v113;
      uint64_t v114 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v114;
      uint64_t v115 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v115;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_44;
    case 3u:
      uint64_t v46 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v46;
      uint64_t v47 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v47;
      uint64_t v48 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v48;
      uint64_t v49 = (void *)(a2 + 48);
      unint64_t v50 = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v50 >= 0xF)
      {
        *(void *)(a1 + 48) = *v49;
        *(void *)(a1 + 56) = v50;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 48) = *(_OWORD *)v49;
      }
      uint64_t v110 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v110;
      uint64_t v111 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v111;
      uint64_t v112 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v112;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_44;
    case 4u:
      uint64_t v51 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v51;
      uint64_t v52 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v52;
      uint64_t v53 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v53;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_44;
    case 5u:
      uint64_t v174 = a3;
      uint64_t v88 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v88;
      uint64_t v89 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v89;
      uint64_t v90 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v90;
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      uint64_t v91 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v91;
      uint64_t v92 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v92;
      uint64_t v93 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v93;
      uint64_t v151 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v151;
      uint64_t v152 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v152;
      uint64_t v154 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v154;
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      uint64_t v163 = (_OWORD *)(a2 + 160);
      unint64_t v156 = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v156 <= 2)
      {
        *(_OWORD *)(a1 + 160) = *v163;
      }
      else
      {
        *(unsigned char *)(a1 + 160) = *(unsigned char *)v163;
        *(void *)(a1 + 168) = v156;
        swift_bridgeObjectRetain();
      }
      uint64_t v164 = (int *)type metadata accessor for FormatPackage();
      uint64_t v116 = v164[23];
      uint64_t v117 = (void *)(a1 + v116);
      uint64_t v118 = a2 + v116;
      uint64_t v119 = *(void *)(a2 + v116 + 8);
      *uint64_t v117 = *(void *)(a2 + v116);
      v117[1] = v119;
      uint64_t v120 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v121 = v120[6];
      uint64_t v122 = (char *)v117 + v121;
      uint64_t v123 = v118 + v121;
      uint64_t v124 = *(void *)(v118 + v121 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v124 == 1)
      {
        long long v125 = *(_OWORD *)(v123 + 16);
        *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
        *((_OWORD *)v122 + 1) = v125;
        *((_OWORD *)v122 + 2) = *(_OWORD *)(v123 + 32);
      }
      else
      {
        *(void *)uint64_t v122 = *(void *)v123;
        *((void *)v122 + 1) = v124;
        uint64_t v126 = *(void *)(v123 + 24);
        *((void *)v122 + 2) = *(void *)(v123 + 16);
        *((void *)v122 + 3) = v126;
        uint64_t v127 = *(void *)(v123 + 40);
        *((void *)v122 + 4) = *(void *)(v123 + 32);
        *((void *)v122 + 5) = v127;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v128 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v129 = &v122[v128];
      long long v130 = (const void *)(v123 + v128);
      uint64_t v131 = sub_1C1518CDC();
      uint64_t v132 = *(void *)(v131 - 8);
      __dstc = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v132 + 48);
      if (__dstc(v130, 1, v131))
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v129, v130, *(void *)(*(void *)(v133 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v132 + 16))(v129, v130, v131);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v129, 0, 1, v131);
      }
      uint64_t v134 = v120[7];
      uint64_t v135 = (char *)v117 + v134;
      uint64_t v136 = (const void *)(v118 + v134);
      if (__dstc((const void *)(v118 + v134), 1, v131))
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v132 + 16))(v135, v136, v131);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v132 + 56))(v135, 0, 1, v131);
      }
      *(void *)((char *)v117 + v120[8]) = *(void *)(v118 + v120[8]);
      uint64_t v138 = v164[24];
      uint64_t v139 = a1 + v138;
      uint64_t v140 = a2 + v138;
      uint64_t v141 = sub_1C151928C();
      uint64_t v142 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v141 - 8) + 16);
      swift_bridgeObjectRetain();
      v142(v139, v140, v141);
      uint64_t v143 = v164[25];
      uint64_t v144 = (void *)(a1 + v143);
      uint64_t v145 = (const void *)(a2 + v143);
      if (__dstc((const void *)(a2 + v143), 1, v131))
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v132 + 16))(v144, v145, v131);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v132 + 56))(v144, 0, 1, v131);
      }
      a3 = v174;
      goto LABEL_44;
    case 6u:
      uint64_t v94 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v94;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_44;
    case 7u:
      *(void *)a1 = *(void *)a2;
      swift_retain();
      goto LABEL_44;
    case 8u:
      uint64_t v95 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v95;
      uint64_t v96 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v96;
      uint64_t v97 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v97;
      uint64_t v98 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v98;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_44;
    case 9u:
      uint64_t v54 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v54;
      uint64_t v55 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v55;
      uint64_t v56 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v56;
      uint64_t v57 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v57;
      uint64_t v172 = a3;
      uint64_t v58 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v58;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      uint64_t v59 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v59;
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a3 = v172;
      swift_bridgeObjectRetain();
      goto LABEL_44;
    case 0xAu:
      uint64_t v99 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v99;
      uint64_t v100 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v100;
      uint64_t v101 = *(void *)(a2 + 32);
      uint64_t v102 = *(void *)(a2 + 40);
      uint64_t v103 = *(void *)(a2 + 48);
      uint64_t v104 = *(void *)(a2 + 56);
      uint64_t v175 = a3;
      uint64_t v105 = *(void *)(a2 + 64);
      uint64_t v106 = *(void *)(a2 + 72);
      unsigned __int8 v107 = *(unsigned char *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF1DB64(v101, v102, v103, v104, v105, v106, v107);
      *(void *)(a1 + 32) = v101;
      *(void *)(a1 + 40) = v102;
      *(void *)(a1 + 48) = v103;
      *(void *)(a1 + 56) = v104;
      *(void *)(a1 + 64) = v105;
      *(void *)(a1 + 72) = v106;
      *(unsigned char *)(a1 + 80) = v107;
      a3 = v175;
      goto LABEL_44;
    case 0xBu:
      uint64_t v173 = a3;
      uint64_t v60 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v60;
      uint64_t v61 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v61;
      uint64_t v62 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v62;
      uint64_t v63 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v64 = (void *)(a1 + v63);
      uint64_t v65 = a2 + v63;
      uint64_t v66 = *(void *)(a2 + v63 + 8);
      *uint64_t v64 = *(void *)(a2 + v63);
      v64[1] = v66;
      uint64_t v67 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v68 = v67[5];
      uint64_t v161 = v65 + v68;
      __dstd = (char *)v64 + v68;
      uint64_t v69 = sub_1C151631C();
      unint64_t v158 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v69 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v158(__dstd, v161, v69);
      uint64_t v70 = v67[6];
      uint64_t v71 = (void *)((char *)v64 + v70);
      uint64_t v72 = (void *)(v65 + v70);
      uint64_t v162 = v72[1];
      *uint64_t v71 = *v72;
      v71[1] = v162;
      uint64_t v73 = v67[7];
      uint64_t v74 = (void *)((char *)v64 + v73);
      uint64_t v75 = (void *)(v65 + v73);
      uint64_t v76 = v75[1];
      *uint64_t v74 = *v75;
      v74[1] = v76;
      uint64_t v77 = v67[8];
      uint64_t v78 = (void *)((char *)v64 + v77);
      uint64_t v79 = (void *)(v65 + v77);
      uint64_t v80 = v79[1];
      *uint64_t v78 = *v79;
      v78[1] = v80;
      uint64_t v81 = v67[9];
      uint64_t v82 = (void *)((char *)v64 + v81);
      uint64_t v83 = (void *)(v65 + v81);
      uint64_t v84 = v83[1];
      *uint64_t v82 = *v83;
      v82[1] = v84;
      uint64_t v85 = v67[10];
      __dstb = (char *)v64 + v85;
      v155 = (const void *)(v65 + v85);
      uint64_t v86 = sub_1C151D6DC();
      uint64_t v153 = *(void *)(v86 - 8);
      v159 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v153 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v159(v155, 1, v86))
      {
        sub_1BFEE3854(0);
        memcpy(__dstb, v155, *(void *)(*(void *)(v87 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v153 + 16))(__dstb, v155, v86);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v153 + 56))(__dstb, 0, 1, v86);
      }
      *(void *)((char *)v64 + v67[11]) = *(void *)(v65 + v67[11]);
      *(void *)((char *)v64 + v67[12]) = *(void *)(v65 + v67[12]);
      *(void *)((char *)v64 + v67[13]) = *(void *)(v65 + v67[13]);
      *(void *)((char *)v64 + v67[14]) = *(void *)(v65 + v67[14]);
      *(void *)((char *)v64 + v67[15]) = *(void *)(v65 + v67[15]);
      *(void *)((char *)v64 + v67[16]) = *(void *)(v65 + v67[16]);
      *(void *)((char *)v64 + v67[17]) = *(void *)(v65 + v67[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      a3 = v173;
      goto LABEL_45;
    default:
      uint64_t v170 = a3;
      uint64_t v6 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v6;
      uint64_t v7 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = a1 + v8;
      uint64_t v10 = a2 + v8;
      uint64_t v11 = sub_1C151631C();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      uint64_t v13 = v7[6];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (void *)(a2 + v13);
      uint64_t v16 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v16;
      uint64_t v17 = v7[7];
      uint64_t v18 = (void *)(a1 + v17);
      uint64_t v19 = (void *)(a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      uint64_t v21 = v7[8];
      uint64_t v22 = (void *)(a1 + v21);
      uint64_t v23 = (void *)(a2 + v21);
      uint64_t v24 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v24;
      uint64_t v25 = v7[9];
      uint64_t v26 = (void *)(a1 + v25);
      uint64_t v27 = (void *)(a2 + v25);
      uint64_t v28 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v28;
      uint64_t v29 = v7[10];
      v160 = (const void *)(a2 + v29);
      __dst = (void *)(a1 + v29);
      uint64_t v30 = sub_1C151D6DC();
      uint64_t v31 = *(void *)(v30 - 8);
      v157 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v157(v160, 1, v30))
      {
        sub_1BFEE3854(0);
        memcpy(__dst, v160, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(__dst, v160, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
      }
      a3 = v170;
      *(void *)(a1 + v7[11]) = *(void *)(a2 + v7[11]);
      *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
      *(void *)(a1 + v7[13]) = *(void *)(a2 + v7[13]);
      *(void *)(a1 + v7[14]) = *(void *)(a2 + v7[14]);
      *(void *)(a1 + v7[15]) = *(void *)(a2 + v7[15]);
      *(void *)(a1 + v7[16]) = *(void *)(a2 + v7[16]);
      *(void *)(a1 + v7[17]) = *(void *)(a2 + v7[17]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_44:
      swift_storeEnumTagMultiPayload();
LABEL_45:
      uint64_t v147 = *(int *)(a3 + 20);
      uint64_t v148 = *(void **)(a2 + v147);
      *(void *)(a1 + v147) = v148;
      id v149 = v148;
      return a1;
  }
}

uint64_t sub_1C014D978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFDDF774(a1, (uint64_t (*)(void))type metadata accessor for FormatFile);
    type metadata accessor for FormatFile();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        uint64_t v28 = *(void *)(a2 + 64);
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)(a1 + 64) = v28;
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        __dsta = (uint64_t *)(a2 + 96);
        unsigned __int8 v29 = *(unsigned char *)(a2 + 106);
        int v30 = *(unsigned __int16 *)(a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v29 == 255)
        {
          uint64_t v31 = *__dsta;
          *(_DWORD *)(a1 + 103) = *(_DWORD *)(a2 + 103);
          *(void *)(a1 + 96) = v31;
        }
        else
        {
          uint64_t v62 = v30 & 0xFF00FFFF | (v29 << 16);
          uint64_t v63 = *__dsta;
          sub_1BFFA742C(*__dsta, v62, SBYTE2(v62), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
          *(void *)(a1 + 96) = v63;
          *(_WORD *)(a1 + 104) = v62;
          *(unsigned char *)(a1 + 106) = BYTE2(v62);
        }
        goto LABEL_44;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        unint64_t v32 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v32 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        }
        else
        {
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          swift_bridgeObjectRetain();
        }
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_44;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        unint64_t v33 = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v33 >= 0xF)
        {
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        }
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_44;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_44;
      case 5u:
        uint64_t v113 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        unint64_t v105 = *(void *)(a2 + 168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v105 <= 2)
        {
          *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        }
        else
        {
          *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
          *(void *)(a1 + 168) = *(void *)(a2 + 168);
          swift_bridgeObjectRetain();
        }
        uint64_t v106 = (int *)type metadata accessor for FormatPackage();
        uint64_t v64 = v106[23];
        uint64_t v65 = (void *)(a1 + v64);
        uint64_t v66 = a2 + v64;
        *uint64_t v65 = *(void *)(a2 + v64);
        v65[1] = *(void *)(a2 + v64 + 8);
        uint64_t v67 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v68 = v67[6];
        uint64_t v69 = (char *)v65 + v68;
        uint64_t v70 = (long long *)(v66 + v68);
        uint64_t v71 = *(void *)(v66 + v68 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v71 == 1)
        {
          long long v72 = *v70;
          long long v73 = v70[2];
          *((_OWORD *)v69 + 1) = v70[1];
          *((_OWORD *)v69 + 2) = v73;
          *(_OWORD *)uint64_t v69 = v72;
        }
        else
        {
          *(void *)uint64_t v69 = *(void *)v70;
          *((void *)v69 + 1) = *((void *)v70 + 1);
          *((void *)v69 + 2) = *((void *)v70 + 2);
          *((void *)v69 + 3) = *((void *)v70 + 3);
          *((void *)v69 + 4) = *((void *)v70 + 4);
          *((void *)v69 + 5) = *((void *)v70 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v74 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v75 = &v69[v74];
        uint64_t v76 = (char *)v70 + v74;
        uint64_t v77 = sub_1C1518CDC();
        uint64_t v78 = *(void *)(v77 - 8);
        __dstc = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
        if (__dstc(v76, 1, v77))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v75, v76, v77);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
        }
        uint64_t v80 = v67[7];
        uint64_t v81 = (char *)v65 + v80;
        uint64_t v82 = (const void *)(v66 + v80);
        if (__dstc((char *)(v66 + v80), 1, v77))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v78 + 16))(v81, v82, v77);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v81, 0, 1, v77);
        }
        *(void *)((char *)v65 + v67[8]) = *(void *)(v66 + v67[8]);
        uint64_t v84 = v106[24];
        uint64_t v85 = a1 + v84;
        uint64_t v86 = a2 + v84;
        uint64_t v87 = sub_1C151928C();
        uint64_t v88 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 16);
        swift_bridgeObjectRetain();
        v88(v85, v86, v87);
        uint64_t v89 = v106[25];
        uint64_t v90 = (void *)(a1 + v89);
        uint64_t v91 = (const void *)(a2 + v89);
        if (__dstc((char *)(a2 + v89), 1, v77))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v78 + 16))(v90, v91, v77);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v78 + 56))(v90, 0, 1, v77);
        }
        a3 = v113;
        goto LABEL_44;
      case 6u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_44;
      case 7u:
        *(void *)a1 = *(void *)a2;
        swift_retain();
        goto LABEL_44;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_44;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_44;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        uint64_t v55 = *(void *)(a2 + 32);
        uint64_t v56 = *(void *)(a2 + 40);
        uint64_t v57 = *(void *)(a2 + 48);
        uint64_t v58 = *(void *)(a2 + 56);
        uint64_t v114 = a3;
        uint64_t v59 = *(void *)(a2 + 64);
        uint64_t v60 = *(void *)(a2 + 72);
        unsigned __int8 v61 = *(unsigned char *)(a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1DB64(v55, v56, v57, v58, v59, v60, v61);
        *(void *)(a1 + 32) = v55;
        *(void *)(a1 + 40) = v56;
        *(void *)(a1 + 48) = v57;
        *(void *)(a1 + 56) = v58;
        *(void *)(a1 + 64) = v59;
        *(void *)(a1 + 72) = v60;
        *(unsigned char *)(a1 + 80) = v61;
        a3 = v114;
        goto LABEL_44;
      case 0xBu:
        uint64_t v112 = a3;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        uint64_t v34 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v35 = (void *)(a1 + v34);
        uint64_t v36 = a2 + v34;
        *uint64_t v35 = *(void *)(a2 + v34);
        v35[1] = *(void *)(a2 + v34 + 8);
        uint64_t v37 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v38 = v37[5];
        uint64_t v104 = v36 + v38;
        __dstd = (char *)v35 + v38;
        uint64_t v39 = sub_1C151631C();
        uint64_t v101 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v101(__dstd, v104, v39);
        uint64_t v40 = v37[6];
        uint64_t v41 = (void *)((char *)v35 + v40);
        uint64_t v42 = (void *)(v36 + v40);
        *uint64_t v41 = *v42;
        v41[1] = v42[1];
        uint64_t v43 = v37[7];
        uint64_t v44 = (void *)((char *)v35 + v43);
        unint64_t v45 = (void *)(v36 + v43);
        *uint64_t v44 = *v45;
        v44[1] = v45[1];
        uint64_t v46 = v37[8];
        uint64_t v47 = (void *)((char *)v35 + v46);
        uint64_t v48 = (void *)(v36 + v46);
        *uint64_t v47 = *v48;
        v47[1] = v48[1];
        uint64_t v49 = v37[9];
        unint64_t v50 = (void *)((char *)v35 + v49);
        uint64_t v51 = (void *)(v36 + v49);
        *unint64_t v50 = *v51;
        v50[1] = v51[1];
        uint64_t v52 = v37[10];
        __dstb = (char *)v35 + v52;
        uint64_t v99 = (const void *)(v36 + v52);
        uint64_t v53 = sub_1C151D6DC();
        uint64_t v98 = *(void *)(v53 - 8);
        uint64_t v102 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v98 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v102(v99, 1, v53))
        {
          sub_1BFEE3854(0);
          memcpy(__dstb, v99, *(void *)(*(void *)(v54 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v98 + 16))(__dstb, v99, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(__dstb, 0, 1, v53);
        }
        *(void *)((char *)v35 + v37[11]) = *(void *)(v36 + v37[11]);
        *(void *)((char *)v35 + v37[12]) = *(void *)(v36 + v37[12]);
        *(void *)((char *)v35 + v37[13]) = *(void *)(v36 + v37[13]);
        *(void *)((char *)v35 + v37[14]) = *(void *)(v36 + v37[14]);
        *(void *)((char *)v35 + v37[15]) = *(void *)(v36 + v37[15]);
        *(void *)((char *)v35 + v37[16]) = *(void *)(v36 + v37[16]);
        *(void *)((char *)v35 + v37[17]) = *(void *)(v36 + v37[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        a3 = v112;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v6 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v7 = v6[5];
        uint64_t v8 = a1 + v7;
        uint64_t v9 = a2 + v7;
        uint64_t v10 = sub_1C151631C();
        uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        uint64_t v12 = v6[6];
        uint64_t v13 = (void *)(a1 + v12);
        uint64_t v14 = (void *)(a2 + v12);
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        uint64_t v15 = v6[7];
        uint64_t v16 = (void *)(a1 + v15);
        uint64_t v17 = (void *)(a2 + v15);
        *uint64_t v16 = *v17;
        v16[1] = v17[1];
        uint64_t v18 = v6[8];
        uint64_t v19 = (void *)(a1 + v18);
        uint64_t v20 = (void *)(a2 + v18);
        *uint64_t v19 = *v20;
        v19[1] = v20[1];
        uint64_t v21 = v6[9];
        uint64_t v22 = (void *)(a1 + v21);
        uint64_t v23 = (void *)(a2 + v21);
        *uint64_t v22 = *v23;
        v22[1] = v23[1];
        uint64_t v24 = v6[10];
        uint64_t v103 = (const void *)(a2 + v24);
        __dst = (void *)(a1 + v24);
        uint64_t v25 = sub_1C151D6DC();
        uint64_t v26 = *(void *)(v25 - 8);
        uint64_t v100 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v26 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v100(v103, 1, v25))
        {
          sub_1BFEE3854(0);
          memcpy(__dst, v103, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v26 + 16))(__dst, v103, v25);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
        }
        *(void *)(a1 + v6[11]) = *(void *)(a2 + v6[11]);
        *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
        *(void *)(a1 + v6[13]) = *(void *)(a2 + v6[13]);
        *(void *)(a1 + v6[14]) = *(void *)(a2 + v6[14]);
        *(void *)(a1 + v6[15]) = *(void *)(a2 + v6[15]);
        *(void *)(a1 + v6[16]) = *(void *)(a2 + v6[16]);
        *(void *)(a1 + v6[17]) = *(void *)(a2 + v6[17]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_44:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  uint64_t v93 = *(int *)(a3 + 20);
  uint64_t v94 = *(void **)(a2 + v93);
  uint64_t v95 = *(void **)(a1 + v93);
  *(void *)(a1 + v93) = v94;
  id v96 = v94;

  return a1;
}

_OWORD *sub_1C014EB40(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatFile();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 11:
      long long v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      a1[2] = a2[2];
      uint64_t v20 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
      uint64_t v23 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v24 = v23[5];
      uint64_t v25 = &v21[v24];
      uint64_t v26 = &v22[v24];
      uint64_t v27 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      *(_OWORD *)&v21[v23[6]] = *(_OWORD *)&v22[v23[6]];
      *(_OWORD *)&v21[v23[7]] = *(_OWORD *)&v22[v23[7]];
      *(_OWORD *)&v21[v23[8]] = *(_OWORD *)&v22[v23[8]];
      *(_OWORD *)&v21[v23[9]] = *(_OWORD *)&v22[v23[9]];
      uint64_t v28 = v23[10];
      unsigned __int8 v29 = &v21[v28];
      int v30 = &v22[v28];
      uint64_t v31 = sub_1C151D6DC();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        sub_1BFEE3854(0);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      *(void *)&v21[v23[11]] = *(void *)&v22[v23[11]];
      *(void *)&v21[v23[12]] = *(void *)&v22[v23[12]];
      *(void *)&v21[v23[13]] = *(void *)&v22[v23[13]];
      *(void *)&v21[v23[14]] = *(void *)&v22[v23[14]];
      *(void *)&v21[v23[15]] = *(void *)&v22[v23[15]];
      *(void *)&v21[v23[16]] = *(void *)&v22[v23[16]];
      *(void *)&v21[v23[17]] = *(void *)&v22[v23[17]];
      goto LABEL_22;
    case 5:
      long long v34 = a2[1];
      *a1 = *a2;
      a1[1] = v34;
      a1[2] = a2[2];
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
      *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
      *((void *)a1 + 19) = *((void *)a2 + 19);
      a1[10] = a2[10];
      uint64_t v62 = (int *)type metadata accessor for FormatPackage();
      uint64_t v35 = v62[23];
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      *(_OWORD *)((char *)a1 + v35) = *(_OWORD *)((char *)a2 + v35);
      uint64_t v38 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v39 = v38[6];
      uint64_t v40 = &v36[v39];
      uint64_t v41 = &v37[v39];
      long long v42 = *(_OWORD *)&v37[v39 + 16];
      *(_OWORD *)uint64_t v40 = *(_OWORD *)&v37[v39];
      *((_OWORD *)v40 + 1) = v42;
      *((_OWORD *)v40 + 2) = *(_OWORD *)&v37[v39 + 32];
      uint64_t v43 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v44 = &v40[v43];
      unint64_t v45 = &v41[v43];
      uint64_t v46 = sub_1C1518CDC();
      uint64_t v47 = *(void *)(v46 - 8);
      uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
      if (v63(v45, 1, v46))
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      uint64_t v49 = v38[7];
      unint64_t v50 = &v36[v49];
      uint64_t v51 = &v37[v49];
      if (v63(&v37[v49], 1, v46))
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v50, v51, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v50, 0, 1, v46);
      }
      *(void *)&v36[v38[8]] = *(void *)&v37[v38[8]];
      uint64_t v53 = v62[24];
      uint64_t v54 = (char *)a1 + v53;
      uint64_t v55 = (char *)a2 + v53;
      uint64_t v56 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
      uint64_t v57 = v62[25];
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      if (v63((char *)a2 + v57, 1, v46))
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v58, v59, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v58, 0, 1, v46);
      }
      goto LABEL_22;
    case 0:
      *a1 = *a2;
      uint64_t v8 = (int *)type metadata accessor for FormatContent(0);
      uint64_t v9 = v8[5];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      *(_OWORD *)((char *)a1 + v8[6]) = *(_OWORD *)((char *)a2 + v8[6]);
      *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
      *(_OWORD *)((char *)a1 + v8[8]) = *(_OWORD *)((char *)a2 + v8[8]);
      *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
      uint64_t v13 = v8[10];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_1C151D6DC();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        sub_1BFEE3854(0);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      *(void *)((char *)a1 + v8[11]) = *(void *)((char *)a2 + v8[11]);
      *(void *)((char *)a1 + v8[12]) = *(void *)((char *)a2 + v8[12]);
      *(void *)((char *)a1 + v8[13]) = *(void *)((char *)a2 + v8[13]);
      *(void *)((char *)a1 + v8[14]) = *(void *)((char *)a2 + v8[14]);
      *(void *)((char *)a1 + v8[15]) = *(void *)((char *)a2 + v8[15]);
      *(void *)((char *)a1 + v8[16]) = *(void *)((char *)a2 + v8[16]);
      *(void *)((char *)a1 + v8[17]) = *(void *)((char *)a2 + v8[17]);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_23:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *sub_1C014F35C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFDDF774((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatFile);
    uint64_t v6 = type metadata accessor for FormatFile();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 11:
        long long v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        a1[2] = a2[2];
        uint64_t v20 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
        uint64_t v23 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v24 = v23[5];
        uint64_t v25 = &v21[v24];
        uint64_t v26 = &v22[v24];
        uint64_t v27 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        *(_OWORD *)&v21[v23[6]] = *(_OWORD *)&v22[v23[6]];
        *(_OWORD *)&v21[v23[7]] = *(_OWORD *)&v22[v23[7]];
        *(_OWORD *)&v21[v23[8]] = *(_OWORD *)&v22[v23[8]];
        *(_OWORD *)&v21[v23[9]] = *(_OWORD *)&v22[v23[9]];
        uint64_t v28 = v23[10];
        unsigned __int8 v29 = &v21[v28];
        int v30 = &v22[v28];
        uint64_t v31 = sub_1C151D6DC();
        uint64_t v32 = *(void *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          sub_1BFEE3854(0);
          memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        *(void *)&v21[v23[11]] = *(void *)&v22[v23[11]];
        *(void *)&v21[v23[12]] = *(void *)&v22[v23[12]];
        *(void *)&v21[v23[13]] = *(void *)&v22[v23[13]];
        *(void *)&v21[v23[14]] = *(void *)&v22[v23[14]];
        *(void *)&v21[v23[15]] = *(void *)&v22[v23[15]];
        *(void *)&v21[v23[16]] = *(void *)&v22[v23[16]];
        *(void *)&v21[v23[17]] = *(void *)&v22[v23[17]];
        goto LABEL_23;
      case 5:
        long long v34 = a2[1];
        *a1 = *a2;
        a1[1] = v34;
        a1[2] = a2[2];
        *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
        *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
        *((void *)a1 + 19) = *((void *)a2 + 19);
        a1[10] = a2[10];
        uint64_t v64 = (int *)type metadata accessor for FormatPackage();
        uint64_t v35 = v64[23];
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        *(_OWORD *)((char *)a1 + v35) = *(_OWORD *)((char *)a2 + v35);
        uint64_t v38 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v39 = v38[6];
        uint64_t v40 = &v36[v39];
        uint64_t v41 = &v37[v39];
        long long v42 = *(_OWORD *)&v37[v39 + 16];
        *(_OWORD *)uint64_t v40 = *(_OWORD *)&v37[v39];
        *((_OWORD *)v40 + 1) = v42;
        *((_OWORD *)v40 + 2) = *(_OWORD *)&v37[v39 + 32];
        uint64_t v43 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v44 = &v40[v43];
        unint64_t v45 = &v41[v43];
        uint64_t v46 = sub_1C1518CDC();
        uint64_t v47 = *(void *)(v46 - 8);
        uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
        if (v65(v45, 1, v46))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        uint64_t v49 = v38[7];
        unint64_t v50 = &v36[v49];
        uint64_t v51 = &v37[v49];
        if (v65(&v37[v49], 1, v46))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v50, v51, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v50, 0, 1, v46);
        }
        *(void *)&v36[v38[8]] = *(void *)&v37[v38[8]];
        uint64_t v53 = v64[24];
        uint64_t v54 = (char *)a1 + v53;
        uint64_t v55 = (char *)a2 + v53;
        uint64_t v56 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
        uint64_t v57 = v64[25];
        uint64_t v58 = (char *)a1 + v57;
        uint64_t v59 = (char *)a2 + v57;
        if (v65((char *)a2 + v57, 1, v46))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v58, v59, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v58, 0, 1, v46);
        }
        goto LABEL_23;
      case 0:
        *a1 = *a2;
        uint64_t v8 = (int *)type metadata accessor for FormatContent(0);
        uint64_t v9 = v8[5];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        *(_OWORD *)((char *)a1 + v8[6]) = *(_OWORD *)((char *)a2 + v8[6]);
        *(_OWORD *)((char *)a1 + v8[7]) = *(_OWORD *)((char *)a2 + v8[7]);
        *(_OWORD *)((char *)a1 + v8[8]) = *(_OWORD *)((char *)a2 + v8[8]);
        *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
        uint64_t v13 = v8[10];
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_1C151D6DC();
        uint64_t v17 = *(void *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        {
          sub_1BFEE3854(0);
          memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
        }
        *(void *)((char *)a1 + v8[11]) = *(void *)((char *)a2 + v8[11]);
        *(void *)((char *)a1 + v8[12]) = *(void *)((char *)a2 + v8[12]);
        *(void *)((char *)a1 + v8[13]) = *(void *)((char *)a2 + v8[13]);
        *(void *)((char *)a1 + v8[14]) = *(void *)((char *)a2 + v8[14]);
        *(void *)((char *)a1 + v8[15]) = *(void *)((char *)a2 + v8[15]);
        *(void *)((char *)a1 + v8[16]) = *(void *)((char *)a2 + v8[16]);
        *(void *)((char *)a1 + v8[17]) = *(void *)((char *)a2 + v8[17]);
LABEL_23:
        swift_storeEnumTagMultiPayload();
        goto LABEL_24;
    }
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
LABEL_24:
  uint64_t v61 = *(int *)(a3 + 20);
  uint64_t v62 = *(void **)((char *)a1 + v61);
  *(void *)((char *)a1 + v61) = *(void *)((char *)a2 + v61);

  return a1;
}

uint64_t sub_1C014FBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C014FBB8);
}

uint64_t sub_1C014FBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatFile();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C014FC78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C014FC8C);
}

uint64_t sub_1C014FC8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FormatFile();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C014FD48(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C014FD94(uint64_t a1, _OWORD *a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for FormatContent.Resolved() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1C005E7F4;
  return sub_1C01171B0(a1, a2, v11, v12, v13);
}

uint64_t sub_1C014FEEC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEF9AD0(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C014FF50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEBC130();
  uint64_t v52 = v5;
  MEMORY[0x1F4188790](v5);
  unint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v47 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v55 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15)
  {
LABEL_31:
    unint64_t v45 = sub_1C010270C(a1, (uint64_t *)&v55);
LABEL_32:
    swift_bridgeObjectRelease();
    return v45;
  }
  unint64_t v51 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = a1 + v51;
  uint64_t v53 = *(void *)(v12 + 72);
  uint64_t v47 = a1;
  swift_bridgeObjectRetain();
  uint64_t v48 = v14;
  uint64_t v49 = v10;
  unint64_t v50 = v4;
  while (1)
  {
    sub_1BFE338B4(v16, (uint64_t)v14, (uint64_t (*)(void))sub_1BFEBC130);
    sub_1BFE338B4((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))sub_1BFEBC130);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      sub_1C01054A0((uint64_t)&v10[*(int *)(v18 + 48)], (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFDDF774((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatPackage);
    }
    else
    {
      sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      sub_1C01054A0((uint64_t)&v10[*(int *)(v19 + 48)], (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      uint64_t v20 = sub_1C1515FDC();
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v10, v20);
    }
    uint64_t v22 = *v4;
    uint64_t v21 = v4[1];
    swift_bridgeObjectRetain();
    sub_1BFDDF774((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    if (!v21)
    {
      sub_1BFDDF774((uint64_t)v14, (uint64_t (*)(void))sub_1BFEBC130);
      unint64_t v45 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      goto LABEL_32;
    }
    uint64_t v23 = (uint64_t)v55;
    if (v55[2])
    {
      swift_bridgeObjectRetain();
      unint64_t v24 = sub_1BFEF2D8C(v22, v21);
      unint64_t v25 = MEMORY[0x1E4FBC860];
      if (v26)
      {
        unint64_t v25 = *(void *)(*(void *)(v23 + 56) + 8 * v24);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v25 = MEMORY[0x1E4FBC860];
    }
    sub_1BFE338B4((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(void))sub_1BFEBC130);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_1BFEB9650(0, *(void *)(v25 + 16) + 1, 1, v25);
    }
    unint64_t v28 = *(void *)(v25 + 16);
    unint64_t v27 = *(void *)(v25 + 24);
    if (v28 >= v27 >> 1) {
      unint64_t v25 = sub_1BFEB9650(v27 > 1, v28 + 1, 1, v25);
    }
    *(void *)(v25 + 16) = v28 + 1;
    unsigned __int8 v29 = v7;
    sub_1C01054A0((uint64_t)v7, v25 + v51 + v28 * v53, (uint64_t (*)(void))sub_1BFEBC130);
    uint64_t v30 = (uint64_t)v55;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v54 = (void *)v30;
    unint64_t v33 = sub_1BFEF2D8C(v22, v21);
    uint64_t v34 = *(void *)(v30 + 16);
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35)) {
      break;
    }
    char v37 = v32;
    if (*(void *)(v30 + 24) >= v36)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v40 = v54;
        if (v32) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1C106AEB4();
        uint64_t v40 = v54;
        if (v37) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1C1055024(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = sub_1BFEF2D8C(v22, v21);
      if ((v37 & 1) != (v39 & 1)) {
        goto LABEL_35;
      }
      unint64_t v33 = v38;
      uint64_t v40 = v54;
      if (v37)
      {
LABEL_3:
        uint64_t v17 = v40[7];
        swift_bridgeObjectRelease();
        *(void *)(v17 + 8 * v33) = v25;
        goto LABEL_4;
      }
    }
    v40[(v33 >> 6) + 8] |= 1 << v33;
    uint64_t v41 = (uint64_t *)(v40[6] + 16 * v33);
    *uint64_t v41 = v22;
    v41[1] = v21;
    *(void *)(v40[7] + 8 * v33) = v25;
    uint64_t v42 = v40[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_34;
    }
    v40[2] = v44;
    swift_bridgeObjectRetain();
LABEL_4:
    uint64_t v55 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v48;
    sub_1BFDDF774((uint64_t)v48, (uint64_t (*)(void))sub_1BFEBC130);
    v16 += v53;
    --v15;
    unint64_t v10 = v49;
    uint64_t v4 = v50;
    unint64_t v7 = v29;
    if (!v15)
    {
      a1 = v47;
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0150530(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_16:
    uint64_t v3 = sub_1C15204BC();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      unint64_t v4 = 0;
      unint64_t v14 = v2 & 0xC000000000000001;
      uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
      while (1)
      {
        if (v14)
        {
          uint64_t v6 = (void *)MEMORY[0x1C18C7CB0](v4, v2);
          unint64_t v7 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
LABEL_13:
            __break(1u);
            return v16;
          }
        }
        else
        {
          if (v4 >= *(void *)(v5 + 16))
          {
            __break(1u);
            goto LABEL_16;
          }
          uint64_t v6 = *(void **)(v2 + 8 * v4 + 32);
          swift_unknownObjectRetain();
          unint64_t v7 = v4 + 1;
          if (__OFADD__(v4, 1)) {
            goto LABEL_13;
          }
        }
        unint64_t v8 = v2;
        id v9 = objc_msgSend(v6, sel_identifier);
        uint64_t v10 = sub_1C151E62C();
        uint64_t v12 = v11;

        LOBYTE(v9) = sub_1BFF896B4(v10, v12, a2);
        swift_bridgeObjectRelease();
        if (v9)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_1C152025C();
          sub_1C152029C();
          sub_1C15202AC();
          sub_1C152026C();
        }
        unint64_t v2 = v8;
        ++v4;
        if (v7 == v3) {
          return v16;
        }
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C01506D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = v3;
  uint64_t v7 = *(void *)(type metadata accessor for FormatContent.Resolved() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v2 + 16);
  uint64_t v13 = v2 + v8;
  uint64_t v14 = v2 + (v11 & ~v10);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v15;
  *uint64_t v15 = v5;
  v15[3] = v12;
  v15[4] = v13;
  v15[1] = sub_1C005E7F4;
  v15[2] = a1;
  uint64_t v16 = *a2;
  v15[5] = v14;
  v15[6] = v16;
  return MEMORY[0x1F4188298](sub_1C0115FE4, 0, 0);
}

uint64_t sub_1C0150838(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0158D58(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C01508A0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_1C005E7F4;
  return sub_1C01185D4(a1, v5, v6, v7);
}

uint64_t objectdestroy_72Tm()
{
  uint64_t v1 = (int *)type metadata accessor for FormatServiceOptions();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v2;
  if (*(void *)(v0 + v2 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v2);
  }
  uint64_t v4 = (id *)(v3 + v1[10]);
  uint64_t v5 = type metadata accessor for FormatTransformKnobs();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {

    uint64_t v6 = (int *)type metadata accessor for FeedContext();
    uint64_t v7 = (char *)v4 + v6[5];
    uint64_t v8 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      uint64_t v18 = &v7[*(int *)(v8 + 20)];
      uint64_t v9 = sub_1C151631C();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v18, v9);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v4 + v6[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4 + *(int *)(v5 + 20));
  }
  uint64_t v10 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v11 = (char *)v4 + *(int *)(v10 + 40);
  uint64_t v12 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    uint64_t v13 = &v11[*(int *)(v12 + 24)];
    uint64_t v14 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = &v13[*(int *)(v14 + 24)];
      uint64_t v16 = sub_1C1516D9C();
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      swift_bridgeObjectRelease();
    }
    if (*(void *)&v11[*(int *)(v12 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0150D4C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C005E7F4;
  return sub_1C0118BF0(a1, v5, v6, v7);
}

uint64_t sub_1C0150E38()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = *(void *)(*(void *)v2 + 64);
  uint64_t v5 = (int *)type metadata accessor for FormatServiceOptions();
  uint64_t v38 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  unint64_t v6 = (v3 + v4 + v38) & ~v38;
  uint64_t v7 = *(void *)(*((void *)v5 - 1) + 64);
  uint64_t v8 = type metadata accessor for FormatContent(0);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = v1 + v3 + v2[27];
  uint64_t v11 = sub_1C151D6DC();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v35 + 48);
  if (!v36(v10, 1, v11)) {
    (*(void (**)(unint64_t, uint64_t))(v35 + 8))(v10, v11);
  }
  uint64_t v37 = v11;
  uint64_t v12 = v1 + v6;
  if (*(void *)(v1 + v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v1 + v6);
  }
  unint64_t v13 = v6 + v7 + v9;
  uint64_t v14 = (id *)(v12 + v5[10]);
  uint64_t v15 = type metadata accessor for FormatTransformKnobs();
  uint64_t v39 = v9;
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v33 = v1;

    uint64_t v16 = (int *)type metadata accessor for FeedContext();
    uint64_t v17 = (char *)v14 + v16[5];
    uint64_t v18 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
    {
      char v32 = &v17[*(int *)(v18 + 20)];
      uint64_t v19 = sub_1C151631C();
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v32, v19);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v14 + v16[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14 + *(int *)(v15 + 20));
    uint64_t v1 = v33;
    uint64_t v9 = v39;
  }
  unint64_t v20 = v13 & ~v9;
  uint64_t v21 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = (char *)v14 + *(int *)(v21 + 40);
  uint64_t v23 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23))
  {
    uint64_t v24 = v1;
    unint64_t v25 = &v22[*(int *)(v23 + 24)];
    uint64_t v26 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26))
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = &v25[*(int *)(v26 + 24)];
      uint64_t v27 = sub_1C1516D9C();
      (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v34, v27);
      swift_bridgeObjectRelease();
    }
    uint64_t v1 = v24;
    if (*(void *)&v22[*(int *)(v23 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = v1 + v20 + *(int *)(v8 + 20);
  uint64_t v29 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v1 + v20 + *(int *)(v8 + 40);
  if (!v36(v30, 1, v37)) {
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v30, v37);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C015153C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(type metadata accessor for FormatContent(0) - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + v11;
  uint64_t v16 = *(void *)(v1 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v17;
  *uint64_t v17 = v2;
  v17[1] = sub_1C005E7F4;
  return sub_1C01190E0(a1, v12, v13, v14, v15, v16);
}

void sub_1C015171C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C151ED5C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C015177C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatContent(0) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1C005E7F4;
  return sub_1C011B034(a1, v12, v13, v14, v15);
}

void sub_1C015192C()
{
  if (!qword_1EB88FF00)
  {
    sub_1C015171C(255, (unint64_t *)&qword_1EB895E80, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88FF00);
    }
  }
}

uint64_t sub_1C01519C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatContent(0) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1C005E7F4;
  return sub_1C011BFDC(a1, v12, v13, v14, v15);
}

void sub_1C0151B74()
{
  if (!qword_1EB880C30)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87B090);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB880C30);
    }
  }
}

uint64_t sub_1C0151BF0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatContent(0) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1C005E7F4;
  return sub_1C011CCF4(a1, v12, v13, v14, v15);
}

uint64_t sub_1C0151DA4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatContent(0) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1C005E7F4;
  return sub_1C011DC5C(a1, v12, v13, v14, v15);
}

uint64_t sub_1C0151F58(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatContent(0) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1C005E7F4;
  return sub_1C011F390(a1, v12, v13, v14, v15);
}

void sub_1C0152108()
{
  if (!qword_1EB88FF10)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB8901B0);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88FF10);
    }
  }
}

uint64_t sub_1C0152184(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatContent(0) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1C005E7F4;
  return sub_1C0120314(a1, v12, v13, v14, v15);
}

void sub_1C0152334()
{
  if (!qword_1EB88FF20)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB890220);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88FF20);
    }
  }
}

uint64_t sub_1C01523B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatContent(0) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1BFC542F4;
  return sub_1C0120C9C(a1, v12, v13, v14, v15);
}

uint64_t sub_1C0152564(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatContent(0) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1C005E7F4;
  return sub_1C0121B58(a1, v12, v13, v14, v15);
}

uint64_t objectdestroy_84Tm()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80);
  uint64_t v4 = *(void *)(*(void *)v2 + 64);
  unint64_t v5 = (int *)type metadata accessor for FormatServiceOptions();
  uint64_t v38 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  unint64_t v6 = (v3 + v4 + v38) & ~v38;
  uint64_t v7 = *(void *)(*((void *)v5 - 1) + 64);
  uint64_t v8 = type metadata accessor for FormatContent(0);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = v1 + v3 + v2[27];
  uint64_t v11 = sub_1C151D6DC();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v35 + 48);
  if (!v36(v10, 1, v11)) {
    (*(void (**)(unint64_t, uint64_t))(v35 + 8))(v10, v11);
  }
  uint64_t v37 = v11;
  uint64_t v12 = v1 + v6;
  if (*(void *)(v1 + v6 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v1 + v6);
  }
  unint64_t v13 = v6 + v7 + v9;
  uint64_t v14 = (id *)(v12 + v5[10]);
  uint64_t v15 = type metadata accessor for FormatTransformKnobs();
  uint64_t v39 = v9;
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v33 = v1;

    uint64_t v16 = (int *)type metadata accessor for FeedContext();
    uint64_t v17 = (char *)v14 + v16[5];
    uint64_t v18 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
    {
      char v32 = &v17[*(int *)(v18 + 20)];
      uint64_t v19 = sub_1C151631C();
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v32, v19);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v14 + v16[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14 + *(int *)(v15 + 20));
    uint64_t v1 = v33;
    uint64_t v9 = v39;
  }
  unint64_t v20 = v13 & ~v9;
  uint64_t v21 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = (char *)v14 + *(int *)(v21 + 40);
  uint64_t v23 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23))
  {
    uint64_t v24 = v1;
    unint64_t v25 = &v22[*(int *)(v23 + 24)];
    uint64_t v26 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26))
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = &v25[*(int *)(v26 + 24)];
      uint64_t v27 = sub_1C1516D9C();
      (*(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v34, v27);
      swift_bridgeObjectRelease();
    }
    uint64_t v1 = v24;
    if (*(void *)&v22[*(int *)(v23 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = v1 + v20 + *(int *)(v8 + 20);
  uint64_t v29 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v1 + v20 + *(int *)(v8 + 40);
  if (!v36(v30, 1, v37)) {
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v30, v37);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0152E08(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatContentPool() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatContent(0) - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1C005E7F4;
  return sub_1C0121F44(a1, v12, v13, v14, v15);
}

uint64_t type metadata accessor for FormatService.ThemePackage(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB894308);
}

uint64_t sub_1C0152FD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C0124FE8(a1, *(uint64_t **)(v2 + 24), a2);
}

uint64_t sub_1C0152FF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  return sub_1C01255EC(a1, a2, a3, *(void *)(v4 + 16), *(uint64_t **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), a4);
}

unint64_t sub_1C0153018()
{
  unint64_t result = qword_1EB88A088;
  if (!qword_1EB88A088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A088);
  }
  return result;
}

uint64_t sub_1C015306C(uint64_t *a1)
{
  return sub_1C0125CAC(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1C015308C()
{
  return sub_1C014FD48((unint64_t *)&unk_1EB887270, 255, (void (*)(uint64_t))type metadata accessor for FormatPackage);
}

void sub_1C01530C4(uint64_t a1)
{
}

uint64_t sub_1C01530F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C0153158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1C01531CC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C0153B44(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0153240(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C0153B44(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C015329C(uint64_t a1)
{
  return sub_1C0DC5520(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1C01532BC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = v1[23];
  uint64_t v4 = v1[24];
  __swift_project_boxed_opaque_existential_1(v1 + 20, v3);
  return ResourceServiceType.fetchResources(identifiers:)(v2, v3, v4);
}

void sub_1C0153314()
{
  if (!qword_1EB879BE0)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A0B0);
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879BE0);
    }
  }
}

uint64_t sub_1C015338C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = v1[28];
  uint64_t v4 = v1[29];
  __swift_project_boxed_opaque_existential_1(v1 + 25, v3);
  return WebArchiveServiceType.resolve(webArchives:)(v2, v3, v4);
}

void sub_1C01533E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151E41C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0153448(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1C005E7F4;
  return sub_1C0127634(a1, a2, v6, v7, v8);
}

uint64_t sub_1C0153510(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C005E7F4;
  return sub_1C0127CE8(a1, v4, v5, v7, v6);
}

uint64_t objectdestroy_306Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C015361C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C005E7F4;
  return sub_1C0128390(a1, v4, v5, v7, v6);
}

void sub_1C01536DC()
{
  if (!qword_1EA196E80)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB87A930);
    unint64_t v0 = sub_1C151EF0C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA196E80);
    }
  }
}

uint64_t sub_1C0153754(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0153760()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C0153798(uint64_t a1)
{
}

uint64_t sub_1C01537CC(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1C005E7F4;
  return sub_1C0129EE0(a1, a2, v7, v6);
}

uint64_t sub_1C0153880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PuzzleStatistic();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01538E4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C015391C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C015396C(uint64_t a1)
{
  long long v7 = *(_OWORD *)(v1 + 48);
  long long v8 = *(_OWORD *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_1C005E7F4;
  *(void *)(v5 + 80) = v4;
  *(_OWORD *)(v5 + 48) = v8;
  *(_OWORD *)(v5 + 64) = v7;
  *(void *)(v5 + 40) = a1;
  return MEMORY[0x1F4188298](sub_1C012A848, 0, 0);
}

void sub_1C0153A40()
{
  if (!qword_1EB86FD78)
  {
    sub_1C0153798(255);
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB87A930);
    unint64_t v0 = sub_1C151EF0C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86FD78);
    }
  }
}

unint64_t sub_1C0153AC0()
{
  unint64_t result = qword_1EA199CA0;
  if (!qword_1EA199CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA199CA0);
  }
  return result;
}

void sub_1C0153B14(uint64_t a1)
{
}

void sub_1C0153B44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

unint64_t sub_1C0153BB4()
{
  unint64_t result = qword_1EB86DD38;
  if (!qword_1EB86DD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86DD38);
  }
  return result;
}

uint64_t sub_1C0153C08(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  sub_1C0158DBC(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

double sub_1C0153C7C(_OWORD *a1)
{
  double result = 0.0;
  *a1 = xmmword_1C152C800;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  return result;
}

uint64_t sub_1C0153CA0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFEF9AD0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t *sub_1C0153D20(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1C0153D7C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0153E30(uint64_t a1)
{
  return a1;
}

void sub_1C0153EDC()
{
  if (!qword_1EB8948D0)
  {
    sub_1C015171C(255, (unint64_t *)&qword_1EB895E80, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8948D0);
    }
  }
}

uint64_t sub_1C0153F60(void *a1, unint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  return sub_1C0126AC8(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(uint64_t **)(v4 + 32), *(void *)(v4 + 40));
}

id sub_1C0153F80@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  return sub_1C012741C(a1, *(uint64_t **)(v2 + 24), a2);
}

unint64_t sub_1C0153F9C()
{
  unint64_t result = qword_1EB871040;
  if (!qword_1EB871040)
  {
    sub_1C015171C(255, (unint64_t *)&qword_1EB895E80, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB871040);
  }
  return result;
}

unint64_t sub_1C0154020()
{
  unint64_t result = qword_1EB880D20;
  if (!qword_1EB880D20)
  {
    sub_1C015171C(255, &qword_1EB87BD40, (uint64_t)&qword_1EB87B090, 0x1E4F7E4F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC39268);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB880D20);
  }
  return result;
}

unint64_t sub_1C01540A4()
{
  unint64_t result = qword_1EB880DD0;
  if (!qword_1EB880DD0)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87B090);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB880DD0);
  }
  return result;
}

uint64_t sub_1C0154110(uint64_t a1, uint64_t a2)
{
  sub_1BFF00BEC();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1C005E7F4;
  return sub_1C012B148(a1, a2, v11, v12, v13);
}

void sub_1C0154268()
{
  if (!qword_1EB8942D0)
  {
    sub_1C0154398(255);
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C0158D58(255, &qword_1EB879EA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackageInventory, MEMORY[0x1E4FBB320]);
    sub_1C01543E0();
    sub_1C0154470();
    sub_1C0158D58(255, &qword_1EB880CC0, (uint64_t (*)(uint64_t))sub_1BFF1D9F4, v0);
    sub_1BFCFCDCC();
    sub_1C0154538();
    sub_1C01545C8();
    sub_1BFC917A8();
    sub_1BFDDC374();
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EB8942D0);
    }
  }
}

void sub_1C0154398(uint64_t a1)
{
}

void sub_1C01543E0()
{
  if (!qword_1EB879D80)
  {
    sub_1C0158DBC(255, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879D80);
    }
  }
}

void sub_1C0154470()
{
  if (!qword_1EB879D68)
  {
    sub_1C0158DBC(255, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879D68);
    }
  }
}

uint64_t sub_1C0154500()
{
  return sub_1C014FD48(&qword_1EB891140, 255, (void (*)(uint64_t))type metadata accessor for FormatSnippet);
}

void sub_1C0154538()
{
  if (!qword_1EB879D60)
  {
    sub_1C0158DBC(255, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879D60);
    }
  }
}

void sub_1C01545C8()
{
  if (!qword_1EB879D78)
  {
    sub_1C0158DBC(255, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879D78);
    }
  }
}

uint64_t sub_1C0154658()
{
  sub_1C0154398(0);
  uint64_t v74 = v1;
  uint64_t v65 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v65 + 24) & ~v65;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_1BFF00BEC();
  uint64_t v76 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v71 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v69 = (int *)type metadata accessor for FormatServiceOptions();
  uint64_t v80 = *(unsigned __int8 *)(*((void *)v69 - 1) + 80);
  uint64_t v66 = *(void *)(*((void *)v69 - 1) + 64);
  sub_1BFEBC130();
  uint64_t v79 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  swift_release();
  uint64_t v6 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 168) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v81 = v0;
  uint64_t v78 = (int *)type metadata accessor for FormatPackage();
  uint64_t v7 = v6 + v78[23];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for FormatCompilerOptions(0);
  uint64_t v9 = v7 + *(int *)(v8 + 24);
  if (*(void *)(v9 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v3 + v76;
  uint64_t v62 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  uint64_t v11 = v9 + *(int *)(v62 + 20);
  uint64_t v12 = sub_1C1518CDC();
  uint64_t v75 = *(void *)(v12 - 8);
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
  if (!v13(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v11, v12);
  }
  uint64_t v14 = v2 + v10;
  uint64_t v15 = v7 + *(int *)(v8 + 28);
  if (!v13(v15, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v15, v12);
  }
  uint64_t v77 = v14 & ~v76;
  uint64_t v72 = v71 + v80;
  uint64_t v70 = v8;
  swift_bridgeObjectRelease();
  uint64_t v16 = v6 + v78[24];
  uint64_t v17 = sub_1C151928C();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v19(v16, v17);
  uint64_t v20 = v6 + v78[25];
  uint64_t v64 = v12;
  uint64_t v63 = v13;
  if (!v13(v20, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v20, v12);
  }
  uint64_t v21 = v77 + v72;
  uint64_t v22 = v6 + *(int *)(v74 + 36);
  swift_bridgeObjectRelease();
  uint64_t v23 = (int *)type metadata accessor for FormatMetadata();
  v19(v22 + v23[5], v17);
  v19(v22 + v23[6], v17);
  uint64_t v24 = v22 + v23[7];
  uint64_t v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
  uint64_t v25 = v17;
  if (!v68(v24, 1, v17)) {
    v19(v24, v17);
  }
  long long v73 = v19;
  uint64_t v26 = v21 & ~v80;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_1C1515FDC();
  uint64_t v28 = *(void *)(v27 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v81 + v77, 1, v27)) {
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v81 + v77, v27);
  }
  uint64_t v29 = v66 + v79;
  uint64_t v30 = v81 + v26;
  if (*(void *)(v81 + v26 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v81 + v26);
  }
  uint64_t v67 = v28;
  uint64_t v31 = v26 + v29;
  char v32 = (id *)(v30 + v69[10]);
  uint64_t v33 = type metadata accessor for FormatTransformKnobs();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33))
  {

    uint64_t v34 = (int *)type metadata accessor for FeedContext();
    uint64_t v35 = (char *)v32 + v34[5];
    uint64_t v36 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v35, 1, v36))
    {
      uint64_t v61 = &v35[*(int *)(v36 + 20)];
      uint64_t v37 = sub_1C151631C();
      (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v61, v37);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v32 + v34[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32 + *(int *)(v33 + 20));
  }
  uint64_t v38 = v31 & ~v79;
  uint64_t v39 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v40 = (char *)v32 + *(int *)(v39 + 40);
  uint64_t v41 = type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v42 = v81;
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v40, 1, v41))
  {
    BOOL v43 = &v40[*(int *)(v41 + 24)];
    uint64_t v44 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v43, 1, v44))
    {
      swift_bridgeObjectRelease();
      unint64_t v45 = &v43[*(int *)(v44 + 24)];
      uint64_t v46 = sub_1C1516D9C();
      uint64_t v47 = v45;
      uint64_t v42 = v81;
      (*(void (**)(char *, uint64_t))(*(void *)(v46 - 8) + 8))(v47, v46);
      swift_bridgeObjectRelease();
    }
    if (*(void *)&v40[*(int *)(v41 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v48 = v42 + v38;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v49 = v73;
    if (*(void *)(v48 + 168) >= 3uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v50 = v48 + v78[23];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v50 + *(int *)(v70 + 24);
    if (*(void *)(v51 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v52 = v51 + *(int *)(v62 + 20);
    if (!v63(v52, 1, v64)) {
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v52, v64);
    }
    uint64_t v53 = v50 + *(int *)(v70 + 28);
    if (!v63(v53, 1, v64)) {
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v53, v64);
    }
    swift_bridgeObjectRelease();
    v73(v48 + v78[24], v25);
    uint64_t v54 = v48 + v78[25];
    if (!v63(v54, 1, v64)) {
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v54, v64);
    }
    sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v56 = v48 + *(int *)(v55 + 48);
    swift_bridgeObjectRelease();
    v73(v56 + v23[5], v25);
    v73(v56 + v23[6], v25);
    uint64_t v57 = v56 + v23[7];
    if (!v68(v57, 1, v25)) {
      goto LABEL_40;
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v48, v27);
    sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v59 = v48 + *(int *)(v58 + 48);
    swift_bridgeObjectRelease();
    uint64_t v49 = v73;
    v73(v59 + v23[5], v25);
    v73(v59 + v23[6], v25);
    uint64_t v57 = v59 + v23[7];
    if (!v68(v57, 1, v25)) {
LABEL_40:
    }
      v49(v57, v25);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C01552F4(uint64_t a1)
{
  sub_1C0154398(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_1BFF00BEC();
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  sub_1BFEBC130();
  uint64_t v14 = *(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  unint64_t v15 = v11 + v12 + v14;
  uint64_t v16 = *(void *)(v1 + 16);
  uint64_t v17 = v1 + v5;
  uint64_t v18 = v1 + v8;
  uint64_t v19 = v1 + v11;
  uint64_t v20 = v1 + (v15 & ~v14);
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v21;
  *uint64_t v21 = v2;
  v21[1] = sub_1C005E7F4;
  return sub_1C013CF70(a1, v16, v17, v18, v19, v20);
}

uint64_t sub_1C0155508(uint64_t a1)
{
  sub_1C0154398(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_1BFF00BEC();
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[1] = sub_1C005E7F4;
  v16[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D060, 0, 0);
}

uint64_t sub_1C01556C4(uint64_t a1)
{
  sub_1C0154398(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_1BFF00BEC();
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[1] = sub_1C005E7F4;
  v16[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D2B4, 0, 0);
}

uint64_t sub_1C0155880(uint64_t a1)
{
  sub_1C0154398(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_1BFF00BEC();
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[1] = sub_1C005E7F4;
  v16[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D394, 0, 0);
}

uint64_t sub_1C0155A3C(uint64_t a1)
{
  sub_1C0154398(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_1BFF00BEC();
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[1] = sub_1C005E7F4;
  v16[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D474, 0, 0);
}

uint64_t sub_1C0155BF8(uint64_t a1)
{
  sub_1C0154398(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_1BFF00BEC();
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[1] = sub_1C005E7F4;
  v16[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D554, 0, 0);
}

uint64_t sub_1C0155DB4(uint64_t a1)
{
  sub_1C0154398(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_1BFF00BEC();
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[1] = sub_1C005E7F4;
  v16[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D634, 0, 0);
}

uint64_t sub_1C0155F70(uint64_t a1)
{
  sub_1C0154398(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_1BFF00BEC();
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[1] = sub_1C005E7F4;
  v16[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D714, 0, 0);
}

uint64_t objectdestroy_399Tm()
{
  sub_1C0154398(0);
  uint64_t v47 = v1;
  uint64_t v48 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v2 = (v48 + 24) & ~v48;
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  sub_1BFF00BEC();
  uint64_t v54 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v45 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v51 = type metadata accessor for FormatServiceOptions();
  uint64_t v53 = *(unsigned __int8 *)(*(void *)(v51 - 8) + 80);
  swift_release();
  uint64_t v49 = v0;
  uint64_t v5 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 168) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = (int *)type metadata accessor for FormatPackage();
  uint64_t v7 = v5 + v6[23];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for FormatCompilerOptions(0);
  uint64_t v9 = v7 + *(int *)(v8 + 24);
  if (*(void *)(v9 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = v3 + v54;
  uint64_t v11 = v9 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v12 = sub_1C1518CDC();
  uint64_t v50 = *(void *)(v12 - 8);
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
  if (!v13(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v11, v12);
  }
  uint64_t v14 = v2 + v10;
  uint64_t v15 = v7 + *(int *)(v8 + 28);
  if (!v13(v15, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v15, v12);
  }
  uint64_t v52 = v14 & ~v54;
  uint64_t v46 = v45 + v53;
  swift_bridgeObjectRelease();
  uint64_t v16 = v5 + v6[24];
  uint64_t v17 = sub_1C151928C();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v19(v16, v17);
  uint64_t v20 = v5 + v6[25];
  if (!v13(v20, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v20, v12);
  }
  uint64_t v21 = v5 + *(int *)(v47 + 36);
  swift_bridgeObjectRelease();
  uint64_t v22 = (int *)type metadata accessor for FormatMetadata();
  v19(v21 + v22[5], v17);
  v19(v21 + v22[6], v17);
  uint64_t v23 = v21 + v22[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17)) {
    v19(v23, v17);
  }
  uint64_t v24 = (v52 + v46) & ~v53;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_1C1515FDC();
  uint64_t v26 = *(void *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v49 + v52, 1, v25)) {
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v49 + v52, v25);
  }
  uint64_t v27 = v49 + v24;
  uint64_t v28 = v51;
  if (*(void *)(v49 + v24 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v49 + v24);
  }
  uint64_t v29 = (id *)(v27 + *(int *)(v51 + 40));
  uint64_t v30 = type metadata accessor for FormatTransformKnobs();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v29, 1, v30))
  {

    uint64_t v31 = (int *)type metadata accessor for FeedContext();
    char v32 = (char *)v29 + v31[5];
    uint64_t v33 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33))
    {
      uint64_t v34 = &v32[*(int *)(v33 + 20)];
      uint64_t v35 = sub_1C151631C();
      uint64_t v36 = v34;
      uint64_t v28 = v51;
      (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v36, v35);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v29 + v31[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29 + *(int *)(v30 + 20));
  }
  uint64_t v37 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = (char *)v29 + *(int *)(v37 + 40);
  uint64_t v39 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v38, 1, v39))
  {
    uint64_t v40 = &v38[*(int *)(v39 + 24)];
    uint64_t v41 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v40, 1, v41))
    {
      swift_bridgeObjectRelease();
      uint64_t v42 = &v40[*(int *)(v41 + 24)];
      uint64_t v43 = sub_1C1516D9C();
      (*(void (**)(char *, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
      swift_bridgeObjectRelease();
    }
    if (*(void *)&v38[*(int *)(v39 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0156970(uint64_t a1)
{
  sub_1C0154398(0);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  sub_1BFF00BEC();
  unint64_t v8 = (v5 + v6 + *(unsigned __int8 *)(*(void *)(v7 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v11 = v8 + v9 + v10;
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v13 = v1 + v5;
  uint64_t v14 = v1 + v8;
  uint64_t v15 = v1 + (v11 & ~v10);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[5] = v14;
  v16[6] = v15;
  v16[3] = v12;
  v16[4] = v13;
  v16[1] = sub_1C005E7F4;
  v16[2] = a1;
  return MEMORY[0x1F4188298](sub_1C013D98C, 0, 0);
}

uint64_t objectdestroy_386Tm()
{
  sub_1BFF00BEC();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = (int *)type metadata accessor for FormatServiceOptions();
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(*((void *)v4 - 1) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  swift_release();
  uint64_t v6 = v0 + v2;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = v0 + v5;
  if (*(void *)(v0 + v5 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v5);
  }
  uint64_t v10 = (id *)(v9 + v4[10]);
  uint64_t v11 = type metadata accessor for FormatTransformKnobs();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {

    uint64_t v12 = (int *)type metadata accessor for FeedContext();
    uint64_t v13 = (char *)v10 + v12[5];
    uint64_t v14 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
    {
      uint64_t v24 = &v13[*(int *)(v14 + 20)];
      uint64_t v15 = sub_1C151631C();
      (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v24, v15);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v10 + v12[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10 + *(int *)(v11 + 20));
  }
  uint64_t v16 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = (char *)v10 + *(int *)(v16 + 40);
  uint64_t v18 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    uint64_t v19 = &v17[*(int *)(v18 + 24)];
    uint64_t v20 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20))
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = &v19[*(int *)(v20 + 24)];
      uint64_t v22 = sub_1C1516D9C();
      (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      swift_bridgeObjectRelease();
    }
    if (*(void *)&v17[*(int *)(v18 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0156FBC(uint64_t a1, uint64_t a2)
{
  sub_1BFF00BEC();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1C005E7F4;
  return sub_1C0143E04(a1, a2, v11, v12, v13);
}

void sub_1C0157114()
{
  if (!qword_1EB894460)
  {
    sub_1C0158DBC(255, (unint64_t *)&unk_1EB876740, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB894460);
    }
  }
}

uint64_t sub_1C01571A4()
{
  return sub_1C02595A8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1C01571C4()
{
  return swift_deallocObject();
}

void sub_1C01571FC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C025968C(a1, *(void **)(v2 + 16), a2);
}

void sub_1C0157218()
{
  if (!qword_1EA1AF970)
  {
    sub_1C1515FDC();
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB87A930);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1AF970);
    }
  }
}

uint64_t sub_1C015729C(uint64_t a1, uint64_t a2)
{
  sub_1BFF00BEC();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1C005E7F4;
  return sub_1C0143D3C(a1, a2, v11, v12, v13);
}

void sub_1C01573F4()
{
  if (!qword_1EB894448)
  {
    sub_1C0158DBC(255, (unint64_t *)&unk_1EB876730, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB894448);
    }
  }
}

uint64_t sub_1C0157488(uint64_t a1, uint64_t a2)
{
  sub_1BFF00BEC();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1C005E7F4;
  return sub_1C0143C74(a1, a2, v11, v12, v13);
}

void sub_1C01575E0()
{
  if (!qword_1EB8944B0)
  {
    sub_1C0158DBC(255, &qword_1EB876760, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8944B0);
    }
  }
}

uint64_t sub_1C0157674(uint64_t a1, uint64_t a2)
{
  sub_1BFF00BEC();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1C005E7F4;
  return sub_1C0143BAC(a1, a2, v11, v12, v13);
}

void sub_1C01577CC()
{
  if (!qword_1EB894478)
  {
    sub_1C0158DBC(255, &qword_1EB876750, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB894478);
    }
  }
}

uint64_t sub_1C0157860(uint64_t a1, uint64_t a2)
{
  sub_1BFF00BEC();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1C005E7F4;
  return sub_1C0143AE4(a1, a2, v11, v12, v13);
}

void sub_1C01579B8()
{
  if (!qword_1EB8944F0)
  {
    sub_1C0158DBC(255, (unint64_t *)&unk_1EB876770, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8944F0);
    }
  }
}

uint64_t sub_1C0157A4C(uint64_t a1, uint64_t a2)
{
  sub_1BFF00BEC();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1C005E7F4;
  return sub_1C0143A1C(a1, a2, v11, v12, v13);
}

void sub_1C0157BA4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C0157C24(uint64_t a1, uint64_t a2)
{
  sub_1BFF00BEC();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1C005E7F4;
  return sub_1C0143954(a1, a2, v11, v12, v13);
}

void sub_1C0157D7C()
{
  if (!qword_1EB894490)
  {
    sub_1C0158DBC(255, &qword_1EB876758, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB894490);
    }
  }
}

uint64_t sub_1C0157E10(uint64_t a1, uint64_t a2)
{
  sub_1BFF00BEC();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *uint64_t v14 = v3;
  v14[1] = sub_1C005E7F4;
  return sub_1C014388C(a1, a2, v11, v12, v13);
}

void sub_1C0157F68()
{
  if (!qword_1EB8944D0)
  {
    sub_1C0158DBC(255, &qword_1EB876768, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReference);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8944D0);
    }
  }
}

void sub_1C0157FF8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    type metadata accessor for FormatMetadata();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C0158060()
{
  uint64_t v1 = v0;
  sub_1BFEBC130();
  uint64_t v64 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v3 = (v64 + 24) & ~v64;
  uint64_t v4 = *(void *)(*(void *)(v2 - 8) + 64);
  sub_1BFF00BEC();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v9 = (int *)type metadata accessor for FormatServiceOptions();
  uint64_t v65 = *(unsigned __int8 *)(*((void *)v9 - 1) + 80);
  uint64_t v62 = v7 + v8 + v65;
  uint64_t v63 = v7;
  swift_release();
  uint64_t v10 = v1 + v3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v10 + 168) >= 3uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v11 = (int *)type metadata accessor for FormatPackage();
    uint64_t v12 = v10 + v11[23];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = type metadata accessor for FormatCompilerOptions(0);
    uint64_t v14 = v12 + *(int *)(v13 + 24);
    if (*(void *)(v14 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v15 = v14 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    uint64_t v16 = sub_1C1518CDC();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    if (!v18(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    uint64_t v61 = v9;
    uint64_t v19 = v12 + *(int *)(v13 + 28);
    if (!v18(v19, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v16);
    }
    uint64_t v60 = v17;
    swift_bridgeObjectRelease();
    uint64_t v20 = v10 + v11[24];
    uint64_t v21 = sub_1C151928C();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v23(v20, v21);
    uint64_t v24 = v10 + v11[25];
    if (!v18(v24, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v24, v16);
    }
    sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v26 = v10 + *(int *)(v25 + 48);
    swift_bridgeObjectRelease();
    uint64_t v27 = (int *)type metadata accessor for FormatMetadata();
    v23(v26 + v27[5], v21);
    v23(v26 + v27[6], v21);
    uint64_t v28 = v26 + v27[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v28, 1, v21)) {
      v23(v28, v21);
    }
    uint64_t v9 = v61;
  }
  else
  {
    uint64_t v29 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v1 + v3, v29);
    sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v31 = v10 + *(int *)(v30 + 48);
    swift_bridgeObjectRelease();
    char v32 = (int *)type metadata accessor for FormatMetadata();
    uint64_t v33 = v31 + v32[5];
    uint64_t v34 = sub_1C151928C();
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v36(v33, v34);
    v36(v31 + v32[6], v34);
    uint64_t v37 = v31 + v32[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v37, 1, v34)) {
      v36(v37, v34);
    }
  }
  uint64_t v38 = v62 & ~v65;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_1C1515FDC();
  uint64_t v40 = *(void *)(v39 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v1 + v63, 1, v39)) {
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v1 + v63, v39);
  }
  uint64_t v41 = v1 + v38;
  if (*(void *)(v1 + v38 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v1 + v38);
  }
  uint64_t v42 = (id *)(v41 + v9[10]);
  uint64_t v43 = type metadata accessor for FormatTransformKnobs();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v42, 1, v43))
  {
    uint64_t v44 = v9;

    uint64_t v45 = (int *)type metadata accessor for FeedContext();
    uint64_t v46 = (char *)v42 + v45[5];
    uint64_t v47 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v46, 1, v47))
    {
      uint64_t v48 = &v46[*(int *)(v47 + 20)];
      uint64_t v49 = sub_1C151631C();
      (*(void (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v42 + v45[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42 + *(int *)(v43 + 20));
    uint64_t v9 = v44;
  }
  uint64_t v50 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v51 = (char *)v42 + *(int *)(v50 + 40);
  uint64_t v52 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v51, 1, v52))
  {
    uint64_t v53 = &v51[*(int *)(v52 + 24)];
    uint64_t v54 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v53, 1, v54))
    {
      swift_bridgeObjectRelease();
      uint64_t v55 = v9;
      uint64_t v56 = &v53[*(int *)(v54 + 24)];
      uint64_t v57 = sub_1C1516D9C();
      uint64_t v58 = v56;
      uint64_t v9 = v55;
      (*(void (**)(char *, uint64_t))(*(void *)(v57 - 8) + 8))(v58, v57);
      swift_bridgeObjectRelease();
    }
    if (*(void *)&v51[*(int *)(v52 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0158A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v3;
  sub_1BFEBC130();
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v9 = *(void *)(*(void *)(v7 - 8) + 64);
  sub_1BFF00BEC();
  unint64_t v11 = (v8 + v9 + *(unsigned __int8 *)(*(void *)(v10 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v12 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v13 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v14 = v11 + v12 + v13;
  uint64_t v15 = *(void *)(v2 + 16);
  uint64_t v16 = v2 + v8;
  uint64_t v17 = v2 + v11;
  uint64_t v18 = v2 + (v14 & ~v13);
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v19;
  *uint64_t v19 = v5;
  v19[1] = sub_1C005E7F4;
  return sub_1C013CA28(a1, a2, v15, v16, v17, v18);
}

uint64_t sub_1C0158BFC(uint64_t a1, uint64_t a2)
{
  sub_1BFF00BEC();
  unint64_t v7 = (*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for FormatServiceOptions() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(void *)(v2 + 16);
  uint64_t v12 = v2 + v7;
  uint64_t v13 = v2 + (v10 & ~v9);
  unint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v14;
  *unint64_t v14 = v3;
  v14[1] = sub_1C005E7F4;
  return sub_1C01437C4(a1, a2, v11, v12, v13);
}

void sub_1C0158D58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0158DBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1C0158E24()
{
  if (!qword_1EB886938)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB886938);
    }
  }
}

void *sub_1C0158E88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v97 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *uint64_t v97 = *a2;
    uint64_t v97 = (void *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    unint64_t v8 = (char *)a2 + v6;
    sub_1BFEBC130();
    id v96 = v7;
    uint64_t v94 = a3;
    uint64_t v95 = a2;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = *((void *)v8 + 1);
      *uint64_t v7 = *(void *)v8;
      v7[1] = v9;
      uint64_t v10 = *((void *)v8 + 3);
      v7[2] = *((void *)v8 + 2);
      v7[3] = v10;
      uint64_t v11 = v7;
      uint64_t v12 = *((void *)v8 + 5);
      v11[4] = *((void *)v8 + 4);
      v11[5] = v12;
      *((_WORD *)v11 + 24) = *((_WORD *)v8 + 24);
      uint64_t v13 = *((void *)v8 + 8);
      v11[7] = *((void *)v8 + 7);
      v11[8] = v13;
      uint64_t v14 = *((void *)v8 + 10);
      v11[9] = *((void *)v8 + 9);
      v11[10] = v14;
      uint64_t v15 = *((void *)v8 + 12);
      v11[11] = *((void *)v8 + 11);
      v11[12] = v15;
      uint64_t v86 = *((void *)v8 + 14);
      v11[13] = *((void *)v8 + 13);
      v11[14] = v86;
      uint64_t v89 = *((void *)v8 + 16);
      v11[15] = *((void *)v8 + 15);
      v11[16] = v89;
      uint64_t v16 = *((void *)v8 + 18);
      v11[17] = *((void *)v8 + 17);
      v11[18] = v16;
      v11[19] = *((void *)v8 + 19);
      uint64_t v84 = v8 + 160;
      uint64_t v85 = v11 + 20;
      unint64_t v91 = *((void *)v8 + 21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v91 >= 2)
      {
        uint64_t v17 = v96;
        if (v91 == 2)
        {
          _OWORD *v85 = *v84;
        }
        else
        {
          *((unsigned char *)v96 + 160) = *(unsigned char *)v84;
          v96[21] = v91;
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        _OWORD *v85 = *v84;
        uint64_t v17 = v96;
      }
      uint64_t v92 = (int *)type metadata accessor for FormatPackage();
      uint64_t v38 = v92[23];
      uint64_t v39 = (void *)((char *)v17 + v38);
      uint64_t v40 = &v8[v38];
      uint64_t v41 = *(void *)&v8[v38 + 8];
      *uint64_t v39 = *(void *)&v8[v38];
      v39[1] = v41;
      uint64_t v42 = type metadata accessor for FormatCompilerOptions(0);
      uint64_t v43 = *(int *)(v42 + 24);
      uint64_t v44 = (char *)v39 + v43;
      uint64_t v45 = &v40[v43];
      uint64_t v46 = *(void *)&v40[v43 + 8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46 == 1)
      {
        long long v47 = *((_OWORD *)v45 + 1);
        *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
        *((_OWORD *)v44 + 1) = v47;
        *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
      }
      else
      {
        *(void *)uint64_t v44 = *(void *)v45;
        *((void *)v44 + 1) = v46;
        uint64_t v48 = *((void *)v45 + 3);
        *((void *)v44 + 2) = *((void *)v45 + 2);
        *((void *)v44 + 3) = v48;
        uint64_t v49 = *((void *)v45 + 5);
        *((void *)v44 + 4) = *((void *)v45 + 4);
        *((void *)v44 + 5) = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v50 = v42;
      uint64_t v51 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v52 = &v44[v51];
      uint64_t v53 = &v45[v51];
      uint64_t v54 = sub_1C1518CDC();
      uint64_t v55 = *(void *)(v54 - 8);
      uint64_t v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
      if (v93(v53, 1, v54))
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v52, v53, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v53, v54);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
      uint64_t v57 = *(int *)(v50 + 28);
      uint64_t v58 = (char *)v39 + v57;
      uint64_t v59 = &v40[v57];
      uint64_t v87 = v55;
      if (v93(&v40[v57], 1, v54))
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v58, v59, v54);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v58, 0, 1, v54);
      }
      *(void *)((char *)v39 + *(int *)(v50 + 32)) = *(void *)&v40[*(int *)(v50 + 32)];
      uint64_t v61 = v92[24];
      uint64_t v62 = (char *)v96 + v61;
      uint64_t v63 = &v8[v61];
      uint64_t v64 = sub_1C151928C();
      uint64_t v90 = *(void *)(v64 - 8);
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
      swift_bridgeObjectRetain();
      v65(v62, v63, v64);
      uint64_t v66 = v92[25];
      uint64_t v67 = (char *)v96 + v66;
      uint64_t v68 = &v8[v66];
      uint64_t v88 = v65;
      if (v93(&v8[v66], 1, v54))
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v67, v68, v54);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v67, 0, 1, v54);
      }
      sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      uint64_t v71 = *(int *)(v70 + 48);
      uint64_t v72 = (char *)v96 + v71;
      long long v73 = &v8[v71];
      uint64_t v74 = *(void *)&v8[v71 + 8];
      *(void *)uint64_t v72 = *(void *)&v8[v71];
      *((void *)v72 + 1) = v74;
      uint64_t v75 = (int *)type metadata accessor for FormatMetadata();
      uint64_t v76 = v75[5];
      uint64_t v77 = &v72[v76];
      uint64_t v78 = &v73[v76];
      swift_bridgeObjectRetain();
      v88(v77, v78, v64);
      v88(&v72[v75[6]], &v73[v75[6]], v64);
      uint64_t v79 = v75[7];
      uint64_t v80 = &v72[v79];
      uint64_t v81 = &v73[v79];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(&v73[v79], 1, v64))
      {
        sub_1BFEC0CE8(0);
        memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
      }
      else
      {
        v88(v80, v81, v64);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v80, 0, 1, v64);
      }
      uint64_t v37 = v94;
      uint64_t v36 = v95;
      *(void *)&v72[v75[8]] = *(void *)&v73[v75[8]];
      *(void *)&v72[v75[9]] = *(void *)&v73[v75[9]];
      *(void *)&v72[v75[10]] = *(void *)&v73[v75[10]];
      *(void *)&v72[v75[11]] = *(void *)&v73[v75[11]];
    }
    else
    {
      uint64_t v19 = sub_1C1515FDC();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v7, v8, v19);
      sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      uint64_t v21 = *(int *)(v20 + 48);
      uint64_t v22 = (char *)v7 + v21;
      uint64_t v23 = &v8[v21];
      uint64_t v24 = *(void *)&v8[v21 + 8];
      *(void *)uint64_t v22 = *(void *)&v8[v21];
      *((void *)v22 + 1) = v24;
      uint64_t v25 = (int *)type metadata accessor for FormatMetadata();
      uint64_t v26 = v25[5];
      uint64_t v27 = &v22[v26];
      uint64_t v28 = &v23[v26];
      uint64_t v29 = sub_1C151928C();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
      swift_bridgeObjectRetain();
      v31(v27, v28, v29);
      v31(&v22[v25[6]], &v23[v25[6]], v29);
      uint64_t v32 = v25[7];
      uint64_t v33 = &v22[v32];
      uint64_t v34 = &v23[v32];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(&v23[v32], 1, v29))
      {
        sub_1BFEC0CE8(0);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        v31(v33, v34, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v33, 0, 1, v29);
      }
      uint64_t v37 = v94;
      uint64_t v36 = v95;
      *(void *)&v22[v25[8]] = *(void *)&v23[v25[8]];
      *(void *)&v22[v25[9]] = *(void *)&v23[v25[9]];
      *(void *)&v22[v25[10]] = *(void *)&v23[v25[10]];
      *(void *)&v22[v25[11]] = *(void *)&v23[v25[11]];
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    *(void *)((char *)v97 + *(int *)(v37 + 24)) = *(void *)((char *)v36 + *(int *)(v37 + 24));
  }
  swift_retain();
  return v97;
}

uint64_t sub_1C015983C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  sub_1BFEBC130();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v2 + 168) >= 3uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v3 = (int *)type metadata accessor for FormatPackage();
    uint64_t v4 = v2 + v3[23];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = type metadata accessor for FormatCompilerOptions(0);
    uint64_t v6 = v4 + *(int *)(v5 + 24);
    if (*(void *)(v6 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v7 = v6 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    uint64_t v8 = sub_1C1518CDC();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    }
    uint64_t v11 = v4 + *(int *)(v5 + 28);
    if (!v10(v11, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t v31 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = v2 + v3[24];
    uint64_t v13 = sub_1C151928C();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v15(v12, v13);
    uint64_t v16 = v2 + v3[25];
    if (!v10(v16, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v16, v8);
    }
    sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v18 = v2 + *(int *)(v17 + 48);
    swift_bridgeObjectRelease();
    uint64_t v19 = (int *)type metadata accessor for FormatMetadata();
    v15(v18 + v19[5], v13);
    v15(v18 + v19[6], v13);
    uint64_t v20 = v18 + v19[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v20, 1, v13)) {
      v15(v20, v13);
    }
  }
  else
  {
    uint64_t v21 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v2, v21);
    sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v23 = v2 + *(int *)(v22 + 48);
    swift_bridgeObjectRelease();
    uint64_t v24 = (int *)type metadata accessor for FormatMetadata();
    uint64_t v25 = v23 + v24[5];
    uint64_t v26 = sub_1C151928C();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v28(v25, v26);
    v28(v23 + v24[6], v26);
    uint64_t v29 = v23 + v24[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v29, 1, v26)) {
      v28(v29, v26);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void *sub_1C0159D60(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  sub_1BFEBC130();
  uint64_t v95 = v6;
  uint64_t v92 = a2;
  uint64_t v93 = a3;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *((void *)v7 + 1);
    *(void *)uint64_t v6 = *(void *)v7;
    *((void *)v6 + 1) = v8;
    uint64_t v9 = *((void *)v7 + 3);
    uint64_t v10 = v6;
    *((void *)v6 + 2) = *((void *)v7 + 2);
    *((void *)v6 + 3) = v9;
    uint64_t v11 = *((void *)v7 + 5);
    *((void *)v6 + 4) = *((void *)v7 + 4);
    *((void *)v6 + 5) = v11;
    *((_WORD *)v6 + 24) = *((_WORD *)v7 + 24);
    uint64_t v12 = *((void *)v7 + 8);
    *((void *)v6 + 7) = *((void *)v7 + 7);
    *((void *)v6 + 8) = v12;
    uint64_t v13 = *((void *)v7 + 10);
    *((void *)v6 + 9) = *((void *)v7 + 9);
    *((void *)v6 + 10) = v13;
    uint64_t v14 = *((void *)v7 + 12);
    *((void *)v10 + 11) = *((void *)v7 + 11);
    *((void *)v10 + 12) = v14;
    uint64_t v84 = *((void *)v7 + 14);
    *((void *)v10 + 13) = *((void *)v7 + 13);
    *((void *)v10 + 14) = v84;
    uint64_t v86 = *((void *)v7 + 16);
    *((void *)v10 + 15) = *((void *)v7 + 15);
    *((void *)v10 + 16) = v86;
    uint64_t v15 = *((void *)v7 + 18);
    *((void *)v10 + 17) = *((void *)v7 + 17);
    *((void *)v10 + 18) = v15;
    *((void *)v10 + 19) = *((void *)v7 + 19);
    uint64_t v82 = v7 + 160;
    uint64_t v83 = v10 + 160;
    unint64_t v89 = *((void *)v7 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v89 >= 2)
    {
      uint64_t v16 = v95;
      if (v89 == 2)
      {
        *uint64_t v83 = *v82;
      }
      else
      {
        v95[160] = *(unsigned char *)v82;
        *((void *)v95 + 21) = v89;
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      *uint64_t v83 = *v82;
      uint64_t v16 = v95;
    }
    unint64_t v91 = (int *)type metadata accessor for FormatPackage();
    uint64_t v36 = v91[23];
    uint64_t v37 = &v16[v36];
    uint64_t v38 = &v7[v36];
    uint64_t v39 = *(void *)&v7[v36 + 8];
    *(void *)uint64_t v37 = *(void *)&v7[v36];
    *((void *)v37 + 1) = v39;
    uint64_t v40 = (int *)type metadata accessor for FormatCompilerOptions(0);
    uint64_t v41 = v40[6];
    uint64_t v42 = &v37[v41];
    uint64_t v43 = &v38[v41];
    uint64_t v44 = *(void *)&v38[v41 + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v44 == 1)
    {
      long long v45 = *((_OWORD *)v43 + 1);
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v45;
      *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
    }
    else
    {
      *(void *)uint64_t v42 = *(void *)v43;
      *((void *)v42 + 1) = v44;
      uint64_t v46 = *((void *)v43 + 3);
      *((void *)v42 + 2) = *((void *)v43 + 2);
      *((void *)v42 + 3) = v46;
      uint64_t v47 = *((void *)v43 + 5);
      *((void *)v42 + 4) = *((void *)v43 + 4);
      *((void *)v42 + 5) = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t v48 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    uint64_t v49 = &v42[v48];
    uint64_t v50 = &v43[v48];
    uint64_t v51 = sub_1C1518CDC();
    uint64_t v52 = *(void *)(v51 - 8);
    uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
    if (v53(v50, 1, v51))
    {
      sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v49, v50, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    uint64_t v55 = v40[7];
    uint64_t v56 = &v37[v55];
    uint64_t v57 = &v38[v55];
    uint64_t v85 = v52;
    uint64_t v90 = v53;
    if (v53(&v38[v55], 1, v51))
    {
      sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v56, v57, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v56, 0, 1, v51);
    }
    *(void *)&v37[v40[8]] = *(void *)&v38[v40[8]];
    uint64_t v59 = v91[24];
    uint64_t v60 = &v95[v59];
    uint64_t v61 = &v7[v59];
    uint64_t v62 = sub_1C151928C();
    uint64_t v87 = *(void *)(v62 - 8);
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
    swift_bridgeObjectRetain();
    v63(v60, v61, v62);
    uint64_t v64 = v91[25];
    uint64_t v65 = &v95[v64];
    uint64_t v66 = &v7[v64];
    uint64_t v88 = v63;
    if (v90(&v7[v64], 1, v51))
    {
      sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v65, v66, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v65, 0, 1, v51);
    }
    sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v69 = *(int *)(v68 + 48);
    uint64_t v70 = &v95[v69];
    uint64_t v71 = &v7[v69];
    uint64_t v72 = *(void *)&v7[v69 + 8];
    *(void *)uint64_t v70 = *(void *)&v7[v69];
    *((void *)v70 + 1) = v72;
    long long v73 = (int *)type metadata accessor for FormatMetadata();
    uint64_t v74 = v73[5];
    uint64_t v75 = &v70[v74];
    uint64_t v76 = &v71[v74];
    swift_bridgeObjectRetain();
    v88(v75, v76, v62);
    v88(&v70[v73[6]], &v71[v73[6]], v62);
    uint64_t v77 = v73[7];
    uint64_t v78 = &v70[v77];
    uint64_t v79 = &v71[v77];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(&v71[v77], 1, v62))
    {
      sub_1BFEC0CE8(0);
      memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
    }
    else
    {
      v88(v78, v79, v62);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v78, 0, 1, v62);
    }
    uint64_t v35 = v93;
    *(void *)&v70[v73[8]] = *(void *)&v71[v73[8]];
    *(void *)&v70[v73[9]] = *(void *)&v71[v73[9]];
    *(void *)&v70[v73[10]] = *(void *)&v71[v73[10]];
    *(void *)&v70[v73[11]] = *(void *)&v71[v73[11]];
    uint64_t v34 = v92;
  }
  else
  {
    uint64_t v17 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v6, v7, v17);
    sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v19 = *(int *)(v18 + 48);
    uint64_t v20 = &v6[v19];
    uint64_t v21 = &v7[v19];
    uint64_t v22 = *(void *)&v7[v19 + 8];
    *(void *)uint64_t v20 = *(void *)&v7[v19];
    *((void *)v20 + 1) = v22;
    uint64_t v23 = (int *)type metadata accessor for FormatMetadata();
    uint64_t v24 = v23[5];
    uint64_t v25 = &v20[v24];
    uint64_t v26 = &v21[v24];
    uint64_t v27 = sub_1C151928C();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    swift_bridgeObjectRetain();
    v29(v25, v26, v27);
    v29(&v20[v23[6]], &v21[v23[6]], v27);
    uint64_t v30 = v23[7];
    uint64_t v31 = &v20[v30];
    uint64_t v32 = &v21[v30];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(&v21[v30], 1, v27))
    {
      sub_1BFEC0CE8(0);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v29(v31, v32, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v31, 0, 1, v27);
    }
    uint64_t v34 = v92;
    *(void *)&v20[v23[8]] = *(void *)&v21[v23[8]];
    *(void *)&v20[v23[9]] = *(void *)&v21[v23[9]];
    *(void *)&v20[v23[10]] = *(void *)&v21[v23[10]];
    *(void *)&v20[v23[11]] = *(void *)&v21[v23[11]];
    uint64_t v35 = v93;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(v35 + 24)) = *(void *)((char *)v34 + *(int *)(v35 + 24));
  swift_retain();
  return a1;
}

void *sub_1C015A6BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_1BFDDF774((uint64_t)a1 + v6, (uint64_t (*)(void))sub_1BFEBC130);
    sub_1BFEBC130();
    uint64_t v84 = v7;
    uint64_t v82 = v5;
    uint64_t v83 = v3;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v80 = v4;
      uint64_t v12 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
      sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      uint64_t v14 = *(int *)(v13 + 48);
      uint64_t v15 = &v7[v14];
      uint64_t v16 = &v8[v14];
      *(void *)uint64_t v15 = *(void *)&v8[v14];
      *((void *)v15 + 1) = *(void *)&v8[v14 + 8];
      uint64_t v17 = (int *)type metadata accessor for FormatMetadata();
      uint64_t v18 = v17[5];
      uint64_t v19 = &v15[v18];
      uint64_t v20 = &v16[v18];
      uint64_t v21 = sub_1C151928C();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
      swift_bridgeObjectRetain();
      v23(v19, v20, v21);
      v23(&v15[v17[6]], &v16[v17[6]], v21);
      uint64_t v24 = v17[7];
      uint64_t v25 = &v15[v24];
      uint64_t v26 = &v16[v24];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(&v16[v24], 1, v21))
      {
        sub_1BFEC0CE8(0);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        v23(v25, v26, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
      }
      uint64_t v4 = v80;
      uint64_t v5 = v82;
      *(void *)&v15[v17[8]] = *(void *)&v16[v17[8]];
      *(void *)&v15[v17[9]] = *(void *)&v16[v17[9]];
      *(void *)&v15[v17[10]] = *(void *)&v16[v17[10]];
      *(void *)&v15[v17[11]] = *(void *)&v16[v17[11]];
      uint64_t v3 = v83;
      goto LABEL_29;
    }
    *(void *)uint64_t v7 = *(void *)v8;
    *((void *)v7 + 1) = *((void *)v8 + 1);
    *((void *)v7 + 2) = *((void *)v8 + 2);
    *((void *)v7 + 3) = *((void *)v8 + 3);
    *((void *)v7 + 4) = *((void *)v8 + 4);
    *((void *)v7 + 5) = *((void *)v8 + 5);
    v7[48] = v8[48];
    v7[49] = v8[49];
    *((void *)v7 + 7) = *((void *)v8 + 7);
    *((void *)v7 + 8) = *((void *)v8 + 8);
    *((void *)v7 + 9) = *((void *)v8 + 9);
    *((void *)v7 + 10) = *((void *)v8 + 10);
    *((void *)v7 + 11) = *((void *)v8 + 11);
    *((void *)v7 + 12) = *((void *)v8 + 12);
    *((void *)v7 + 13) = *((void *)v8 + 13);
    *((void *)v7 + 14) = *((void *)v8 + 14);
    *((void *)v7 + 15) = *((void *)v8 + 15);
    *((void *)v7 + 16) = *((void *)v8 + 16);
    *((void *)v7 + 17) = *((void *)v8 + 17);
    *((void *)v7 + 18) = *((void *)v8 + 18);
    *((void *)v7 + 19) = *((void *)v8 + 19);
    long long v73 = (long long *)(v8 + 160);
    uint64_t v74 = v7 + 160;
    unint64_t v79 = *((void *)v8 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v79 >= 2)
    {
      uint64_t v11 = v7 + 160;
      uint64_t v9 = v4;
      if (v79 != 2)
      {
        v84[160] = v8[160];
        *((void *)v84 + 21) = *((void *)v8 + 21);
        swift_bridgeObjectRetain();
LABEL_13:
        uint64_t v78 = (int *)type metadata accessor for FormatPackage();
        uint64_t v28 = v78[23];
        uint64_t v29 = &v84[v28];
        uint64_t v30 = &v8[v28];
        *(void *)uint64_t v29 = *(void *)&v8[v28];
        *((void *)v29 + 1) = *(void *)&v8[v28 + 8];
        uint64_t v31 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v32 = v31[6];
        uint64_t v33 = &v29[v32];
        uint64_t v34 = &v30[v32];
        uint64_t v35 = *(void *)&v30[v32 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v35 == 1)
        {
          long long v36 = *(_OWORD *)v34;
          long long v37 = *((_OWORD *)v34 + 2);
          *((_OWORD *)v33 + 1) = *((_OWORD *)v34 + 1);
          *((_OWORD *)v33 + 2) = v37;
          *(_OWORD *)uint64_t v33 = v36;
        }
        else
        {
          *(void *)uint64_t v33 = *(void *)v34;
          *((void *)v33 + 1) = *((void *)v34 + 1);
          *((void *)v33 + 2) = *((void *)v34 + 2);
          *((void *)v33 + 3) = *((void *)v34 + 3);
          *((void *)v33 + 4) = *((void *)v34 + 4);
          *((void *)v33 + 5) = *((void *)v34 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v4 = v9;
        uint64_t v38 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v39 = &v33[v38];
        uint64_t v40 = &v34[v38];
        uint64_t v41 = sub_1C1518CDC();
        uint64_t v42 = *(void *)(v41 - 8);
        uint64_t v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
        if (v81(v40, 1, v41))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
        }
        uint64_t v44 = v31[7];
        long long v45 = &v29[v44];
        uint64_t v46 = &v30[v44];
        uint64_t v75 = v42;
        if (v81(&v30[v44], 1, v41))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v45, v46, v41);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v45, 0, 1, v41);
        }
        *(void *)&v29[v31[8]] = *(void *)&v30[v31[8]];
        uint64_t v48 = v78[24];
        uint64_t v49 = &v84[v48];
        uint64_t v50 = &v8[v48];
        uint64_t v51 = sub_1C151928C();
        uint64_t v77 = *(void *)(v51 - 8);
        uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
        uint64_t v53 = v51;
        swift_bridgeObjectRetain();
        uint64_t v54 = v49;
        uint64_t v55 = v52;
        v52(v54, v50, v53);
        uint64_t v56 = v78[25];
        uint64_t v57 = &v84[v56];
        uint64_t v58 = &v8[v56];
        uint64_t v76 = v55;
        if (v81(&v8[v56], 1, v41))
        {
          sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v57, v58, v41);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v57, 0, 1, v41);
        }
        sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
        uint64_t v61 = *(int *)(v60 + 48);
        uint64_t v62 = &v84[v61];
        uint64_t v63 = &v8[v61];
        *(void *)uint64_t v62 = *(void *)&v8[v61];
        *((void *)v62 + 1) = *(void *)&v8[v61 + 8];
        uint64_t v64 = (int *)type metadata accessor for FormatMetadata();
        uint64_t v65 = v64[5];
        uint64_t v66 = &v62[v65];
        uint64_t v67 = &v63[v65];
        swift_bridgeObjectRetain();
        v76(v66, v67, v53);
        v76(&v62[v64[6]], &v63[v64[6]], v53);
        uint64_t v68 = v64[7];
        uint64_t v69 = &v62[v68];
        uint64_t v70 = &v63[v68];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(&v63[v68], 1, v53))
        {
          sub_1BFEC0CE8(0);
          memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          v76(v69, v70, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v69, 0, 1, v53);
        }
        uint64_t v5 = v82;
        uint64_t v3 = v83;
        *(void *)&v62[v64[8]] = *(void *)&v63[v64[8]];
        *(void *)&v62[v64[9]] = *(void *)&v63[v64[9]];
        *(void *)&v62[v64[10]] = *(void *)&v63[v64[10]];
        *(void *)&v62[v64[11]] = *(void *)&v63[v64[11]];
LABEL_29:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
      }
      long long v10 = *v73;
    }
    else
    {
      uint64_t v9 = v4;
      long long v10 = *v73;
      uint64_t v11 = v74;
    }
    *uint64_t v11 = v10;
    goto LABEL_13;
  }
LABEL_30:
  *(void *)((char *)v5 + *(int *)(v3 + 24)) = *(void *)((char *)v4 + *(int *)(v3 + 24));
  swift_retain();
  swift_release();
  return v5;
}

void *sub_1C015B0E8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(int *)(a3 + 20);
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  sub_1BFEBC130();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = *((_OWORD *)v5 + 1);
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
    *((_OWORD *)v4 + 1) = v6;
    *((_OWORD *)v4 + 2) = *((_OWORD *)v5 + 2);
    *((_WORD *)v4 + 24) = *((_WORD *)v5 + 24);
    *(_OWORD *)(v4 + 56) = *(_OWORD *)(v5 + 56);
    *(_OWORD *)(v4 + 72) = *(_OWORD *)(v5 + 72);
    *(_OWORD *)(v4 + 88) = *(_OWORD *)(v5 + 88);
    *(_OWORD *)(v4 + 104) = *(_OWORD *)(v5 + 104);
    *(_OWORD *)(v4 + 120) = *(_OWORD *)(v5 + 120);
    *(_OWORD *)(v4 + 136) = *(_OWORD *)(v5 + 136);
    *((void *)v4 + 19) = *((void *)v5 + 19);
    *((_OWORD *)v4 + 10) = *((_OWORD *)v5 + 10);
    uint64_t v66 = (int *)type metadata accessor for FormatPackage();
    uint64_t v7 = v66[23];
    uint64_t v8 = &v4[v7];
    uint64_t v9 = &v5[v7];
    *(_OWORD *)&v4[v7] = *(_OWORD *)&v5[v7];
    long long v10 = (int *)type metadata accessor for FormatCompilerOptions(0);
    uint64_t v11 = v10[6];
    uint64_t v12 = &v8[v11];
    uint64_t v13 = &v9[v11];
    long long v14 = *(_OWORD *)&v9[v11 + 16];
    *(_OWORD *)uint64_t v12 = *(_OWORD *)&v9[v11];
    *((_OWORD *)v12 + 1) = v14;
    *((_OWORD *)v12 + 2) = *(_OWORD *)&v9[v11 + 32];
    uint64_t v15 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    uint64_t v16 = &v12[v15];
    uint64_t v17 = &v13[v15];
    uint64_t v18 = sub_1C1518CDC();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v67(v17, 1, v18))
    {
      sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    uint64_t v37 = v10[7];
    uint64_t v38 = &v8[v37];
    uint64_t v39 = &v9[v37];
    if (v67(&v9[v37], 1, v18))
    {
      sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v38, v39, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v38, 0, 1, v18);
    }
    *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
    uint64_t v44 = v66[24];
    long long v45 = &v4[v44];
    uint64_t v46 = &v5[v44];
    uint64_t v47 = sub_1C151928C();
    uint64_t v65 = *(void *)(v47 - 8);
    uint64_t v48 = v46;
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
    v49(v45, v48, v47);
    uint64_t v50 = v66[25];
    uint64_t v51 = &v4[v50];
    uint64_t v52 = &v5[v50];
    if (v67(&v5[v50], 1, v18))
    {
      sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v51, v52, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v51, 0, 1, v18);
    }
    sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v55 = *(int *)(v54 + 48);
    uint64_t v56 = &v4[v55];
    uint64_t v57 = &v5[v55];
    *(_OWORD *)&v4[v55] = *(_OWORD *)&v5[v55];
    uint64_t v58 = (int *)type metadata accessor for FormatMetadata();
    v49(&v56[v58[5]], &v57[v58[5]], v47);
    v49(&v56[v58[6]], &v57[v58[6]], v47);
    uint64_t v59 = v58[7];
    uint64_t v60 = &v56[v59];
    uint64_t v61 = &v57[v59];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(&v57[v59], 1, v47))
    {
      sub_1BFEC0CE8(0);
      memcpy(v60, v61, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      v49(v60, v61, v47);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v60, 0, 1, v47);
    }
    *(void *)&v56[v58[8]] = *(void *)&v57[v58[8]];
    *(void *)&v56[v58[9]] = *(void *)&v57[v58[9]];
    *(void *)&v56[v58[10]] = *(void *)&v57[v58[10]];
    uint64_t v63 = v58[11];
    uint64_t v42 = &v56[v63];
    uint64_t v43 = &v57[v63];
  }
  else
  {
    uint64_t v21 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v4, v5, v21);
    sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
    uint64_t v23 = *(int *)(v22 + 48);
    uint64_t v24 = &v4[v23];
    uint64_t v25 = &v5[v23];
    *(_OWORD *)&v4[v23] = *(_OWORD *)&v5[v23];
    uint64_t v26 = (int *)type metadata accessor for FormatMetadata();
    uint64_t v27 = v26[5];
    uint64_t v28 = &v24[v27];
    uint64_t v29 = &v25[v27];
    uint64_t v30 = sub_1C151928C();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v32(v28, v29, v30);
    v32(&v24[v26[6]], &v25[v26[6]], v30);
    uint64_t v33 = v26[7];
    uint64_t v34 = &v24[v33];
    uint64_t v35 = &v25[v33];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(&v25[v33], 1, v30))
    {
      sub_1BFEC0CE8(0);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      v32(v34, v35, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
    }
    *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
    *(void *)&v24[v26[9]] = *(void *)&v25[v26[9]];
    *(void *)&v24[v26[10]] = *(void *)&v25[v26[10]];
    uint64_t v41 = v26[11];
    uint64_t v42 = &v24[v41];
    uint64_t v43 = &v25[v41];
  }
  *(void *)uint64_t v42 = *(void *)v43;
  swift_storeEnumTagMultiPayload();
  unint64_t result = a1;
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  return result;
}

void *sub_1C015B894(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v71 = a3;
    uint64_t v72 = a2;
    uint64_t v4 = *(int *)(a3 + 20);
    uint64_t v5 = (char *)a1 + v4;
    long long v6 = (char *)a2 + v4;
    sub_1BFDDF774((uint64_t)a1 + v4, (uint64_t (*)(void))sub_1BFEBC130);
    sub_1BFEBC130();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v7 = *((_OWORD *)v6 + 1);
      *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
      *((_OWORD *)v5 + 1) = v7;
      *((_OWORD *)v5 + 2) = *((_OWORD *)v6 + 2);
      *((_WORD *)v5 + 24) = *((_WORD *)v6 + 24);
      *(_OWORD *)(v5 + 56) = *(_OWORD *)(v6 + 56);
      *(_OWORD *)(v5 + 72) = *(_OWORD *)(v6 + 72);
      *(_OWORD *)(v5 + 88) = *(_OWORD *)(v6 + 88);
      *(_OWORD *)(v5 + 104) = *(_OWORD *)(v6 + 104);
      *(_OWORD *)(v5 + 120) = *(_OWORD *)(v6 + 120);
      *(_OWORD *)(v5 + 136) = *(_OWORD *)(v6 + 136);
      *((void *)v5 + 19) = *((void *)v6 + 19);
      *((_OWORD *)v5 + 10) = *((_OWORD *)v6 + 10);
      uint64_t v68 = (int *)type metadata accessor for FormatPackage();
      uint64_t v8 = v68[23];
      uint64_t v9 = &v5[v8];
      long long v10 = &v6[v8];
      *(_OWORD *)&v5[v8] = *(_OWORD *)&v6[v8];
      uint64_t v69 = (int *)type metadata accessor for FormatCompilerOptions(0);
      uint64_t v11 = v69[6];
      uint64_t v12 = &v9[v11];
      uint64_t v13 = &v10[v11];
      long long v14 = *(_OWORD *)&v10[v11 + 16];
      *(_OWORD *)uint64_t v12 = *(_OWORD *)&v10[v11];
      *((_OWORD *)v12 + 1) = v14;
      *((_OWORD *)v12 + 2) = *(_OWORD *)&v10[v11 + 32];
      uint64_t v15 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      uint64_t v16 = &v12[v15];
      uint64_t v17 = &v13[v15];
      uint64_t v18 = sub_1C1518CDC();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      if (v20(v17, 1, v18))
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      uint64_t v38 = v69[7];
      uint64_t v39 = &v9[v38];
      uint64_t v40 = &v10[v38];
      uint64_t v67 = v20;
      unsigned int v41 = v20(&v10[v38], 1, v18);
      uint64_t v3 = a1;
      if (v41)
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v39, v40, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v39, 0, 1, v18);
      }
      *(void *)&v9[v69[8]] = *(void *)&v10[v69[8]];
      uint64_t v46 = v68[24];
      uint64_t v47 = &v5[v46];
      uint64_t v48 = &v6[v46];
      uint64_t v49 = sub_1C151928C();
      uint64_t v70 = *(void *)(v49 - 8);
      uint64_t v50 = v48;
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
      v51(v47, v50, v49);
      uint64_t v52 = v68[25];
      uint64_t v53 = &v5[v52];
      uint64_t v54 = &v6[v52];
      if (v67(&v6[v52], 1, v18))
      {
        sub_1C0158D58(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v53, v54, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v53, 0, 1, v18);
      }
      sub_1C0157BA4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      uint64_t v57 = *(int *)(v56 + 48);
      uint64_t v58 = &v5[v57];
      uint64_t v59 = &v6[v57];
      *(_OWORD *)&v5[v57] = *(_OWORD *)&v6[v57];
      uint64_t v60 = (int *)type metadata accessor for FormatMetadata();
      v51(&v58[v60[5]], &v59[v60[5]], v49);
      v51(&v58[v60[6]], &v59[v60[6]], v49);
      uint64_t v61 = v60[7];
      uint64_t v62 = &v58[v61];
      uint64_t v63 = &v59[v61];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(&v59[v61], 1, v49))
      {
        sub_1BFEC0CE8(0);
        memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        v51(v62, v63, v49);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v62, 0, 1, v49);
      }
      *(void *)&v58[v60[8]] = *(void *)&v59[v60[8]];
      *(void *)&v58[v60[9]] = *(void *)&v59[v60[9]];
      *(void *)&v58[v60[10]] = *(void *)&v59[v60[10]];
      uint64_t v65 = v60[11];
      uint64_t v44 = &v58[v65];
      long long v45 = &v59[v65];
    }
    else
    {
      uint64_t v22 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v5, v6, v22);
      sub_1C0157BA4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0], (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      uint64_t v24 = *(int *)(v23 + 48);
      uint64_t v25 = &v5[v24];
      uint64_t v26 = &v6[v24];
      *(_OWORD *)&v5[v24] = *(_OWORD *)&v6[v24];
      uint64_t v27 = (int *)type metadata accessor for FormatMetadata();
      uint64_t v28 = v27[5];
      uint64_t v29 = &v25[v28];
      uint64_t v30 = &v26[v28];
      uint64_t v31 = sub_1C151928C();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v33(v29, v30, v31);
      v33(&v25[v27[6]], &v26[v27[6]], v31);
      uint64_t v34 = v27[7];
      uint64_t v35 = &v25[v34];
      uint64_t v36 = &v26[v34];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v26[v34], 1, v31))
      {
        sub_1BFEC0CE8(0);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v33(v35, v36, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
      }
      *(void *)&v25[v27[8]] = *(void *)&v26[v27[8]];
      *(void *)&v25[v27[9]] = *(void *)&v26[v27[9]];
      *(void *)&v25[v27[10]] = *(void *)&v26[v27[10]];
      uint64_t v43 = v27[11];
      uint64_t v44 = &v25[v43];
      long long v45 = &v26[v43];
      uint64_t v3 = a1;
    }
    *(void *)uint64_t v44 = *(void *)v45;
    swift_storeEnumTagMultiPayload();
    a3 = v71;
    a2 = v72;
  }
  *(void *)((char *)v3 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return v3;
}

uint64_t sub_1C015C084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C015C098);
}

uint64_t sub_1C015C098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFEBC130();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1C015C15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C015C170);
}

void sub_1C015C170(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1BFEBC130();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

void sub_1C015C230()
{
  sub_1BFEBC130();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1C015C2D8(void *a1, unint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  return sub_1C0153F60(a1, a2, a3, a4);
}

uint64_t sub_1C015C310()
{
  return sub_1C01571A4();
}

void sub_1C015C34C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

unsigned char *storeEnumTagSinglePayload for DebugFormatTestSubject(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C015C430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatTestSubject()
{
  return &type metadata for DebugFormatTestSubject;
}

unint64_t sub_1C015C46C()
{
  unint64_t result = qword_1EA197200;
  if (!qword_1EA197200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197200);
  }
  return result;
}

uint64_t sub_1C015C4C0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015C5D4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015C6A4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015C750()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015C7FC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015C8EC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015CA28()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015CB30()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015CBB8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015CCE4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015CDE4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015CEE4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015CFD4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015D0F8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015D1E8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015D300()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015D40C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015D514()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015D62C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015D750()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015D838()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015D94C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015DA70()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015DAF8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015DBFC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015DCE0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015DDE4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015DE64()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015DF1C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015E01C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015E13C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015E238()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015E2DC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015E38C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015E490()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015E538()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015E660()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015E760()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015E870()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015E994()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015EAA8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015EBA8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015ECBC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015EDA8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015EE58()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C015EF78()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C015F090(char a1)
{
  unint64_t result = 0xD000000000000017;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD00000000000001ALL;
    }
    else {
      return 0xD000000000000021;
    }
  }
  return result;
}

uint64_t sub_1C015F0F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1484B88(*a1, *a2);
}

uint64_t sub_1C015F0FC()
{
  return sub_1C015C6A4();
}

uint64_t sub_1C015F104()
{
  return sub_1C0449448();
}

uint64_t sub_1C015F10C()
{
  return sub_1C044E4D4();
}

uint64_t sub_1C015F114@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C015F2DC();
  *a1 = result;
  return result;
}

unint64_t sub_1C015F144@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C015F090(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C015F170(uint64_t a1)
{
  unint64_t v2 = sub_1C015F328();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C015F1C4(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C015F328();
  uint64_t v5 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C015F220(uint64_t a1)
{
  unint64_t v2 = sub_1C015F328();
  uint64_t v3 = MEMORY[0x1E4FAB458];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

unint64_t sub_1C015F274(char a1)
{
  unint64_t result = 0xD000000000000015;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000018;
    }
    else {
      return 0xD000000000000024;
    }
  }
  return result;
}

unint64_t sub_1C015F2D4()
{
  return sub_1C015F274(*v0);
}

uint64_t sub_1C015F2DC()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C015F328()
{
  unint64_t result = qword_1EA197208;
  if (!qword_1EA197208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197208);
  }
  return result;
}

uint64_t LayeredMediaRenderedViewModel.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t LayeredMediaRenderedViewModel.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LayeredMediaRenderedViewModel()
{
  return self;
}

uint64_t method lookup function for LayeredMediaRenderedViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaRenderedViewModel);
}

uint64_t sub_1C015F420(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
    return a1;
  }
  uint64_t v8 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v8;
  uint64_t v9 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v9;
  uint64_t v10 = a2[5];
  uint64_t v11 = a2[6];
  unsigned __int8 v12 = *((unsigned char *)a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C015F808(v10, v11, v12);
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(unsigned char *)(a1 + 56) = v12;
  uint64_t v13 = *(int *)(a3 + 28);
  long long v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)a2 + v13;
  sub_1C015F820();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16))
  {
    uint64_t v20 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v20))
    {
      sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
      memcpy(v14, v15, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_14:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v27 = sub_1C151928C();
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      v35(v14, v15, v27);
      sub_1BFF05D18();
      uint64_t v29 = v28;
      v35(&v14[*(int *)(v28 + 48)], &v15[*(int *)(v28 + 48)], v27);
      uint64_t v26 = *(int *)(v29 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v33 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v14, v15, v33);
        goto LABEL_13;
      }
      uint64_t v24 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v14, v15, v24);
      sub_1C015F8A0();
      uint64_t v26 = *(int *)(v25 + 48);
    }
    uint64_t v30 = &v14[v26];
    uint64_t v31 = &v15[v26];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v14, 0, 1, v20);
    goto LABEL_14;
  }
  uint64_t v19 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  return a1;
}

uint64_t sub_1C015F808(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1C015F820()
{
  if (!qword_1EA197210)
  {
    sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197210);
    }
  }
}

void sub_1C015F8A0()
{
  if (!qword_1EA197218)
  {
    sub_1C151928C();
    sub_1BFEFDD10(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA197218);
    }
  }
}

uint64_t type metadata accessor for FormatDerivedDataOptionReferenceResolution(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA197230);
}

uint64_t sub_1C015F958(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C015FB90(*(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  sub_1C015F820();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (result) {
    return result;
  }
  uint64_t v7 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v4, 1, v7);
  if (result) {
    return result;
  }
  type metadata accessor for FormatVersionRequirement.Value(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v10 = sub_1C151928C();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      v11(v4, v10);
      sub_1BFF05D18();
      v11(v4 + *(int *)(v12 + 48), v10);
      break;
    case 1:
      uint64_t v13 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v4, v13);
      sub_1C015F8A0();
      break;
    case 0:
      uint64_t v8 = sub_1C151928C();
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      return v9(v4, v8);
    default:
      return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C015FB90(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C015FBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 48);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C015F808(v8, v9, v10);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  sub_1C015F820();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v14))
  {
    uint64_t v18 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18))
    {
      sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
      memcpy(v12, v13, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_12:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v25 = sub_1C151928C();
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      v33(v12, v13, v25);
      sub_1BFF05D18();
      uint64_t v27 = v26;
      v33(&v12[*(int *)(v26 + 48)], &v13[*(int *)(v26 + 48)], v25);
      uint64_t v24 = *(int *)(v27 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v31 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v12, v13, v31);
        goto LABEL_11;
      }
      uint64_t v22 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v12, v13, v22);
      sub_1C015F8A0();
      uint64_t v24 = *(int *)(v23 + 48);
    }
    uint64_t v28 = &v12[v24];
    uint64_t v29 = &v13[v24];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v18);
    goto LABEL_12;
  }
  uint64_t v17 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
  return a1;
}

uint64_t sub_1C015FF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 56);
  sub_1C015F808(v6, v7, v8);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v8;
  sub_1C015FB90(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  sub_1C015F820();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v13, 1, v15);
  int v20 = v18(v14, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      uint64_t v21 = type metadata accessor for FormatVersionRequirement(0);
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21))
      {
        sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
        memcpy(v13, v14, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_24:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
        return a1;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v38 = sub_1C151928C();
        uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
        v66(v13, v14, v38);
        sub_1BFF05D18();
        uint64_t v40 = v39;
        v66(&v13[*(int *)(v39 + 48)], &v14[*(int *)(v39 + 48)], v38);
        uint64_t v37 = *(int *)(v40 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v43 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v13, v14, v43);
          goto LABEL_23;
        }
        uint64_t v35 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v13, v14, v35);
        sub_1C015F8A0();
        uint64_t v37 = *(int *)(v36 + 48);
      }
      unsigned int v41 = &v13[v37];
      uint64_t v42 = &v14[v37];
      *(void *)unsigned int v41 = *(void *)v42;
      *((void *)v41 + 1) = *((void *)v42 + 1);
      swift_bridgeObjectRetain();
LABEL_23:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v13, 0, 1, v21);
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v20)
  {
    sub_1C0164D80((uint64_t)v13, (uint64_t (*)(void))sub_1C015F820);
LABEL_7:
    uint64_t v24 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
LABEL_8:
    memcpy(v13, v14, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  uint64_t v25 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v13, 1, v25);
  int v29 = v27(v14, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      int v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 2)
      {
        uint64_t v51 = sub_1C151928C();
        uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
        v52(v13, v14, v51);
        sub_1BFF05D18();
        uint64_t v54 = v53;
        v52(&v13[*(int *)(v53 + 48)], &v14[*(int *)(v53 + 48)], v51);
        uint64_t v33 = *(int *)(v54 + 64);
      }
      else
      {
        if (v30 != 1)
        {
          uint64_t v57 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v13, v14, v57);
          goto LABEL_34;
        }
        uint64_t v31 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v13, v14, v31);
        sub_1C015F8A0();
        uint64_t v33 = *(int *)(v32 + 48);
      }
      uint64_t v55 = &v13[v33];
      uint64_t v56 = &v14[v33];
      *(void *)uint64_t v55 = *(void *)v56;
      *((void *)v55 + 1) = *((void *)v56 + 1);
      swift_bridgeObjectRetain();
LABEL_34:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v13, 0, 1, v25);
      return a1;
    }
LABEL_19:
    sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
    goto LABEL_8;
  }
  if (v29)
  {
    sub_1C0164D80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    goto LABEL_19;
  }
  if (a1 != a2)
  {
    sub_1C0164D80((uint64_t)v13, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v45 = swift_getEnumCaseMultiPayload();
    if (v45 == 2)
    {
      uint64_t v58 = sub_1C151928C();
      uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
      v59(v13, v14, v58);
      sub_1BFF05D18();
      uint64_t v61 = v60;
      v59(&v13[*(int *)(v60 + 48)], &v14[*(int *)(v60 + 48)], v58);
      uint64_t v62 = *(int *)(v61 + 64);
      uint64_t v63 = &v13[v62];
      uint64_t v64 = &v14[v62];
      *(void *)uint64_t v63 = *(void *)v64;
      *((void *)v63 + 1) = *((void *)v64 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v45 == 1)
      {
        uint64_t v46 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v13, v14, v46);
        sub_1C015F8A0();
        uint64_t v48 = *(int *)(v47 + 48);
        uint64_t v49 = &v13[v48];
        uint64_t v50 = &v14[v48];
        *(void *)uint64_t v49 = *(void *)v50;
        *((void *)v49 + 1) = *((void *)v50 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v65 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v13, v14, v65);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C0160780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  sub_1C015F820();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7))
  {
    uint64_t v11 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11))
    {
      sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
      memcpy(v5, v6, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_12:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v18 = sub_1C151928C();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
      v23(v5, v6, v18);
      sub_1BFF05D18();
      uint64_t v20 = v19;
      v23(&v5[*(int *)(v19 + 48)], &v6[*(int *)(v19 + 48)], v18);
      uint64_t v17 = *(int *)(v20 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v21 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v5, v6, v21);
        goto LABEL_11;
      }
      uint64_t v15 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v5, v6, v15);
      sub_1C015F8A0();
      uint64_t v17 = *(int *)(v16 + 48);
    }
    *(_OWORD *)&v5[v17] = *(_OWORD *)&v6[v17];
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v5, 0, 1, v11);
    goto LABEL_12;
  }
  uint64_t v10 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  memcpy(v5, v6, *(void *)(*(void *)(v10 - 8) + 64));
  return a1;
}

uint64_t sub_1C0160AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 56);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = v7;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v8;
  sub_1C015FB90(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  sub_1C015F820();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v13, 1, v15);
  int v20 = v18(v14, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      uint64_t v21 = type metadata accessor for FormatVersionRequirement(0);
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21))
      {
        sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
        memcpy(v13, v14, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_24:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
        return a1;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v38 = sub_1C151928C();
        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32);
        v55(v13, v14, v38);
        sub_1BFF05D18();
        uint64_t v40 = v39;
        v55(&v13[*(int *)(v39 + 48)], &v14[*(int *)(v39 + 48)], v38);
        uint64_t v37 = *(int *)(v40 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v41 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v13, v14, v41);
          goto LABEL_23;
        }
        uint64_t v35 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v13, v14, v35);
        sub_1C015F8A0();
        uint64_t v37 = *(int *)(v36 + 48);
      }
      *(_OWORD *)&v13[v37] = *(_OWORD *)&v14[v37];
LABEL_23:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v13, 0, 1, v21);
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v20)
  {
    sub_1C0164D80((uint64_t)v13, (uint64_t (*)(void))sub_1C015F820);
LABEL_7:
    uint64_t v24 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
LABEL_8:
    memcpy(v13, v14, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  uint64_t v25 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v13, 1, v25);
  int v29 = v27(v14, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      int v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 2)
      {
        uint64_t v46 = sub_1C151928C();
        uint64_t v56 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32);
        v56(v13, v14, v46);
        sub_1BFF05D18();
        uint64_t v48 = v47;
        v56(&v13[*(int *)(v47 + 48)], &v14[*(int *)(v47 + 48)], v46);
        uint64_t v33 = *(int *)(v48 + 64);
      }
      else
      {
        if (v30 != 1)
        {
          uint64_t v49 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v13, v14, v49);
          goto LABEL_34;
        }
        uint64_t v31 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v13, v14, v31);
        sub_1C015F8A0();
        uint64_t v33 = *(int *)(v32 + 48);
      }
      *(_OWORD *)&v13[v33] = *(_OWORD *)&v14[v33];
LABEL_34:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v13, 0, 1, v25);
      return a1;
    }
LABEL_19:
    sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
    goto LABEL_8;
  }
  if (v29)
  {
    sub_1C0164D80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    goto LABEL_19;
  }
  if (a1 != a2)
  {
    sub_1C0164D80((uint64_t)v13, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 2)
    {
      uint64_t v50 = sub_1C151928C();
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32);
      v51(v13, v14, v50);
      sub_1BFF05D18();
      uint64_t v53 = v52;
      v51(&v13[*(int *)(v52 + 48)], &v14[*(int *)(v52 + 48)], v50);
      *(_OWORD *)&v13[*(int *)(v53 + 64)] = *(_OWORD *)&v14[*(int *)(v53 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v43 == 1)
      {
        uint64_t v44 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v13, v14, v44);
        sub_1C015F8A0();
        *(_OWORD *)&v13[*(int *)(v45 + 48)] = *(_OWORD *)&v14[*(int *)(v45 + 48)];
      }
      else
      {
        uint64_t v54 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v13, v14, v54);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C0161290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01612A4);
}

uint64_t sub_1C01612A4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    unsigned __int8 v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0161354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0161368);
}

void *sub_1C0161368(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FormatDerivedDataResultOptionReference(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA197220);
}

uint64_t sub_1C0161430()
{
  uint64_t result = type metadata accessor for FormatDerivedDataOptionReferenceResolution(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C01614E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  sub_1C015F820();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
  {
    uint64_t v11 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_14:
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v18 = sub_1C151928C();
      uint64_t v26 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v18 - 8) + 16);
      v26(a1, a2, v18);
      sub_1BFF05D18();
      uint64_t v20 = v19;
      v26((uint64_t *)((char *)a1 + *(int *)(v19 + 48)), (uint64_t *)((char *)a2 + *(int *)(v19 + 48)), v18);
      uint64_t v17 = *(int *)(v20 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v24 = sub_1C151928C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        goto LABEL_13;
      }
      uint64_t v15 = sub_1C151928C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      sub_1C015F8A0();
      uint64_t v17 = *(int *)(v16 + 48);
    }
    uint64_t v21 = (uint64_t *)((char *)a1 + v17);
    uint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    goto LABEL_14;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

uint64_t sub_1C0161864(uint64_t a1)
{
  sub_1C015F820();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (result) {
    return result;
  }
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
  if (result) {
    return result;
  }
  type metadata accessor for FormatVersionRequirement.Value(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v7 = sub_1C151928C();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v8(a1, v7);
      sub_1BFF05D18();
      v8(a1 + *(int *)(v9 + 48), v7);
      break;
    case 1:
      uint64_t v10 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
      sub_1C015F8A0();
      break;
    case 0:
      uint64_t v5 = sub_1C151928C();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v6(a1, v5);
    default:
      return result;
  }
  return swift_bridgeObjectRelease();
}

char *sub_1C0161A6C(char *a1, char *a2, uint64_t a3)
{
  sub_1C015F820();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    uint64_t v9 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_12:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v16 = sub_1C151928C();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      v24(a1, a2, v16);
      sub_1BFF05D18();
      uint64_t v18 = v17;
      v24(&a1[*(int *)(v17 + 48)], &a2[*(int *)(v17 + 48)], v16);
      uint64_t v15 = *(int *)(v18 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v22 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        goto LABEL_11;
      }
      uint64_t v13 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      sub_1C015F8A0();
      uint64_t v15 = *(int *)(v14 + 48);
    }
    uint64_t v19 = &a1[v15];
    uint64_t v20 = &a2[v15];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    goto LABEL_12;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1C0161DB4(char *a1, char *a2, uint64_t a3)
{
  sub_1C015F820();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for FormatVersionRequirement(0);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_24:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        return a1;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v30 = sub_1C151928C();
        uint64_t v58 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
        v58(a1, a2, v30);
        sub_1BFF05D18();
        uint64_t v32 = v31;
        v58(&a1[*(int *)(v31 + 48)], &a2[*(int *)(v31 + 48)], v30);
        uint64_t v28 = *(int *)(v32 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v35 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
          goto LABEL_23;
        }
        uint64_t v26 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
        sub_1C015F8A0();
        uint64_t v28 = *(int *)(v27 + 48);
      }
      uint64_t v33 = &a1[v28];
      uint64_t v34 = &a2[v28];
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = *((void *)v34 + 1);
      swift_bridgeObjectRetain();
LABEL_23:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v11)
  {
    sub_1C0164D80((uint64_t)a1, (uint64_t (*)(void))sub_1C015F820);
LABEL_7:
    size_t v15 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v15);
    return a1;
  }
  uint64_t v16 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(a1, 1, v16);
  int v20 = v18(a2, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      int v21 = swift_getEnumCaseMultiPayload();
      if (v21 == 2)
      {
        uint64_t v43 = sub_1C151928C();
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
        v44(a1, a2, v43);
        sub_1BFF05D18();
        uint64_t v46 = v45;
        v44(&a1[*(int *)(v45 + 48)], &a2[*(int *)(v45 + 48)], v43);
        uint64_t v24 = *(int *)(v46 + 64);
      }
      else
      {
        if (v21 != 1)
        {
          uint64_t v49 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
          goto LABEL_34;
        }
        uint64_t v22 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        sub_1C015F8A0();
        uint64_t v24 = *(int *)(v23 + 48);
      }
      uint64_t v47 = &a1[v24];
      uint64_t v48 = &a2[v24];
      *(void *)uint64_t v47 = *(void *)v48;
      *((void *)v47 + 1) = *((void *)v48 + 1);
      swift_bridgeObjectRetain();
LABEL_34:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
      return a1;
    }
LABEL_19:
    sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
    size_t v15 = *(void *)(*(void *)(v29 - 8) + 64);
    goto LABEL_8;
  }
  if (v20)
  {
    sub_1C0164D80((uint64_t)a1, type metadata accessor for FormatVersionRequirement);
    goto LABEL_19;
  }
  if (a1 != a2)
  {
    sub_1C0164D80((uint64_t)a1, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v37 = swift_getEnumCaseMultiPayload();
    if (v37 == 2)
    {
      uint64_t v50 = sub_1C151928C();
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
      v51(a1, a2, v50);
      sub_1BFF05D18();
      uint64_t v53 = v52;
      v51(&a1[*(int *)(v52 + 48)], &a2[*(int *)(v52 + 48)], v50);
      uint64_t v54 = *(int *)(v53 + 64);
      uint64_t v55 = &a1[v54];
      uint64_t v56 = &a2[v54];
      *(void *)uint64_t v55 = *(void *)v56;
      *((void *)v55 + 1) = *((void *)v56 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v37 == 1)
      {
        uint64_t v38 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
        sub_1C015F8A0();
        uint64_t v40 = *(int *)(v39 + 48);
        uint64_t v41 = &a1[v40];
        uint64_t v42 = &a2[v40];
        *(void *)uint64_t v41 = *(void *)v42;
        *((void *)v41 + 1) = *((void *)v42 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v57 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *sub_1C0162568(char *a1, char *a2, uint64_t a3)
{
  sub_1C015F820();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    uint64_t v9 = type metadata accessor for FormatVersionRequirement(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_12:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v16 = sub_1C151928C();
      int v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32);
      v21(a1, a2, v16);
      sub_1BFF05D18();
      uint64_t v18 = v17;
      v21(&a1[*(int *)(v17 + 48)], &a2[*(int *)(v17 + 48)], v16);
      uint64_t v15 = *(int *)(v18 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v19 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
        goto LABEL_11;
      }
      uint64_t v13 = sub_1C151928C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
      sub_1C015F8A0();
      uint64_t v15 = *(int *)(v14 + 48);
    }
    *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    goto LABEL_12;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1C01628A4(char *a1, char *a2, uint64_t a3)
{
  sub_1C015F820();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for FormatVersionRequirement(0);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_24:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        return a1;
      }
      type metadata accessor for FormatVersionRequirement.Value(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v30 = sub_1C151928C();
        uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32);
        v48(a1, a2, v30);
        sub_1BFF05D18();
        uint64_t v32 = v31;
        v48(&a1[*(int *)(v31 + 48)], &a2[*(int *)(v31 + 48)], v30);
        uint64_t v28 = *(int *)(v32 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v33 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
          goto LABEL_23;
        }
        uint64_t v26 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
        sub_1C015F8A0();
        uint64_t v28 = *(int *)(v27 + 48);
      }
      *(_OWORD *)&a1[v28] = *(_OWORD *)&a2[v28];
LABEL_23:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (v11)
  {
    sub_1C0164D80((uint64_t)a1, (uint64_t (*)(void))sub_1C015F820);
LABEL_7:
    size_t v15 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v15);
    return a1;
  }
  uint64_t v16 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(a1, 1, v16);
  int v20 = v18(a2, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      int v21 = swift_getEnumCaseMultiPayload();
      if (v21 == 2)
      {
        uint64_t v38 = sub_1C151928C();
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32);
        v39(a1, a2, v38);
        sub_1BFF05D18();
        uint64_t v41 = v40;
        v39(&a1[*(int *)(v40 + 48)], &a2[*(int *)(v40 + 48)], v38);
        uint64_t v24 = *(int *)(v41 + 64);
      }
      else
      {
        if (v21 != 1)
        {
          uint64_t v42 = sub_1C151928C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(a1, a2, v42);
          goto LABEL_34;
        }
        uint64_t v22 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
        sub_1C015F8A0();
        uint64_t v24 = *(int *)(v23 + 48);
      }
      *(_OWORD *)&a1[v24] = *(_OWORD *)&a2[v24];
LABEL_34:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
      return a1;
    }
LABEL_19:
    sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
    size_t v15 = *(void *)(*(void *)(v29 - 8) + 64);
    goto LABEL_8;
  }
  if (v20)
  {
    sub_1C0164D80((uint64_t)a1, type metadata accessor for FormatVersionRequirement);
    goto LABEL_19;
  }
  if (a1 != a2)
  {
    sub_1C0164D80((uint64_t)a1, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    int v35 = swift_getEnumCaseMultiPayload();
    if (v35 == 2)
    {
      uint64_t v43 = sub_1C151928C();
      uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32);
      v44(a1, a2, v43);
      sub_1BFF05D18();
      uint64_t v46 = v45;
      v44(&a1[*(int *)(v45 + 48)], &a2[*(int *)(v45 + 48)], v43);
      *(_OWORD *)&a1[*(int *)(v46 + 64)] = *(_OWORD *)&a2[*(int *)(v46 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v35 == 1)
      {
        uint64_t v36 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
        sub_1C015F8A0();
        *(_OWORD *)&a1[*(int *)(v37 + 48)] = *(_OWORD *)&a2[*(int *)(v37 + 48)];
      }
      else
      {
        uint64_t v47 = sub_1C151928C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(a1, a2, v47);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C0163008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C016301C);
}

uint64_t sub_1C016301C(uint64_t a1, uint64_t a2)
{
  sub_1C015F820();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C0163088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C016309C);
}

uint64_t sub_1C016309C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_1C015F820();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C016311C(uint64_t a1)
{
  sub_1C015F820();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1C0163184(uint64_t a1, uint64_t a2)
{
  sub_1C015F820();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

void sub_1C01631F4()
{
  sub_1C0164C20(319, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t sub_1C016329C()
{
  return sub_1C0164320(&qword_1EA197240, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataOptionReferenceResolution);
}

uint64_t sub_1C01632E4(long long *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v36 = a2;
  sub_1C0164C20(0, &qword_1EA197258, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataOption, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v34 - v6;
  uint64_t v35 = type metadata accessor for FormatDerivedDataOption();
  uint64_t v8 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  int v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v18 = a1[3];
  long long v43 = a1[2];
  long long v44 = v18;
  long long v19 = a1[1];
  long long v41 = *a1;
  long long v42 = v19;
  uint64_t v20 = *(void *)(*((void *)&v19 + 1) + 16);
  sub_1C0164C84((uint64_t)v3, (uint64_t)v17, type metadata accessor for FormatDerivedDataResultOptionReference);
  if (v20)
  {
    sub_1C0164D80((uint64_t)v17, type metadata accessor for FormatDerivedDataResultOptionReference);
  }
  else
  {
    uint64_t v21 = (uint64_t)&v17[*(int *)(v14 + 28)];
    sub_1C015F820();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
    LOBYTE(v21) = sub_1C0164490(v21, (uint64_t)v13);
    sub_1C0164D80((uint64_t)v13, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
    sub_1C0164D80((uint64_t)v17, type metadata accessor for FormatDerivedDataResultOptionReference);
    if ((v21 & 1) == 0)
    {
      sub_1C0164C20(0, (unint64_t *)&unk_1EA1A8940, type metadata accessor for FormatDerivedDataResultOptionReference, MEMORY[0x1E4FBBE00]);
      unint64_t v31 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1C1529AE0;
      sub_1C0164C84((uint64_t)v3, v32 + v31, type metadata accessor for FormatDerivedDataResultOptionReference);
      return v32;
    }
  }
  sub_1BFEFDD10(0, &qword_1EA197260, (uint64_t)&type metadata for FormatDerivedDataOptionReference, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v25 = v3[1];
  uint64_t v24 = v3[2];
  uint64_t v27 = v3[3];
  uint64_t v26 = v3[4];
  *(void *)(inited + 32) = v25;
  *(void *)(inited + 40) = v24;
  *(void *)(inited + 48) = v27;
  *(void *)(inited + 56) = v26;
  uint64_t v45 = inited;
  long long v37 = v41;
  long long v38 = v42;
  long long v39 = v43;
  long long v40 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = v36;
  sub_1C0D8A644(v25, v24, v36, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v35) == 1)
  {
    uint64_t v29 = sub_1C0164CEC((uint64_t)v7, &qword_1EA197258, (uint64_t (*)(uint64_t))type metadata accessor for FormatDerivedDataOption);
  }
  else
  {
    sub_1C0164DE0((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    if (*(void *)(*((void *)v10 + 6) + 16))
    {
      uint64_t v30 = swift_bridgeObjectRetain();
      sub_1C1047EFC(v30);
      uint64_t v29 = sub_1C0164D80((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
      uint64_t inited = v45;
    }
    else
    {
      uint64_t v29 = sub_1C0164D80((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    }
  }
  MEMORY[0x1F4188790](v29);
  *(&v34 - 4) = (uint64_t)&v41;
  *(&v34 - 3) = (uint64_t)v3;
  *(&v34 - 2) = v28;
  uint64_t v32 = sub_1C01820A4((void (*)(void *, uint64_t *))sub_1C0164D5C, (uint64_t)(&v34 - 6), inited);
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1C0163848@<X0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v49 = a5;
  uint64_t v50 = a4;
  uint64_t v10 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (unint64_t *)((char *)&v47 - v14);
  uint64_t v16 = *a1;
  uint64_t v17 = a1[1];
  uint64_t v18 = a1[2];
  uint64_t v54 = a1[3];
  uint64_t v55 = v16;
  uint64_t v56 = sub_1C0163B54(*((void *)a2 + 3), *(void *)a3);
  uint64_t v19 = *(void *)(a3 + 40);
  uint64_t v53 = *(void *)(a3 + 48);
  int v52 = *(unsigned __int8 *)(a3 + 56);
  uint64_t v20 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  uint64_t v21 = a3 + *(int *)(v20 + 28);
  sub_1C0164C84(v21, (uint64_t)v12, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  sub_1C015F820();
  int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v12, 1, v22);
  uint64_t v51 = v15;
  if (v23 == 1)
  {
    uint64_t v47 = v20;
    long long v24 = a2[1];
    long long v57 = *a2;
    long long v58 = v24;
    long long v25 = a2[3];
    long long v59 = a2[2];
    long long v60 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v26 = v15;
    uint64_t v27 = v18;
    uint64_t v48 = v18;
    uint64_t v28 = v53;
    unsigned __int8 v29 = v52;
    sub_1C015F808(v19, v53, v52);
    uint64_t v30 = v55;
    uint64_t v31 = v27;
    uint64_t v32 = v54;
    uint64_t v33 = v61;
    sub_1C0D8AA28(v55, v17, v31, v50, v26);
    uint64_t v34 = v30;
    unsigned __int8 v35 = v29;
    uint64_t v36 = v28;
    uint64_t v37 = v19;
    uint64_t v38 = v48;
    uint64_t v39 = (uint64_t)v51;
    if (v33)
    {
      sub_1C015FB90(v19, v36, v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v49 = v33;
      return result;
    }
    uint64_t v46 = v32;
    uint64_t v20 = v47;
  }
  else
  {
    sub_1C0164C84(v21, (uint64_t)v15, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
    uint64_t v41 = v18;
    uint64_t v42 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v37 = v19;
    uint64_t v43 = v19;
    uint64_t v44 = v53;
    unsigned __int8 v45 = v52;
    sub_1C015F808(v43, v53, v52);
    sub_1C0164CEC((uint64_t)v12, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
    uint64_t v46 = v54;
    uint64_t v34 = v55;
    unsigned __int8 v35 = v45;
    uint64_t v36 = v44;
    uint64_t v17 = v42;
    uint64_t v38 = v41;
    uint64_t v39 = (uint64_t)v51;
  }
  *(void *)a6 = v56;
  *(void *)(a6 + 8) = v34;
  *(void *)(a6 + 16) = v17;
  *(void *)(a6 + 24) = v38;
  *(void *)(a6 + 32) = v46;
  *(void *)(a6 + 40) = v37;
  *(void *)(a6 + 48) = v36;
  *(unsigned char *)(a6 + 56) = v35;
  return sub_1C0164DE0(v39, a6 + *(int *)(v20 + 28), type metadata accessor for FormatDerivedDataOptionReferenceResolution);
}

uint64_t sub_1C0163B54(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16) || !*(void *)(a2 + 16)) {
    return swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1C1048050(v2);
  return a1;
}

uint64_t sub_1C0163BB8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v2;
  swift_bridgeObjectRetain();
  sub_1C0B77348(a1, v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  sub_1C1475940(a1, v17);
  sub_1C1520DCC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C1520DCC();
  sub_1C151E77C();
  uint64_t v18 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  sub_1C0164C84((uint64_t)v2 + *(int *)(v18 + 28), (uint64_t)v15, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  sub_1C015F820();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v15, 1, v19) == 1) {
    return sub_1C1520DDC();
  }
  sub_1C0164368((uint64_t)v15, (uint64_t)v12);
  sub_1C1520DDC();
  sub_1C01643FC((uint64_t)v12, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v22) == 1)
  {
    sub_1C1520DDC();
  }
  else
  {
    sub_1C0164DE0((uint64_t)v9, (uint64_t)v6, type metadata accessor for FormatVersionRequirement);
    sub_1C1520DDC();
    sub_1C02E9D7C();
    sub_1C0164D80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1C0164CEC((uint64_t)v12, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1C0163F18(uint64_t a1, uint64_t a2)
{
  return sub_1C0164230(a1, a2, (void (*)(unsigned char *))sub_1C0163BB8);
}

uint64_t sub_1C0163F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0164294(a1, a2, a3, (void (*)(unsigned char *))sub_1C0163BB8);
}

uint64_t sub_1C0163F50()
{
  uint64_t v1 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0164C84(v0, (uint64_t)v13, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  sub_1C015F820();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14) == 1) {
    return sub_1C1520DDC();
  }
  sub_1C0164368((uint64_t)v13, (uint64_t)v10);
  sub_1C1520DDC();
  sub_1C01643FC((uint64_t)v10, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1C1520DDC();
  }
  else
  {
    sub_1C0164DE0((uint64_t)v7, (uint64_t)v4, type metadata accessor for FormatVersionRequirement);
    sub_1C1520DDC();
    sub_1C02E9D7C();
    sub_1C0164D80((uint64_t)v4, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1C0164CEC((uint64_t)v10, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
}

uint64_t sub_1C0164218(uint64_t a1, uint64_t a2)
{
  return sub_1C0164230(a1, a2, (void (*)(unsigned char *))sub_1C0163F50);
}

uint64_t sub_1C0164230(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_1C1520DBC();
  a3(v5);
  return sub_1C1520E0C();
}

uint64_t sub_1C016427C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0164294(a1, a2, a3, (void (*)(unsigned char *))sub_1C0163F50);
}

uint64_t sub_1C0164294(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1C1520DBC();
  a4(v6);
  return sub_1C1520E0C();
}

uint64_t sub_1C01642D8()
{
  return sub_1C0164320(&qword_1EA197248, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataResultOptionReference);
}

uint64_t sub_1C0164320(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0164368(uint64_t a1, uint64_t a2)
{
  sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01643FC(uint64_t a1, uint64_t a2)
{
  sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0164490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v36 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0164B28();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0164C20(0, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v37 = (uint64_t)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = type metadata accessor for FormatDerivedDataOptionReferenceResolution(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0164BBC();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v20[*(int *)(v21 + 56)];
  sub_1C0164C84(a1, (uint64_t)v20, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  sub_1C0164C84(a2, v22, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  sub_1C015F820();
  uint64_t v24 = v23;
  long long v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
  if (v25((uint64_t)v20, 1, v23) == 1)
  {
    uint64_t v26 = 1;
    int v27 = v25(v22, 1, v24);
    uint64_t v28 = type metadata accessor for FormatDerivedDataOptionReferenceResolution;
    if (v27 == 1) {
      goto LABEL_17;
    }
    goto LABEL_6;
  }
  sub_1C0164C84((uint64_t)v20, (uint64_t)v17, type metadata accessor for FormatDerivedDataOptionReferenceResolution);
  if (v25(v22, 1, v24) != 1)
  {
    sub_1C0164368(v22, (uint64_t)v14);
    uint64_t v29 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_1C0164368((uint64_t)v17, (uint64_t)v9);
    sub_1C01643FC((uint64_t)v14, v29);
    uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (v30((uint64_t)v9, 1, v4) == 1)
    {
      sub_1C0164CEC((uint64_t)v14, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
      if (v30(v29, 1, v4) == 1)
      {
        sub_1C0164CEC((uint64_t)v9, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
        uint64_t v26 = 1;
LABEL_16:
        uint64_t v28 = type metadata accessor for FormatDerivedDataOptionReferenceResolution;
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v31 = v37;
      sub_1C01643FC((uint64_t)v9, v37);
      if (v30(v29, 1, v4) != 1)
      {
        uint64_t v32 = v36;
        sub_1C0164DE0(v29, v36, type metadata accessor for FormatVersionRequirement);
        char v33 = sub_1C02F0BB4(v31, v32);
        sub_1C0164D80(v32, type metadata accessor for FormatVersionRequirement);
        sub_1C0164CEC((uint64_t)v14, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
        sub_1C0164D80(v31, type metadata accessor for FormatVersionRequirement);
        sub_1C0164CEC((uint64_t)v9, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
        uint64_t v28 = type metadata accessor for FormatDerivedDataOptionReferenceResolution;
        if (v33)
        {
          uint64_t v26 = 1;
          goto LABEL_17;
        }
        goto LABEL_15;
      }
      sub_1C0164CEC((uint64_t)v14, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
      sub_1C0164D80(v31, type metadata accessor for FormatVersionRequirement);
    }
    sub_1C0164D80((uint64_t)v9, (uint64_t (*)(void))sub_1C0164B28);
LABEL_15:
    uint64_t v26 = 0;
    goto LABEL_16;
  }
  sub_1C0164CEC((uint64_t)v17, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement);
LABEL_6:
  uint64_t v26 = 0;
  uint64_t v28 = (uint64_t (*)(void))sub_1C0164BBC;
LABEL_17:
  sub_1C0164D80((uint64_t)v20, v28);
  return v26;
}

uint64_t sub_1C0164A2C(uint64_t a1, uint64_t a2)
{
  if ((sub_1C00DD6C4(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  BOOL v8 = *(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16);
  if (!v8 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  if ((sub_1C00ABAD8(v4, v6) & 1) == 0) {
    return 0;
  }
  if (v5 != v7) {
    return 0;
  }
  char v9 = *(unsigned char *)(a1 + 56);
  long long v15 = *(_OWORD *)(a1 + 40);
  char v16 = v9;
  char v10 = *(unsigned char *)(a2 + 56);
  long long v13 = *(_OWORD *)(a2 + 40);
  char v14 = v10;
  if ((_s8NewsFeed27FormatDerivedDataContextKeyO2eeoiySbAC_ACtFZ_0((uint64_t)&v15, (uint64_t)&v13) & 1) == 0) {
    return 0;
  }
  uint64_t v11 = *(int *)(type metadata accessor for FormatDerivedDataResultOptionReference(0) + 28);
  return sub_1C0164490(a1 + v11, a2 + v11);
}

void sub_1C0164B28()
{
  if (!qword_1EA196BD8)
  {
    sub_1C0164C20(255, (unint64_t *)&qword_1EB891B88, type metadata accessor for FormatVersionRequirement, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA196BD8);
    }
  }
}

void sub_1C0164BBC()
{
  if (!qword_1EA197250)
  {
    type metadata accessor for FormatDerivedDataOptionReferenceResolution(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA197250);
    }
  }
}

void sub_1C0164C20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0164C84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0164CEC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0164C20(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C0164D5C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C0163848(a1, *(long long **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), a2, a3);
}

uint64_t sub_1C0164D80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0164DE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t FormatAndExpression.lhsExpression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatAndExpression.rhsExpression.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1C0164E68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  if (a3()) {
    return a5(a1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C0164EC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, __n128), uint64_t a4, uint64_t (*a5)(uint64_t, char *))
{
  sub_1BFF81FF0();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  __n128 v12 = MEMORY[0x1F4188790](v9);
  char v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = a3(a1, a2, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  if (v15) {
    char v16 = a5(a1, v14);
  }
  else {
    char v16 = 0;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v16 & 1;
}

uint64_t _s8NewsFeed19FormatAndExpressionV2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  unint64_t v7 = *a2;
  uint64_t v8 = v2;
  if (static FormatExpression.== infix(_:_:)(&v8, &v7))
  {
    unint64_t v7 = v4;
    uint64_t v8 = v3;
    char v5 = static FormatExpression.== infix(_:_:)(&v8, &v7);
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

unint64_t sub_1C016506C(uint64_t a1)
{
  unint64_t result = sub_1C0165094();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0165094()
{
  unint64_t result = qword_1EA197268;
  if (!qword_1EA197268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197268);
  }
  return result;
}

unint64_t sub_1C01650E8(void *a1)
{
  a1[1] = sub_1BFE66180();
  a1[2] = sub_1BFE3EE20();
  unint64_t result = sub_1C0165120();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0165120()
{
  unint64_t result = qword_1EA197270;
  if (!qword_1EA197270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197270);
  }
  return result;
}

uint64_t destroy for FormatSymbolImageFill()
{
  swift_release();
  return swift_release();
}

void *_s8NewsFeed21FormatSymbolImageFillVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for FormatSymbolImageFill(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FormatSymbolImageFill(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatAndExpression()
{
  return &type metadata for FormatAndExpression;
}

uint64_t IssueCoverViewLayoutAttributes.bounds.getter()
{
  return sub_1C151F72C();
}

double IssueCoverViewLayoutAttributes.frame.getter()
{
  return *(double *)v0;
}

double IssueCoverViewLayoutAttributes.shadowRadius.getter()
{
  return *(double *)(v0 + 32);
}

double IssueCoverViewLayoutAttributes.cornerRadius.getter()
{
  return *(double *)(v0 + 40);
}

uint64_t IssueCoverViewLayoutAttributes.uiRectCorner.getter()
{
  return *(void *)(v0 + 48);
}

double IssueCoverViewLayoutAttributes.borderWidth.getter()
{
  return *(double *)(v0 + 56);
}

uint64_t sub_1C0165304()
{
  uint64_t result = 0x656D617266;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x776F64616873;
      goto LABEL_4;
    case 2:
      uint64_t v2 = 0x72656E726F63;
LABEL_4:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6152000000000000;
      break;
    case 3:
      uint64_t result = 0x6F43746365526975;
      break;
    case 4:
      uint64_t result = 0x6957726564726F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C01653BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0165FA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C01653E4(uint64_t a1)
{
  unint64_t v2 = sub_1C0165B50();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0165420(uint64_t a1)
{
  unint64_t v2 = sub_1C0165B50();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IssueCoverViewLayoutAttributes.encode(to:)(void *a1)
{
  sub_1C0165BA4(0, &qword_1EA197278, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  long long v16 = *v1;
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v12 = *((void *)v1 + 4);
  uint64_t v11 = *((void *)v1 + 5);
  uint64_t v13 = *((void *)v1 + 6);
  uint64_t v14 = *((void *)v1 + 7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0165B50();
  sub_1C1520F0C();
  long long v18 = v16;
  uint64_t v19 = v9;
  uint64_t v20 = v10;
  char v17 = 0;
  type metadata accessor for CGRect(0);
  sub_1BFE4C388(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&long long v18 = v12;
    char v17 = 1;
    sub_1BFDC74E8();
    sub_1C152080C();
    *(void *)&long long v18 = v11;
    char v17 = 2;
    sub_1C152080C();
    *(void *)&long long v18 = v13;
    char v17 = 3;
    type metadata accessor for UIRectCorner(0);
    sub_1BFE4C388(&qword_1EA197290, type metadata accessor for UIRectCorner);
    sub_1C152080C();
    *(void *)&long long v18 = v14;
    char v17 = 4;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IssueCoverViewLayoutAttributes.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C0165BA4(0, &qword_1EA197298, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0165B50();
  sub_1C1520EBC();
  if (!v2)
  {
    type metadata accessor for CGRect(0);
    char v20 = 0;
    sub_1BFE4C388(&qword_1EB87A290, type metadata accessor for CGRect);
    sub_1C15206EC();
    uint64_t v10 = v19[0];
    uint64_t v11 = v19[1];
    uint64_t v12 = v19[2];
    uint64_t v13 = v19[3];
    char v20 = 1;
    sub_1BFE7E344();
    sub_1C15206EC();
    uint64_t v14 = v19[0];
    char v20 = 2;
    sub_1C15206EC();
    uint64_t v15 = v19[0];
    type metadata accessor for UIRectCorner(0);
    char v20 = 3;
    sub_1BFE4C388((unint64_t *)&unk_1EB87A0D0, type metadata accessor for UIRectCorner);
    sub_1C15206EC();
    uint64_t v16 = v19[0];
    char v20 = 4;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v18 = v19[0];
    *a2 = v10;
    a2[1] = v11;
    a2[2] = v12;
    a2[3] = v13;
    a2[4] = v14;
    a2[5] = v15;
    a2[6] = v16;
    a2[7] = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

double sub_1C0165A90()
{
  return *(double *)v0;
}

uint64_t sub_1C0165A9C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return IssueCoverViewLayoutAttributes.init(from:)(a1, a2);
}

uint64_t sub_1C0165AB4(void *a1)
{
  return IssueCoverViewLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C0165ACC()
{
  sub_1C0166218();
  return sub_1C151798C();
}

double sub_1C0165B48(uint64_t a1)
{
  return (double)a1;
}

unint64_t sub_1C0165B50()
{
  unint64_t result = qword_1EA197280;
  if (!qword_1EA197280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197280);
  }
  return result;
}

void sub_1C0165BA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0165B50();
    unint64_t v7 = a3(a1, &type metadata for IssueCoverViewLayoutAttributes.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0165C0C()
{
  unint64_t result = qword_1EB85D9A8;
  if (!qword_1EB85D9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D9A8);
  }
  return result;
}

unint64_t sub_1C0165C64()
{
  unint64_t result = qword_1EB85D9C0;
  if (!qword_1EB85D9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D9C0);
  }
  return result;
}

unint64_t sub_1C0165CBC()
{
  unint64_t result = qword_1EB85D9B8;
  if (!qword_1EB85D9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D9B8);
  }
  return result;
}

unint64_t sub_1C0165D14()
{
  unint64_t result = qword_1EB85D9A0;
  if (!qword_1EB85D9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D9A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for IssueCoverViewLayoutAttributes(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for IssueCoverViewLayoutAttributes()
{
  return &type metadata for IssueCoverViewLayoutAttributes;
}

unsigned char *storeEnumTagSinglePayload for IssueCoverViewLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0165E64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueCoverViewLayoutAttributes.CodingKeys()
{
  return &type metadata for IssueCoverViewLayoutAttributes.CodingKeys;
}

unint64_t sub_1C0165EA0()
{
  unint64_t result = qword_1EA1972A0;
  if (!qword_1EA1972A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1972A0);
  }
  return result;
}

unint64_t sub_1C0165EF8()
{
  unint64_t result = qword_1EA1972A8;
  if (!qword_1EA1972A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1972A8);
  }
  return result;
}

unint64_t sub_1C0165F50()
{
  unint64_t result = qword_1EA1972B0;
  if (!qword_1EA1972B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1972B0);
  }
  return result;
}

uint64_t sub_1C0165FA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6152776F64616873 && a2 == 0xEC00000073756964 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F43746365526975 && a2 == 0xEC00000072656E72 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6957726564726F62 && a2 == 0xEB00000000687464)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_1C0166218()
{
  unint64_t result = qword_1EB85D9B0;
  if (!qword_1EB85D9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D9B0);
  }
  return result;
}

double FeedListeningProgress.progress.getter()
{
  double result = *(double *)v0;
  if (*(unsigned char *)(v0 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t FeedListeningProgress.isCompleted.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FeedListeningProgress.rawState.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = 0;
  if ((v1[1] & 1) == 0) {
    uint64_t v3 = *v1;
  }
  *a1 = v3;
  uint64_t v4 = *MEMORY[0x1E4FAC008];
  uint64_t v5 = sub_1C151A7DC();
  char v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a1, v4, v5);
}

uint64_t static FeedListeningProgress.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t sub_1C0166344(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t sub_1C0166378@<X0>(void *a1@<X8>)
{
  uint64_t v3 = 0;
  if ((v1[1] & 1) == 0) {
    uint64_t v3 = *v1;
  }
  *a1 = v3;
  uint64_t v4 = *MEMORY[0x1E4FAC008];
  uint64_t v5 = sub_1C151A7DC();
  char v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);
  return v6(a1, v4, v5);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FeedLayoutDirection(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C0166438(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

BOOL static FormatGroupBinding.Float.== infix(_:_:)(char *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v5 = (v3 & 0x80u) != 0 && v2 == v3;
  BOOL v6 = ((v3 ^ v2) & 1) == 0;
  if ((v3 & 0x80) != 0) {
    BOOL v6 = 0;
  }
  if (*a1 >= 0) {
    return v6;
  }
  else {
    return v5;
  }
}

unint64_t sub_1C0166490(uint64_t a1)
{
  unint64_t result = sub_1C01664B8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01664B8()
{
  unint64_t result = qword_1EA1972B8;
  if (!qword_1EA1972B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1972B8);
  }
  return result;
}

unint64_t sub_1C016650C(void *a1)
{
  a1[1] = sub_1C0166544();
  a1[2] = sub_1C0166598();
  unint64_t result = sub_1C01665EC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0166544()
{
  unint64_t result = qword_1EA1972C0;
  if (!qword_1EA1972C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1972C0);
  }
  return result;
}

unint64_t sub_1C0166598()
{
  unint64_t result = qword_1EA1972C8;
  if (!qword_1EA1972C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1972C8);
  }
  return result;
}

unint64_t sub_1C01665EC()
{
  unint64_t result = qword_1EA1972D0;
  if (!qword_1EA1972D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1972D0);
  }
  return result;
}

uint64_t sub_1C0166640@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatGroupBinding.Float.init(from:)(a1, a2);
}

uint64_t sub_1C0166658(void *a1)
{
  return FormatGroupBinding.Float.encode(to:)(a1);
}

BOOL sub_1C0166670(char *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v5 = (v3 & 0x80u) != 0 && v2 == v3;
  BOOL v6 = ((v3 ^ v2) & 1) == 0;
  if ((v3 & 0x80) != 0) {
    BOOL v6 = 0;
  }
  if (*a1 >= 0) {
    return v6;
  }
  else {
    return v5;
  }
}

uint64_t _s5FloatOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x1F) {
    goto LABEL_17;
  }
  if (a2 + 225 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 225) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 225;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 225;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 225;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 2) & 0x1E | (*a1 >> 7)) ^ 0x1F;
  if (v6 >= 0x1E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *_s5FloatOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 225 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 225) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1E)
  {
    unsigned int v6 = ((a2 - 31) >> 8) + 1;
    *unint64_t result = a2 - 31;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0166824);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1C016684C(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_1C0166858(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_1C0166868(unsigned char *result, char a2)
{
  *unint64_t result = *result & 7 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.Float()
{
  return &type metadata for FormatGroupBinding.Float;
}

void sub_1C016688C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  __int16 v4 = *((_WORD *)v2 + 8);
  long long v18 = *v2;
  if (*((unsigned char *)v2 + 18))
  {
    if (*((unsigned char *)v2 + 18) == 1)
    {
      id v5 = objc_msgSend(a1, sel_theme);
      id v6 = v5;
      if (v5)
      {
        id v7 = objc_msgSend(v5, sel_defaultHeadlineTemplate);
        swift_unknownObjectRelease();
        id v6 = objc_msgSend(v7, sel_headlineExcerptTextInfo);

        uint64_t v8 = swift_allocObject();
        if (v6)
        {
          id v9 = objc_msgSend(v6, sel_font);
          uint64_t v10 = v9;
          if (v9) {
            goto LABEL_14;
          }
LABEL_18:
          unint64_t v17 = 0xE000000000000000;
          goto LABEL_19;
        }
        goto LABEL_17;
      }
    }
    else
    {
      id v13 = objc_msgSend(a1, sel_theme);
      id v6 = v13;
      if (v13)
      {
        id v14 = objc_msgSend(v13, sel_defaultHeadlineTemplate);
        swift_unknownObjectRelease();
        id v6 = objc_msgSend(v14, sel_headlineBylineTextInfo);

        uint64_t v8 = swift_allocObject();
        if (v6)
        {
          id v9 = objc_msgSend(v6, sel_font);
          uint64_t v10 = v9;
          if (v9) {
            goto LABEL_14;
          }
          goto LABEL_18;
        }
LABEL_17:
        uint64_t v10 = 0;
        goto LABEL_18;
      }
    }
LABEL_16:
    uint64_t v8 = swift_allocObject();
    goto LABEL_17;
  }
  id v11 = objc_msgSend(a1, sel_theme);
  id v6 = v11;
  if (!v11) {
    goto LABEL_16;
  }
  id v12 = objc_msgSend(v11, sel_defaultHeadlineTemplate);
  swift_unknownObjectRelease();
  id v6 = objc_msgSend(v12, sel_headlineTitleTextInfo);

  uint64_t v8 = swift_allocObject();
  if (!v6) {
    goto LABEL_17;
  }
  id v9 = objc_msgSend(v6, sel_font);
  uint64_t v10 = v9;
  if (!v9) {
    goto LABEL_18;
  }
LABEL_14:
  id v15 = objc_msgSend(v9, sel_fontName);

  if (!v15) {
    goto LABEL_17;
  }
  uint64_t v10 = (void *)sub_1C151E62C();
  unint64_t v17 = v16;

LABEL_19:
  *(void *)(v8 + 16) = v10;
  *(void *)(v8 + 24) = v17;
  *(_OWORD *)(v8 + 32) = v18;
  *(_WORD *)(v8 + 48) = v4;

  *a2 = v8 | 0x2000000000000000;
}

uint64_t sub_1C0166B64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1485CF4(*a1, *a2);
}

uint64_t sub_1C0166B70()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0166C14()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0166CA4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0166D44@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C01677A8();
  *a1 = result;
  return result;
}

void sub_1C0166D74(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xEC00000074707265;
  uint64_t v5 = 0x63784574726F6873;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656E694C7962;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x656C746974;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C0166DD4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0166E34()
{
  return sub_1C151EAEC();
}

void sub_1C0166E84(void *a1@<X8>)
{
  *a1 = &unk_1F1B65B98;
}

uint64_t sub_1C0166E9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTagBinding.Font.init(from:)(a1, a2);
}

uint64_t sub_1C0166EB4(void *a1)
{
  return FormatTagBinding.Font.encode(to:)(a1);
}

uint64_t sub_1C0166ECC@<X0>(unsigned char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  int v7 = *a1;
  if (*a1)
  {
    long long v13 = xmmword_1C152D120;
    __int16 v14 = 3072;
    if (v7 == 1)
    {
      char v15 = 1;
      swift_unknownObjectRetain();
      sub_1C01677F4(a3);
      sub_1C016688C(a2, &v16);
      sub_1C0FFBF10(&v16, (uint64_t)&v13);
      uint64_t v8 = a4;
      uint64_t v9 = 0x78452074726F6853;
      uint64_t v10 = 0xED00007470726563;
    }
    else
    {
      char v15 = 2;
      swift_unknownObjectRetain();
      sub_1C01677F4(a3);
      sub_1C016688C(a2, &v16);
      sub_1C0FFBF10(&v16, (uint64_t)&v13);
      uint64_t v8 = a4;
      uint64_t v9 = 0x656E694C207942;
      uint64_t v10 = 0xE700000000000000;
    }
  }
  else
  {
    long long v13 = xmmword_1C152D120;
    __int16 v14 = 3072;
    char v15 = 0;
    swift_unknownObjectRetain();
    sub_1C01677F4(a3);
    sub_1C016688C(a2, &v16);
    sub_1C0FFBF10(&v16, (uint64_t)&v13);
    uint64_t v8 = a4;
    uint64_t v9 = 0x656C746954;
    uint64_t v10 = 0xE500000000000000;
  }
  sub_1C042F9B0(v9, v10, (uint64_t)&v13, v8);
  sub_1C0167828(a3);
  swift_unknownObjectRelease();
  uint64_t v11 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a4, 0, 1, v11);
}

uint64_t _s8NewsFeed16FormatTagBindingV4FontO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)a1;
  double v2 = *(double *)(a1 + 8);
  __int16 v4 = *(_WORD *)(a1 + 16);
  double v6 = *(double *)a2;
  double v5 = *(double *)(a2 + 8);
  __int16 v7 = *(_WORD *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a2 + 18);
  if (!*(unsigned char *)(a1 + 18))
  {
    if (*(unsigned char *)(a2 + 18) || v3 != v6) {
      return 0;
    }
    if ((v4 & 0xFF00) == 0xC00) {
      return (v7 & 0xFF00) == 0xC00;
    }
    if ((v7 & 0xFF00) == 0xC00) {
      return 0;
    }
    if (v4)
    {
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    else if ((v7 & 1) != 0 || v2 != v5)
    {
      return 0;
    }
    goto LABEL_34;
  }
  if (*(unsigned char *)(a1 + 18) != 1)
  {
    if (v8 != 2 || v3 != v6) {
      return 0;
    }
    if ((v4 & 0xFF00) == 0xC00) {
      return (v7 & 0xFF00) == 0xC00;
    }
    if ((v7 & 0xFF00) == 0xC00) {
      return 0;
    }
    if (v4)
    {
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    else if ((v7 & 1) != 0 || v2 != v5)
    {
      return 0;
    }
LABEL_34:
    uint64_t v10 = FormatFontScalingStyle.rawValue.getter();
    uint64_t v12 = v11;
    if (v10 == FormatFontScalingStyle.rawValue.getter() && v12 == v13)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    char v14 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v14 & 1) != 0;
  }
  if (v8 != 1 || v3 != v6) {
    return 0;
  }
  if ((v4 & 0xFF00) != 0xC00)
  {
    if ((v7 & 0xFF00) == 0xC00) {
      return 0;
    }
    if (v4)
    {
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    else if ((v7 & 1) != 0 || v2 != v5)
    {
      return 0;
    }
    goto LABEL_34;
  }
  return (v7 & 0xFF00) == 0xC00;
}

unint64_t sub_1C01672D0(uint64_t a1)
{
  unint64_t result = sub_1C01672F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01672F8()
{
  unint64_t result = qword_1EA1972D8;
  if (!qword_1EA1972D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1972D8);
  }
  return result;
}

unint64_t sub_1C016734C(void *a1)
{
  a1[1] = sub_1C0167384();
  a1[2] = sub_1C01673D8();
  unint64_t result = sub_1C016742C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0167384()
{
  unint64_t result = qword_1EB85D188;
  if (!qword_1EB85D188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D188);
  }
  return result;
}

unint64_t sub_1C01673D8()
{
  unint64_t result = qword_1EB862DD0;
  if (!qword_1EB862DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862DD0);
  }
  return result;
}

unint64_t sub_1C016742C()
{
  unint64_t result = qword_1EA1972E0;
  if (!qword_1EA1972E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1972E0);
  }
  return result;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s4FontOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 19)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 18);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s4FontOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 19) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 19) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 18) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C0167524(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 18);
}

uint64_t sub_1C016752C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 18) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatTagBinding.Font()
{
  return &type metadata for FormatTagBinding.Font;
}

unsigned char *_s4FontO10CodingTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0167610);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4FontO10CodingTypeOMa()
{
  return &_s4FontO10CodingTypeON;
}

unint64_t sub_1C016764C()
{
  unint64_t result = qword_1EA1972E8;
  if (!qword_1EA1972E8)
  {
    sub_1C01676A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1972E8);
  }
  return result;
}

void sub_1C01676A4()
{
  if (!qword_1EA1972F0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1972F0);
    }
  }
}

unint64_t sub_1C0167700()
{
  unint64_t result = qword_1EA1972F8;
  if (!qword_1EA1972F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA1972F8);
  }
  return result;
}

unint64_t sub_1C0167754()
{
  unint64_t result = qword_1EB865D90;
  if (!qword_1EB865D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB865D90);
  }
  return result;
}

uint64_t sub_1C01677A8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C01677F4(uint64_t a1)
{
  double v2 = *(void **)(a1 + 56);
  swift_bridgeObjectRetain();
  id v3 = v2;
  return a1;
}

uint64_t sub_1C0167828(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0167860()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0167898(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = *v1;
  v2[8] = *(void *)(*v1 + 88);
  v2[9] = *(void *)(v3 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2[10] = swift_getAssociatedTypeWitness();
  v2[11] = swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FeedGroupEmitterOutput();
  v2[12] = v4;
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2[15] = swift_getAssociatedTypeWitness();
  v2[16] = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[17] = AssociatedTypeWitness;
  v2[18] = *(void *)(AssociatedTypeWitness - 8);
  v2[19] = swift_task_alloc();
  uint64_t v6 = sub_1C15197FC();
  v2[20] = v6;
  v2[21] = *(void *)(v6 - 8);
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0167BAC, 0, 0);
}

uint64_t sub_1C0167BAC()
{
  uint64_t v87 = v0;
  uint64_t v1 = *(void (**)(void))(v0[21] + 16);
  ((void (*)(void, void, void))v1)(v0[23], v0[7] + *(void *)(*(void *)v0[7] + 160), v0[20]);
  swift_retain_n();
  double v2 = sub_1C151981C();
  os_signpost_type_t v3 = sub_1C151F62C();
  if (sub_1C151FD2C())
  {
    uint64_t v73 = v0[22];
    uint64_t v78 = v0[20];
    uint64_t v81 = v0[21];
    uint64_t v4 = v0[7];
    v1();
    os_signpost_type_t v71 = v3;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    v86[0] = v74;
    *(_DWORD *)uint64_t v5 = 136446722;
    uint64_t v6 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 144));
    uint64_t v7 = *v6;
    unint64_t v8 = v6[1];
    swift_bridgeObjectRetain();
    v0[3] = sub_1BFDA76EC(v7, v8, v86);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v5 + 12) = 2082;
    uint64_t v9 = sub_1BFCA4558();
    v0[4] = sub_1BFDA76EC(v9, v10, v86);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v5 + 22) = 2082;
    uint64_t v11 = sub_1BFE4028C();
    v0[5] = sub_1BFDA76EC(v11, v12, v86);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    swift_release_n();
    os_signpost_id_t v13 = sub_1C15197EC();
    _os_signpost_emit_with_name_impl(&dword_1BFC31000, v2, v71, v13, "News.FeedService.EmitTask", "[%{public}s] %{public}s, %{public}s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v74, -1, -1);
    MEMORY[0x1C18C9B00](v5, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v73, v78);
  }
  else
  {

    swift_release_n();
  }
  char v14 = v1;
  uint64_t v15 = v0[23];
  uint64_t v16 = v0[20];
  uint64_t v17 = v0[21];
  uint64_t v18 = v0[19];
  uint64_t v19 = v0[17];
  uint64_t v79 = v0[9];
  uint64_t v20 = v0[7];
  uint64_t v83 = v0[18];
  ((void (*)(void, uint64_t, uint64_t))v14)(v0[22], v15, v16);
  sub_1C151986C();
  swift_allocObject();
  v0[24] = sub_1C151985C();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  double v21 = CACurrentMediaTime();
  sub_1BFFDEB20();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C152C7F0;
  uint64_t v23 = (uint64_t *)(v20 + *(void *)(*(void *)v20 + 144));
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  uint64_t v26 = MEMORY[0x1E4FBB1A0];
  *(void *)(v22 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v27 = sub_1BFE9C558();
  *(void *)(v22 + 64) = v27;
  uint64_t v70 = v25;
  uint64_t v72 = v24;
  *(void *)(v22 + 32) = v25;
  *(void *)(v22 + 40) = v24;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1BFCA4558();
  *(void *)(v22 + 96) = v26;
  *(void *)(v22 + 104) = v27;
  *(void *)(v22 + 72) = v28;
  *(void *)(v22 + 80) = v29;
  uint64_t v30 = sub_1BFE4028C();
  *(void *)(v22 + 136) = v26;
  *(void *)(v22 + 144) = v27;
  *(void *)(v22 + 112) = v30;
  *(void *)(v22 + 120) = v31;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  sub_1BFDCBA18();
  sub_1BFDCA2AC();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  FeedGroupConfigType.rules<A>()(v19, v79, AssociatedConformanceWitness);
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v18, v19);
  type metadata accessor for FeedGroupEmitterRule();
  uint64_t v33 = sub_1C151ECAC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[2] = v33;
  uint64_t v34 = sub_1C151ED5C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = sub_1C035E7C8((void (*)(char *, char *))sub_1C016C580, v20, v34, (uint64_t)&type metadata for FeedGroupEmitterRuleOutput, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v36);
  swift_bridgeObjectRelease();
  v86[0] = v37;
  swift_bridgeObjectRetain();
  sub_1C016C514(v86);
  swift_bridgeObjectRelease();
  uint64_t v38 = v86[0];
  v0[25] = v86[0];
  if (*(void *)(v38 + 16))
  {
    uint64_t v39 = *(void *)(v38 + 72);
    uint64_t v40 = *(void *)(v38 + 80);
    if (!*(unsigned char *)(v38 + 88))
    {
      uint64_t v41 = (uint64_t *)v0[14];
      uint64_t v84 = v0[13];
      uint64_t v76 = v0[12];
      uint64_t v80 = v0[6];
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1C152A660;
      *(void *)(v49 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v49 + 64) = v27;
      *(void *)(v49 + 32) = v70;
      *(void *)(v49 + 40) = v72;
      swift_bridgeObjectRetain();
      sub_1BFDCA484(v39, v40, 0);
      uint64_t v50 = sub_1BFCA4558();
      *(void *)(v49 + 96) = MEMORY[0x1E4FBB1A0];
      *(void *)(v49 + 104) = v27;
      *(void *)(v49 + 72) = v50;
      *(void *)(v49 + 80) = v51;
      uint64_t v52 = sub_1BFE4028C();
      uint64_t v53 = MEMORY[0x1E4FBB1A0];
      *(void *)(v49 + 136) = MEMORY[0x1E4FBB1A0];
      *(void *)(v49 + 144) = v27;
      *(void *)(v49 + 112) = v52;
      *(void *)(v49 + 120) = v54;
      *(void *)(v49 + 176) = v53;
      *(void *)(v49 + 184) = v27;
      *(void *)(v49 + 152) = v39;
      *(void *)(v49 + 160) = v40;
      swift_bridgeObjectRetain();
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      *uint64_t v41 = v39;
      v41[1] = v40;
      uint64_t v48 = v76;
      goto LABEL_9;
    }
    if (*(unsigned char *)(v38 + 88) == 1)
    {
      uint64_t v41 = (uint64_t *)v0[14];
      uint64_t v84 = v0[13];
      uint64_t v75 = v0[12];
      uint64_t v80 = v0[6];
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_1C152A660;
      *(void *)(v42 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v42 + 64) = v27;
      *(void *)(v42 + 32) = v70;
      *(void *)(v42 + 40) = v72;
      swift_bridgeObjectRetain();
      sub_1BFDCA484(v39, v40, 1u);
      uint64_t v43 = sub_1BFCA4558();
      *(void *)(v42 + 96) = MEMORY[0x1E4FBB1A0];
      *(void *)(v42 + 104) = v27;
      *(void *)(v42 + 72) = v43;
      *(void *)(v42 + 80) = v44;
      uint64_t v45 = sub_1BFE4028C();
      uint64_t v46 = MEMORY[0x1E4FBB1A0];
      *(void *)(v42 + 136) = MEMORY[0x1E4FBB1A0];
      *(void *)(v42 + 144) = v27;
      *(void *)(v42 + 112) = v45;
      *(void *)(v42 + 120) = v47;
      *(void *)(v42 + 176) = v46;
      *(void *)(v42 + 184) = v27;
      *(void *)(v42 + 152) = v39;
      *(void *)(v42 + 160) = v40;
      swift_bridgeObjectRetain();
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      *uint64_t v41 = v39;
      v41[1] = v40;
      uint64_t v48 = v75;
LABEL_9:
      swift_storeEnumTagMultiPayload();
      sub_1C0168BFC((uint64_t)v41, v38, v80, v21);
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(v84 + 8))(v41, v48);
LABEL_12:
      sub_1C01687F0();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v62 = (uint64_t (*)(void))v0[1];
      return v62();
    }
    if (v39 | v40)
    {
      uint64_t v55 = (void *)v0[14];
      uint64_t v82 = v0[13];
      uint64_t v85 = v0[12];
      uint64_t v77 = v0[6];
      uint64_t v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_1C152C7F0;
      uint64_t v57 = MEMORY[0x1E4FBB1A0];
      *(void *)(v56 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v56 + 64) = v27;
      *(void *)(v56 + 32) = v70;
      *(void *)(v56 + 40) = v72;
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_1BFCA4558();
      *(void *)(v56 + 96) = v57;
      *(void *)(v56 + 104) = v27;
      *(void *)(v56 + 72) = v58;
      *(void *)(v56 + 80) = v59;
      uint64_t v60 = sub_1BFE4028C();
      *(void *)(v56 + 136) = v57;
      *(void *)(v56 + 144) = v27;
      *(void *)(v56 + 112) = v60;
      *(void *)(v56 + 120) = v61;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      sub_1C11934AC(v55);
      sub_1C0168BFC((uint64_t)v55, v38, v77, v21);
      swift_release();
      (*(void (**)(void *, uint64_t))(v82 + 8))(v55, v85);
      goto LABEL_12;
    }
  }
  uint64_t v64 = v0[7];
  uint64_t v65 = type metadata accessor for FeedGroupEmitTask.InternalResult();
  uint64_t v66 = type metadata accessor for FeedGroupEmitTaskResult();
  uint64_t v67 = (double *)swift_task_alloc();
  v0[26] = v67;
  *((void *)v67 + 2) = v64;
  v67[3] = v21;
  *((void *)v67 + 4) = v38;
  uint64_t v68 = (void *)swift_task_alloc();
  v0[27] = v68;
  *uint64_t v68 = v0;
  v68[1] = sub_1C0168610;
  uint64_t v69 = v0[6];
  uint64_t v89 = v66;
  return MEMORY[0x1F4188080](v69, v65, v66, 0, 0, &unk_1EA197310, v67, v65);
}

uint64_t sub_1C0168610()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C0168744, 0, 0);
}

uint64_t sub_1C0168744()
{
  sub_1C01687F0();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C01687F0()
{
  uint64_t v0 = sub_1C151983C();
  uint64_t v19 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  double v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C15197FC();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v18 - v8;
  unint64_t v10 = sub_1C151981C();
  sub_1C151984C();
  os_signpost_type_t v11 = sub_1C151F61C();
  if (sub_1C151FD2C())
  {
    swift_retain();
    sub_1C151987C();
    swift_release();
    uint64_t v12 = v19;
    if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v2, v0) == *MEMORY[0x1E4FBD340])
    {
      os_signpost_id_t v13 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v2, v0);
      os_signpost_id_t v13 = "";
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    os_signpost_id_t v16 = sub_1C15197EC();
    _os_signpost_emit_with_name_impl(&dword_1BFC31000, v10, v11, v16, "News.FeedService.EmitTask", v13, v15, 2u);
    MEMORY[0x1C18C9B00](v15, -1, -1);

    uint64_t v17 = *(void (**)(char *, uint64_t))(v4 + 8);
    v17(v9, v3);
    return ((uint64_t (*)(char *, uint64_t))v17)(v6, v3);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
}

double sub_1C0168ACC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedGroupEmitterRule();
  *(void *)(a3 + 24) = v6;
  *(void *)(a3 + 32) = swift_getWitnessTable();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a3);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(boxed_opaque_existential_0, a1, v6);
  uint64_t v8 = *(uint64_t **)(a2 + 112);
  uint64_t v9 = *(uint64_t *)((char *)v8 + *(void *)(*v8 + 216));
  swift_bridgeObjectRetain();
  FeedGroupEmitterRule.evaluate(cursor:slots:)(v8, v9, v6, (unint64_t *)&v12);
  swift_bridgeObjectRelease();
  char v10 = v13;
  double result = *(double *)&v12;
  *(_OWORD *)(a3 + 40) = v12;
  *(unsigned char *)(a3 + 56) = v10;
  return result;
}

int *sub_1C0168BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = type metadata accessor for FeedGroupEmitterOutput();
  __n128 v10 = MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v23 - v11;
  (*(void (**)(char *, uint64_t, __n128))(v13 + 16))((char *)&v23 - v11, a1, v10);
  uint64_t v14 = *(void *)(v4 + 16);
  char v15 = *(unsigned char *)(v4 + 32);
  uint64_t v16 = *(void *)(v4 + 40);
  char v17 = *(unsigned char *)(v4 + 48);
  uint64_t v18 = *(void *)(v4 + 56);
  char v19 = *(unsigned char *)(v4 + 64);
  char v20 = *(unsigned char *)(v4 + 65);
  uint64_t v23 = *(void *)(v4 + 24);
  char v24 = v15;
  uint64_t v25 = v16;
  char v26 = v17;
  uint64_t v27 = v18;
  char v28 = v19;
  char v29 = v20;
  swift_retain();
  swift_bridgeObjectRetain();
  CFTimeInterval v21 = CACurrentMediaTime();
  return sub_1C1458478((uint64_t)v12, v14, a2, &v23, a3, (v21 - a4) * 1000.0);
}

uint64_t sub_1C0168E14(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, double a5)
{
  *(void *)(v5 + 104) = a4;
  *(double *)(v5 + 96) = a5;
  *(void *)(v5 + 80) = a2;
  *(void *)(v5 + 88) = a3;
  *(void *)(v5 + 72) = a1;
  uint64_t v6 = *a3;
  uint64_t v7 = sub_1C151EDFC();
  *(void *)(v5 + 112) = v7;
  *(void *)(v5 + 120) = *(void *)(v7 - 8);
  *(void *)(v5 + 128) = swift_task_alloc();
  *(void *)(v5 + 136) = *(void *)(v6 + 88);
  *(void *)(v5 + 144) = *(void *)(v6 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FeedGroupEmitterOutput();
  *(void *)(v5 + 152) = v8;
  *(void *)(v5 + 160) = *(void *)(v8 - 8);
  *(void *)(v5 + 168) = swift_task_alloc();
  *(void *)(v5 + 176) = type metadata accessor for FeedGroupEmitTask.InternalResult();
  sub_1C151FD8C();
  *(void *)(v5 + 184) = swift_task_alloc();
  sub_1C0064478(0);
  *(void *)(v5 + 192) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C0169088, 0, 0);
}

uint64_t sub_1C0169088()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[11];
  uint64_t v3 = sub_1C151EE9C();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  v4(v1, 1, 1, v3);
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = 0;
  v5[3] = 0;
  v5[4] = v2;
  v0[25] = sub_1BFC845BC(255, (unint64_t *)&qword_1EB87A930);
  uint64_t v6 = sub_1C151EF0C();
  swift_retain();
  sub_1C0D141B8(v1, (uint64_t)&unk_1EA197320, (uint64_t)v5);
  sub_1C016C760(v1);
  if ((*(unsigned char *)(v2 + 48) & 1) == 0)
  {
    uint64_t v7 = v0[24];
    uint64_t v8 = v0[11];
    uint64_t v9 = *(void *)(v8 + 40);
    v4(v7, 1, 1, v3);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v8;
    v10[5] = v9;
    swift_retain();
    sub_1C0D141B8(v7, (uint64_t)&unk_1EA197340, (uint64_t)v10);
    sub_1C016C760(v7);
  }
  uint64_t v11 = v0[11];
  if ((*(unsigned char *)(v11 + 64) & 1) == 0)
  {
    uint64_t v12 = v0[24];
    uint64_t v13 = *(void *)(v11 + 56);
    v4(v12, 1, 1, v3);
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = v11;
    v14[5] = v13;
    swift_retain();
    sub_1C0D141B8(v12, (uint64_t)&unk_1EA197330, (uint64_t)v14);
    sub_1C016C760(v12);
  }
  char v15 = (void *)swift_task_alloc();
  v0[26] = v15;
  *char v15 = v0;
  v15[1] = sub_1C0169340;
  uint64_t v16 = v0[23];
  return MEMORY[0x1F4187E30](v16, 0, 0, v6);
}

uint64_t sub_1C0169340()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C0169A68;
  }
  else {
    uint64_t v2 = sub_1C0169454;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

void sub_1C0169454()
{
  uint64_t v1 = *(void *)(v0 + 184);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 176) - 8) + 48))(v1, 1) != 1)
  {
    uint64_t v25 = *(void *)(v0 + 152);
    uint64_t v26 = *(void *)(v0 + 160);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v1, 1, v25) != 1)
    {
      double v42 = *(double *)(v0 + 96);
      uint64_t v43 = *(void *)(v0 + 88);
      (*(void (**)(void, uint64_t, uint64_t))(v26 + 32))(*(void *)(v0 + 168), v1, v25);
      sub_1BFFDEB20();
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_1C152C7E0;
      uint64_t v45 = (uint64_t *)(v43 + *(void *)(*(void *)v43 + 144));
      uint64_t v46 = *v45;
      uint64_t v47 = v45[1];
      uint64_t v48 = MEMORY[0x1E4FBB1A0];
      *(void *)(v44 + 56) = MEMORY[0x1E4FBB1A0];
      unint64_t v49 = sub_1BFE9C558();
      *(void *)(v44 + 64) = v49;
      *(void *)(v44 + 32) = v46;
      *(void *)(v44 + 40) = v47;
      swift_bridgeObjectRetain();
      uint64_t v50 = sub_1BFCA4558();
      *(void *)(v44 + 96) = v48;
      *(void *)(v44 + 104) = v49;
      *(void *)(v44 + 72) = v50;
      *(void *)(v44 + 80) = v51;
      uint64_t v52 = sub_1BFE4028C();
      *(void *)(v44 + 136) = v48;
      *(void *)(v44 + 144) = v49;
      *(void *)(v44 + 112) = v52;
      *(void *)(v44 + 120) = v53;
      double v54 = (CACurrentMediaTime() - v42) * 1000.0;
      if ((~*(void *)&v54 & 0x7FF0000000000000) != 0)
      {
        if (v54 > -9.22337204e18)
        {
          if (v54 < 9.22337204e18)
          {
            uint64_t v55 = *(void *)(v0 + 160);
            uint64_t v56 = *(void *)(v0 + 168);
            uint64_t v57 = *(void *)(v0 + 152);
            uint64_t v58 = *(void *)(v0 + 104);
            double v59 = *(double *)(v0 + 96);
            uint64_t v65 = *(uint64_t **)(v0 + 80);
            uint64_t v60 = *(void *)(v0 + 72);
            uint64_t v61 = MEMORY[0x1E4FBC240];
            *(void *)(v44 + 176) = MEMORY[0x1E4FBC1C8];
            *(void *)(v44 + 184) = v61;
            *(void *)(v44 + 152) = (uint64_t)v54;
            uint64_t v62 = sub_1BFE5F360(v57);
            *(void *)(v44 + 216) = MEMORY[0x1E4FBB1A0];
            *(void *)(v44 + 224) = v49;
            *(void *)(v44 + 192) = v62;
            *(void *)(v44 + 200) = v63;
            sub_1C151F38C();
            sub_1C15197BC();
            swift_bridgeObjectRelease();
            sub_1C0168BFC(v56, v58, v60, v59);
            (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v57);
            uint64_t v41 = v65;
            goto LABEL_16;
          }
LABEL_27:
          __break(1u);
          return;
        }
LABEL_26:
        __break(1u);
        goto LABEL_27;
      }
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    double v27 = *(double *)(v0 + 96);
    uint64_t v28 = *(void *)(v0 + 88);
    sub_1C151F34C();
    sub_1BFFDEB20();
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1C152A660;
    uint64_t v30 = (uint64_t *)(v28 + *(void *)(*(void *)v28 + 144));
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    uint64_t v33 = MEMORY[0x1E4FBB1A0];
    *(void *)(v29 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v34 = sub_1BFE9C558();
    *(void *)(v29 + 64) = v34;
    *(void *)(v29 + 32) = v31;
    *(void *)(v29 + 40) = v32;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1BFCA4558();
    *(void *)(v29 + 96) = v33;
    *(void *)(v29 + 104) = v34;
    *(void *)(v29 + 72) = v35;
    *(void *)(v29 + 80) = v36;
    uint64_t v37 = sub_1BFE4028C();
    *(void *)(v29 + 136) = v33;
    *(void *)(v29 + 144) = v34;
    *(void *)(v29 + 112) = v37;
    *(void *)(v29 + 120) = v38;
    double v39 = (CACurrentMediaTime() - v27) * 1000.0;
    if ((~*(void *)&v39 & 0x7FF0000000000000) != 0)
    {
      if (v39 > -9.22337204e18)
      {
        if (v39 < 9.22337204e18)
        {
          uint64_t v15 = *(void *)(v0 + 160);
          uint64_t v16 = *(unint64_t **)(v0 + 168);
          uint64_t v17 = *(void *)(v0 + 152);
          uint64_t v18 = *(void *)(v0 + 104);
          double v19 = *(double *)(v0 + 96);
          char v20 = *(uint64_t **)(v0 + 80);
          uint64_t v21 = *(void *)(v0 + 72);
          uint64_t v40 = MEMORY[0x1E4FBC240];
          *(void *)(v29 + 176) = MEMORY[0x1E4FBC1C8];
          *(void *)(v29 + 184) = v40;
          *(void *)(v29 + 152) = (uint64_t)v39;
          sub_1C15197BC();
          swift_bridgeObjectRelease();
          unint64_t v23 = 0xD000000000000011;
          char v24 = "Emitter timed out";
          goto LABEL_11;
        }
        goto LABEL_24;
      }
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  double v2 = *(double *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C152A660;
  uint64_t v5 = (uint64_t *)(v3 + *(void *)(*(void *)v3 + 144));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1BFE9C558();
  *(void *)(v4 + 64) = v9;
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v7;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1BFCA4558();
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 104) = v9;
  *(void *)(v4 + 72) = v10;
  *(void *)(v4 + 80) = v11;
  uint64_t v12 = sub_1BFE4028C();
  *(void *)(v4 + 136) = v8;
  *(void *)(v4 + 144) = v9;
  *(void *)(v4 + 112) = v12;
  *(void *)(v4 + 120) = v13;
  double v14 = (CACurrentMediaTime() - v2) * 1000.0;
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v15 = *(void *)(v0 + 160);
  uint64_t v16 = *(unint64_t **)(v0 + 168);
  uint64_t v17 = *(void *)(v0 + 152);
  uint64_t v18 = *(void *)(v0 + 104);
  double v19 = *(double *)(v0 + 96);
  char v20 = *(uint64_t **)(v0 + 80);
  uint64_t v21 = *(void *)(v0 + 72);
  uint64_t v22 = MEMORY[0x1E4FBC240];
  *(void *)(v4 + 176) = MEMORY[0x1E4FBC1C8];
  *(void *)(v4 + 184) = v22;
  *(void *)(v4 + 152) = (uint64_t)v14;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  unint64_t v23 = 0xD000000000000016;
  char v24 = "Emitter internal error";
LABEL_11:
  *uint64_t v16 = v23;
  v16[1] = (unint64_t)(v24 - 32) | 0x8000000000000000;
  swift_storeEnumTagMultiPayload();
  sub_1C0168BFC((uint64_t)v16, v18, v21, v19);
  (*(void (**)(unint64_t *, uint64_t))(v15 + 8))(v16, v17);
  uint64_t v41 = v20;
LABEL_16:
  sub_1C016BFFC(v41);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v64 = *(void (**)(void))(v0 + 8);
  v64();
}

void sub_1C0169A68()
{
  uint64_t v1 = *(void **)(v0 + 216);
  *(void *)(v0 + 48) = v1;
  id v2 = v1;
  if ((swift_dynamicCast() & 1) == 0)
  {
    double v25 = *(double *)(v0 + 96);
    uint64_t v26 = *(void *)(v0 + 88);

    sub_1C151F36C();
    sub_1BFFDEB20();
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1C152C7E0;
    uint64_t v28 = (uint64_t *)(v26 + *(void *)(*(void *)v26 + 144));
    uint64_t v30 = *v28;
    uint64_t v29 = v28[1];
    uint64_t v31 = MEMORY[0x1E4FBB1A0];
    *(void *)(v27 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v32 = sub_1BFE9C558();
    *(void *)(v27 + 64) = v32;
    *(void *)(v27 + 32) = v30;
    *(void *)(v27 + 40) = v29;
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1BFCA4558();
    *(void *)(v27 + 96) = v31;
    *(void *)(v27 + 104) = v32;
    *(void *)(v27 + 72) = v33;
    *(void *)(v27 + 80) = v34;
    uint64_t v35 = sub_1BFE4028C();
    *(void *)(v27 + 136) = v31;
    *(void *)(v27 + 144) = v32;
    *(void *)(v27 + 112) = v35;
    *(void *)(v27 + 120) = v36;
    double v37 = (CACurrentMediaTime() - v25) * 1000.0;
    if ((~*(void *)&v37 & 0x7FF0000000000000) != 0)
    {
      if (v37 > -9.22337204e18)
      {
        if (v37 < 9.22337204e18)
        {
          uint64_t v38 = *(void **)(v0 + 216);
          uint64_t v39 = *(void *)(v0 + 160);
          uint64_t v40 = *(void **)(v0 + 168);
          double v41 = *(double *)(v0 + 96);
          uint64_t v48 = *(void *)(v0 + 152);
          uint64_t v50 = *(void *)(v0 + 104);
          uint64_t v51 = *(uint64_t **)(v0 + 80);
          uint64_t v47 = *(void *)(v0 + 72);
          uint64_t v42 = MEMORY[0x1E4FBC240];
          *(void *)(v27 + 176) = MEMORY[0x1E4FBC1C8];
          *(void *)(v27 + 184) = v42;
          *(void *)(v27 + 152) = (uint64_t)v37;
          *(void *)(v0 + 16) = 0;
          *(void *)(v0 + 24) = 0xE000000000000000;
          *(void *)(v0 + 56) = v38;
          sub_1C152036C();
          uint64_t v43 = *(void *)(v0 + 16);
          uint64_t v44 = *(void *)(v0 + 24);
          *(void *)(v27 + 216) = MEMORY[0x1E4FBB1A0];
          *(void *)(v27 + 224) = v32;
          *(void *)(v27 + 192) = v43;
          *(void *)(v27 + 200) = v44;
          sub_1C15197BC();
          swift_bridgeObjectRelease();
          sub_1C15200FC();
          *(void *)(v0 + 32) = 0;
          *(void *)(v0 + 40) = 0xE000000000000000;
          sub_1C151E80C();
          *(void *)(v0 + 64) = v38;
          sub_1C152036C();
          uint64_t v45 = *(void *)(v0 + 40);
          *uint64_t v40 = *(void *)(v0 + 32);
          v40[1] = v45;
          swift_storeEnumTagMultiPayload();
          sub_1C0168BFC((uint64_t)v40, v50, v47, v41);

          (*(void (**)(void *, uint64_t))(v39 + 8))(v40, v48);
          goto LABEL_10;
        }
LABEL_18:
        __break(1u);
        return;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  double v3 = *(double *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 88);

  sub_1C151F34C();
  sub_1BFFDEB20();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C152A660;
  uint64_t v6 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 144));
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(void *)(v5 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v10 = sub_1BFE9C558();
  *(void *)(v5 + 64) = v10;
  *(void *)(v5 + 32) = v8;
  *(void *)(v5 + 40) = v7;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1BFCA4558();
  *(void *)(v5 + 96) = v9;
  *(void *)(v5 + 104) = v10;
  *(void *)(v5 + 72) = v11;
  *(void *)(v5 + 80) = v12;
  uint64_t v13 = sub_1BFE4028C();
  *(void *)(v5 + 136) = v9;
  *(void *)(v5 + 144) = v10;
  *(void *)(v5 + 112) = v13;
  *(void *)(v5 + 120) = v14;
  double v15 = (CACurrentMediaTime() - v3) * 1000.0;
  if ((~*(void *)&v15 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v15 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v15 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v17 = *(void *)(v0 + 160);
  uint64_t v16 = *(void **)(v0 + 168);
  uint64_t v18 = *(void *)(v0 + 152);
  uint64_t v49 = *(void *)(v0 + 128);
  uint64_t v20 = *(void *)(v0 + 112);
  uint64_t v19 = *(void *)(v0 + 120);
  uint64_t v21 = *(void *)(v0 + 104);
  double v22 = *(double *)(v0 + 96);
  uint64_t v51 = *(uint64_t **)(v0 + 80);
  uint64_t v23 = *(void *)(v0 + 72);
  uint64_t v24 = MEMORY[0x1E4FBC240];
  *(void *)(v5 + 176) = MEMORY[0x1E4FBC1C8];
  *(void *)(v5 + 184) = v24;
  *(void *)(v5 + 152) = (uint64_t)v15;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  *uint64_t v16 = 0xD000000000000011;
  v16[1] = 0x80000001C1604B30;
  swift_storeEnumTagMultiPayload();
  sub_1C0168BFC((uint64_t)v16, v21, v23, v22);
  (*(void (**)(void *, uint64_t))(v17 + 8))(v16, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v49, v20);

LABEL_10:
  sub_1C016BFFC(v51);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v46 = *(void (**)(void))(v0 + 8);
  v46();
}

uint64_t sub_1C0169FC4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[2] = a1;
  v4[3] = a4;
  v4[4] = *a4;
  return MEMORY[0x1F4188298](sub_1C016A00C, 0, 0);
}

uint64_t sub_1C016A00C()
{
  if (*(unsigned char *)(v0[3] + 65) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[5] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1C016A12C;
    return sub_1C02B25E0();
  }
  else
  {
    double v3 = (void *)swift_task_alloc();
    v0[6] = v3;
    void *v3 = v0;
    v3[1] = sub_1C016A29C;
    uint64_t v4 = v0[2];
    return sub_1C016A518(v4);
  }
}

uint64_t sub_1C016A12C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v2 + 48) = v6;
    *uint64_t v6 = v3;
    v6[1] = sub_1C016A29C;
    uint64_t v7 = *(void *)(v2 + 16);
    return sub_1C016A518(v7);
  }
}

uint64_t sub_1C016A29C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C016A3CC, 0, 0);
  }
}

uint64_t sub_1C016A3CC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for FeedGroupEmitterOutput();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C016A518(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = *v1;
  v2[4] = *(void *)(*v1 + 88);
  v2[5] = *(void *)(v3 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2[6] = swift_getAssociatedTypeWitness();
  v2[7] = swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FeedGroupEmitterCachedOutput();
  v2[8] = v4;
  uint64_t v5 = sub_1C151FD8C();
  v2[9] = v5;
  v2[10] = *(void *)(v5 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v6 = *(void *)(v4 - 8);
  v2[14] = v6;
  v2[15] = *(void *)(v6 + 64);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C016A754, 0, 0);
}

uint64_t sub_1C016A754()
{
  uint64_t v1 = v0[6].i64[1];
  uint64_t v2 = v0[7].i64[0];
  uint64_t v3 = v0[4].i64[1];
  uint64_t v4 = v0[5].i64[0];
  uint64_t v5 = v0[4].i64[0];
  uint64_t v6 = v0[1].i64[1] + *(void *)(*(void *)v0[1].i64[1] + 128);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[9].i64[1] = (uint64_t)v7;
  v0[10].i64[0] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v1, v6, v3);
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  v0[10].i64[1] = (uint64_t)v8;
  v0[11].i64[0] = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v8(v1, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v0[5].i64[0] + 8))(v0[6].i64[1], v0[4].i64[1]);
    uint64_t v9 = *(void *)(v0[1].i64[1] + 112);
    unint64_t v10 = (void *)swift_task_alloc();
    v0[14].i64[0] = (uint64_t)v10;
    *unint64_t v10 = v0;
    v10[1] = sub_1C016AE58;
    uint64_t v11 = v0[1].i64[0];
    return sub_1C0E16684(v11, v9);
  }
  else
  {
    uint64_t v13 = v0[8].i64[1];
    uint64_t v14 = v0[9].i64[0];
    uint64_t v15 = v0[7].i64[0];
    uint64_t v16 = v0[6].i64[1];
    uint64_t v17 = v0[4].i64[0];
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
    uint64_t v19 = v0[1].i64[1];
    v0[11].i64[1] = (uint64_t)v18;
    v0[12].i64[0] = (v15 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    int8x16_t v25 = v0[2];
    v18(v14, v16, v17);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, v14, v17);
    unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v21 = (int8x16_t *)swift_allocObject();
    v0[12].i64[1] = (uint64_t)v21;
    v21[1] = vextq_s8(v25, v25, 8uLL);
    v21[2].i64[0] = v19;
    v18((uint64_t)v21->i64 + v20, v13, v17);
    swift_retain();
    double v22 = (void *)swift_task_alloc();
    v0[13].i64[0] = (uint64_t)v22;
    *double v22 = v0;
    v22[1] = sub_1C016AA00;
    uint64_t v23 = v0[6].i64[0];
    uint64_t v24 = v0[4].i64[1];
    return MEMORY[0x1F415E720](v23, &unk_1EA197358, v21, v24);
  }
}

uint64_t sub_1C016AA00()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1C016B00C;
  }
  else {
    uint64_t v2 = sub_1C016AB30;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C016AB30()
{
  uint64_t v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 64);
  (*(void (**)(uint64_t, void, void))(v0 + 152))(v2, *(void *)(v0 + 96), *(void *)(v0 + 72));
  if (v1(v2, 1, v3) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 112);
    uint64_t v6 = *(void *)(v0 + 88);
    uint64_t v7 = *(void *)(v0 + 72);
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 80) + 8);
    v9(*(void *)(v0 + 96), v7);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v8);
    v9(v6, v7);
    uint64_t v10 = *(void *)(*(void *)(v0 + 24) + 112);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1C016AE58;
    uint64_t v12 = *(void *)(v0 + 16);
    return sub_1C0E16684(v12, v10);
  }
  else
  {
    uint64_t v31 = *(void (**)(void))(v0 + 184);
    uint64_t v36 = *(void *)(v0 + 136);
    uint64_t v14 = *(void *)(v0 + 112);
    uint64_t v30 = *(void *)(v0 + 96);
    uint64_t v15 = *(void *)(v0 + 80);
    uint64_t v29 = *(void *)(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 64);
    uint64_t v34 = *(void *)(v0 + 144);
    uint64_t v35 = *(void *)(v0 + 48);
    uint64_t v17 = *(void *)(v0 + 24);
    uint64_t v32 = *(void *)(v0 + 128);
    uint64_t v33 = *(void *)(v0 + 16);
    v31();
    sub_1BFFDEB20();
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C152C7F0;
    uint64_t v19 = (uint64_t *)(v17 + *(void *)(*(void *)v17 + 144));
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v22 = MEMORY[0x1E4FBB1A0];
    *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
    unint64_t v23 = sub_1BFE9C558();
    *(void *)(v18 + 64) = v23;
    *(void *)(v18 + 32) = v21;
    *(void *)(v18 + 40) = v20;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1BFCA4558();
    *(void *)(v18 + 96) = v22;
    *(void *)(v18 + 104) = v23;
    *(void *)(v18 + 72) = v24;
    *(void *)(v18 + 80) = v25;
    uint64_t v26 = sub_1BFE4028C();
    *(void *)(v18 + 136) = v22;
    *(void *)(v18 + 144) = v23;
    *(void *)(v18 + 112) = v26;
    *(void *)(v18 + 120) = v27;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v30, v29);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v34, v16);
    ((void (*)(uint64_t, uint64_t, uint64_t))v31)(v36, v32, v16);
    sub_1C1193530(v36, v35, v33);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
}

uint64_t sub_1C016AE58()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C016B00C()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[18], v0[8]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1C016B0D0(uint64_t a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  *(double *)(v5 + 32) = a2;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a5;
  *(void *)(v5 + 40) = *a5;
  uint64_t v6 = sub_1C152032C();
  *(void *)(v5 + 48) = v6;
  *(void *)(v5 + 56) = *(void *)(v6 - 8);
  *(void *)(v5 + 64) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C016B1BC, 0, 0);
}

uint64_t sub_1C016B1BC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)v0[3];
  v0[9] = v2[11];
  sub_1BFFDEB20();
  v0[10] = v3;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C152A660;
  uint64_t v5 = (void *)((char *)v2 + *(void *)(*v2 + 144));
  uint64_t v6 = *v5;
  v0[11] = *v5;
  uint64_t v7 = v5[1];
  v0[12] = v7;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1BFE9C558();
  v0[13] = v9;
  *(void *)(v4 + 64) = v9;
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v7;
  v0[14] = v2[2];
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1BFCA4558();
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 104) = v9;
  uint64_t v11 = MEMORY[0x1E4FBB3D0];
  *(void *)(v4 + 72) = v10;
  *(void *)(v4 + 80) = v12;
  uint64_t v13 = MEMORY[0x1E4FBB460];
  *(void *)(v4 + 136) = v11;
  *(void *)(v4 + 144) = v13;
  *(void *)(v4 + 112) = v1;
  uint64_t v14 = sub_1BFE4028C();
  *(void *)(v4 + 176) = v8;
  *(void *)(v4 + 184) = v9;
  *(void *)(v4 + 152) = v14;
  *(void *)(v4 + 160) = v15;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1C1520F3C();
  uint64_t v18 = v17;
  sub_1C152031C();
  uint64_t v21 = (char *)&dword_1EA19B508 + dword_1EA19B508;
  uint64_t v19 = (void *)swift_task_alloc();
  v0[15] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1C016B3A0;
  return ((uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t))v21)(v16, v18, 0, 0, 1);
}

uint64_t sub_1C016B3A0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[7] + 8))(v2[8], v2[6]);
  if (v0) {
    uint64_t v3 = sub_1C016B508;
  }
  else {
    uint64_t v3 = sub_1C016B56C;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C016B508()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C016B56C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v13 = v0[2];
  sub_1C151F36C();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C152C7F0;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = v1;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1BFCA4558();
  *(void *)(v4 + 96) = v5;
  *(void *)(v4 + 104) = v1;
  *(void *)(v4 + 72) = v6;
  *(void *)(v4 + 80) = v7;
  uint64_t v8 = sub_1BFE4028C();
  *(void *)(v4 + 136) = v5;
  *(void *)(v4 + 144) = v1;
  *(void *)(v4 + 112) = v8;
  *(void *)(v4 + 120) = v9;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for FeedGroupEmitterOutput();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v13, 1, 1, v10);
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1C016B76C(uint64_t a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  *(double *)(v5 + 32) = a2;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a5;
  *(void *)(v5 + 40) = *a5;
  uint64_t v6 = sub_1C152032C();
  *(void *)(v5 + 48) = v6;
  *(void *)(v5 + 56) = *(void *)(v6 - 8);
  *(void *)(v5 + 64) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C016B858, 0, 0);
}

uint64_t sub_1C016B858()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C016B900;
  return sub_1C02B25E0();
}

uint64_t sub_1C016B900()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C016BA4C, 0, 0);
  }
}

uint64_t sub_1C016BA4C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)v0[3];
  v0[10] = v2[11];
  sub_1BFFDEB20();
  v0[11] = v3;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C152A660;
  uint64_t v5 = (void *)((char *)v2 + *(void *)(*v2 + 144));
  uint64_t v6 = *v5;
  v0[12] = *v5;
  uint64_t v7 = v5[1];
  v0[13] = v7;
  uint64_t v8 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v9 = sub_1BFE9C558();
  v0[14] = v9;
  *(void *)(v4 + 64) = v9;
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v7;
  v0[15] = v2[2];
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1BFCA4558();
  *(void *)(v4 + 96) = v8;
  *(void *)(v4 + 104) = v9;
  uint64_t v11 = MEMORY[0x1E4FBB3D0];
  *(void *)(v4 + 72) = v10;
  *(void *)(v4 + 80) = v12;
  uint64_t v13 = MEMORY[0x1E4FBB460];
  *(void *)(v4 + 136) = v11;
  *(void *)(v4 + 144) = v13;
  *(void *)(v4 + 112) = v1;
  uint64_t v14 = sub_1BFE4028C();
  *(void *)(v4 + 176) = v8;
  *(void *)(v4 + 184) = v9;
  *(void *)(v4 + 152) = v14;
  *(void *)(v4 + 160) = v15;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1C1520F3C();
  uint64_t v18 = v17;
  sub_1C152031C();
  uint64_t v21 = (char *)&dword_1EA19B508 + dword_1EA19B508;
  uint64_t v19 = (void *)swift_task_alloc();
  v0[16] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1C016BC30;
  return ((uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t))v21)(v16, v18, 0, 0, 1);
}

uint64_t sub_1C016BC30()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[7] + 8))(v2[8], v2[6]);
  if (v0) {
    uint64_t v3 = sub_1C016BD98;
  }
  else {
    uint64_t v3 = sub_1C016BDFC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C016BD98()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C016BDFC()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v13 = v0[2];
  sub_1C151F36C();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C152C7F0;
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = v1;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1BFCA4558();
  *(void *)(v4 + 96) = v5;
  *(void *)(v4 + 104) = v1;
  *(void *)(v4 + 72) = v6;
  *(void *)(v4 + 80) = v7;
  uint64_t v8 = sub_1BFE4028C();
  *(void *)(v4 + 136) = v5;
  *(void *)(v4 + 144) = v1;
  *(void *)(v4 + 112) = v8;
  *(void *)(v4 + 120) = v9;
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = type metadata accessor for FeedGroupEmitterOutput();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v13, 1, 1, v10);
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1C016BFFC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = type metadata accessor for FeedGroupEmitTask.InternalResult();
  uint64_t v3 = sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  uint64_t v4 = MEMORY[0x1E4FBC0F0];
  return MEMORY[0x1F4187C68](v1, v2, v3, v4);
}

uint64_t sub_1C016C064(uint64_t a1, void *a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v3[8] = *a2;
  return MEMORY[0x1F4188298](sub_1C016C0B0, 0, 0);
}

uint64_t sub_1C016C0B0()
{
  uint64_t v1 = v0[6];
  v0[9] = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  void *v3 = v0;
  v3[1] = sub_1C016C15C;
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[5];
  return sub_1C0E16870(v5, v2, v4);
}

uint64_t sub_1C016C15C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C016C290, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1C016C290()
{
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = v0[6];
  uint64_t v18 = v0[5];
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C152A660;
  uint64_t v4 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 144));
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  *(void *)(v3 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v8 = sub_1BFE9C558();
  *(void *)(v3 + 64) = v8;
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v6;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1BFCA4558();
  *(void *)(v3 + 96) = v7;
  *(void *)(v3 + 104) = v8;
  *(void *)(v3 + 72) = v9;
  *(void *)(v3 + 80) = v10;
  uint64_t v11 = sub_1BFE4028C();
  *(void *)(v3 + 136) = v7;
  *(void *)(v3 + 144) = v8;
  v0[2] = 0;
  *(void *)(v3 + 112) = v11;
  *(void *)(v3 + 120) = v12;
  v0[3] = 0xE000000000000000;
  v0[4] = v1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  uint64_t v13 = v0[2];
  uint64_t v14 = v0[3];
  *(void *)(v3 + 176) = v7;
  *(void *)(v3 + 184) = v8;
  *(void *)(v3 + 152) = v13;
  *(void *)(v3 + 160) = v14;
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v15 = type metadata accessor for FeedGroupEmitterCachedOutput();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v18, 1, 1, v15);
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1C016C514(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFDCA2D4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C016CE60(v5);
  *a1 = v2;
  return result;
}

double sub_1C016C580@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0168ACC(a1, v2, a2);
}

uint64_t type metadata accessor for FeedGroupEmitTask.InternalResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C016C5B8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (uint64_t *)*((void *)v2 + 2);
  double v7 = v2[3];
  uint64_t v8 = *((void *)v2 + 4);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1C005E7F4;
  return sub_1C0168E14(a1, a2, v6, v8, v7);
}

uint64_t sub_1C016C680()
{
  return objectdestroyTm_0();
}

uint64_t sub_1C016C688(uint64_t a1)
{
  uint64_t v4 = *(void **)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  void v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1C005E7F4;
  v5[4] = *v4;
  return MEMORY[0x1F4188298](sub_1C016A00C, 0, 0);
}

uint64_t sub_1C016C760(uint64_t a1)
{
  sub_1C0064478(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C016C7BC()
{
  return objectdestroyTm_0();
}

uint64_t sub_1C016C7C4(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = (void *)*((void *)v1 + 4);
  double v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1C005E7F4;
  return sub_1C016B76C(a1, v7, v4, v5, v6);
}

uint64_t sub_1C016C888()
{
  return objectdestroyTm_0();
}

uint64_t sub_1C016C890(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = (void *)*((void *)v1 + 4);
  double v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1BFC542F4;
  return sub_1C016B0D0(a1, v7, v4, v5, v6);
}

uint64_t sub_1C016C954()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = *(void *)(type metadata accessor for FeedGroupEmitterCachedOutput() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  uint64_t v4 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3, AssociatedTypeWitness);
      sub_1BFEFE510();
      uint64_t v5 = v4 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      if (*(void *)(v5 + 24)) {
        goto LABEL_13;
      }
      break;
    case 2u:
      (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3, AssociatedTypeWitness);
      break;
    case 3u:
      type metadata accessor for FeedGroupEmitterEmbeddedOutput();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 2:
          swift_bridgeObjectRelease();
          break;
        case 1:
          (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3, AssociatedTypeWitness);
          break;
        case 0:
          (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0 + v3, AssociatedTypeWitness);
          sub_1BFEFE510();
          uint64_t v7 = v4 + *(int *)(swift_getTupleTypeMetadata2() + 48);
          if (*(void *)(v7 + 24)) {
            __swift_destroy_boxed_opaque_existential_1(v7);
          }
          break;
      }
      sub_1BFC845BC(255, (unint64_t *)&qword_1EB865070);
      uint64_t v5 = v4 + *(int *)(swift_getTupleTypeMetadata2() + 48);
LABEL_13:
      __swift_destroy_boxed_opaque_existential_1(v5);
      break;
    default:
      break;
  }
  return swift_deallocObject();
}

uint64_t sub_1C016CCA0(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(type metadata accessor for FeedGroupEmitterCachedOutput() - 8);
  uint64_t v5 = *(void **)(v1 + 32);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C005E7F4;
  v7[6] = v5;
  v7[7] = v6;
  v7[5] = a1;
  v7[8] = *v5;
  return MEMORY[0x1F4188298](sub_1C016C0B0, 0, 0);
}

uint64_t sub_1C016CE60(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_179;
    }
    if (v3) {
      return sub_1C016D710(0, v3, 1, v2);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_187;
  }
  uint64_t v107 = result;
  uint64_t v119 = v1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
LABEL_144:
      uint64_t v105 = v8;
      if (v11 >= 2)
      {
        uint64_t v98 = *v2;
        do
        {
          unint64_t v99 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_174;
          }
          if (!v98) {
            goto LABEL_186;
          }
          uint64_t v100 = *(void *)&v10[16 * v99 + 32];
          uint64_t v101 = *(void *)&v10[16 * v11 + 24];
          uint64_t v102 = v119;
          sub_1C016D890((char *)(v98 + (v100 << 6)), (char *)(v98 + (*(void *)&v10[16 * v11 + 16] << 6)), v98 + (v101 << 6), __dst);
          uint64_t v119 = v102;
          if (v102) {
            break;
          }
          if (v101 < v100) {
            goto LABEL_175;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v10 = sub_1C063604C((uint64_t)v10);
          }
          if (v99 >= *((void *)v10 + 2)) {
            goto LABEL_176;
          }
          uint64_t v103 = &v10[16 * v99 + 32];
          *(void *)uint64_t v103 = v100;
          *((void *)v103 + 1) = v101;
          unint64_t v104 = *((void *)v10 + 2);
          if (v11 > v104) {
            goto LABEL_177;
          }
          memmove(&v10[16 * v11 + 16], &v10[16 * v11 + 32], 16 * (v104 - v11));
          *((void *)v10 + 2) = v104 - 1;
          unint64_t v11 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_155:
      swift_bridgeObjectRelease();
      *(void *)(v105 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v105 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C151ECCC();
    *(void *)(v7 + 16) = v6;
    uint64_t v105 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
LABEL_16:
  uint64_t v12 = v9;
  uint64_t v13 = v9 + 1;
  uint64_t v110 = v9;
  if (v9 + 1 >= v3) {
    goto LABEL_64;
  }
  uint64_t v14 = *v2;
  sub_1BFDCA3A4(*v2 + (v13 << 6), (uint64_t)&v116);
  sub_1BFDCA3A4(v14 + (v12 << 6), (uint64_t)v113);
  unint64_t v15 = v118[24];
  uint64_t v106 = v14;
  if (!v118[24])
  {
LABEL_20:
    unint64_t v16 = v115;
    if (!v115) {
      goto LABEL_31;
    }
    goto LABEL_26;
  }
  if (v118[24] == 1)
  {
    unint64_t v15 = 2;
    goto LABEL_20;
  }
  if (*(_OWORD *)&v118[8] == 0) {
    unint64_t v15 = 3;
  }
  else {
    unint64_t v15 = 1;
  }
  unint64_t v16 = v115;
  if (v115)
  {
LABEL_26:
    if (v16 == 1)
    {
      unint64_t v16 = 2;
    }
    else if (v114 == 0)
    {
      unint64_t v16 = 3;
    }
    else
    {
      unint64_t v16 = 1;
    }
  }
LABEL_31:
  sub_1BFDCA2FC((uint64_t)v113);
  sub_1BFDCA2FC((uint64_t)&v116);
  uint64_t v13 = v12 + 2;
  if (v12 + 2 < v3)
  {
    uint64_t v108 = v3;
    uint64_t v17 = v14 + (v12 << 6) + 64;
    while (1)
    {
      sub_1BFDCA3A4(v17 + 64, (uint64_t)&v116);
      sub_1BFDCA3A4(v17, (uint64_t)v113);
      unint64_t v18 = v118[24];
      if (!v118[24]) {
        goto LABEL_36;
      }
      if (v118[24] == 1) {
        break;
      }
      if (*(_OWORD *)&v118[8] == 0) {
        unint64_t v18 = 3;
      }
      else {
        unint64_t v18 = 1;
      }
      unint64_t v19 = v115;
      if (v115) {
        goto LABEL_42;
      }
LABEL_47:
      unint64_t v20 = v15;
      int v21 = v15 < v16;
      int v22 = v18 >= v19;
      sub_1BFDCA2FC((uint64_t)v113);
      sub_1BFDCA2FC((uint64_t)&v116);
      if (v21 == v22)
      {
        unint64_t v23 = v20;
        uint64_t v3 = v108;
        uint64_t v12 = v110;
        if (v23 < v16) {
          goto LABEL_53;
        }
        goto LABEL_64;
      }
      v17 += 64;
      ++v13;
      unint64_t v15 = v20;
      if (v108 == v13)
      {
        uint64_t v3 = v108;
        uint64_t v12 = v110;
        uint64_t v13 = v108;
        goto LABEL_50;
      }
    }
    unint64_t v18 = 2;
LABEL_36:
    unint64_t v19 = v115;
    if (!v115) {
      goto LABEL_47;
    }
LABEL_42:
    if (v19 == 1)
    {
      unint64_t v19 = 2;
    }
    else if (v114 == 0)
    {
      unint64_t v19 = 3;
    }
    else
    {
      unint64_t v19 = 1;
    }
    goto LABEL_47;
  }
LABEL_50:
  if (v15 < v16)
  {
LABEL_53:
    if (v13 < v12) {
      goto LABEL_180;
    }
    if (v12 < v13)
    {
      uint64_t v24 = (v13 << 6) - 64;
      uint64_t v25 = v12 << 6;
      uint64_t v26 = v13;
      uint64_t v27 = v12;
      do
      {
        if (v27 != --v26)
        {
          if (!v106) {
            goto LABEL_185;
          }
          uint64_t v31 = (long long *)(v106 + v25);
          uint64_t v32 = (long long *)(v106 + v24);
          long long v116 = *(_OWORD *)(v106 + v25);
          long long v117 = *(_OWORD *)(v106 + v25 + 16);
          *(_OWORD *)uint64_t v118 = *(_OWORD *)(v106 + v25 + 32);
          *(_OWORD *)&v118[9] = *(_OWORD *)(v106 + v25 + 41);
          if (v25 != v24 || v31 >= v32 + 4)
          {
            long long v28 = *v32;
            long long v29 = v32[1];
            long long v30 = v32[3];
            v31[2] = v32[2];
            v31[3] = v30;
            *uint64_t v31 = v28;
            v31[1] = v29;
          }
          long long *v32 = v116;
          v32[1] = v117;
          v32[2] = *(_OWORD *)v118;
          *(long long *)((char *)v32 + 41) = *(_OWORD *)&v118[9];
        }
        ++v27;
        v24 -= 64;
        v25 += 64;
      }
      while (v27 < v26);
    }
  }
LABEL_64:
  if (v13 >= v3) {
    goto LABEL_95;
  }
  if (__OFSUB__(v13, v12)) {
    goto LABEL_178;
  }
  if (v13 - v12 >= v107) {
    goto LABEL_95;
  }
  if (__OFADD__(v12, v107)) {
    goto LABEL_181;
  }
  if (v12 + v107 >= v3) {
    uint64_t v33 = v3;
  }
  else {
    uint64_t v33 = v12 + v107;
  }
  if (v33 >= v12)
  {
    if (v13 == v33) {
      goto LABEL_95;
    }
    uint64_t v109 = v10;
    uint64_t v34 = v13 << 6;
LABEL_75:
    uint64_t v35 = v13;
    uint64_t v36 = v34;
    while (1)
    {
      uint64_t v37 = *v2 + v36;
      sub_1BFDCA3A4(v37, (uint64_t)&v116);
      sub_1BFDCA3A4(v37 - 64, (uint64_t)v113);
      unint64_t v38 = v118[24];
      if (v118[24])
      {
        if (v118[24] != 1)
        {
          if (*(_OWORD *)&v118[8] == 0) {
            unint64_t v38 = 3;
          }
          else {
            unint64_t v38 = 1;
          }
          unint64_t v39 = v115;
          if (!v115) {
            goto LABEL_90;
          }
LABEL_85:
          if (v39 == 1)
          {
            unint64_t v39 = 2;
          }
          else if (v114 == 0)
          {
            unint64_t v39 = 3;
          }
          else
          {
            unint64_t v39 = 1;
          }
          goto LABEL_90;
        }
        unint64_t v38 = 2;
      }
      unint64_t v39 = v115;
      if (v115) {
        goto LABEL_85;
      }
LABEL_90:
      sub_1BFDCA2FC((uint64_t)v113);
      sub_1BFDCA2FC((uint64_t)&v116);
      if (v38 >= v39) {
        goto LABEL_74;
      }
      if (!*v2) {
        goto LABEL_183;
      }
      uint64_t v40 = (long long *)(*v2 + v36);
      *(_OWORD *)uint64_t v118 = v40[2];
      *(_OWORD *)&v118[9] = *(long long *)((char *)v40 + 41);
      long long v116 = *v40;
      long long v41 = v116;
      long long v117 = v40[1];
      long long v42 = v117;
      long long v43 = *(v40 - 3);
      *uint64_t v40 = *(v40 - 4);
      v40[1] = v43;
      long long v44 = *(v40 - 1);
      v40[2] = *(v40 - 2);
      v40[3] = v44;
      *(v40 - 4) = v41;
      *(long long *)((char *)v40 - 23) = *(_OWORD *)&v118[9];
      long long v45 = *(_OWORD *)v118;
      *(v40 - 3) = v42;
      *(v40 - 2) = v45;
      v36 -= 64;
      if (v35 == ++v12)
      {
LABEL_74:
        uint64_t v13 = v35 + 1;
        v34 += 64;
        uint64_t v12 = v110;
        if (v35 + 1 != v33) {
          goto LABEL_75;
        }
        uint64_t v13 = v33;
        uint64_t v10 = v109;
LABEL_95:
        if (v13 < v12) {
          goto LABEL_173;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_1C0634CC8(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v47 = *((void *)v10 + 2);
        unint64_t v46 = *((void *)v10 + 3);
        unint64_t v11 = v47 + 1;
        if (v47 >= v46 >> 1) {
          uint64_t v10 = sub_1C0634CC8((char *)(v46 > 1), v47 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v11;
        uint64_t v48 = v10 + 32;
        uint64_t v49 = &v10[16 * v47 + 32];
        *(void *)uint64_t v49 = v110;
        *((void *)v49 + 1) = v13;
        uint64_t v111 = v13;
        if (v47)
        {
LABEL_101:
          unint64_t v50 = v11 - 1;
          if (v11 >= 4)
          {
            uint64_t v55 = &v48[16 * v11];
            uint64_t v56 = *((void *)v55 - 8);
            uint64_t v57 = *((void *)v55 - 7);
            BOOL v61 = __OFSUB__(v57, v56);
            uint64_t v58 = v57 - v56;
            if (v61) {
              goto LABEL_162;
            }
            uint64_t v60 = *((void *)v55 - 6);
            uint64_t v59 = *((void *)v55 - 5);
            BOOL v61 = __OFSUB__(v59, v60);
            uint64_t v53 = v59 - v60;
            char v54 = v61;
            if (v61) {
              goto LABEL_163;
            }
            unint64_t v62 = v11 - 2;
            uint64_t v63 = &v48[16 * v11 - 32];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            BOOL v61 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v61) {
              goto LABEL_165;
            }
            BOOL v61 = __OFADD__(v53, v66);
            uint64_t v67 = v53 + v66;
            if (v61) {
              goto LABEL_168;
            }
            if (v67 >= v58)
            {
              uint64_t v85 = &v48[16 * v50];
              uint64_t v87 = *(void *)v85;
              uint64_t v86 = *((void *)v85 + 1);
              BOOL v61 = __OFSUB__(v86, v87);
              uint64_t v88 = v86 - v87;
              if (v61) {
                goto LABEL_172;
              }
              BOOL v78 = v53 < v88;
            }
            else
            {
LABEL_114:
              if (v54) {
                goto LABEL_164;
              }
              unint64_t v62 = v11 - 2;
              uint64_t v68 = &v48[16 * v11 - 32];
              uint64_t v70 = *(void *)v68;
              uint64_t v69 = *((void *)v68 + 1);
              BOOL v71 = __OFSUB__(v69, v70);
              uint64_t v72 = v69 - v70;
              char v73 = v71;
              if (v71) {
                goto LABEL_167;
              }
              uint64_t v74 = &v48[16 * v50];
              uint64_t v76 = *(void *)v74;
              uint64_t v75 = *((void *)v74 + 1);
              BOOL v61 = __OFSUB__(v75, v76);
              uint64_t v77 = v75 - v76;
              if (v61) {
                goto LABEL_170;
              }
              if (__OFADD__(v72, v77)) {
                goto LABEL_171;
              }
              if (v72 + v77 < v53) {
                goto LABEL_126;
              }
              BOOL v78 = v53 < v77;
            }
            if (v78) {
              unint64_t v50 = v62;
            }
          }
          else
          {
            if (v11 == 3)
            {
              uint64_t v52 = *((void *)v10 + 4);
              uint64_t v51 = *((void *)v10 + 5);
              BOOL v61 = __OFSUB__(v51, v52);
              uint64_t v53 = v51 - v52;
              char v54 = v61;
              goto LABEL_114;
            }
            uint64_t v79 = *((void *)v10 + 4);
            uint64_t v80 = *((void *)v10 + 5);
            BOOL v61 = __OFSUB__(v80, v79);
            uint64_t v72 = v80 - v79;
            char v73 = v61;
LABEL_126:
            if (v73) {
              goto LABEL_166;
            }
            uint64_t v81 = &v48[16 * v50];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v61 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            if (v61) {
              goto LABEL_169;
            }
            if (v84 < v72) {
              goto LABEL_15;
            }
          }
          uint64_t v89 = v2;
          uint64_t v90 = v10;
          unint64_t v91 = v50 - 1;
          if (v50 - 1 >= v11)
          {
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
            break;
          }
          if (!*v89) {
            goto LABEL_184;
          }
          uint64_t v92 = &v48[16 * v91];
          uint64_t v93 = *(void *)v92;
          uint64_t v94 = &v48[16 * v50];
          uint64_t v95 = *((void *)v94 + 1);
          uint64_t v96 = v119;
          sub_1C016D890((char *)(*v89 + (*(void *)v92 << 6)), (char *)(*v89 + (*(void *)v94 << 6)), *v89 + (v95 << 6), __dst);
          uint64_t v119 = v96;
          if (v96) {
            goto LABEL_155;
          }
          if (v95 < v93) {
            goto LABEL_159;
          }
          if (v50 > *((void *)v90 + 2)) {
            goto LABEL_160;
          }
          *(void *)uint64_t v92 = v93;
          *(void *)&v48[16 * v91 + 8] = v95;
          unint64_t v97 = *((void *)v90 + 2);
          if (v50 >= v97) {
            goto LABEL_161;
          }
          uint64_t v10 = v90;
          unint64_t v11 = v97 - 1;
          memmove(&v48[16 * v50], v94 + 16, 16 * (v97 - 1 - v50));
          *((void *)v90 + 2) = v97 - 1;
          uint64_t v2 = v89;
          if (v97 <= 2) {
            goto LABEL_15;
          }
          goto LABEL_101;
        }
        unint64_t v11 = 1;
LABEL_15:
        uint64_t v3 = v2[1];
        uint64_t v9 = v111;
        if (v111 >= v3)
        {
          uint64_t v8 = v105;
          goto LABEL_144;
        }
        goto LABEL_16;
      }
    }
  }
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C016D710(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = result;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v7 = a3 << 6;
LABEL_5:
    uint64_t v8 = v25;
    uint64_t v9 = v7;
    while (1)
    {
      uint64_t v10 = *a4 + v9;
      sub_1BFDCA3A4(v10, (uint64_t)&v22);
      sub_1BFDCA3A4(v10 - 64, (uint64_t)v19);
      unint64_t v11 = v24[24];
      if (!v24[24]) {
        goto LABEL_9;
      }
      if (v24[24] == 1) {
        break;
      }
      if (*(_OWORD *)&v24[8] == 0) {
        unint64_t v11 = 3;
      }
      else {
        unint64_t v11 = 1;
      }
      unint64_t v12 = v21;
      if (v21) {
        goto LABEL_15;
      }
LABEL_20:
      sub_1BFDCA2FC((uint64_t)v19);
      uint64_t result = sub_1BFDCA2FC((uint64_t)&v22);
      if (v11 >= v12) {
        goto LABEL_4;
      }
      if (!*a4)
      {
        __break(1u);
        return result;
      }
      uint64_t v13 = (long long *)(*a4 + v9);
      *(_OWORD *)uint64_t v24 = v13[2];
      *(_OWORD *)&v24[9] = *(long long *)((char *)v13 + 41);
      long long v22 = *v13;
      long long v14 = v22;
      long long v23 = v13[1];
      long long v15 = v23;
      long long v16 = *(v13 - 3);
      *uint64_t v13 = *(v13 - 4);
      v13[1] = v16;
      long long v17 = *(v13 - 1);
      v13[2] = *(v13 - 2);
      v13[3] = v17;
      *(v13 - 4) = v14;
      *(long long *)((char *)v13 - 23) = *(_OWORD *)&v24[9];
      long long v18 = *(_OWORD *)v24;
      *(v13 - 3) = v15;
      *(v13 - 2) = v18;
      v9 -= 64;
      if (v5 == ++v8)
      {
LABEL_4:
        ++v5;
        v7 += 64;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
    unint64_t v11 = 2;
LABEL_9:
    unint64_t v12 = v21;
    if (!v21) {
      goto LABEL_20;
    }
LABEL_15:
    if (v12 == 1)
    {
      unint64_t v12 = 2;
    }
    else if (v20 == 0)
    {
      unint64_t v12 = 3;
    }
    else
    {
      unint64_t v12 = 1;
    }
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_1C016D890(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 63;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 6;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 63;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 6;
  unint64_t v50 = __src;
  uint64_t v49 = __dst;
  if (v10 >= v13)
  {
    if (v11 < -63) {
      goto LABEL_73;
    }
    uint64_t v27 = v13 << 6;
    if (__dst != a2 || &a2[v27] <= __dst) {
      memmove(__dst, a2, v13 << 6);
    }
    long long v28 = &v4[v27];
    uint64_t v48 = &v4[v27];
    unint64_t v50 = v6;
    if (__src >= v6 || (unint64_t)(v11 - 64) > 0xFFFFFFFFFFFFFF80)
    {
LABEL_72:
      sub_1C06353FC((void **)&v50, (const void **)&v49, &v48);
      return 1;
    }
    long long v29 = (char *)(a3 - 64);
    while (1)
    {
      sub_1BFDCA3A4((uint64_t)(v28 - 64), (uint64_t)v45);
      uint64_t v33 = v6 - 64;
      sub_1BFDCA3A4((uint64_t)(v6 - 64), (uint64_t)v42);
      unint64_t v34 = v47;
      if (!v47) {
        goto LABEL_52;
      }
      if (v47 == 1) {
        break;
      }
      if (v46 == 0) {
        unint64_t v34 = 3;
      }
      else {
        unint64_t v34 = 1;
      }
      unint64_t v35 = v44;
      if (v44) {
        goto LABEL_58;
      }
LABEL_63:
      uint64_t v36 = v29 + 64;
      sub_1BFDCA2FC((uint64_t)v42);
      sub_1BFDCA2FC((uint64_t)v45);
      if (v34 >= v35)
      {
        unint64_t v37 = (unint64_t)v48;
        long long v28 = v48 - 64;
        v48 -= 64;
        if ((unint64_t)v36 < v37 || (unint64_t)v29 >= v37 || v36 != (char *)v37)
        {
          long long v38 = *(_OWORD *)v28;
          long long v39 = *(_OWORD *)(v37 - 48);
          long long v40 = *(_OWORD *)(v37 - 16);
          *((_OWORD *)v29 + 2) = *(_OWORD *)(v37 - 32);
          *((_OWORD *)v29 + 3) = v40;
          *(_OWORD *)long long v29 = v38;
          *((_OWORD *)v29 + 1) = v39;
        }
        uint64_t v33 = v6;
        if (v28 <= v4) {
          goto LABEL_72;
        }
      }
      else
      {
        if (v36 != v6 || v29 >= v6)
        {
          long long v30 = *(_OWORD *)v33;
          long long v31 = *((_OWORD *)v6 - 3);
          long long v32 = *((_OWORD *)v6 - 1);
          *((_OWORD *)v29 + 2) = *((_OWORD *)v6 - 2);
          *((_OWORD *)v29 + 3) = v32;
          *(_OWORD *)long long v29 = v30;
          *((_OWORD *)v29 + 1) = v31;
        }
        v50 -= 64;
        long long v28 = v48;
        if (v48 <= v4) {
          goto LABEL_72;
        }
      }
      v29 -= 64;
      uint64_t v6 = v33;
      if (v33 <= __src) {
        goto LABEL_72;
      }
    }
    unint64_t v34 = 2;
LABEL_52:
    unint64_t v35 = v44;
    if (!v44) {
      goto LABEL_63;
    }
LABEL_58:
    if (v35 == 1)
    {
      unint64_t v35 = 2;
    }
    else if (v43 == 0)
    {
      unint64_t v35 = 3;
    }
    else
    {
      unint64_t v35 = 1;
    }
    goto LABEL_63;
  }
  if (v8 >= -63)
  {
    size_t v14 = v10 << 6;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14);
    }
    unint64_t v15 = (unint64_t)&v4[v14];
    uint64_t v48 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 64) <= 0xFFFFFFFFFFFFFF80)
    {
      while (1)
      {
        sub_1BFDCA3A4((uint64_t)v6, (uint64_t)v45);
        sub_1BFDCA3A4((uint64_t)v4, (uint64_t)v42);
        unint64_t v16 = v47;
        if (v47)
        {
          if (v47 != 1)
          {
            if (v46 == 0) {
              unint64_t v16 = 3;
            }
            else {
              unint64_t v16 = 1;
            }
            unint64_t v17 = v44;
            if (!v44) {
              goto LABEL_26;
            }
LABEL_21:
            if (v17 == 1)
            {
              unint64_t v17 = 2;
            }
            else if (v43 == 0)
            {
              unint64_t v17 = 3;
            }
            else
            {
              unint64_t v17 = 1;
            }
            goto LABEL_26;
          }
          unint64_t v16 = 2;
        }
        unint64_t v17 = v44;
        if (v44) {
          goto LABEL_21;
        }
LABEL_26:
        sub_1BFDCA2FC((uint64_t)v42);
        sub_1BFDCA2FC((uint64_t)v45);
        long long v18 = v50;
        if (v16 >= v17)
        {
          long long v23 = v49 + 64;
          if (v50 != v49 || v50 >= v23)
          {
            long long v24 = *(_OWORD *)v49;
            long long v25 = *((_OWORD *)v49 + 1);
            long long v26 = *((_OWORD *)v49 + 3);
            *((_OWORD *)v50 + 2) = *((_OWORD *)v49 + 2);
            *((_OWORD *)v18 + 3) = v26;
            *(_OWORD *)long long v18 = v24;
            *((_OWORD *)v18 + 1) = v25;
          }
          uint64_t v49 = v23;
          unint64_t v19 = (unint64_t)v6;
        }
        else
        {
          unint64_t v19 = (unint64_t)(v6 + 64);
          if (v50 >= v6 && (unint64_t)v50 < v19 && v50 == v6)
          {
            long long v18 = v6;
          }
          else
          {
            long long v20 = *(_OWORD *)v6;
            long long v21 = *((_OWORD *)v6 + 1);
            long long v22 = *((_OWORD *)v6 + 3);
            *((_OWORD *)v50 + 2) = *((_OWORD *)v6 + 2);
            *((_OWORD *)v18 + 3) = v22;
            *(_OWORD *)long long v18 = v20;
            *((_OWORD *)v18 + 1) = v21;
          }
        }
        unint64_t v50 = v18 + 64;
        uint64_t v4 = v49;
        if ((unint64_t)v49 < v15)
        {
          uint64_t v6 = (char *)v19;
          if (v19 < a3) {
            continue;
          }
        }
        goto LABEL_72;
      }
    }
    goto LABEL_72;
  }
LABEL_73:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void *sub_1C016DC60(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int64_t v8 = v7;
  uint64_t v46 = a6;
  uint64_t v47 = a7;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v42 = a2;
  uint64_t v43 = a3;
  uint64_t v12 = *v7;
  uint64_t v13 = sub_1C15197FC();
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v49 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_1C151982C();
  uint64_t v15 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  unint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a1;
  uint64_t v41 = a1[1];
  uint64_t v19 = v41;
  long long v21 = (void *)a1[2];
  long long v20 = (void *)a1[3];
  char v22 = *((unsigned char *)a1 + 32);
  v8[9] = v18;
  v8[10] = v19;
  v8[11] = v21;
  v8[12] = v20;
  *((unsigned char *)v8 + 104) = v22;
  v8[2] = a2;
  v8[14] = a3;
  long long v23 = (char *)v8 + *(void *)(v12 + 128);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitterCachedOutput();
  uint64_t v24 = sub_1C151FD8C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v23, v44, v24);
  uint64_t v25 = v46;
  *(void *)((char *)v8 + *(void *)(*v8 + 136)) = v45;
  long long v26 = (void *)((char *)v8 + *(void *)(*v8 + 144));
  uint64_t v27 = v47;
  *long long v26 = v25;
  v26[1] = v27;
  swift_bridgeObjectRetain();
  id v28 = v21;
  id v29 = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BFDCBA74();
  char v30 = v53;
  uint64_t v31 = v54;
  char v32 = v55;
  uint64_t v33 = v56;
  char v34 = v57;
  char v35 = v58;
  v8[3] = v52;
  *((unsigned char *)v8 + 32) = v30;
  v8[5] = v31;
  *((unsigned char *)v8 + 48) = v32;
  v8[7] = v33;
  *((unsigned char *)v8 + 64) = v34;
  *((unsigned char *)v8 + 65) = v35;
  id v36 = v28;
  sub_1C151980C();

  swift_bridgeObjectRelease();
  uint64_t v37 = v48;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))((char *)v8 + *(void *)(*v8 + 152), v17, v48);
  sub_1C151981C();
  long long v38 = v49;
  sub_1C15197DC();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v37);
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))((char *)v8 + *(void *)(*v8 + 160), v38, v51);
  return v8;
}

void *sub_1C016E068(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1C016DC60(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1C016E0EC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = type metadata accessor for FeedGroupEmitterOutput();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_1C016E20C(void *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  size_t v10 = v9 + 1;
  int v11 = *(_DWORD *)(v5 + 80);
  if ((v11 & 0x1000F8) != 0 || v10 > 0x18)
  {
    uint64_t v13 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v13 + ((unsigned __int16)((v11 & 0xF8) + 23) & (unsigned __int16)~(v11 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unint64_t v14 = v8 + 1;
    switch(a2[v9])
    {
      case 0u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        unint64_t v15 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v16 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v17 = *(void *)(v16 + 24);
        if (v17 < 0xFFFFFFFF)
        {
          long long v30 = *(_OWORD *)(v16 + 16);
          *(_OWORD *)unint64_t v15 = *(_OWORD *)v16;
          *(_OWORD *)(v15 + 16) = v30;
        }
        else
        {
          *(void *)(v15 + 24) = v17;
          (**(void (***)(void))(v17 - 8))();
        }
        *((unsigned char *)a1 + v9) = 0;
        return a1;
      case 1u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        unint64_t v18 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v19 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v20 = *(void *)(v19 + 24);
        if (v20 < 0xFFFFFFFF)
        {
          long long v31 = *(_OWORD *)(v19 + 16);
          *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
          *(_OWORD *)(v18 + 16) = v31;
        }
        else
        {
          *(void *)(v18 + 24) = v20;
          (**(void (***)(void))(v20 - 8))();
        }
        char v21 = 1;
        goto LABEL_51;
      case 2u:
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        char v21 = 2;
        goto LABEL_51;
      case 3u:
        uint64_t v22 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v22;
        char v23 = 3;
        goto LABEL_26;
      case 4u:
        uint64_t v24 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v24;
        char v23 = 4;
        goto LABEL_26;
      case 5u:
        uint64_t v25 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v25;
        char v23 = 5;
LABEL_26:
        *((unsigned char *)a1 + v9) = v23;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        unsigned int v26 = a2[v8];
        unsigned int v27 = v26 - 3;
        if (v26 >= 3)
        {
          if (v8 <= 3) {
            uint64_t v28 = v8;
          }
          else {
            uint64_t v28 = 4;
          }
          switch(v28)
          {
            case 1:
              int v29 = *a2;
              goto LABEL_39;
            case 2:
              int v29 = *(unsigned __int16 *)a2;
              goto LABEL_39;
            case 3:
              int v29 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_39;
            case 4:
              int v29 = *(_DWORD *)a2;
LABEL_39:
              if (v8 < 4) {
                unsigned int v26 = (v29 | (v27 << (8 * v8))) + 3;
              }
              else {
                unsigned int v26 = v29 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v26 == 2)
        {
          uint64_t v32 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v32;
          *((unsigned char *)a1 + v8) = 2;
          swift_bridgeObjectRetain();
        }
        else if (v26 == 1)
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          *((unsigned char *)a1 + v8) = 1;
        }
        else
        {
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          unint64_t v33 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v34 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v35 = *(void *)(v34 + 24);
          if (v35 < 0xFFFFFFFF)
          {
            long long v36 = *(_OWORD *)(v34 + 16);
            *(_OWORD *)unint64_t v33 = *(_OWORD *)v34;
            *(_OWORD *)(v33 + 16) = v36;
          }
          else
          {
            *(void *)(v33 + 24) = v35;
            (**(void (***)(void))(v35 - 8))();
          }
          *((unsigned char *)a1 + v8) = 0;
        }
        unint64_t v37 = ((unint64_t)a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v38 = (unint64_t)&a2[v14 + 7] & 0xFFFFFFFFFFFFFFF8;
        uint64_t v39 = *(void *)(v38 + 24);
        *(void *)(v37 + 24) = v39;
        *(void *)(v37 + 32) = *(void *)(v38 + 32);
        (**(void (***)(void))(v39 - 8))();
        char v21 = 6;
LABEL_51:
        *((unsigned char *)a1 + v9) = v21;
        break;
      default:
        memcpy(a1, a2, v10);
        break;
    }
  }
  return a1;
}

uint64_t sub_1C016E6E0(unsigned __int8 *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(result - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v4 > v5) {
    unint64_t v5 = *(void *)(*(void *)(result - 8) + 64);
  }
  if (v5 <= 0x10) {
    unint64_t v6 = 16;
  }
  else {
    unint64_t v6 = v5;
  }
  unint64_t v7 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (v7 <= v6) {
    unint64_t v7 = v6;
  }
  switch(a1[v7])
  {
    case 0u:
    case 1u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(a1, result);
      uint64_t result = (unint64_t)&a1[v4 + 7] & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(result + 24) >= 0xFFFFFFFFuLL) {
        goto LABEL_36;
      }
      break;
    case 2u:
      unint64_t v8 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v3 + 8);
      uint64_t result = v8(a1, result);
      break;
    case 3u:
    case 4u:
    case 5u:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 6u:
      unsigned int v9 = a1[v6];
      unsigned int v10 = v9 - 3;
      if (v9 >= 3)
      {
        if (v6 <= 3) {
          uint64_t v11 = v6;
        }
        else {
          uint64_t v11 = 4;
        }
        switch(v11)
        {
          case 1:
            int v12 = *a1;
            goto LABEL_26;
          case 2:
            int v12 = *(unsigned __int16 *)a1;
            goto LABEL_26;
          case 3:
            int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_26;
          case 4:
            int v12 = *(_DWORD *)a1;
LABEL_26:
            if (v6 < 4) {
              unsigned int v9 = (v12 | (v10 << (8 * v6))) + 3;
            }
            else {
              unsigned int v9 = v12 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v9 == 2)
      {
        swift_bridgeObjectRelease();
      }
      else if (v9 == 1)
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(a1, result);
      }
      else
      {
        (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(a1, result);
        unint64_t v13 = (unint64_t)&a1[v4 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v13 + 24) >= 0xFFFFFFFFuLL) {
          __swift_destroy_boxed_opaque_existential_1(v13);
        }
      }
      uint64_t result = (unint64_t)&a1[v6 + 8] & 0xFFFFFFFFFFFFFFF8;
LABEL_36:
      uint64_t result = __swift_destroy_boxed_opaque_existential_1(result);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1C016E9D0(void *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unint64_t v10 = v8 + 1;
  switch(a2[v9])
  {
    case 0u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      unint64_t v11 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v12 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v13 = *(void *)(v12 + 24);
      if (v13 < 0xFFFFFFFF)
      {
        long long v26 = *(_OWORD *)(v12 + 16);
        *(_OWORD *)unint64_t v11 = *(_OWORD *)v12;
        *(_OWORD *)(v11 + 16) = v26;
      }
      else
      {
        *(void *)(v11 + 24) = v13;
        (**(void (***)(void))(v13 - 8))();
      }
      *((unsigned char *)a1 + v9) = 0;
      return a1;
    case 1u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      unint64_t v14 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v15 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
      unint64_t v16 = *(void *)(v15 + 24);
      if (v16 < 0xFFFFFFFF)
      {
        long long v27 = *(_OWORD *)(v15 + 16);
        *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
        *(_OWORD *)(v14 + 16) = v27;
      }
      else
      {
        *(void *)(v14 + 24) = v16;
        (**(void (***)(void))(v16 - 8))();
      }
      char v17 = 1;
      goto LABEL_45;
    case 2u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      char v17 = 2;
      goto LABEL_45;
    case 3u:
      uint64_t v18 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v18;
      char v19 = 3;
      goto LABEL_20;
    case 4u:
      uint64_t v20 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v20;
      char v19 = 4;
      goto LABEL_20;
    case 5u:
      uint64_t v21 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v21;
      char v19 = 5;
LABEL_20:
      *((unsigned char *)a1 + v9) = v19;
      swift_bridgeObjectRetain();
      break;
    case 6u:
      unsigned int v22 = a2[v8];
      unsigned int v23 = v22 - 3;
      if (v22 >= 3)
      {
        if (v8 <= 3) {
          uint64_t v24 = v8;
        }
        else {
          uint64_t v24 = 4;
        }
        switch(v24)
        {
          case 1:
            int v25 = *a2;
            goto LABEL_33;
          case 2:
            int v25 = *(unsigned __int16 *)a2;
            goto LABEL_33;
          case 3:
            int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_33;
          case 4:
            int v25 = *(_DWORD *)a2;
LABEL_33:
            if (v8 < 4) {
              unsigned int v22 = (v25 | (v23 << (8 * v8))) + 3;
            }
            else {
              unsigned int v22 = v25 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v22 == 2)
      {
        uint64_t v28 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v28;
        *((unsigned char *)a1 + v8) = 2;
        swift_bridgeObjectRetain();
      }
      else if (v22 == 1)
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        *((unsigned char *)a1 + v8) = 1;
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        unint64_t v29 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v30 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v31 = *(void *)(v30 + 24);
        if (v31 < 0xFFFFFFFF)
        {
          long long v32 = *(_OWORD *)(v30 + 16);
          *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
          *(_OWORD *)(v29 + 16) = v32;
        }
        else
        {
          *(void *)(v29 + 24) = v31;
          (**(void (***)(void))(v31 - 8))();
        }
        *((unsigned char *)a1 + v8) = 0;
      }
      unint64_t v33 = ((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v34 = (unint64_t)&a2[v10 + 7] & 0xFFFFFFFFFFFFFFF8;
      uint64_t v35 = *(void *)(v34 + 24);
      *(void *)(v33 + 24) = v35;
      *(void *)(v33 + 32) = *(void *)(v34 + 32);
      (**(void (***)(void))(v35 - 8))();
      char v17 = 6;
LABEL_45:
      *((unsigned char *)a1 + v9) = v17;
      break;
    default:
      memcpy(a1, a2, v9 + 1);
      break;
  }
  return a1;
}

unsigned __int8 *sub_1C016EE54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  unint64_t v9 = v8 + 1;
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  if (a2[v10] > 6u)
  {
    switch(a1[v10])
    {
      case 0u:
      case 1u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        unint64_t v15 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v15 + 24) < 0xFFFFFFFFuLL) {
          goto LABEL_63;
        }
        goto LABEL_62;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_63;
      case 3u:
      case 4u:
      case 5u:
        swift_bridgeObjectRelease();
        goto LABEL_63;
      case 6u:
        unsigned int v17 = a1[v8];
        unsigned int v18 = v17 - 3;
        if (v17 >= 3)
        {
          if (v8 <= 3) {
            uint64_t v19 = v8;
          }
          else {
            uint64_t v19 = 4;
          }
          switch(v19)
          {
            case 1:
              int v20 = *a1;
              goto LABEL_52;
            case 2:
              int v20 = *(unsigned __int16 *)a1;
              goto LABEL_52;
            case 3:
              int v20 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_52;
            case 4:
              int v20 = *(_DWORD *)a1;
LABEL_52:
              if (v8 < 4) {
                unsigned int v17 = (v20 | (v18 << (8 * v8))) + 3;
              }
              else {
                unsigned int v17 = v20 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v17 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v17 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
          unint64_t v25 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v25 + 24) >= 0xFFFFFFFFuLL) {
            __swift_destroy_boxed_opaque_existential_1(v25);
          }
        }
        unint64_t v15 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
LABEL_62:
        __swift_destroy_boxed_opaque_existential_1(v15);
LABEL_63:
        memcpy(a1, a2, v10 + 1);
        break;
      default:
        goto LABEL_13;
    }
  }
  else if (a1 != a2)
  {
    switch(a1[v10])
    {
      case 0u:
      case 1u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        unint64_t v16 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v16 + 24) < 0xFFFFFFFFuLL) {
          goto LABEL_78;
        }
        goto LABEL_77;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_78;
      case 3u:
      case 4u:
      case 5u:
        swift_bridgeObjectRelease();
        goto LABEL_78;
      case 6u:
        unsigned int v21 = a1[v8];
        unsigned int v22 = v21 - 3;
        if (v21 >= 3)
        {
          if (v8 <= 3) {
            uint64_t v23 = v8;
          }
          else {
            uint64_t v23 = 4;
          }
          switch(v23)
          {
            case 1:
              int v24 = *a1;
              goto LABEL_67;
            case 2:
              int v24 = *(unsigned __int16 *)a1;
              goto LABEL_67;
            case 3:
              int v24 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_67;
            case 4:
              int v24 = *(_DWORD *)a1;
LABEL_67:
              if (v8 < 4) {
                unsigned int v21 = (v24 | (v22 << (8 * v8))) + 3;
              }
              else {
                unsigned int v21 = v24 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v21 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v21 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
          unint64_t v26 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v26 + 24) >= 0xFFFFFFFFuLL) {
            __swift_destroy_boxed_opaque_existential_1(v26);
          }
        }
        unint64_t v16 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
LABEL_77:
        __swift_destroy_boxed_opaque_existential_1(v16);
LABEL_78:
        unsigned int v27 = a2[v10];
        unsigned int v28 = v27 - 7;
        if (v27 >= 7)
        {
          if (v10 <= 3) {
            uint64_t v29 = v10;
          }
          else {
            uint64_t v29 = 4;
          }
          switch(v29)
          {
            case 1:
              int v30 = *a2;
              goto LABEL_87;
            case 2:
              int v30 = *(unsigned __int16 *)a2;
              goto LABEL_87;
            case 3:
              int v30 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_87;
            case 4:
              int v30 = *(_DWORD *)a2;
LABEL_87:
              if (v10 < 4) {
                unsigned int v27 = (v30 | (v28 << (8 * v10))) + 7;
              }
              else {
                unsigned int v27 = v30 + 7;
              }
              break;
            default:
              break;
          }
        }
        switch(v27)
        {
          case 1u:
            goto LABEL_94;
          case 2u:
            goto LABEL_96;
          case 3u:
            goto LABEL_97;
          case 4u:
            goto LABEL_98;
          case 5u:
            goto LABEL_99;
          case 6u:
            unsigned int v41 = a2[v8];
            unsigned int v42 = v41 - 3;
            if (v41 >= 3)
            {
              if (v8 <= 3) {
                uint64_t v43 = v8;
              }
              else {
                uint64_t v43 = 4;
              }
              switch(v43)
              {
                case 1:
                  int v44 = *a2;
                  goto LABEL_113;
                case 2:
                  int v44 = *(unsigned __int16 *)a2;
                  goto LABEL_113;
                case 3:
                  int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                  goto LABEL_113;
                case 4:
                  int v44 = *(_DWORD *)a2;
LABEL_113:
                  if (v8 < 4) {
                    unsigned int v41 = (v44 | (v42 << (8 * v8))) + 3;
                  }
                  else {
                    unsigned int v41 = v44 + 3;
                  }
                  break;
                default:
                  break;
              }
            }
            if (v41 == 2) {
              goto LABEL_121;
            }
            if (v41 != 1) {
              goto LABEL_118;
            }
            goto LABEL_48;
          default:
            goto LABEL_91;
        }
      default:
        break;
    }
LABEL_13:
    switch(a2[v10])
    {
      case 0u:
LABEL_91:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        unint64_t v31 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v32 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v33 = *(void *)(v32 + 24);
        if (v33 < 0xFFFFFFFF)
        {
          long long v39 = *(_OWORD *)(v32 + 16);
          *(_OWORD *)unint64_t v31 = *(_OWORD *)v32;
          *(_OWORD *)(v31 + 16) = v39;
        }
        else
        {
          *(void *)(v31 + 24) = v33;
          (**(void (***)(void))(v33 - 8))();
        }
        a1[v10] = 0;
        return a1;
      case 1u:
LABEL_94:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        unint64_t v34 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v35 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v36 = *(void *)(v35 + 24);
        if (v36 < 0xFFFFFFFF)
        {
          long long v40 = *(_OWORD *)(v35 + 16);
          *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
          *(_OWORD *)(v34 + 16) = v40;
        }
        else
        {
          *(void *)(v34 + 24) = v36;
          (**(void (***)(void))(v36 - 8))();
        }
        char v37 = 1;
        goto LABEL_124;
      case 2u:
LABEL_96:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        char v37 = 2;
        goto LABEL_124;
      case 3u:
LABEL_97:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        char v38 = 3;
        goto LABEL_100;
      case 4u:
LABEL_98:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        char v38 = 4;
        goto LABEL_100;
      case 5u:
LABEL_99:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        char v38 = 5;
LABEL_100:
        a1[v10] = v38;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        unsigned int v11 = a2[v8];
        unsigned int v12 = v11 - 3;
        if (v11 >= 3)
        {
          if (v8 <= 3) {
            uint64_t v13 = v8;
          }
          else {
            uint64_t v13 = 4;
          }
          switch(v13)
          {
            case 1:
              int v14 = *a2;
              goto LABEL_43;
            case 2:
              int v14 = *(unsigned __int16 *)a2;
              goto LABEL_43;
            case 3:
              int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_43;
            case 4:
              int v14 = *(_DWORD *)a2;
LABEL_43:
              if (v8 < 4) {
                unsigned int v11 = (v14 | (v12 << (8 * v8))) + 3;
              }
              else {
                unsigned int v11 = v14 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v11 == 2)
        {
LABEL_121:
          *(void *)a1 = *(void *)a2;
          *((void *)a1 + 1) = *((void *)a2 + 1);
          a1[v8] = 2;
          swift_bridgeObjectRetain();
        }
        else if (v11 == 1)
        {
LABEL_48:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          a1[v8] = 1;
        }
        else
        {
LABEL_118:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
          unint64_t v45 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v46 = (unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v47 = *(void *)(v46 + 24);
          if (v47 < 0xFFFFFFFF)
          {
            long long v48 = *(_OWORD *)(v46 + 16);
            *(_OWORD *)unint64_t v45 = *(_OWORD *)v46;
            *(_OWORD *)(v45 + 16) = v48;
          }
          else
          {
            *(void *)(v45 + 24) = v47;
            (**(void (***)(void))(v47 - 8))();
          }
          a1[v8] = 0;
        }
        unint64_t v49 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v50 = (unint64_t)&a2[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
        uint64_t v51 = *(void *)(v50 + 24);
        *(void *)(v49 + 24) = v51;
        *(void *)(v49 + 32) = *(void *)(v50 + 32);
        (**(void (***)(void))(v51 - 8))();
        char v37 = 6;
LABEL_124:
        a1[v10] = v37;
        break;
      default:
        goto LABEL_63;
    }
  }
  return a1;
}

_OWORD *sub_1C016F818(_OWORD *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v9 = v8;
  }
  else {
    unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unint64_t v10 = v8 + 1;
  switch(a2[v9])
  {
    case 0u:
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      unsigned int v11 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      long long v12 = v11[1];
      uint64_t v13 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v13 = *v11;
      v13[1] = v12;
      *((unsigned char *)a1 + v9) = 0;
      break;
    case 1u:
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      unint64_t v15 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v16 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      long long v17 = v16[1];
      *unint64_t v15 = *v16;
      v15[1] = v17;
      *((unsigned char *)a1 + v9) = 1;
      break;
    case 2u:
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v9) = 2;
      break;
    case 3u:
      *a1 = *(_OWORD *)a2;
      *((unsigned char *)a1 + v9) = 3;
      break;
    case 4u:
      *a1 = *(_OWORD *)a2;
      *((unsigned char *)a1 + v9) = 4;
      break;
    case 5u:
      *a1 = *(_OWORD *)a2;
      *((unsigned char *)a1 + v9) = 5;
      break;
    case 6u:
      unsigned int v18 = a2[v8];
      unsigned int v19 = v18 - 3;
      if (v18 >= 3)
      {
        if (v8 <= 3) {
          uint64_t v20 = v8;
        }
        else {
          uint64_t v20 = 4;
        }
        switch(v20)
        {
          case 1:
            int v21 = *a2;
            goto LABEL_27;
          case 2:
            int v21 = *(unsigned __int16 *)a2;
            goto LABEL_27;
          case 3:
            int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_27;
          case 4:
            int v21 = *(_DWORD *)a2;
LABEL_27:
            if (v8 < 4) {
              unsigned int v18 = (v21 | (v19 << (8 * v8))) + 3;
            }
            else {
              unsigned int v18 = v21 + 3;
            }
            break;
          default:
            break;
        }
      }
      if (v18 == 2)
      {
        *a1 = *(_OWORD *)a2;
        char v22 = 2;
      }
      else if (v18 == 1)
      {
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        char v22 = 1;
      }
      else
      {
        (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        char v22 = 0;
        uint64_t v23 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
        long long v24 = v23[1];
        unint64_t v25 = (_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v25 = *v23;
        v25[1] = v24;
      }
      *((unsigned char *)a1 + v8) = v22;
      unint64_t v26 = ((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v27 = (unint64_t)&a2[v10 + 7] & 0xFFFFFFFFFFFFFFF8;
      long long v28 = *(_OWORD *)v27;
      long long v29 = *(_OWORD *)(v27 + 16);
      *(void *)(v26 + 32) = *(void *)(v27 + 32);
      *(_OWORD *)unint64_t v26 = v28;
      *(_OWORD *)(v26 + 16) = v29;
      *((unsigned char *)a1 + v9) = 6;
      break;
    default:
      memcpy(a1, a2, v9 + 1);
      break;
  }
  return a1;
}

unsigned __int8 *sub_1C016FBB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v6 > v7) {
    unint64_t v7 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  if (v7 <= 0x10) {
    unint64_t v8 = 16;
  }
  else {
    unint64_t v8 = v7;
  }
  unint64_t v9 = v8 + 1;
  if ((v8 & 0xFFFFFFFFFFFFFFF8) + 48 <= v8) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = (v8 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  if (a2[v10] > 6u)
  {
    switch(a1[v10])
    {
      case 0u:
      case 1u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        unint64_t v15 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v15 + 24) < 0xFFFFFFFFuLL) {
          goto LABEL_59;
        }
        goto LABEL_58;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_59;
      case 3u:
      case 4u:
      case 5u:
        swift_bridgeObjectRelease();
        goto LABEL_59;
      case 6u:
        unsigned int v17 = a1[v8];
        unsigned int v18 = v17 - 3;
        if (v17 >= 3)
        {
          if (v8 <= 3) {
            uint64_t v19 = v8;
          }
          else {
            uint64_t v19 = 4;
          }
          switch(v19)
          {
            case 1:
              int v20 = *a1;
              goto LABEL_48;
            case 2:
              int v20 = *(unsigned __int16 *)a1;
              goto LABEL_48;
            case 3:
              int v20 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_48;
            case 4:
              int v20 = *(_DWORD *)a1;
LABEL_48:
              if (v8 < 4) {
                unsigned int v17 = (v20 | (v18 << (8 * v8))) + 3;
              }
              else {
                unsigned int v17 = v20 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v17 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v17 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
          unint64_t v25 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v25 + 24) >= 0xFFFFFFFFuLL) {
            __swift_destroy_boxed_opaque_existential_1(v25);
          }
        }
        unint64_t v15 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
LABEL_58:
        __swift_destroy_boxed_opaque_existential_1(v15);
LABEL_59:
        memcpy(a1, a2, v10 + 1);
        break;
      default:
        goto LABEL_13;
    }
  }
  else if (a1 != a2)
  {
    switch(a1[v10])
    {
      case 0u:
      case 1u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        unint64_t v16 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
        if (*(void *)(v16 + 24) < 0xFFFFFFFFuLL) {
          goto LABEL_75;
        }
        goto LABEL_74;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_75;
      case 3u:
      case 4u:
      case 5u:
        swift_bridgeObjectRelease();
        goto LABEL_75;
      case 6u:
        unsigned int v21 = a1[v8];
        unsigned int v22 = v21 - 3;
        if (v21 >= 3)
        {
          if (v8 <= 3) {
            uint64_t v23 = v8;
          }
          else {
            uint64_t v23 = 4;
          }
          switch(v23)
          {
            case 1:
              int v24 = *a1;
              goto LABEL_64;
            case 2:
              int v24 = *(unsigned __int16 *)a1;
              goto LABEL_64;
            case 3:
              int v24 = *(unsigned __int16 *)a1 | (a1[2] << 16);
              goto LABEL_64;
            case 4:
              int v24 = *(_DWORD *)a1;
LABEL_64:
              if (v8 < 4) {
                unsigned int v21 = (v24 | (v22 << (8 * v8))) + 3;
              }
              else {
                unsigned int v21 = v24 + 3;
              }
              break;
            default:
              break;
          }
        }
        if (v21 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v21 == 1)
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
          unint64_t v27 = (unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (*(void *)(v27 + 24) >= 0xFFFFFFFFuLL) {
            __swift_destroy_boxed_opaque_existential_1(v27);
          }
        }
        unint64_t v16 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
LABEL_74:
        __swift_destroy_boxed_opaque_existential_1(v16);
LABEL_75:
        unsigned int v28 = a2[v10];
        unsigned int v29 = v28 - 7;
        if (v28 >= 7)
        {
          if (v10 <= 3) {
            uint64_t v30 = v10;
          }
          else {
            uint64_t v30 = 4;
          }
          switch(v30)
          {
            case 1:
              int v31 = *a2;
              goto LABEL_84;
            case 2:
              int v31 = *(unsigned __int16 *)a2;
              goto LABEL_84;
            case 3:
              int v31 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_84;
            case 4:
              int v31 = *(_DWORD *)a2;
LABEL_84:
              if (v10 < 4) {
                unsigned int v28 = (v31 | (v29 << (8 * v10))) + 7;
              }
              else {
                unsigned int v28 = v31 + 7;
              }
              break;
            default:
              break;
          }
        }
        switch(v28)
        {
          case 1u:
            goto LABEL_89;
          case 2u:
            goto LABEL_90;
          case 3u:
            goto LABEL_91;
          case 4u:
            goto LABEL_92;
          case 5u:
            goto LABEL_93;
          case 6u:
            unsigned int v11 = a2[v8];
            unsigned int v12 = v11 - 3;
            if (v11 >= 3)
            {
              if (v8 <= 3) {
                uint64_t v38 = v8;
              }
              else {
                uint64_t v38 = 4;
              }
              switch(v38)
              {
                case 1:
                  int v14 = *a2;
                  goto LABEL_103;
                case 2:
                  int v14 = *(unsigned __int16 *)a2;
                  goto LABEL_103;
                case 3:
                  int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                  goto LABEL_103;
                case 4:
                  int v14 = *(_DWORD *)a2;
LABEL_103:
                  if (v8 < 4) {
                    goto LABEL_104;
                  }
                  goto LABEL_44;
                default:
                  goto LABEL_105;
              }
            }
            goto LABEL_105;
          default:
            goto LABEL_88;
        }
      default:
        break;
    }
LABEL_13:
    switch(a2[v10])
    {
      case 0u:
LABEL_88:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        unint64_t v32 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
        long long v33 = v32[1];
        unint64_t v34 = (_OWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v34 = *v32;
        v34[1] = v33;
        a1[v10] = 0;
        break;
      case 1u:
LABEL_89:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        unint64_t v35 = (_OWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
        unint64_t v36 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
        long long v37 = v36[1];
        *unint64_t v35 = *v36;
        v35[1] = v37;
        a1[v10] = 1;
        break;
      case 2u:
LABEL_90:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
        a1[v10] = 2;
        break;
      case 3u:
LABEL_91:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[v10] = 3;
        break;
      case 4u:
LABEL_92:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[v10] = 4;
        break;
      case 5u:
LABEL_93:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[v10] = 5;
        break;
      case 6u:
        unsigned int v11 = a2[v8];
        unsigned int v12 = v11 - 3;
        if (v11 >= 3)
        {
          if (v8 <= 3) {
            uint64_t v13 = v8;
          }
          else {
            uint64_t v13 = 4;
          }
          switch(v13)
          {
            case 1:
              int v14 = *a2;
              goto LABEL_43;
            case 2:
              int v14 = *(unsigned __int16 *)a2;
              goto LABEL_43;
            case 3:
              int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_43;
            case 4:
              int v14 = *(_DWORD *)a2;
LABEL_43:
              if (v8 < 4) {
LABEL_104:
              }
                unsigned int v11 = (v14 | (v12 << (8 * v8))) + 3;
              else {
LABEL_44:
              }
                unsigned int v11 = v14 + 3;
              break;
            default:
              break;
          }
        }
LABEL_105:
        if (v11 == 2)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          char v39 = 2;
        }
        else if (v11 == 1)
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
          char v39 = 1;
        }
        else
        {
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
          char v39 = 0;
          long long v40 = (_OWORD *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
          long long v41 = v40[1];
          unsigned int v42 = (_OWORD *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v42 = *v40;
          v42[1] = v41;
        }
        a1[v8] = v39;
        unint64_t v43 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
        unint64_t v44 = (unint64_t)&a2[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
        long long v45 = *(_OWORD *)v44;
        long long v46 = *(_OWORD *)(v44 + 16);
        *(void *)(v43 + 32) = *(void *)(v44 + 32);
        *(_OWORD *)unint64_t v43 = v45;
        *(_OWORD *)(v43 + 16) = v46;
        a1[v10] = 6;
        break;
      default:
        goto LABEL_59;
    }
  }
  return a1;
}

uint64_t sub_1C0170444(unsigned __int16 *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v4 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v4 <= 0x10) {
    unint64_t v4 = 16;
  }
  unint64_t v5 = (v4 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (v5 <= v4) {
    unint64_t v5 = v4;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_26;
  }
  unint64_t v6 = v5 + 1;
  char v7 = 8 * (v5 + 1);
  if ((v5 + 1) > 3) {
    goto LABEL_10;
  }
  unsigned int v10 = ((a2 + ~(-1 << v7) - 248) >> v7) + 1;
  if (HIWORD(v10))
  {
    int v8 = *(_DWORD *)((char *)a1 + v6);
    if (v8) {
      goto LABEL_18;
    }
LABEL_26:
    unsigned int v12 = *((unsigned __int8 *)a1 + v5);
    if (v12 >= 7) {
      unsigned int v13 = (v12 ^ 0xFF) + 1;
    }
    else {
      unsigned int v13 = 0;
    }
    if (v13 >= 2) {
      return v13 - 1;
    }
    else {
      return 0;
    }
  }
  if (v10 > 0xFF)
  {
    int v8 = *(unsigned __int16 *)((char *)a1 + v6);
    if (*(unsigned __int16 *)((char *)a1 + v6)) {
      goto LABEL_18;
    }
    goto LABEL_26;
  }
  if (v10 < 2) {
    goto LABEL_26;
  }
LABEL_10:
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_26;
  }
LABEL_18:
  int v11 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v6 | v11) + 249;
}

void sub_1C017063C(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v6 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v6 <= 0x10) {
    unint64_t v6 = 16;
  }
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 48 > v6) {
    unint64_t v6 = (v6 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  size_t v7 = v6 + 1;
  if (a3 < 0xF9)
  {
    int v8 = 0;
  }
  else if (v7 <= 3)
  {
    unsigned int v11 = ((a3 + ~(-1 << (8 * v7)) - 248) >> (8 * v7)) + 1;
    if (HIWORD(v11))
    {
      int v8 = 4;
    }
    else if (v11 >= 0x100)
    {
      int v8 = 2;
    }
    else
    {
      int v8 = v11 > 1;
    }
  }
  else
  {
    int v8 = 1;
  }
  if (a2 > 0xF8)
  {
    unsigned int v9 = a2 - 249;
    if (v7 < 4)
    {
      int v10 = (v9 >> (8 * v7)) + 1;
      if (v6 != -1)
      {
        int v12 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if (v7 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if (v7 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v6 + 1);
      *(_DWORD *)a1 = v9;
      int v10 = 1;
    }
    switch(v8)
    {
      case 1:
        a1[v7] = v10;
        break;
      case 2:
        *(_WORD *)&a1[v7] = v10;
        break;
      case 3:
LABEL_38:
        __break(1u);
        JUMPOUT(0x1C017089CLL);
      case 4:
        *(_DWORD *)&a1[v7] = v10;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v8)
    {
      case 1:
        a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 2:
        *(_WORD *)&a1[v7] = 0;
        goto LABEL_26;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&a1[v7] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      default:
LABEL_26:
        if (a2) {
LABEL_27:
        }
          a1[v6] = ~(_BYTE)a2;
        break;
    }
  }
}

uint64_t sub_1C01708C4(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v2 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  if ((v2 & 0xFFFFFFFFFFFFFFF8) + 48 > v2) {
    unint64_t v2 = (v2 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + v2);
  if (v3 >= 7) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_1C01709B0(unsigned char *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32) {
    unint64_t v4 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  }
  if (v4 <= 0x10) {
    unint64_t v4 = 16;
  }
  if ((v4 & 0xFFFFFFFFFFFFFFF8) + 48 > v4) {
    unint64_t v4 = (v4 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  if (a2 > 0xF9)
  {
    size_t v5 = (v4 + 1);
    int v6 = -1 << (8 * (v4 + 1));
    if (v5 <= 3) {
      int v7 = ~v6;
    }
    else {
      int v7 = -1;
    }
    if (v5)
    {
      int v8 = v7 & (a2 - 250);
      if (v5 <= 3) {
        int v9 = v5;
      }
      else {
        int v9 = 4;
      }
      bzero(a1, v5);
      switch(v9)
      {
        case 2:
          *(_WORD *)a1 = v8;
          break;
        case 3:
          *(_WORD *)a1 = v8;
          a1[2] = BYTE2(v8);
          break;
        case 4:
          *(_DWORD *)a1 = v8;
          break;
        default:
          *a1 = v8;
          break;
      }
    }
  }
  else if (a2)
  {
    a1[v4] = -(char)a2;
  }
}

uint64_t FormatBoxScoreDataVisualization.eventIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBoxScoreDataVisualization.tagIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBoxScoreDataVisualization.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0170BD0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 48) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatBoxScoreDataVisualization.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBoxScoreDataVisualization.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatBoxScoreDataVisualization.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0170D04(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 56) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatBoxScoreDataVisualization.properties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBoxScoreDataVisualization.properties.modify())()
{
  return j__swift_endAccess;
}

void *FormatBoxScoreDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v12 = (void *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  swift_beginAccess();
  v12[6] = a5;
  swift_beginAccess();
  v12[7] = a6;
  return v12;
}

void *FormatBoxScoreDataVisualization.init(eventIdentifier:tagIdentifier:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  swift_beginAccess();
  v6[6] = a5;
  swift_beginAccess();
  v6[7] = a6;
  return v6;
}

uint64_t sub_1C0170F14()
{
  uint64_t result = 0x656449746E657665;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E656449676174;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0170FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0171F10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0170FEC(uint64_t a1)
{
  unint64_t v2 = sub_1C01713E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0171028(uint64_t a1)
{
  unint64_t v2 = sub_1C01713E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatBoxScoreDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatBoxScoreDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatBoxScoreDataVisualization.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0171A94(0, &qword_1EA197360, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v9 = (char *)v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01713E4();
  sub_1C1520F0C();
  char v16 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    char v16 = 1;
    sub_1C15207CC();
    swift_beginAccess();
    uint64_t v11 = *(void *)(v3 + 48);
    if (*(void *)(v11 + 16))
    {
      char v17 = 2;
      swift_bridgeObjectRetain_n();
      int v12 = sub_1BFE71F8C(v11);
      swift_bridgeObjectRelease();
      unint64_t v15 = v12;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v15);
      swift_release();
      v14[1] = v15;
      sub_1C0171A20();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    uint64_t v13 = *(void *)(v3 + 56);
    if (*(void *)(v13 + 16))
    {
      char v17 = 3;
      unint64_t v15 = (void *)v13;
      sub_1C0171A20();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
      sub_1C00FCE94();
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C01713E4()
{
  unint64_t result = qword_1EA197368;
  if (!qword_1EA197368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197368);
  }
  return result;
}

uint64_t FormatBoxScoreDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatBoxScoreDataVisualization.init(from:)(a1);
  return v2;
}

void *FormatBoxScoreDataVisualization.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v1;
  long long v41 = v2;
  uint64_t v42 = v5;
  sub_1C00FC8DC();
  uint64_t v40 = v6;
  uint64_t v36 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v38 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v9 = v8;
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0171A94(0, &qword_1EA197378, MEMORY[0x1E4FBBDC0]);
  uint64_t v13 = v12;
  uint64_t v39 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v15 = (char *)&v35 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01713E4();
  char v16 = v41;
  sub_1C1520EBC();
  if (v16)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v17 = v11;
    long long v41 = a1;
    uint64_t v18 = v39;
    uint64_t v19 = v40;
    char v48 = 0;
    int v20 = v15;
    v3[2] = sub_1C152069C();
    v3[3] = v21;
    char v47 = 1;
    v3[4] = sub_1C152069C();
    v3[5] = v23;
    char v46 = 2;
    char v24 = sub_1C152071C();
    if (v24)
    {
      char v43 = 2;
      sub_1C0171AF8(&qword_1EB87C6E0, 255, (void (*)(uint64_t))sub_1BFE89214);
      uint64_t v25 = v9;
      sub_1C15206EC();
      uint64_t v26 = v19;
      uint64_t v35 = v25;
      unint64_t v15 = v20;
      uint64_t v27 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v35);
    }
    else
    {
      uint64_t v27 = MEMORY[0x1E4FBC870];
      uint64_t v26 = v19;
    }
    v3[6] = v27;
    char v45 = 3;
    unsigned int v28 = v15;
    if (sub_1C152071C())
    {
      char v44 = 3;
      sub_1C0171AF8(&qword_1EB85F2C8, 255, (void (*)(uint64_t))sub_1C00FC8DC);
      unsigned int v29 = v38;
      sub_1C15206EC();
      uint64_t v30 = v28;
      uint64_t v31 = sub_1C1517E5C();
      uint64_t v32 = v26;
      uint64_t v33 = v31;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v32);
      uint64_t v34 = v18;
      a1 = v41;
    }
    else
    {
      uint64_t v33 = MEMORY[0x1E4FBC860];
      uint64_t v34 = v18;
      a1 = v41;
      uint64_t v30 = v15;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v13);
    v3[7] = v33;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

void *sub_1C0171998@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  unint64_t result = FormatBoxScoreDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C01719F0(void *a1)
{
  return FormatBoxScoreDataVisualization.encode(to:)(a1);
}

uint64_t sub_1C0171A14(void **a1, void **a2)
{
  return static FormatBoxScoreDataVisualization.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1C0171A20()
{
  unint64_t result = qword_1EA197370;
  if (!qword_1EA197370)
  {
    sub_1C0171A94(255, &qword_1EA197360, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197370);
  }
  return result;
}

void sub_1C0171A94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C01713E4();
    unint64_t v7 = a3(a1, &type metadata for FormatBoxScoreDataVisualization.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C0171AF8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0171B40(void *a1, uint64_t a2)
{
  a1[1] = sub_1C0171AF8((unint64_t *)&unk_1EA19CD20, a2, (void (*)(uint64_t))type metadata accessor for FormatBoxScoreDataVisualization);
  a1[2] = sub_1C0171AF8((unint64_t *)&unk_1EA19CD50, v3, (void (*)(uint64_t))type metadata accessor for FormatBoxScoreDataVisualization);
  uint64_t result = sub_1C0171AF8(&qword_1EA197380, v4, (void (*)(uint64_t))type metadata accessor for FormatBoxScoreDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatBoxScoreDataVisualization()
{
  return self;
}

uint64_t sub_1C0171C10@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0171C60@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatBoxScoreDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatBoxScoreDataVisualization);
}

uint64_t dispatch thunk of FormatBoxScoreDataVisualization.__allocating_init(eventIdentifier:tagIdentifier:selectors:properties:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatBoxScoreDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unsigned char *storeEnumTagSinglePayload for FormatBoxScoreDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0171DD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBoxScoreDataVisualization.CodingKeys()
{
  return &type metadata for FormatBoxScoreDataVisualization.CodingKeys;
}

unint64_t sub_1C0171E0C()
{
  unint64_t result = qword_1EA197388;
  if (!qword_1EA197388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197388);
  }
  return result;
}

unint64_t sub_1C0171E64()
{
  unint64_t result = qword_1EA197390;
  if (!qword_1EA197390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197390);
  }
  return result;
}

unint64_t sub_1C0171EBC()
{
  unint64_t result = qword_1EA197398;
  if (!qword_1EA197398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197398);
  }
  return result;
}

uint64_t sub_1C0171F10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656449746E657665 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E656449676174 && a2 == 0xED00007265696669 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

id sub_1C017212C(double a1, double a2, double a3, double a4)
{
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return objc_msgSend(v8, sel_initWithFrame_, a1, a2, a3, a4);
}

id WebEmbedErrorView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *WebEmbedErrorView.init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  uint64_t v10 = v4;
  id v11 = objc_msgSend(v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed17WebEmbedErrorView_label] = v11;

  v51.receiver = v10;
  v51.super_class = (Class)type metadata accessor for WebEmbedErrorView();
  uint64_t v12 = (char *)objc_msgSendSuper2(&v51, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed17WebEmbedErrorView_label;
  uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed17WebEmbedErrorView_label];
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  char v16 = self;
  char v17 = v12;
  id v18 = v14;
  id v19 = objc_msgSend(v16, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  int v20 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setText_, v20, 0x80000001C1604F40);

  uint64_t v21 = *(void **)&v12[v13];
  uint64_t v22 = *MEMORY[0x1E4FB28C8];
  id v23 = objc_allocWithZone(MEMORY[0x1E4FB17A8]);
  id v24 = v21;
  id v25 = objc_msgSend(v23, sel_initForTextStyle_, v22);
  id v26 = objc_msgSend(self, sel_systemFontOfSize_, 16.0);
  id v27 = objc_msgSend(v25, sel_scaledFontForFont_, v26);

  objc_msgSend(v24, sel_setFont_, v27);
  unsigned int v28 = *(void **)&v12[v13];
  objc_msgSend(v28, sel_setTextAlignment_, 1);
  id v29 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  id v30 = v28;
  id v31 = objc_msgSend(v29, sel_initWithRed_green_blue_alpha_, 0.556862745, 0.556862745, 0.576470588, 1.0);
  objc_msgSend(v30, sel_setTextColor_, v31);

  uint64_t v32 = *(void **)&v12[v13];
  objc_msgSend(v32, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v32, sel_setNumberOfLines_, 2);
  objc_msgSend(v17, sel_addSubview_, v32);
  id v33 = objc_msgSend(v32, sel_leadingAnchor);
  id v34 = objc_msgSend(v17, sel_leadingAnchor);
  id v35 = objc_msgSend(v33, sel_constraintEqualToAnchor_, v34);

  objc_msgSend(v35, sel_setActive_, 1);
  id v36 = objc_msgSend(*(id *)&v12[v13], sel_trailingAnchor);
  id v37 = objc_msgSend(v17, sel_trailingAnchor);
  id v38 = objc_msgSend(v36, sel_constraintEqualToAnchor_, v37);

  objc_msgSend(v38, sel_setActive_, 1);
  id v39 = objc_msgSend(*(id *)&v12[v13], sel_topAnchor);
  id v40 = objc_msgSend(v17, sel_topAnchor);
  id v41 = objc_msgSend(v39, sel_constraintEqualToAnchor_, v40);

  objc_msgSend(v41, sel_setActive_, 1);
  id v42 = objc_msgSend(*(id *)&v12[v13], sel_bottomAnchor);
  id v43 = objc_msgSend(v17, sel_bottomAnchor);
  id v44 = objc_msgSend(v42, sel_constraintEqualToAnchor_, v43);

  objc_msgSend(v44, sel_setActive_, 1);
  id v45 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  aBlock[4] = sub_1C0172794;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFDF2404;
  aBlock[3] = &block_descriptor_4;
  char v46 = _Block_copy(aBlock);
  char v47 = v17;
  id v48 = objc_msgSend(v45, sel_initWithDynamicProvider_, v46);
  _Block_release(v46);
  swift_release();
  objc_msgSend(v47, sel_setBackgroundColor_, v48);

  return v47;
}

id sub_1C0172794(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.949019608, 0.949019608, 0.968627451, 1.0);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.109803922, 0.109803922, 0.117647059, 1.0);
  id v4 = objc_msgSend(a1, sel_userInterfaceStyle);
  if (v4 == (id)2) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v3;
  }
  if (v4 == (id)2) {
    id v6 = v3;
  }
  else {
    id v6 = v2;
  }

  return v6;
}

void sub_1C017286C()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for WebEmbedErrorView();
  objc_msgSendSuper2(&v5, sel_layoutSubviews);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v6);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed17WebEmbedErrorView_label];
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v3 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  id v4 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setText_, v4, 0x80000001C1604F40);
}

id WebEmbedErrorView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WebEmbedErrorView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for WebEmbedErrorView()
{
  return self;
}

uint64_t method lookup function for WebEmbedErrorView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WebEmbedErrorView);
}

uint64_t FormatButtonNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0172B58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatButtonNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatButtonNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v3;
  return sub_1BFF35EA4(v3);
}

unint64_t sub_1C0172CA8(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 32);
  *(void *)(v3 + 32) = v2;
  sub_1BFF35EA4(v2);
  return sub_1BFF322A8(v4);
}

unint64_t FormatButtonNode.size.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = v2;
  return sub_1BFF322A8(v3);
}

uint64_t (*FormatButtonNode.size.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatButtonNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatButtonNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 56);
}

uint64_t FormatButtonNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatButtonNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t FormatButtonNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 64);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

unint64_t sub_1C0172F94(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 64);
  *(void *)(v3 + 64) = v2;
  sub_1BFE6FA30(v2);
  return sub_1BFF0056C(v4);
}

unint64_t FormatButtonNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 64);
  *(void *)(v1 + 64) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatButtonNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t FormatButtonNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 72) = a1;
  return result;
}

uint64_t (*FormatButtonNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatButtonNode.children.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.children.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.stateMasks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatButtonNode.stateMasks.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.stateMasks.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.action.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 96);
  return swift_retain();
}

uint64_t FormatButtonNode.actionName.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 104);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatButtonNode.longPressAction.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 112);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatButtonNode.longPressActionName.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

void FormatButtonNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = *(void *)(v1 + 128);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatButtonNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatButtonNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0173388(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 152) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatButtonNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 152) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.name.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatButtonNode.name.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.behaviors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C01735B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 176) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatButtonNode.behaviors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 176) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.behaviors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.sourceItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C01736E4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 184) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatButtonNode.sourceItems.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 184) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatButtonNode.sourceItems.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatButtonNode.__allocating_init(identifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:children:stateMasks:action:actionName:longPressAction:longPressActionName:accessibilityRole:animation:selectors:name:behaviors:sourceItems:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, char a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, uint64_t *a14, uint64_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v29 = swift_allocObject();
  FormatButtonNode.init(identifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:children:stateMasks:action:actionName:longPressAction:longPressActionName:accessibilityRole:animation:selectors:name:behaviors:sourceItems:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21);
  return v29;
}

uint64_t FormatButtonNode.init(identifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:children:stateMasks:action:actionName:longPressAction:longPressActionName:accessibilityRole:animation:selectors:name:behaviors:sourceItems:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t *a7, char a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, uint64_t *a14, uint64_t *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v26 = *a3;
  uint64_t v27 = *a4;
  uint64_t v28 = *a7;
  uint64_t v34 = *a12;
  uint64_t v35 = *a11;
  uint64_t v32 = *a14;
  uint64_t v33 = *a13;
  uint64_t v31 = *a15;
  char v30 = *((unsigned char *)a15 + 8);
  *(void *)(v21 + 168) = 0;
  *(void *)(v21 + 160) = 0;
  swift_beginAccess();
  *(void *)(v21 + 16) = a1;
  *(void *)(v21 + 24) = a2;
  swift_beginAccess();
  *(void *)(v21 + 32) = v26;
  *(void *)(v21 + 40) = v27;
  swift_beginAccess();
  *(void *)(v21 + 48) = a5;
  swift_beginAccess();
  *(void *)(v21 + 56) = a6;
  swift_beginAccess();
  *(void *)(v21 + 64) = v28;
  swift_beginAccess();
  *(unsigned char *)(v21 + 72) = a8;
  swift_beginAccess();
  *(void *)(v21 + 80) = a9;
  swift_beginAccess();
  *(void *)(v21 + 88) = a10;
  *(void *)(v21 + 96) = v35;
  *(void *)(v21 + 104) = v34;
  *(void *)(v21 + 112) = v33;
  *(void *)(v21 + 120) = v32;
  *(void *)(v21 + 128) = v31;
  *(unsigned char *)(v21 + 136) = v30;
  *(void *)(v21 + 144) = a16;
  swift_beginAccess();
  *(void *)(v21 + 152) = a17;
  swift_beginAccess();
  *(void *)(v21 + 160) = a18;
  *(void *)(v21 + 168) = a19;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v21 + 176) = a20;
  swift_beginAccess();
  *(void *)(v21 + 184) = a21;
  return v21;
}

uint64_t FormatButtonNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFF0056C(*(void *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFDC11BC(*(void *)(v0 + 104));
  sub_1BFDC11BC(*(void *)(v0 + 112));
  sub_1BFDC11BC(*(void *)(v0 + 120));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatButtonNode.__deallocating_deinit()
{
  FormatButtonNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0173C08(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFDA05B0(&qword_1EA1973A8, a2, (void (*)(uint64_t))type metadata accessor for FormatButtonNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0173C60(void *a1, uint64_t a2)
{
  a1[1] = sub_1BFDA05B0(&qword_1EB87E2A8, a2, (void (*)(uint64_t))type metadata accessor for FormatButtonNode);
  a1[2] = sub_1BFDA05B0(&qword_1EB85FFD8, v3, (void (*)(uint64_t))type metadata accessor for FormatButtonNode);
  uint64_t result = sub_1BFDA05B0(&qword_1EA1973B0, v4, (void (*)(uint64_t))type metadata accessor for FormatButtonNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0173D0C(void *a1, void *a2)
{
  return static FormatButtonNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C0173D18(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BFDA05B0(&qword_1EA1973B8, a2, (void (*)(uint64_t))type metadata accessor for FormatButtonNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0173D70@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C0173DC0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 32);
  *a2 = v4;
  return sub_1BFF35EA4(v4);
}

uint64_t sub_1C0173E10@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0173E60@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return result;
}

uint64_t sub_1C0173EA8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 56) = v2;
  return result;
}

unint64_t sub_1C0173EEC@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 64);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C0173F3C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 72);
  return result;
}

uint64_t sub_1C0173F84(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 72) = v2;
  return result;
}

uint64_t sub_1C0173FC8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0174018@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0174068@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 152);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C01740B8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 176);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0174108@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 184);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatButtonNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatButtonNode);
}

uint64_t dispatch thunk of FormatButtonNode.__allocating_init(identifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:children:stateMasks:action:actionName:longPressAction:longPressActionName:accessibilityRole:animation:selectors:name:behaviors:sourceItems:)()
{
  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t _s8NewsFeed04LazyB18GroupEmitterCursorCfD_0()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatButtonBuildCaptureState()
{
  return self;
}

uint64_t sub_1C0174220()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0174278()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C01742B0(uint64_t a1@<X8>)
{
  sub_1C0DF535C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C01742E4(uint64_t a1, uint64_t a2)
{
  sub_1BFF47040(0, &qword_1EB88C058, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for FormatVisibilityState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0174430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVisibilityState()
{
  return &type metadata for FormatVisibilityState;
}

unint64_t sub_1C017446C()
{
  unint64_t result = qword_1EA1973C0;
  if (!qword_1EA1973C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1973C0);
  }
  return result;
}

id SharingArticleURLActivityItemSource.__allocating_init(headline:articleURL:mailShareLinkTextProvider:linkPresentationSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(a3 + 32);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1(a3, v9);
  id v12 = sub_1C0176090(a1, a2, v11, a4, v4, v9, v10);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v12;
}

id SharingArticleURLActivityItemSource.init(headline:articleURL:mailShareLinkTextProvider:linkPresentationSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(a3 + 32);
  uint64_t v11 = __swift_mutable_project_boxed_opaque_existential_1(a3, v9);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v15 + 16))(v14, v12);
  id v16 = sub_1C0175F04(a1, a2, (uint64_t)v14, a4, v4, v9, v10);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v16;
}

id SharingArticleURLActivityItemSource.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SharingArticleURLActivityItemSource.init()()
{
}

id SharingArticleURLActivityItemSource.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_OWORD *SharingArticleURLActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t a1@<X8>)
{
  sub_1BFF2E400(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v10 - v4;
  sub_1C0025B10(v1 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL, (uint64_t)v10 - v4);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    unint64_t result = (_OWORD *)sub_1BFF50F68((uint64_t)v5, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    *(void *)(a1 + 24) = MEMORY[0x1E4FBB1A0];
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0xE000000000000000;
  }
  else
  {
    uint64_t v11 = v6;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_0, v5, v6);
    return sub_1BFF993A8(v10, (_OWORD *)a1);
  }
  return result;
}

void SharingArticleURLActivityItemSource.activityViewController(_:itemForActivityType:)(id a1@<X1>, uint64_t a2@<X8>)
{
  sub_1BFF2E400(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v68 - v9;
  MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v68 - v13;
  MEMORY[0x1F4188790](v15);
  char v17 = (char *)&v68 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v68 - v20;
  if (!a1)
  {
    sub_1C0025B10(v2 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL, (uint64_t)v7);
    uint64_t v34 = sub_1C1515FDC();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v7, 1, v34) != 1)
    {
      *(void *)(a2 + 24) = v34;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
      (*(void (**)(uint64_t *, char *, uint64_t))(v35 + 32))(boxed_opaque_existential_0, v7, v34);
      return;
    }
    id v36 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    uint64_t v37 = (uint64_t)v7;
    goto LABEL_19;
  }
  uint64_t v71 = v19;
  uint64_t v72 = v2;
  uint64_t v22 = sub_1C151E62C();
  uint64_t v24 = v23;
  if (v22 == sub_1C151E62C() && v24 == v25)
  {
    id v38 = a1;
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  uint64_t v70 = v14;
  char v27 = sub_1C1520A9C();
  id v28 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_13:
    id v39 = objc_msgSend(*(id *)(v72 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline), sel_contentURL);
    if (v39)
    {
      id v40 = v39;
      sub_1C1515F1C();

      uint64_t v41 = sub_1C1515FDC();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v17, 0, 1, v41);
    }
    else
    {
      uint64_t v41 = sub_1C1515FDC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v17, 1, 1, v41);
    }
    sub_1C002F694((uint64_t)v17, (uint64_t)v21);
    sub_1C1515FDC();
    uint64_t v43 = *(void *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v21, 1, v41) != 1)
    {
      *(void *)(a2 + 24) = v41;
      id v44 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
      (*(void (**)(uint64_t *, char *, uint64_t))(v43 + 32))(v44, v21, v41);
      goto LABEL_21;
    }

    id v36 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    uint64_t v37 = (uint64_t)v21;
LABEL_19:
    sub_1BFF50F68(v37, (unint64_t *)&qword_1EB8948A0, v36);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  id v69 = v28;
  uint64_t v29 = sub_1C151E62C();
  uint64_t v31 = v30;
  uint64_t v33 = a2;
  if (v29 == sub_1C151E62C() && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
LABEL_23:
    type metadata accessor for SharingHTMLBuilder();
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = 0;
    *(void *)(v46 + 24) = 0xE000000000000000;
    swift_beginAccess();
    *(void *)(v46 + 16) = 0;
    *(void *)(v46 + 24) = 0xE000000000000000;
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_1C0175424(v46, v72);
    uint64_t v49 = v48;
    swift_release();
    if (v49)
    {
      *(void *)(a2 + 24) = MEMORY[0x1E4FBB1A0];

      *(void *)a2 = v47;
      *(void *)(a2 + 8) = v49;
      return;
    }

    goto LABEL_36;
  }
  char v45 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v45) {
    goto LABEL_23;
  }
  uint64_t v50 = sub_1C151E62C();
  uint64_t v52 = (uint64_t)v70;
  uint64_t v53 = v71;
  if (v50 == 0xD000000000000024 && v51 == 0x80000001C16051E0) {
    goto LABEL_28;
  }
  char v54 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  if ((v54 & 1) == 0)
  {
    if (sub_1C151E62C() == 0xD00000000000002ELL && v62 == 0x80000001C1605210)
    {
LABEL_28:
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
    char v63 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if ((v63 & 1) == 0)
    {
      sub_1C0025B10(v72 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL, (uint64_t)v10);
      uint64_t v64 = sub_1C1515FDC();
      uint64_t v65 = *(void *)(v64 - 8);
      int v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48))(v10, 1, v64);
      a1 = v69;
      if (v66 == 1)
      {

        uint64_t v59 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
        uint64_t v60 = (uint64_t)v10;
        goto LABEL_35;
      }
      *(void *)(v33 + 24) = v64;
      uint64_t v67 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v33);
      (*(void (**)(uint64_t *, char *, uint64_t))(v65 + 32))(v67, v10, v64);
LABEL_21:

      return;
    }
  }
LABEL_30:
  id v55 = objc_msgSend(*(id *)(v72 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline), sel_contentURL);
  if (v55)
  {
    uint64_t v56 = v55;
    sub_1C1515F1C();

    uint64_t v57 = sub_1C1515FDC();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v53, 0, 1, v57);
  }
  else
  {
    uint64_t v57 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v53, 1, 1, v57);
  }
  sub_1C002F694(v53, v52);
  sub_1C1515FDC();
  uint64_t v58 = *(void *)(v57 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v52, 1, v57) == 1)
  {

    uint64_t v59 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    uint64_t v60 = v52;
LABEL_35:
    sub_1BFF50F68(v60, (unint64_t *)&qword_1EB8948A0, v59);
LABEL_36:
    *(_OWORD *)uint64_t v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    return;
  }
  *(void *)(v33 + 24) = v57;
  BOOL v61 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v58 + 32))(v61, v52, v57);
}

LPLinkMetadata_optional __swiftcall SharingArticleURLActivityItemSource.activityViewControllerLinkMetadata(_:)(UIActivityViewController *a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_linkPresentationSource))
  {
    sub_1C1518CEC();
    uint64_t v2 = (objc_class *)objc_msgSend(v5, sel_linkMetadata);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = v2;
  result.value.super.isa = v4;
  result.is_nil = v3;
  return result;
}

uint64_t sub_1C0175424(uint64_t a1, uint64_t a2)
{
  void (*v51)(long long *__return_ptr, unsigned char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  char **v57;
  char *v58;
  uint64_t v59;
  char **v60;
  uint64_t v61;
  char **v62;
  uint64_t ObjCClassFromMetadata;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char **v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char **v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char **v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned char v106[40];
  long long v107[2];
  long long v108;
  uint64_t v109;
  char **v110;
  void v111[3];
  uint64_t v112;
  uint64_t v113;
  void v114[3];
  uint64_t v115;
  char **v116;

  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v100 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E400(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v102 = (char *)&v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v96 - v10;
  uint64_t v12 = type metadata accessor for SharingHTMLBuilder();
  unsigned __int8 v115 = v12;
  long long v116 = &off_1F1C01D50;
  v114[0] = a1;
  __swift_project_boxed_opaque_existential_1(v114, v12);
  uint64_t v13 = off_1F1C01D60[0];
  swift_retain();
  ((void (*)(uint64_t@<X0>, uint64_t@<X1>, void *@<X8>))v13)(v12, (uint64_t)&off_1F1C01D50, v111);
  uint64_t v14 = a2;
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline;
  id v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                              + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline), sel_title));
  if (v16)
  {
    char v17 = v16;
    uint64_t v18 = sub_1C151E62C();
    uint64_t v20 = v19;

    uint64_t v21 = v112;
    uint64_t v22 = v113;
    __swift_project_boxed_opaque_existential_1(v111, v112);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 24))(&v108, v18, v20, v21, v22);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
    sub_1BFC773DC(&v108, (uint64_t)v111);
    uint64_t v23 = v112;
    uint64_t v24 = v113;
    __swift_project_boxed_opaque_existential_1(v111, v112);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v24 + 16))(&v108, v23, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
    sub_1BFC773DC(&v108, (uint64_t)v111);
  }
  id v25 = objc_msgSend(*(id *)(v14 + v15), sel_shortExcerpt);
  if (v25)
  {
    uint64_t v26 = v25;
    uint64_t v27 = sub_1C151E62C();
    uint64_t v29 = v28;

    uint64_t v30 = v112;
    uint64_t v31 = v113;
    __swift_project_boxed_opaque_existential_1(v111, v112);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(&v108, v27, v29, v30, v31);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
    sub_1BFC773DC(&v108, (uint64_t)v111);
  }
  sub_1C0025B10(v14 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL, (uint64_t)v11);
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  int v33 = v32(v11, 1, v4);
  uint64_t v103 = v4;
  uint64_t v101 = v5;
  if (v33 == 1)
  {
    sub_1BFF50F68((uint64_t)v11, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  }
  else
  {
    unint64_t v97 = sub_1C1515E2C();
    uint64_t v98 = v34;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    __swift_project_boxed_opaque_existential_1(v114, v115);
    uint64_t DynamicType = swift_getDynamicType();
    id v36 = v116;
    uint64_t v105 = v14;
    unint64_t v104 = v15;
    uint64_t v37 = v116[1];
    uint64_t v109 = DynamicType;
    uint64_t v110 = v116;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v108);
    ((void (*)(uint64_t, char **))v37)(DynamicType, v36);
    unint64_t v99 = v5 + 48;
    uint64_t v38 = v109;
    id v39 = v110;
    __swift_project_boxed_opaque_existential_1(&v108, v109);
    uint64_t v40 = *(void *)(v105
                    + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider
                    + 24);
    uint64_t v41 = *(void *)(v105
                    + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider
                    + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v105 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider), v40);
    id v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 8);
    uint64_t v43 = swift_unknownObjectRetain();
    uint64_t v44 = v42(v43, v40, v41);
    uint64_t v46 = v45;
    swift_unknownObjectRelease();
    ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, char **))v39[7])(v107, v44, v46, v38, v39);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
    sub_1BFC773DC(v107, (uint64_t)&v108);
    uint64_t v47 = v109;
    uint64_t v48 = v110;
    __swift_project_boxed_opaque_existential_1(&v108, v109);
    ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char **))v48[6])(v107, v97, v98, v97, v98, v47, v48);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
    sub_1BFC773DC(v107, (uint64_t)&v108);
    uint64_t v49 = v112;
    uint64_t v50 = v113;
    __swift_project_boxed_opaque_existential_1(v111, v112);
    sub_1BFC66384((uint64_t)&v108, (uint64_t)v106);
    uint64_t v51 = *(void (**)(long long *__return_ptr, unsigned char *, uint64_t, uint64_t))(v50 + 32);
    uint64_t v52 = v49;
    uint64_t v14 = v105;
    uint64_t v53 = v50;
    uint64_t v15 = v104;
    v51(v107, v106, v52, v53);
    sub_1BFF50F68((uint64_t)v106, (unint64_t *)&qword_1EA197408, (void (*)(uint64_t))sub_1C01762F0);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
    sub_1BFC773DC(v107, (uint64_t)v111);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
  }
  char v54 = objc_msgSend(*(id *)(v14 + v15), sel_articleID);
  if (v54)
  {

    if (*(unsigned char *)(v14 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_sourceChannelPublic) == 1)
    {
      id v55 = v14;
      __swift_project_boxed_opaque_existential_1(v114, v115);
      uint64_t v56 = swift_getDynamicType();
      uint64_t v57 = v116;
      uint64_t v58 = v116[1];
      uint64_t v109 = v56;
      uint64_t v110 = v116;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v108);
      ((void (*)(uint64_t, char **))v58)(v56, v57);
      uint64_t v59 = v109;
      uint64_t v60 = v110;
      __swift_project_boxed_opaque_existential_1(&v108, v109);
      ((void (*)(long long *__return_ptr, uint64_t, char **))v60[2])(v107, v59, v60);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
      sub_1BFC773DC(v107, (uint64_t)&v108);
      BOOL v61 = v109;
      uint64_t v62 = v110;
      __swift_project_boxed_opaque_existential_1(&v108, v109);
      type metadata accessor for Localized();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      uint64_t v64 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
      uint64_t v65 = sub_1C1515B8C();
      uint64_t v67 = v66;

      ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, char **))v62[7])(v107, v65, v67, v61, v62);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
      sub_1BFC773DC(v107, (uint64_t)&v108);
      uint64_t v68 = v109;
      id v69 = v110;
      __swift_project_boxed_opaque_existential_1(&v108, v109);
      ((void (*)(long long *__return_ptr, uint64_t, unint64_t, uint64_t, char **))v69[7])(v107, 32, 0xE100000000000000, v68, v69);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
      sub_1BFC773DC(v107, (uint64_t)&v108);
      uint64_t v70 = (void *)(v55 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider);
      uint64_t v71 = *(void *)(v55
                      + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider
                      + 24);
      uint64_t v72 = *(void *)(v55
                      + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider
                      + 32);
      __swift_project_boxed_opaque_existential_1((void *)(v55 + OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider), v71);
      char v73 = (uint64_t)v102;
      (*(void (**)(uint64_t, uint64_t))(v72 + 24))(v71, v72);
      uint64_t v74 = v103;
      if (v32((char *)v73, 1, v103) == 1)
      {
        sub_1BFF50F68(v73, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        uint64_t v75 = v110;
        __swift_project_boxed_opaque_existential_1(&v108, v109);
        uint64_t v76 = v70[3];
        uint64_t v77 = v70[4];
        __swift_project_boxed_opaque_existential_1(v70, v76);
        BOOL v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 16))(v76, v77);
        ((void (*)(long long *__return_ptr, uint64_t))v75[7])(v107, v78);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v79 = v101;
        uint64_t v80 = v100;
        (*(void (**)(char *, uint64_t, uint64_t))(v101 + 32))(v100, v73, v74);
        uint64_t v81 = v109;
        uint64_t v82 = v110;
        __swift_project_boxed_opaque_existential_1(&v108, v109);
        uint64_t v83 = v70[3];
        uint64_t v84 = v70[4];
        __swift_project_boxed_opaque_existential_1(v70, v83);
        uint64_t v85 = (*(uint64_t (**)(uint64_t, uint64_t))(v84 + 16))(v83, v84);
        uint64_t v87 = v86;
        uint64_t v88 = sub_1C1515E2C();
        ((void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char **))v82[6])(v107, v85, v87, v88, v89, v81, v82);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v74);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
      sub_1BFC773DC(v107, (uint64_t)&v108);
      uint64_t v90 = v112;
      unint64_t v91 = v113;
      __swift_project_boxed_opaque_existential_1(v111, v112);
      sub_1BFC66384((uint64_t)&v108, (uint64_t)v106);
      (*(void (**)(long long *__return_ptr, unsigned char *, uint64_t, uint64_t))(v91 + 32))(v107, v106, v90, v91);
      sub_1BFF50F68((uint64_t)v106, (unint64_t *)&qword_1EA197408, (void (*)(uint64_t))sub_1C01762F0);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
      sub_1BFC773DC(v107, (uint64_t)v111);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v108);
    }
  }
  uint64_t v92 = v112;
  uint64_t v93 = v113;
  __swift_project_boxed_opaque_existential_1(v111, v112);
  uint64_t v94 = (*(uint64_t (**)(uint64_t, uint64_t))(v93 + 64))(v92, v93);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v114);
  return v94;
}

id sub_1C0175F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  ObjectType = (objc_class *)swift_getObjectType();
  v22[3] = a6;
  v22[4] = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_0, a3, a6);
  *(void *)&a5[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline] = a1;
  id v16 = a5;
  id v17 = objc_msgSend((id)swift_unknownObjectRetain(), sel_sourceChannel);
  if (v17)
  {
    unsigned __int8 v18 = objc_msgSend(v17, sel_isPublic);
    swift_unknownObjectRelease();
  }
  else
  {
    unsigned __int8 v18 = 0;
  }
  sub_1C0025B10(a2, (uint64_t)&v16[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL]);
  sub_1BFC66384((uint64_t)v22, (uint64_t)&v16[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider]);
  v16[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_sourceChannelPublic] = v18;
  *(void *)&v16[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_linkPresentationSource] = a4;
  swift_retain();

  v21.receiver = v16;
  v21.super_class = ObjectType;
  id v19 = objc_msgSendSuper2(&v21, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  sub_1BFF50F68(a2, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  return v19;
}

id sub_1C0176090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (char *)objc_allocWithZone(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, a6);
  return sub_1C0175F04(a1, a2, (uint64_t)v15, a4, v17, a6, a7);
}

uint64_t sub_1C017619C()
{
  return type metadata accessor for SharingArticleURLActivityItemSource();
}

uint64_t type metadata accessor for SharingArticleURLActivityItemSource()
{
  uint64_t result = qword_1EA1973F8;
  if (!qword_1EA1973F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C01761F0()
{
  sub_1BFF2E400(319, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SharingArticleURLActivityItemSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SharingArticleURLActivityItemSource);
}

uint64_t dispatch thunk of SharingArticleURLActivityItemSource.__allocating_init(headline:articleURL:mailShareLinkTextProvider:linkPresentationSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unint64_t sub_1C01762F0()
{
  unint64_t result = qword_1EA197410;
  if (!qword_1EA197410)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA197410);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatSourceItemTipSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C151CE3C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151A29C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for FormatSourceItemTipSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151CE3C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1C151A29C();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t initializeWithCopy for FormatSourceItemTipSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151CE3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151A29C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for FormatSourceItemTipSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151CE3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151A29C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for FormatSourceItemTipSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151CE3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151A29C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatSourceItemTipSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151CE3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151A29C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSourceItemTipSource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01767EC);
}

uint64_t sub_1C01767EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151CE3C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_1C151A29C();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for FormatSourceItemTipSource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01768F8);
}

uint64_t sub_1C01768F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C151CE3C();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_1C151A29C();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for FormatSourceItemTipSource()
{
  uint64_t result = qword_1EB890B90;
  if (!qword_1EB890B90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0176A48()
{
  uint64_t result = sub_1C151CE3C();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151A29C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t FormatVariableNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVariableNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVariableNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatVariableNode.statements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0176C3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatVariableNode.statements.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatVariableNode.statements.modify())()
{
  return j_j__swift_endAccess;
}

void *FormatVariableNode.__allocating_init(identifier:statements:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  swift_beginAccess();
  v6[2] = a1;
  v6[3] = a2;
  swift_beginAccess();
  v6[4] = a3;
  return v6;
}

void *FormatVariableNode.init(identifier:statements:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  v3[2] = a1;
  v3[3] = a2;
  swift_beginAccess();
  v3[4] = a3;
  return v3;
}

uint64_t FormatVariableNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatVariableNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void *sub_1C0176E8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C0860538(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C0176EB8(void *a1)
{
  return FormatVariableNode.encode(to:)(a1);
}

uint64_t sub_1C0176EDC(void **a1, void **a2)
{
  return _s8NewsFeed18FormatVariableNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C0176EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a2;
  uint64_t v23 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v23);
  uint64_t v8 = (void *)((char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for FormatOptionsNodeStatement();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v13 = *(void *)(a3 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    v22[0] = v13;
    v22[1] = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options;
    uint64_t v15 = v13 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v16 = *(void *)(v10 + 72);
    while (1)
    {
      sub_1C01780E0(v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
      sub_1BFF81F7C();
      unsigned __int8 v18 = (char *)v8 + *(int *)(v17 + 48);
      *uint64_t v8 = a4;
      sub_1BFF81FF0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, v24, v19);
      swift_storeEnumTagMultiPayload();
      swift_retain();
      uint64_t v20 = sub_1C0DF14C0((uint64_t)v8);
      sub_1BFF81044((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
      if (v4) {
        break;
      }
      if (v20[2])
      {
        swift_retain();
        sub_1C019ED64((uint64_t)v20);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1BFF81044((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
      }
      else
      {
        sub_1BFF81044((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
        swift_bridgeObjectRelease();
      }
      v15 += v16;
      if (!--v14) {
        return swift_bridgeObjectRelease();
      }
    }
    sub_1BFF81044((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01771C8(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = a1;
  uint64_t v73 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1F4188790](v73);
  uint64_t v64 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v63 = (uint64_t)&v59 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v59 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v72 = (uint64_t)&v59 - v11;
  uint64_t v71 = type metadata accessor for FormatOptionsNodeStatement();
  uint64_t v12 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v14 = (unint64_t *)((char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v59 - v16;
  swift_beginAccess();
  uint64_t result = *(void *)(a2 + 32);
  uint64_t v68 = *(void *)(result + 16);
  if (!v68) {
    return result;
  }
  BOOL v61 = (uint64_t *)(a2 + 32);
  uint64_t v60 = v17;
  uint64_t v62 = v2;
  unint64_t v59 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v69 = result + v59;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v19 = 0;
  uint64_t v70 = result;
  uint64_t v67 = v12;
  while (1)
  {
    if (v19 >= *(void *)(result + 16))
    {
      __break(1u);
      return result;
    }
    uint64_t v66 = *(void *)(v12 + 72);
    sub_1C01780E0(v69 + v66 * v19, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    uint64_t v20 = v14[1];
    *(void *)uint64_t v9 = *v14;
    *((void *)v9 + 1) = v20;
    *((void *)v9 + 6) = MEMORY[0x1E4FBC860];
    objc_super v21 = &v9[*(int *)(v73 + 28)];
    uint64_t v22 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
    uint64_t v23 = v71;
    swift_bridgeObjectRetain();
    sub_1C1002AAC((uint64_t)v77);
    uint64_t v24 = v77[0];
    uint64_t v25 = *(void *)((char *)v14 + *(int *)(v23 + 24));
    if (v78)
    {
      uint64_t v26 = v77[1];
      swift_bridgeObjectRetain();
      sub_1BFF81044((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
      char v27 = 1;
      goto LABEL_23;
    }
    uint64_t v65 = (uint64_t)v21;
    uint64_t v24 = LOBYTE(v77[0]);
    uint64_t v28 = *(void *)(v25 + 16);
    if (v28) {
      break;
    }
    swift_bridgeObjectRetain();
LABEL_22:
    sub_1BFF81044((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    swift_bridgeObjectRelease();
    uint64_t v26 = 0;
    uint64_t v25 = 0;
    char v27 = 0;
LABEL_23:
    *((void *)v9 + 2) = v24;
    *((void *)v9 + 3) = v26;
    *((void *)v9 + 4) = v25;
    v9[40] = v27;
    uint64_t v38 = v72;
    sub_1C017807C((uint64_t)v9, v72);
    uint64_t v39 = swift_allocBox();
    uint64_t v41 = v40;
    sub_1C01780E0(v38, v40, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    id v42 = *(void **)(v74 + 48);
    uint64_t v43 = v42[2];
    if (!v43 || v42[v43 + 3] >> 60 != 1) {
      goto LABEL_28;
    }
    uint64_t v44 = swift_projectBox();
    uint64_t v45 = v63;
    sub_1C01780E0(v44, v63, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    uint64_t v46 = v64;
    sub_1C01780E0(v41, v64, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    swift_retain();
    swift_retain();
    BOOL v47 = sub_1C0C4C6E0(v45, v46);
    sub_1BFF81044(v46, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    sub_1BFF81044(v45, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    swift_release();
    swift_release();
    if (!v47)
    {
      id v42 = *(void **)(v74 + 48);
LABEL_28:
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v42 = sub_1C0EE23FC(0, v42[2] + 1, 1, v42);
      }
      unint64_t v49 = v42[2];
      unint64_t v48 = v42[3];
      if (v49 >= v48 >> 1) {
        id v42 = sub_1C0EE23FC((void *)(v48 > 1), v49 + 1, 1, v42);
      }
      v42[2] = v49 + 1;
      v42[v49 + 4] = v39 | 0x1000000000000000;
      swift_release();
      *(void *)(v74 + 48) = v42;
      goto LABEL_33;
    }
    swift_release();
LABEL_33:
    ++v19;
    sub_1BFF81044(v72, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataOption);
    uint64_t v12 = v67;
    uint64_t result = v70;
    if (v19 == v68)
    {
      swift_bridgeObjectRelease();
      uint64_t result = *v61;
      uint64_t v54 = *(void *)(*v61 + 16);
      if (v54)
      {
        uint64_t v55 = result + v59;
        uint64_t v70 = *v61;
        swift_bridgeObjectRetain();
        uint64_t v56 = v62;
        uint64_t v57 = (uint64_t)v60;
        uint64_t v58 = v66;
        while (1)
        {
          sub_1C01780E0(v55, v57, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
          sub_1C05B9664(v74);
          if (v56) {
            break;
          }
          sub_1BFF81044(v57, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
          v55 += v58;
          if (!--v54) {
            return swift_bridgeObjectRelease();
          }
        }
        uint64_t v52 = (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement;
        uint64_t v53 = v57;
        goto LABEL_39;
      }
      return result;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v29 = 0;
  while (1)
  {
    unsigned int v32 = *(unsigned __int8 *)(v25 + v29 + 32);
    if (!(v32 >> 6))
    {
      if (v24 != 3)
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1C0178148((unint64_t *)&qword_1EA196B88, 255, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
        swift_allocError();
        char v51 = 3;
        goto LABEL_38;
      }
      char v79 = *(unsigned char *)(v25 + v29 + 32);
      v75[0] = 1.0;
      *(void *)&v75[1] = MEMORY[0x1E4FBC860];
      sub_1C0F8227C(v75, &v76);
      uint64_t v31 = v76;
      goto LABEL_9;
    }
    if (v32 >> 6 != 1) {
      break;
    }
    if (v24 != 5)
    {
      type metadata accessor for FormatDerivedDataError();
      sub_1C0178148((unint64_t *)&qword_1EA196B88, 255, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
      swift_allocError();
      char v51 = 5;
      goto LABEL_38;
    }
    if (v32)
    {
      uint64_t v30 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = swift_allocObject();
      *(unsigned char *)(v31 + 16) = 1;
      *(void *)(v31 + 24) = v30;
    }
    else
    {
      uint64_t v33 = swift_allocObject();
      uint64_t v34 = sub_1C151E7AC();
      uint64_t v35 = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v33 + 16) = v34;
      *(void *)(v33 + 24) = v35;
      uint64_t v31 = v33 | 0x4000000000000000;
    }
LABEL_9:
    *(void *)&v75[0] = v31;
    FormatOptionValue.type.getter((char *)&v80);
LABEL_10:
    swift_release();
    ++v29;
    uint64_t v24 = v80;
    if (v28 == v29)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  if (v24 == 4)
  {
    uint64_t v36 = swift_allocObject();
    *(void *)&v75[0] = 1;
    sub_1BFF01BC4();
    *(void *)(v36 + 16) = sub_1C151FF2C();
    *(void *)(v36 + 24) = v37;
    *(void *)(v36 + 32) = MEMORY[0x1E4FBC860];
    *(void *)&v75[0] = v36 | 0x5000000000000000;
    FormatOptionValue.type.getter((char *)&v80);
    goto LABEL_10;
  }
  type metadata accessor for FormatDerivedDataError();
  sub_1C0178148((unint64_t *)&qword_1EA196B88, 255, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
  swift_allocError();
  char v51 = 4;
LABEL_38:
  *uint64_t v50 = v51;
  v50[1] = v24;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_bridgeObjectRelease();
  sub_1BFF81044((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v52 = (uint64_t (*)(void))sub_1C0178190;
  uint64_t v53 = v65;
LABEL_39:
  sub_1BFF81044(v53, v52);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0177B14(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v5 = 1;
  long long v6 = 0u;
  long long v7 = 0u;
  int v8 = 0;
  __int16 v9 = -16384;
  swift_retain();
  sub_1C0F4B178((uint64_t)&v5, a1, v3);
  return swift_release();
}

uint64_t FormatVariableNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v19);
  long long v7 = (void *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for FormatOptionsNodeStatement();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = *(void *)(v2 + 32);
  uint64_t v13 = *(void *)(result + 16);
  if (v13)
  {
    uint64_t v14 = result + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(void *)(v9 + 72);
    v17[1] = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
    uint64_t v18 = v15;
    v17[0] = result;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C01780E0(v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
      *long long v7 = a2;
      v7[1] = a1;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      swift_retain();
      uint64_t v16 = sub_1C0DF14C0((uint64_t)v7);
      sub_1BFF81044((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
      if (v3) {
        break;
      }
      if (v16[2])
      {
        swift_retain();
        sub_1C019ED64((uint64_t)v16);
        swift_bridgeObjectRelease();
        swift_release();
        sub_1BFF81044((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
      }
      else
      {
        sub_1BFF81044((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
        swift_bridgeObjectRelease();
      }
      v14 += v18;
      if (!--v13) {
        return swift_bridgeObjectRelease();
      }
    }
    sub_1BFF81044((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0177E0C(uint64_t a1, uint64_t a2)
{
  return FormatVariableNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1C0177E30(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C0178148(&qword_1EA197420, a2, (void (*)(uint64_t))type metadata accessor for FormatVariableNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatVariableNode()
{
  return self;
}

uint64_t sub_1C0177EAC(void *a1, uint64_t a2)
{
  a1[1] = sub_1C0178148(&qword_1EB866598, a2, (void (*)(uint64_t))type metadata accessor for FormatVariableNode);
  a1[2] = sub_1C0178148(&qword_1EB866590, v3, (void (*)(uint64_t))type metadata accessor for FormatVariableNode);
  uint64_t result = sub_1C0178148(&qword_1EA197428, v4, (void (*)(uint64_t))type metadata accessor for FormatVariableNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0177F58(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C0178148(&qword_1EA197430, a2, (void (*)(uint64_t))type metadata accessor for FormatVariableNode);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0177FB0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0178000@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatVariableNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatVariableNode);
}

uint64_t dispatch thunk of FormatVariableNode.__allocating_init(identifier:statements:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C017807C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatDerivedDataOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01780E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0178148(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0178190()
{
  if (!qword_1EB891B88)
  {
    type metadata accessor for FormatVersionRequirement(255);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB891B88);
    }
  }
}

uint64_t sub_1C01781E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0178228()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double FormatDataLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t FormatDataLayoutAttributes.identifier.getter()
{
  uint64_t v0 = sub_1C017C35C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FormatDataLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDataLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDataLayoutAttributes.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatDataLayoutAttributes.dataLayoutValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDataLayoutAttributes.dataAccessibilityValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatDataLayoutAttributes.data.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 144));
}

void FormatDataLayoutAttributes.accessibilityRole.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 152));
}

uint64_t *FormatDataLayoutAttributes.deinit()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 144));
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FormatDataLayoutAttributes.__deallocating_deinit()
{
  FormatDataLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C01784FC()
{
  uint64_t v0 = sub_1C017C35C();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FormatDataLayoutAttributes.formatImageRequests(options:inventory:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(*(void *)(v2 + 112) + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
    {
      swift_retain();
      uint64_t v8 = FormatDataLayoutValue.formatImageRequests(options:inventory:)(a1, a2);
      if (v8) {
        sub_1BFE4C8E0((uint64_t)v8);
      }
      swift_release();
    }
    swift_bridgeObjectRelease();
    uint64_t result = v9;
  }
  if (!*(void *)(result + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t FormatDataLayoutAttributes.issueCoverImageRequests(options:inventory:)(double *a1, uint64_t a2)
{
  uint64_t v457 = MEMORY[0x1E4FBC860];
  uint64_t v543 = MEMORY[0x1E4FBC860];
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = sub_1BFFCDB8C(v3);
  if (v4)
  {
    uint64_t v528 = v3 + 32;
    uint64_t v484 = v4;
    swift_bridgeObjectRetain();
    uint64_t v5 = v484;
    unint64_t v6 = 0;
    uint64_t v471 = v3;
    while (1)
    {
      if (*(void *)(v3 + 16) <= v6)
      {
        __break(1u);
LABEL_338:
        __break(1u);
LABEL_339:
        __break(1u);
LABEL_340:
        __break(1u);
LABEL_341:
        __break(1u);
LABEL_342:
        __break(1u);
LABEL_343:
        __break(1u);
LABEL_344:
        __break(1u);
LABEL_345:
        __break(1u);
LABEL_346:
        __break(1u);
LABEL_347:
        __break(1u);
LABEL_348:
        __break(1u);
LABEL_349:
        __break(1u);
LABEL_350:
        __break(1u);
LABEL_351:
        __break(1u);
LABEL_352:
        __break(1u);
LABEL_353:
        __break(1u);
LABEL_354:
        __break(1u);
LABEL_355:
        __break(1u);
LABEL_356:
        __break(1u);
LABEL_357:
        __break(1u);
LABEL_358:
        __break(1u);
LABEL_359:
        __break(1u);
        goto LABEL_360;
      }
      unint64_t v9 = *(void *)(v528 + 8 * v6++);
      switch((v9 >> 59) & 0x1E | (v9 >> 2) & 1)
      {
        case 3uLL:
          unint64_t v520 = v6;
          sub_1C0078488();
          uint64_t v463 = v10;
          uint64_t v11 = (void *)(swift_projectBox() + *(int *)(v10 + 48));
          uint64_t v13 = v11[2];
          uint64_t v12 = v11[3];
          v540 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v447 = *(void *)(*(void *)(*v11 + 16) + 112);
          uint64_t v14 = sub_1BFFCDB8C(v447);
          if (v14)
          {
            if (v14 < 1) {
              goto LABEL_359;
            }
            uint64_t v490 = v14;
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1C017C3D4(v13, v12);
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v15 = v447 + 32;
            uint64_t v16 = v490;
            uint64_t v17 = 0;
            uint64_t v504 = v12;
            uint64_t v508 = v13;
            while (2)
            {
              unint64_t v195 = *(void *)(v15 + 8 * v17++);
              switch((v195 >> 59) & 0x1E | (v195 >> 2) & 1)
              {
                case 3uLL:
                  uint64_t v196 = MEMORY[0x1E4FBC860];
                  uint64_t v524 = v17;
                  v197 = (void *)(swift_projectBox() + *(int *)(v463 + 48));
                  uint64_t v199 = v197[2];
                  uint64_t v198 = v197[3];
                  uint64_t v537 = v196;
                  uint64_t v499 = *(void *)(*(void *)(*v197 + 16) + 112);
                  uint64_t v200 = sub_1BFFCDB8C(v499);
                  uint64_t v458 = v198;
                  if (v200)
                  {
                    if (v200 < 1) {
                      goto LABEL_355;
                    }
                    uint64_t v494 = v200;
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    sub_1C017C3D4(v199, v198);
                    swift_retain();
                    uint64_t v201 = v499;
                    swift_bridgeObjectRetain();
                    uint64_t v202 = v494;
                    uint64_t v203 = 0;
                    uint64_t v478 = v199;
                    while (2)
                    {
                      unint64_t v204 = *(void *)(v201 + 8 * v203++ + 32);
                      switch((v204 >> 59) & 0x1E | (v204 >> 2) & 1)
                      {
                        case 3uLL:
                          uint64_t v205 = swift_projectBox() + *(int *)(v463 + 48);
                          uint64_t v207 = *(void *)(v205 + 16);
                          uint64_t v206 = *(void *)(v205 + 24);
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          sub_1C017C3D4(v207, v206);
                          swift_retain();
                          uint64_t v208 = sub_1BFD5796C(a1, a2);
                          swift_release();
                          swift_release();
                          swift_release();
                          uint64_t v209 = v207;
                          uint64_t v210 = v206;
                          goto LABEL_192;
                        case 4uLL:
                          uint64_t v211 = *(void *)((v204 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
                          uint64_t v212 = *(void *)((v204 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          sub_1C017C3D4(v211, v212);
                          swift_retain();
                          uint64_t v208 = sub_1BFD5796C(a1, a2);
                          swift_release();
                          swift_release();
                          swift_release();
                          uint64_t v209 = v211;
                          uint64_t v210 = v212;
                          goto LABEL_192;
                        case 6uLL:
                          uint64_t v228 = *(void *)((v204 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                          uint64_t v229 = *(void *)((v204 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          sub_1C017C3D4(v228, v229);
                          uint64_t v208 = FormatStateViewNodeDataLayoutAttributes.issueCoverImageRequests(options:inventory:)(a1, a2);
                          swift_release();
                          swift_release();
                          uint64_t v209 = v228;
                          uint64_t v210 = v229;
LABEL_192:
                          sub_1C017C418(v209, v210);
                          goto LABEL_193;
                        case 0xCuLL:
                          uint64_t v213 = v204 & 0xFFFFFFFFFFFFFFBLL;
                          v215 = *(void **)((v204 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                          uint64_t v214 = *(void *)(v213 + 24);
                          v216 = *(void **)(v213 + 32);
                          uint64_t v217 = *(void *)(v213 + 40);
                          v218 = *(void **)(v213 + 48);
                          uint64_t v219 = *(void *)(v213 + 56);
                          v220 = *(void **)(v213 + 64);
                          uint64_t v221 = *(void *)(v213 + 80);
                          if (*(unsigned char *)(v213 + 72))
                          {
                            if (*(unsigned char *)(v213 + 72) != 1)
                            {
                              sub_1C00FA1F0(v215, v214, v216, v217, v218, v219, *(void **)(v213 + 64), 2);
                              goto LABEL_182;
                            }
                            char v440 = 1;
                            uint64_t v450 = *(void *)(v213 + 96);
                            uint64_t v222 = *(void *)(v213 + 24);
                            v223 = *(void **)(v213 + 32);
                            uint64_t v224 = *(void *)(v213 + 40);
                            v225 = *(void **)(v213 + 48);
                            uint64_t v226 = *(void *)(v213 + 56);
                            uint64_t v443 = *(void *)(v213 + 104);
                            sub_1C00FA170(v215, v214, v216, v217, v218, v219, v220, 1);
                            swift_retain();
                            v434 = v223;
                            uint64_t v437 = v222;
                            uint64_t v427 = v226;
                            sub_1C00FA170(v215, v222, v223, v224, v225, v226, v220, 1);
                            swift_retain();
                            swift_retain();
                            sub_1C017C3D4(v450, v443);
                            uint64_t v431 = v224;
                            swift_bridgeObjectRelease();

                            v423 = v215;
                            v425 = v220;
                            v429 = v225;
                            v215 = v225;
                            v227 = v220;
                          }
                          else
                          {
                            char v440 = *(unsigned char *)(v213 + 72);
                            uint64_t v450 = *(void *)(v213 + 96);
                            uint64_t v230 = *(void *)(v213 + 24);
                            v227 = *(void **)(v213 + 32);
                            uint64_t v231 = *(void *)(v213 + 40);
                            v232 = *(void **)(v213 + 48);
                            uint64_t v233 = *(void *)(v213 + 56);
                            uint64_t v443 = *(void *)(v213 + 104);
                            sub_1C00FA170(v215, v214, v216, v217, v218, v219, v220, 0);
                            swift_retain();
                            uint64_t v437 = v230;
                            v429 = v232;
                            uint64_t v431 = v231;
                            v425 = v220;
                            uint64_t v427 = v233;
                            sub_1C00FA170(v215, v230, v227, v231, v232, v233, v220, 0);
                            swift_retain();
                            swift_retain();
                            sub_1C017C3D4(v450, v443);
                            v423 = v215;
                            v434 = v227;
                          }
                          sub_1BFF081C0();
                          uint64_t v234 = swift_allocObject();
                          uint64_t v421 = sub_1C00B106C(v234, 1);
                          v236 = v235;
                          double v237 = *(double *)(v221 + 200);
                          uint64_t v238 = *(void *)(v221 + 208);
                          double v239 = *a1;
                          id v240 = v227;
                          sub_1C151F72C();
                          double v242 = v241;
                          double v244 = v243;
                          if (v237 > 0.0) {
                            uint64_t v245 = *(void *)&v237;
                          }
                          else {
                            uint64_t v245 = 0;
                          }
                          if (v237 <= 0.0) {
                            uint64_t v238 = 0;
                          }
                          uint64_t v246 = type metadata accessor for IssueCoverImageProcessorRequest();
                          uint64_t v247 = swift_allocObject();
                          uint64_t v248 = sub_1C017C088(v240, v245, v238, v237 <= 0.0, v247, v242, v244, v239);

                          v236[3] = v246;
                          v236[4] = sub_1C017C474((unint64_t *)&qword_1EB86EF88, (void (*)(uint64_t))type metadata accessor for IssueCoverImageProcessorRequest);
                          uint64_t *v236 = v248;
                          uint64_t v208 = nullsub_1(v421);
                          swift_release();
                          swift_release();
                          sub_1C017C418(v450, v443);
                          sub_1C00FA1F0(v423, v437, v434, v431, v429, v427, v425, v440);
LABEL_202:
                          sub_1BFE4C8E0(v208);
LABEL_181:
                          swift_release();
                          uint64_t v199 = v478;
                          uint64_t v201 = v499;
LABEL_182:
                          uint64_t v202 = v494;
LABEL_183:
                          if (v202 != v203) {
                            continue;
                          }
                          swift_bridgeObjectRelease();
                          uint64_t v364 = v537;
                          break;
                        case 0x10uLL:
                          sub_1C017C364();
                          swift_projectBox();
                          swift_retain();
                          swift_retain();
                          uint64_t v208 = sub_1BFD573F4(a1, a2);
                          swift_release();
LABEL_193:
                          if (v208) {
                            goto LABEL_202;
                          }
                          goto LABEL_181;
                        default:
                          goto LABEL_183;
                      }
                      break;
                    }
                  }
                  else
                  {
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    sub_1C017C3D4(v199, v198);
                    swift_retain();
                    uint64_t v364 = v196;
                  }
                  uint64_t v366 = sub_1BFFCDB84(v364);
                  swift_release();
                  swift_release();
                  if (v366)
                  {
                    swift_release();
                    sub_1C017C418(v199, v458);
                    uint64_t v13 = v508;
                    goto LABEL_274;
                  }
                  swift_bridgeObjectRelease();
                  swift_release();
                  sub_1C017C418(v199, v458);
                  swift_release();
                  uint64_t v16 = v490;
                  uint64_t v15 = v447 + 32;
                  uint64_t v17 = v524;
                  uint64_t v13 = v508;
                  goto LABEL_278;
                case 4uLL:
                  uint64_t v524 = v17;
                  uint64_t v249 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
                  uint64_t v250 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                  uint64_t v251 = MEMORY[0x1E4FBC860];
                  uint64_t v538 = MEMORY[0x1E4FBC860];
                  uint64_t v500 = *(void *)(*(void *)(*(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 64) + 112);
                  uint64_t v252 = sub_1BFFCDB8C(v500);
                  uint64_t v451 = v250;
                  uint64_t v454 = v249;
                  if (v252)
                  {
                    if (v252 < 1) {
                      goto LABEL_358;
                    }
                    uint64_t v495 = v252;
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    sub_1C017C3D4(v249, v250);
                    swift_retain();
                    uint64_t v253 = v500;
                    swift_bridgeObjectRetain();
                    uint64_t v254 = v495;
                    uint64_t v255 = 0;
                    while (2)
                    {
                      unint64_t v256 = *(void *)(v253 + 8 * v255++ + 32);
                      switch((v256 >> 59) & 0x1E | (v256 >> 2) & 1)
                      {
                        case 3uLL:
                          uint64_t v257 = swift_projectBox() + *(int *)(v463 + 48);
                          uint64_t v258 = *(void *)(v257 + 16);
                          uint64_t v259 = *(void *)(v257 + 24);
                          goto LABEL_213;
                        case 4uLL:
                          uint64_t v258 = *(void *)((v256 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
                          uint64_t v259 = *(void *)((v256 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
LABEL_213:
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          sub_1C017C3D4(v258, v259);
                          swift_retain();
                          uint64_t v260 = sub_1BFD5796C(a1, a2);
                          swift_release();
                          swift_release();
                          swift_release();
                          uint64_t v261 = v258;
                          uint64_t v262 = v259;
                          goto LABEL_219;
                        case 6uLL:
                          uint64_t v278 = *(void *)((v256 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                          uint64_t v279 = *(void *)((v256 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          sub_1C017C3D4(v278, v279);
                          uint64_t v260 = FormatStateViewNodeDataLayoutAttributes.issueCoverImageRequests(options:inventory:)(a1, a2);
                          swift_release();
                          swift_release();
                          uint64_t v261 = v278;
                          uint64_t v262 = v279;
LABEL_219:
                          sub_1C017C418(v261, v262);
                          goto LABEL_220;
                        case 0xCuLL:
                          uint64_t v263 = v256 & 0xFFFFFFFFFFFFFFBLL;
                          v265 = *(void **)((v256 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                          uint64_t v264 = *(void *)(v263 + 24);
                          v266 = *(void **)(v263 + 32);
                          uint64_t v267 = *(void *)(v263 + 40);
                          v268 = *(void **)(v263 + 48);
                          uint64_t v269 = *(void *)(v263 + 56);
                          v270 = *(void **)(v263 + 64);
                          uint64_t v271 = *(void *)(v263 + 80);
                          if (*(unsigned char *)(v263 + 72))
                          {
                            if (*(unsigned char *)(v263 + 72) != 1)
                            {
                              sub_1C00FA1F0(v265, v264, v266, v267, v268, v269, *(void **)(v263 + 64), 2);
                              goto LABEL_208;
                            }
                            char v438 = 1;
                            uint64_t v459 = *(void *)(v263 + 96);
                            uint64_t v272 = *(void *)(v263 + 24);
                            v273 = *(void **)(v263 + 32);
                            uint64_t v274 = *(void *)(v263 + 40);
                            v275 = *(void **)(v263 + 48);
                            uint64_t v276 = *(void *)(v263 + 56);
                            uint64_t v441 = *(void *)(v263 + 104);
                            sub_1C00FA170(v265, v264, v266, v267, v268, v269, v270, 1);
                            swift_retain();
                            v432 = v273;
                            uint64_t v435 = v272;
                            uint64_t v426 = v276;
                            sub_1C00FA170(v265, v272, v273, v274, v275, v276, v270, 1);
                            swift_retain();
                            swift_retain();
                            sub_1C017C3D4(v459, v441);
                            uint64_t v430 = v274;
                            swift_bridgeObjectRelease();

                            v422 = v265;
                            v424 = v270;
                            v428 = v275;
                            v265 = v275;
                            v277 = v270;
                          }
                          else
                          {
                            char v438 = *(unsigned char *)(v263 + 72);
                            uint64_t v459 = *(void *)(v263 + 96);
                            uint64_t v280 = *(void *)(v263 + 24);
                            v277 = *(void **)(v263 + 32);
                            uint64_t v281 = *(void *)(v263 + 40);
                            v282 = *(void **)(v263 + 48);
                            uint64_t v283 = *(void *)(v263 + 56);
                            uint64_t v441 = *(void *)(v263 + 104);
                            sub_1C00FA170(v265, v264, v266, v267, v268, v269, v270, 0);
                            swift_retain();
                            uint64_t v435 = v280;
                            v428 = v282;
                            uint64_t v430 = v281;
                            v424 = v270;
                            uint64_t v426 = v283;
                            sub_1C00FA170(v265, v280, v277, v281, v282, v283, v270, 0);
                            swift_retain();
                            swift_retain();
                            sub_1C017C3D4(v459, v441);
                            v422 = v265;
                            v432 = v277;
                          }
                          sub_1BFF081C0();
                          uint64_t v284 = swift_allocObject();
                          uint64_t v420 = sub_1C00B106C(v284, 1);
                          v286 = v285;
                          double v287 = *(double *)(v271 + 200);
                          uint64_t v288 = *(void *)(v271 + 208);
                          double v289 = *a1;
                          id v290 = v277;
                          sub_1C151F72C();
                          double v292 = v291;
                          double v294 = v293;
                          if (v287 > 0.0) {
                            uint64_t v295 = *(void *)&v287;
                          }
                          else {
                            uint64_t v295 = 0;
                          }
                          if (v287 <= 0.0) {
                            uint64_t v288 = 0;
                          }
                          uint64_t v296 = type metadata accessor for IssueCoverImageProcessorRequest();
                          uint64_t v297 = swift_allocObject();
                          uint64_t v298 = sub_1C017C088(v290, v295, v288, v287 <= 0.0, v297, v292, v294, v289);

                          v286[3] = v296;
                          v286[4] = sub_1C017C474((unint64_t *)&qword_1EB86EF88, (void (*)(uint64_t))type metadata accessor for IssueCoverImageProcessorRequest);
                          uint64_t *v286 = v298;
                          uint64_t v260 = nullsub_1(v420);
                          swift_release();
                          swift_release();
                          sub_1C017C418(v459, v441);
                          sub_1C00FA1F0(v422, v435, v432, v430, v428, v426, v424, v438);
LABEL_229:
                          sub_1BFE4C8E0(v260);
LABEL_207:
                          swift_release();
                          uint64_t v253 = v500;
LABEL_208:
                          uint64_t v254 = v495;
LABEL_209:
                          if (v254 != v255) {
                            continue;
                          }
                          swift_bridgeObjectRelease();
                          uint64_t v364 = v538;
                          uint64_t v13 = v508;
                          break;
                        case 0x10uLL:
                          sub_1C017C364();
                          swift_projectBox();
                          swift_retain();
                          swift_retain();
                          uint64_t v260 = sub_1BFD573F4(a1, a2);
                          swift_release();
LABEL_220:
                          if (v260) {
                            goto LABEL_229;
                          }
                          goto LABEL_207;
                        default:
                          goto LABEL_209;
                      }
                      break;
                    }
                  }
                  else
                  {
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    sub_1C017C3D4(v249, v250);
                    swift_retain();
                    uint64_t v364 = v251;
                    uint64_t v13 = v508;
                  }
                  uint64_t v365 = sub_1BFFCDB84(v364);
                  swift_release();
                  swift_release();
                  if (v365)
                  {
                    swift_release();
                    sub_1C017C418(v454, v451);
LABEL_274:
                    uint64_t v12 = v504;
                    goto LABEL_287;
                  }
                  swift_bridgeObjectRelease();
                  swift_release();
                  sub_1C017C418(v454, v451);
                  swift_release();
                  uint64_t v16 = v490;
                  uint64_t v15 = v447 + 32;
                  uint64_t v17 = v524;
LABEL_278:
                  uint64_t v12 = v504;
                  goto LABEL_176;
                case 6uLL:
                  uint64_t v524 = v17;
                  uint64_t v362 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                  uint64_t v363 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                  swift_retain();
                  swift_retain();
                  swift_retain();
                  sub_1C017C3D4(v362, v363);
                  uint64_t v364 = FormatStateViewNodeDataLayoutAttributes.issueCoverImageRequests(options:inventory:)(a1, a2);
                  swift_release();
                  swift_release();
                  sub_1C017C418(v362, v363);
                  if (v364) {
                    goto LABEL_286;
                  }
                  swift_release();
                  uint64_t v12 = v504;
                  uint64_t v13 = v508;
                  goto LABEL_175;
                case 0xCuLL:
                  v300 = *(void **)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                  uint64_t v299 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
                  v301 = *(void **)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
                  uint64_t v302 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                  v304 = *(void **)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                  uint64_t v303 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
                  v305 = *(void **)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x40);
                  uint64_t v306 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
                  uint64_t v524 = v17;
                  if (*(unsigned char *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x48))
                  {
                    if (*(unsigned char *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x48) != 1)
                    {
                      sub_1C00FA1F0(v300, v299, v301, v302, v304, v303, v305, 2);
                      uint64_t v16 = v490;
                      uint64_t v15 = v447 + 32;
                      uint64_t v17 = v524;
                      goto LABEL_176;
                    }
                    char v479 = 1;
                    uint64_t v501 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x60);
                    uint64_t v307 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
                    v308 = *(void **)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
                    uint64_t v309 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                    uint64_t v310 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
                    uint64_t v488 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x68);
                    sub_1C00FA170(v300, v299, v301, v302, v304, v303, v305, 1);
                    swift_retain();
                    uint64_t v475 = v307;
                    v462 = v308;
                    uint64_t v455 = v310;
                    sub_1C00FA170(v300, v307, v308, v309, v304, v310, v305, 1);
                    swift_retain();
                    swift_retain();
                    sub_1C017C3D4(v501, v488);
                    uint64_t v460 = v309;
                    swift_bridgeObjectRelease();

                    v448 = v304;
                    v311 = v305;
                  }
                  else
                  {
                    char v479 = 0;
                    uint64_t v501 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x60);
                    uint64_t v367 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
                    v311 = *(void **)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
                    uint64_t v368 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                    uint64_t v369 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
                    uint64_t v488 = *(void *)((v195 & 0xFFFFFFFFFFFFFFBLL) + 0x68);
                    sub_1C00FA170(v300, v299, v301, v302, v304, v303, v305, 0);
                    swift_retain();
                    uint64_t v475 = v367;
                    uint64_t v455 = v369;
                    uint64_t v460 = v368;
                    sub_1C00FA170(v300, v367, v311, v368, v304, v369, v305, 0);
                    swift_retain();
                    swift_retain();
                    sub_1C017C3D4(v501, v488);
                    v448 = v300;
                    v462 = v311;
                  }
                  sub_1BFF081C0();
                  uint64_t v370 = swift_allocObject();
                  uint64_t v446 = sub_1C00B106C(v370, 1);
                  v372 = v371;
                  double v373 = *(double *)(v306 + 200);
                  uint64_t v374 = *(void *)(v306 + 208);
                  double v375 = *a1;
                  id v376 = v311;
                  sub_1C151F72C();
                  double v378 = v377;
                  double v380 = v379;
                  if (v373 > 0.0) {
                    uint64_t v381 = *(void *)&v373;
                  }
                  else {
                    uint64_t v381 = 0;
                  }
                  if (v373 <= 0.0) {
                    uint64_t v374 = 0;
                  }
                  uint64_t v382 = type metadata accessor for IssueCoverImageProcessorRequest();
                  uint64_t v383 = swift_allocObject();
                  uint64_t v384 = sub_1C017C088(v376, v381, v374, v373 <= 0.0, v383, v378, v380, v375);

                  v372[3] = v382;
                  v372[4] = sub_1C017C474((unint64_t *)&qword_1EB86EF88, (void (*)(uint64_t))type metadata accessor for IssueCoverImageProcessorRequest);
                  uint64_t *v372 = v384;
                  uint64_t v364 = nullsub_1(v446);
                  swift_release();
                  swift_release();
                  sub_1C017C418(v501, v488);
                  sub_1C00FA1F0(v300, v475, v462, v460, v304, v455, v305, v479);
LABEL_286:
                  uint64_t v12 = v504;
                  uint64_t v13 = v508;
                  goto LABEL_287;
                case 0x10uLL:
                  uint64_t v312 = MEMORY[0x1E4FBC860];
                  uint64_t v524 = v17;
                  sub_1C017C364();
                  uint64_t v539 = v312;
                  uint64_t v314 = *(void *)(*(void *)(*(void *)(swift_projectBox() + *(int *)(v313 + 48))
                                               + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                                   + 112);
                  uint64_t v315 = sub_1BFFCDB8C(v314);
                  if (v315)
                  {
                    uint64_t v316 = v315;
                    if (v315 < 1) {
                      goto LABEL_352;
                    }
                    swift_retain();
                    swift_retain();
                    swift_bridgeObjectRetain();
                    uint64_t v317 = 0;
                    uint64_t v496 = v316;
                    uint64_t v502 = v314;
                    while (2)
                    {
                      unint64_t v318 = *(void *)(v314 + 8 * v317++ + 32);
                      switch((v318 >> 59) & 0x1E | (v318 >> 2) & 1)
                      {
                        case 3uLL:
                          uint64_t v319 = swift_projectBox() + *(int *)(v463 + 48);
                          uint64_t v320 = *(void *)(v319 + 16);
                          uint64_t v321 = *(void *)(v319 + 24);
                          goto LABEL_242;
                        case 4uLL:
                          uint64_t v320 = *(void *)((v318 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
                          uint64_t v321 = *(void *)((v318 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
LABEL_242:
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          sub_1C017C3D4(v320, v321);
                          swift_retain();
                          uint64_t v322 = sub_1BFD5796C(a1, a2);
                          uint64_t v314 = v502;
                          swift_release();
                          swift_release();
                          swift_release();
                          uint64_t v323 = v320;
                          uint64_t v324 = v321;
                          uint64_t v316 = v496;
                          goto LABEL_248;
                        case 6uLL:
                          uint64_t v341 = *(void *)((v318 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                          uint64_t v342 = *(void *)((v318 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                          swift_retain();
                          swift_retain();
                          swift_retain();
                          sub_1C017C3D4(v341, v342);
                          uint64_t v322 = FormatStateViewNodeDataLayoutAttributes.issueCoverImageRequests(options:inventory:)(a1, a2);
                          swift_release();
                          swift_release();
                          uint64_t v323 = v341;
                          uint64_t v324 = v342;
                          uint64_t v316 = v496;
                          uint64_t v314 = v502;
LABEL_248:
                          sub_1C017C418(v323, v324);
                          goto LABEL_249;
                        case 0xCuLL:
                          uint64_t v325 = v318 & 0xFFFFFFFFFFFFFFBLL;
                          v326 = *(void **)((v318 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                          uint64_t v327 = *(void *)((v318 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
                          v328 = *(void **)(v325 + 32);
                          uint64_t v329 = *(void *)(v325 + 40);
                          v330 = *(void **)(v325 + 48);
                          uint64_t v331 = *(void *)(v325 + 56);
                          v332 = *(void **)(v325 + 64);
                          uint64_t v333 = *(void *)(v325 + 80);
                          if (*(unsigned char *)(v325 + 72))
                          {
                            if (*(unsigned char *)(v325 + 72) != 1)
                            {
                              sub_1C00FA1F0(v326, v327, v328, v329, v330, v331, v332, 2);
                              goto LABEL_238;
                            }
                            char v456 = 1;
                            uint64_t v489 = *(void *)(v325 + 96);
                            uint64_t v480 = *(void *)(v325 + 104);
                            v334 = *(void **)(v325 + 32);
                            uint64_t v335 = *(void *)(v325 + 40);
                            v336 = *(void **)(v325 + 48);
                            uint64_t v337 = *(void *)(v325 + 56);
                            v338 = *(void **)(v325 + 64);
                            sub_1C00FA170(v326, v327, v328, v329, v330, v331, v332, 1);
                            swift_retain();
                            v452 = v334;
                            uint64_t v444 = v337;
                            sub_1C00FA170(v326, v327, v334, v335, v336, v337, v338, 1);
                            swift_retain();
                            swift_retain();
                            sub_1C017C3D4(v489, v480);
                            uint64_t v449 = v335;
                            swift_bridgeObjectRelease();

                            v436 = v326;
                            uint64_t v439 = v327;
                            v445 = v336;
                            v339 = v336;
                            v442 = v338;
                            v340 = v338;
                          }
                          else
                          {
                            char v456 = *(unsigned char *)(v325 + 72);
                            uint64_t v489 = *(void *)(v325 + 96);
                            uint64_t v480 = *(void *)(v325 + 104);
                            v340 = *(void **)(v325 + 32);
                            uint64_t v343 = *(void *)(v325 + 40);
                            v344 = *(void **)(v325 + 48);
                            uint64_t v345 = *(void *)(v325 + 56);
                            v346 = *(void **)(v325 + 64);
                            sub_1C00FA170(v326, v327, v328, v329, v330, v331, v332, 0);
                            swift_retain();
                            uint64_t v449 = v343;
                            uint64_t v444 = v345;
                            v445 = v344;
                            v442 = v346;
                            sub_1C00FA170(v326, v327, v340, v343, v344, v345, v346, 0);
                            swift_retain();
                            swift_retain();
                            sub_1C017C3D4(v489, v480);
                            v436 = v326;
                            uint64_t v439 = v327;
                            v339 = v326;
                            v452 = v340;
                          }
                          sub_1BFF081C0();
                          uint64_t v347 = swift_allocObject();
                          uint64_t v433 = sub_1C00B106C(v347, 1);
                          v349 = v348;
                          double v350 = *(double *)(v333 + 200);
                          uint64_t v351 = *(void *)(v333 + 208);
                          double v352 = *a1;
                          id v353 = v340;
                          sub_1C151F72C();
                          double v355 = v354;
                          double v357 = v356;
                          if (v350 > 0.0) {
                            uint64_t v358 = *(void *)&v350;
                          }
                          else {
                            uint64_t v358 = 0;
                          }
                          if (v350 <= 0.0) {
                            uint64_t v351 = 0;
                          }
                          uint64_t v359 = type metadata accessor for IssueCoverImageProcessorRequest();
                          uint64_t v360 = swift_allocObject();
                          uint64_t v361 = sub_1C017C088(v353, v358, v351, v350 <= 0.0, v360, v355, v357, v352);

                          v349[3] = v359;
                          v349[4] = sub_1C017C474((unint64_t *)&qword_1EB86EF88, (void (*)(uint64_t))type metadata accessor for IssueCoverImageProcessorRequest);
                          uint64_t *v349 = v361;
                          uint64_t v322 = nullsub_1(v433);
                          swift_release();
                          swift_release();
                          sub_1C017C418(v489, v480);
                          sub_1C00FA1F0(v436, v439, v452, v449, v445, v444, v442, v456);
                          uint64_t v316 = v496;
                          uint64_t v314 = v502;
LABEL_258:
                          sub_1BFE4C8E0(v322);
LABEL_237:
                          swift_release();
LABEL_238:
                          if (v316 != v317) {
                            continue;
                          }
                          swift_bridgeObjectRelease();
                          uint64_t v364 = v539;
                          uint64_t v12 = v504;
                          uint64_t v13 = v508;
                          break;
                        case 0x10uLL:
                          swift_projectBox();
                          swift_retain();
                          swift_retain();
                          uint64_t v322 = sub_1BFD573F4(a1, a2);
                          swift_release();
LABEL_249:
                          if (v322) {
                            goto LABEL_258;
                          }
                          goto LABEL_237;
                        default:
                          goto LABEL_238;
                      }
                      break;
                    }
                  }
                  else
                  {
                    swift_retain();
                    swift_retain();
                    uint64_t v364 = v312;
                  }
                  if (sub_1BFFCDB84(v364))
                  {
                    swift_release();
LABEL_287:
                    uint64_t v385 = *(void *)(v364 + 16);
                    v386 = v540;
                    uint64_t v387 = v540[2];
                    int64_t v388 = v387 + v385;
                    if (__OFADD__(v387, v385)) {
                      goto LABEL_338;
                    }
                    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
                    if (!isUniquelyReferenced_nonNull_native || (int64_t v390 = v540[3] >> 1, v390 < v388))
                    {
                      if (v540[2] <= v388) {
                        int64_t v391 = v388;
                      }
                      else {
                        int64_t v391 = v540[2];
                      }
                      v386 = sub_1C0EE2540(isUniquelyReferenced_nonNull_native, v391, 1, v540);
                      v540 = v386;
                      int64_t v390 = v386[3] >> 1;
                    }
                    uint64_t v392 = v386[2];
                    uint64_t v393 = v390 - v392;
                    if (sub_1BFFCDB84(v364))
                    {
                      if (v393 < v385) {
                        goto LABEL_346;
                      }
                      unint64_t v394 = (unint64_t)&v386[5 * v392 + 4];
                      if (v364 + 32 < v394 + 40 * v385 && v394 < v364 + 32 + 40 * v385) {
                        goto LABEL_362;
                      }
                      sub_1BFC845BC(0, (unint64_t *)&qword_1EB8715C0);
                      swift_arrayInitWithCopy();
                      if (v385)
                      {
                        uint64_t v396 = v386[2];
                        BOOL v121 = __OFADD__(v396, v385);
                        uint64_t v397 = v396 + v385;
                        uint64_t v12 = v504;
                        uint64_t v13 = v508;
                        if (v121) {
                          goto LABEL_349;
                        }
                        v386[2] = v397;
                      }
                      else
                      {
                        uint64_t v12 = v504;
                        uint64_t v13 = v508;
                      }
                    }
                    else if (v385)
                    {
                      goto LABEL_343;
                    }
                    uint64_t v398 = swift_bridgeObjectRelease();
                    if (v385 == v393)
                    {
                      swift_release();
                      v540 = v386;
                    }
                    else
                    {
                      nullsub_1(v398);
                      swift_release();
                    }
LABEL_175:
                    uint64_t v16 = v490;
                    uint64_t v15 = v447 + 32;
                    uint64_t v17 = v524;
                  }
                  else
                  {
                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
                    uint64_t v16 = v490;
                    uint64_t v15 = v447 + 32;
                    uint64_t v17 = v524;
                  }
LABEL_176:
                  if (v17 != v16) {
                    continue;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v47 = (uint64_t)v540;
                  break;
                default:
                  goto LABEL_176;
              }
              break;
            }
          }
          else
          {
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1C017C3D4(v13, v12);
            swift_retain();
            uint64_t v47 = MEMORY[0x1E4FBC860];
          }
          uint64_t v402 = sub_1BFFCDB84(v47);
          swift_release();
          swift_release();
          if (v402)
          {
            swift_release();
            uint64_t v7 = v13;
            uint64_t v8 = v12;
            goto LABEL_4;
          }
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v400 = v13;
          uint64_t v401 = v12;
          goto LABEL_324;
        case 4uLL:
          unint64_t v520 = v6;
          uint64_t v18 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
          uint64_t v19 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
          v541 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v20 = *(void *)(*(void *)(*(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 64) + 112);
          uint64_t v21 = sub_1BFFCDB8C(v20);
          if (v21)
          {
            uint64_t v22 = v21;
            if (v21 >= 1)
            {
              swift_retain();
              swift_retain();
              swift_retain();
              uint64_t v461 = v18;
              uint64_t v453 = v19;
              sub_1C017C3D4(v18, v19);
              uint64_t v23 = v20 + 32;
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v24 = 0;
              uint64_t v521 = v22;
              uint64_t v525 = v23;
              while (1)
              {
                unint64_t v48 = *(void *)(v23 + 8 * v24++);
                switch((v48 >> 59) & 0x1E | (v48 >> 2) & 1)
                {
                  case 3uLL:
                    sub_1C0078488();
                    uint64_t v50 = (void *)(swift_projectBox() + *(int *)(v49 + 48));
                    uint64_t v51 = MEMORY[0x1E4FBC860];
                    uint64_t v52 = v50[2];
                    uint64_t v514 = v50[3];
                    uint64_t v531 = MEMORY[0x1E4FBC860];
                    uint64_t v53 = sub_1BFFCDB8C(*(void *)(*(void *)(*v50 + 16) + 112));
                    if (v53)
                    {
                      uint64_t v54 = v53;
                      if (v53 < 1) {
                        goto LABEL_350;
                      }
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v52, v514);
                      swift_retain();
                      swift_bridgeObjectRetain();
                      for (uint64_t i = 0; i != v54; ++i)
                      {
                        swift_retain();
                        uint64_t v56 = FormatDataLayoutValue.issueCoverImageRequests(options:inventory:)(a1, a2);
                        if (v56) {
                          sub_1BFE4C8E0(v56);
                        }
                        swift_release();
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v83 = v531;
                      uint64_t v85 = v52;
                    }
                    else
                    {
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v52, v514);
                      swift_retain();
                      uint64_t v83 = v51;
                      uint64_t v85 = v52;
                    }
                    uint64_t v89 = sub_1BFFCDB84(v83);
                    swift_release();
                    swift_release();
                    uint64_t v22 = v521;
                    if (v89)
                    {
                      swift_release();
                      uint64_t v87 = v85;
                      uint64_t v88 = v514;
                      goto LABEL_63;
                    }
                    swift_bridgeObjectRelease();
                    swift_release();
                    sub_1C017C418(v85, v514);
                    goto LABEL_67;
                  case 4uLL:
                    uint64_t v57 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                    uint64_t v515 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
                    uint64_t v532 = MEMORY[0x1E4FBC860];
                    uint64_t v58 = sub_1BFFCDB8C(*(void *)(*(void *)(*(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 64)
                                                  + 112));
                    uint64_t v509 = v57;
                    if (v58)
                    {
                      uint64_t v59 = v58;
                      if (v58 < 1) {
                        goto LABEL_356;
                      }
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v515, v57);
                      swift_retain();
                      swift_bridgeObjectRetain();
                      for (uint64_t j = 0; j != v59; ++j)
                      {
                        swift_retain();
                        uint64_t v61 = FormatDataLayoutValue.issueCoverImageRequests(options:inventory:)(a1, a2);
                        if (v61) {
                          sub_1BFE4C8E0(v61);
                        }
                        swift_release();
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v83 = v532;
                      uint64_t v84 = v515;
                    }
                    else
                    {
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v515, v57);
                      swift_retain();
                      uint64_t v83 = MEMORY[0x1E4FBC860];
                      uint64_t v84 = v515;
                    }
                    uint64_t v86 = sub_1BFFCDB84(v83);
                    swift_release();
                    swift_release();
                    uint64_t v22 = v521;
                    if (v86)
                    {
                      swift_release();
                      uint64_t v87 = v84;
                      uint64_t v88 = v509;
LABEL_63:
                      sub_1C017C418(v87, v88);
                      goto LABEL_76;
                    }
                    swift_bridgeObjectRelease();
                    swift_release();
                    sub_1C017C418(v84, v509);
LABEL_67:
                    swift_release();
                    goto LABEL_25;
                  case 6uLL:
                    uint64_t v82 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                    uint64_t v81 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    sub_1C017C3D4(v82, v81);
                    uint64_t v83 = FormatStateViewNodeDataLayoutAttributes.issueCoverImageRequests(options:inventory:)(a1, a2);
                    swift_release();
                    swift_release();
                    sub_1C017C418(v82, v81);
                    if (v83) {
                      goto LABEL_75;
                    }
                    swift_release();
                    uint64_t v22 = v521;
                    goto LABEL_25;
                  case 0xCuLL:
                    uint64_t v62 = *(void **)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                    uint64_t v63 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
                    uint64_t v65 = *(void **)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
                    uint64_t v64 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                    uint64_t v66 = *(void **)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                    uint64_t v67 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
                    uint64_t v68 = *(void **)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x40);
                    uint64_t v69 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
                    if (*(unsigned char *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x48))
                    {
                      if (*(unsigned char *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x48) != 1)
                      {
                        sub_1C00FA1F0(v62, v63, *(void **)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x20), v64, v66, *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x38), *(void **)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x40), 2);
                        goto LABEL_26;
                      }
                      char v491 = 1;
                      uint64_t v512 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x68);
                      uint64_t v516 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x60);
                      uint64_t v505 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
                      uint64_t v70 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                      uint64_t v71 = *(void **)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                      v468 = *(void **)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                      sub_1C00FA170(v62, v63, v65, v64, v66, v67, v68, 1);
                      swift_retain();
                      uint64_t v476 = v67;
                      sub_1C00FA170(v468, v505, v65, v70, v71, v67, v68, 1);
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v516, v512);
                      uint64_t v486 = v70;
                      swift_bridgeObjectRelease();

                      v481 = v71;
                      v464 = v71;
                      v472 = v68;
                      uint64_t v72 = v68;
                      uint64_t v73 = v468;
                    }
                    else
                    {
                      char v491 = *(unsigned char *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x48);
                      uint64_t v516 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x60);
                      uint64_t v512 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x68);
                      uint64_t v505 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
                      uint64_t v90 = *(void *)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                      unint64_t v91 = *(void **)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                      uint64_t v92 = *(void **)((v48 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                      sub_1C00FA170(v62, v63, v65, v64, v66, v67, v68, 0);
                      swift_retain();
                      uint64_t v486 = v90;
                      uint64_t v476 = v67;
                      v481 = v91;
                      v472 = v68;
                      uint64_t v93 = v68;
                      uint64_t v73 = v92;
                      sub_1C00FA170(v92, v505, v65, v90, v91, v67, v93, 0);
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v516, v512);
                      v464 = v92;
                      uint64_t v72 = v65;
                    }
                    v466 = v65;
                    sub_1BFF081C0();
                    uint64_t v94 = swift_allocObject();
                    uint64_t v469 = sub_1C00B106C(v94, 1);
                    uint64_t v96 = v95;
                    double v97 = *(double *)(v69 + 200);
                    uint64_t v98 = *(void *)(v69 + 208);
                    double v99 = *a1;
                    id v100 = v72;
                    sub_1C151F72C();
                    double v102 = v101;
                    double v104 = v103;
                    if (v97 > 0.0) {
                      uint64_t v105 = *(void *)&v97;
                    }
                    else {
                      uint64_t v105 = 0;
                    }
                    if (v97 <= 0.0) {
                      uint64_t v98 = 0;
                    }
                    uint64_t v106 = type metadata accessor for IssueCoverImageProcessorRequest();
                    uint64_t v107 = swift_allocObject();
                    uint64_t v108 = sub_1C017C088(v100, v105, v98, v97 <= 0.0, v107, v102, v104, v99);

                    v96[3] = v106;
                    v96[4] = sub_1C017C474((unint64_t *)&qword_1EB86EF88, (void (*)(uint64_t))type metadata accessor for IssueCoverImageProcessorRequest);
                    *uint64_t v96 = v108;
                    uint64_t v83 = nullsub_1(v469);
                    swift_release();
                    swift_release();
                    sub_1C017C418(v516, v512);
                    sub_1C00FA1F0(v73, v505, v466, v486, v481, v476, v472, v491);
LABEL_75:
                    uint64_t v22 = v521;
                    goto LABEL_76;
                  case 0x10uLL:
                    sub_1C017C364();
                    uint64_t v75 = v74;
                    uint64_t v76 = swift_projectBox();
                    uint64_t v533 = MEMORY[0x1E4FBC860];
                    uint64_t v77 = sub_1BFFCDB8C(*(void *)(*(void *)(*(void *)(v76 + *(int *)(v75 + 48))
                                                              + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                                                  + 112));
                    if (v77)
                    {
                      uint64_t v78 = v77;
                      if (v77 < 1) {
                        goto LABEL_353;
                      }
                      swift_retain();
                      swift_retain();
                      swift_bridgeObjectRetain();
                      for (uint64_t k = 0; k != v78; ++k)
                      {
                        swift_retain();
                        uint64_t v80 = FormatDataLayoutValue.issueCoverImageRequests(options:inventory:)(a1, a2);
                        if (v80) {
                          sub_1BFE4C8E0(v80);
                        }
                        swift_release();
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v83 = v533;
                      uint64_t v22 = v521;
                    }
                    else
                    {
                      swift_retain();
                      swift_retain();
                      uint64_t v83 = MEMORY[0x1E4FBC860];
                    }
                    if (sub_1BFFCDB84(v83))
                    {
                      swift_release();
LABEL_76:
                      uint64_t v109 = *(void *)(v83 + 16);
                      uint64_t v110 = v541;
                      uint64_t v111 = v541[2];
                      int64_t v112 = v111 + v109;
                      if (__OFADD__(v111, v109)) {
                        goto LABEL_339;
                      }
                      uint64_t v113 = (void *)swift_isUniquelyReferenced_nonNull_native();
                      if (!v113 || (int64_t v114 = v541[3] >> 1, v114 < v112))
                      {
                        if (v541[2] <= v112) {
                          int64_t v115 = v112;
                        }
                        else {
                          int64_t v115 = v541[2];
                        }
                        uint64_t v110 = sub_1C0EE2540(v113, v115, 1, v541);
                        v541 = v110;
                        int64_t v114 = v110[3] >> 1;
                      }
                      uint64_t v116 = v110[2];
                      uint64_t v117 = v114 - v116;
                      if (sub_1BFFCDB84(v83))
                      {
                        if (v117 < v109) {
                          goto LABEL_344;
                        }
                        unint64_t v118 = (unint64_t)&v110[5 * v116 + 4];
                        if (v83 + 32 < v118 + 40 * v109 && v118 < v83 + 32 + 40 * v109) {
                          goto LABEL_362;
                        }
                        sub_1BFC845BC(0, (unint64_t *)&qword_1EB8715C0);
                        swift_arrayInitWithCopy();
                        if (v109)
                        {
                          uint64_t v120 = v110[2];
                          BOOL v121 = __OFADD__(v120, v109);
                          uint64_t v122 = v120 + v109;
                          uint64_t v23 = v525;
                          if (v121) {
                            goto LABEL_347;
                          }
                          v110[2] = v122;
                          goto LABEL_95;
                        }
                      }
                      else if (v109)
                      {
                        goto LABEL_341;
                      }
                      uint64_t v23 = v525;
LABEL_95:
                      uint64_t v123 = swift_bridgeObjectRelease();
                      if (v109 == v117)
                      {
                        swift_release();
                        v541 = v110;
                      }
                      else
                      {
                        nullsub_1(v123);
                        swift_release();
                      }
                      goto LABEL_26;
                    }
                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
LABEL_25:
                    uint64_t v23 = v525;
LABEL_26:
                    if (v24 == v22)
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v47 = (uint64_t)v541;
                      uint64_t v18 = v461;
                      uint64_t v19 = v453;
                      goto LABEL_313;
                    }
                    break;
                  default:
                    goto LABEL_26;
                }
              }
            }
LABEL_360:
            __break(1u);
            goto LABEL_361;
          }
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1C017C3D4(v18, v19);
          swift_retain();
          uint64_t v47 = MEMORY[0x1E4FBC860];
LABEL_313:
          uint64_t v399 = sub_1BFFCDB84(v47);
          swift_release();
          swift_release();
          if (v399)
          {
            swift_release();
            uint64_t v7 = v18;
            uint64_t v8 = v19;
LABEL_4:
            sub_1C017C418(v7, v8);
LABEL_5:
            sub_1BFE4C8E0(v47);
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v400 = v18;
            uint64_t v401 = v19;
LABEL_324:
            sub_1C017C418(v400, v401);
          }
LABEL_6:
          swift_release();
          goto LABEL_7;
        case 6uLL:
          unint64_t v520 = v6;
          uint64_t v45 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
          uint64_t v46 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1C017C3D4(v45, v46);
          uint64_t v47 = FormatStateViewNodeDataLayoutAttributes.issueCoverImageRequests(options:inventory:)(a1, a2);
          swift_release();
          swift_release();
          sub_1C017C418(v45, v46);
          if (v47) {
            goto LABEL_5;
          }
          goto LABEL_6;
        case 0xCuLL:
          uint64_t v25 = (void *)(v9 & 0xFFFFFFFFFFFFFFBLL);
          uint64_t v26 = *(void **)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
          uint64_t v27 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
          uint64_t v28 = *(void **)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
          uint64_t v29 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
          uint64_t v30 = *(void **)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
          uint64_t v31 = *(void *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
          unsigned int v32 = *(void **)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x40);
          int v33 = *(unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFBLL) + 0x48);
          uint64_t v34 = v25[10];
          unint64_t v520 = v6;
          if (v33)
          {
            if (v33 != 1)
            {
              sub_1C00FA1F0(v26, v27, v28, v29, v30, v31, v32, 2);
              goto LABEL_7;
            }
            char v511 = 1;
            uint64_t v526 = v25[12];
            uint64_t v35 = v26;
            uint64_t v522 = v25[13];
            sub_1C00FA170(v26, v27, v28, v29, v30, v31, v32, 1);
            swift_retain();
            sub_1C00FA170(v35, v27, v28, v29, v30, v31, v32, 1);
            swift_retain();
            swift_retain();
            uint64_t v36 = v35;
            sub_1C017C3D4(v526, v522);
            swift_bridgeObjectRelease();

            v485 = v30;
            uint64_t v37 = v32;
          }
          else
          {
            char v511 = 0;
            uint64_t v526 = v25[12];
            v403 = v26;
            uint64_t v522 = v25[13];
            sub_1C00FA170(v26, v27, v28, v29, v30, v31, v32, 0);
            swift_retain();
            sub_1C00FA170(v403, v27, v28, v29, v30, v31, v32, 0);
            swift_retain();
            swift_retain();
            uint64_t v36 = v403;
            sub_1C017C3D4(v526, v522);
            v485 = v403;
            uint64_t v37 = v28;
          }
          uint64_t v493 = v27;
          uint64_t v497 = v29;
          v503 = v28;
          uint64_t v507 = v31;
          sub_1BFF081C0();
          uint64_t v404 = swift_allocObject();
          uint64_t v483 = sub_1C00B106C(v404, 1);
          v406 = v405;
          double v407 = *(double *)(v34 + 200);
          uint64_t v408 = *(void *)(v34 + 208);
          double v409 = *a1;
          id v410 = v37;
          sub_1C151F72C();
          double v412 = v411;
          double v414 = v413;
          if (v407 > 0.0) {
            uint64_t v415 = *(void *)&v407;
          }
          else {
            uint64_t v415 = 0;
          }
          if (v407 <= 0.0) {
            uint64_t v408 = 0;
          }
          uint64_t v416 = type metadata accessor for IssueCoverImageProcessorRequest();
          uint64_t v417 = swift_allocObject();
          uint64_t v418 = sub_1C017C088(v410, v415, v408, v407 <= 0.0, v417, v412, v414, v409);

          v406[3] = v416;
          v406[4] = sub_1C017C474((unint64_t *)&qword_1EB86EF88, (void (*)(uint64_t))type metadata accessor for IssueCoverImageProcessorRequest);
          uint64_t *v406 = v418;
          uint64_t v47 = nullsub_1(v483);
          swift_release();
          swift_release();
          sub_1C017C418(v526, v522);
          sub_1C00FA1F0(v36, v493, v503, v497, v30, v507, v32, v511);
          goto LABEL_5;
        case 0x10uLL:
          unint64_t v520 = v6;
          sub_1C017C364();
          uint64_t v498 = v38;
          uint64_t v39 = *(void *)(swift_projectBox() + *(int *)(v38 + 48));
          v542 = (void *)MEMORY[0x1E4FBC860];
          uint64_t v40 = *(void *)(*(void *)(v39
                                      + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                          + 112);
          uint64_t v41 = sub_1BFFCDB8C(v40);
          if (v41)
          {
            uint64_t v42 = v41;
            if (v41 >= 1)
            {
              uint64_t v43 = v40 + 32;
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              uint64_t v44 = 0;
              uint64_t v523 = v42;
              uint64_t v527 = v40 + 32;
              while (1)
              {
                unint64_t v124 = *(void *)(v43 + 8 * v44++);
                switch((v124 >> 59) & 0x1E | (v124 >> 2) & 1)
                {
                  case 3uLL:
                    sub_1C0078488();
                    uint64_t v126 = (void *)(swift_projectBox() + *(int *)(v125 + 48));
                    uint64_t v127 = MEMORY[0x1E4FBC860];
                    uint64_t v128 = v126[2];
                    uint64_t v517 = v126[3];
                    uint64_t v534 = MEMORY[0x1E4FBC860];
                    uint64_t v129 = sub_1BFFCDB8C(*(void *)(*(void *)(*v126 + 16) + 112));
                    if (v129)
                    {
                      uint64_t v130 = v129;
                      if (v129 < 1) {
                        goto LABEL_351;
                      }
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v128, v517);
                      swift_retain();
                      swift_bridgeObjectRetain();
                      for (uint64_t m = 0; m != v130; ++m)
                      {
                        swift_retain();
                        uint64_t v132 = FormatDataLayoutValue.issueCoverImageRequests(options:inventory:)(a1, a2);
                        if (v132) {
                          sub_1BFE4C8E0(v132);
                        }
                        swift_release();
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v156 = v534;
                      uint64_t v158 = v128;
                    }
                    else
                    {
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v128, v517);
                      swift_retain();
                      uint64_t v156 = v127;
                      uint64_t v158 = v128;
                    }
                    uint64_t v162 = sub_1BFFCDB84(v156);
                    swift_release();
                    swift_release();
                    uint64_t v42 = v523;
                    if (v162)
                    {
                      swift_release();
                      uint64_t v160 = v158;
                      uint64_t v161 = v517;
                      goto LABEL_138;
                    }
                    swift_bridgeObjectRelease();
                    swift_release();
                    sub_1C017C418(v158, v517);
                    goto LABEL_142;
                  case 4uLL:
                    uint64_t v133 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                    uint64_t v518 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
                    uint64_t v535 = MEMORY[0x1E4FBC860];
                    uint64_t v134 = sub_1BFFCDB8C(*(void *)(*(void *)(*(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 64)
                                                   + 112));
                    uint64_t v510 = v133;
                    if (v134)
                    {
                      uint64_t v135 = v134;
                      if (v134 < 1) {
                        goto LABEL_357;
                      }
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v518, v133);
                      swift_retain();
                      swift_bridgeObjectRetain();
                      for (uint64_t n = 0; n != v135; ++n)
                      {
                        swift_retain();
                        uint64_t v137 = FormatDataLayoutValue.issueCoverImageRequests(options:inventory:)(a1, a2);
                        if (v137) {
                          sub_1BFE4C8E0(v137);
                        }
                        swift_release();
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v156 = v535;
                      uint64_t v157 = v518;
                    }
                    else
                    {
                      swift_retain();
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v518, v133);
                      swift_retain();
                      uint64_t v156 = MEMORY[0x1E4FBC860];
                      uint64_t v157 = v518;
                    }
                    uint64_t v159 = sub_1BFFCDB84(v156);
                    swift_release();
                    swift_release();
                    uint64_t v42 = v523;
                    if (v159)
                    {
                      swift_release();
                      uint64_t v160 = v157;
                      uint64_t v161 = v510;
LABEL_138:
                      sub_1C017C418(v160, v161);
                      goto LABEL_151;
                    }
                    swift_bridgeObjectRelease();
                    swift_release();
                    sub_1C017C418(v157, v510);
LABEL_142:
                    swift_release();
                    goto LABEL_100;
                  case 6uLL:
                    uint64_t v155 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                    uint64_t v154 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                    swift_retain();
                    swift_retain();
                    swift_retain();
                    sub_1C017C3D4(v155, v154);
                    uint64_t v156 = FormatStateViewNodeDataLayoutAttributes.issueCoverImageRequests(options:inventory:)(a1, a2);
                    swift_release();
                    swift_release();
                    sub_1C017C418(v155, v154);
                    if (v156) {
                      goto LABEL_150;
                    }
                    swift_release();
                    uint64_t v42 = v523;
                    goto LABEL_100;
                  case 0xCuLL:
                    uint64_t v138 = *(void **)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                    uint64_t v139 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
                    uint64_t v140 = *(void **)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
                    uint64_t v141 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
                    uint64_t v142 = *(void **)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                    uint64_t v143 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
                    uint64_t v144 = *(void **)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x40);
                    uint64_t v145 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
                    if (*(unsigned char *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x48))
                    {
                      if (*(unsigned char *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x48) != 1)
                      {
                        sub_1C00FA1F0(v138, v139, *(void **)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x20), *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x28), v142, *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x38), *(void **)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x40), 2);
                        uint64_t v42 = v523;
                        goto LABEL_101;
                      }
                      char v492 = 1;
                      uint64_t v513 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x68);
                      uint64_t v519 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x60);
                      uint64_t v506 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
                      uint64_t v146 = *(void **)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                      v473 = *(void **)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                      sub_1C00FA170(v138, v139, v140, v141, v142, v143, v144, 1);
                      swift_retain();
                      uint64_t v482 = v143;
                      sub_1C00FA170(v473, v506, v140, v141, v146, v143, v144, 1);
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v519, v513);
                      swift_bridgeObjectRelease();

                      v487 = v146;
                      v465 = v146;
                      v477 = v144;
                      uint64_t v147 = v144;
                      uint64_t v148 = v473;
                    }
                    else
                    {
                      char v492 = *(unsigned char *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x48);
                      uint64_t v519 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x60);
                      uint64_t v513 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x68);
                      uint64_t v506 = *(void *)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
                      uint64_t v163 = *(void **)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x30);
                      uint64_t v164 = *(void **)((v124 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
                      sub_1C00FA170(v138, v139, v140, v141, v142, v143, v144, 0);
                      swift_retain();
                      v487 = v163;
                      v477 = v144;
                      uint64_t v482 = v143;
                      v165 = v144;
                      uint64_t v148 = v164;
                      sub_1C00FA170(v164, v506, v140, v141, v163, v143, v165, 0);
                      swift_retain();
                      swift_retain();
                      sub_1C017C3D4(v519, v513);
                      v465 = v164;
                      uint64_t v147 = v140;
                    }
                    v467 = v140;
                    uint64_t v470 = v141;
                    sub_1BFF081C0();
                    uint64_t v166 = swift_allocObject();
                    uint64_t v474 = sub_1C00B106C(v166, 1);
                    v168 = v167;
                    double v169 = *(double *)(v145 + 200);
                    uint64_t v170 = *(void *)(v145 + 208);
                    double v171 = *a1;
                    id v172 = v147;
                    sub_1C151F72C();
                    double v174 = v173;
                    double v176 = v175;
                    if (v169 > 0.0) {
                      uint64_t v177 = *(void *)&v169;
                    }
                    else {
                      uint64_t v177 = 0;
                    }
                    if (v169 <= 0.0) {
                      uint64_t v170 = 0;
                    }
                    uint64_t v178 = type metadata accessor for IssueCoverImageProcessorRequest();
                    uint64_t v179 = swift_allocObject();
                    uint64_t v180 = sub_1C017C088(v172, v177, v170, v169 <= 0.0, v179, v174, v176, v171);

                    v168[3] = v178;
                    v168[4] = sub_1C017C474((unint64_t *)&qword_1EB86EF88, (void (*)(uint64_t))type metadata accessor for IssueCoverImageProcessorRequest);
                    uint64_t *v168 = v180;
                    uint64_t v156 = nullsub_1(v474);
                    swift_release();
                    swift_release();
                    sub_1C017C418(v519, v513);
                    sub_1C00FA1F0(v148, v506, v467, v470, v487, v482, v477, v492);
LABEL_150:
                    uint64_t v42 = v523;
                    goto LABEL_151;
                  case 0x10uLL:
                    uint64_t v149 = swift_projectBox();
                    uint64_t v536 = MEMORY[0x1E4FBC860];
                    uint64_t v150 = sub_1BFFCDB8C(*(void *)(*(void *)(*(void *)(v149 + *(int *)(v498 + 48))
                                                               + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                                                   + 112));
                    if (v150)
                    {
                      uint64_t v151 = v150;
                      if (v150 < 1) {
                        goto LABEL_354;
                      }
                      swift_retain();
                      swift_retain();
                      swift_bridgeObjectRetain();
                      for (iuint64_t i = 0; ii != v151; ++ii)
                      {
                        swift_retain();
                        uint64_t v153 = FormatDataLayoutValue.issueCoverImageRequests(options:inventory:)(a1, a2);
                        if (v153) {
                          sub_1BFE4C8E0(v153);
                        }
                        swift_release();
                      }
                      swift_bridgeObjectRelease();
                      uint64_t v156 = v536;
                      uint64_t v42 = v523;
                    }
                    else
                    {
                      swift_retain();
                      swift_retain();
                      uint64_t v156 = MEMORY[0x1E4FBC860];
                    }
                    if (sub_1BFFCDB84(v156))
                    {
                      swift_release();
LABEL_151:
                      uint64_t v181 = *(void *)(v156 + 16);
                      v182 = v542;
                      uint64_t v183 = v542[2];
                      int64_t v184 = v183 + v181;
                      if (__OFADD__(v183, v181)) {
                        goto LABEL_340;
                      }
                      v185 = (void *)swift_isUniquelyReferenced_nonNull_native();
                      if (!v185 || (int64_t v186 = v542[3] >> 1, v186 < v184))
                      {
                        if (v542[2] <= v184) {
                          int64_t v187 = v184;
                        }
                        else {
                          int64_t v187 = v542[2];
                        }
                        v182 = sub_1C0EE2540(v185, v187, 1, v542);
                        v542 = v182;
                        int64_t v186 = v182[3] >> 1;
                      }
                      uint64_t v188 = v182[2];
                      uint64_t v189 = v186 - v188;
                      if (sub_1BFFCDB84(v156))
                      {
                        if (v189 < v181) {
                          goto LABEL_345;
                        }
                        unint64_t v190 = (unint64_t)&v182[5 * v188 + 4];
                        if (v156 + 32 < v190 + 40 * v181 && v190 < v156 + 32 + 40 * v181) {
                          goto LABEL_362;
                        }
                        sub_1BFC845BC(0, (unint64_t *)&qword_1EB8715C0);
                        swift_arrayInitWithCopy();
                        if (v181)
                        {
                          uint64_t v192 = v182[2];
                          BOOL v121 = __OFADD__(v192, v181);
                          uint64_t v193 = v192 + v181;
                          uint64_t v43 = v527;
                          if (v121) {
                            goto LABEL_348;
                          }
                          v182[2] = v193;
                          goto LABEL_170;
                        }
                      }
                      else if (v181)
                      {
                        goto LABEL_342;
                      }
                      uint64_t v43 = v527;
LABEL_170:
                      uint64_t v194 = swift_bridgeObjectRelease();
                      if (v181 == v189)
                      {
                        swift_release();
                        v542 = v182;
                      }
                      else
                      {
                        nullsub_1(v194);
                        swift_release();
                      }
                      goto LABEL_101;
                    }
                    swift_release();
                    swift_release();
                    swift_bridgeObjectRelease();
LABEL_100:
                    uint64_t v43 = v527;
LABEL_101:
                    if (v44 == v42)
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v47 = (uint64_t)v542;
                      goto LABEL_316;
                    }
                    break;
                  default:
                    goto LABEL_101;
                }
              }
            }
LABEL_361:
            __break(1u);
LABEL_362:
            sub_1C152052C();
            __break(1u);
            JUMPOUT(0x1C017BCB4);
          }
          swift_retain();
          swift_retain();
          uint64_t v47 = MEMORY[0x1E4FBC860];
LABEL_316:
          if (sub_1BFFCDB84(v47))
          {
            swift_release();
            goto LABEL_5;
          }
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
LABEL_7:
          uint64_t v3 = v471;
          uint64_t v5 = v484;
          unint64_t v6 = v520;
LABEL_8:
          if (v6 == v5)
          {
            swift_bridgeObjectRelease();
            uint64_t v457 = v543;
            goto LABEL_334;
          }
          break;
        default:
          goto LABEL_8;
      }
    }
  }
LABEL_334:
  if (!sub_1BFFCDB84(v457))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v457;
}

uint64_t FormatDataLayoutAttributes.isResizing.getter()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  while (2)
  {
    unint64_t v5 = *(void *)(v1 + 8 * v3++ + 32);
    switch((v5 >> 59) & 0x1E | (v5 >> 2) & 1)
    {
      case 5uLL:
        uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        if ((*(unsigned char *)(v6 + 169) & 1) == 0) {
          goto LABEL_4;
        }
        goto LABEL_9;
      case 0x10uLL:
        sub_1C017C364();
        swift_projectBox();
        swift_retain();
        swift_retain();
        char v4 = FormatItemNodeDataLayoutAttributes.isResizing.getter();
        swift_release();
        swift_release();
        if ((v4 & 1) == 0) {
          goto LABEL_4;
        }
        goto LABEL_10;
      case 0x11uLL:
        uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
        if ((*(unsigned char *)(v6 + 217) & 1) == 0) {
          goto LABEL_4;
        }
LABEL_9:
        if (CGRectGetHeight(*(CGRect *)(v6 + 64)) <= 1.0)
        {
LABEL_10:
          uint64_t v7 = 1;
          goto LABEL_12;
        }
LABEL_4:
        if (v2 != v3) {
          continue;
        }
        uint64_t v7 = 0;
LABEL_12:
        swift_bridgeObjectRelease();
        break;
      default:
        goto LABEL_4;
    }
    return v7;
  }
}

uint64_t sub_1C017C05C()
{
  return FormatDataLayoutAttributes.isResizing.getter() & 1;
}

uint64_t sub_1C017C088(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8)
{
  char v16 = a4 & 1;
  v20[3] = sub_1BFF6C3A8();
  v20[4] = sub_1C017C474((unint64_t *)&qword_1EB890150, (void (*)(uint64_t))sub_1BFF6C3A8);
  v20[0] = a1;
  sub_1C017C4BC(0, (unint64_t *)&qword_1EB87A8A0, (uint64_t (*)(uint64_t))sub_1C0065520, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = 0x616D497265766F63;
  *(void *)(inited + 40) = 0xEA00000000006567;
  sub_1BFC66384((uint64_t)v20, inited + 48);
  *(void *)(a5 + 80) = sub_1BFF59AB8(inited);
  sub_1BFC66384((uint64_t)v20, a5 + 88);
  *(double *)(a5 + 32) = a6;
  *(double *)(a5 + 40) = a7;
  *(double *)(a5 + 48) = a8;
  *(void *)(a5 + 56) = a2;
  *(void *)(a5 + 64) = a3;
  *(unsigned char *)(a5 + 72) = v16;
  id v18 = objc_msgSend(a1, sel_uniqueKey);
  sub_1C151E62C();

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  type metadata accessor for CGSize(0);
  sub_1C152036C();
  sub_1C151E80C();
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  if ((a4 & 1) == 0)
  {
    sub_1C151EF4C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  *(void *)(a5 + 16) = 0;
  *(void *)(a5 + 24) = 0xE000000000000000;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return a5;
}

uint64_t sub_1C017C35C()
{
  return *(void *)(v0 + 48);
}

void sub_1C017C364()
{
  if (!qword_1EB862E50)
  {
    type metadata accessor for FormatItemNodeData();
    type metadata accessor for FormatItemNodeDataLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB862E50);
    }
  }
}

uint64_t sub_1C017C3D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C017C418(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t method lookup function for FormatDataLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatDataLayoutAttributes);
}

uint64_t sub_1C017C474(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C017C4BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t FormatWeatherBinding.Image.image(from:context:imageContext:)@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v6 = *(unsigned __int8 *)(v2 + 16);
  char v7 = *(unsigned char *)(v2 + 17);
  type metadata accessor for FeedWeather(0);
  sub_1BFF61744(v5, v4, v6, v7);
  sub_1C151E2AC();
  sub_1BFF6B690();
  unint64_t v8 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_configurationWithPaletteColors_, v8);

  uint64_t v10 = sub_1BFF617B0(a1);
  if (v26)
  {

    uint64_t v11 = v5;
    uint64_t v12 = v4;
    uint64_t v13 = v6;
    char v14 = v7;
  }
  else
  {
    uint64_t v15 = v10;
    char v27 = v7;
    id v16 = objc_msgSend(v9, sel_configurationByApplyingConfiguration_, v10);

    sub_1C151E29C();
    id v17 = v16;
    id v18 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v18, v17);

    if (v19)
    {
      id v20 = objc_msgSend(v19, sel_imageWithRenderingMode_, 2);

      if (v20)
      {

        sub_1BFF61770(v5, v4, v6, v27);
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v20;
        *a2 = result;
        return result;
      }
    }
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    uint64_t v23 = v22;
    *uint64_t v22 = sub_1C151E29C();
    v23[1] = v24;
    v23[2] = (uint64_t)v16;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v11 = v5;
    uint64_t v12 = v4;
    uint64_t v13 = v6;
    char v14 = v27;
  }
  return sub_1BFF61770(v11, v12, v13, v14);
}

uint64_t sub_1C017C7A4()
{
  return swift_deallocObject();
}

uint64_t static FormatWeatherBinding.Image.== infix(_:_:)(long long *a1, long long *a2)
{
  __int16 v2 = *((_WORD *)a1 + 8);
  __int16 v3 = *((_WORD *)a2 + 8);
  long long v7 = *a1;
  __int16 v8 = v2;
  long long v5 = *a2;
  __int16 v6 = v3;
  return _s8NewsFeed18FormatSymbolConfigO2eeoiySbAC_ACtFZ_0((uint64_t)&v7, (uint64_t)&v5) & 1;
}

uint64_t sub_1C017C828@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatWeatherBinding.Image.init(from:)(a1, a2);
}

uint64_t sub_1C017C840(void *a1)
{
  return FormatWeatherBinding.Image.encode(to:)(a1);
}

uint64_t sub_1C017C858(long long *a1, long long *a2)
{
  __int16 v2 = *((_WORD *)a1 + 8);
  __int16 v3 = *((_WORD *)a2 + 8);
  long long v7 = *a1;
  __int16 v8 = v2;
  long long v5 = *a2;
  __int16 v6 = v3;
  return _s8NewsFeed18FormatSymbolConfigO2eeoiySbAC_ACtFZ_0((uint64_t)&v7, (uint64_t)&v5) & 1;
}

unint64_t sub_1C017C8A4(uint64_t a1)
{
  unint64_t result = sub_1C017C8CC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C017C8CC()
{
  unint64_t result = qword_1EA197438;
  if (!qword_1EA197438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197438);
  }
  return result;
}

unint64_t sub_1C017C920(void *a1)
{
  a1[1] = sub_1C017C958();
  a1[2] = sub_1C017C9AC();
  unint64_t result = sub_1C017CA00();
  a1[3] = result;
  return result;
}

unint64_t sub_1C017C958()
{
  unint64_t result = qword_1EB866C60;
  if (!qword_1EB866C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866C60);
  }
  return result;
}

unint64_t sub_1C017C9AC()
{
  unint64_t result = qword_1EB866C58;
  if (!qword_1EB866C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB866C58);
  }
  return result;
}

unint64_t sub_1C017CA00()
{
  unint64_t result = qword_1EA197440;
  if (!qword_1EA197440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197440);
  }
  return result;
}

uint64_t destroy for FormatSymbolConfig(uint64_t a1)
{
  return sub_1BFF61770(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(unsigned char *)(a1 + 17));
}

uint64_t _s8NewsFeed18FormatSymbolConfigOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 16);
  sub_1BFF61744(*(void *)a2, v4, v6, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatSymbolConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 17);
  uint64_t v6 = *(unsigned __int8 *)(a2 + 16);
  sub_1BFF61744(*(void *)a2, v4, v6, v5);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v9 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  char v10 = *(unsigned char *)(a1 + 17);
  *(unsigned char *)(a1 + 17) = v5;
  sub_1BFF61770(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FormatSymbolConfig(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 17);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v3;
  sub_1BFF61770(v4, v5, v7, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatWeatherBinding.Image()
{
  return &type metadata for FormatWeatherBinding.Image;
}

uint64_t *sub_1C017CBAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1C017CCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C017CD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C017CD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C017CE18(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C017CF2CLL);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_1C017CF40(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
    int v13 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v12)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            id v16 = *(void (**)(void))(v6 + 56);
            v16();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    int v13 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v15 = ~v7 + a2;
    bzero(a1, v8);
    *(_DWORD *)a1 = v15;
  }
  switch(v12)
  {
    case 1:
      a1[v8] = v14;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v14;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C017D0ECLL);
    case 4:
      *(_DWORD *)&a1[v8] = v14;
      break;
    default:
      return;
  }
}

uint64_t _s8NewsFeed24FormatSelectorExpressionV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

unint64_t sub_1C017D150(uint64_t a1)
{
  unint64_t result = sub_1C017D178();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C017D178()
{
  unint64_t result = qword_1EA197448;
  if (!qword_1EA197448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197448);
  }
  return result;
}

uint64_t sub_1C017D1CC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C017D31C(a1, a2, a3, (uint64_t (*)(void))sub_1BFE66228, (uint64_t (*)(void))sub_1BFE3F3E8, (uint64_t (*)(void))sub_1C017D20C);
}

unint64_t sub_1C017D20C()
{
  unint64_t result = qword_1EA197450;
  if (!qword_1EA197450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197450);
  }
  return result;
}

unint64_t sub_1C017D260(uint64_t a1)
{
  unint64_t result = sub_1C017D288();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C017D288()
{
  unint64_t result = qword_1EA197458;
  if (!qword_1EA197458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197458);
  }
  return result;
}

uint64_t sub_1C017D2DC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C017D31C(a1, a2, a3, (uint64_t (*)(void))sub_1BFE66324, (uint64_t (*)(void))sub_1BFE3F5D0, (uint64_t (*)(void))sub_1C017D370);
}

uint64_t sub_1C017D31C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C017D370()
{
  unint64_t result = qword_1EA197460;
  if (!qword_1EA197460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197460);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSelectorExpression()
{
  return &type metadata for FormatSelectorExpression;
}

ValueMetadata *type metadata accessor for FormatSelectorsExpression()
{
  return &type metadata for FormatSelectorsExpression;
}

void sub_1C017D3F0(uint64_t a1)
{
  __int16 v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void *)v1;
  unsigned int v4 = *(unsigned __int8 *)(v1 + 8);
  if (!(v4 >> 6))
  {
    char v15 = v3;
    uint64_t ObjectType = swift_getObjectType();
    sub_1C0F80EC8(v2, &v15, ObjectType);
    return;
  }
  if (v4 >> 6 == 1)
  {
    char v16 = v3;
    id v5 = objc_msgSend(v2, sel_eventLeagueTag);
    uint64_t v6 = swift_getObjectType();
    unsigned int v7 = &v16;
LABEL_13:
    sub_1C0F80EC8(v5, v7, v6);
    swift_unknownObjectRelease();
    return;
  }
  id v9 = objc_msgSend(*(id *)(a1 + 16), sel_eventCompetitorTags);
  if (v9)
  {
    unsigned int v10 = v9;
    sub_1C017E704();
    unint64_t v11 = sub_1C151EBCC();

    if (!(v11 >> 62)) {
      goto LABEL_7;
    }
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v3 < v12) {
      goto LABEL_8;
    }
LABEL_16:
    type metadata accessor for FormatLayoutError();
    sub_1C017E800((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    int v14 = v13;
    swift_bridgeObjectRelease();
    *int v14 = v12;
    v14[1] = v3;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return;
  }
  unint64_t v11 = MEMORY[0x1E4FBC860];
  if (MEMORY[0x1E4FBC860] >> 62) {
    goto LABEL_15;
  }
LABEL_7:
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3 >= v12) {
    goto LABEL_16;
  }
LABEL_8:
  char v17 = v4 & 0x3F;
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x1C18C7CB0](v3, v11);
    goto LABEL_12;
  }
  if (v3 < 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v3 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v11 + 8 * v3 + 32);
    swift_unknownObjectRetain();
LABEL_12:
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_getObjectType();
    unsigned int v7 = &v17;
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1C017D634(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1480D6C(*a1, *a2);
}

uint64_t sub_1C017D640()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C017D6E0()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C017D76C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C017D808@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C017E6B8();
  *a1 = result;
  return result;
}

void sub_1C017D838(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x65756761656CLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x74697465706D6F63;
    unint64_t v4 = 0xEA0000000000726FLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x746E657665;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C017D894()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C017D8F4()
{
  return sub_1C151EAEC();
}

void sub_1C017D944(void *a1@<X8>)
{
  *a1 = &unk_1F1B66810;
}

uint64_t sub_1C017D958@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSportsEventBinding.Bool.init(from:)(a1, a2);
}

uint64_t sub_1C017D970(void *a1)
{
  return FormatSportsEventBinding.Bool.encode(to:)(a1);
}

uint64_t sub_1C017D98C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (!*a1)
  {
    sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    uint64_t v23 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
    unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v8 = swift_allocObject();
    long long v42 = xmmword_1C1529AE0;
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    uint64_t v46 = (void *)(v8 + v24);
    uint64_t v25 = *(void **)(a2 + 16);
    swift_getObjectType();
    id v26 = objc_msgSend(v25, sel_displayName);
    uint64_t v11 = sub_1C151E62C();
    uint64_t v13 = v27;

    sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v42;
    sub_1C0F81104((uint64_t)v25, (uint64_t)&v43);
    *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(inited + 64) = &off_1F1BDEC90;
    uint64_t v29 = swift_allocObject();
    *(void *)(inited + 32) = v29;
    *(void *)(v29 + 48) = v45;
    long long v30 = v44;
    *(_OWORD *)(v29 + 16) = v43;
    *(_OWORD *)(v29 + 32) = v30;
    uint64_t v31 = sub_1C0233FC8(inited);
    swift_setDeallocating();
    sub_1C01004D8();
    swift_arrayDestroy();
    id v19 = sub_1C131B79C(v31);
    swift_bridgeObjectRelease();
    id v20 = v46;
    uint64_t v21 = 0x746E657645;
    uint64_t v22 = 0xE500000000000000;
    goto LABEL_5;
  }
  if (*a1 != 1)
  {
    id v34 = objc_msgSend(*(id *)(a2 + 16), sel_eventCompetitorTags);
    if (v34)
    {
      uint64_t v35 = v34;
      sub_1C017E704();
      unint64_t v36 = sub_1C151EBCC();

      if (v36 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1C15204BC();
        uint64_t v37 = swift_bridgeObjectRelease();
        if (v38) {
          goto LABEL_9;
        }
      }
      else if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_9:
        MEMORY[0x1F4188790](v37);
        v41[2] = a3;
        uint64_t v8 = sub_1C09FF708(v36, (void (*)(unint64_t, uint64_t))sub_1C017E75C, (uint64_t)v41);
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      swift_bridgeObjectRelease();
    }
    sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
    uint64_t v39 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
    unint64_t v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    long long v43 = 0u;
    long long v44 = 0u;
    uint64_t result = sub_1C042FB5C(0x74697465706D6F43, 0xEA0000000000726FLL, (uint64_t)&v43, (uint64_t *)(v8 + v40));
    goto LABEL_13;
  }
  sub_1C017E764(0, (unint64_t *)&unk_1EA1974B0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
  uint64_t v6 = *(void *)(type metadata accessor for FormatInspectionItem(0) - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = swift_allocObject();
  long long v42 = xmmword_1C1529AE0;
  *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
  uint64_t v46 = (void *)(v8 + v7);
  id v9 = *(void **)(a2 + 16);
  id v10 = objc_msgSend(objc_msgSend(v9, sel_eventLeagueTag), sel_displayName);
  swift_unknownObjectRelease();
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;

  sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
  uint64_t v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = v42;
  id v15 = objc_msgSend(v9, sel_eventLeagueTag);
  swift_getObjectType();
  sub_1C0F81104((uint64_t)v15, (uint64_t)&v43);
  swift_unknownObjectRelease();
  *(void *)(v14 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v14 + 64) = &off_1F1BDEC90;
  uint64_t v16 = swift_allocObject();
  *(void *)(v14 + 32) = v16;
  *(void *)(v16 + 48) = v45;
  long long v17 = v44;
  *(_OWORD *)(v16 + 16) = v43;
  *(_OWORD *)(v16 + 32) = v17;
  uint64_t v18 = sub_1C0233FC8(v14);
  swift_setDeallocating();
  sub_1C01004D8();
  swift_arrayDestroy();
  id v19 = sub_1C131B79C(v18);
  swift_bridgeObjectRelease();
  id v20 = v46;
  uint64_t v21 = 0x65756761654CLL;
  uint64_t v22 = 0xE600000000000000;
LABEL_5:
  uint64_t result = sub_1C042F458(v21, v22, (uint64_t)v19, v11, v13, v20);
LABEL_13:
  *a4 = v8;
  return result;
}

uint64_t sub_1C017DF98@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  strcpy((char *)v15, "Competitor [");
  BYTE13(v15[0]) = 0;
  HIWORD(v15[0]) = -5120;
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  long long v4 = v15[0];
  swift_getObjectType();
  id v5 = objc_msgSend(a1, sel_displayName);
  uint64_t v6 = sub_1C151E62C();
  uint64_t v8 = v7;

  sub_1C017E764(0, (unint64_t *)&qword_1EA1974C0, (void (*)(uint64_t))sub_1C01004D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C0F81104((uint64_t)a1, (uint64_t)v15);
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v10 = swift_allocObject();
  *(void *)(inited + 32) = v10;
  *(void *)(v10 + 48) = v16;
  long long v11 = v15[1];
  *(_OWORD *)(v10 + 16) = v15[0];
  *(_OWORD *)(v10 + 32) = v11;
  uint64_t v12 = sub_1C0233FC8(inited);
  swift_setDeallocating();
  sub_1C01004D8();
  swift_arrayDestroy();
  uint64_t v13 = sub_1C131B79C(v12);
  swift_bridgeObjectRelease();
  return sub_1C042F458(v4, *((uint64_t *)&v4 + 1), (uint64_t)v13, v6, v8, a2);
}

BOOL _s8NewsFeed24FormatSportsEventBindingV4BoolO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unsigned int v3 = *((unsigned __int8 *)a1 + 8);
  uint64_t v4 = *a2;
  unsigned int v5 = *((unsigned __int8 *)a2 + 8);
  unsigned int v6 = v3 >> 6;
  BOOL v7 = *a2 == *a1;
  if (v5 >= 0x40) {
    BOOL v7 = 0;
  }
  BOOL v8 = v4 == v2;
  if ((v5 & 0xC0) != 0x40) {
    BOOL v8 = 0;
  }
  BOOL v10 = ((v5 ^ v3) & 0x3F) == 0 && v2 == v4;
  if ((v5 & 0xC0) != 0x80) {
    BOOL v10 = 0;
  }
  if (v6 == 1) {
    BOOL v10 = v8;
  }
  if (v6) {
    return v10;
  }
  else {
    return v7;
  }
}

unint64_t sub_1C017E1D0(uint64_t a1)
{
  unint64_t result = sub_1C017E1F8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C017E1F8()
{
  unint64_t result = qword_1EA197470;
  if (!qword_1EA197470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197470);
  }
  return result;
}

unint64_t sub_1C017E24C(void *a1)
{
  a1[1] = sub_1C017E284();
  a1[2] = sub_1C017E2D8();
  unint64_t result = sub_1C017E32C();
  a1[3] = result;
  return result;
}

unint64_t sub_1C017E284()
{
  unint64_t result = qword_1EA197478;
  if (!qword_1EA197478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197478);
  }
  return result;
}

unint64_t sub_1C017E2D8()
{
  unint64_t result = qword_1EA197480;
  if (!qword_1EA197480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197480);
  }
  return result;
}

unint64_t sub_1C017E32C()
{
  unint64_t result = qword_1EA197488;
  if (!qword_1EA197488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197488);
  }
  return result;
}

uint64_t _s4TextOwet_4(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 6 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 6);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 3) & 4 | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 7;
  if (v3 >= 5) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s4TextOwst_4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 5)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 6;
    if (a3 >= 6) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 6) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(unsigned char *)(result + 8) = 32 * (((-a2 & 4) != 0) - 2 * a2);
    }
  }
  return result;
}

uint64_t sub_1C017E428(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 6;
}

uint64_t sub_1C017E434(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_1C017E444(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 0x1F | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.Bool()
{
  return &type metadata for FormatSportsEventBinding.Bool;
}

unsigned char *_s4BoolO10CodingTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C017E534);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s4BoolO10CodingTypeOMa()
{
  return &_s4BoolO10CodingTypeON;
}

uint64_t sub_1C017E56C()
{
  return sub_1C017E800(&qword_1EA197490, (void (*)(uint64_t))sub_1C017E5B4);
}

void sub_1C017E5B4()
{
  if (!qword_1EA197498)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197498);
    }
  }
}

unint64_t sub_1C017E610()
{
  unint64_t result = qword_1EA1974A0;
  if (!qword_1EA1974A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1974A0);
  }
  return result;
}

unint64_t sub_1C017E664()
{
  unint64_t result = qword_1EA1974A8;
  if (!qword_1EA1974A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1974A8);
  }
  return result;
}

uint64_t sub_1C017E6B8()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C017E704()
{
  unint64_t result = qword_1EB86B430;
  if (!qword_1EB86B430)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB86B430);
  }
  return result;
}

uint64_t sub_1C017E75C@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  return sub_1C017DF98(a1, a2);
}

void sub_1C017E764(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C152089C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C017E7B8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C017E800(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void destroy for DebugFormatFileSource(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void **)(a1 + 120);
  }
}

uint64_t initializeWithCopy for DebugFormatFileSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v7;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    BOOL v8 = *(void **)(a2 + 120);
    swift_bridgeObjectRetain();
    id v9 = v8;
    *(void *)(a1 + 120) = v8;
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v10;
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
  }
  return a1;
}

uint64_t assignWithCopy for DebugFormatFileSource(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 88);
  uint64_t v5 = (_OWORD *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96))
  {
    if (v6)
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      uint64_t v7 = *(void **)(a2 + 120);
      id v8 = v7;
      id v9 = *(void **)(a1 + 120);
      *(void *)(a1 + 120) = v7;
    }
    else
    {
      sub_1C017EB24(a1 + 88);
      uint64_t v12 = *(void *)(a2 + 120);
      long long v13 = *(_OWORD *)(a2 + 104);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 104) = v13;
      *(void *)(a1 + 120) = v12;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    long long v10 = *(void **)(a2 + 120);
    swift_bridgeObjectRetain();
    id v11 = v10;
    *(void *)(a1 + 120) = v10;
  }
  else
  {
    long long v14 = *v5;
    long long v15 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *uint64_t v4 = v14;
    *(_OWORD *)(a1 + 104) = v15;
  }
  return a1;
}

uint64_t sub_1C017EB24(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for DebugFormatFileSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 96)) {
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(a2 + 96);
  if (!v7)
  {
    sub_1C017EB24(a1 + 88);
LABEL_5:
    long long v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v9;
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    return a1;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  id v8 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);

  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatFileSource(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatFileSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatFileSource()
{
  return &type metadata for DebugFormatFileSource;
}

uint64_t sub_1C017ED10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v43 = a4;
  sub_1C017F21C(0, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v41 = (_OWORD *)((char *)&v34 - v7);
  sub_1C017F21C(0, (unint64_t *)&qword_1EA1A5240, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
  MEMORY[0x1F4188790](v8 - 8);
  long long v10 = (char *)&v34 - v9;
  uint64_t v11 = type metadata accessor for DebugFormatCacheFile();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  long long v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = *a2;
  uint64_t v45 = a2[1];
  uint64_t v39 = a2[2];
  uint64_t v38 = a2[3];
  uint64_t v15 = *a3;
  uint64_t v16 = a3[1];
  uint64_t v17 = a3[2];
  uint64_t v44 = a3[3];
  uint64_t v18 = (void *)a3[4];
  uint64_t v19 = v42;
  sub_1C017F38C(v42, (uint64_t)v10, (unint64_t *)&qword_1EA1A5240, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1C017F3F8(v19, (unint64_t *)&qword_1EA1A5240, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
    sub_1C017F270(v15, v16, v17, v44, v18);
    swift_bridgeObjectRelease();
    sub_1C017F3F8((uint64_t)v10, (unint64_t *)&qword_1EA1A5240, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
    sub_1C017F2B4(&v46);
    uint64_t v20 = v43;
  }
  else
  {
    uint64_t v35 = v15;
    uint64_t v36 = v16;
    uint64_t v37 = v17;
    uint64_t v21 = v19;
    uint64_t v22 = v43;
    sub_1C017F324((uint64_t)v10, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    uint64_t v24 = *(void *)v14;
    uint64_t v23 = *((void *)v14 + 1);
    uint64_t v25 = *((void *)v14 + 2);
    char v26 = v14[24];
    uint64_t v27 = *((void *)v14 + 5);
    uint64_t v34 = *((void *)v14 + 4);
    uint64_t v28 = v41;
    sub_1C017F38C((uint64_t)&v14[*(int *)(v11 + 24)], (uint64_t)v41, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
    uint64_t v29 = type metadata accessor for FormatDerivedDataFile();
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29) == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C017F3F8((uint64_t)v28, &qword_1EA1974C8, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataFile);
      uint64_t v30 = MEMORY[0x1E4FBC860];
    }
    else
    {
      long long v31 = v28[5];
      v61[0] = v28[4];
      v61[1] = v31;
      long long v32 = v28[7];
      v61[2] = v28[6];
      v61[3] = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C017F4B4((uint64_t)v61);
      sub_1C017F454((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataFile);
      uint64_t v30 = sub_1C0F49174();
      sub_1C017F540((uint64_t)v61);
    }
    sub_1C017F3F8(v21, (unint64_t *)&qword_1EA1A5240, (void (*)(uint64_t))type metadata accessor for DebugFormatCacheFile);
    sub_1C017F454((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
    *(void *)&long long v46 = v24;
    *((void *)&v46 + 1) = v23;
    uint64_t v47 = v25;
    char v48 = v26;
    uint64_t v49 = v34;
    uint64_t v50 = v27;
    uint64_t v51 = v40;
    uint64_t v52 = v45;
    uint64_t v53 = v39;
    uint64_t v54 = v38;
    uint64_t v55 = v30;
    uint64_t v56 = v35;
    uint64_t v57 = v36;
    uint64_t v58 = v37;
    uint64_t v59 = v44;
    uint64_t v60 = v18;
    nullsub_1();
    uint64_t v20 = v22;
  }
  return sub_1C017F324((uint64_t)&v46, v20, (uint64_t (*)(void))sub_1C017F2CC);
}

void sub_1C017F21C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C017F270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
  }
}

double sub_1C017F2B4(_OWORD *a1)
{
  double result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

void sub_1C017F2CC()
{
  if (!qword_1EA1A2580)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1A2580);
    }
  }
}

uint64_t sub_1C017F324(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C017F38C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C017F21C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C017F3F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C017F21C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C017F454(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C017F4B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C017F510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (((a6 >> 41) & 0x7F) != 0x7F) {
    return sub_1C017F524(a1, a2, a3, a4, a5, a6);
  }
  return a1;
}

uint64_t sub_1C017F524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6 = (a6 >> 45) & 7;
  if (v6 <= 5) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C017F540(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C017F59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (((a6 >> 41) & 0x7F) != 0x7F) {
    return sub_1C017F5B0(a1, a2, a3, a4, a5, a6);
  }
  return a1;
}

uint64_t sub_1C017F5B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6 = (a6 >> 45) & 7;
  if (v6 <= 5) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C017F5CC(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8 = *a3;
  uint64_t v9 = a3[1];
  uint64_t v11 = a3[2];
  uint64_t v10 = a3[3];
  uint64_t v35 = a4;
  id v12 = a4;
  sub_1C017F734();
  if (swift_dynamicCast())
  {
    uint64_t v14 = v30;
    uint64_t v13 = v31;
    uint64_t v15 = v32;
    uint64_t v16 = v33;
    unint64_t v17 = v34;
    if (v34 >> 60 == 12)
    {
      unint64_t v29 = a2;
      uint64_t v30 = v8;
      uint64_t v25 = (void *)(v34 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v31 = v9;
      uint64_t v32 = v11;
      uint64_t v33 = v10;
      uint64_t v26 = v16;
      uint64_t v27 = v15;
      id v28 = (id)(v34 & 0xFFFFFFFFFFFFFFFLL);
      sub_1C017F5CC(a1, v29, &v30, v34 & 0xFFFFFFFFFFFFFFFLL);

      uint64_t v21 = v14;
      uint64_t v22 = v13;
      uint64_t v23 = v27;
      uint64_t v24 = v26;
      goto LABEL_6;
    }
    if (v34 >> 60 == 13)
    {
      uint64_t v30 = v8;
      uint64_t v31 = v9;
      uint64_t v32 = v11;
      uint64_t v33 = v10;
      uint64_t v18 = v15;
      uint64_t v19 = a5;
      uint64_t v20 = v16;
      sub_1C017F8A0(a1, a2, &v30, v14, v13, v19);
      uint64_t v21 = v14;
      uint64_t v22 = v13;
      uint64_t v23 = v18;
      uint64_t v24 = v20;
LABEL_6:
      sub_1C017F78C(v21, v22, v23, v24, v17);
      return;
    }
    sub_1C017F78C(v30, v31, v32, v33, v34);
  }
  *a5 = v8;
  a5[1] = v9;
  a5[2] = v11;
  a5[3] = v10;
  swift_bridgeObjectRetain();
}

unint64_t sub_1C017F734()
{
  unint64_t result = qword_1EB87A930;
  if (!qword_1EB87A930)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A930);
  }
  return result;
}

void sub_1C017F78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  switch(a5 >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 6uLL:
    case 0xBuLL:
    case 0xEuLL:
      goto LABEL_3;
    case 2uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xDuLL:
      swift_bridgeObjectRelease();
LABEL_3:
      swift_bridgeObjectRelease();
      break;
    case 0xCuLL:
      uint64_t v5 = (void *)(a5 & 0xFFFFFFFFFFFFFFFLL);
      swift_bridgeObjectRelease();

      break;
    default:
      return;
  }
}

uint64_t sub_1C017F8A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v10 = sub_1C15154CC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a3;
  uint64_t v14 = a3[1];
  uint64_t v16 = a3[2];
  uint64_t v41 = a3[3];
  uint64_t v53 = a1;
  unint64_t v54 = a2;
  sub_1C151549C();
  unint64_t v46 = sub_1BFF27ECC();
  uint64_t v17 = sub_1C151FE3C();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v47 = v11 + 8;
  uint64_t v48 = v10;
  uint64_t v45 = v18;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v18)(v13, v10);
  uint64_t v20 = v16 - 1;
  if (__OFSUB__(v16, 1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v21 = *(void *)(v17 + 16);
  if (v21 < v20)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v20 == v21)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a6 = v15;
    a6[1] = v14;
    uint64_t v22 = v41;
    a6[2] = v16;
    a6[3] = v22;
    return swift_bridgeObjectRetain();
  }
  uint64_t v37 = v16;
  uint64_t v38 = v15;
  uint64_t v39 = a6;
  uint64_t v40 = v14;
  uint64_t v43 = v17 + 32;
  uint64_t v44 = v17;
  unint64_t v23 = v16 - 1;
  uint64_t v42 = v16 - 1;
  while (1)
  {
    if ((uint64_t)v23 >= v21)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    if (v20 < 0) {
      goto LABEL_26;
    }
    if (v23 >= *(void *)(v17 + 16)) {
      goto LABEL_27;
    }
    uint64_t v24 = (uint64_t *)(v43 + 16 * v23);
    uint64_t v25 = *v24;
    unint64_t v26 = v24[1];
    ++v23;
    uint64_t v53 = *v24;
    unint64_t v54 = v26;
    swift_bridgeObjectRetain();
    sub_1C15153DC();
    uint64_t v27 = sub_1C151FE9C();
    unint64_t v29 = v28;
    v45(v13, v48);
    uint64_t v53 = v27;
    unint64_t v54 = v29;
    uint64_t v51 = v49;
    uint64_t v52 = v50;
    sub_1C0180128();
    sub_1C018017C();
    LOBYTE(v27) = sub_1C151E50C();
    swift_bridgeObjectRelease();
    if (v27)
    {
      uint64_t v30 = HIBYTE(v26) & 0xF;
      if ((v26 & 0x2000000000000000) == 0) {
        uint64_t v30 = v25 & 0xFFFFFFFFFFFFLL;
      }
      if (v30) {
        break;
      }
    }
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v17 = v44;
    uint64_t v20 = v42;
    if (v23 == v21)
    {
      swift_bridgeObjectRelease();
      a6 = v39;
      uint64_t v14 = v40;
      uint64_t v16 = v37;
      uint64_t v15 = v38;
      goto LABEL_5;
    }
  }
  uint64_t v31 = 4 * v30;
  while (1)
  {
    if (sub_1C151E8BC() == 32 && v33 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    char v32 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0) {
      break;
    }
LABEL_17:
    if (v31 == (unint64_t)sub_1C151E7BC() >> 14) {
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v34 = v40;
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1C151E87C();
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v35, 1))
  {
LABEL_30:
    __break(1u);
    return result;
  }
  uint64_t v36 = v39;
  *uint64_t v39 = v38;
  v36[1] = v34;
  v36[2] = v23;
  v36[3] = v35 + 1;
  return result;
}

uint64_t sub_1C017FC04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = sub_1C15154CC();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  sub_1C151549C();
  unint64_t v34 = sub_1BFF27ECC();
  uint64_t v12 = sub_1C151FE3C();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v14 = v8;
  v13(v11, v8);
  uint64_t v15 = *(void *)(v12 + 16);
  if (v15)
  {
    char v32 = a3;
    uint64_t v33 = a4;
    uint64_t v16 = 0;
    uint64_t v31 = v12;
    uint64_t v17 = (uint64_t *)(v12 + 40);
    do
    {
      uint64_t v18 = *v17;
      uint64_t v35 = *(v17 - 1);
      uint64_t v36 = v18;
      swift_bridgeObjectRetain();
      sub_1C15153DC();
      uint64_t v19 = sub_1C151FE9C();
      unint64_t v21 = v20;
      v13(v11, v14);
      swift_bridgeObjectRelease();
      uint64_t v22 = HIBYTE(v21) & 0xF;
      if ((v21 & 0x2000000000000000) == 0) {
        uint64_t v22 = v19 & 0xFFFFFFFFFFFFLL;
      }
      if (!v22
        || ((uint64_t v23 = sub_1C151E8BC(), v25 = v24, swift_bridgeObjectRelease(), v23 == 35)
          ? (BOOL v26 = v25 == 0xE100000000000000)
          : (BOOL v26 = 0),
            v26))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v27 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0)
        {
          uint64_t v30 = v16 + 1;
          a3 = v32;
          a4 = v33;
          goto LABEL_17;
        }
      }
      ++v16;
      v17 += 2;
    }
    while (v15 != v16);
    a3 = v32;
    a4 = v33;
  }
  uint64_t v30 = 1;
LABEL_17:
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[1];
  *a4 = *a3;
  a4[1] = v28;
  a4[2] = v30;
  a4[3] = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C017FE58@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X3>, int64x2_t *a5@<X8>)
{
  uint64_t v31 = a5;
  uint64_t v9 = sub_1C15154CC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1;
  unint64_t v39 = a2;
  sub_1C151549C();
  sub_1BFF27ECC();
  uint64_t v13 = sub_1C151FE3C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v32 = *(void *)(v13 + 16);
  if (!v32)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    uint64_t v28 = a3[1];
    unint64_t v29 = v31;
    v31->i64[0] = *a3;
    v29->i64[1] = v28;
    v29[1] = vdupq_n_s64(1uLL);
    return swift_bridgeObjectRetain();
  }
  uint64_t v30 = a3;
  unint64_t v15 = 0;
  uint64_t v16 = *a4;
  uint64_t v34 = a4[1];
  uint64_t v35 = v16;
  uint64_t v33 = v13 + 32;
  while (1)
  {
    if (v15 >= *(void *)(v13 + 16))
    {
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v17 = (uint64_t *)(v33 + 16 * v15);
    uint64_t v19 = *v17;
    unint64_t v18 = v17[1];
    ++v15;
    uint64_t v38 = *v17;
    unint64_t v39 = v18;
    uint64_t v36 = v35;
    uint64_t v37 = v34;
    swift_bridgeObjectRetain();
    if (sub_1C151FF0C())
    {
      uint64_t v20 = HIBYTE(v18) & 0xF;
      if ((v18 & 0x2000000000000000) == 0) {
        uint64_t v20 = v19 & 0xFFFFFFFFFFFFLL;
      }
      if (v20) {
        break;
      }
    }
LABEL_3:
    uint64_t result = swift_bridgeObjectRelease();
    if (v15 == v32)
    {
      swift_bridgeObjectRelease();
      a3 = v30;
      goto LABEL_19;
    }
  }
  uint64_t v21 = 4 * v20;
  while (1)
  {
    if (sub_1C151E8BC() == 32 && v23 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    char v22 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      break;
    }
LABEL_11:
    if (v21 == (unint64_t)sub_1C151E7BC() >> 14) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v25 = *v30;
  uint64_t v24 = v30[1];
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1C151E87C();
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v26, 1))
  {
    char v27 = (uint64_t *)v31;
    v31->i64[0] = v25;
    v27[1] = v24;
    v27[2] = v15;
    v27[3] = v26 + 1;
    return result;
  }
LABEL_22:
  __break(1u);
  return result;
}

unint64_t sub_1C0180128()
{
  unint64_t result = qword_1EB8631D0;
  if (!qword_1EB8631D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8631D0);
  }
  return result;
}

unint64_t sub_1C018017C()
{
  unint64_t result = qword_1EA1ACFE0;
  if (!qword_1EA1ACFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1ACFE0);
  }
  return result;
}

uint64_t static FormatActivityItemsData.headline(_:options:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = sub_1BFFD07D4(12, a2);
  *(void *)a3 = a1;
  *(unsigned char *)(a3 + 8) = v5 & 1;
  return swift_unknownObjectRetain();
}

id static FormatActivityItemsData.issue(_:options:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = sub_1BFFD07D4(12, a2) & 1 | 0x10;
  *(void *)a3 = a1;
  *(unsigned char *)(a3 + 8) = v4;
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatActivityItemsData(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1BFF43A68(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for FormatActivityItemsData(uint64_t a1)
{
}

uint64_t assignWithCopy for FormatActivityItemsData(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1BFF43A68(*(id *)a2, v4);
  char v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1BFF43600(v5, v6);
  return a1;
}

uint64_t assignWithTake for FormatActivityItemsData(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1BFF43600(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatActivityItemsData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x77 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 119);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 4) & 0xFFFFFF8F | (16 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 7))) ^ 0x7F;
  if (v3 >= 0x76) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatActivityItemsData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x76)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 119;
    if (a3 >= 0x77) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x77) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 4) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1C0180458(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 4;
}

uint64_t sub_1C0180464(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0xFu;
  return result;
}

uint64_t sub_1C0180474(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | (16 * a2);
  return result;
}

ValueMetadata *type metadata accessor for FormatActivityItemsData()
{
  return &type metadata for FormatActivityItemsData;
}

void *sub_1C0180498(uint64_t a1)
{
  unint64_t v2 = (int *)type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v2);
  unsigned __int8 v4 = (_WORD *)((char *)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unsigned __int8 v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEEF314(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v107 - v7;
  sub_1BFEEF314(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, v5);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v107 - v10;
  unsigned int v12 = *(unsigned __int8 *)(a1 + 8);
  if (v12 <= 0xFD)
  {
    char v27 = *(void **)a1;
    switch(v12 >> 4)
    {
      case 1u:
        int v110 = v12 & 1;
        uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFEEF314(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
        sub_1BFEEF314(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v48);
        sub_1C0181BEC(0);
        *(void *)&long long v111 = v49;
        uint64_t v50 = *(void *)(v49 - 8);
        uint64_t v108 = *(void *)(v50 + 72);
        unint64_t v51 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
        uint64_t v52 = swift_allocObject();
        uint64_t v109 = v52;
        *(_OWORD *)(v52 + 16) = xmmword_1C1527210;
        uint64_t v107 = (char *)(v52 + v51);
        id v53 = objc_allocWithZone(MEMORY[0x1E4F7E420]);
        sub_1BFF43A68(v27, v12);
        id v54 = objc_msgSend(v53, sel_init);
        uint64_t v55 = qword_1F1B668A8;
        id v56 = v27;
        id v57 = objc_msgSend(v56, sel_identifier);
        uint64_t v58 = (void *)sub_1C151E62C();
        uint64_t v60 = v59;
        sub_1C0181C68(v27, v12);

        char v112 = 0;
        v113[0] = v56;
        v113[1] = v58;
        v113[2] = v60;
        __int16 v114 = 0;
        uint64_t v115 = 0;
        char v116 = 0;
        uint64_t v117 = v55;
        id v118 = v54;
        char v119 = 0;
        long long v120 = xmmword_1C152C800;
        long long v121 = 0u;
        long long v122 = 0u;
        uint64_t v123 = 0;
        uint64_t v124 = 5;
        char v125 = 0;
        nullsub_1();
        sub_1C0181C7C((uint64_t)v113, (uint64_t)&v126);
        uint64_t v61 = v107;
        sub_1C0432C90(0x6575737349, 0xE500000000000000, (uint64_t)&v126, v107);
        uint64_t v62 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v63 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56);
        v63(v61, 0, 1, v62);
        uint64_t v64 = &v61[v108];
        uint64_t v65 = &v61[v108 + *(int *)(v62 + 24)];
        *uint64_t v65 = v110;
        uint64_t v66 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 0, 1, v66);
        *(_OWORD *)uint64_t v64 = xmmword_1C152E210;
        *((void *)v64 + 2) = 0;
        *((void *)v64 + 3) = 0;
        uint64_t v67 = &v64[*(int *)(v62 + 28)];
        *(void *)uint64_t v67 = 0;
        *((void *)v67 + 1) = 0;
        v67[16] = -1;
        v63(v64, 0, 1, v62);
        sub_1C09BCFA4(0x7974697669746341, 0xEE00736D65744920, 0, 0, v109, v129);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v29 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v29 + 64) = &off_1F1BDEC90;
        uint64_t v45 = swift_allocObject();
        *(void *)(v29 + 32) = v45;
        long long v68 = v129[1];
        *(_OWORD *)(v45 + 16) = v129[0];
        *(_OWORD *)(v45 + 32) = v68;
        uint64_t v47 = v130;
        goto LABEL_8;
      case 2u:
        char v70 = v12 & 1;
        uint64_t v71 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFEEF314(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v72 = swift_allocObject();
        *(_OWORD *)(v72 + 16) = xmmword_1C1529AE0;
        sub_1BFEEF314(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v71);
        sub_1C0181BEC(0);
        *(void *)&long long v111 = v73;
        uint64_t v74 = *(void *)(*(void *)(v73 - 8) + 72);
        unint64_t v75 = (*(unsigned __int8 *)(*(void *)(v73 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v73 - 8) + 80);
        uint64_t v76 = swift_allocObject();
        *(_OWORD *)(v76 + 16) = xmmword_1C1527210;
        sub_1BFF43A68(v27, v12);
        FeedPuzzle.init(puzzle:)(v27, (uint64_t)&v126);
        sub_1C043317C(0x656C7A7A7550, 0xE600000000000000, (uint64_t)&v126, (void *)(v76 + v75));
        uint64_t v77 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v78 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56);
        v78(v76 + v75, 0, 1, v77);
        unint64_t v79 = v76 + v75 + v74;
        uint64_t v80 = (unsigned char *)(v79 + *(int *)(v77 + 24));
        unsigned char *v80 = v70;
        uint64_t v81 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v80, 0, 1, v81);
        *(_OWORD *)unint64_t v79 = xmmword_1C152E210;
        *(void *)(v79 + 16) = 0;
        *(void *)(v79 + 24) = 0;
        unint64_t v82 = v79 + *(int *)(v77 + 28);
        *(void *)unint64_t v82 = 0;
        *(void *)(v82 + 8) = 0;
        *(unsigned char *)(v82 + 16) = -1;
        v78(v79, 0, 1, v77);
        sub_1C09BCFA4(0x7974697669746341, 0xEE00736D65744920, 0, 0, v76, &v126);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v72 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v72 + 64) = &off_1F1BDEC90;
        uint64_t v83 = swift_allocObject();
        *(void *)(v72 + 32) = v83;
        long long v84 = v127;
        *(_OWORD *)(v83 + 16) = v126;
        *(_OWORD *)(v83 + 32) = v84;
        *(void *)(v83 + 48) = v128;
        uint64_t v85 = sub_1C131B79C(v72);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        return v85;
      case 3u:
        uint64_t v86 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFEEF314(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v14 = swift_allocObject();
        long long v111 = xmmword_1C1529AE0;
        *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
        sub_1BFEEF314(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v86);
        sub_1C0181BEC(0);
        unint64_t v88 = (*(unsigned __int8 *)(*(void *)(v87 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v87 - 8) + 80);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = v111;
        unint64_t v18 = (void *)(v17 + v88);
        uint64_t v19 = v18;
        uint64_t v20 = 0x65726F6353;
        uint64_t v21 = 0xE500000000000000;
        goto LABEL_3;
      case 4u:
        uint64_t v89 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFEEF314(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v14 = swift_allocObject();
        long long v111 = xmmword_1C1529AE0;
        *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
        sub_1BFEEF314(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v89);
        sub_1C0181BEC(0);
        unint64_t v91 = (*(unsigned __int8 *)(*(void *)(v90 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v90 - 8) + 80);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = v111;
        unint64_t v18 = (void *)(v17 + v91);
        uint64_t v19 = v18;
        uint64_t v20 = 0x676E69646E617453;
        uint64_t v21 = 0xE800000000000000;
        goto LABEL_3;
      case 5u:
        uint64_t v92 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFEEF314(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v14 = swift_allocObject();
        long long v111 = xmmword_1C1529AE0;
        *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
        sub_1BFEEF314(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v92);
        sub_1C0181BEC(0);
        unint64_t v94 = (*(unsigned __int8 *)(*(void *)(v93 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v93 - 8) + 80);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = v111;
        unint64_t v18 = (void *)(v17 + v94);
        uint64_t v19 = v18;
        uint64_t v20 = 0x74656B63617242;
        uint64_t v21 = 0xE700000000000000;
        goto LABEL_3;
      case 6u:
        uint64_t v95 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFEEF314(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v14 = swift_allocObject();
        long long v111 = xmmword_1C1529AE0;
        *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
        sub_1BFEEF314(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v95);
        sub_1C0181BEC(0);
        unint64_t v97 = (*(unsigned __int8 *)(*(void *)(v96 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v96 - 8) + 80);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = v111;
        unint64_t v18 = (void *)(v17 + v97);
        uint64_t v19 = v18;
        uint64_t v20 = 0x726F635320786F42;
        uint64_t v21 = 0xE900000000000065;
        goto LABEL_3;
      case 7u:
        uint64_t v98 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFEEF314(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v14 = swift_allocObject();
        long long v111 = xmmword_1C1529AE0;
        *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
        sub_1BFEEF314(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v98);
        sub_1C0181BEC(0);
        unint64_t v100 = (*(unsigned __int8 *)(*(void *)(v99 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v99 - 8) + 80);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = v111;
        unint64_t v18 = (void *)(v17 + v100);
        uint64_t v19 = v18;
        uint64_t v20 = 0x6F635320656E694CLL;
        uint64_t v21 = 0xEA00000000006572;
        goto LABEL_3;
      case 8u:
        double v101 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFEEF314(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v14 = swift_allocObject();
        long long v111 = xmmword_1C1529AE0;
        *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
        sub_1BFEEF314(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v101);
        sub_1C0181BEC(0);
        unint64_t v103 = (*(unsigned __int8 *)(*(void *)(v102 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v102 - 8) + 80);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = v111;
        unint64_t v18 = (void *)(v17 + v103);
        uint64_t v19 = v18;
        uint64_t v20 = 0x52207972756A6E49;
        uint64_t v21 = 0xED000074726F7065;
        goto LABEL_3;
      case 9u:
        double v104 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFEEF314(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v14 = swift_allocObject();
        long long v111 = xmmword_1C1529AE0;
        *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
        sub_1BFEEF314(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v104);
        sub_1C0181BEC(0);
        unint64_t v106 = (*(unsigned __int8 *)(*(void *)(v105 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v105 - 8) + 80);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = v111;
        unint64_t v18 = (void *)(v17 + v106);
        uint64_t v19 = v18;
        uint64_t v20 = 0x79616C502079654BLL;
        uint64_t v21 = 0xEB00000000737265;
        goto LABEL_3;
      default:
        int v110 = v12 & 1;
        uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFEEF314(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
        sub_1BFEEF314(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v28);
        sub_1C0181BEC(0);
        *(void *)&long long v111 = v30;
        uint64_t v31 = *(void *)(v30 - 8);
        uint64_t v108 = *(void *)(v31 + 72);
        unint64_t v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
        uint64_t v33 = swift_allocObject();
        uint64_t v109 = v33;
        *(_OWORD *)(v33 + 16) = xmmword_1C1527210;
        uint64_t v107 = (char *)(v33 + v32);
        uint64_t v34 = sub_1C151D2DC();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v8, 1, 1, v34);
        v113[0] = 0;
        *(void *)&long long v126 = 0;
        BYTE8(v126) = 1;
        LOBYTE(v129[0]) = 0;
        uint64_t v35 = (char *)v4 + v2[6];
        uint64_t v36 = type metadata accessor for SharedItem();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 1, 1, v36);
        *unsigned __int8 v4 = 258;
        *((unsigned char *)v4 + v2[7]) = 1;
        *((unsigned char *)v4 + v2[8]) = 0;
        *((unsigned char *)v4 + v2[9]) = 0;
        *((unsigned char *)v4 + v2[10]) = 0;
        sub_1BFF43A68(v27, v12);
        FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v27, 0, (char *)v129, (uint64_t)v8, (uint64_t)v4, v113, (uint64_t)v11, (uint64_t)&v126);
        uint64_t v37 = type metadata accessor for FeedHeadline(0);
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v11, 0, 1, v37);
        uint64_t v38 = v107;
        sub_1C0432608(0x656E696C64616548, 0xE800000000000000, (uint64_t)v11, v107);
        uint64_t v39 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v40 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56);
        v40(v38, 0, 1, v39);
        uint64_t v41 = &v38[v108];
        uint64_t v42 = &v38[v108 + *(int *)(v39 + 24)];
        *uint64_t v42 = v110;
        uint64_t v43 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
        *(_OWORD *)uint64_t v41 = xmmword_1C152E210;
        *((void *)v41 + 2) = 0;
        *((void *)v41 + 3) = 0;
        uint64_t v44 = &v41[*(int *)(v39 + 28)];
        *(void *)uint64_t v44 = 0;
        *((void *)v44 + 1) = 0;
        v44[16] = -1;
        v40(v41, 0, 1, v39);
        sub_1C09BCFA4(0x7974697669746341, 0xEE00736D65744920, 0, 0, v109, &v126);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v29 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v29 + 64) = &off_1F1BDEC90;
        uint64_t v45 = swift_allocObject();
        *(void *)(v29 + 32) = v45;
        long long v46 = v127;
        *(_OWORD *)(v45 + 16) = v126;
        *(_OWORD *)(v45 + 32) = v46;
        uint64_t v47 = v128;
LABEL_8:
        *(void *)(v45 + 48) = v47;
        uint64_t v69 = sub_1C131B79C(v29);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        unint64_t result = v69;
        break;
    }
  }
  else
  {
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFEEF314(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t v14 = swift_allocObject();
    long long v111 = xmmword_1C1529AE0;
    *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
    sub_1BFEEF314(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v13);
    sub_1C0181BEC(0);
    unint64_t v16 = (*(unsigned __int8 *)(*(void *)(v15 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v15 - 8) + 80);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = v111;
    unint64_t v18 = (void *)(v17 + v16);
    uint64_t v19 = v18;
    uint64_t v20 = 1701736270;
    uint64_t v21 = 0xE400000000000000;
LABEL_3:
    sub_1C0433600(1701869908, 0xE400000000000000, v20, v21, v19);
    uint64_t v22 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v18, 0, 1, v22);
    sub_1C09BCFA4(0x7974697669746341, 0xEE00736D65744920, 0, 0, v17, &v126);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)(v14 + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v14 + 64) = &off_1F1BDEC90;
    uint64_t v23 = swift_allocObject();
    *(void *)(v14 + 32) = v23;
    long long v24 = v127;
    *(_OWORD *)(v23 + 16) = v126;
    *(_OWORD *)(v23 + 32) = v24;
    *(void *)(v23 + 48) = v128;
    uint64_t v25 = sub_1C131B79C(v14);
    swift_setDeallocating();
    sub_1C01004A4(0);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    return v25;
  }
  return result;
}

void sub_1C0181BEC(uint64_t a1)
{
}

uint64_t sub_1C0181C20()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C0181C68(void *a1, unsigned __int8 a2)
{
  if (a2 <= 0xFDu) {
    sub_1BFF43600(a1, a2);
  }
}

uint64_t sub_1C0181C7C(uint64_t a1, uint64_t a2)
{
  sub_1C0181CE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C0181CE0()
{
  if (!qword_1EB882CD0)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB882CD0);
    }
  }
}

uint64_t sub_1C0181D3C(void (*a1)(uint64_t *__return_ptr, unint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1BFF65E58(0, v5, 0);
    uint64_t v6 = v19;
    uint64_t v9 = (unint64_t *)(a3 + 32);
    while (1)
    {
      unint64_t v11 = *v9++;
      unint64_t v10 = v11;
      unint64_t v17 = v11;
      sub_1BFF65DE8(v11);
      a1(&v18, &v17, &v16);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_1BFF65E20(v10);
      uint64_t v12 = v18;
      uint64_t v19 = v6;
      unint64_t v14 = *(void *)(v6 + 16);
      unint64_t v13 = *(void *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BFF65E58(v13 > 1, v14 + 1, 1);
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v14 + 1;
      *(void *)(v6 + 8 * v14 + 32) = v12;
      if (!--v5) {
        return v6;
      }
    }
    sub_1BFF65E20(v10);
    swift_release();
  }
  return v6;
}

uint64_t sub_1C0181E68(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for FormatSection();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C05F6398(0, v10, 0);
    uint64_t v11 = v22;
    for (uint64_t i = (uint64_t *)(a3 + 48); ; i += 3)
    {
      uint64_t v13 = *(i - 1);
      uint64_t v14 = *i;
      v21[0] = *(i - 2);
      v21[1] = v13;
      v21[2] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v21);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v11;
      unint64_t v16 = *(void *)(v11 + 16);
      unint64_t v15 = *(void *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1C05F6398(v15 > 1, v16 + 1, 1);
        uint64_t v11 = v22;
      }
      *(void *)(v11 + 16) = v16 + 1;
      sub_1C0188148((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, (uint64_t (*)(void))type metadata accessor for FormatSection);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1C0182048(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1C01835C8(a1, a2, a3);
}

uint64_t sub_1C0182060(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1C0184DDC(a1, a2, a3);
}

uint64_t sub_1C0182078(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C01837B0(a1, a2, a3, a4, type metadata accessor for FormatService.ThemePackage);
}

uint64_t sub_1C01820A4(void (*a1)(void *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v6 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1C05F663C(0, v10, 0);
    uint64_t v11 = v24;
    uint64_t v12 = (uint64_t *)(a3 + 56);
    while (1)
    {
      uint64_t v13 = *(v12 - 2);
      uint64_t v15 = *(v12 - 1);
      uint64_t v14 = *v12;
      v23[0] = *(v12 - 3);
      v23[1] = v13;
      v23[2] = v15;
      v23[3] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v23, &v22);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v11;
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C05F663C(v16 > 1, v17 + 1, 1);
        uint64_t v11 = v24;
      }
      v12 += 4;
      *(void *)(v11 + 16) = v17 + 1;
      sub_1C0188148((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v17, type metadata accessor for FormatDerivedDataResultOptionReference);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1C0182288(void (*a1)(uint64_t *__return_ptr, void *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_1BFFB3A2C(0, v5, 0);
    uint64_t result = v33;
    uint64_t v8 = (void *)(a3 + 64);
    while (1)
    {
      uint64_t v9 = result;
      uint64_t v10 = *(v8 - 3);
      uint64_t v11 = *(v8 - 2);
      __int16 v12 = *((_WORD *)v8 - 4);
      uint64_t v13 = *v8;
      v25[0] = *(v8 - 4);
      v25[1] = v10;
      v25[2] = v11;
      __int16 v26 = v12;
      uint64_t v27 = v13;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      a1(&v28, v25, &v24);
      if (v4) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v14 = v28;
      long long v15 = v29;
      char v16 = v30;
      char v17 = v31;
      uint64_t v18 = v32;
      uint64_t result = v9;
      uint64_t v33 = v9;
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v20 = *(void *)(result + 24);
      if (v19 >= v20 >> 1)
      {
        long long v22 = v29;
        sub_1BFFB3A2C(v20 > 1, v19 + 1, 1);
        long long v15 = v22;
        uint64_t result = v33;
      }
      *(void *)(result + 16) = v19 + 1;
      uint64_t v21 = result + 40 * v19;
      *(void *)(v21 + 32) = v14;
      *(_OWORD *)(v21 + 40) = v15;
      *(unsigned char *)(v21 + 56) = v16;
      *(unsigned char *)(v21 + 57) = v17;
      *(void *)(v21 + 64) = v18;
      v8 += 5;
      --v5;
      uint64_t v4 = 0;
      if (!v5) {
        return result;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0182454(void (*a1)(uint64_t *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1BFF9E910(0, v5, 0);
    uint64_t v6 = v18;
    uint64_t v9 = (uint64_t *)(a3 + 32);
    while (1)
    {
      uint64_t v10 = *v9++;
      uint64_t v16 = v10;
      swift_retain();
      a1(&v17, &v16, &v15);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_release();
      uint64_t v11 = v17;
      uint64_t v18 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BFF9E910(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v18;
      }
      *(void *)(v6 + 16) = v13 + 1;
      *(void *)(v6 + 8 * v13 + 32) = v11;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_release();
  }
  return v6;
}

void *sub_1C0182584(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v17)(void *__return_ptr, uint64_t *);
  uint64_t v19;
  void v20[2];
  uint64_t v21;

  uint64_t v17 = (void *(*)(void *__return_ptr, uint64_t *))result;
  uint64_t v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = v4;
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v5) {
    return (void *)v7;
  }
  uint64_t v21 = MEMORY[0x1E4FBC860];
  uint64_t result = (void *)sub_1BFF661B8(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v21;
    uint64_t v9 = a3;
    if (a4 <= a3) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a4;
    }
    uint64_t v16 = v10;
    while (a4 != v9)
    {
      unint64_t v19 = v9;
      uint64_t result = v17(v20, &v19);
      if (v6)
      {
        swift_release();
        return (void *)v7;
      }
      uint64_t v6 = 0;
      uint64_t v11 = v20[0];
      uint64_t v12 = v20[1];
      uint64_t v21 = v7;
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        uint64_t result = (void *)sub_1BFF661B8(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v21;
      }
      *(void *)(v7 + 16) = v14 + 1;
      uint64_t v15 = v7 + 16 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
      if (a4 < a3) {
        goto LABEL_19;
      }
      if (v16 == v9) {
        goto LABEL_20;
      }
      if (a4 == ++v9) {
        return (void *)v7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1C01826DC(void (*a1)(long long *__return_ptr, void *, uint64_t *), uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1BFCDA0E0(0, v3, 0);
    uint64_t v4 = v29;
    uint64_t v6 = (unsigned __int8 *)(a3 + 64);
    while (1)
    {
      uint64_t v7 = *((void *)v6 - 4);
      uint64_t v8 = *((void *)v6 - 3);
      uint64_t v10 = *((void *)v6 - 2);
      uint64_t v9 = *((void *)v6 - 1);
      unsigned __int8 v11 = *v6;
      v24[0] = v7;
      v24[1] = v8;
      v24[2] = v10;
      v24[3] = v9;
      unsigned __int8 v25 = v11;
      sub_1BFCD9FD8(v7, v8, v10, v9, v11);
      a1(&v26, v24, &v23);
      if (v22) {
        break;
      }
      uint64_t v22 = 0;
      sub_1BFCDA05C(v7, v8, v10, v9, v11);
      long long v12 = v26;
      long long v13 = v27;
      char v14 = v28;
      uint64_t v29 = v4;
      unint64_t v16 = *(void *)(v4 + 16);
      unint64_t v15 = *(void *)(v4 + 24);
      if (v16 >= v15 >> 1)
      {
        long long v19 = v27;
        long long v20 = v26;
        sub_1BFCDA0E0(v15 > 1, v16 + 1, 1);
        long long v13 = v19;
        long long v12 = v20;
        uint64_t v4 = v29;
      }
      v6 += 40;
      *(void *)(v4 + 16) = v16 + 1;
      uint64_t v17 = v4 + 40 * v16;
      *(_OWORD *)(v17 + 32) = v12;
      *(_OWORD *)(v17 + 48) = v13;
      *(unsigned char *)(v17 + 64) = v14;
      if (!--v3) {
        return v4;
      }
    }
    sub_1BFCDA05C(v7, v8, v10, v9, v11);
    swift_release();
  }
  return v4;
}

uint64_t sub_1C0182860(void (*a1)(void *__return_ptr, unsigned char *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1C05F670C(0, v5, 0);
    uint64_t v6 = v19;
    uint64_t v9 = a3 + 32;
    for (int64_t i = v5 - 1; ; --i)
    {
      sub_1C00F5BA4(v9, (uint64_t)v18);
      sub_1C00F5BA4((uint64_t)v18, (uint64_t)v16);
      sub_1C00F5E3C((uint64_t)v18, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      a1(v17, v16, &v15);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_1C00F5E3C((uint64_t)v18, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      sub_1C00F5BA4((uint64_t)v17, (uint64_t)v14);
      uint64_t v19 = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v11 = *(void *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1C05F670C(v11 > 1, v12 + 1, 1);
        uint64_t v6 = v19;
      }
      *(void *)(v6 + 16) = v12 + 1;
      sub_1C00F5BA4((uint64_t)v14, v6 + 136 * v12 + 32);
      if (!i) {
        return v6;
      }
      v9 += 136;
    }
    sub_1C00F5E3C((uint64_t)v18, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    swift_release();
  }
  return v6;
}

uint64_t sub_1C0182A30(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1C0183CBC(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for FormatOption, (void (*)(BOOL, unint64_t, uint64_t))sub_1C05F66C4, (uint64_t (*)(void))type metadata accessor for FormatOption);
}

uint64_t sub_1C0182A84(void (*a1)(long long *__return_ptr, void *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1C05F6804(0, v5, 0);
    uint64_t v6 = v24;
    uint64_t v9 = (uint64_t *)(a3 + 48);
    while (1)
    {
      uint64_t v11 = *(v9 - 2);
      uint64_t v10 = *(v9 - 1);
      uint64_t v12 = *v9;
      v21[0] = v11;
      v21[1] = v10;
      v21[2] = v12;
      sub_1BFDC11A4(v11);
      sub_1BFEF683C(v10);
      sub_1BFEF683C(v12);
      a1(&v22, v21, &v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_1BFDC11BC(v11);
      sub_1BFEF68C0(v10);
      sub_1BFEF68C0(v12);
      long long v13 = v22;
      uint64_t v14 = v23;
      uint64_t v24 = v6;
      unint64_t v16 = *(void *)(v6 + 16);
      unint64_t v15 = *(void *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        long long v19 = v22;
        sub_1C05F6804(v15 > 1, v16 + 1, 1);
        long long v13 = v19;
        uint64_t v6 = v24;
      }
      v9 += 3;
      *(void *)(v6 + 16) = v16 + 1;
      uint64_t v17 = v6 + 24 * v16;
      *(_OWORD *)(v17 + 32) = v13;
      *(void *)(v17 + 48) = v14;
      if (!--v5) {
        return v6;
      }
    }
    sub_1BFDC11BC(v11);
    sub_1BFEF68C0(v10);
    sub_1BFEF68C0(v12);
    swift_release();
  }
  return v6;
}

uint64_t sub_1C0182C00(void (*a1)(uint64_t *__return_ptr, uint64_t *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C05F6824(0, v5, 0);
    uint64_t v6 = v18;
    uint64_t v9 = (uint64_t *)(a3 + 32);
    while (1)
    {
      uint64_t v10 = *v9++;
      uint64_t v16 = v10;
      swift_retain();
      a1(&v17, &v16, &v15);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_release();
      uint64_t v11 = v17;
      uint64_t v18 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1C05F6824(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v18;
      }
      *(void *)(v6 + 16) = v13 + 1;
      *(void *)(v6 + 8 * v13 + 32) = v11;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_release();
  }
  return v6;
}

uint64_t sub_1C0182D30(void (*a1)(long long *__return_ptr, _OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1BFDBB668(0, v5, 0);
    uint64_t v6 = v31;
    for (int64_t i = (_OWORD *)(a3 + 32); ; i += 9)
    {
      --v5;
      long long v10 = i[5];
      long long v11 = i[7];
      long long v28 = i[6];
      long long v29 = v11;
      long long v12 = i[7];
      long long v30 = i[8];
      long long v13 = i[1];
      long long v14 = i[3];
      long long v24 = i[2];
      long long v25 = v14;
      long long v15 = i[3];
      long long v16 = i[5];
      long long v26 = i[4];
      long long v27 = v16;
      long long v17 = i[1];
      v23[0] = *i;
      v23[1] = v17;
      v21[6] = v28;
      v21[7] = v12;
      v21[8] = i[8];
      v21[2] = v24;
      void v21[3] = v15;
      v21[4] = v26;
      v21[5] = v10;
      v21[0] = v23[0];
      v21[1] = v13;
      sub_1C0187D08((uint64_t)v23);
      a1(v22, v21);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_1C0187DF4((uint64_t)v23);
      uint64_t v31 = v6;
      unint64_t v19 = *(void *)(v6 + 16);
      unint64_t v18 = *(void *)(v6 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BFDBB668(v18 > 1, v19 + 1, 1);
        uint64_t v6 = v31;
      }
      *(void *)(v6 + 16) = v19 + 1;
      sub_1BFC773DC(v22, v6 + 40 * v19 + 32);
      if (!v5) {
        return v6;
      }
    }
    sub_1C0187DF4((uint64_t)v23);
    swift_release();
  }
  return v6;
}

uint64_t sub_1C0182EAC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C01844D8(a1, a2, a3, a4, type metadata accessor for HeadlineViewLayout.Context, (void (*)(BOOL, unint64_t, uint64_t))sub_1C0032944, type metadata accessor for FeedHeadline, type metadata accessor for HeadlineViewLayout.Context);
}

uint64_t sub_1C0182F14(void (*a1)(long long *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    if (!v6) {
      return v7;
    }
    uint64_t v21 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F69F4(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v9 = 0;
    uint64_t v7 = v21;
    while (v6 != v9)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = MEMORY[0x1C18C7CB0](v9, a3);
      }
      else
      {
        uint64_t v10 = *(void *)(a3 + 8 * v9 + 32);
        swift_unknownObjectRetain();
      }
      uint64_t v18 = v10;
      a1(&v19, &v18);
      if (v4)
      {
        swift_release();
        swift_unknownObjectRelease();
        return v7;
      }
      uint64_t v4 = 0;
      swift_unknownObjectRelease();
      long long v11 = v19;
      uint64_t v12 = v20;
      uint64_t v21 = v7;
      unint64_t v14 = *(void *)(v7 + 16);
      unint64_t v13 = *(void *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        long long v16 = v19;
        sub_1C05F69F4(v13 > 1, v14 + 1, 1);
        long long v11 = v16;
        uint64_t v7 = v21;
      }
      ++v9;
      *(void *)(v7 + 16) = v14 + 1;
      uint64_t v15 = v7 + 24 * v14;
      *(_OWORD *)(v15 + 32) = v11;
      *(void *)(v15 + 48) = v12;
      if (v6 == v9) {
        return v7;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C01830C4(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v6 = (uint64_t *)(a3 + 56);
    while (1)
    {
      uint64_t v17 = v3;
      uint64_t v7 = *(v6 - 2);
      uint64_t v8 = *(v6 - 1);
      uint64_t v9 = *v6;
      uint64_t v10 = v6[1];
      uint64_t v11 = v6[2];
      uint64_t v12 = v6[3];
      uint64_t v13 = v6[4];
      uint64_t v14 = v6[5];
      uint64_t v15 = v6[6];
      v19[0] = *(v6 - 3);
      v19[1] = v7;
      v19[2] = v8;
      v19[3] = v9;
      void v19[4] = v10;
      v19[5] = v11;
      v19[6] = v12;
      v19[7] = v13;
      v19[8] = v14;
      v19[9] = v15;
      sub_1BFEE0A78();
      a1(&v20, v19);
      if (v18) {
        break;
      }
      uint64_t v18 = 0;
      v6 += 10;
      sub_1C0033494();
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      uint64_t v3 = v17 - 1;
      if (v17 == 1) {
        return v21;
      }
    }
    sub_1C0033494();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0183244(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1BFEC4DD0(0, v4, 0);
    uint64_t result = v35;
    uint64_t v7 = (uint64_t *)(a3 + 48);
    while (1)
    {
      int64_t v26 = v4;
      uint64_t v27 = result;
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      uint64_t v10 = v7[1];
      uint64_t v11 = v7[2];
      uint64_t v12 = v7[3];
      uint64_t v13 = v7[4];
      uint64_t v14 = v7[5];
      v29[0] = *(v7 - 2);
      v29[1] = v8;
      v29[2] = v9;
      v29[3] = v10;
      v29[4] = v11;
      v29[5] = v12;
      v29[6] = v13;
      v29[7] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v30, v29);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v30;
      long long v16 = v31;
      long long v17 = v32;
      long long v18 = v33;
      uint64_t v19 = v34;
      uint64_t result = v27;
      uint64_t v35 = v27;
      unint64_t v21 = *(void *)(v27 + 16);
      unint64_t v20 = *(void *)(v27 + 24);
      if (v21 >= v20 >> 1)
      {
        long long v28 = v31;
        long long v23 = v33;
        long long v24 = v32;
        sub_1BFEC4DD0(v20 > 1, v21 + 1, 1);
        long long v18 = v23;
        long long v17 = v24;
        long long v16 = v28;
        uint64_t result = v35;
      }
      *(void *)(result + 16) = v21 + 1;
      uint64_t v22 = result + (v21 << 6);
      *(void *)(v22 + 32) = v15;
      v7 += 8;
      *(_OWORD *)(v22 + 40) = v16;
      *(_OWORD *)(v22 + 56) = v17;
      *(_OWORD *)(v22 + 72) = v18;
      *(void *)(v22 + 88) = v19;
      uint64_t v3 = 0;
      int64_t v4 = v26 - 1;
      if (v26 == 1) {
        return result;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0183444(void (*a1)(void *__return_ptr, _OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1C05F6BB8(0, v5, 0);
    uint64_t v6 = v31;
    for (int64_t i = (_OWORD *)(a3 + 32); ; i += 9)
    {
      --v5;
      long long v10 = i[5];
      long long v11 = i[7];
      long long v29 = i[6];
      v30[0] = v11;
      *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)((char *)i + 121);
      long long v12 = i[1];
      long long v13 = i[3];
      long long v25 = i[2];
      long long v26 = v13;
      long long v14 = i[3];
      long long v15 = i[5];
      long long v27 = i[4];
      long long v28 = v15;
      long long v16 = i[1];
      v24[0] = *i;
      v24[1] = v16;
      long long v17 = i[7];
      v21[6] = v29;
      v22[0] = v17;
      *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)i + 121);
      v21[2] = v25;
      void v21[3] = v14;
      v21[4] = v27;
      v21[5] = v10;
      v21[0] = v24[0];
      v21[1] = v12;
      sub_1C0187FB0((uint64_t)v24);
      a1(__src, v21);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_1C01880A4((uint64_t)v24);
      uint64_t v31 = v6;
      unint64_t v19 = *(void *)(v6 + 16);
      unint64_t v18 = *(void *)(v6 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1C05F6BB8(v18 > 1, v19 + 1, 1);
        uint64_t v6 = v31;
      }
      *(void *)(v6 + 16) = v19 + 1;
      memcpy((void *)(v6 + 392 * v19 + 32), __src, 0x188uLL);
      if (!v5) {
        return v6;
      }
    }
    sub_1C01880A4((uint64_t)v24);
    swift_release();
  }
  return v6;
}

uint64_t sub_1C01835C8(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v18 = a1;
  uint64_t v19 = a2;
  sub_1BFFE23E8(0, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v17 - v8;
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v10, 0);
    uint64_t v11 = v21;
    long long v12 = (char *)(a3 + 32);
    while (1)
    {
      char v13 = *v12++;
      char v20 = v13;
      v18(&v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C05F62D0(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_1C0100634((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1C0183784(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C01837B0(a1, a2, a3, a4, type metadata accessor for FormatContent);
}

uint64_t sub_1C01837B0(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v12 = *(void *)(a5(0) - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v14 = *(void *)(v12 + 72);
    while (1)
    {
      a1(&v15, v13);
      if (v6) {
        break;
      }
      uint64_t v6 = 0;
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      v13 += v14;
      if (!--v8) {
        return v16;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0183900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v16[0] = a1;
  v16[1] = a2;
  uint64_t v6 = type metadata accessor for SportsDataServiceRequest(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1C05F6CF8(0, v10, 0);
    uint64_t v11 = v19;
    for (int64_t i = (uint64_t *)(a3 + 32); ; ++i)
    {
      uint64_t v18 = *i;
      swift_bridgeObjectRetain();
      ((void (*)(uint64_t *, uint64_t *))v16[0])(&v18, &v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v19 = v11;
      unint64_t v14 = *(void *)(v11 + 16);
      unint64_t v13 = *(void *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1C05F6CF8(v13 > 1, v14 + 1, 1);
        uint64_t v11 = v19;
      }
      *(void *)(v11 + 16) = v14 + 1;
      sub_1C0188148((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v14, type metadata accessor for SportsDataServiceRequest);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1C0183AC4(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v6 = type metadata accessor for FormatJsonKeyValue();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C05F68BC(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = (char *)(a3 + 32);
    while (1)
    {
      char v13 = *v12++;
      char v20 = v13;
      v18(&v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C05F68BC(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_1C0188148((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, (uint64_t (*)(void))type metadata accessor for FormatJsonKeyValue);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1C0183C68(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1C0183CBC(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet, (void (*)(BOOL, unint64_t, uint64_t))sub_1C05F7008, (uint64_t (*)(void))type metadata accessor for FormatSlotDefinitionItemSet);
}

uint64_t sub_1C0183CBC(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(BOOL, unint64_t, uint64_t), uint64_t (*a6)(void))
{
  long long v24 = a6;
  long long v25 = a1;
  uint64_t v8 = v6;
  uint64_t v26 = a2;
  uint64_t v10 = a4(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = MEMORY[0x1F4188790](v10 - 8);
  unint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v22 = a5;
    ((void (*)(void, uint64_t, void, __n128))a5)(0, v15, 0, v12);
    uint64_t v16 = v28;
    unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v17 = a3 + v23;
    uint64_t v18 = *(void *)(v11 + 72);
    while (1)
    {
      v25(v17, &v27);
      if (v8) {
        break;
      }
      uint64_t v8 = 0;
      uint64_t v28 = v16;
      unint64_t v20 = *(void *)(v16 + 16);
      unint64_t v19 = *(void *)(v16 + 24);
      if (v20 >= v19 >> 1)
      {
        v22(v19 > 1, v20 + 1, 1);
        uint64_t v16 = v28;
      }
      *(void *)(v16 + 16) = v20 + 1;
      sub_1C0188148((uint64_t)v14, v16 + v23 + v20 * v18, v24);
      v17 += v18;
      if (!--v15) {
        return v16;
      }
    }
    swift_release();
  }
  return v16;
}

uint64_t sub_1C0183E6C(void (*a1)(void *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v19 = sub_1C1517C6C();
  uint64_t v6 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    unint64_t v20 = v8;
    sub_1BFFC25F4(0, v9, 0);
    uint64_t v10 = v25;
    uint64_t v18 = v6 + 32;
    uint64_t v11 = (uint64_t *)(a3 + 56);
    while (1)
    {
      uint64_t v12 = *(v11 - 2);
      uint64_t v13 = *(v11 - 1);
      uint64_t v14 = *v11;
      v24[0] = *(v11 - 3);
      v24[1] = v12;
      _OWORD v24[2] = v13;
      v24[3] = v14;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v21(v24, &v23);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v25 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BFFC25F4(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v25;
      }
      v11 += 4;
      *(void *)(v10 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, v20, v19);
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_1C0184088(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v17[1] = a2;
  sub_1BFFE23E8(0, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBB718]);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v17 - v9;
  int64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    uint64_t v13 = sub_1C05F62D0(0, v11, 0);
    uint64_t v12 = v18;
    while (1)
    {
      a1(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v18 = v12;
      unint64_t v15 = *(void *)(v12 + 16);
      unint64_t v14 = *(void *)(v12 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C05F62D0(v14 > 1, v15 + 1, 1);
        uint64_t v12 = v18;
      }
      *(void *)(v12 + 16) = v15 + 1;
      uint64_t v13 = sub_1C0100634((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v15);
      if (!--v11) {
        return v12;
      }
    }
    swift_release();
  }
  return v12;
}

uint64_t sub_1C0184238(void (*a1)(uint64_t, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for FormatDerivedDataBinderResult();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C05F71F8(0, v10, 0);
    uint64_t v11 = v22;
    sub_1C0187CA0(0, (unint64_t *)&qword_1EB874200, (uint64_t (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = a3 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v18 = *(void *)(v13 + 72);
    while (1)
    {
      v19(v14, &v21);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v22 = v11;
      unint64_t v16 = *(void *)(v11 + 16);
      unint64_t v15 = *(void *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1C05F71F8(v15 > 1, v16 + 1, 1);
        uint64_t v11 = v22;
      }
      *(void *)(v11 + 16) = v16 + 1;
      sub_1C0188148((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataBinderResult);
      v14 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1C0184470(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C01844D8(a1, a2, a3, a4, type metadata accessor for WebEmbedDataVisualizationDataRequest, (void (*)(BOOL, unint64_t, uint64_t))sub_1C05F7694, MEMORY[0x1E4F276F0], type metadata accessor for WebEmbedDataVisualizationDataRequest);
}

uint64_t sub_1C01844D8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(BOOL, unint64_t, uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  uint64_t v28 = a8;
  long long v29 = a1;
  uint64_t v11 = v8;
  uint64_t v30 = a2;
  uint64_t v13 = a5(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v17 = (char *)&v25 - v16;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (v18)
  {
    uint64_t v31 = MEMORY[0x1E4FBC860];
    uint64_t v26 = a6;
    ((void (*)(void, uint64_t, void, __n128))a6)(0, v18, 0, v15);
    uint64_t v19 = v31;
    uint64_t v20 = *(void *)(a7(0) - 8);
    uint64_t v21 = a3 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    uint64_t v27 = *(void *)(v20 + 72);
    while (1)
    {
      v29(v21);
      if (v11) {
        break;
      }
      uint64_t v11 = 0;
      uint64_t v31 = v19;
      unint64_t v23 = *(void *)(v19 + 16);
      unint64_t v22 = *(void *)(v19 + 24);
      if (v23 >= v22 >> 1)
      {
        v26(v22 > 1, v23 + 1, 1);
        uint64_t v19 = v31;
      }
      *(void *)(v19 + 16) = v23 + 1;
      sub_1C0188148((uint64_t)v17, v19+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v23, v28);
      v21 += v27;
      if (!--v18) {
        return v19;
      }
    }
    swift_release();
  }
  return v19;
}

uint64_t sub_1C01846E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v16[0] = a1;
  v16[1] = a2;
  uint64_t v6 = type metadata accessor for DebugInspectViewItem();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C05F7788(0, v10, 0);
    uint64_t v11 = v17;
    for (uint64_t i = a3 + 32; ; i += 40)
    {
      ((void (*)(uint64_t))v16[0])(i);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v17 = v11;
      unint64_t v14 = *(void *)(v11 + 16);
      unint64_t v13 = *(void *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1C05F7788(v13 > 1, v14 + 1, 1);
        uint64_t v11 = v17;
      }
      *(void *)(v11 + 16) = v14 + 1;
      sub_1C0188148((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v14, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1C0184888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v18[0] = a1;
  v18[1] = a2;
  uint64_t v6 = type metadata accessor for DebugInspectViewItem();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C05F7788(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = (char *)(a3 + 40);
    while (1)
    {
      uint64_t v13 = *((void *)v12 - 1);
      char v14 = *v12;
      uint64_t v19 = v13;
      char v20 = v14;
      sub_1C0186BB8(v13, v14);
      ((void (*)(uint64_t *))v18[0])(&v19);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_1C0186BC4(v13, v14);
      uint64_t v21 = v11;
      unint64_t v16 = *(void *)(v11 + 16);
      unint64_t v15 = *(void *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1C05F7788(v15 > 1, v16 + 1, 1);
        uint64_t v11 = v21;
      }
      v12 += 16;
      *(void *)(v11 + 16) = v16 + 1;
      sub_1C0188148((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, (uint64_t (*)(void))type metadata accessor for DebugInspectViewItem);
      if (!--v10) {
        return v11;
      }
    }
    sub_1C0186BC4(v13, v14);
    swift_release();
  }
  return v11;
}

uint64_t sub_1C0184A5C(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for PluginLayout.Context(0);
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    if (!v9) {
      return v10;
    }
    uint64_t v22 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F78C0(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    uint64_t v12 = 0;
    uint64_t v10 = v22;
    unint64_t v17 = a3 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v17)
      {
        uint64_t v13 = MEMORY[0x1C18C7CB0](v12, a3);
      }
      else
      {
        uint64_t v13 = *(void *)(a3 + 8 * v12 + 32);
        swift_retain();
      }
      uint64_t v21 = v13;
      v19(&v21);
      if (v4)
      {
        swift_release();
        swift_release();
        return v10;
      }
      uint64_t v4 = 0;
      swift_release();
      uint64_t v22 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C05F78C0(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v22;
      }
      ++v12;
      *(void *)(v10 + 16) = v15 + 1;
      sub_1C0188148((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v15, type metadata accessor for PluginLayout.Context);
      if (v9 == v12) {
        return v10;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0184C94(void (*a1)(_OWORD *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C05F7908(0, v5, 0);
    uint64_t v6 = v25;
    for (uint64_t i = a3 + 32; ; i += 152)
    {
      a1(v23, i);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v25 = v6;
      unint64_t v11 = *(void *)(v6 + 16);
      unint64_t v10 = *(void *)(v6 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C05F7908(v10 > 1, v11 + 1, 1);
        uint64_t v6 = v25;
      }
      *(void *)(v6 + 16) = v11 + 1;
      uint64_t v12 = v6 + 200 * v11;
      *(_OWORD *)(v12 + 32) = v23[0];
      long long v13 = v23[1];
      long long v14 = v23[2];
      long long v15 = v23[4];
      *(_OWORD *)(v12 + 80) = v23[3];
      *(_OWORD *)(v12 + 96) = v15;
      *(_OWORD *)(v12 + 48) = v13;
      *(_OWORD *)(v12 + 64) = v14;
      long long v16 = v23[5];
      long long v17 = v23[6];
      long long v18 = v23[8];
      *(_OWORD *)(v12 + 144) = v23[7];
      *(_OWORD *)(v12 + 160) = v18;
      *(_OWORD *)(v12 + 112) = v16;
      *(_OWORD *)(v12 + 128) = v17;
      long long v19 = v23[9];
      long long v20 = v23[10];
      long long v21 = v23[11];
      *(void *)(v12 + 224) = v24;
      *(_OWORD *)(v12 + 192) = v20;
      *(_OWORD *)(v12 + 208) = v21;
      *(_OWORD *)(v12 + 176) = v19;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_1C0184DDC(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v17 = a1;
  uint64_t v18 = a2;
  sub_1BFFE23E8(0, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v16 - v8;
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v10, 0);
    uint64_t v11 = v20;
    for (uint64_t i = (char *)(a3 + 32); ; ++i)
    {
      char v19 = *i;
      v17(&v19);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v20 = v11;
      unint64_t v14 = *(void *)(v11 + 16);
      unint64_t v13 = *(void *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1C05F62D0(v13 > 1, v14 + 1, 1);
        uint64_t v11 = v20;
      }
      *(void *)(v11 + 16) = v14 + 1;
      sub_1C0100634((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v14);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1C0184F9C(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v5 = type metadata accessor for FormatContentSubgroup();
  uint64_t v21 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v24 = (uint64_t)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v27 = v3;
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1C05F64E8(0, v7, 0);
    uint64_t v8 = v29;
    uint64_t v9 = (uint64_t *)(a3 + 48);
    while (1)
    {
      int64_t v25 = v7;
      uint64_t v26 = v8;
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      uint64_t v8 = v9[1];
      uint64_t v12 = v9[2];
      uint64_t v13 = v9[3];
      uint64_t v14 = v9[4];
      uint64_t v15 = v9[5];
      v28[0] = *(v9 - 2);
      v28[1] = v10;
      v28[2] = v11;
      v28[3] = v8;
      v28[4] = v12;
      v28[5] = v13;
      v28[6] = v14;
      v28[7] = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = v27;
      v22(v28);
      if (v16) {
        break;
      }
      uint64_t v27 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v26;
      uint64_t v29 = v26;
      unint64_t v18 = *(void *)(v26 + 16);
      unint64_t v17 = *(void *)(v26 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1C05F64E8(v17 > 1, v18 + 1, 1);
        uint64_t v8 = v29;
      }
      v9 += 8;
      *(void *)(v8 + 16) = v18 + 1;
      sub_1C0188148(v24, v8+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v18, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
      int64_t v7 = v25 - 1;
      if (v25 == 1) {
        return v8;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1C018522C(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v27 = MEMORY[0x1E4FBC860];
    sub_1C05F83DC(0, v4, 0);
    uint64_t result = v27;
    int64_t v7 = (uint64_t *)(a3 + 48);
    while (1)
    {
      int64_t v21 = v4;
      uint64_t v22 = result;
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      uint64_t v10 = v7[1];
      uint64_t v11 = v7[2];
      uint64_t v12 = v7[3];
      uint64_t v13 = v7[4];
      uint64_t v14 = v7[5];
      v24[0] = *(v7 - 2);
      v24[1] = v8;
      _OWORD v24[2] = v9;
      v24[3] = v10;
      void v24[4] = v11;
      v24[5] = v12;
      v24[6] = v13;
      v24[7] = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v25, v24);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v25;
      long long v16 = v26;
      uint64_t result = v22;
      uint64_t v27 = v22;
      unint64_t v18 = *(void *)(v22 + 16);
      unint64_t v17 = *(void *)(v22 + 24);
      if (v18 >= v17 >> 1)
      {
        long long v23 = v26;
        sub_1C05F83DC(v17 > 1, v18 + 1, 1);
        long long v16 = v23;
        uint64_t result = v27;
      }
      v7 += 8;
      *(void *)(result + 16) = v18 + 1;
      uint64_t v19 = result + 24 * v18;
      *(void *)(v19 + 32) = v15;
      *(_OWORD *)(v19 + 40) = v16;
      uint64_t v3 = 0;
      int64_t v4 = v21 - 1;
      if (v21 == 1) {
        return result;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0185414(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  sub_1BFFE23E8(0, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v17 - v8;
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = *(void *)(type metadata accessor for FormatDebuggerCallStackFrame(0) - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C05F62D0(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_1C0100634((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15);
      v13 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1C0185628(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    uint64_t v8 = (unsigned char *)(a3 + 56);
    while (1)
    {
      uint64_t v9 = *((void *)v8 - 2);
      uint64_t v10 = *((void *)v8 - 1);
      char v11 = *v8;
      v12[0] = *((void *)v8 - 3);
      v12[1] = v9;
      v12[2] = v10;
      char v13 = v11;
      swift_bridgeObjectRetain();
      a1(&v14, v12);
      swift_bridgeObjectRelease();
      if (v3) {
        break;
      }
      v8 += 32;
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      if (!--v5) {
        return v15;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C018573C(void (*a1)(void *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1C05F6350(0, v3, 0);
    uint64_t v4 = v24;
    uint64_t v6 = (uint64_t *)(a3 + 48);
    while (1)
    {
      int64_t v19 = v3;
      uint64_t v20 = v4;
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      uint64_t v9 = v6[1];
      uint64_t v10 = v6[2];
      uint64_t v11 = v6[3];
      uint64_t v12 = v6[4];
      uint64_t v13 = v6[5];
      v22[0] = *(v6 - 2);
      v22[1] = v7;
      _OWORD v22[2] = v8;
      v22[3] = v9;
      v22[4] = v10;
      uint64_t v22[5] = v11;
      v22[6] = v12;
      v22[7] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v4 = a2;
      a1(v23, v22);
      if (v21) {
        break;
      }
      uint64_t v21 = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v20;
      uint64_t v24 = v20;
      unint64_t v15 = *(void *)(v20 + 16);
      unint64_t v14 = *(void *)(v20 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C05F6350(v14 > 1, v15 + 1, 1);
        uint64_t v4 = v24;
      }
      v6 += 8;
      *(void *)(v4 + 16) = v15 + 1;
      sub_1C0186BD0((uint64_t)v23, v4 + 40 * v15 + 32);
      int64_t v3 = v19 - 1;
      if (v19 == 1) {
        return v4;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1C0185924(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v19 = a1;
  uint64_t v20 = a2;
  sub_1C0187CA0(0, (unint64_t *)&qword_1EB864270, (uint64_t (*)(void))sub_1C007D02C, (uint64_t)&type metadata for FormatLayoutModel, MEMORY[0x1E4FAC4C8]);
  uint64_t v18 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - v8;
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    sub_1C05F896C(0, v10, 0);
    uint64_t v11 = v22;
    uint64_t v12 = (uint64_t *)(a3 + 32);
    v17[1] = v7 + 32;
    while (1)
    {
      uint64_t v13 = *v12++;
      uint64_t v21 = v13;
      swift_retain();
      v19(&v21);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_release();
      uint64_t v22 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C05F896C(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v22;
      }
      *(void *)(v11 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, v9, v18);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
    swift_release();
  }
  return v11;
}

uint64_t GroupLayoutInventory.resizingProvider.getter()
{
  return swift_retain();
}

unint64_t sub_1C0185B58()
{
  unint64_t result = qword_1EB85F158;
  if (!qword_1EB85F158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F158);
  }
  return result;
}

unint64_t sub_1C0185BAC()
{
  unint64_t result = qword_1EA1974F8;
  if (!qword_1EA1974F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1974F8);
  }
  return result;
}

unint64_t sub_1C0185C00()
{
  unint64_t result = qword_1EB86BEA0;
  if (!qword_1EB86BEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BEA0);
  }
  return result;
}

unint64_t sub_1C0185C54()
{
  unint64_t result = qword_1EB85E700;
  if (!qword_1EB85E700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E700);
  }
  return result;
}

unint64_t sub_1C0185CA8()
{
  unint64_t result = qword_1EB86CC50;
  if (!qword_1EB86CC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CC50);
  }
  return result;
}

unint64_t sub_1C0185CFC()
{
  unint64_t result = qword_1EA197500;
  if (!qword_1EA197500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197500);
  }
  return result;
}

unint64_t sub_1C0185D50()
{
  unint64_t result = qword_1EA197508;
  if (!qword_1EA197508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197508);
  }
  return result;
}

unint64_t sub_1C0185DA4()
{
  unint64_t result = qword_1EB85DE18;
  if (!qword_1EB85DE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DE18);
  }
  return result;
}

unint64_t sub_1C0185DF8()
{
  unint64_t result = qword_1EA197510;
  if (!qword_1EA197510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197510);
  }
  return result;
}

unint64_t sub_1C0185E4C()
{
  unint64_t result = qword_1EA197518;
  if (!qword_1EA197518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197518);
  }
  return result;
}

unint64_t sub_1C0185EA0()
{
  unint64_t result = qword_1EA197520;
  if (!qword_1EA197520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197520);
  }
  return result;
}

unint64_t sub_1C0185EF4()
{
  unint64_t result = qword_1EA197528;
  if (!qword_1EA197528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197528);
  }
  return result;
}

unint64_t sub_1C0185F48()
{
  unint64_t result = qword_1EA197530;
  if (!qword_1EA197530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197530);
  }
  return result;
}

unint64_t sub_1C0185F9C()
{
  unint64_t result = qword_1EA197538;
  if (!qword_1EA197538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197538);
  }
  return result;
}

unint64_t sub_1C0185FF0()
{
  unint64_t result = qword_1EA197540;
  if (!qword_1EA197540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197540);
  }
  return result;
}

unint64_t sub_1C0186044()
{
  unint64_t result = qword_1EA197548;
  if (!qword_1EA197548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197548);
  }
  return result;
}

unint64_t sub_1C0186098()
{
  unint64_t result = qword_1EA197550;
  if (!qword_1EA197550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197550);
  }
  return result;
}

unint64_t sub_1C01860EC()
{
  unint64_t result = qword_1EA197558;
  if (!qword_1EA197558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197558);
  }
  return result;
}

unint64_t sub_1C0186140()
{
  unint64_t result = qword_1EA197560;
  if (!qword_1EA197560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197560);
  }
  return result;
}

unint64_t sub_1C0186194()
{
  unint64_t result = qword_1EA197568;
  if (!qword_1EA197568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197568);
  }
  return result;
}

unint64_t sub_1C01861E8()
{
  unint64_t result = qword_1EA197570;
  if (!qword_1EA197570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197570);
  }
  return result;
}

unint64_t sub_1C018623C()
{
  unint64_t result = qword_1EA197578;
  if (!qword_1EA197578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197578);
  }
  return result;
}

unint64_t sub_1C0186290()
{
  unint64_t result = qword_1EA197580;
  if (!qword_1EA197580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197580);
  }
  return result;
}

unint64_t sub_1C01862E4()
{
  unint64_t result = qword_1EA197588;
  if (!qword_1EA197588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197588);
  }
  return result;
}

unint64_t sub_1C0186338()
{
  unint64_t result = qword_1EA197590;
  if (!qword_1EA197590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197590);
  }
  return result;
}

unint64_t sub_1C018638C()
{
  unint64_t result = qword_1EA197598;
  if (!qword_1EA197598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197598);
  }
  return result;
}

unint64_t sub_1C01863E0()
{
  unint64_t result = qword_1EA1975A0;
  if (!qword_1EA1975A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975A0);
  }
  return result;
}

unint64_t sub_1C0186434()
{
  unint64_t result = qword_1EA1975A8;
  if (!qword_1EA1975A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975A8);
  }
  return result;
}

unint64_t sub_1C0186488()
{
  unint64_t result = qword_1EA1975B0;
  if (!qword_1EA1975B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975B0);
  }
  return result;
}

unint64_t sub_1C01864DC()
{
  unint64_t result = qword_1EA1975B8;
  if (!qword_1EA1975B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975B8);
  }
  return result;
}

unint64_t sub_1C0186530()
{
  unint64_t result = qword_1EA1975C0;
  if (!qword_1EA1975C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975C0);
  }
  return result;
}

unint64_t sub_1C0186584()
{
  unint64_t result = qword_1EA1975C8;
  if (!qword_1EA1975C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975C8);
  }
  return result;
}

unint64_t sub_1C01865D8()
{
  unint64_t result = qword_1EA1975D0;
  if (!qword_1EA1975D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975D0);
  }
  return result;
}

unint64_t sub_1C018662C()
{
  unint64_t result = qword_1EA1975D8;
  if (!qword_1EA1975D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975D8);
  }
  return result;
}

unint64_t sub_1C0186680()
{
  unint64_t result = qword_1EA1975E0;
  if (!qword_1EA1975E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975E0);
  }
  return result;
}

unint64_t sub_1C01866D4()
{
  unint64_t result = qword_1EA1975E8;
  if (!qword_1EA1975E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975E8);
  }
  return result;
}

unint64_t sub_1C0186728()
{
  unint64_t result = qword_1EA1975F0;
  if (!qword_1EA1975F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975F0);
  }
  return result;
}

unint64_t sub_1C018677C()
{
  unint64_t result = qword_1EA1975F8;
  if (!qword_1EA1975F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1975F8);
  }
  return result;
}

unint64_t sub_1C01867D0()
{
  unint64_t result = qword_1EA197600;
  if (!qword_1EA197600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197600);
  }
  return result;
}

unint64_t sub_1C0186824()
{
  unint64_t result = qword_1EA197608;
  if (!qword_1EA197608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197608);
  }
  return result;
}

unint64_t sub_1C0186878()
{
  unint64_t result = qword_1EA197610;
  if (!qword_1EA197610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197610);
  }
  return result;
}

unint64_t sub_1C01868CC()
{
  unint64_t result = qword_1EA197618;
  if (!qword_1EA197618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197618);
  }
  return result;
}

unint64_t sub_1C0186920()
{
  unint64_t result = qword_1EA197620;
  if (!qword_1EA197620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197620);
  }
  return result;
}

unint64_t sub_1C0186974()
{
  unint64_t result = qword_1EA197628;
  if (!qword_1EA197628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197628);
  }
  return result;
}

unint64_t sub_1C01869C8()
{
  unint64_t result = qword_1EA197630;
  if (!qword_1EA197630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197630);
  }
  return result;
}

unint64_t sub_1C0186A1C()
{
  unint64_t result = qword_1EA197638;
  if (!qword_1EA197638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197638);
  }
  return result;
}

unint64_t sub_1C0186A70()
{
  unint64_t result = qword_1EA197640;
  if (!qword_1EA197640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197640);
  }
  return result;
}

uint64_t dispatch thunk of GroupLayoutInventoryType.layouts(column:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of GroupLayoutInventoryType.resizingProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void *assignWithCopy for GroupLayoutInventory(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  return a1;
}

uint64_t assignWithTake for GroupLayoutInventory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t sub_1C0186BB8(uint64_t a1, char a2)
{
  if ((a2 & 0x80) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0186BC4(uint64_t a1, char a2)
{
  if ((a2 & 0x80) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0186BD0(uint64_t a1, uint64_t a2)
{
  sub_1BFEA26F4(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1C0186C60(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C0186C94(a1, a2, a3, (uint64_t (*)(void, __n128))type metadata accessor for DebugFormatLogger, (uint64_t)&off_1F1B94598, sub_1BFFE2DF4);
}

void *sub_1C0186C94(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void, __n128), uint64_t a5, void *a6)
{
  uint64_t v135 = a6;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFFE23E8(0, &qword_1EB8943F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v129 = (uint64_t)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  long long v16 = (char *)&v127 - v15;
  sub_1BFFE23E8(0, &qword_1EB88EEA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, v11);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v139 = (char *)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v138 = (uint64_t)&v127 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v137 = (uint64_t *)((char *)&v127 - v22);
  uint64_t v136 = type metadata accessor for FormatCompilerSlotDefinition(0);
  uint64_t v23 = *(void *)(v136 - 8);
  __n128 v24 = MEMORY[0x1F4188790](v136);
  long long v26 = (char *)&v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155[3] = a4(0, v24);
  v155[4] = a5;
  v155[0] = a2;
  a3[2] = a1;
  sub_1BFC66384((uint64_t)v155, (uint64_t)(a3 + 3));
  uint64_t v27 = a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  uint64_t v154 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
  sub_1BFFE23E8(0, (unint64_t *)&unk_1EB879E90, type metadata accessor for FormatCompilerProperty, MEMORY[0x1E4FBB320]);
  uint64_t v29 = v28;
  unint64_t v30 = sub_1BFFE2028();
  uint64_t v31 = sub_1BFFE2F64(&qword_1EB88A750, (void (*)(uint64_t))type metadata accessor for FormatCompilerProperty);
  swift_retain();
  unint64_t v146 = v30;
  uint64_t v141 = v31;
  uint64_t v32 = sub_1C151E90C();
  uint64_t v128 = a3;
  a3[8] = v32;
  uint64_t v33 = *(void *)(v27 + 8);
  uint64_t v132 = *(void *)(v33 + 16);
  if (!v132)
  {
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v124 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v36 = (void *)MEMORY[0x1E4FBC868];
    char v125 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v38 = (void *)MEMORY[0x1E4FBC868];
LABEL_68:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v155);
    swift_bridgeObjectRelease();
    uint64_t result = v128;
    v128[9] = v38;
    result[10] = v124;
    result[11] = v36;
    result[12] = v125;
    return result;
  }
  uint64_t v140 = v29;
  uint64_t v127 = a1;
  uint64_t v133 = v33 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  swift_bridgeObjectRetain();
  unint64_t v34 = 0;
  uint64_t v145 = 0;
  uint64_t v35 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v36 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v37 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v38 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v134 = v16;
  uint64_t v131 = v23;
  uint64_t v144 = v26;
  uint64_t v130 = v33;
  while (1)
  {
    if (v34 >= *(void *)(v33 + 16)) {
      goto LABEL_77;
    }
    uint64_t v148 = v37;
    uint64_t v150 = v36;
    uint64_t v152 = v35;
    uint64_t v39 = *(void *)(v23 + 72);
    unint64_t v143 = v34;
    sub_1C0187B24(v133 + v39 * v34, (uint64_t)v26);
    uint64_t v154 = (void *)*((void *)v26 + 6);
    uint64_t v153 = sub_1C151E90C();
    uint64_t v40 = (uint64_t)&v26[*(int *)(v136 + 40)];
    uint64_t v41 = v137;
    sub_1C0187B88(v40, (uint64_t)v137, &qword_1EB88EEA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    uint64_t v42 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
    uint64_t v147 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 48);
    if (v147((uint64_t)v41, 1, v42) == 1)
    {
      sub_1C0187C08((uint64_t)v41, &qword_1EB88EEA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      unint64_t v151 = sub_1BFFE2138(MEMORY[0x1E4FBC860]);
    }
    else
    {
      uint64_t v43 = v40;
      uint64_t v44 = (void *)*v41;
      swift_bridgeObjectRetain();
      sub_1BFFE2D7C((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      uint64_t v154 = v44;
      unint64_t v151 = sub_1C151E90C();
      uint64_t v40 = v43;
      swift_bridgeObjectRelease();
    }
    uint64_t v45 = v138;
    long long v46 = v134;
    sub_1C0187B88(v40, v138, &qword_1EB88EEA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    uint64_t v47 = v147;
    uint64_t v48 = v40;
    if (v147(v45, 1, v42) == 1)
    {
      sub_1C0187C08(v45, &qword_1EB88EEA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      uint64_t v49 = (uint64_t)v139;
LABEL_12:
      unint64_t v149 = sub_1BFFE2138(MEMORY[0x1E4FBC860]);
      goto LABEL_14;
    }
    sub_1C0187B88(v45 + *(int *)(v42 + 20), (uint64_t)v46, &qword_1EB8943F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    sub_1BFFE2D7C(v45, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    uint64_t v50 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v46, 1, v50) == 1)
    {
      sub_1C0187C08((uint64_t)v46, &qword_1EB8943F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      uint64_t v49 = (uint64_t)v139;
      uint64_t v47 = v147;
      goto LABEL_12;
    }
    unint64_t v51 = (void *)*v46;
    swift_bridgeObjectRetain();
    sub_1BFFE2D7C((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
    uint64_t v154 = v51;
    unint64_t v149 = sub_1C151E90C();
    swift_bridgeObjectRelease();
    uint64_t v49 = (uint64_t)v139;
    uint64_t v47 = v147;
LABEL_14:
    sub_1C0187B88(v48, v49, &qword_1EB88EEA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    if (v47(v49, 1, v42) == 1)
    {
      sub_1C0187C08(v49, &qword_1EB88EEA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      uint64_t v52 = (uint64_t)v144;
    }
    else
    {
      uint64_t v53 = v129;
      sub_1C0187B88(v49 + *(int *)(v42 + 20), v129, &qword_1EB8943F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      sub_1BFFE2D7C(v49, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      uint64_t v54 = type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary();
      int v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v53, 1, v54);
      uint64_t v52 = (uint64_t)v144;
      if (v55 == 1)
      {
        sub_1C0187C08(v53, &qword_1EB8943F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
      }
      else
      {
        id v56 = *(void **)(v53 + 8);
        swift_bridgeObjectRetain();
        sub_1BFFE2D7C(v53, (uint64_t (*)(void))type metadata accessor for FormatCompilerSlotDefinitionItemSetAuxiliary);
        if (v56)
        {
          uint64_t v154 = v56;
          uint64_t v147 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_1C151E90C();
          unint64_t v57 = swift_bridgeObjectRelease();
          goto LABEL_21;
        }
      }
    }
    unint64_t v57 = sub_1BFFE2138(MEMORY[0x1E4FBC860]);
    uint64_t v147 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v57;
LABEL_21:
    if ((*(void *)(v52 + 64) & 0x8000000000000000) != 0) {
      goto LABEL_78;
    }
    MEMORY[0x1F4188790](v57);
    *(&v127 - 2) = v52;
    uint64_t v58 = v145;
    uint64_t v60 = sub_1C0182584(v135, (uint64_t)(&v127 - 4), 0, v59);
    uint64_t v145 = v58;
    uint64_t v61 = v60[2];
    uint64_t v142 = v60;
    if (v61) {
      break;
    }
LABEL_3:
    unint64_t v34 = v143 + 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v26 = v144;
    sub_1BFFE2D7C((uint64_t)v144, type metadata accessor for FormatCompilerSlotDefinition);
    uint64_t v23 = v131;
    uint64_t v33 = v130;
    uint64_t v35 = v152;
    uint64_t v36 = v150;
    uint64_t v37 = v148;
    if (v34 == v132)
    {
      uint64_t v124 = v152;
      char v125 = v148;
      swift_release();
      goto LABEL_68;
    }
  }
  uint64_t v62 = v60 + 5;
  while (1)
  {
    uint64_t v65 = *(v62 - 1);
    uint64_t v64 = *v62;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v154 = v38;
    unint64_t v68 = sub_1BFEF2D8C(v65, v64);
    uint64_t v69 = v38[2];
    BOOL v70 = (v67 & 1) == 0;
    uint64_t v71 = v69 + v70;
    if (__OFADD__(v69, v70)) {
      break;
    }
    char v72 = v67;
    if (v38[3] >= v71)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v38 = v154;
        if (v67) {
          goto LABEL_33;
        }
      }
      else
      {
        sub_1C106CB54();
        uint64_t v38 = v154;
        if (v72) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      sub_1BFFE2120(v71, isUniquelyReferenced_nonNull_native);
      unint64_t v73 = sub_1BFEF2D8C(v65, v64);
      if ((v72 & 1) != (v74 & 1)) {
        goto LABEL_79;
      }
      unint64_t v68 = v73;
      uint64_t v38 = v154;
      if (v72)
      {
LABEL_33:
        uint64_t v75 = v38[7];
        swift_bridgeObjectRelease();
        *(void *)(v75 + 8 * v68) = v153;
        goto LABEL_37;
      }
    }
    v38[(v68 >> 6) + 8] |= 1 << v68;
    uint64_t v76 = (uint64_t *)(v38[6] + 16 * v68);
    *uint64_t v76 = v65;
    v76[1] = v64;
    *(void *)(v38[7] + 8 * v68) = v153;
    uint64_t v77 = v38[2];
    BOOL v78 = __OFADD__(v77, 1);
    uint64_t v79 = v77 + 1;
    if (v78) {
      goto LABEL_73;
    }
    v38[2] = v79;
    swift_bridgeObjectRetain();
LABEL_37:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v80 = v152;
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v154 = v80;
    unint64_t v83 = sub_1BFEF2D8C(v65, v64);
    uint64_t v84 = v80[2];
    BOOL v85 = (v82 & 1) == 0;
    uint64_t v86 = v84 + v85;
    if (__OFADD__(v84, v85)) {
      goto LABEL_70;
    }
    char v87 = v82;
    if (v80[3] >= v86)
    {
      if ((v81 & 1) == 0) {
        sub_1C106CB54();
      }
    }
    else
    {
      sub_1BFFE2120(v86, v81);
      unint64_t v88 = sub_1BFEF2D8C(v65, v64);
      if ((v87 & 1) != (v89 & 1)) {
        goto LABEL_79;
      }
      unint64_t v83 = v88;
    }
    uint64_t v90 = v154;
    uint64_t v152 = v154;
    if (v87)
    {
      uint64_t v91 = v154[7];
      swift_bridgeObjectRelease();
      *(void *)(v91 + 8 * v83) = v151;
    }
    else
    {
      v154[(v83 >> 6) + 8] |= 1 << v83;
      uint64_t v92 = (uint64_t *)(v90[6] + 16 * v83);
      *uint64_t v92 = v65;
      v92[1] = v64;
      *(void *)(v90[7] + 8 * v83) = v151;
      uint64_t v93 = v90[2];
      BOOL v78 = __OFADD__(v93, 1);
      uint64_t v94 = v93 + 1;
      if (v78) {
        goto LABEL_74;
      }
      v90[2] = v94;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v95 = v150;
    char v96 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v154 = v95;
    unint64_t v98 = sub_1BFEF2D8C(v65, v64);
    uint64_t v99 = v95[2];
    BOOL v100 = (v97 & 1) == 0;
    uint64_t v101 = v99 + v100;
    if (__OFADD__(v99, v100)) {
      goto LABEL_71;
    }
    char v102 = v97;
    if (v95[3] >= v101)
    {
      if ((v96 & 1) == 0) {
        sub_1C106CB54();
      }
    }
    else
    {
      sub_1BFFE2120(v101, v96);
      unint64_t v103 = sub_1BFEF2D8C(v65, v64);
      if ((v102 & 1) != (v104 & 1)) {
        goto LABEL_79;
      }
      unint64_t v98 = v103;
    }
    uint64_t v105 = v154;
    uint64_t v150 = v154;
    if (v102)
    {
      uint64_t v106 = v154[7];
      swift_bridgeObjectRelease();
      *(void *)(v106 + 8 * v98) = v149;
    }
    else
    {
      v154[(v98 >> 6) + 8] |= 1 << v98;
      uint64_t v107 = (uint64_t *)(v105[6] + 16 * v98);
      uint64_t *v107 = v65;
      v107[1] = v64;
      *(void *)(v105[7] + 8 * v98) = v149;
      uint64_t v108 = v105[2];
      BOOL v78 = __OFADD__(v108, 1);
      uint64_t v109 = v108 + 1;
      if (v78) {
        goto LABEL_75;
      }
      v105[2] = v109;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    int v110 = v148;
    char v111 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v154 = v110;
    unint64_t v113 = sub_1BFEF2D8C(v65, v64);
    uint64_t v114 = v110[2];
    BOOL v115 = (v112 & 1) == 0;
    uint64_t v116 = v114 + v115;
    if (__OFADD__(v114, v115)) {
      goto LABEL_72;
    }
    char v117 = v112;
    if (v110[3] >= v116)
    {
      if ((v111 & 1) == 0) {
        sub_1C106CB54();
      }
    }
    else
    {
      sub_1BFFE2120(v116, v111);
      unint64_t v118 = sub_1BFEF2D8C(v65, v64);
      if ((v117 & 1) != (v119 & 1)) {
        goto LABEL_79;
      }
      unint64_t v113 = v118;
    }
    long long v120 = v154;
    uint64_t v148 = v154;
    if (v117)
    {
      uint64_t v63 = v154[7];
      swift_bridgeObjectRelease();
      *(void *)(v63 + 8 * v113) = v147;
    }
    else
    {
      v154[(v113 >> 6) + 8] |= 1 << v113;
      long long v121 = (uint64_t *)(v120[6] + 16 * v113);
      *long long v121 = v65;
      v121[1] = v64;
      *(void *)(v120[7] + 8 * v113) = v147;
      uint64_t v122 = v120[2];
      BOOL v78 = __OFADD__(v122, 1);
      uint64_t v123 = v122 + 1;
      if (v78) {
        goto LABEL_76;
      }
      v120[2] = v123;
      swift_bridgeObjectRetain();
    }
    v62 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v61) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  uint64_t result = (void *)sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0187B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatCompilerSlotDefinition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0187B88(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFFE23E8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C0187C08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFFE23E8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C0187CA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0187D08(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  unint64_t v3 = *(void *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEB9640(v2, v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C0187DE0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0187DF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  unint64_t v3 = *(void *)(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFFD0438(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C0187ED0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0187FB0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void **)(a1 + 104);
  unint64_t v8 = *(void *)(a1 + 128);
  uint64_t v12 = *(void *)(a1 + 120);
  id v9 = *(id *)a1;
  swift_bridgeObjectRetain();
  id v10 = v2;
  sub_1C0188054(v3, v4, v5, v6, v7);
  sub_1BFF7FF04(v12, v8);
  return a1;
}

uint64_t sub_1C0188054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2 != 1)
  {
    id v6 = a5;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C01880A4(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 96);
  uint64_t v7 = *(void **)(a1 + 104);
  unint64_t v8 = *(void *)(a1 + 128);
  uint64_t v10 = *(void *)(a1 + 120);

  swift_bridgeObjectRelease();
  sub_1BFFF2340(v3, v4, v5, v6, v7);
  sub_1BFEEFC20(v10, v8);
  return a1;
}

uint64_t sub_1C0188148(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t DateComparison.description.getter()
{
  uint64_t v1 = sub_1C151631C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DateComparison();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01883B0(v0, (uint64_t)v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = 0x207265746641;
    unint64_t v10 = 0xE600000000000000;
  }
  else
  {
    uint64_t v9 = 0x2065726F666542;
    unint64_t v10 = 0xE700000000000000;
  }
  v13[0] = v9;
  v13[1] = v10;
  sub_1BFC50500();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v11 = v13[0];
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v11;
}

uint64_t type metadata accessor for DateComparison()
{
  uint64_t result = qword_1EA197648;
  if (!qword_1EA197648) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C01883B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DateComparison();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t static DateComparison.olderThan(now:_:)(uint64_t a1)
{
  uint64_t v2 = sub_1C151631C();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1C15161CC();
  type metadata accessor for DateComparison();
  return swift_storeEnumTagMultiPayload();
}

uint64_t *initializeBufferWithCopyOfBuffer for DateComparison(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_1C151631C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for DateComparison(uint64_t a1)
{
  uint64_t v2 = sub_1C151631C();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for DateComparison(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for DateComparison(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C01887A0(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C01887A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DateComparison();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for DateComparison(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for DateComparison(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C01887A0(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for FormatURL(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1C0188984()
{
  uint64_t result = sub_1C151631C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t assignWithCopy for A12_V24(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a2 + 16);
  sub_1BFFFC7A0(v3, v4);
  int v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_1BFFFC630(v5, v6);
  return a1;
}

uint64_t assignWithTake for A12_V24(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  char v3 = *(unsigned char *)(a2 + 16);
  unsigned __int8 v4 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1BFFFC630(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for A12_V24(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && a1[17]) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for A12_V24(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V24()
{
  return &type metadata for A12_V24;
}

uint64_t sub_1C0188B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v60 = a2;
  uint64_t v5 = sub_1C151635C();
  unint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v46 = *v3;
  uint64_t v14 = (void *)*((void *)v3 + 1);
  unsigned __int8 v15 = v3[16];
  v56[0] = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)v56))
  {
    sub_1C0020AF0();
    swift_allocError();
    *(_OWORD *)uint64_t v16 = 0u;
    *(_OWORD *)(v16 + 16) = 0u;
    *(void *)(v16 + 32) = 0;
    *(unsigned char *)(v16 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    uint64_t v42 = a1;
    uint64_t v18 = a1;
    uint64_t v19 = (uint64_t)v13;
    sub_1BFF1AFA4(v18, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    uint64_t v41 = type metadata accessor for GroupLayoutContext;
    uint64_t v40 = v10;
    sub_1BFF1AFA4(v60, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    uint64_t v20 = v14;
    uint64_t v21 = v14;
    unsigned __int8 v22 = v15;
    sub_1BFFFC7A0(v21, v15);
    sub_1C151634C();
    uint64_t v23 = sub_1C151633C();
    uint64_t v39 = v24;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v5);
    uint64_t v58 = &type metadata for A12_V24;
    unint64_t v43 = sub_1C01863E0();
    unint64_t v59 = v43;
    char v25 = v46;
    LOBYTE(v56[0]) = v46;
    v56[1] = v20;
    unsigned __int8 v57 = v22;
    type metadata accessor for GroupLayoutKey();
    uint64_t v26 = swift_allocObject();
    sub_1BFFFC7A0(v20, v22);
    uint64_t v54 = sub_1C1520FAC();
    uint64_t v55 = v27;
    uint64_t v52 = 95;
    unint64_t v53 = 0xE100000000000000;
    uint64_t v50 = 45;
    unint64_t v51 = 0xE100000000000000;
    sub_1BFF27ECC();
    uint64_t v28 = sub_1C151FEBC();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    *(void *)(v26 + 16) = v28;
    *(void *)(v26 + 24) = v30;
    uint64_t v31 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    uint64_t v32 = v39;
    *uint64_t v31 = v23;
    v31[1] = v32;
    sub_1BFC66384((uint64_t)v56, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    uint64_t v33 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BFF2389C(v19, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v33, 0, 1, v45);
    uint64_t v34 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BFF2389C((uint64_t)v40, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v34, 0, 1, v48);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    sub_1BFFFC630(v20, v22);
    uint64_t v35 = type metadata accessor for A12_V24.Bound();
    uint64_t v36 = v49;
    v49[3] = v35;
    v36[4] = sub_1C0065BD0(&qword_1EA197668, (void (*)(uint64_t))type metadata accessor for A12_V24.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    unint64_t v38 = v43;
    boxed_opaque_existential_0[4] = (uint64_t)&type metadata for A12_V24;
    boxed_opaque_existential_0[5] = v38;
    *((unsigned char *)boxed_opaque_existential_0 + 8) = v25;
    boxed_opaque_existential_0[2] = (uint64_t)v20;
    *((unsigned char *)boxed_opaque_existential_0 + 24) = v22;
    sub_1BFF1AFA4(v60, (uint64_t)boxed_opaque_existential_0 + *(int *)(v35 + 24), (uint64_t (*)(void))v41);
    sub_1BFFFC7A0(v20, v22);
    uint64_t result = sub_1C0F525B0(0, 0, 0, 0, 0);
    uint64_t *boxed_opaque_existential_0 = v26;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v35 + 28)) = result;
  }
  return result;
}

uint64_t sub_1C0189078@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v30 = a1;
  *(void *)&long long v29 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A12_V24.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(*(void *)(v7 + *(int *)(v8 + 40)) + 16);
  double v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BFC66384(v9 + 16, (uint64_t)&v37);
  sub_1BFC66384(v9 + 56, (uint64_t)v36);
  double v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(&v37, inited + 16);
  sub_1BFC773DC(v36, inited + 56);
  *(double *)(inited + 96) = v11;
  v35[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v35, v41);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  uint64_t v13 = *(void *)(v2 + *(int *)(v6 + 28));
  v33[2] = v2;
  v33[3] = v41;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C0182EAC((void (*)(uint64_t))sub_1C018C284, (uint64_t)v33, v13, (uint64_t)&v34);
  swift_bridgeObjectRelease();
  *(void *)&long long v37 = v14;
  sub_1C018C2A4(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v16 = v15;
  sub_1C018C3C0(&qword_1EA197690);
  v28[1] = v16;
  uint64_t v17 = sub_1C151F0BC();
  uint64_t v18 = *MEMORY[0x1E4FAB6D8];
  uint64_t v19 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v5, v18, v19);
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v29);
  uint64_t v31 = v17;
  uint64_t v32 = v2;
  sub_1C018C490(0, &qword_1EA197698, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1C1517BFC();
  long long v29 = v37;
  uint64_t v21 = v38;
  uint64_t v22 = v39;
  *(void *)&long long v37 = v14;
  *(void *)&v36[0] = v40;
  MEMORY[0x1F4188790](v20);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1C018C3C0((unint64_t *)&qword_1EB879E10);
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v37 = v23;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v24 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v25 = v30;
  *uint64_t v30 = 0;
  *(_OWORD *)(v25 + 8) = v29;
  *((void *)v25 + 3) = v21;
  *((void *)v25 + 4) = v22;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *((void *)v25 + 5) = v24;
  *((void *)v25 + 6) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

uint64_t sub_1C018956C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0189644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C00921D4(0, &qword_1EA1976B0, (uint64_t (*)(void))sub_1C018C310, (uint64_t)&type metadata for A12_V24.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  double v10 = (uint64_t *)&v14[-v9];
  uint64_t v17 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 12;
  *double v10 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA10], v7);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C018C490(0, &qword_1EA1976B8, MEMORY[0x1E4FAB6F0]);
  sub_1C018C44C(&qword_1EA1976C0, &qword_1EA1976B8, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1C0189834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a3;
  sub_1C00921D4(0, &qword_1EA1976B0, (uint64_t (*)(void))sub_1C018C310, (uint64_t)&type metadata for A12_V24.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (uint64_t *)((char *)&v29 - v8);
  uint64_t v41 = a2;
  uint64_t v10 = *(void *)(a2 + 16);
  if (v10)
  {
    uint64_t v11 = sub_1C151729C();
    unsigned int v36 = *MEMORY[0x1E4FAB4E8];
    uint64_t v37 = v11;
    uint64_t v35 = v11 - 8;
    unsigned int v34 = *MEMORY[0x1E4FAB940];
    uint64_t v32 = (void (**)(uint64_t *, uint64_t))(v7 + 8);
    uint64_t v33 = (void (**)(uint64_t *, void, uint64_t))(v7 + 104);
    unsigned int v31 = *MEMORY[0x1E4FABA28];
    unsigned int v30 = *MEMORY[0x1E4FAB638];
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    long long v29 = xmmword_1C1529AE0;
    uint64_t v38 = v10;
    uint64_t v39 = a1;
    do
    {
      uint64_t v43 = *(void *)(v41 + 8 * v12++ + 32);
      uint64_t v45 = a1;
      uint64_t v13 = v37;
      uint64_t v14 = swift_allocBox();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, v36, v13);
      *uint64_t v9 = v14;
      uint64_t v16 = *v33;
      (*v33)(v9, v34, v6);
      uint64_t v17 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C018C490(0, &qword_1EA1976C8, MEMORY[0x1E4FAB4D0]);
      uint64_t v44 = v18;
      uint64_t v42 = sub_1C018C44C(&qword_1EA1976D0, &qword_1EA1976C8, v17);
      swift_bridgeObjectRetain();
      sub_1C151738C();
      uint64_t v19 = *v32;
      (*v32)(v9, v6);
      uint64_t v45 = a1;
      v16(v9, v31, v6);
      sub_1C018C514();
      sub_1C00921D4(0, &qword_1EA1976E0, (uint64_t (*)(void))sub_1C018C310, (uint64_t)&type metadata for A12_V24.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v21 = v20;
      uint64_t v22 = *(void *)(v20 - 8);
      uint64_t v23 = v6;
      unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = v29;
      unint64_t v26 = v25 + v24;
      uint64_t v6 = v23;
      uint64_t v27 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v22 + 104))(v26, v30, v21);
      MEMORY[0x1F4188790](v27);
      sub_1C151731C();
      uint64_t v28 = v38;
      swift_bridgeObjectRelease();
      a1 = v39;
      v19(v9, v23);
      swift_bridgeObjectRelease();
    }
    while (v28 != v12);
    swift_bridgeObjectRelease();
  }
}

void sub_1C0189C88(uint64_t a1, uint64_t a2)
{
  sub_1C00921D4(0, &qword_1EA1976B0, (uint64_t (*)(void))sub_1C018C310, (uint64_t)&type metadata for A12_V24.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v15 - v7);
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v19 = *(void *)(v10 + 72);
    unsigned int v18 = *MEMORY[0x1E4FABA10];
    uint64_t v16 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v17 = (uint64_t (**)(uint64_t *, void, uint64_t))(v6 + 104);
    v15[1] = a2;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v21 = a1;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 6;
      *uint64_t v8 = v12;
      uint64_t v13 = (*v17)(v8, v18, v5);
      uint64_t v20 = v15;
      MEMORY[0x1F4188790](v13);
      uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C018C490(0, &qword_1EA1976C8, MEMORY[0x1E4FAB4D0]);
      sub_1C018C44C(&qword_1EA1976D0, &qword_1EA1976C8, v14);
      sub_1C151734C();
      (*v16)(v8, v5);
      v11 += v19;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C0189F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v46 = a3;
  uint64_t v49 = a2;
  uint64_t v50 = sub_1C1517A9C();
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  unint64_t v51 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HeadlineViewLayout.Options(0);
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00921D4(0, &qword_1EA1976B0, (uint64_t (*)(void))sub_1C018C310, (uint64_t)&type metadata for A12_V24.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)((char *)&v45 - v15);
  uint64_t v56 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0x4060200000000000;
  *uint64_t v16 = v17;
  uint64_t v18 = *MEMORY[0x1E4FAB958];
  uint64_t v54 = v14;
  uint64_t v55 = v13;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 104))(v16, v18, v13);
  sub_1C018C514();
  sub_1C00921D4(0, &qword_1EA1976E0, (uint64_t (*)(void))sub_1C018C310, (uint64_t)&type metadata for A12_V24.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
  *(void *)(v22 + v21) = 0x4058C00000000000;
  (*(void (**)(void))(v20 + 104))();
  uint64_t v23 = v46 + *(int *)(type metadata accessor for A12_V24.Bound() + 24);
  LODWORD(v24) = *(unsigned __int8 *)(v23 + *(int *)(type metadata accessor for GroupLayoutContext() + 24) + 17);
  if (qword_1F1B66B30) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = v24;
  }
  uint64_t v25 = qword_1F1B66B30 | v24;
  unint64_t v26 = (char *)v11 + v9[7];
  uint64_t v27 = *MEMORY[0x1E4FAB8C8];
  uint64_t v28 = sub_1C1517A7C();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v26, v27, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  unsigned int v30 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = v25;
  *(uint64_t *)((char *)v11 + v9[8]) = 3;
  unsigned int v31 = *v30;
  *(uint64_t *)((char *)v11 + v9[9]) = (uint64_t)v31;
  uint64_t v32 = *MEMORY[0x1E4FB2848];
  uint64_t v33 = *(void *)(MEMORY[0x1E4FB2848] + 8);
  uint64_t v34 = *(void *)(MEMORY[0x1E4FB2848] + 16);
  uint64_t v35 = *(void *)(MEMORY[0x1E4FB2848] + 24);
  uint64_t v36 = qword_1EB87CC48;
  id v37 = v31;
  if (v36 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C151709C();
  uint64_t v38 = swift_release();
  __n128 v39 = MEMORY[0x1F4188790](v38);
  *(&v45 - 8) = v32;
  *(&v45 - 7) = v33;
  *(&v45 - 6) = v34;
  *(&v45 - 5) = v35;
  uint64_t v41 = v49;
  uint64_t v40 = v50;
  *(&v45 - 4) = (uint64_t)v7;
  *(&v45 - 3) = v41;
  unint64_t v44 = (unint64_t)v11;
  (*(void (**)(char *, void, uint64_t, __n128))(v48 + 104))(v51, *MEMORY[0x1E4FAB8F8], v40, v39);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v7, v53);
  sub_1C018C644((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v42 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C018C490(0, &qword_1EA1976C8, MEMORY[0x1E4FAB4D0]);
  sub_1C018C44C(&qword_1EA1976D0, &qword_1EA1976C8, v42);
  unint64_t v44 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v54 + 8))(v16, v55);
}

uint64_t sub_1C018A5EC@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V24.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C018A6DC(void *a1)
{
  uint64_t v3 = v1;
  sub_1C00921D4(0, &qword_1EA197718, (uint64_t (*)(void))sub_1C018CD84, (uint64_t)&type metadata for A12_V24.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C018CD84();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C0065BD0(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C018A924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C018C9EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C018A94C(uint64_t a1)
{
  unint64_t v2 = sub_1C018CD84();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C018A988(uint64_t a1)
{
  unint64_t v2 = sub_1C018CD84();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C018A9C4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C018CAD4(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C018AA0C(void *a1)
{
  return sub_1C018A6DC(a1);
}

uint64_t sub_1C018AA24()
{
  sub_1C018C364();
  return sub_1C151798C();
}

uint64_t sub_1C018AAA0@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C00921D4(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C018AB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0188B48(a1, a2, a3);
}

uint64_t sub_1C018AB74()
{
  return sub_1C12BC2F8();
}

unint64_t sub_1C018AB84(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C018ABB4();
  unint64_t result = sub_1C018AC08();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C018ABB4()
{
  unint64_t result = qword_1EA197658;
  if (!qword_1EA197658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197658);
  }
  return result;
}

unint64_t sub_1C018AC08()
{
  unint64_t result = qword_1EA197660;
  if (!qword_1EA197660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197660);
  }
  return result;
}

uint64_t type metadata accessor for A12_V24.Bound()
{
  uint64_t result = qword_1EA197678;
  if (!qword_1EA197678) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C018ACA8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    uint64_t v35 = a3;
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v17 = v16[5];
    uint64_t v18 = v13 + v17;
    uint64_t v19 = v14 + v17;
    uint64_t v20 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v16[6];
    uint64_t v22 = v13 + v21;
    uint64_t v23 = v14 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(v14 + v21);
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(unsigned char *)(v22 + 19) = *(unsigned char *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    unint64_t v24 = *(void *)(v14 + v21 + 24);
    if (v24 >= 2) {
      unint64_t v24 = swift_bridgeObjectRetain();
    }
    *(void *)(v22 + 24) = v24;
    uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v26 = *(int *)(v25 + 36);
    __dst = (void *)(v22 + v26);
    uint64_t v34 = v25;
    uint64_t v27 = (const void *)(v23 + v26);
    uint64_t v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1C018C2A4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v27, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(void *)(v22 + *(int *)(v34 + 40)) = *(void *)(v23 + *(int *)(v34 + 40));
    *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
    *(void *)(v13 + v16[8]) = *(void *)(v14 + v16[8]);
    *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
    *(void *)(v13 + v16[10]) = *(void *)(v14 + v16[10]);
    *(unsigned char *)(v13 + v16[11]) = *(unsigned char *)(v14 + v16[11]);
    *(void *)(v13 + v16[12]) = *(void *)(v14 + v16[12]);
    *(void *)(a1 + *(int *)(v35 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v35 + 28));
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C018B034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  uint64_t v25 = (const void *)(v21 + v24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C018C2A4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  *(void *)(a1 + *(int *)(v32 + 28)) = *(void *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C018B378(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  void v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C018C644((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C018C2A4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1C018C644(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C018C2A4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

void sub_1C018B80C()
{
  if (!qword_1EA197670)
  {
    sub_1C018B85C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197670);
    }
  }
}

void sub_1C018B85C()
{
  if (!qword_1EB87A030)
  {
    unint64_t v0 = sub_1C151F04C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A030);
    }
  }
}

uint64_t sub_1C018B8BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  long long v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  uint64_t v18 = (const void *)(v16 + v17);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C018C2A4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)(v15 + *(int *)(v24 + 40)) = *(void *)(v16 + *(int *)(v24 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C018BBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1C018C644((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C018C2A4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1C018C644(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C018C2A4(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C018BFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C018C010);
}

uint64_t sub_1C018C010(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C018C0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C018C0D4);
}

void *sub_1C018C0D4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C018C17C()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C018C22C(uint64_t a1)
{
  uint64_t result = sub_1C0065BD0(&qword_1EA197688, (void (*)(uint64_t))type metadata accessor for A12_V24.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C018C284@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C018956C(a1, *(void *)(v2 + 24), a2);
}

void sub_1C018C2A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C018C308(uint64_t a1)
{
  return sub_1C0189644(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C018C310()
{
  unint64_t result = qword_1EA1976A0;
  if (!qword_1EA1976A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1976A0);
  }
  return result;
}

unint64_t sub_1C018C364()
{
  unint64_t result = qword_1EA1976A8;
  if (!qword_1EA1976A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1976A8);
  }
  return result;
}

uint64_t sub_1C018C3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C018A5EC(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C018C3C0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C018C2A4(255, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C018C434()
{
  return swift_deallocObject();
}

void sub_1C018C444(uint64_t a1)
{
  sub_1C0189834(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C018C44C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C018C490(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C018C490(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V24.Layout;
    v8[1] = &type metadata for A12_V24.Layout.Attributes;
    v8[2] = sub_1C018C310();
    v8[3] = sub_1C018C364();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C018C514()
{
  if (!qword_1EA1976D8)
  {
    sub_1C00921D4(255, &qword_1EA1976E0, (uint64_t (*)(void))sub_1C018C310, (uint64_t)&type metadata for A12_V24.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1976D8);
    }
  }
}

void sub_1C018C5A4(uint64_t a1)
{
  sub_1C0189C88(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C018C5AC(uint64_t a1)
{
  return sub_1C0189F68(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C018C5B4(uint64_t a1)
{
  return sub_1C12338E4(a1, *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(double *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40));
}

void sub_1C018C5C8()
{
  if (!qword_1EB871338)
  {
    sub_1BFE455E4();
    sub_1BFE4774C();
    unint64_t v0 = sub_1C1517C1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871338);
    }
  }
}

uint64_t sub_1C018C644(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *assignWithCopy for A12_V24.Layout.Attributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for A12_V24.Layout.Attributes(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for A12_V24.Layout.Attributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for A12_V24.Layout.Attributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V24.Layout.Attributes()
{
  return &type metadata for A12_V24.Layout.Attributes;
}

void *assignWithCopy for FormatButtonNodeStateMaskLayoutAttributes(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for FormatButtonNodeStateMaskLayoutAttributes(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for A12_V24.Layout()
{
  return &type metadata for A12_V24.Layout;
}

unint64_t sub_1C018C890()
{
  unint64_t result = qword_1EA1976E8;
  if (!qword_1EA1976E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1976E8);
  }
  return result;
}

unint64_t sub_1C018C8E8()
{
  unint64_t result = qword_1EA1976F0;
  if (!qword_1EA1976F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1976F0);
  }
  return result;
}

unint64_t sub_1C018C940()
{
  unint64_t result = qword_1EA1976F8;
  if (!qword_1EA1976F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1976F8);
  }
  return result;
}

unint64_t sub_1C018C998()
{
  unint64_t result = qword_1EA197700;
  if (!qword_1EA197700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197700);
  }
  return result;
}

uint64_t sub_1C018C9EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1605590)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C018CAD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C00921D4(0, &qword_1EA197708, (uint64_t (*)(void))sub_1C018CD84, (uint64_t)&type metadata for A12_V24.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C018CD84();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C0065BD0(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  uint64_t v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C018CD84()
{
  unint64_t result = qword_1EA197710;
  if (!qword_1EA197710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197710);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V24.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C018CEA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V24.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V24.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C018CEE0()
{
  unint64_t result = qword_1EA197728;
  if (!qword_1EA197728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197728);
  }
  return result;
}

unint64_t sub_1C018CF38()
{
  unint64_t result = qword_1EA197730;
  if (!qword_1EA197730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197730);
  }
  return result;
}

unint64_t sub_1C018CF90()
{
  unint64_t result = qword_1EA197738;
  if (!qword_1EA197738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197738);
  }
  return result;
}

unint64_t sub_1C018CFE4(uint64_t a1)
{
  return sub_1BFE9E214(a1, sub_1BFF95698, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018D010(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, qword_1EB86B560, (uint64_t)&type metadata for SportsTaxonomyGraphNode, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018D14C(uint64_t a1)
{
  return sub_1C018D1FC(a1, &qword_1EA197850, (void (*)(uint64_t))sub_1C0153EDC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018D180(uint64_t a1)
{
  return sub_1BFE9E214(a1, sub_1C0191EF0, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018D1AC(uint64_t a1)
{
  return sub_1C018F9B4(a1, (unint64_t *)&qword_1EB87A480, (uint64_t)&qword_1EB87A160, (uint64_t)&protocolRef_FCTagProviding);
}

unint64_t sub_1C018D1C8(uint64_t a1)
{
  return sub_1C018D1FC(a1, (unint64_t *)&qword_1EB861AE8, (void (*)(uint64_t))type metadata accessor for FormatPuzzle, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018D1FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v6 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0192664(0, a2, a3);
  uint64_t v6 = (void *)sub_1C152050C();
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v6;
  }
  swift_retain();
  unint64_t v8 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v9 = *(v8 - 2);
    uint64_t v10 = *(v8 - 1);
    uint64_t v11 = *v8;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = a4(v9, v10);
    if (v13) {
      break;
    }
    *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v14 = (void *)(v6[6] + 16 * result);
    *uint64_t v14 = v9;
    v14[1] = v10;
    *(void *)(v6[7] + 8 * result) = v11;
    uint64_t v15 = v6[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    _OWORD v6[2] = v17;
    v8 += 3;
    if (!--v7)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018D32C(uint64_t a1)
{
  return sub_1C018F9B4(a1, (unint64_t *)&qword_1EB861AF0, (uint64_t)&qword_1EB8901B0, (uint64_t)&protocolRef_FCPuzzleProviding);
}

unint64_t sub_1C018D348(uint64_t a1)
{
  return sub_1C018F9B4(a1, (unint64_t *)&qword_1EA197890, (uint64_t)&qword_1EB890220, (uint64_t)&protocolRef_FCPuzzleTypeProviding);
}

unint64_t sub_1C018D364(uint64_t a1)
{
  return sub_1C018D1FC(a1, (unint64_t *)&qword_1EA1978A0, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018D398(uint64_t a1)
{
  sub_1BFFE2384(0, (unint64_t *)&unk_1EB884C18, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0192664(0, (unint64_t *)&qword_1EB86DE80, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
  uint64_t v7 = sub_1C152050C();
  unint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C01925F8(v13, (uint64_t)v6, (unint64_t *)&unk_1EB884C18, (void (*)(uint64_t))type metadata accessor for PuzzleStatistic);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1BFEF2D8C(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for PuzzleStatistic();
    unint64_t result = sub_1C01917CC(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018D5E4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, (unint64_t *)&qword_1EB86DE88, (uint64_t)&type metadata for FormatPuzzleStatistic, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = a1 + 40;
  while (1)
  {
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(void *)v4;
    uint64_t v7 = *(void *)(v4 + 8);
    uint64_t v8 = *(void *)(v4 + 16);
    long long v17 = *(_OWORD *)(v4 + 24);
    uint64_t v9 = *(void *)(v4 + 40);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v12 = v5;
    v12[1] = v6;
    uint64_t v13 = v2[7] + 40 * result;
    *(void *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v8;
    *(_OWORD *)(v13 + 16) = v17;
    *(void *)(v13 + 32) = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018D770(uint64_t a1)
{
  return sub_1C018DBA0(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018D788(uint64_t a1)
{
  return sub_1BFE52C48(a1, (unint64_t *)&qword_1EB87A470, (uint64_t)&qword_1EB87A0B0, 0x1E4F7E780);
}

unint64_t sub_1C018D7A4(uint64_t a1)
{
  sub_1BFFE2384(0, (unint64_t *)&qword_1EB8704B0, MEMORY[0x1E4FAAFC8]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0192664(0, (unint64_t *)&qword_1EB8704C8, MEMORY[0x1E4FAAFC8]);
  uint64_t v7 = sub_1C152050C();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C01925F8(v13, (uint64_t)v6, (unint64_t *)&qword_1EB8704B0, MEMORY[0x1E4FAAFC8]);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1BFEF2D8C(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_1C1518CDC();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018D9F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, (unint64_t *)&qword_1EB87A3D0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    unint64_t v12 = (void *)(v2[7] + 16 * result);
    *unint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018DB38(uint64_t a1)
{
  return sub_1C018D1FC(a1, &qword_1EA197838, sub_1C019225C, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018DB6C(uint64_t a1)
{
  return sub_1C018D1FC(a1, &qword_1EA197820, sub_1C01921F4, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018DBA0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, &qword_1EA1977A8, (uint64_t)&type metadata for GenericDataVisualizationResponseItem, MEMORY[0x1E4FBBD58]);
  uint64_t v4 = (void *)sub_1C152050C();
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v4;
  }
  swift_retain();
  uint64_t v6 = (_OWORD *)(a1 + 56);
  while (1)
  {
    uint64_t v7 = *((void *)v6 - 3);
    uint64_t v8 = *((void *)v6 - 2);
    uint64_t v9 = *((void *)v6 - 1);
    long long v17 = *v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = a2(v7, v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v12 = (void *)(v4[6] + 16 * result);
    *unint64_t v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v4[7] + 24 * result;
    *(void *)uint64_t v13 = v9;
    *(_OWORD *)(v13 + 8) = v17;
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    uint64_t v6 = (_OWORD *)((char *)v6 + 40);
    v4[2] = v16;
    if (!--v5)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018DD1C(uint64_t a1)
{
  return sub_1C018F9B4(a1, (unint64_t *)&qword_1EB87A490, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding);
}

unint64_t sub_1C018DD38(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0191B74(0, &qword_1EB85F210, (uint64_t)&qword_1EB879F20, MEMORY[0x1E4FBB320], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFFF7C00);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018DE88(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0191B74(0, (unint64_t *)&qword_1EB87A3F0, (uint64_t)&qword_1EB872200, (uint64_t)&protocol descriptor for FeedGroupItemType, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC845BC);
  uint64_t v2 = sub_1C152050C();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BFF59C80(v6, (uint64_t)&v15, (unint64_t *)&unk_1EA197868, (unint64_t *)&qword_1EB872200);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1BFEF2D8C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1BFC773DC(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018E004(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, (unint64_t *)&qword_1EB861480, (uint64_t)&type metadata for FeedItemAuxiliary, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    long long v18 = *(_OWORD *)(v4 + 1);
    uint64_t v9 = v4[3];
    uint64_t v8 = v4[4];
    uint64_t v10 = v4[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v13 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v13 = v5;
    v13[1] = v6;
    uint64_t v14 = v2[7] + 48 * result;
    *(void *)uint64_t v14 = v7;
    *(_OWORD *)(v14 + 8) = v18;
    *(void *)(v14 + 24) = v9;
    *(void *)(v14 + 32) = v8;
    *(void *)(v14 + 40) = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 8;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018E198(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0191B74(0, (unint64_t *)&unk_1EA197750, (uint64_t)&qword_1EB879C00, MEMORY[0x1E4FBB718], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFFF7C00);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    char v12 = (void *)(v2[7] + 16 * result);
    *char v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018E2F0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, (unint64_t *)&qword_1EB863450, (uint64_t)&type metadata for PuzzleTypeStats, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = a1 + 40;
  while (1)
  {
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(void *)v4;
    long long v15 = *(_OWORD *)(v4 + 24);
    long long v16 = *(_OWORD *)(v4 + 8);
    long long v14 = *(_OWORD *)(v4 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    char v10 = (_OWORD *)(v2[7] + 48 * result);
    *char v10 = v16;
    v10[1] = v15;
    v10[2] = v14;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 64;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018E49C(uint64_t a1)
{
  sub_1BFFE2384(0, &qword_1EB86DDA0, MEMORY[0x1E4F27928]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0192664(0, (unint64_t *)&qword_1EB85EFA0, MEMORY[0x1E4F27928]);
  uint64_t v7 = sub_1C152050C();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C01925F8(v13, (uint64_t)v6, &qword_1EB86DDA0, MEMORY[0x1E4F27928]);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1BFEF2D8C(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_1C151631C();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018E6EC(uint64_t a1)
{
  sub_1BFF99488(0, (unint64_t *)&unk_1EA1977E0, MEMORY[0x1E4FBBC50]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v23 - v5;
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0191CD0();
  uint64_t v7 = sub_1C152050C();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = &v6[*(int *)(v3 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v23[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BFF993B8(v13, (uint64_t)v6, (uint64_t)&unk_1EA1977E0, MEMORY[0x1E4FBBC50], (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF99488);
    unint64_t result = sub_1BFEFE43C((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_1C152039C();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    unint64_t result = (unint64_t)sub_1BFF993A8(v10, (_OWORD *)(v8[7] + 32 * v17));
    uint64_t v20 = v8[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018E924(uint64_t a1)
{
  sub_1BFFE2384(0, (unint64_t *)&qword_1EB85E730, MEMORY[0x1E4F276F0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0192664(0, (unint64_t *)&unk_1EA197878, MEMORY[0x1E4F276F0]);
  uint64_t v7 = sub_1C152050C();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C01925F8(v13, (uint64_t)v6, (unint64_t *)&qword_1EB85E730, MEMORY[0x1E4F276F0]);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1BFEF2D8C(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = sub_1C1515FDC();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v10, v22);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018EB74(uint64_t a1)
{
  return sub_1BFF98DD8(a1, (void (*)(void))sub_1C0191904, (uint64_t)&unk_1EA197790, (uint64_t)type metadata accessor for OpenExternalURLOptionsKey, (uint64_t (*)(uint64_t))sub_1BFF98FC0);
}

unint64_t sub_1C018EBBC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0191A70(0, (unint64_t *)&qword_1EB86B5B0, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018ECF0(uint64_t a1)
{
  return sub_1BFE9E214(a1, (void (*)(void))sub_1C01919EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018ED1C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0191B08();
  uint64_t v2 = sub_1C152050C();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  uint64_t v7 = MEMORY[0x1E4FBB960];
  while (1)
  {
    sub_1BFF993B8(v6, (uint64_t)v16, (uint64_t)&qword_1EA1977A0, v7, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF99428);
    unint64_t result = sub_1C105216C((uint64_t)v16);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v10 = v3[6] + 40 * result;
    long long v11 = v16[0];
    long long v12 = v16[1];
    *(void *)(v10 + 32) = v17;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    unint64_t result = (unint64_t)sub_1BFF993A8(&v18, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018EE7C(uint64_t a1)
{
  return sub_1C018FEA8(a1, sub_1C0191E48);
}

unint64_t sub_1C018EE94(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0191DDC();
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    id v7 = v6;
    unint64_t result = sub_1BFD6B6EC(v5);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v5;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018EF9C(uint64_t a1)
{
  return sub_1BFE9E214(a1, (void (*)(void))sub_1C0192328, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018EFC8(uint64_t a1)
{
  sub_1BFFE2384(0, (unint64_t *)&qword_1EB861420, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0192664(0, (unint64_t *)&qword_1EA1AA9C0, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  uint64_t v7 = sub_1C152050C();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C01925F8(v13, (uint64_t)v6, (unint64_t *)&qword_1EB861420, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1BFEF2D8C(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for FeedClusteringOptions(0);
    unint64_t result = sub_1C01917CC(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, type metadata accessor for FeedClusteringOptions);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018F214(uint64_t a1)
{
  sub_1BFFE2384(0, &qword_1EA1977B0, (void (*)(uint64_t))type metadata accessor for DebugFormatCompilingPackage);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0192664(0, (unint64_t *)&qword_1EA1AA890, (void (*)(uint64_t))type metadata accessor for DebugFormatCompilingPackage);
  uint64_t v7 = sub_1C152050C();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C01925F8(v13, (uint64_t)v6, &qword_1EA1977B0, (void (*)(uint64_t))type metadata accessor for DebugFormatCompilingPackage);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1BFEF2D8C(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for DebugFormatCompilingPackage();
    unint64_t result = sub_1C01917CC(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, (uint64_t (*)(void))type metadata accessor for DebugFormatCompilingPackage);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018F460(uint64_t a1)
{
  return sub_1BFF98DD8(a1, (void (*)(void))sub_1C0191D3C, (uint64_t)&unk_1EA197800, (uint64_t)type metadata accessor for OptionKey, (uint64_t (*)(uint64_t))sub_1BFF98FC0);
}

unint64_t sub_1C018F4A8(uint64_t a1)
{
  return sub_1C018D1FC(a1, (unint64_t *)&unk_1EA197808, (void (*)(uint64_t))sub_1BFDC6F40, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018F4DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, (unint64_t *)&qword_1EB85E058, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018F610(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, (unint64_t *)&qword_1EA197748, (uint64_t)&type metadata for EngagementBannerViewStyle, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018F74C(uint64_t a1)
{
  sub_1BFFE2384(0, &qword_1EB86AF60, (void (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v26 - v5);
  if (!*(void *)(a1 + 16))
  {
    id v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0192664(0, (unint64_t *)&qword_1EB86B598, (void (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed);
  uint64_t v7 = sub_1C152050C();
  id v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v26[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C01925F8(v13, (uint64_t)v6, &qword_1EB86AF60, (void (*)(uint64_t))type metadata accessor for SportsEventStatusResponseEmbed);
    uint64_t v15 = *v6;
    uint64_t v16 = v6[1];
    unint64_t result = sub_1BFEF2D8C(*v6, v16);
    if (v18) {
      break;
    }
    unint64_t v19 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v20 = (uint64_t *)(v8[6] + 16 * result);
    *uint64_t v20 = v15;
    v20[1] = v16;
    uint64_t v21 = v8[7];
    uint64_t v22 = type metadata accessor for SportsEventStatusResponseEmbed();
    unint64_t result = sub_1C01917CC(v10, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, (uint64_t (*)(void))type metadata accessor for SportsEventStatusResponseEmbed);
    uint64_t v23 = v8[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v8[2] = v25;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018F998(uint64_t a1)
{
  return sub_1C018F9B4(a1, &qword_1EA197818, (uint64_t)&qword_1EB890230, (uint64_t)&protocolRef_FCSportsEventProviding);
}

unint64_t sub_1C018F9B4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0191B74(0, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
  uint64_t v5 = (void *)sub_1C152050C();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v8 = *(v7 - 2);
    uint64_t v9 = *(v7 - 1);
    uint64_t v10 = *v7;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v8, v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v5[6] + 16 * result);
    *uint64_t v13 = v8;
    v13[1] = v9;
    *(void *)(v5[7] + 8 * result) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    void v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018FAE0(uint64_t a1)
{
  return sub_1BFE9E214(a1, sub_1C0192190, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1C018FB0C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, (unint64_t *)&qword_1EB86B540, (uint64_t)&type metadata for FeedClusteringResult.InventoryItem, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    long long v13 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018FC4C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0191F20();
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C1052958((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018FD54(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, &qword_1EB86FDA0, (uint64_t)&type metadata for FamilyStatus, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    uint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C018FE90(uint64_t a1)
{
  return sub_1C018FEA8(a1, (void (*)(void))sub_1C0191E78);
}

unint64_t sub_1C018FEA8(uint64_t a1, void (*a2)(void))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  a2(0);
  uint64_t v3 = (void *)sub_1C152050C();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_1BFEF2D8C(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t FormatMicaNodeRenderer.render<A>(context:layoutAttributes:view:micaData:token:traitCollection:)(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v50 = a1;
  uint64_t v51 = a7;
  uint64_t v53 = a6;
  uint64_t v49 = a5;
  uint64_t v14 = type metadata accessor for FormatMicaData();
  uint64_t v48 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v48 + 64);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151F8FC();
  objc_msgSend(a3, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a2 + 128));
  uint64_t v17 = *(void *)(a2 + 96);
  if (v17) {
    uint64_t v18 = *(unsigned char *)(v17 + 177) & 1;
  }
  else {
    uint64_t v18 = 0;
  }
  uint64_t v52 = a8;
  objc_msgSend(a3, sel_setAccessibilityIgnoresInvertColors_, v18);
  uint64_t v19 = *(void *)(a2 + 144);
  uint64_t v20 = *(unsigned __int8 *)(a2 + 152);
  objc_msgSend(a3, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a3, sel_setAccessibilityElementsHidden_, 0);
  if (v20 > 0xFD) {
    goto LABEL_10;
  }
  if ((v20 & 0x80) != 0)
  {
    if (!(v19 | v20 ^ 0x80)) {
      goto LABEL_10;
    }
    uint64_t v21 = &selRef_setAccessibilityElementsHidden_;
  }
  else
  {
    uint64_t v21 = &selRef_setIsAccessibilityElement_;
  }
  objc_msgSend(a3, *v21, 1);
LABEL_10:
  objc_msgSend(a3, sel_setClipsToBounds_, 1);
  uint64_t v47 = __swift_project_boxed_opaque_existential_1((void *)(v9 + 16), *(void *)(v9 + 40));
  uint64_t v54 = *a4;
  uint64_t v22 = swift_allocObject();
  swift_weakInit();
  sub_1C0191764((uint64_t)a4, (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FormatMicaData);
  unint64_t v23 = (*(unsigned __int8 *)(v48 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  unint64_t v24 = (v15 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = (uint64_t)v16;
  unint64_t v26 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v22;
  sub_1C01917CC(v25, v27 + v23, (uint64_t (*)(void))type metadata accessor for FormatMicaData);
  *(void *)(v27 + v24) = a2;
  size_t v28 = v49;
  *(void *)(v27 + v26) = v49;
  swift_retain();
  swift_retain();
  swift_retain();
  id v29 = v28;
  sub_1C0C48698(v50, (uint64_t)a3, &v54, (uint64_t)v29, v53, (uint64_t)sub_1C0190B2C, v27, v51, v52);
  swift_release();
  swift_release();
  swift_release();
  if (v17)
  {
    uint64_t v30 = *(void *)(v17 + 72);
    uint64_t v31 = *(void *)(v17 + 80);
    char v32 = *(unsigned char *)(v17 + 88);
    sub_1BFEF6828(v30, v31, v32);
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    char v32 = -2;
  }
  id v33 = objc_msgSend(a3, sel_layer);
  objc_msgSend(a3, sel_bounds);
  uint64_t v54 = v30;
  uint64_t v55 = v31;
  char v56 = v32;
  sub_1BFE6A0C8(v33, (uint64_t)&v54, v34, v35, v36, v37);

  sub_1BFEF68AC(v30, v31, v32);
  uint64_t v38 = *(void *)(a2 + 136);
  if (v17)
  {
    uint64_t v40 = *(void *)(v17 + 64);
    uint64_t v39 = *(void *)(v17 + 72);
    uint64_t v41 = *(void *)(v17 + 80);
    char v42 = *(unsigned char *)(v17 + 88);
    swift_bridgeObjectRetain();
    sub_1BFEF6828(v39, v41, v42);
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v41 = 0;
    uint64_t v40 = 0;
    char v42 = -2;
  }
  id v43 = objc_msgSend(a3, sel_layer);
  uint64_t v54 = v39;
  uint64_t v55 = v41;
  char v56 = v42;
  sub_1BFE69BFC(v38, v43, (uint64_t)v53, v40, &v54);

  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v39, v41, v42);
  if (v17)
  {
    uint64_t v44 = *(void *)(v17 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v44 = 0;
  }
  uint64_t v54 = v44;
  unint64_t v45 = sub_1BFE67330(MEMORY[0x1E4FBC860]);
  sub_1BFE69FD4(v38, a3, &v54, v45);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0190420()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0190458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for FormatMicaData();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v7);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v36 = result;
    uint64_t v11 = a3 + *(int *)(v7 + 24);
    int v12 = *(_DWORD *)v11;
    int v13 = *(unsigned __int8 *)(v11 + 4);
    if (v13)
    {
      if (v13 != 1)
      {
        if (v12)
        {
          if (v12 != 1)
          {
            sub_1C151CAEC();
            return swift_release();
          }
          uint64_t v24 = *(void *)(v36 + 56);
          uint64_t v26 = *(void *)(a4 + 16);
          uint64_t v25 = *(void *)(a4 + 24);
          swift_beginAccess();
          uint64_t v27 = *(void *)(v24 + 24);
          swift_retain();
          swift_bridgeObjectRetain();
          char v28 = sub_1BFF896B4(v26, v25, v27);
          swift_bridgeObjectRelease();
          if ((v28 & 1) == 0)
          {
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_1BFEFFC1C(&v37, v26, v25);
            swift_endAccess();
            swift_bridgeObjectRelease();
            sub_1C151CAEC();
          }
        }
        else
        {
          uint64_t v29 = *(void *)(v36 + 56);
          uint64_t v31 = *(void *)(a4 + 16);
          uint64_t v30 = *(void *)(a4 + 24);
          swift_beginAccess();
          uint64_t v32 = *(void *)(v29 + 16);
          swift_retain();
          swift_bridgeObjectRetain();
          char v33 = sub_1BFF896B4(v31, v30, v32);
          swift_bridgeObjectRelease();
          if ((v33 & 1) == 0)
          {
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_1BFEFFC1C(&v37, v31, v30);
            swift_endAccess();
            swift_bridgeObjectRelease();
            sub_1C151CAEC();
          }
        }
        swift_release();
        return swift_release();
      }
      uint64_t v14 = swift_allocObject();
      uint64_t v34 = a1;
      uint64_t v35 = a3;
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      uint64_t v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1C0191764(a3, (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FormatMicaData);
      unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 52) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v16;
      *(void *)(v18 + 24) = v15;
      *(void *)(v18 + 32) = v14;
      *(void *)(v18 + 40) = a4;
      *(_DWORD *)(v18 + 48) = v12;
      sub_1C01917CC((uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17, (uint64_t (*)(void))type metadata accessor for FormatMicaData);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
    else
    {
      uint64_t v19 = swift_allocObject();
      LODWORD(v35) = v12;
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      uint64_t v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v21 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1C0191764(a3, (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FormatMicaData);
      unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 52) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v21;
      *(void *)(v23 + 24) = v20;
      *(void *)(v23 + 32) = v19;
      *(void *)(v23 + 40) = a4;
      *(_DWORD *)(v23 + 48) = v35;
      sub_1C01917CC((uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, (uint64_t (*)(void))type metadata accessor for FormatMicaData);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
    }
    sub_1C151CABC();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C01909C4()
{
  uint64_t v1 = (int *)(type metadata accessor for FormatMicaData() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  swift_release();
  swift_release();
  unint64_t v4 = v0 + v2 + v1[7];
  uint64_t v5 = sub_1C151A8EC();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C0190B2C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FormatMicaData() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1C0190458(a1, v5, v1 + v4, v6);
}

void sub_1C0190BD8(uint64_t a1, uint64_t a2, double a3, float a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = a1 + 16;
  swift_beginAccess();
  uint64_t v11 = (void *)MEMORY[0x1C18C9C60](v10);

  if (v11)
  {
    swift_beginAccess();
    uint64_t v12 = MEMORY[0x1C18C9C60](a2 + 16);
    if (v12)
    {
      int v13 = (void *)v12;
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v16 = *(void *)(a6 + 16);
        uint64_t v15 = *(void *)(a6 + 24);
        unint64_t v17 = (uint64_t *)(*(void *)(Strong + 56) + 24);
        swift_beginAccess();
        uint64_t v18 = *v17;
        swift_bridgeObjectRetain();
        char v19 = sub_1BFF896B4(v16, v15, v18);
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0 && a4 <= a3)
        {
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_1BFEFFC1C(&v20, v16, v15);
          swift_endAccess();
          swift_bridgeObjectRelease();
          type metadata accessor for FormatMicaData();
          sub_1C151CAEC();
          sub_1C151CABC();
        }

        swift_release();
      }
      else
      {
      }
    }
  }
}

void sub_1C0190D80(uint64_t a1, uint64_t a2, double a3, float a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = a1 + 16;
  swift_beginAccess();
  uint64_t v11 = (void *)MEMORY[0x1C18C9C60](v10);

  if (v11)
  {
    swift_beginAccess();
    uint64_t v12 = MEMORY[0x1C18C9C60](a2 + 16);
    if (v12)
    {
      int v13 = (void *)v12;
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      if (Strong)
      {
        uint64_t v16 = *(void *)(a6 + 16);
        uint64_t v15 = *(void *)(a6 + 24);
        unint64_t v17 = (uint64_t *)(*(void *)(Strong + 56) + 32);
        swift_beginAccess();
        uint64_t v18 = *v17;
        swift_bridgeObjectRetain();
        char v19 = sub_1BFF896B4(v16, v15, v18);
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0 && a4 <= a3)
        {
          swift_beginAccess();
          swift_bridgeObjectRetain();
          sub_1BFEFFC1C(&v20, v16, v15);
          swift_endAccess();
          swift_bridgeObjectRelease();
          type metadata accessor for FormatMicaData();
          sub_1C151CAEC();
          sub_1C151CABC();
        }

        swift_release();
      }
      else
      {
      }
    }
  }
}

uint64_t FormatMicaNodeRenderer.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t FormatMicaNodeRenderer.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0190F90(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  return FormatMicaNodeRenderer.render<A>(context:layoutAttributes:view:micaData:token:traitCollection:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

unint64_t sub_1C0190FB4(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  sub_1C0192664(0, (unint64_t *)&qword_1EB85E068, (void (*)(uint64_t))sub_1C01543E0);
  uint64_t v3 = (void *)sub_1C152050C();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_1BFC44E98(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    int v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFC44E98(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1C01910DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  sub_1C0191BE0();
  uint64_t v3 = (void *)sub_1C152050C();
  LOBYTE(v4) = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_1BFFFC6AC(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    uint64_t v4 = *((unsigned __int8 *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFFFC6AC(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1C01911DC(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  sub_1C0192664(0, (unint64_t *)&qword_1EA197770, (void (*)(uint64_t))sub_1BFEBC4B4);
  uint64_t v3 = (void *)sub_1C152050C();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_1C107A920(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C107A920(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1C0191304(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1C019189C();
    uint64_t v3 = (void *)sub_1C152050C();
    for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_1C107A920(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1C01913D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1C0191834();
    uint64_t v3 = (void *)sub_1C152050C();
    for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_1C107A920(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

unint64_t sub_1C01914B0(double *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  sub_1C0062B54();
  uint64_t v3 = (void *)sub_1C152050C();
  double v4 = a1[4];
  uint64_t v5 = (void *)*((void *)a1 + 5);
  unint64_t result = sub_1BFE6E400(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v17 = v5;
    return (unint64_t)v3;
  }
  char v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(double *)(v3[6] + v9) = v4;
    *(void *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    double v4 = *(v8 - 1);
    uint64_t v14 = *(void **)v8;
    id v15 = v5;
    unint64_t result = sub_1BFE6E400(v4);
    char v8 = v13;
    uint64_t v5 = v14;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of FormatMicaNodeRendererType.render<A>(context:layoutAttributes:view:micaData:token:traitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 8))();
}

uint64_t method lookup function for FormatMicaNodeRenderer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatMicaNodeRenderer);
}

void sub_1C01915E8()
{
  if (!qword_1EB892710)
  {
    type metadata accessor for WebEmbedDatastoreCacheKey();
    sub_1C01922C4(255, &qword_1EB8900E0, (uint64_t (*)(uint64_t))type metadata accessor for WeakWebEmbedDataSourceManagerObserver, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB892710);
    }
  }
}

void sub_1C0191688()
{
  if (!qword_1EB86B510)
  {
    type metadata accessor for WebEmbedDatastoreCacheKey();
    sub_1C01922C4(255, &qword_1EB8900E0, (uint64_t (*)(uint64_t))type metadata accessor for WeakWebEmbedDataSourceManagerObserver, MEMORY[0x1E4FBB320]);
    sub_1C01919A4(&qword_1EB88BFB8, (void (*)(uint64_t))type metadata accessor for WebEmbedDatastoreCacheKey);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B510);
    }
  }
}

uint64_t sub_1C0191764(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C01917CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C0191834()
{
  if (!qword_1EA197760)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197760);
    }
  }
}

void sub_1C019189C()
{
  if (!qword_1EA197768)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197768);
    }
  }
}

void sub_1C0191904()
{
  if (!qword_1EA197780)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    sub_1C01919A4(&qword_1EA1961E8, type metadata accessor for OpenExternalURLOptionsKey);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197780);
    }
  }
}

uint64_t sub_1C01919A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C01919EC()
{
  if (!qword_1EB86B5A8)
  {
    sub_1C0191A70(255, (unint64_t *)&qword_1EB86AEE0, MEMORY[0x1E4FBAEA0]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B5A8);
    }
  }
}

void sub_1C0191A70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void, uint64_t, void))
{
  if (!*a2)
  {
    sub_1C01926D0(255, (unint64_t *)&qword_1EB880C40, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBAEA0]);
    unint64_t v7 = a3(a1, MEMORY[0x1E4FBB1A0], v6, MEMORY[0x1E4FBB1B0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C0191B08()
{
  if (!qword_1EB893BA0)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB893BA0);
    }
  }
}

void sub_1C0191B74(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C152051C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C0191BE0()
{
  if (!qword_1EA1977C8)
  {
    sub_1C01922C4(255, &qword_1EA1977D0, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB320]);
    sub_1C0191C7C();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1977C8);
    }
  }
}

unint64_t sub_1C0191C7C()
{
  unint64_t result = qword_1EA1977D8;
  if (!qword_1EA1977D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1977D8);
  }
  return result;
}

void sub_1C0191CD0()
{
  if (!qword_1EB87A4C8)
  {
    sub_1C152039C();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A4C8);
    }
  }
}

void sub_1C0191D3C()
{
  if (!qword_1EA1977F0)
  {
    type metadata accessor for OptionKey(255);
    sub_1C01919A4(&qword_1EA1961B8, type metadata accessor for OptionKey);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1977F0);
    }
  }
}

void sub_1C0191DDC()
{
  if (!qword_1EB87A3A0)
  {
    type metadata accessor for FormatLayoutView();
    sub_1C006F53C();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A3A0);
    }
  }
}

void sub_1C0191E48(uint64_t a1)
{
}

void sub_1C0191E78()
{
  if (!qword_1EB85E060)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A320);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85E060);
    }
  }
}

void sub_1C0191EF0(uint64_t a1)
{
}

void sub_1C0191F20()
{
  if (!qword_1EB860D90)
  {
    sub_1BFC39268(255, &qword_1EB85F200);
    sub_1BFD355A8();
    sub_1C0191FAC();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB860D90);
    }
  }
}

unint64_t sub_1C0191FAC()
{
  unint64_t result = qword_1EB85F230;
  if (!qword_1EB85F230)
  {
    sub_1BFC39268(255, &qword_1EB85F200);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F230);
  }
  return result;
}

void sub_1C0192014(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(void))
{
  if (!*a2)
  {
    sub_1C01923BC(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C0192080(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(void))
{
  if (!*a2)
  {
    sub_1C01923BC(255, a3, a4);
    unint64_t v5 = sub_1C152051C();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C01920EC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(void))
{
  sub_1C01923BC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1C019215C(uint64_t a1)
{
}

void sub_1C0192190(uint64_t a1)
{
}

void sub_1C01921C0(uint64_t a1)
{
}

void sub_1C01921F4(uint64_t a1)
{
}

void sub_1C0192228(uint64_t a1)
{
}

void sub_1C019225C(uint64_t a1)
{
}

void sub_1C0192290(uint64_t a1)
{
}

void sub_1C01922C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C0192328()
{
  if (!qword_1EA197860)
  {
    sub_1C0064840(255, (unint64_t *)&qword_1EB863370, (unint64_t *)&unk_1EB863390, 0x1E4F7E718, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197860);
    }
  }
}

void sub_1C01923BC(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = type metadata accessor for FormatObject();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C019241C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, void (*a5)(void))
{
  sub_1C0192014(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

void sub_1C0192490(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C152051C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C01924F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0192534(double a1)
{
  return sub_1C0192568((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128))sub_1C0190D80, a1);
}

uint64_t sub_1C0192550(double a1)
{
  return sub_1C0192568((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128))sub_1C0190BD8, a1);
}

uint64_t sub_1C0192568(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128), double a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for FormatMicaData() - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 40);
  v9.n128_u32[0] = *(_DWORD *)(v2 + 48);
  uint64_t v10 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 52) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v11.n128_f64[0] = a2;
  return a1(v5, v6, v7, v8, v10, v11, v9);
}

uint64_t sub_1C01925F8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFFE2384(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C0192664(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C152051C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C01926D0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, void, uint64_t, void))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, MEMORY[0x1E4FBB1A0], a3, MEMORY[0x1E4FBB1B0]);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C0192730()
{
  uint64_t v1 = v0;
  uint64_t v2 = self;
  if (objc_msgSend(v2, sel_areAnimationsEnabled))
  {
    swift_retain();
    sub_1C151894C();
    swift_release();
    if (aBlock)
    {
      *(unsigned char *)(v0 + 32) = 1;
    }
    else
    {
      swift_retain();
      sub_1C151895C();
      swift_release();
      char v16 = sub_1C0192B74;
      uint64_t v17 = v0;
      aBlocuint64_t k = MEMORY[0x1E4F143A8];
      uint64_t v13 = 1107296256;
      uint64_t v14 = sub_1BFC9FC68;
      id v15 = &block_descriptor_5;
      __n128 v9 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      char v16 = sub_1C0192B7C;
      uint64_t v17 = v1;
      aBlocuint64_t k = MEMORY[0x1E4F143A8];
      uint64_t v13 = 1107296256;
      uint64_t v14 = sub_1C0DF5960;
      id v15 = &block_descriptor_4;
      uint64_t v10 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v2, sel_animateWithDuration_animations_completion_, v9, v10, 0.2);
      _Block_release(v10);
      _Block_release(v9);
    }
    return;
  }
  uint64_t v3 = v0 + 24;
  unint64_t v4 = (void *)MEMORY[0x1C18C9C60](v0 + 24);
  if (v4)
  {
    unint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_view);

    if (!v6)
    {
      __break(1u);
      goto LABEL_15;
    }
    objc_msgSend(v6, sel_setNeedsLayout);
  }
  uint64_t v7 = (void *)MEMORY[0x1C18C9C60](v3);
  if (!v7) {
    return;
  }
  uint64_t v8 = v7;
  id v11 = objc_msgSend(v7, sel_view);

  if (!v11)
  {
LABEL_15:
    __break(1u);
    return;
  }
  objc_msgSend(v11, sel_layoutIfNeeded);
}

void sub_1C01929C0(uint64_t a1)
{
  uint64_t v1 = a1 + 24;
  uint64_t v2 = (void *)MEMORY[0x1C18C9C60](a1 + 24);
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_view);

    if (!v4)
    {
      __break(1u);
      goto LABEL_11;
    }
    objc_msgSend(v4, sel_setNeedsLayout);
  }
  unint64_t v5 = (void *)MEMORY[0x1C18C9C60](v1);
  if (!v5) {
    return;
  }
  id v6 = v5;
  id v7 = objc_msgSend(v5, sel_view);

  if (!v7)
  {
LABEL_11:
    __break(1u);
    return;
  }
  objc_msgSend(v7, sel_layoutIfNeeded);
}

uint64_t sub_1C0192AA4(uint64_t a1, uint64_t a2)
{
  swift_retain();
  sub_1C151895C();
  uint64_t result = swift_release();
  if (*(unsigned char *)(a2 + 32) == 1)
  {
    *(unsigned char *)(a2 + 32) = 0;
    return sub_1C0192730(result);
  }
  return result;
}

uint64_t sub_1C0192B10()
{
  swift_release();
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatConsoleAnimator()
{
  return self;
}

void sub_1C0192B74()
{
  sub_1C01929C0(v0);
}

uint64_t sub_1C0192B7C(uint64_t a1)
{
  return sub_1C0192AA4(a1, v1);
}

ValueMetadata *type metadata accessor for A12_V1()
{
  return &type metadata for A12_V1;
}

uint64_t sub_1C0192B9C(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0198514(0, &qword_1EA197958, (uint64_t (*)(void))sub_1C01984C0, (uint64_t)&type metadata for A12_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  __n128 v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01984C0();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C019857C(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0192DE4(uint64_t a1)
{
  unint64_t v2 = sub_1C01984C0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0192E20(uint64_t a1)
{
  unint64_t v2 = sub_1C01984C0();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C0192E5C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0198210(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C0192EA4(void *a1)
{
  return sub_1C0192B9C(a1);
}

uint64_t sub_1C0192EBC()
{
  sub_1C0197E04();
  return sub_1C151798C();
}

uint64_t sub_1C0192F38@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C0198514(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C0192FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v46 = a3;
  uint64_t v49 = sub_1C151635C();
  uint64_t v6 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v53 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v46 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v52 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v50 = (uint64_t)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v58 = a1;
  sub_1BFF1AFA4(a1, v50, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v54 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v48 = sub_1C151633C();
  uint64_t v47 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v49);
  char v67 = &type metadata for A12_V1;
  unint64_t v20 = sub_1C01864DC();
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v59 = sub_1C1520FAC();
  uint64_t v60 = v22;
  uint64_t v63 = 95;
  unint64_t v64 = 0xE100000000000000;
  uint64_t v61 = 45;
  unint64_t v62 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v47;
  *uint64_t v26 = v48;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v65, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  uint64_t v29 = (uint64_t)v53;
  sub_1BFF2389C(v50, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v52);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v30, 0, 1, v57);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  sub_1BFFFC630(v17, v18);
  char v67 = &type metadata for A12_V1;
  unint64_t v68 = v20;
  LOBYTE(v65) = v16;
  *((void *)&v65 + 1) = v17;
  unsigned __int8 v66 = v18;
  uint64_t v31 = v29;
  sub_1BFF1AFA4(v55, v29, (uint64_t (*)(void))v54);
  sub_1C00191E0(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = MEMORY[0x1E4FBC860];
  char v33 = (void *)(v32 + 16);
  swift_beginAccess();
  uint64_t v34 = *(void **)(v32 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v32 + 16) = v34;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v34 = sub_1BFFB83AC(0, v34[2] + 1, 1, v34);
    void *v33 = v34;
  }
  unint64_t v37 = v34[2];
  unint64_t v36 = v34[3];
  if (v37 >= v36 >> 1)
  {
    uint64_t v34 = sub_1BFFB83AC((void *)(v36 > 1), v37 + 1, 1, v34);
    void *v33 = v34;
  }
  v34[2] = v37 + 1;
  uint64_t v38 = &v34[2 * v37];
  v38[4] = sub_1C064667C;
  v38[5] = 0;
  swift_endAccess();
  uint64_t v39 = v69;
  uint64_t v40 = sub_1C001E608((uint64_t)&unk_1F1B66B88, 0, 0, v32, 4, 0, 0, 0);
  if (v39)
  {
    swift_release();
    swift_release();
    sub_1BFF1F104(v31, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v65);
  }
  else
  {
    uint64_t v42 = v40;
    swift_release();
    uint64_t v43 = type metadata accessor for A12_V1.Bound();
    uint64_t v44 = v46;
    v46[3] = v43;
    v44[4] = sub_1C019857C(&qword_1EA1978B8, (void (*)(uint64_t))type metadata accessor for A12_V1.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v44);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v65, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v31, (uint64_t)boxed_opaque_existential_0 + *(int *)(v43 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v43 + 28)) = v42;
  }
  return result;
}

double sub_1C0193668@<D0>(unsigned char *a1@<X8>)
{
  unint64_t v36 = a1;
  uint64_t v35 = sub_1C1517A9C();
  *(void *)&long long v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00191E0(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v5 = type metadata accessor for A12_V1.Bound();
  uint64_t v6 = v1 + *(int *)(v5 + 24);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = *(int *)(v7 + 40);
  uint64_t v9 = v6;
  v33[1] = v6;
  uint64_t v10 = *(void *)(v6 + v8);
  uint64_t v11 = *(void *)(v10 + 16);
  double v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BFC66384(v11 + 16, (uint64_t)&v42);
  sub_1BFC66384(v11 + 56, (uint64_t)v41);
  double v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v42, v14 + 16);
  sub_1BFC773DC(v41, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v40[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v40, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v10 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v41);
  sub_1BFC66384(v15 + 56, (uint64_t)v40);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v41, v17 + 16);
  sub_1BFC773DC(v40, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v39[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v39, (uint64_t *)&v42);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  uint64_t v18 = v33[0];
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v19 = sub_1BFEB3714((uint64_t)&v42, *(void *)(*(void *)(v18 + *(int *)(v5 + 28)) + 16) - 1);
  *(void *)&long long v42 = inited;
  sub_1BFEB37F8(v19);
  uint64_t v20 = v42;
  v38[2] = v18;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C06472C0(v21, v20, (void (*)(char *, uint64_t))sub_1C0197DA0, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = *MEMORY[0x1E4FAB6D8];
  uint64_t v24 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v3, v23, v24);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v3, *MEMORY[0x1E4FAB8F0], v35);
  uint64_t v37 = v22;
  sub_1C0197EBC(0, &qword_1EA1978D8, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v35 = sub_1C1517BEC();
  uint64_t v25 = sub_1C1517BFC();
  long long v34 = v42;
  uint64_t v26 = v43;
  uint64_t v27 = v44;
  *(void *)&long long v42 = v22;
  *(void *)&v41[0] = v45;
  MEMORY[0x1F4188790](v25);
  sub_1C00191E0(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v42 = v28;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v29 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v36;
  unsigned char *v36 = 0;
  double result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v27;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  *((void *)v30 + 5) = v29;
  *((void *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1C0193C10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C0193CE0(uint64_t a1, uint64_t a2)
{
  sub_1C0198514(0, &qword_1EA1978F0, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)&v12[-v7];
  uint64_t v14 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 12;
  *uint64_t v8 = v9;
  (*(void (**)(uint64_t *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABA10], v5);
  uint64_t v13 = a2;
  uint64_t v10 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C0197EBC(0, &qword_1EA1978F8, MEMORY[0x1E4FAB6F0]);
  sub_1C0197E78(&qword_1EA197900, &qword_1EA1978F8, v10);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C0193ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  sub_1C0198514(0, &qword_1EA1978F0, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (uint64_t *)((char *)&v15 - v6);
  uint64_t v18 = a1;
  uint64_t v8 = sub_1C151729C();
  uint64_t v9 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v10, *MEMORY[0x1E4FAB4E8], v8);
  *uint64_t v7 = v9;
  uint64_t v11 = *(void (**)(uint64_t *, void, uint64_t))(v5 + 104);
  v11(v7, *MEMORY[0x1E4FAB940], v4);
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0197EBC(0, &qword_1EA197908, MEMORY[0x1E4FAB4D0]);
  sub_1C0197E78(&qword_1EA197910, &qword_1EA197908, v12);
  sub_1C151738C();
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v13(v7, v4);
  uint64_t v18 = a1;
  v11(v7, *MEMORY[0x1E4FAB9E0], v4);
  uint64_t v17 = v16;
  sub_1C151731C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v7, v4);
}

uint64_t sub_1C0194154(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2;
  uint64_t v27 = a1;
  sub_1C0198514(0, &qword_1EA1978F0, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (uint64_t *)((char *)&v24 - v6);
  uint64_t v30 = a1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 6;
  *uint64_t v7 = v8;
  unsigned int v26 = *MEMORY[0x1E4FABA10];
  uint64_t v25 = *(void (**)(uint64_t *))(v5 + 104);
  v25(v7);
  sub_1C0197F48();
  sub_1C0198514(0, &qword_1EA197920, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1529AE0;
  unint64_t v14 = v13 + v12;
  sub_1C003F3A8();
  uint64_t v16 = (void *)(v14 + *(int *)(v15 + 48));
  uint64_t v17 = *MEMORY[0x1E4FAB7E0];
  uint64_t v18 = sub_1C151789C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v14, v17, v18);
  *uint64_t v16 = 0x6C6F437468676972;
  v16[1] = 0xEB000000006E6D75;
  (*(void (**)(unint64_t, void, uint64_t))(v11 + 104))(v14, *MEMORY[0x1E4FAB5B0], v10);
  uint64_t v19 = v24;
  uint64_t v29 = v24;
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0197EBC(0, &qword_1EA197908, MEMORY[0x1E4FAB4D0]);
  sub_1C0197E78(&qword_1EA197910, &qword_1EA197908, v20);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void (**)(uint64_t *, uint64_t))(v5 + 8);
  v21(v7, v4);
  uint64_t v30 = v27;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = 6;
  *uint64_t v7 = v22;
  ((void (*)(uint64_t *, void, uint64_t))v25)(v7, v26, v4);
  uint64_t v28 = v19;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v21)(v7, v4);
}

uint64_t sub_1C019456C(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0198514(0, &qword_1EA1978F0, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v35 - v18;
  uint64_t v44 = v43;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = *MEMORY[0x1E4FAB9E0];
  uint64_t v43 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v19, v20, v16);
  if (!*(void *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v36 = v5;
  uint64_t v37 = v16;
  sub_1BFF1AFA4(a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), (uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v21 = qword_1F1B66CA8;
  uint64_t v22 = (char *)v10 + v8[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  unsigned int v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v21;
  *(uint64_t *)((char *)v10 + v8[6]) = 0;
  uint64_t v27 = *v26;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v14;
  *(&v35 - 3) = (uint64_t)v10;
  unint64_t v34 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v39 + 104))(v41, *MEMORY[0x1E4FAB8F8], v40, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v36);
  sub_1BFF1F104((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v14, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0197EBC(0, &qword_1EA197908, MEMORY[0x1E4FAB4D0]);
  sub_1C0197E78(&qword_1EA197910, &qword_1EA197908, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v19, v37);
}

uint64_t sub_1C0194B50(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a2;
  uint64_t v29 = a1;
  sub_1C0198514(0, &qword_1EA1978F0, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v4);
  uint64_t v9 = (void *)((char *)v28 - v8);
  uint64_t v43 = a1;
  unsigned int v40 = *MEMORY[0x1E4FABA28];
  uint64_t v39 = *(void (**)(char *, __n128))(v6 + 104);
  v39((char *)v28 - v8, v7);
  sub_1C0197F48();
  uint64_t v38 = v10;
  sub_1C0198514(0, &qword_1EA197920, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v32 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v35 = v15;
  uint64_t v36 = v14 | 7;
  uint64_t v37 = v15 + v13;
  uint64_t v16 = swift_allocObject();
  long long v34 = xmmword_1C1529AE0;
  *(_OWORD *)(v16 + 16) = xmmword_1C1529AE0;
  unsigned int v31 = *MEMORY[0x1E4FAB638];
  uint64_t v30 = *(void (**)(uint64_t))(v12 + 104);
  v30(v16 + v15);
  uint64_t v42 = a2;
  uint64_t v17 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0197EBC(0, &qword_1EA197908, MEMORY[0x1E4FAB4D0]);
  uint64_t v19 = v18;
  void v28[2] = sub_1C0197E78(&qword_1EA197910, &qword_1EA197908, v17);
  v28[1] = v19;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v20(v9, v5);
  uint64_t v21 = v29;
  uint64_t v43 = v29;
  uint64_t v22 = sub_1C151729C();
  uint64_t v23 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x1E4FAB4E8], v22);
  *uint64_t v9 = v23;
  uint64_t v25 = v39;
  ((void (*)(uint64_t *, void, uint64_t))v39)(v9, *MEMORY[0x1E4FAB940], v5);
  sub_1C151738C();
  v20(v9, v5);
  uint64_t v43 = v21;
  ((void (*)(uint64_t *, void, uint64_t))v25)(v9, v40, v5);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v34;
  ((void (*)(uint64_t, void, uint64_t))v30)(v26 + v35, v31, v32);
  uint64_t v41 = v33;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v20)(v9, v5);
}

uint64_t sub_1C0194FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0198514(0, &qword_1EA1978F0, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ *(void *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0197EBC(0, &qword_1EA197908, MEMORY[0x1E4FAB4D0]);
  sub_1C0197E78(&qword_1EA197910, &qword_1EA197908, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C01955A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0198514(0, &qword_1EA1978F0, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(void *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0197EBC(0, &qword_1EA197908, MEMORY[0x1E4FAB4D0]);
  sub_1C0197E78(&qword_1EA197910, &qword_1EA197908, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C0195B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a1;
  uint64_t v21 = a4;
  uint64_t v19 = a2;
  sub_1C0198514(0, &qword_1EA1978F0, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v18 - v9);
  uint64_t v24 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 3;
  *uint64_t v10 = v11;
  uint64_t v12 = *MEMORY[0x1E4FABA10];
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 104);
  v13(v10, v12, v7);
  uint64_t v23 = a2;
  uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0197EBC(0, &qword_1EA197908, MEMORY[0x1E4FAB4D0]);
  sub_1C0197E78(&qword_1EA197910, &qword_1EA197908, v14);
  sub_1C151734C();
  uint64_t v15 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v15(v10, v7);
  uint64_t v24 = v20;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 3;
  *uint64_t v10 = v16;
  v13(v10, v12, v7);
  uint64_t v22 = v19;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v15)(v10, v7);
}

uint64_t sub_1C0195E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0198514(0, &qword_1EA1978F0, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 4uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 3 * *(void *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0197EBC(0, &qword_1EA197908, MEMORY[0x1E4FAB4D0]);
  sub_1C0197E78(&qword_1EA197910, &qword_1EA197908, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C01963E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151794C();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0198514(0, &qword_1EA1978F0, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - v19;
  uint64_t v42 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E4FAB9E0], v17);
  if (*(void *)(a2 + 16) < 5uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v35 = KeyPath;
  uint64_t v36 = v17;
  sub_1BFF1AFA4(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 4 * *(void *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v22 = (char *)v11 + v9[5];
  uint64_t v23 = *MEMORY[0x1E4FAB8C8];
  uint64_t v24 = sub_1C1517A7C();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  uint64_t v26 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = 0;
  *(void *)((char *)v11 + v9[6]) = 5;
  uint64_t v27 = *v26;
  *(void *)((char *)v11 + v9[7]) = v27;
  uint64_t v28 = qword_1EB87CC48;
  id v29 = v27;
  if (v28 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v30 = swift_release();
  __n128 v31 = MEMORY[0x1F4188790](v30);
  *(&v35 - 4) = (uint64_t)v15;
  *(&v35 - 3) = (uint64_t)v11;
  unint64_t v34 = (unint64_t)v8;
  (*(void (**)(char *, void, uint64_t, __n128))(v37 + 104))(v39, *MEMORY[0x1E4FAB8F8], v38, v31);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v8, v41);
  sub_1BFF1F104((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F104((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v32 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C0197EBC(0, &qword_1EA197908, MEMORY[0x1E4FAB4D0]);
  sub_1C0197E78(&qword_1EA197910, &qword_1EA197908, v32);
  unint64_t v34 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v36);
}

uint64_t sub_1C01969C4@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A12_V1.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C0196AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C0192FF4(a1, a2, a3);
}

uint64_t sub_1C0196ACC()
{
  return sub_1C12BC478();
}

unint64_t sub_1C0196ADC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0196B0C();
  unint64_t result = sub_1C0196B60();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0196B0C()
{
  unint64_t result = qword_1EA1978A8;
  if (!qword_1EA1978A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1978A8);
  }
  return result;
}

unint64_t sub_1C0196B60()
{
  unint64_t result = qword_1EA1978B0;
  if (!qword_1EA1978B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1978B0);
  }
  return result;
}

uint64_t type metadata accessor for A12_V1.Bound()
{
  uint64_t result = qword_1EA1978C0;
  if (!qword_1EA1978C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C0196C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  uint64_t v25 = (const void *)(v21 + v24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C00191E0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  *(void *)(a1 + *(int *)(v32 + 28)) = *(void *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C0196F44(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  void v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F104((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C00191E0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    __n128 v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F104(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C00191E0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    __n128 v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C01973D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  uint64_t v18 = (const void *)(v16 + v17);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C00191E0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)(v15 + *(int *)(v24 + 40)) = *(void *)(v16 + *(int *)(v24 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C01976BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F104((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C00191E0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F104(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C00191E0(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C0197B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0197B2C);
}

uint64_t sub_1C0197B2C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C0197BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0197BF0);
}

void *sub_1C0197BF0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C0197C98()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C0197D48(uint64_t a1)
{
  uint64_t result = sub_1C019857C(&qword_1EA1978D0, (void (*)(uint64_t))type metadata accessor for A12_V1.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0197DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C0193C10(a1, a2, a3);
}

uint64_t sub_1C0197DA8(uint64_t a1)
{
  return sub_1C0193CE0(a1, *(void *)(v1 + 16));
}

unint64_t sub_1C0197DB0()
{
  unint64_t result = qword_1EA1978E0;
  if (!qword_1EA1978E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1978E0);
  }
  return result;
}

unint64_t sub_1C0197E04()
{
  unint64_t result = qword_1EA1978E8;
  if (!qword_1EA1978E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1978E8);
  }
  return result;
}

uint64_t sub_1C0197E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C01969C4(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C0197E60()
{
  return swift_deallocObject();
}

uint64_t sub_1C0197E70(uint64_t a1)
{
  return sub_1C0193ECC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0197E78(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0197EBC(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0197EBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A12_V1.Layout;
    v8[1] = &type metadata for A12_V1.Layout.Attributes;
    v8[2] = sub_1C0197DB0();
    v8[3] = sub_1C0197E04();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C0197F40(uint64_t a1)
{
  return sub_1C0194154(a1, *(void *)(v1 + 16));
}

void sub_1C0197F48()
{
  if (!qword_1EA197918)
  {
    sub_1C0198514(255, &qword_1EA197920, (uint64_t (*)(void))sub_1C0197DB0, (uint64_t)&type metadata for A12_V1.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197918);
    }
  }
}

uint64_t sub_1C0197FD8(uint64_t a1)
{
  return sub_1C019456C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0197FE0(uint64_t a1)
{
  return sub_1C0194B50(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0197FE8(uint64_t a1)
{
  return sub_1C0195B7C(a1, *(void *)(v1 + 16), (uint64_t)sub_1C0198080, (uint64_t)sub_1C0198088);
}

uint64_t sub_1C019802C(uint64_t a1)
{
  return sub_1C0195B7C(a1, *(void *)(v1 + 16), (uint64_t)sub_1C0198070, (uint64_t)sub_1C0198078);
}

uint64_t sub_1C0198070(uint64_t a1)
{
  return sub_1C0195E08(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0198078(uint64_t a1)
{
  return sub_1C01963E8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0198080(uint64_t a1)
{
  return sub_1C0194FC4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C0198088(uint64_t a1)
{
  return sub_1C01955A0(a1, *(void *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V1.Layout.Attributes()
{
  return &type metadata for A12_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V1.Layout()
{
  return &type metadata for A12_V1.Layout;
}

unint64_t sub_1C01980B4()
{
  unint64_t result = qword_1EA197928;
  if (!qword_1EA197928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197928);
  }
  return result;
}

unint64_t sub_1C019810C()
{
  unint64_t result = qword_1EA197930;
  if (!qword_1EA197930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197930);
  }
  return result;
}

unint64_t sub_1C0198164()
{
  unint64_t result = qword_1EA197938;
  if (!qword_1EA197938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197938);
  }
  return result;
}

unint64_t sub_1C01981BC()
{
  unint64_t result = qword_1EA197940;
  if (!qword_1EA197940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197940);
  }
  return result;
}

uint64_t sub_1C0198210@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C0198514(0, &qword_1EA197948, (uint64_t (*)(void))sub_1C01984C0, (uint64_t)&type metadata for A12_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01984C0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C019857C(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  uint64_t v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C01984C0()
{
  unint64_t result = qword_1EA197950;
  if (!qword_1EA197950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197950);
  }
  return result;
}

void sub_1C0198514(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C019857C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A12_V1.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0198690);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C01986CC()
{
  unint64_t result = qword_1EA197960;
  if (!qword_1EA197960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197960);
  }
  return result;
}

unint64_t sub_1C0198724()
{
  unint64_t result = qword_1EA197968;
  if (!qword_1EA197968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197968);
  }
  return result;
}

unint64_t sub_1C019877C()
{
  unint64_t result = qword_1EA197970;
  if (!qword_1EA197970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197970);
  }
  return result;
}

double EngagementBannerViewLayoutOptions.boundingSize.getter()
{
  return *(double *)v0;
}

double EngagementBannerViewLayoutOptions.screenScale.getter()
{
  return *(double *)(v0 + 16);
}

double EngagementBannerViewLayoutOptions.layoutMargins.getter()
{
  return *(double *)(v0 + 24);
}

double EngagementBannerViewLayoutOptions.padding.getter()
{
  return *(double *)(v0 + 56);
}

void EngagementBannerViewLayoutOptions.init(boundingSize:screenScale:layoutMargins:padding:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
  a1[4] = a6;
  a1[5] = a7;
  a1[6] = a8;
  a1[7] = a9;
}

ValueMetadata *type metadata accessor for EngagementBannerViewLayoutOptions()
{
  return &type metadata for EngagementBannerViewLayoutOptions;
}

ValueMetadata *type metadata accessor for EngagementBannerViewLayoutOptions.Embedded()
{
  return &type metadata for EngagementBannerViewLayoutOptions.Embedded;
}

BOOL static ConcernType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ConcernType.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t ConcernType.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C01988BC()
{
  unint64_t result = qword_1EA197978;
  if (!qword_1EA197978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197978);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConcernType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01989DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConcernType()
{
  return &type metadata for ConcernType;
}

void sub_1C0198A14(unsigned char *a1, uint64_t a2, void *a3)
{
  unsigned int v4 = &a1[qword_1EB882D30];
  *unsigned int v4 = 0;
  v4[1] = 0xE000000000000000;
  a1[qword_1EB8877D0] = 0;
  id v5 = a3;

  sub_1C152040C();
  __break(1u);
}

id sub_1C0198AA0(uint64_t a1, CGFloat a2, CGFloat a3)
{
  if (*((unsigned char *)v3 + qword_1EB8877D0) == 1)
  {
    objc_msgSend(v3, sel_bounds);
    CGRect v12 = CGRectInset(v11, -20.0, -20.0);
    v10.x = a2;
    v10.y = a3;
    if (CGRectContainsPoint(v12, v10)) {
      id v6 = v3;
    }
    else {
      return 0;
    }
  }
  else
  {
    v9.receiver = v3;
    v9.super_class = (Class)swift_getObjectType();
    return objc_msgSendSuper2(&v9, sel_hitTest_withEvent_, a1, a2, a3);
  }
  return v3;
}

id sub_1C0198B60(void *a1, CGFloat a2, CGFloat a3, uint64_t a4, void *a5)
{
  id v9 = a5;
  id v10 = a1;
  id v11 = sub_1C0198AA0((uint64_t)a5, a2, a3);

  return v11;
}

uint64_t sub_1C0198BDC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0198BF0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0198C04()
{
  return type metadata accessor for FormatImageView();
}

uint64_t sub_1C0198C0C()
{
  return *(unsigned __int8 *)(*v0 + qword_1EB8877D0);
}

uint64_t sub_1C0198C20()
{
  uint64_t v1 = *(void *)(*v0 + qword_1EB882D30);
  swift_bridgeObjectRetain();
  return v1;
}

void *LayeredMediaViewModelFactory.viewModel<A>(for:filters:)(uint64_t a1, uint64_t a2)
{
  int v3 = (void *)sub_1C151E24C();
  uint64_t v4 = *(v3 - 1);
  MEMORY[0x1F4188790](v3);
  id v6 = (void *)((char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  *id v6 = sub_1C151F56C();
  (*(void (**)(uint64_t *, void, void *))(v4 + 104))(v6, *MEMORY[0x1E4FBCBD8], v3);
  char v7 = sub_1C151E26C();
  (*(void (**)(uint64_t *, void *))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t v13 = sub_1C151ADFC();
    swift_retain();
    uint64_t v14 = sub_1C0198FB4(v13);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v15 = sub_1C151ADEC();
    uint64_t v17 = v16;
  }
  else
  {
    __break(1u);
    swift_once();
    id v8 = (id)qword_1EB93C270;
    sub_1C151F36C();
    sub_1BFFDEB20();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
    uint64_t v21 = 0;
    unint64_t v22 = 0xE000000000000000;
    v20[2] = v3;
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
    sub_1C152036C();
    uint64_t v10 = v21;
    unint64_t v11 = v22;
    *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v9 + 64) = sub_1BFE9C558();
    *(void *)(v9 + 32) = v10;
    *(void *)(v9 + 40) = v11;
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1C151ADEC();
    uint64_t v17 = v12;

    uint64_t v14 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for LayeredMediaViewModel();
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v15;
  v18[3] = v17;
  v18[4] = v14;
  v18[5] = a2;
  swift_bridgeObjectRetain();
  return v18;
}

uint64_t LayeredMediaViewModelFactory.deinit()
{
  swift_release();
  return v0;
}

uint64_t LayeredMediaViewModelFactory.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0198FB4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v57 = MEMORY[0x1E4FBC860];
    sub_1C05F6AC4(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = v57;
    for (int64_t i = v1 - 1; ; --i)
    {
      sub_1C0199430(v4, (uint64_t)v55);
      sub_1C0199430((uint64_t)v55, (uint64_t)v56);
      if (sub_1C019948C((uint64_t)v56) == 1)
      {
        id v6 = (long long *)sub_1C0199498((uint64_t)v56);
        id v7 = objc_allocWithZone(MEMORY[0x1E4F9F8C8]);
        sub_1C0199430((uint64_t)v55, (uint64_t)v39);
        uint64_t v8 = sub_1C0199498((uint64_t)v39);
        sub_1C0199430((uint64_t)v55, (uint64_t)v40);
        uint64_t v9 = sub_1C0199498((uint64_t)v40);
        sub_1C01994A8(v9);
        sub_1C01994A8(v8);
        id v10 = objc_msgSend(v7, sel_init);
        sub_1C0199650(0, &qword_1EB85C8E8, (unint64_t *)&qword_1EB85DFA8);
        id v12 = objc_allocWithZone(v11);
        id v13 = v10;
        uint64_t v14 = sub_1C151A04C();
        sub_1C01994FC((uint64_t)v55);
        long long v45 = v6[4];
        long long v46 = v6[5];
        v47[0] = v6[6];
        *(_OWORD *)((char *)v47 + 9) = *(long long *)((char *)v6 + 105);
        long long v41 = *v6;
        long long v42 = v6[1];
        long long v43 = v6[2];
        long long v44 = v6[3];
        uint64_t v48 = v14;
        id v49 = v13;
        *(_OWORD *)&v52[32] = v45;
        *(_OWORD *)&v52[48] = v46;
        *(_OWORD *)uint64_t v53 = v47[0];
        *(_OWORD *)&v53[9] = *(_OWORD *)((char *)v47 + 9);
        long long v50 = v41;
        long long v51 = v42;
        *(_OWORD *)uint64_t v52 = v43;
        *(_OWORD *)&v52[16] = v44;
        sub_1C01995D4((uint64_t)&v48);
      }
      else
      {
        uint64_t v15 = sub_1C0199498((uint64_t)v56);
        uint64_t v29 = *(void *)(v15 + 8);
        uint64_t v30 = *(void *)v15;
        char v16 = *(unsigned char *)(v15 + 16);
        uint64_t v31 = *(void *)(v15 + 24);
        uint64_t v58 = v4;
        long long v34 = *(_OWORD *)(v15 + 56);
        long long v35 = *(_OWORD *)(v15 + 40);
        long long v33 = *(_OWORD *)(v15 + 72);
        uint64_t v32 = *(void *)(v15 + 88);
        char v27 = *(unsigned char *)(v15 + 96);
        char v28 = *(unsigned char *)(v15 + 32);
        uint64_t v36 = *(void *)(v15 + 104);
        char v26 = *(unsigned char *)(v15 + 112);
        id v17 = objc_allocWithZone(MEMORY[0x1E4F9F8C0]);
        sub_1C0199430((uint64_t)v55, (uint64_t)v40);
        sub_1C0199498((uint64_t)v40);
        sub_1C0199430((uint64_t)v55, (uint64_t)&v41);
        sub_1C0199498((uint64_t)&v41);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v18 = objc_msgSend(v17, sel_init);
        sub_1C0199650(0, &qword_1EB85C8E0, (unint64_t *)&unk_1EB85DF90);
        id v20 = objc_allocWithZone(v19);
        id v21 = v18;
        uint64_t v22 = sub_1C151A04C();
        sub_1C01994FC((uint64_t)v55);
        uint64_t v48 = v22;
        id v49 = v21;
        *(void *)&long long v50 = v30;
        *((void *)&v50 + 1) = v29;
        LOBYTE(v51) = v16;
        *(_DWORD *)((char *)&v51 + 1) = *(_DWORD *)v39;
        DWORD1(v51) = *(_DWORD *)&v39[3];
        *((void *)&v51 + 1) = v31;
        v52[0] = v28;
        uint64_t v4 = v58;
        *(_DWORD *)&v52[4] = *(_DWORD *)&v38[3];
        *(_DWORD *)&v52[1] = *(_DWORD *)v38;
        *(_OWORD *)&v52[8] = v35;
        *(_OWORD *)&v52[24] = v34;
        *(_OWORD *)&v52[40] = v33;
        *(void *)&v52[56] = v32;
        v53[0] = v27;
        *(_DWORD *)&v53[4] = *(_DWORD *)&v37[3];
        *(_DWORD *)&v53[1] = *(_DWORD *)v37;
        *(void *)&v53[8] = v36;
        v53[16] = v26;
        sub_1C01996A8((uint64_t)&v48);
      }
      sub_1C01995F4((uint64_t)&v48, (uint64_t)v54);
      uint64_t v57 = v2;
      unint64_t v24 = *(void *)(v2 + 16);
      unint64_t v23 = *(void *)(v2 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1C05F6AC4(v23 > 1, v24 + 1, 1);
        uint64_t v2 = v57;
      }
      *(void *)(v2 + 16) = v24 + 1;
      sub_1C01995F4((uint64_t)v54, v2 + 144 * v24 + 32);
      if (!i) {
        break;
      }
      v4 += 128;
    }
  }
  return v2;
}

uint64_t method lookup function for LayeredMediaViewModelFactory(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LayeredMediaViewModelFactory);
}

uint64_t sub_1C0199430(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C019948C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 120) >> 7;
}

uint64_t sub_1C0199498(uint64_t result)
{
  *(unsigned char *)(result + 120) &= ~0x80u;
  return result;
}

uint64_t sub_1C01994A8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C01994FC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0199560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  swift_bridgeObjectRelease();
  if (a16 < 0) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01995D4(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 136);
  *(void *)result &= 0xFFFFFFFFFFFFFF8uLL;
  *(unsigned char *)(result + 136) = v1 & 1 | 0x80;
  return result;
}

uint64_t sub_1C01995F4(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C0199650(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1BFC39268(255, a3);
    unint64_t v4 = sub_1C151A07C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C01996A8(uint64_t result)
{
  char v1 = *(unsigned char *)(result + 136) & 1;
  *(void *)result &= 0xFFFFFFFFFFFFFF8uLL;
  *(unsigned char *)(result + 136) = v1;
  return result;
}

uint64_t FeedSlot.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedSlot.feedItemIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.feedItemIdentifierSelectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.feedItemIdentifierOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.feedItemIdentifierAuxiliaries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.feedOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.feedSelectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedSlot.init(identifier:feedItemIdentifiers:feedItemIdentifierSelectors:feedItemIdentifierOptions:feedItemIdentifierAuxiliaries:feedOptions:feedSelectors:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

double sub_1C0199738@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v36 = a3;
  uint64_t v8 = type metadata accessor for FeedItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  Class v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a2;
  uint64_t v12 = a2[1];
  *(_OWORD *)long long v43 = *((_OWORD *)a2 + 1);
  uint64_t v14 = a2[4];
  uint64_t v38 = a2[5];
  uint64_t v39 = v14;
  uint64_t v37 = a2[6];
  uint64_t v35 = a2[7];
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v41 = v12;
  uint64_t v42 = v13;
  if (v15)
  {
    uint64_t v34 = a5;
    uint64_t v44 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v15, 0);
    uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v33 = a1;
    uint64_t v17 = a1 + ((v16 + 32) & ~v16);
    uint64_t v18 = *(void *)(v9 + 72);
    uint64_t v19 = v44;
    do
    {
      sub_1BFEE6734(v17, (uint64_t)v11);
      uint64_t v20 = FeedItem.identifier.getter();
      uint64_t v22 = v21;
      sub_1BFEE6798((uint64_t)v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v44;
      }
      unint64_t v24 = *(void *)(v19 + 16);
      unint64_t v23 = *(void *)(v19 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1BFF661B8(v23 > 1, v24 + 1, 1);
        uint64_t v19 = v44;
      }
      *(void *)(v19 + 16) = v24 + 1;
      uint64_t v25 = v19 + 16 * v24;
      *(void *)(v25 + 32) = v20;
      *(void *)(v25 + 40) = v22;
      v17 += v18;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    a5 = v34;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x1E4FBC860];
  }
  uint64_t v34 = sub_1BFEF4060(v19);
  uint64_t v26 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v26);
  sub_1BFEBC4B4();
  uint64_t v33 = sub_1C151E36C();
  MEMORY[0x1F4188790](v33);
  sub_1BFD48758(0);
  uint64_t v32 = sub_1C151E36C();
  MEMORY[0x1F4188790](v32);
  uint64_t v27 = sub_1C151E36C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v41;
  swift_bridgeObjectRelease();
  *(void *)a5 = v42;
  *(void *)(a5 + 8) = v28;
  uint64_t v29 = v33;
  *(void *)(a5 + 16) = v34;
  *(void *)(a5 + 24) = v29;
  *(void *)(a5 + 32) = v32;
  *(void *)(a5 + 40) = v27;
  double result = v43[0];
  *(_OWORD *)(a5 + 48) = *(_OWORD *)v43;
  return result;
}

uint64_t sub_1C0199B34(uint64_t *a1, void *a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *a3;
  uint64_t v10 = a3[1];
  uint64_t v12 = *a4;
  sub_1BFE99C6C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C1527210;
  *(void *)(v13 + 32) = a5;
  *(void *)(v13 + 40) = a6;
  *(void *)(v13 + 48) = v11;
  *(void *)(v13 + 56) = v10;
  sub_1BFE99C6C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C151E55C();
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  *a1 = v14;
  a1[1] = v16;
  *a2 = v12;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0199C54(uint64_t *a1, void *a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *a3;
  uint64_t v11 = a3[1];
  uint64_t v13 = *a4;
  uint64_t v12 = a4[1];
  sub_1BFE99C6C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1527210;
  *(void *)(v14 + 32) = a5;
  *(void *)(v14 + 40) = a6;
  *(void *)(v14 + 48) = v10;
  *(void *)(v14 + 56) = v11;
  sub_1BFE99C6C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C151E55C();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  *a1 = v15;
  a1[1] = v17;
  *a2 = v13;
  a2[1] = v12;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *assignWithCopy for FeedSlot(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedSlot(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedSlot()
{
  return &type metadata for FeedSlot;
}

uint64_t sub_1C0199EF4(uint64_t *a1, void *a2, uint64_t *a3, uint64_t *a4)
{
  return sub_1C0199B34(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1C0199F10(uint64_t *a1, void *a2, uint64_t *a3, uint64_t *a4)
{
  return sub_1C0199C54(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1C0199F2C(uint64_t *a1, void *a2, uint64_t *a3, uint64_t *a4)
{
  return sub_1C0199EF4(a1, a2, a3, a4);
}

uint64_t FormatSpaceNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSpaceNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSpaceNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatSpaceNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  *a1 = v3;
  return sub_1BFF35EA4(v3);
}

unint64_t FormatSpaceNode.size.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v1 + 32) = v2;
  return sub_1BFF322A8(v3);
}

uint64_t (*FormatSpaceNode.size.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatSpaceNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C019A154(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSpaceNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSpaceNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

void *FormatSpaceNode.__allocating_init(identifier:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_allocObject();
  uint64_t v9 = *a3;
  swift_beginAccess();
  v8[2] = a1;
  v8[3] = a2;
  void v8[4] = v9;
  swift_beginAccess();
  v8[5] = a4;
  return v8;
}

void *FormatSpaceNode.init(identifier:size:adjustments:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8 = *a3;
  swift_beginAccess();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = v8;
  swift_beginAccess();
  v4[5] = a4;
  return v4;
}

uint64_t FormatSpaceNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSpaceNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C019A3D8(uint64_t a1)
{
  uint64_t result = sub_1C019A4F8(&qword_1EA197980);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C019A41C(void *a1)
{
  a1[1] = sub_1C019A4F8(&qword_1EB87E1E8);
  a1[2] = sub_1C019A4F8(&qword_1EB85FEC8);
  uint64_t result = sub_1C019A4F8(&qword_1EA197988);
  a1[3] = result;
  return result;
}

uint64_t sub_1C019A4A8(void *a1, void *a2)
{
  return static FormatSpaceNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C019A4B4(uint64_t a1)
{
  uint64_t result = sub_1C019A4F8((unint64_t *)&unk_1EA197990);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C019A4F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatSpaceNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C019A538@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C019A588@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSpaceNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatSpaceNode);
}

uint64_t dispatch thunk of FormatSpaceNode.__allocating_init(identifier:size:adjustments:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t PuzzleEmbedAccessoryConfigMessageHandler.delegate.getter()
{
  return sub_1C019A6B4(&OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate);
}

uint64_t PuzzleEmbedAccessoryConfigMessageHandler.delegate.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C019A70C(a1, a2, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate);
}

uint64_t (*PuzzleEmbedAccessoryConfigMessageHandler.delegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C019A6A4;
}

uint64_t PuzzleEmbedAccessoryConfigMessageHandler.accessoryConfigDataSource.getter()
{
  return sub_1C019A6B4(&OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource);
}

uint64_t sub_1C019A6B4(void *a1)
{
  uint64_t v2 = v1 + *a1;
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v2);
}

uint64_t PuzzleEmbedAccessoryConfigMessageHandler.accessoryConfigDataSource.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C019A70C(a1, a2, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource);
}

uint64_t sub_1C019A70C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3 + *a3;
  swift_beginAccess();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*PuzzleEmbedAccessoryConfigMessageHandler.accessoryConfigDataSource.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C019A6A4;
}

id PuzzleEmbedAccessoryConfigMessageHandler.__allocating_init(puzzleComponentsViewProvider:scriptsManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_lastReceivedValue] = MEMORY[0x1E4FBC868];
  uint64_t v8 = &v7[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_puzzleComponentsViewProvider];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_scriptsManager] = a3;
  v10.receiver = v7;
  v10.super_class = v3;
  return objc_msgSendSuper2(&v10, sel_init);
}

id PuzzleEmbedAccessoryConfigMessageHandler.init(puzzleComponentsViewProvider:scriptsManager:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_lastReceivedValue] = MEMORY[0x1E4FBC868];
  uint64_t v8 = &v3[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_puzzleComponentsViewProvider];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_scriptsManager] = a3;
  v10.receiver = v3;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

id PuzzleEmbedAccessoryConfigMessageHandler.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void PuzzleEmbedAccessoryConfigMessageHandler.init()()
{
}

id PuzzleEmbedAccessoryConfigMessageHandler.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C019AAC4(uint64_t a1, uint64_t a2)
{
  return sub_1C019AB70(a1, a2, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate);
}

uint64_t sub_1C019AAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C019ABC8(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate);
}

uint64_t (*sub_1C019AADC(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C019A6A4;
}

uint64_t sub_1C019AB64(uint64_t a1, uint64_t a2)
{
  return sub_1C019AB70(a1, a2, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource);
}

uint64_t sub_1C019AB70(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3 + *a3;
  swift_beginAccess();
  return MEMORY[0x1C18C9C60](v4);
}

uint64_t sub_1C019ABBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C019ABC8(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource);
}

uint64_t sub_1C019ABC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = v5 + *a5;
  swift_beginAccess();
  *(void *)(v7 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1C019AC30(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C18C9C60](v5);
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1C019A6A4;
}

void sub_1C019ACB8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

void sub_1C019AD44(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v16 = *(_OWORD *)a1;
  long long v17 = v2;
  char v18 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = a2 + 16;
  swift_beginAccess();
  uint64_t v4 = MEMORY[0x1C18C9C60](v3);
  if (v4)
  {
    uint64_t v5 = (char *)v4;
    if (v18 == 1)
    {
      uint64_t v6 = objc_allocWithZone((Class)type metadata accessor for PuzzleEmbedScript());
      sub_1C019BCB0((uint64_t)&v16);
      id v7 = sub_1C019BB54(&v16, v6);
      sub_1C019BCE8((uint64_t)&v16);
      uint64_t v8 = *(void **)&v5[OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_scriptsManager];
      swift_unknownObjectRetain();
      id v9 = v7;
      objc_msgSend(v8, sel_executeScript_completion_, v9, 0);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = v4 + OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate;
      swift_beginAccess();
      if (MEMORY[0x1C18C9C60](v10))
      {
        uint64_t v11 = *(void *)(v10 + 8);
        uint64_t ObjectType = swift_getObjectType();
        v14[0] = v16;
        v14[1] = v17;
        char v15 = v18;
        uint64_t v13 = *(void (**)(char *, _UNKNOWN **, _OWORD *, uint64_t, uint64_t))(v11 + 16);
        uint64_t v5 = v5;
        v13(v5, &protocol witness table for PuzzleEmbedAccessoryConfigMessageHandler, v14, ObjectType, v11);
        swift_unknownObjectRelease();
      }
    }
  }
}

void _s8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandlerC10didReceive_14securityOriginySo9SWMessage_p_So0m8SecurityL0_ptF_0(void *a1)
{
  id v2 = objc_msgSend(a1, sel_body);
  uint64_t v3 = sub_1C151E33C();

  unint64_t v4 = sub_1C147180C(v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    uint64_t v5 = v64 + OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource;
    swift_beginAccess();
    if (MEMORY[0x1C18C9C60](v5)
      && (uint64_t v6 = *(void *)(v5 + 8),
          uint64_t v7 = swift_getObjectType(),
          LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v7, v6),
          swift_unknownObjectRelease(),
          (v6 & 1) == 0))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = swift_bridgeObjectRetain();
      PuzzleAccessoryInputConfiguration.init(with:)(v8, (uint64_t)&v67);
      uint64_t v9 = v68;
      uint64_t v56 = v69;
      uint64_t v57 = v70;
      uint64_t v58 = v71;
      uint64_t v61 = v67;
      uint64_t v62 = v72;
      unint64_t v10 = v74;
      uint64_t v63 = v73;
      uint64_t v55 = v75;
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      unint64_t v60 = v10;
      uint64_t v11 = sub_1C15198DC();
      __swift_project_value_buffer(v11, (uint64_t)qword_1EB93C7A8);
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_1C15198AC();
      os_log_type_t v13 = sub_1C151F38C();
      uint64_t v59 = v9;
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        uint64_t v67 = v15;
        *(_DWORD *)uint64_t v14 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v16 = sub_1C151E34C();
        unint64_t v18 = v17;
        swift_bridgeObjectRelease();
        v66[0] = sub_1BFDA76EC(v16, v18, &v67);
        sub_1C151FE1C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BFC31000, v12, v13, "PuzzleEmbedAccessoryConfigMessageHandler received: %s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v15, -1, -1);
        uint64_t v19 = v14;
        uint64_t v9 = v59;
        MEMORY[0x1C18C9B00](v19, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      if (!MEMORY[0x1C18C9C60](v5)
        || (uint64_t v29 = *(void *)(v5 + 8),
            uint64_t ObjectType = swift_getObjectType(),
            LOBYTE(v29) = (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v29 + 8))(v64, &protocol witness table for PuzzleEmbedAccessoryConfigMessageHandler, ObjectType, v29), swift_unknownObjectRelease(), (v29 & 1) != 0))
      {
        sub_1C12205D8(v4);
        id v31 = objc_allocWithZone(MEMORY[0x1E4F1C9E8]);
        uint64_t v32 = (void *)sub_1C151E32C();
        swift_bridgeObjectRelease();
        id v33 = objc_msgSend(v31, sel_initWithDictionary_, v32);

        uint64_t v34 = swift_bridgeObjectRetain();
        sub_1C12205D8(v34);
        swift_bridgeObjectRelease();
        uint64_t v35 = (void *)sub_1C151E32C();
        swift_bridgeObjectRelease();
        unsigned __int8 v36 = objc_msgSend(v33, sel_isEqualToDictionary_, v35);

        if (v36)
        {
          swift_bridgeObjectRelease();
          sub_1C019BA1C(v61, v9, v56, v57, v58, v62, v63, v60);
          uint64_t v21 = sub_1C15198AC();
          os_log_type_t v37 = sub_1C151F38C();
          if (!os_log_type_enabled(v21, v37))
          {
LABEL_19:

            return;
          }
          uint64_t v38 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v38 = 0;
          _os_log_impl(&dword_1BFC31000, v21, v37, "No changes detected for the received accessory config. Skipping...", v38, 2u);
          uint64_t v28 = v38;
LABEL_18:
          MEMORY[0x1C18C9B00](v28, -1, -1);
          goto LABEL_19;
        }
      }
      *(void *)(v64 + OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_lastReceivedValue) = v4;
      swift_bridgeObjectRelease();
      if (MEMORY[0x1C18C9C60](v5))
      {
        uint64_t v39 = *(void *)(v5 + 8);
        uint64_t v40 = swift_getObjectType();
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v39 + 24))(&v67, v40, v39);
        swift_unknownObjectRelease();
        uint64_t v41 = v67;
        uint64_t v42 = (void *)v68;
      }
      else
      {
        uint64_t v41 = 0;
        uint64_t v42 = 0;
      }
      uint64_t v43 = *(void *)(v64
                      + OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_puzzleComponentsViewProvider
                      + 8);
      uint64_t v53 = (void *)v41;
      uint64_t v54 = swift_getObjectType();
      uint64_t v67 = v61;
      uint64_t v68 = v9;
      uint64_t v69 = v56;
      uint64_t v70 = v57;
      uint64_t v71 = v58;
      uint64_t v72 = v62;
      uint64_t v73 = v63;
      unint64_t v74 = v60;
      uint64_t v75 = v55;
      v66[0] = v41;
      v66[1] = v42;
      uint64_t v52 = v42;
      uint64_t v44 = swift_allocObject();
      swift_unknownObjectWeakInit();
      long long v45 = *(uint64_t (**)(uint64_t *, void *, void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v43 + 32);
      swift_retain();
      long long v46 = (void *)v45(&v67, v66, sub_1C019BA14, v44, v54, v43);
      uint64_t v48 = v47;
      swift_release_n();
      sub_1C019BA1C(v61, v59, v56, v57, v58, v62, v63, v60);
      uint64_t v49 = v64 + OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate;
      swift_beginAccess();
      if (MEMORY[0x1C18C9C60](v49))
      {
        uint64_t v50 = *(void *)(v49 + 8);
        uint64_t v51 = swift_getObjectType();
        (*(void (**)(uint64_t, _UNKNOWN **, void *, uint64_t, uint64_t, uint64_t))(v50 + 8))(v64, &protocol witness table for PuzzleEmbedAccessoryConfigMessageHandler, v46, v48, v51, v50);
        swift_unknownObjectRelease();
      }

      sub_1C019BB14(v53, v52);
    }
  }
  else
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C15198DC();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EB93C7A8);
    swift_unknownObjectRetain_n();
    uint64_t v21 = sub_1C15198AC();
    os_log_type_t v22 = sub_1C151F36C();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      uint64_t v67 = v65;
      *(_DWORD *)unint64_t v23 = 136315138;
      id v24 = objc_msgSend(a1, sel_body);
      sub_1C151E33C();

      uint64_t v25 = sub_1C151E34C();
      unint64_t v27 = v26;
      swift_bridgeObjectRelease();
      uint64_t v76 = sub_1BFDA76EC(v25, v27, &v67);
      sub_1C151FE1C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v21, v22, "PuzzleEmbedAccessoryConfigMessageHandler received invalid message %s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](v65, -1, -1);
      uint64_t v28 = v23;
      goto LABEL_18;
    }

    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_1C019B7A0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate, a2);
}

uint64_t sub_1C019B7AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_delegate);
}

uint64_t sub_1C019B7B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource, a2);
}

uint64_t keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v4);
  uint64_t v6 = *(void *)(v4 + 8);
  *a3 = result;
  a3[1] = v6;
  return result;
}

uint64_t sub_1C019B81C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, &OBJC_IVAR____TtC8NewsFeed40PuzzleEmbedAccessoryConfigMessageHandler_accessoryConfigDataSource);
}

uint64_t keypath_setTm(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *a2 + *a5;
  swift_beginAccess();
  *(void *)(v6 + 8) = v5;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.accessoryConfigDataSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.accessoryConfigDataSource.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerType.accessoryConfigDataSource.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerDelegate.puzzleEmbedAccessoryConfigMessageHandler(_:didUpdateAccessory:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandlerDelegate.puzzleEmbedAccessoryConfigMessageHandler(_:didTriggerEvent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigDataSource.skipUpdatesOnUnchangedConfig(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigDataSource.shouldProcessAccessoryConfigEvent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigDataSource.puzzleColorTheme.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for PuzzleEmbedAccessoryConfigMessageHandler()
{
  return self;
}

uint64_t method lookup function for PuzzleEmbedAccessoryConfigMessageHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleEmbedAccessoryConfigMessageHandler);
}

uint64_t dispatch thunk of PuzzleEmbedAccessoryConfigMessageHandler.__allocating_init(puzzleComponentsViewProvider:scriptsManager:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1C019B9B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C019B9DC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C019BA14(uint64_t a1)
{
  sub_1C019AD44(a1, v1);
}

void sub_1C019BA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1C019BAA8(a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_1C019BAA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((unint64_t)a3 >> 8 != 0xFFFFFFFF || a6 >= 4) {
    return sub_1C019BAC0(a1, a2, a3, a4, a5, a6);
  }
  return a1;
}

uint64_t sub_1C019BAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 >> 62) - 1 >= 2)
  {
    if (a6 >> 62) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_1C019BB14(void *a1, void *a2)
{
  if (a1)
  {
  }
}

id sub_1C019BB54(long long *a1, unsigned char *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  a2[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_queueable] = 0;
  long long v5 = a1[1];
  long long v14 = *a1;
  uint64_t v6 = &a2[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_identifier];
  *uint64_t v6 = 0xD00000000000001BLL;
  v6[1] = 0x80000001C16058B0;
  uint64_t v7 = &a2[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventName];
  *uint64_t v7 = 0xD00000000000001FLL;
  v7[1] = 0x80000001C16058D0;
  long long v13 = v5;
  sub_1BFED9C78();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1527210;
  *(void *)(inited + 32) = 25705;
  *(void *)(inited + 40) = 0xE200000000000000;
  uint64_t v9 = MEMORY[0x1E4FBB1A0];
  *(_OWORD *)(inited + 48) = v14;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = 0x64695F6D657469;
  *(void *)(inited + 88) = 0xE700000000000000;
  *(void *)(inited + 120) = v9;
  *(_OWORD *)(inited + 96) = v13;
  unint64_t v10 = a2;
  sub_1BFF59A8C((uint64_t)&v14);
  sub_1BFF59A8C((uint64_t)&v13);
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed17PuzzleEmbedScript_eventDetail] = sub_1BFF99224(inited);

  v12.receiver = v10;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_1C019BCB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C019BCE8(uint64_t a1)
{
  return a1;
}

uint64_t FeedDeferredCursor.identifier.getter()
{
  uint64_t v0 = sub_1BFE402EC();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t FeedDeferredCursor.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EB93C2F8;
  uint64_t v4 = sub_1C151631C();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_1C019BDCC(char *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a4;
  uint64_t v38 = *a3;
  uint64_t v11 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v41 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE5E6D4(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v31 - v17;
  char v19 = *a1;
  sub_1C151997C();
  sub_1C1519BFC();
  uint64_t result = swift_release();
  uint64_t v39 = v48;
  if (!v48)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v36 = v47;
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  uint64_t v21 = sub_1C151631C();
  uint64_t v22 = (uint64_t)v18;
  unint64_t v23 = *(uint64_t (**)(void))(*(void *)(v21 - 8) + 48);
  uint64_t v37 = v22;
  uint64_t result = v23();
  if (result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v34 = a6;
  uint64_t v35 = a5;
  sub_1C151997C();
  sub_1C1519BFC();
  swift_release();
  id v33 = v15;
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v23)(v15, 1, v21);
  if (result != 1)
  {
    char v46 = v19;
    uint64_t v32 = a3[3];
    uint64_t v24 = *(void *)(a2 + 112);
    type metadata accessor for FeedDeferredCursorGroup();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C151ECBC();
    uint64_t v25 = a3[2];
    uint64_t v26 = *(void *)(v38 + 80);
    uint64_t v27 = *(void *)(*(void *)(v38 + 96) + 8);
    swift_retain();
    uint64_t v28 = (uint64_t)v41;
    FeedContextFactoryType.createFeedContext()(v26, v27);
    uint64_t v29 = type metadata accessor for FeedDatabaseGroup();
    uint64_t v30 = MEMORY[0x1C18C6830](v24, v29);
    FeedJournal.init(entries:)(MEMORY[0x1E4FBC860], &v44);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    long long v42 = v44;
    uint64_t v43 = v45;
    swift_allocObject();
    return sub_1C019C240(v36, v39, v37, (uint64_t)v33, &v46, v32, v24, v31, v25, v28, 0, v30, &v42, v35, v34);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C019C170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long *a13, uint64_t a14, uint64_t a15)
{
  return sub_1C019C240(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1C019C240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, long long *a13, uint64_t a14, uint64_t a15)
{
  char v18 = *a5;
  uint64_t v29 = *((void *)a13 + 2);
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v19 = v15 + qword_1EB93C2F8;
  uint64_t v20 = sub_1C151631C();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  long long v25 = *a13;
  v21(v19, a3, v20);
  v21(v15 + qword_1EB93C2E0, a4, v20);
  *(unsigned char *)(v15 + qword_1EB93C320) = v18;
  *(void *)(v15 + qword_1EB93C600) = a6;
  *(void *)(v15 + qword_1EB93C308) = a7;
  *(void *)(v15 + qword_1EB93C300) = a8;
  *(void *)(v15 + qword_1EB93C328) = a9;
  sub_1C019CBB8(a10, v15 + qword_1EB93C2E8);
  *(void *)(v15 + qword_1EB93C310) = a11;
  *(void *)(v15 + qword_1EB93C318) = a12;
  uint64_t v22 = v15 + qword_1EB93C2F0;
  *(_OWORD *)uint64_t v22 = v25;
  *(void *)(v22 + 16) = v29;
  unint64_t v23 = (void *)(v15 + qword_1EB86FAD0);
  *unint64_t v23 = a14;
  v23[1] = a15;
  return v15;
}

uint64_t sub_1C019C3F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v41 = a1;
  uint64_t v4 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151631C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = *a2;
  uint64_t v16 = a2[1];
  uint64_t v17 = a2[2];
  uint64_t v18 = *(void *)(v2 + 16);
  uint64_t v39 = *(void *)(v2 + 24);
  uint64_t v40 = v18;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v19((char *)&v35 - v13, v2 + qword_1EB93C2F8, v7, v12);
  uint64_t v38 = v10;
  ((void (*)(char *, uint64_t, uint64_t))v19)(v10, v2 + qword_1EB93C2E0, v7);
  uint64_t v20 = *(void *)(v2 + qword_1EB93C600);
  v47[0] = *(unsigned char *)(v2 + qword_1EB93C320);
  uint64_t v21 = *(void *)(v2 + qword_1EB93C300);
  uint64_t v22 = *(void *)(v2 + qword_1EB93C328);
  uint64_t result = sub_1C019CC1C(v2 + qword_1EB93C2E8, (uint64_t)v6);
  uint64_t v24 = *(void *)(v2 + qword_1EB93C310);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    uint64_t v37 = v26;
    uint64_t v36 = *(void *)(v2 + qword_1EB93C318);
    uint64_t v27 = *(void *)(v2 + qword_1EB93C2F0 + 16);
    long long v43 = *(_OWORD *)(v2 + qword_1EB93C2F0);
    uint64_t v44 = v27;
    v42[0] = v15;
    v42[1] = v16;
    v42[2] = v17;
    uint64_t v28 = v39;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v35 = v20;
    uint64_t v29 = v22;
    uint64_t v30 = (uint64_t)v6;
    uint64_t v31 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BFE5BC98(&v43, v42, &v45);
    long long v43 = v45;
    uint64_t v44 = v46;
    uint64_t v33 = *(void *)(v2 + qword_1EB86FAD0);
    uint64_t v32 = *(void *)(v2 + qword_1EB86FAD0 + 8);
    swift_allocObject();
    uint64_t v34 = sub_1C019C240(v40, v28, (uint64_t)v14, (uint64_t)v38, v47, v35, v31, v21, v29, v30, v37, v36, &v43, v33, v32);
    swift_retain();
    return v34;
  }
  return result;
}

uint64_t sub_1C019C72C()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1C019C74C, 0, 0);
}

uint64_t sub_1C019C74C()
{
  uint64_t v4 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)(v0 + 16) + qword_1EB86FAD0)
                                       + **(int **)(*(void *)(v0 + 16) + qword_1EB86FAD0));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C019C82C;
  uint64_t v2 = *(void *)(v0 + 16);
  return v4(v2);
}

uint64_t sub_1C019C82C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_1C019C92C()
{
  uint64_t v0 = sub_1BFE402EC();
  swift_bridgeObjectRetain();
  return v0;
}

BOOL static FeedDeferredCursor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v4 || (char v5 = sub_1C1520A9C(), result = 0, (v5 & 1) != 0))
  {
    type metadata accessor for FeedDatabaseGroup();
    swift_getWitnessTable();
    if ((sub_1C151ED6C() & 1) != 0
      && (type metadata accessor for FeedDeferredCursorGroup(), swift_getWitnessTable(), (sub_1C151ED6C() & 1) != 0))
    {
      return *(void *)(a1 + qword_1EB93C310) == *(void *)(a2 + qword_1EB93C310);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL sub_1C019CAA4(uint64_t *a1, uint64_t *a2)
{
  return static FeedDeferredCursor.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C019CAB0@<X0>(uint64_t *a1@<X8>)
{
  return FeedDeferredCursor.shortDescription.getter(a1);
}

uint64_t sub_1C019CAD4()
{
  swift_getWitnessTable();
  return sub_1C15186EC();
}

uint64_t sub_1C019CB28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C019CB84()
{
  return swift_getWitnessTable();
}

uint64_t method lookup function for FeedDeferredCursor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedDeferredCursor);
}

uint64_t sub_1C019CBB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C019CC1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C019CC80()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C019CCC4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  *(void *)(v5 + 32) = a3;
  *(void *)(v5 + 40) = v4;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v7 = *v4;
  *(void *)(v5 + 48) = *(void *)(*v4 + 88);
  *(void *)(v5 + 56) = *(void *)(v7 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v5 + 64) = AssociatedTypeWitness;
  *(void *)(v5 + 72) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v5 + 80) = swift_task_alloc();
  *(void *)(v5 + 88) = swift_task_alloc();
  uint64_t v9 = sub_1C151631C();
  *(void *)(v5 + 96) = v9;
  *(void *)(v5 + 104) = *(void *)(v9 - 8);
  *(void *)(v5 + 112) = swift_task_alloc();
  sub_1BFCD9524();
  *(void *)(v5 + 120) = v10;
  *(void *)(v5 + 128) = swift_task_alloc();
  sub_1BFF97C40();
  *(void *)(v5 + 136) = swift_task_alloc();
  *(void *)(v5 + 144) = swift_task_alloc();
  *(void *)(v5 + 152) = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  *(void *)(v5 + 160) = swift_getAssociatedConformanceWitness();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  *(void *)(v5 + 168) = v11;
  *(void *)(v5 + 176) = *(void *)(v11 - 8);
  *(void *)(v5 + 184) = swift_task_alloc();
  *(void *)(v5 + 192) = swift_task_alloc();
  uint64_t v12 = swift_checkMetadataState();
  *(void *)(v5 + 200) = v12;
  *(void *)(v5 + 208) = *(void *)(v12 - 8);
  *(void *)(v5 + 216) = swift_task_alloc();
  *(void *)(v5 + 224) = swift_task_alloc();
  *(unsigned char *)(v5 + 264) = *a4;
  return MEMORY[0x1F4188298](sub_1C019D00C, 0, 0);
}

uint64_t sub_1C019D00C()
{
  char v59 = *(unsigned char *)(v0 + 264);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void **)(v0 + 40);
  uint64_t v5 = v3[2];
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v3[3];
  uint64_t v7 = v3[4];
  uint64_t v8 = *(void *)(*(void *)(v0 + 24) + *(void *)(**(void **)(v0 + 24) + 280));
  uint64_t v9 = sub_1C00C5A20(v2, v1);
  *(void *)(v0 + 232) = sub_1C02675A4(v4, v8, (uint64_t)v9, v10, (uint64_t)sub_1C00C5AD8, 0, v5, v6, v7, v2, v1);
  swift_release();
  if ((v59 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v11 = *(void *)(v0 + 224);
  uint64_t v50 = *(void *)(v0 + 216);
  uint64_t v12 = *(void *)(v0 + 200);
  uint64_t v13 = *(void *)(v0 + 208);
  uint64_t v14 = *(void *)(v0 + 192);
  uint64_t v52 = *(void *)(v0 + 184);
  uint64_t v15 = *(void *)(v0 + 168);
  uint64_t v16 = *(void *)(v0 + 160);
  uint64_t v57 = *(void *)(v0 + 152);
  uint64_t v60 = *(void *)(v0 + 176);
  uint64_t v53 = *(void *)(v0 + 144);
  uint64_t v55 = *(void *)(v0 + 128);
  uint64_t v54 = *(void *)(v0 + 120);
  uint64_t v51 = *(void *)(v0 + 104);
  uint64_t v56 = *(void *)(v0 + 96);
  uint64_t v49 = *(void *)(v0 + 56);
  uint64_t v47 = *(void (**)(void))(*(void *)(v0 + 48) + 64);
  uint64_t v48 = *(void *)(v0 + 48);
  v47();
  uint64_t v46 = *(void (**)(uint64_t))(v16 + 40);
  v46(v12);
  long long v45 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v45(v11, v12);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
  v44(v15, AssociatedConformanceWitness);
  long long v43 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  v43(v14, v15);
  ((void (*)(uint64_t, uint64_t))v47)(v49, v48);
  ((void (*)(uint64_t, uint64_t))v46)(v12, v16);
  v45(v50, v12);
  v44(v15, AssociatedConformanceWitness);
  v43(v52, v15);
  uint64_t v18 = v55 + *(int *)(v54 + 48);
  sub_1BFF97B80(v57, v55);
  sub_1BFF97B80(v53, v18);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  if (v19(v55, 1, v56) == 1)
  {
    uint64_t v20 = *(void *)(v0 + 152);
    uint64_t v21 = *(void *)(v0 + 96);
    sub_1BFE545EC(*(void *)(v0 + 144), (uint64_t (*)(void))sub_1BFF97C40);
    sub_1BFE545EC(v20, (uint64_t (*)(void))sub_1BFF97C40);
    if (v19(v18, 1, v21) == 1)
    {
      sub_1BFE545EC(*(void *)(v0 + 128), (uint64_t (*)(void))sub_1BFF97C40);
LABEL_13:
      FeedCursor.unwrappedFeedPool.getter(*(void *)(v0 + 88));
      FeedCursor.unwrappedFeedPool.getter(*(void *)(v0 + 80));
      uint64_t v39 = swift_getAssociatedConformanceWitness();
      *(void *)(v0 + 240) = v39;
      uint64_t v58 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 + 56) + **(int **)(v39 + 56));
      uint64_t v40 = (void *)swift_task_alloc();
      *(void *)(v0 + 248) = v40;
      *uint64_t v40 = v0;
      v40[1] = sub_1C019D824;
      uint64_t v41 = *(void *)(v0 + 88);
      uint64_t v42 = *(void *)(v0 + 64);
      return v58(v41, v42, v39);
    }
    goto LABEL_8;
  }
  uint64_t v22 = *(void *)(v0 + 96);
  sub_1BFF97B80(*(void *)(v0 + 128), *(void *)(v0 + 136));
  unsigned int v23 = v19(v18, 1, v22);
  uint64_t v25 = *(void *)(v0 + 144);
  uint64_t v24 = *(void *)(v0 + 152);
  uint64_t v26 = *(void *)(v0 + 136);
  if (v23 == 1)
  {
    uint64_t v27 = *(void *)(v0 + 96);
    uint64_t v28 = *(void *)(v0 + 104);
    sub_1BFE545EC(*(void *)(v0 + 144), (uint64_t (*)(void))sub_1BFF97C40);
    sub_1BFE545EC(v24, (uint64_t (*)(void))sub_1BFF97C40);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
LABEL_8:
    sub_1BFE545EC(*(void *)(v0 + 128), (uint64_t (*)(void))sub_1BFCD9524);
    goto LABEL_9;
  }
  uint64_t v33 = *(void *)(v0 + 128);
  uint64_t v35 = *(void *)(v0 + 104);
  uint64_t v34 = *(void *)(v0 + 112);
  uint64_t v36 = *(void *)(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v34, v18, v36);
  sub_1BFC3B55C();
  char v37 = sub_1C151E5CC();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v38(v34, v36);
  sub_1BFE545EC(v25, (uint64_t (*)(void))sub_1BFF97C40);
  sub_1BFE545EC(v24, (uint64_t (*)(void))sub_1BFF97C40);
  v38(v26, v36);
  sub_1BFE545EC(v33, (uint64_t (*)(void))sub_1BFF97C40);
  if (v37) {
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v29 = *(uint64_t **)(v0 + 16);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v30 = sub_1C151ECBC();
  sub_1BFE1443C(v30, v29);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_1C019D824(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 256) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C019DBE0;
  }
  else
  {
    *(unsigned char *)(v4 + 265) = a1 & 1;
    uint64_t v5 = sub_1C019D950;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C019D950()
{
  if (*(unsigned char *)(v0 + 265) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v1 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = *(void *)(v0 + 72);
    uint64_t v5 = *(uint64_t **)(v0 + 16);
    swift_getAssociatedTypeWitness();
    uint64_t v6 = sub_1C151ECBC();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v7(v2, v3);
    v7(v1, v3);
    sub_1BFE1443C(v6, v5);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 80);
    uint64_t v9 = *(void *)(v0 + 88);
    uint64_t v11 = *(void *)(v0 + 64);
    uint64_t v12 = *(void *)(v0 + 72);
    type metadata accessor for FeedServiceError();
    swift_getWitnessTable();
    swift_allocError();
    *(void *)uint64_t v13 = 1;
    *(void *)(v13 + 8) = 0;
    *(void *)(v13 + 16) = 0;
    *(void *)(v13 + 24) = 0;
    *(unsigned char *)(v13 + 32) = 6;
    swift_willThrow();
    swift_release();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v14(v10, v11);
    v14(v9, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1C019DBE0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v1, v3);
  v5(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t type metadata accessor for ChronologicalFeedRefreshStrategy()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_1C019DD24()
{
  uint64_t v0 = sub_1C151FCDC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v15[-v5];
  sub_1C151FCCC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v8 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1C151FCBC();
  uint64_t v9 = self;
  id v10 = objc_msgSend(v9, sel_whiteColor);
  sub_1C151FC5C();
  id v11 = objc_msgSend(v9, sel_systemPinkColor);
  sub_1C151FC4C();
  uint64_t v12 = (void (*)(unsigned char *, void))sub_1C151FBCC();
  sub_1C151CF1C();
  v12(v15, 0);
  sub_1BFC39268(0, &qword_1EA196BA8);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v1 + 16))(v3, v6, v0);
  uint64_t v13 = (void *)sub_1C151FCEC();
  objc_msgSend(v13, sel_setClipsToBounds_, 1);
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v6, v0);
  return v13;
}

id sub_1C019DFA0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_init);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v2 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  uint64_t v3 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setText_, v3, 0x80000001C1605A50);

  id v4 = objc_msgSend(self, sel_systemFontOfSize_, 10.0);
  objc_msgSend(v0, sel_setFont_, v4);

  id v5 = objc_msgSend(self, sel_systemGrayColor);
  objc_msgSend(v0, sel_setTextColor_, v5);

  objc_msgSend(v0, sel_setTextAlignment_, 1);
  return v0;
}

char *sub_1C019E140(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitButton;
  id v10 = v4;
  *(void *)&v4[v9] = sub_1C019DD24();
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitText;
  *(void *)&v10[v11] = sub_1C019DFA0();

  v43.receiver = v10;
  v43.super_class = (Class)type metadata accessor for DebugPersonalizationSubmitView();
  uint64_t v12 = (char *)objc_msgSendSuper2(&v43, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitButton;
  uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitButton];
  uint64_t v15 = v12;
  objc_msgSend(v15, sel_addSubview_, v14);
  uint64_t v16 = OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitText;
  uint64_t v17 = *(void **)&v15[OBJC_IVAR____TtC8NewsFeed30DebugPersonalizationSubmitView_submitText];
  objc_msgSend(v15, sel_addSubview_, v17);
  objc_msgSend(v14, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v17, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  id v42 = self;
  sub_1BFE4DBE0();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C152F080;
  id v19 = objc_msgSend(v14, sel_topAnchor);
  id v20 = objc_msgSend(v15, (SEL)&selRef_setTailIndent_ + 3);
  id v21 = objc_msgSend(v19, sel_constraintEqualToAnchor_constant_, v20, 8.0);

  *(void *)(v18 + 32) = v21;
  id v22 = objc_msgSend(*(id *)&v12[v13], sel_leadingAnchor);
  id v23 = objc_msgSend(v15, (SEL)&selRef_systemImageNamed_withConfiguration_ + 2);
  id v24 = objc_msgSend(v22, sel_constraintEqualToAnchor_, v23);

  *(void *)(v18 + 40) = v24;
  id v25 = objc_msgSend(*(id *)&v12[v13], sel_trailingAnchor);
  id v26 = objc_msgSend(v15, sel_trailingAnchor);
  id v27 = objc_msgSend(v25, sel_constraintEqualToAnchor_, v26);

  *(void *)(v18 + 48) = v27;
  id v28 = objc_msgSend(*(id *)&v15[v16], sel_topAnchor);
  id v29 = objc_msgSend(*(id *)&v12[v13], sel_bottomAnchor);
  id v30 = objc_msgSend(v28, sel_constraintEqualToAnchor_constant_, v29, 4.0);

  *(void *)(v18 + 56) = v30;
  id v31 = objc_msgSend(*(id *)&v15[v16], sel_leadingAnchor);
  id v32 = objc_msgSend(v15, sel_leadingAnchor);
  id v33 = objc_msgSend(v31, sel_constraintEqualToAnchor_, v32);

  *(void *)(v18 + 64) = v33;
  id v34 = objc_msgSend(*(id *)&v15[v16], sel_trailingAnchor);
  id v35 = objc_msgSend(v15, sel_trailingAnchor);
  id v36 = objc_msgSend(v34, sel_constraintEqualToAnchor_, v35);

  *(void *)(v18 + 72) = v36;
  id v37 = objc_msgSend(*(id *)&v15[v16], sel_bottomAnchor);
  id v38 = objc_msgSend(v15, sel_bottomAnchor);
  id v39 = objc_msgSend(v37, sel_constraintEqualToAnchor_constant_, v38, -8.0);

  *(void *)(v18 + 80) = v39;
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA1A7F70);
  uint64_t v40 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v42, sel_activateConstraints_, v40);

  return v15;
}

id sub_1C019E640()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugPersonalizationSubmitView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for DebugPersonalizationSubmitView()
{
  return self;
}

NewsFeed::FamilyStatusCommandState_optional __swiftcall FamilyStatusCommandState.init(rawValue:)(Swift::String rawValue)
{
  objc_super v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *objc_super v2 = v5;
  return result;
}

uint64_t FamilyStatusCommandState.rawValue.getter()
{
  uint64_t result = 0x656C626967696C65;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x626967696C656E69;
      break;
    case 2:
      uint64_t result = 0x7265626D656DLL;
      break;
    case 3:
      uint64_t result = 0x657A696E6167726FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C019E7D8()
{
  unint64_t result = qword_1EA1A2910;
  if (!qword_1EA1A2910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A2910);
  }
  return result;
}

uint64_t sub_1C019E82C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C019E90C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C019E9D4()
{
  return sub_1C1520E0C();
}

NewsFeed::FamilyStatusCommandState_optional sub_1C019EAB0(Swift::String *a1)
{
  return FamilyStatusCommandState.init(rawValue:)(*a1);
}

void sub_1C019EABC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE800000000000000;
  uint64_t v3 = 0x656C626967696C65;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA0000000000656CLL;
      uint64_t v3 = 0x626967696C656E69;
      goto LABEL_3;
    case 2:
      *a1 = 0x7265626D656DLL;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x657A696E6167726FLL;
      a1[1] = 0xE900000000000072;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C019EB5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1480A7C(*a1, *a2);
}

unint64_t sub_1C019EB6C()
{
  unint64_t result = qword_1EB86F740;
  if (!qword_1EB86F740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F740);
  }
  return result;
}

uint64_t sub_1C019EBC0(uint64_t a1)
{
  unint64_t v2 = sub_1C019ED10();
  return MEMORY[0x1F4163458](a1, v2);
}

unsigned char *storeEnumTagSinglePayload for FamilyStatusCommandState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C019ECD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FamilyStatusCommandState()
{
  return &type metadata for FamilyStatusCommandState;
}

unint64_t sub_1C019ED10()
{
  unint64_t result = qword_1EA1979E8;
  if (!qword_1EA1979E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1979E8);
  }
  return result;
}

void sub_1C019ED64(uint64_t a1)
{
  uint64_t v47 = type metadata accessor for FormatOption();
  MEMORY[0x1F4188790](v47);
  unsigned int v4 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v48 = (void *)((char *)v44 - v7);
  uint64_t v50 = *(void *)(a1 + 16);
  if (!v50) {
    return;
  }
  id v8 = (void *)(v1 + 16);
  uint64_t v9 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v10 = *(void *)(v6 + 72);
  v44[1] = a1;
  uint64_t v45 = v10;
  swift_bridgeObjectRetain();
  uint64_t v46 = v8;
  while (1)
  {
    uint64_t v49 = v9;
    uint64_t v12 = v48;
    sub_1C019FFF0(v9, (uint64_t)v48);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    sub_1C00AB068((uint64_t)v12, (uint64_t)v4);
    type metadata accessor for FormatOptionElement();
    uint64_t v15 = (void *)swift_allocObject();
    uint64_t v16 = swift_allocBox();
    sub_1C019FFF0((uint64_t)v4, v17);
    void v15[2] = v16 | 4;
    uint64_t v18 = *((void *)v4 + 2);
    uint64_t v52 = v18;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1BFEF2694();
    uint64_t v21 = v20;
    if (v20 >= 2)
    {
      uint64_t v52 = 36;
      unint64_t v53 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      sub_1BFEF2F40(v19, v21);
      uint64_t v19 = v52;
      uint64_t v21 = v53;
    }
    v15[3] = v19;
    v15[4] = v21;
    uint64_t v52 = v18;
    char v22 = sub_1BFEF28D0();
    if (v22 == 2)
    {
      uint64_t v24 = v14;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      id v23 = v46;
    }
    else
    {
      id v23 = v46;
      if (v22 != 3 && (v22 & 1) != 0)
      {
        uint64_t v24 = v14;
        uint64_t v52 = 36;
        unint64_t v53 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        uint64_t v25 = v52;
        uint64_t v26 = v53;
      }
      else
      {
        uint64_t v24 = v14;
        uint64_t v25 = 0;
        uint64_t v26 = 1;
      }
    }
    v15[5] = v25;
    v15[6] = v26;
    uint64_t v52 = 36;
    unint64_t v53 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    uint64_t v27 = v52;
    unint64_t v28 = v53;
    sub_1C01A0054((uint64_t)v4);
    v15[7] = v27;
    v15[8] = v28;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = (void *)*v23;
    id v30 = v51;
    *id v23 = 0x8000000000000000;
    unint64_t v32 = sub_1BFEF2D8C(v13, v24);
    uint64_t v33 = v30[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      break;
    }
    char v36 = v31;
    if (v30[3] >= v35)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        id v39 = v51;
        if (v31) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_1BFEF3178();
        id v39 = v51;
        if (v36) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_1BFF03610(v35, isUniquelyReferenced_nonNull_native);
      unint64_t v37 = sub_1BFEF2D8C(v13, v24);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_28;
      }
      unint64_t v32 = v37;
      id v39 = v51;
      if (v36)
      {
LABEL_3:
        uint64_t v11 = v39[7];
        swift_release();
        *(void *)(v11 + 8 * v32) = v15;
        goto LABEL_4;
      }
    }
    v39[(v32 >> 6) + 8] |= 1 << v32;
    uint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
    *uint64_t v40 = v13;
    v40[1] = v24;
    *(void *)(v39[7] + 8 * v32) = v15;
    uint64_t v41 = v39[2];
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42) {
      goto LABEL_27;
    }
    v39[2] = v43;
    swift_bridgeObjectRetain();
LABEL_4:
    *id v23 = v39;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v9 = v49 + v45;
    if (!--v50)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  sub_1C1520CFC();
  __break(1u);
}

uint64_t sub_1C019F1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_beginAccess();
  if (*(void *)(*(void *)(v3 + 16) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1BFEF2D8C(a1, a2);
    if (v7)
    {
      swift_endAccess();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_retain();
      swift_release();
      sub_1BFEF9524(a3);
      swift_release();
      uint64_t v8 = type metadata accessor for FormatOption();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a3, 0, 1, v8);
    }
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v10 = type metadata accessor for FormatOption();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 1, 1, v10);
}

uint64_t sub_1C019F328(uint64_t a1)
{
  v25[5] = a1;
  uint64_t v26 = MEMORY[0x1E4FBC870];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v22 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & v3;
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_23;
    }
    int64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v9 >= v23) {
      goto LABEL_29;
    }
    uint64_t v10 = *(void *)(v22 + 8 * v9);
    ++v8;
    if (!v10)
    {
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v23) {
        goto LABEL_29;
      }
      uint64_t v10 = *(void *)(v22 + 8 * v8);
      if (!v10)
      {
        int64_t v8 = v9 + 2;
        if (v9 + 2 >= v23) {
          goto LABEL_29;
        }
        uint64_t v10 = *(void *)(v22 + 8 * v8);
        if (!v10)
        {
          int64_t v8 = v9 + 3;
          if (v9 + 3 >= v23) {
            goto LABEL_29;
          }
          uint64_t v10 = *(void *)(v22 + 8 * v8);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v6 = (v10 - 1) & v10;
LABEL_23:
    swift_retain();
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_1BFEF970C(v12);
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      int64_t v24 = v8;
      swift_bridgeObjectRetain();
      uint64_t v15 = (uint64_t *)(v13 + 40);
      uint64_t v16 = (uint64_t *)(v13 + 40);
      uint64_t v17 = v14;
      do
      {
        uint64_t v18 = *(v16 - 1);
        uint64_t v19 = *v16;
        swift_bridgeObjectRetain();
        sub_1BFEFFC1C(v25, v18, v19);
        swift_bridgeObjectRelease();
        v16 += 2;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      int64_t v8 = v24;
      do
      {
        uint64_t v20 = *(v15 - 1);
        uint64_t v21 = *v15;
        swift_bridgeObjectRetain();
        sub_1BFEFFC1C(v25, v20, v21);
        swift_bridgeObjectRelease();
        v15 += 2;
        --v14;
      }
      while (v14);
    }
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v23)
  {
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return v26;
  }
  uint64_t v10 = *(void *)(v22 + 8 * v11);
  if (v10)
  {
    int64_t v8 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v8 >= v23) {
      goto LABEL_29;
    }
    uint64_t v10 = *(void *)(v22 + 8 * v8);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C019F5D0()
{
  return 0x736E6F6974706FLL;
}

uint64_t sub_1C019F5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C019F680(uint64_t a1)
{
  unint64_t v2 = sub_1C019F890();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C019F6BC(uint64_t a1)
{
  unint64_t v2 = sub_1C019F890();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatVariableCollection.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatVariableCollection.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  sub_1C019FC1C(0, &qword_1EA1979F0, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int64_t v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C019F890();
  sub_1C1520F0C();
  swift_beginAccess();
  uint64_t v10 = *(void *)(v2 + 16);
  sub_1C019F8E4();
  sub_1C019F94C();
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C019F890()
{
  unint64_t result = qword_1EA1979F8;
  if (!qword_1EA1979F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1979F8);
  }
  return result;
}

void sub_1C019F8E4()
{
  if (!qword_1EA197A00)
  {
    type metadata accessor for FormatOptionElement();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197A00);
    }
  }
}

unint64_t sub_1C019F94C()
{
  unint64_t result = qword_1EA197A08;
  if (!qword_1EA197A08)
  {
    sub_1C019F8E4();
    sub_1C019FD14(&qword_1EA197A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197A08);
  }
  return result;
}

uint64_t FormatVariableCollection.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatVariableCollection.init(from:)(a1);
  return v2;
}

uint64_t FormatVariableCollection.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C019FC1C(0, &qword_1EA197A18, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  v13[0] = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int64_t v8 = (char *)v13 - v7;
  *(void *)(v1 + 16) = MEMORY[0x1E4FBC868];
  int64_t v9 = (void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C019F890();
  sub_1C1520EBC();
  if (v2)
  {
    swift_release();
  }
  else
  {
    uint64_t v10 = v13[0];
    sub_1C019F8E4();
    sub_1C019FC80();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v6);
    uint64_t v11 = v13[5];
    swift_beginAccess();
    *int64_t v9 = v11;
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

void sub_1C019FC1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C019F890();
    unint64_t v7 = a3(a1, &type metadata for FormatVariableCollection.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C019FC80()
{
  unint64_t result = qword_1EA197A20;
  if (!qword_1EA197A20)
  {
    sub_1C019F8E4();
    sub_1C019FD14(&qword_1EA197A28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197A20);
  }
  return result;
}

uint64_t sub_1C019FD14(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatOptionElement();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C019FD58@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatVariableCollection.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C019FDB0(void *a1)
{
  return FormatVariableCollection.encode(to:)(a1);
}

uint64_t method lookup function for FormatVariableCollection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatVariableCollection);
}

uint64_t dispatch thunk of FormatVariableCollection.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *storeEnumTagSinglePayload for FormatVariableCollection.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C019FEB0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVariableCollection.CodingKeys()
{
  return &type metadata for FormatVariableCollection.CodingKeys;
}

unint64_t sub_1C019FEEC()
{
  unint64_t result = qword_1EA197A30;
  if (!qword_1EA197A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197A30);
  }
  return result;
}

unint64_t sub_1C019FF44()
{
  unint64_t result = qword_1EA197A38;
  if (!qword_1EA197A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197A38);
  }
  return result;
}

unint64_t sub_1C019FF9C()
{
  unint64_t result = qword_1EA197A40;
  if (!qword_1EA197A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197A40);
  }
  return result;
}

uint64_t sub_1C019FFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatOption();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01A0054(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatOption();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1C01A00B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t v5 = *(void *)(a2 + 40);
  if (a5 >= 2u)
  {
    uint64_t v7 = a3 ^ 1 | a4;
    sub_1C01A12B4(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
    if (v7)
    {
      uint64_t inited = swift_initStackObject();
      uint64_t v22 = (void **)MEMORY[0x1E4FB06F8];
      *(_OWORD *)(inited + 16) = xmmword_1C1527210;
      int64_t v23 = *v22;
      *(void *)(inited + 32) = *v22;
      int64_t v24 = self;
      swift_bridgeObjectRetain();
      id v25 = v23;
      id v26 = objc_msgSend(v24, sel_systemFontOfSize_, 12.0);
      uint64_t v27 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
      *(void *)(inited + 40) = v26;
      unint64_t v28 = (void *)*MEMORY[0x1E4FB0700];
      *(void *)(inited + 64) = v27;
      *(void *)(inited + 72) = v28;
      uint64_t v29 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
      id v30 = v28;
      uint64_t v31 = sub_1C151FA6C();
      *(void *)(inited + 104) = v29;
      *(void *)(inited + 80) = v31;
      uint64_t v19 = inited;
    }
    else
    {
      uint64_t v8 = swift_initStackObject();
      int64_t v9 = (void **)MEMORY[0x1E4FB06F8];
      *(_OWORD *)(v8 + 16) = xmmword_1C1527210;
      uint64_t v10 = *v9;
      *(void *)(v8 + 32) = *v9;
      uint64_t v11 = self;
      swift_bridgeObjectRetain();
      id v12 = v10;
      id v13 = objc_msgSend(v11, sel_systemFontOfSize_, 12.0);
      uint64_t v14 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
      *(void *)(v8 + 40) = v13;
      uint64_t v15 = (void *)*MEMORY[0x1E4FB0700];
      *(void *)(v8 + 64) = v14;
      *(void *)(v8 + 72) = v15;
      uint64_t v16 = self;
      id v17 = v15;
      id v18 = objc_msgSend(v16, sel_secondaryLabelColor);
      *(void *)(v8 + 104) = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
      *(void *)(v8 + 80) = v18;
      uint64_t v19 = v8;
    }
    sub_1BFF991DC(v19);
    id v32 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    id v33 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BFF9A290();
    id v34 = (id)sub_1C151E32C();
    swift_bridgeObjectRelease();
    id v35 = objc_msgSend(v32, sel_initWithString_attributes_, v33, v34);
  }
  else
  {
    swift_retain();
    sub_1C151709C();
    swift_release();
    if (v58)
    {
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
      id v6 = (id)sub_1C151FA6C();
    }
    else
    {
      id v20 = objc_msgSend(self, sel_systemYellowColor);
      id v6 = objc_msgSend(v20, sel_colorWithAlphaComponent_, 0.1);
    }
    sub_1BFC39268(0, (unint64_t *)&unk_1EB87A260);
    if (v5) {
      swift_bridgeObjectRetain();
    }
    else {
      swift_bridgeObjectRelease();
    }
    sub_1C01A12B4(0, (unint64_t *)&qword_1EB87A910, (uint64_t (*)(uint64_t))sub_1C0063E08, MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_initStackObject();
    unint64_t v37 = (void **)MEMORY[0x1E4FB06F8];
    *(_OWORD *)(v36 + 16) = xmmword_1C1527210;
    char v38 = *v37;
    *(void *)(v36 + 32) = *v37;
    id v57 = self;
    id v56 = v38;
    id v39 = objc_msgSend(v57, sel_systemFontOfSize_, 12.0);
    uint64_t v55 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2B0);
    *(void *)(v36 + 40) = v39;
    uint64_t v40 = (void *)*MEMORY[0x1E4FB0700];
    *(void *)(v36 + 64) = v55;
    *(void *)(v36 + 72) = v40;
    uint64_t v54 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
    *(void *)(v36 + 104) = v54;
    *(void *)(v36 + 80) = v6;
    id v41 = v40;
    id v42 = v6;
    sub_1BFF991DC(v36);
    id v43 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    uint64_t v44 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1BFF9A290();
    uint64_t v45 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    id v35 = objc_msgSend(v43, sel_initWithString_attributes_, v44, v45);

    sub_1C151E80C();
    uint64_t v46 = swift_initStackObject();
    *(_OWORD *)(v46 + 16) = xmmword_1C1527210;
    *(void *)(v46 + 32) = v56;
    double v47 = *MEMORY[0x1E4FB09E0];
    id v48 = v56;
    *(void *)(v46 + 40) = objc_msgSend(v57, sel_systemFontOfSize_weight_, 12.0, v47);
    *(void *)(v46 + 64) = v55;
    *(void *)(v46 + 72) = v41;
    *(void *)(v46 + 104) = v54;
    *(void *)(v46 + 80) = v42;
    id v34 = v42;
    id v49 = v41;
    sub_1BFF991DC(v46);
    id v50 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    uint64_t v51 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    uint64_t v52 = (void *)sub_1C151E32C();
    swift_bridgeObjectRelease();
    id v33 = objc_msgSend(v50, sel_initWithString_attributes_, v51, v52);

    objc_msgSend(v35, sel_appendAttributedString_, v33);
  }

  return v35;
}

uint64_t sub_1C01A073C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  id v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C01A12B4(0, (unint64_t *)&unk_1EA1A5270, MEMORY[0x1E4FAB6D0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  int64_t v9 = (char *)&v62 - v8;
  uint64_t v10 = sub_1C151757C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v69 = (uint64_t)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAB700];
  sub_1C01A12B4(0, (unint64_t *)&unk_1EA1A4D30, MEMORY[0x1E4FAB700], v6);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v62 - v15;
  uint64_t v17 = sub_1C151772C();
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = a1[7];
  long long v80 = a1[6];
  long long v81 = v20;
  long long v82 = a1[8];
  long long v21 = a1[3];
  v76[2] = a1[2];
  long long v77 = v21;
  long long v22 = a1[5];
  long long v78 = a1[4];
  long long v79 = v22;
  long long v23 = a1[1];
  v76[0] = *a1;
  v76[1] = v23;
  uint64_t v25 = v24;
  id v26 = v13;
  uint64_t v28 = v27;
  sub_1C01A11CC(a2, (uint64_t)v16, (unint64_t *)&unk_1EA1A4D30, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v16, 1, v28) == 1)
  {
    sub_1C0187DF4((uint64_t)v76);
    sub_1C01A115C(a3, (unint64_t *)&unk_1EA1A5270, MEMORY[0x1E4FAB6D0]);
    uint64_t v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAB700];
    sub_1C01A115C(a2, (unint64_t *)&unk_1EA1A4D30, MEMORY[0x1E4FAB700]);
    uint64_t v30 = (uint64_t)v16;
    uint64_t v31 = (unint64_t *)&unk_1EA1A4D30;
    id v32 = v29;
LABEL_5:
    sub_1C01A115C(v30, v31, v32);
    return 0;
  }
  uint64_t v68 = a2;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v19, v16, v28);
  sub_1C01A11CC(a3, (uint64_t)v9, (unint64_t *)&unk_1EA1A5270, MEMORY[0x1E4FAB6D0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1C0187DF4((uint64_t)v76);
    id v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAB6D0];
    sub_1C01A115C(a3, (unint64_t *)&unk_1EA1A5270, MEMORY[0x1E4FAB6D0]);
    sub_1C01A115C(v68, (unint64_t *)&unk_1EA1A4D30, MEMORY[0x1E4FAB700]);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v19, v28);
    uint64_t v30 = (uint64_t)v9;
    uint64_t v31 = (unint64_t *)&unk_1EA1A5270;
    id v32 = v33;
    goto LABEL_5;
  }
  uint64_t v66 = v28;
  uint64_t v67 = v19;
  uint64_t v36 = v69;
  uint64_t v37 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v69, v9, v10);
  uint64_t v38 = *((void *)&v77 + 1);
  MEMORY[0x1F4188790](v37);
  *(&v62 - 2) = v36;
  swift_bridgeObjectRetain();
  char v39 = sub_1C1012DB8((uint64_t (*)(uint64_t *))sub_1C01A124C, (uint64_t)(&v62 - 4), v38);
  swift_bridgeObjectRelease();
  uint64_t v40 = v68;
  if (v39)
  {
    uint64_t v63 = v25;
    uint64_t v64 = a3;
    uint64_t v65 = v10;
    uint64_t v41 = *((void *)&v82 + 1);
    uint64_t v42 = *(void *)(*((void *)&v82 + 1) + 16);
    if (v42)
    {
      swift_bridgeObjectRetain_n();
      id v43 = (unsigned __int8 *)(v41 + 48);
      uint64_t v44 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v46 = *((void *)v43 - 1);
        unsigned __int8 v47 = *v43;
        uint64_t v71 = *((void *)v43 - 2);
        unint64_t v72 = v46;
        unsigned __int8 v73 = v47;
        sub_1C01A128C(v71, v46, v47);
        sub_1C0DCC36C((uint64_t)&v71, (uint64_t)&v74);
        unsigned __int8 v48 = v75;
        if (v75 <= 0xFDu)
        {
          id v49 = v74;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v44 = sub_1C0EE2C64(0, v44[2] + 1, 1, v44);
          }
          unint64_t v51 = v44[2];
          unint64_t v50 = v44[3];
          if (v51 >= v50 >> 1) {
            uint64_t v44 = sub_1C0EE2C64((void *)(v50 > 1), v51 + 1, 1, v44);
          }
          void v44[2] = v51 + 1;
          uint64_t v45 = &v44[2 * v51];
          v45[4] = v49;
          *((unsigned char *)v45 + 40) = v48;
        }
        v43 += 24;
        --v42;
      }
      while (v42);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v44 = (void *)MEMORY[0x1E4FBC860];
    }
    sub_1C0187DF4((uint64_t)v76);
    LOBYTE(v71) = v82;
    FormatContentSizeCategory.groupLayoutContentSizeCategory.getter((uint64_t)&v74);
    uint64_t v52 = v74;
    unsigned __int8 v53 = v75;
    type metadata accessor for GroupLayoutFactoryValidator();
    *(void *)(swift_initStackObject() + 16) = v44;
    uint64_t v71 = (uint64_t)v52;
    LOBYTE(v72) = v53;
    sub_1BFFFC7A0(v52, v53);
    uint64_t v54 = (uint64_t)v67;
    uint64_t v55 = (void *)sub_1C15176CC();
    char v56 = sub_1BFFFB824();

    sub_1BFFFC630(v52, v53);
    if (v56)
    {
      id v57 = v52;
      uint64_t v58 = v69;
      sub_1C0EF7C38(v54, v69);
      swift_bridgeObjectRelease();
      sub_1BFFFC630(v57, v53);
      sub_1C01A115C(v64, (unint64_t *)&unk_1EA1A5270, MEMORY[0x1E4FAB6D0]);
      sub_1C01A115C(v68, (unint64_t *)&unk_1EA1A4D30, MEMORY[0x1E4FAB700]);
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v54, v66);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v58, v65);
      return 1;
    }
    else
    {
      sub_1C0020AF0();
      char v59 = (void *)swift_allocError();
      uint64_t v61 = v60;
      *uint64_t v60 = sub_1C15176CC();
      *((unsigned char *)v61 + 40) = 1;
      swift_willThrow();
      uint64_t v71 = 0;
      unint64_t v72 = 0xE000000000000000;
      uint64_t v70 = v59;
      sub_1C017F734();
      sub_1C152036C();
      swift_bridgeObjectRelease();
      sub_1BFFFC630(v52, v53);
      uint64_t v34 = v71;

      sub_1C01A115C(v64, (unint64_t *)&unk_1EA1A5270, MEMORY[0x1E4FAB6D0]);
      sub_1C01A115C(v68, (unint64_t *)&unk_1EA1A4D30, MEMORY[0x1E4FAB700]);
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v54, v66);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v69, v65);
    }
  }
  else
  {
    sub_1C0187DF4((uint64_t)v76);
    sub_1C01A115C(a3, (unint64_t *)&unk_1EA1A5270, MEMORY[0x1E4FAB6D0]);
    sub_1C01A115C(v40, (unint64_t *)&unk_1EA1A4D30, MEMORY[0x1E4FAB700]);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v67, v66);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v36, v10);
    return 2;
  }
  return v34;
}

uint64_t sub_1C01A115C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C01A12B4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C01A11CC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C01A12B4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

BOOL sub_1C01A124C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  return v1 == sub_1C151754C();
}

uint64_t sub_1C01A128C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 6 < 6 || a3 == 12) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1C01A12B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugFormatContentSizeCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01A13E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatContentSizeCategory()
{
  return &type metadata for DebugFormatContentSizeCategory;
}

unint64_t sub_1C01A1420()
{
  unint64_t result = qword_1EA197A48;
  if (!qword_1EA197A48)
  {
    sub_1C01A1478();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197A48);
  }
  return result;
}

void sub_1C01A1478()
{
  if (!qword_1EA197A50)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197A50);
    }
  }
}

unint64_t sub_1C01A14D0@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1C01A17F4(*a1);
  *a2 = result;
  return result;
}

void sub_1C01A14FC(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C01A1508(uint64_t a1)
{
  unint64_t v2 = sub_1C01A1804();
  uint64_t v3 = MEMORY[0x1E4FAB4A0];
  return MEMORY[0x1F415F4F8](a1, v2, v3);
}

uint64_t sub_1C01A155C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C01A1804();
  uint64_t v5 = MEMORY[0x1E4FAB4A0];
  return MEMORY[0x1F415F4F0](a1, a2, v4, v5);
}

uint64_t sub_1C01A15B8(uint64_t a1)
{
  unint64_t v2 = sub_1C01A1804();
  uint64_t v3 = MEMORY[0x1E4FAB4A0];
  return MEMORY[0x1F415F4E8](a1, v2, v3);
}

void sub_1C01A160C(void *a1@<X8>)
{
  *a1 = &unk_1F1B673F8;
}

unint64_t sub_1C01A1620()
{
  unint64_t result = qword_1EA197A58;
  if (!qword_1EA197A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197A58);
  }
  return result;
}

unint64_t sub_1C01A1674(char a1)
{
  unint64_t result = 0x6D53206172747845;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6C616D53;
      break;
    case 2:
      unint64_t result = 0x6D756964654DLL;
      break;
    case 3:
      unint64_t result = 0x656772614CLL;
      break;
    case 4:
      unint64_t result = 19544;
      break;
    case 5:
      unint64_t result = 5003352;
      break;
    case 6:
      unint64_t result = 1280858200;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0xD000000000000010;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C01A17D4()
{
  return sub_1C01A1674(*v0);
}

uint64_t sub_1C01A17DC(char a1)
{
  return **((void **)&unk_1E6415D88 + a1);
}

unint64_t sub_1C01A17F4(unint64_t result)
{
  if (result >= 0xC) {
    return 12;
  }
  return result;
}

unint64_t sub_1C01A1804()
{
  unint64_t result = qword_1EA197A60;
  if (!qword_1EA197A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197A60);
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V16()
{
  return &type metadata for A18_V16;
}

uint64_t sub_1C01A1868(void *a1)
{
  uint64_t v3 = v1;
  sub_1C01A4204(0, &qword_1EA197B18, (uint64_t (*)(void))sub_1C01A41B0, (uint64_t)&type metadata for A18_V16.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01A41B0();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C01A426C(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C01A1AB0(uint64_t a1)
{
  unint64_t v2 = sub_1C01A41B0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C01A1AEC(uint64_t a1)
{
  unint64_t v2 = sub_1C01A41B0();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C01A1B28@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C01A3F00(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C01A1B70(void *a1)
{
  return sub_1C01A1868(a1);
}

uint64_t sub_1C01A1B88()
{
  sub_1C01A3BA4();
  return sub_1C151798C();
}

uint64_t sub_1C01A1C04@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C01A4204(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C01A1CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v49 = a3;
  uint64_t v60 = a2;
  uint64_t v5 = sub_1C151635C();
  unint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v44 = *(void *)(v11 - 8);
  uint64_t v45 = v11;
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v46 = *v3;
  uint64_t v14 = (void *)*((void *)v3 + 1);
  unsigned __int8 v15 = v3[16];
  v56[0] = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)v56))
  {
    sub_1C0020AF0();
    swift_allocError();
    *(_OWORD *)uint64_t v16 = 0u;
    *(_OWORD *)(v16 + 16) = 0u;
    *(void *)(v16 + 32) = 0;
    *(unsigned char *)(v16 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    uint64_t v42 = a1;
    uint64_t v18 = a1;
    uint64_t v19 = (uint64_t)v13;
    sub_1BFF1AFA4(v18, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    uint64_t v41 = type metadata accessor for GroupLayoutContext;
    uint64_t v40 = v10;
    sub_1BFF1AFA4(v60, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    long long v20 = v14;
    long long v21 = v14;
    unsigned __int8 v22 = v15;
    sub_1BFFFC7A0(v21, v15);
    sub_1C151634C();
    uint64_t v23 = sub_1C151633C();
    uint64_t v39 = v24;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v5);
    uint64_t v58 = &type metadata for A18_V16;
    unint64_t v43 = sub_1C0186338();
    unint64_t v59 = v43;
    char v25 = v46;
    LOBYTE(v56[0]) = v46;
    v56[1] = v20;
    unsigned __int8 v57 = v22;
    type metadata accessor for GroupLayoutKey();
    uint64_t v26 = swift_allocObject();
    sub_1BFFFC7A0(v20, v22);
    uint64_t v54 = sub_1C1520FAC();
    uint64_t v55 = v27;
    uint64_t v52 = 95;
    unint64_t v53 = 0xE100000000000000;
    uint64_t v50 = 45;
    unint64_t v51 = 0xE100000000000000;
    sub_1BFF27ECC();
    uint64_t v28 = sub_1C151FEBC();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    *(void *)(v26 + 16) = v28;
    *(void *)(v26 + 24) = v30;
    uint64_t v31 = (uint64_t *)(v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    uint64_t v32 = v39;
    *uint64_t v31 = v23;
    v31[1] = v32;
    sub_1BFC66384((uint64_t)v56, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    uint64_t v33 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BFF2389C(v19, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v33, 0, 1, v45);
    uint64_t v34 = v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BFF2389C((uint64_t)v40, v26 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v34, 0, 1, v48);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    sub_1BFFFC630(v20, v22);
    uint64_t v35 = type metadata accessor for A18_V16.Bound();
    uint64_t v36 = v49;
    v49[3] = v35;
    v36[4] = sub_1C01A426C(&qword_1EA197A78, (void (*)(uint64_t))type metadata accessor for A18_V16.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    unint64_t v38 = v43;
    boxed_opaque_existential_0[4] = (uint64_t)&type metadata for A18_V16;
    boxed_opaque_existential_0[5] = v38;
    *((unsigned char *)boxed_opaque_existential_0 + 8) = v25;
    boxed_opaque_existential_0[2] = (uint64_t)v20;
    *((unsigned char *)boxed_opaque_existential_0 + 24) = v22;
    sub_1BFF1AFA4(v60, (uint64_t)boxed_opaque_existential_0 + *(int *)(v35 + 24), (uint64_t (*)(void))v41);
    sub_1BFFFC7A0(v20, v22);
    uint64_t result = sub_1C0F525B0(0, 0, 0, 0, 0);
    uint64_t *boxed_opaque_existential_0 = v26;
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v35 + 28)) = result;
  }
  return result;
}

uint64_t sub_1C01A21F0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v30 = a1;
  *(void *)&long long v29 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A18_V16.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(*(void *)(v7 + *(int *)(v8 + 40)) + 16);
  double v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BFC66384(v9 + 16, (uint64_t)&v37);
  sub_1BFC66384(v9 + 56, (uint64_t)v36);
  double v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(&v37, inited + 16);
  sub_1BFC773DC(v36, inited + 56);
  *(double *)(inited + 96) = v11;
  v35[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v35, v41);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  uint64_t v13 = *(void *)(v2 + *(int *)(v6 + 28));
  void v33[2] = v2;
  v33[3] = v41;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C0182EAC((void (*)(uint64_t))sub_1C01A3B28, (uint64_t)v33, v13, (uint64_t)&v34);
  swift_bridgeObjectRelease();
  *(void *)&long long v37 = v14;
  sub_1C018C2A4(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v16 = v15;
  sub_1C018C3C0(&qword_1EA197690);
  v28[1] = v16;
  uint64_t v17 = sub_1C151F0BC();
  uint64_t v18 = *MEMORY[0x1E4FAB6D8];
  uint64_t v19 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v5, v18, v19);
  (*(void (**)(char *, void, void))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v29);
  uint64_t v31 = v17;
  uint64_t v32 = v2;
  sub_1C01A3C5C(0, &qword_1EA197A98, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1C1517BFC();
  long long v29 = v37;
  uint64_t v21 = v38;
  uint64_t v22 = v39;
  *(void *)&long long v37 = v14;
  *(void *)&v36[0] = v40;
  MEMORY[0x1F4188790](v20);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1C018C3C0((unint64_t *)&qword_1EB879E10);
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v37 = v23;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v24 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v25 = v30;
  *uint64_t v30 = 0;
  *(_OWORD *)(v25 + 8) = v29;
  *((void *)v25 + 3) = v21;
  *((void *)v25 + 4) = v22;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  *((void *)v25 + 5) = v24;
  *((void *)v25 + 6) = v26;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
}

uint64_t sub_1C01A26E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C01A27BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C01A4204(0, &qword_1EA197AB0, (uint64_t (*)(void))sub_1C01A3B50, (uint64_t)&type metadata for A18_V16.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  double v10 = (uint64_t *)&v14[-v9];
  uint64_t v17 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 18;
  *double v10 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA10], v7);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  uint64_t v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C01A3C5C(0, &qword_1EA197AB8, MEMORY[0x1E4FAB6F0]);
  sub_1C01A3C18(&qword_1EA197AC0, &qword_1EA197AB8, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1C01A29AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C01A4204(0, &qword_1EA197AB0, (uint64_t (*)(void))sub_1C01A3B50, (uint64_t)&type metadata for A18_V16.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  double v10 = (uint64_t *)((char *)&v24 - v9);
  uint64_t v33 = a2;
  uint64_t v11 = *(void *)(a2 + 16);
  if (v11)
  {
    uint64_t v12 = sub_1C151729C();
    unsigned int v30 = *MEMORY[0x1E4FAB4E8];
    uint64_t v31 = v12;
    uint64_t v29 = v12 - 8;
    unsigned int v28 = *MEMORY[0x1E4FAB940];
    uint64_t v26 = a3;
    uint64_t v27 = (void (**)(uint64_t *, void, uint64_t))(v8 + 104);
    char v25 = (void (**)(uint64_t *, uint64_t))(v8 + 8);
    HIDWORD(v24) = *MEMORY[0x1E4FAB9E0];
    swift_bridgeObjectRetain();
    uint64_t v36 = a1;
    uint64_t v13 = 0;
    uint64_t v32 = v11;
    uint64_t v14 = v27;
    do
    {
      uint64_t v34 = *(void *)(v33 + 8 * v13++ + 32);
      uint64_t v37 = v36;
      uint64_t v15 = v31;
      uint64_t v16 = swift_allocBox();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, v30, v15);
      *double v10 = v16;
      uint64_t v18 = (uint64_t (*)(uint64_t *, void, uint64_t))*v14;
      (*v14)(v10, v28, v7);
      uint64_t v19 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C01A3C5C(0, &qword_1EA197AC8, MEMORY[0x1E4FAB4D0]);
      uint64_t v35 = v20;
      sub_1C01A3C18(&qword_1EA197AD0, &qword_1EA197AC8, v19);
      swift_bridgeObjectRetain();
      sub_1C151738C();
      uint64_t v21 = *v25;
      (*v25)(v10, v7);
      uint64_t v37 = v36;
      uint64_t v22 = v18(v10, HIDWORD(v24), v7);
      MEMORY[0x1F4188790](v22);
      sub_1C151731C();
      uint64_t v23 = v32;
      v21(v10, v7);
      swift_bridgeObjectRelease();
    }
    while (v23 != v13);
    swift_bridgeObjectRelease();
  }
}

void sub_1C01A2D00(uint64_t a1, uint64_t a2)
{
  sub_1C01A4204(0, &qword_1EA197AB0, (uint64_t (*)(void))sub_1C01A3B50, (uint64_t)&type metadata for A18_V16.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (void *)((char *)v15 - v7);
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v10 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    uint64_t v11 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v19 = *(void *)(v10 + 72);
    unsigned int v18 = *MEMORY[0x1E4FABA10];
    uint64_t v16 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v17 = (uint64_t (**)(uint64_t *, void, uint64_t))(v6 + 104);
    v15[1] = a2;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v21 = a1;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 6;
      *uint64_t v8 = v12;
      uint64_t v13 = (*v17)(v8, v18, v5);
      uint64_t v20 = v15;
      MEMORY[0x1F4188790](v13);
      uint64_t v14 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C01A3C5C(0, &qword_1EA197AC8, MEMORY[0x1E4FAB4D0]);
      sub_1C01A3C18(&qword_1EA197AD0, &qword_1EA197AC8, v14);
      sub_1C151734C();
      (*v16)(v8, v5);
      v11 += v19;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C01A2FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v46 = a3;
  uint64_t v49 = a2;
  uint64_t v50 = sub_1C1517A9C();
  uint64_t v48 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  unint64_t v51 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HeadlineViewLayout.Options(0);
  uint64_t v9 = (int *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C01A4204(0, &qword_1EA197AB0, (uint64_t (*)(void))sub_1C01A3B50, (uint64_t)&type metadata for A18_V16.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)((char *)&v45 - v15);
  uint64_t v56 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0x4060E00000000000;
  *uint64_t v16 = v17;
  uint64_t v18 = *MEMORY[0x1E4FAB958];
  uint64_t v54 = v14;
  uint64_t v55 = v13;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 104))(v16, v18, v13);
  sub_1C01A3CF0();
  sub_1C01A4204(0, &qword_1EA197AE0, (uint64_t (*)(void))sub_1C01A3B50, (uint64_t)&type metadata for A18_V16.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C1529AE0;
  *(void *)(v22 + v21) = 0x4058C00000000000;
  (*(void (**)(void))(v20 + 104))();
  uint64_t v23 = v46 + *(int *)(type metadata accessor for A18_V16.Bound() + 24);
  LODWORD(v24) = *(unsigned __int8 *)(v23 + *(int *)(type metadata accessor for GroupLayoutContext() + 24) + 17);
  if (qword_1F1B67448) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = v24;
  }
  uint64_t v25 = qword_1F1B67448 | v24;
  uint64_t v26 = (char *)v11 + v9[7];
  uint64_t v27 = *MEMORY[0x1E4FAB8C8];
  uint64_t v28 = sub_1C1517A7C();
  uint64_t v29 = *(void *)(v28 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 104))(v26, v27, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  unsigned int v30 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v11 = v25;
  *(uint64_t *)((char *)v11 + v9[8]) = 3;
  uint64_t v31 = *v30;
  *(uint64_t *)((char *)v11 + v9[9]) = (uint64_t)v31;
  uint64_t v32 = *MEMORY[0x1E4FB2848];
  uint64_t v33 = *(void *)(MEMORY[0x1E4FB2848] + 8);
  uint64_t v34 = *(void *)(MEMORY[0x1E4FB2848] + 16);
  uint64_t v35 = *(void *)(MEMORY[0x1E4FB2848] + 24);
  uint64_t v36 = qword_1EB87CC48;
  id v37 = v31;
  if (v36 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C151709C();
  uint64_t v38 = swift_release();
  __n128 v39 = MEMORY[0x1F4188790](v38);
  *(&v45 - 8) = v32;
  *(&v45 - 7) = v33;
  *(&v45 - 6) = v34;
  *(&v45 - 5) = v35;
  uint64_t v41 = v49;
  uint64_t v40 = v50;
  *(&v45 - 4) = (uint64_t)v7;
  *(&v45 - 3) = v41;
  unint64_t v44 = (unint64_t)v11;
  (*(void (**)(char *, void, uint64_t, __n128))(v48 + 104))(v51, *MEMORY[0x1E4FAB8F8], v40, v39);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v7, v53);
  sub_1C018C644((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v42 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C01A3C5C(0, &qword_1EA197AC8, MEMORY[0x1E4FAB4D0]);
  sub_1C01A3C18(&qword_1EA197AD0, &qword_1EA197AC8, v42);
  unint64_t v44 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v54 + 8))(v16, v55);
}

uint64_t sub_1C01A3664@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A18_V16.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C01A3754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C01A1CC0(a1, a2, a3);
}

uint64_t sub_1C01A376C()
{
  return sub_1C12BC2B0();
}

unint64_t sub_1C01A377C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C01A37AC();
  unint64_t result = sub_1C01A3800();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C01A37AC()
{
  unint64_t result = qword_1EA197A68;
  if (!qword_1EA197A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197A68);
  }
  return result;
}

unint64_t sub_1C01A3800()
{
  unint64_t result = qword_1EA197A70;
  if (!qword_1EA197A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197A70);
  }
  return result;
}

uint64_t type metadata accessor for A18_V16.Bound()
{
  uint64_t result = qword_1EA197A80;
  if (!qword_1EA197A80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C01A38A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01A38B4);
}

uint64_t sub_1C01A38B4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C01A3964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01A3978);
}

void *sub_1C01A3978(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C01A3A20()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C01A3AD0(uint64_t a1)
{
  uint64_t result = sub_1C01A426C(&qword_1EA197A90, (void (*)(uint64_t))type metadata accessor for A18_V16.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C01A3B28@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C01A26E4(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1C01A3B48(uint64_t a1)
{
  return sub_1C01A27BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C01A3B50()
{
  unint64_t result = qword_1EA197AA0;
  if (!qword_1EA197AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197AA0);
  }
  return result;
}

unint64_t sub_1C01A3BA4()
{
  unint64_t result = qword_1EA197AA8;
  if (!qword_1EA197AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197AA8);
  }
  return result;
}

uint64_t sub_1C01A3BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C01A3664(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C01A3C00()
{
  return swift_deallocObject();
}

void sub_1C01A3C10(uint64_t a1)
{
  sub_1C01A29AC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C01A3C18(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C01A3C5C(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C01A3C5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A18_V16.Layout;
    v8[1] = &type metadata for A18_V16.Layout.Attributes;
    v8[2] = sub_1C01A3B50();
    v8[3] = sub_1C01A3BA4();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C01A3CE0(uint64_t a1)
{
  sub_1C01A2D00(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C01A3CE8(uint64_t a1)
{
  return sub_1C01A2FE0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C01A3CF0()
{
  if (!qword_1EA197AD8)
  {
    sub_1C01A4204(255, &qword_1EA197AE0, (uint64_t (*)(void))sub_1C01A3B50, (uint64_t)&type metadata for A18_V16.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197AD8);
    }
  }
}

ValueMetadata *type metadata accessor for A18_V16.Layout.Attributes()
{
  return &type metadata for A18_V16.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V16.Layout()
{
  return &type metadata for A18_V16.Layout;
}

unint64_t sub_1C01A3DA4()
{
  unint64_t result = qword_1EA197AE8;
  if (!qword_1EA197AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197AE8);
  }
  return result;
}

unint64_t sub_1C01A3DFC()
{
  unint64_t result = qword_1EA197AF0;
  if (!qword_1EA197AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197AF0);
  }
  return result;
}

unint64_t sub_1C01A3E54()
{
  unint64_t result = qword_1EA197AF8;
  if (!qword_1EA197AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197AF8);
  }
  return result;
}

unint64_t sub_1C01A3EAC()
{
  unint64_t result = qword_1EA197B00;
  if (!qword_1EA197B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197B00);
  }
  return result;
}

uint64_t sub_1C01A3F00@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C01A4204(0, &qword_1EA197B08, (uint64_t (*)(void))sub_1C01A41B0, (uint64_t)&type metadata for A18_V16.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01A41B0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C01A426C(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  uint64_t v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C01A41B0()
{
  unint64_t result = qword_1EA197B10;
  if (!qword_1EA197B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197B10);
  }
  return result;
}

void sub_1C01A4204(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C01A426C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A18_V16.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01A4380);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V16.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V16.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C01A43BC()
{
  unint64_t result = qword_1EA197B20;
  if (!qword_1EA197B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197B20);
  }
  return result;
}

unint64_t sub_1C01A4414()
{
  unint64_t result = qword_1EA197B28;
  if (!qword_1EA197B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197B28);
  }
  return result;
}

unint64_t sub_1C01A446C()
{
  unint64_t result = qword_1EA197B30;
  if (!qword_1EA197B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197B30);
  }
  return result;
}

uint64_t static FormatContentOverlay.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v4 = sub_1C00E88B0(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1C01A4520()
{
  return 0x70756F7267627573;
}

uint64_t sub_1C01A453C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x70756F7267627573 && a2 == 0xE900000000000073)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C01A45E0(uint64_t a1)
{
  unint64_t v2 = sub_1C01A47C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C01A461C(uint64_t a1)
{
  unint64_t v2 = sub_1C01A47C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentOverlay.encode(to:)(void *a1)
{
  sub_1C01A4D0C(0, &qword_1EA197B38, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01A47C8();
  sub_1C1520F0C();
  v10[1] = v8;
  sub_1C01A481C();
  sub_1C01A4890();
  sub_1C01A48E8();
  sub_1C1520BAC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C01A47C8()
{
  unint64_t result = qword_1EA197B40;
  if (!qword_1EA197B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197B40);
  }
  return result;
}

unint64_t sub_1C01A481C()
{
  unint64_t result = qword_1EA197B48;
  if (!qword_1EA197B48)
  {
    sub_1C01A4D0C(255, &qword_1EA197B38, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197B48);
  }
  return result;
}

void sub_1C01A4890()
{
  if (!qword_1EA197B50)
  {
    type metadata accessor for FormatContentOverlaySubgroup();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197B50);
    }
  }
}

unint64_t sub_1C01A48E8()
{
  unint64_t result = qword_1EA197B58;
  if (!qword_1EA197B58)
  {
    sub_1C01A4890();
    sub_1C01A4988(&qword_1EA197B60, (void (*)(uint64_t))type metadata accessor for FormatContentOverlaySubgroup);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197B58);
  }
  return result;
}

uint64_t sub_1C01A4988(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatContentOverlay.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v16 = a2;
  sub_1C01A4C40();
  uint64_t v5 = v4;
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01A4D0C(0, &qword_1EA197B78, MEMORY[0x1E4FBBDC0]);
  uint64_t v9 = v8;
  uint64_t v17 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01A47C8();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v12 = v17;
    uint64_t v13 = v18;
    sub_1C01A4988(&qword_1EA197B80, (void (*)(uint64_t))sub_1C01A4C40);
    sub_1C15206EC();
    uint64_t v14 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v5);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v9);
    *uint64_t v16 = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C01A4C40()
{
  if (!qword_1EA197B68)
  {
    type metadata accessor for FormatContentOverlaySubgroup();
    sub_1C01A4988(&qword_1EA197B70, (void (*)(uint64_t))type metadata accessor for FormatContentOverlaySubgroup);
    sub_1C01A4988(&qword_1EA197B60, (void (*)(uint64_t))type metadata accessor for FormatContentOverlaySubgroup);
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197B68);
    }
  }
}

void sub_1C01A4D0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C01A47C8();
    unint64_t v7 = a3(a1, &type metadata for FormatContentOverlay.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C01A4D70(void *a1)
{
  a1[1] = sub_1C01A4DA8();
  a1[2] = sub_1C01A4DFC();
  unint64_t result = sub_1C01A4E50();
  a1[3] = result;
  return result;
}

unint64_t sub_1C01A4DA8()
{
  unint64_t result = qword_1EB893B18;
  if (!qword_1EB893B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB893B18);
  }
  return result;
}

unint64_t sub_1C01A4DFC()
{
  unint64_t result = qword_1EB894348;
  if (!qword_1EB894348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB894348);
  }
  return result;
}

unint64_t sub_1C01A4E50()
{
  unint64_t result = qword_1EB894350;
  if (!qword_1EB894350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB894350);
  }
  return result;
}

uint64_t sub_1C01A4EA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentOverlay.init(from:)(a1, a2);
}

uint64_t sub_1C01A4EBC(void *a1)
{
  return FormatContentOverlay.encode(to:)(a1);
}

uint64_t sub_1C01A4ED4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v4 = sub_1C00E88B0(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

ValueMetadata *type metadata accessor for FormatContentOverlay()
{
  return &type metadata for FormatContentOverlay;
}

unsigned char *storeEnumTagSinglePayload for FormatContentOverlay.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C01A4FE0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentOverlay.CodingKeys()
{
  return &type metadata for FormatContentOverlay.CodingKeys;
}

unint64_t sub_1C01A501C()
{
  unint64_t result = qword_1EA197B88;
  if (!qword_1EA197B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197B88);
  }
  return result;
}

unint64_t sub_1C01A5074()
{
  unint64_t result = qword_1EA197B90;
  if (!qword_1EA197B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197B90);
  }
  return result;
}

unint64_t sub_1C01A50CC()
{
  unint64_t result = qword_1EA197B98;
  if (!qword_1EA197B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197B98);
  }
  return result;
}

uint64_t FormatWebEmbedBinding.URL.url(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = *v2;
  uint64_t v6 = type metadata accessor for FeedWebEmbed();
  if (v5) {
    return sub_1BFE0BD7C(a1 + *(int *)(v6 + 36), a2, (uint64_t (*)(void))sub_1BFF00BEC);
  }
  uint64_t v8 = a1 + *(int *)(v6 + 32);
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a2, v8, v9);
  uint64_t v10 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56);
  return v10(a2, 0, 1, v9);
}

void *static FormatWebEmbedBinding.URL.CodingType.allCases.getter()
{
  return &unk_1F1B674A0;
}

uint64_t FormatWebEmbedBinding.URL.CodingType.rawValue.getter()
{
  if (*v0) {
    return 0x52556E6F69746361;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_1C01A5284(char *a1, char *a2)
{
  return sub_1C14851B4(*a1, *a2);
}

uint64_t sub_1C01A5290()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C01A5310()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01A537C()
{
  return sub_1C1520E0C();
}

void sub_1C01A53F8(void *a1@<X8>)
{
  *a1 = &unk_1F1B674C8;
}

uint64_t FormatWebEmbedBinding.URL.hash(into:)()
{
  return sub_1C1520DCC();
}

BOOL static FormatWebEmbedBinding.URL.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatWebEmbedBinding.URL.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C01A5498()
{
  unint64_t result = qword_1EA197BA0;
  if (!qword_1EA197BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197BA0);
  }
  return result;
}

unint64_t sub_1C01A54F0()
{
  unint64_t result = qword_1EA197BA8;
  if (!qword_1EA197BA8)
  {
    sub_1C01A5548();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197BA8);
  }
  return result;
}

void sub_1C01A5548()
{
  if (!qword_1EA197BB0)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197BB0);
    }
  }
}

unint64_t sub_1C01A55A4()
{
  unint64_t result = qword_1EA197BB8;
  if (!qword_1EA197BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197BB8);
  }
  return result;
}

unint64_t sub_1C01A55F8(uint64_t a1)
{
  unint64_t result = sub_1C01A5620();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01A5620()
{
  unint64_t result = qword_1EA197BC0;
  if (!qword_1EA197BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197BC0);
  }
  return result;
}

unint64_t sub_1C01A5674(void *a1)
{
  a1[1] = sub_1BFD0DBFC();
  a1[2] = sub_1BFCF6AA0();
  unint64_t result = sub_1C01A55A4();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.URL()
{
  return &type metadata for FormatWebEmbedBinding.URL;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.URL.CodingType()
{
  return &type metadata for FormatWebEmbedBinding.URL.CodingType;
}

uint64_t sub_1C01A56F4@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_1BFE0BD7C(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  if (a1)
  {
    sub_1BFE0BD7C((uint64_t)&v11[*(int *)(v9 + 36)], (uint64_t)v8, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v12 = a3;
    uint64_t v13 = 0x55206E6F69746341;
    uint64_t v14 = 0xEA00000000004C52;
  }
  else
  {
    uint64_t v15 = &v11[*(int *)(v9 + 32)];
    uint64_t v16 = sub_1C1515FDC();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v8, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
    uint64_t v12 = a3;
    uint64_t v13 = 5001813;
    uint64_t v14 = 0xE300000000000000;
  }
  sub_1C04338EC(v13, v14, (uint64_t)v8, v12);
  sub_1C01A5930((uint64_t)v11);
  uint64_t v18 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 0, 1, v18);
}

uint64_t sub_1C01A5930(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedWebEmbed();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for DebugFormatUploadItem(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C01A59D8(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1C01A59D8(id result, char a2)
{
  switch(a2)
  {
    case 2:
      return result;
    case 1:
      return (id)swift_bridgeObjectRetain();
    case 0:
      return (id)swift_retain();
  }
  return result;
}

void destroy for DebugFormatUploadItem(uint64_t a1)
{
}

void sub_1C01A5A10(void *a1, char a2)
{
  switch(a2)
  {
    case 2:

      break;
    case 1:
      swift_bridgeObjectRelease();
      break;
    case 0:
      swift_release();
      break;
  }
}

uint64_t assignWithCopy for DebugFormatUploadItem(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C01A59D8(*(id *)a2, v4);
  char v5 = *(void **)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C01A5A10(v5, v6);
  return a1;
}

uint64_t assignWithTake for DebugFormatUploadItem(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1C01A5A10(v4, v5);
  return a1;
}

uint64_t sub_1C01A5ACC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1C01A5AD4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadItem()
{
  return &type metadata for DebugFormatUploadItem;
}

void sub_1C01A5AF0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v23 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v4 = sub_1BFEABF78(a1);
    uint64_t v5 = 0;
    uint64_t v6 = a1 + 64;
    int64_t v19 = v1;
    uint64_t v21 = a1 + 64;
    int v20 = v3;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v9 = (unint64_t)v4 >> 6;
      if ((*(void *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_23;
      }
      if (*(_DWORD *)(a1 + 36) != v3) {
        goto LABEL_24;
      }
      uint64_t v22 = v5;
      uint64_t v10 = *(void **)(*(void *)(a1 + 56) + 8 * v4);
      swift_bridgeObjectRetain();
      sub_1BFEABF68(v10);
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1BFDB8960(v10);
      unint64_t v11 = *(void *)(v23 + 16);
      unint64_t v12 = *(void *)(v23 + 24);
      if (v11 >= v12 >> 1) {
        sub_1BFF661B8(v12 > 1, v11 + 1, 1);
      }
      *(void *)(v23 + 16) = v11 + 1;
      uint64_t v13 = v23 + 16 * v11;
      *(void *)(v13 + 32) = 0xD000000000000016;
      *(void *)(v13 + 40) = 0x80000001C1605DC0;
      int64_t v7 = 1 << *(unsigned char *)(a1 + 32);
      if (v4 >= v7) {
        goto LABEL_25;
      }
      uint64_t v6 = a1 + 64;
      uint64_t v14 = *(void *)(v21 + 8 * v9);
      if ((v14 & (1 << v4)) == 0) {
        goto LABEL_26;
      }
      int v3 = v20;
      if (*(_DWORD *)(a1 + 36) != v20) {
        goto LABEL_27;
      }
      unint64_t v15 = v14 & (-2 << (v4 & 0x3F));
      if (v15)
      {
        int64_t v7 = __clz(__rbit64(v15)) | v4 & 0xFFFFFFFFFFFFFFC0;
        int64_t v8 = v19;
      }
      else
      {
        unint64_t v16 = v9 + 1;
        unint64_t v17 = (unint64_t)(v7 + 63) >> 6;
        int64_t v8 = v19;
        if (v9 + 1 < v17)
        {
          unint64_t v18 = *(void *)(v21 + 8 * v16);
          if (v18)
          {
LABEL_20:
            int64_t v7 = __clz(__rbit64(v18)) + (v16 << 6);
          }
          else
          {
            while (v17 - 2 != v9)
            {
              unint64_t v18 = *(void *)(a1 + 80 + 8 * v9++);
              if (v18)
              {
                unint64_t v16 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      uint64_t v5 = v22 + 1;
      uint64_t v4 = v7;
      if (v22 + 1 == v8) {
        return;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t FeedHeadline.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FeedHeadline.layoutDirection.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 8) = v2;
}

void FeedHeadline.traits.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 32);
}

uint64_t FeedHeadline.metadata.getter()
{
  return swift_unknownObjectRetain();
}

void FeedHeadline.premiumBadge.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

uint64_t FeedHeadline.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedHeadline(0);
  return sub_1BFEE90FC(v1 + *(int *)(v3 + 40), a1, type metadata accessor for FeedHeadline.State);
}

uint64_t FeedHeadline.nativeAdInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedHeadline(0) + 44);
  return sub_1BFEE91C4(v3, a1);
}

uint64_t FeedHeadline.kind.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedHeadline(0) + 48));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1BFF7FF04(v4, v5);
}

unint64_t FeedHeadline.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for FeedHeadline(0) + 52));
  *a1 = v3;
  return sub_1BFEDCA78(v3);
}

id FeedHeadline.audioTrack.getter@<X0>(void *a1@<X8>)
{
  unint64_t v3 = *(void **)(v1 + *(int *)(type metadata accessor for FeedHeadline(0) + 56));
  *a1 = v3;
  return v3;
}

BOOL FeedHeadline.hasAccess.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for FeedHeadline(0) + 40);
  return *(unsigned char *)(v1 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 32)) == 0;
}

BOOL FeedHeadline.hasAudio.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FeedHeadline(0) + 56)) != 0;
}

uint64_t FeedHeadline.copy(nativeAdInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEF378(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = *(void *)v2;
  uint64_t v11 = *(void *)(v2 + 8);
  unint64_t v12 = *(void **)(v2 + 40);
  uint64_t v13 = *(void *)(v2 + 48);
  char v24 = *(unsigned char *)(v2 + 56);
  uint64_t v14 = sub_1C151D2DC();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v9, a1, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  uint64_t v16 = type metadata accessor for FeedHeadline(0);
  sub_1BFEE90FC(v2 + *(int *)(v16 + 40), (uint64_t)v6, type metadata accessor for FeedHeadline.State);
  uint64_t v23 = *(void **)(v2 + *(int *)(v16 + 56));
  uint64_t v21 = *(void *)(v2 + 32);
  char v22 = 0;
  id v17 = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(v10, v11, v12, v13, &v24, (uint64_t)v9, (uint64_t)v6, &v23, v20, (uint64_t)&v21);
}

void sub_1C01A61E8(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t sub_1C01A61FC()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_identifier);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t FeedHeadline.debugIdentifier.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_identifier);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t sub_1C01A62AC()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_sourceChannel);
  uint64_t v2 = (uint64_t)v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_name);
    swift_unknownObjectRelease();
    uint64_t v2 = sub_1C151E62C();
  }
  return v2;
}

uint64_t FeedHeadline.debugSourceName.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_sourceChannel);
  uint64_t v2 = (uint64_t)v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_name);
    swift_unknownObjectRelease();
    uint64_t v2 = sub_1C151E62C();
  }
  return v2;
}

uint64_t sub_1C01A63C4()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_title);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C151E62C();

  return v3;
}

uint64_t FeedHeadline.debugTitle.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_title);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C151E62C();

  return v3;
}

id sub_1C01A6494()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_thumbnail);
  id v2 = objc_msgSend(v1, sel_thumbnailAssetHandle);

  return v2;
}

id FeedHeadline.debugAssetHandle.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_thumbnail);
  id v2 = objc_msgSend(v1, sel_thumbnailAssetHandle);

  return v2;
}

id sub_1C01A6544()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_scoreProfile);
  return v1;
}

id FeedHeadline.debugScoreProfile.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 40), sel_scoreProfile);
  return v1;
}

uint64_t FeedHeadline.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BFEE90FC(v1, a1, type metadata accessor for FeedHeadline);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C01A6618@<X0>(uint64_t a1@<X8>)
{
  sub_1BFEE90FC(v1, a1, type metadata accessor for FeedHeadline);
  type metadata accessor for FeedGroupItem();
  return swift_storeEnumTagMultiPayload();
}

uint64_t FeedHeadline.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEF378(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v38 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v38 - v15;
  uint64_t v17 = v2 + *(int *)(type metadata accessor for FeedHeadline(0) + 40);
  uint64_t v18 = type metadata accessor for FeedHeadline.State(0);
  if (*(unsigned char *)(v17 + *(int *)(v18 + 32))) {
    BOOL v19 = 1;
  }
  else {
    BOOL v19 = *(unsigned char *)(v17 + *(int *)(v18 + 28)) == 0;
  }
  if (v19)
  {
    uint64_t v20 = sub_1C151CA3C();
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    return v21(a1, 1, 1, v20);
  }
  else
  {
    uint64_t v23 = *(void **)(v2 + 40);
    id v24 = objc_msgSend(v23, sel_articleID);
    uint64_t v25 = v24;
    if (!v24)
    {
      sub_1C151E62C();
      uint64_t v39 = v2;
      uint64_t v25 = (void *)sub_1C151E5EC();
      uint64_t v2 = v39;
      swift_bridgeObjectRelease();
    }
    id v26 = objc_msgSend(v23, sel_routeURL);
    if (v26)
    {
      uint64_t v27 = v26;
      sub_1C1515F1C();

      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v7, v4);
      uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v28(v13, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
      {
        uint64_t v29 = 0;
      }
      else
      {
        uint64_t v29 = (void *)sub_1C1515E9C();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
      }
    }
    else
    {
      uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v28(v13, 1, 1, v4);
      uint64_t v29 = 0;
    }
    id v30 = objc_msgSend(self, sel_nss_NewsURLForArticleID_routeURL_, v25, v29);

    if (v30)
    {
      sub_1C1515F1C();

      uint64_t v31 = 0;
    }
    else
    {
      uint64_t v31 = 1;
    }
    v28(v10, v31, 1, v4);
    sub_1C002F694((uint64_t)v10, (uint64_t)v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4) == 1)
    {
      sub_1BFEE9258((uint64_t)v16, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
LABEL_25:
      uint64_t v36 = sub_1C151CA3C();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a1, 1, 1, v36);
    }
    uint64_t v32 = (void *)sub_1C1515E9C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v4);
    sub_1C151E79C();
    uint64_t v33 = sub_1C151F6EC();
    swift_bridgeObjectRelease();
    if (!v33)
    {

      goto LABEL_25;
    }
    id v34 = objc_msgSend(*(id *)(v2 + 40), sel_title);
    if (v34)
    {
      uint64_t v35 = v34;
      sub_1C151E62C();
    }
    sub_1C151CA2C();

    uint64_t v37 = sub_1C151CA3C();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(a1, 0, 1, v37);
  }
}

void FeedHeadline.State.likedState.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void FeedHeadline.State.savedState.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

uint64_t FeedHeadline.State.sharedState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedHeadline.State(0);
  return sub_1BFEE90FC(v1 + *(int *)(v3 + 24), a1, type metadata accessor for FeedItem.SharedState);
}

uint64_t FeedHeadline.State.offensiveState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedHeadline.State(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t FeedHeadline.State.accessLevel.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedHeadline.State(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t FeedHeadline.State.deletedState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedHeadline.State(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t FeedHeadline.State.blockedState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for FeedHeadline.State(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t FeedHeadline.State.init(likedState:savedState:sharedState:offensiveState:accessLevel:deletedState:blockedState:)@<X0>(unsigned char *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, char *a7@<X6>, unsigned char *a8@<X8>)
{
  char v10 = *a2;
  char v11 = *a4;
  char v12 = *a5;
  char v13 = *a6;
  char v14 = *a7;
  *a8 = *a1;
  a8[1] = v10;
  uint64_t v15 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t result = sub_1C01A6F18(a3, (uint64_t)&a8[v15[6]]);
  a8[v15[7]] = v11;
  a8[v15[8]] = v12;
  a8[v15[9]] = v13;
  a8[v15[10]] = v14;
  return result;
}

uint64_t FeedHeadline.State.contextIdentifier.getter()
{
  FeedHeadline.State.selectors.getter();
  sub_1BFE99CBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v0 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1C01A6E20(unint64_t result)
{
  if (result >= 2) {
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1C01A6E30()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 144) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C01A6EA8()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

uint64_t sub_1C01A6F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedItem.SharedState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t assignWithCopy for FeedHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v62 = a3;
  uint64_t v63 = a2;
  uint64_t v7 = a3[10];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  *uint64_t v8 = *(unsigned char *)(a2 + v7);
  v8[1] = *(unsigned char *)(a2 + v7 + 1);
  char v10 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v11 = v10[6];
  char v12 = &v8[v11];
  char v13 = (unsigned char *)(v9 + v11);
  char v14 = (int *)type metadata accessor for SharedItem();
  uint64_t v61 = *((void *)v14 - 1);
  uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v61 + 48);
  int v16 = v15(v12, 1, v14);
  int v17 = v15(v13, 1, v14);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v13, v18);
      v12[v14[5]] = v13[v14[5]];
      uint64_t v19 = v14[6];
      uint64_t v20 = *(void **)&v13[v19];
      *(void *)&v12[v19] = v20;
      uint64_t v21 = v14[7];
      unint64_t v59 = &v13[v21];
      uint64_t v60 = &v12[v21];
      uint64_t v22 = sub_1C1515FDC();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      id v24 = v20;
      v23(v60, v59, v22);
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v61 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1BFEE9164((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SharedItem);
LABEL_6:
    uint64_t v25 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v12, v13, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v45 = sub_1C151631C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 24))(v12, v13, v45);
  v12[v14[5]] = v13[v14[5]];
  uint64_t v46 = v14[6];
  uint64_t v47 = *(void **)&v13[v46];
  uint64_t v48 = *(void **)&v12[v46];
  *(void *)&v12[v46] = v47;
  id v49 = v47;

  uint64_t v50 = v14[7];
  unint64_t v51 = &v12[v50];
  uint64_t v52 = &v13[v50];
  uint64_t v53 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 24))(v51, v52, v53);
LABEL_7:
  v8[v10[7]] = *(unsigned char *)(v9 + v10[7]);
  v8[v10[8]] = *(unsigned char *)(v9 + v10[8]);
  v8[v10[9]] = *(unsigned char *)(v9 + v10[9]);
  v8[v10[10]] = *(unsigned char *)(v9 + v10[10]);
  uint64_t v26 = v62[11];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(v63 + v26);
  uint64_t v29 = sub_1C151D2DC();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v30 + 8))(v27, v29);
LABEL_12:
    sub_1BFEEF378(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v27, v28, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v30 + 24))(v27, v28, v29);
LABEL_13:
  uint64_t v35 = v62[12];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(v63 + v35);
  unint64_t v38 = *(void *)(a1 + v35 + 8);
  unint64_t v39 = *(void *)(v63 + v35 + 8);
  if (v38 < 0x11)
  {
    if (v39 >= 0x11)
    {
      void *v36 = *v37;
      v36[1] = v37[1];
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v39 < 0x11)
  {
    sub_1C01A7564((uint64_t)v36);
LABEL_18:
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    goto LABEL_20;
  }
  void *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v40 = v62[13];
  uint64_t v41 = (void *)(a1 + v40);
  unint64_t v42 = *(void *)(a1 + v40);
  unint64_t v43 = *(void *)(v63 + v40);
  if (v42 == 2)
  {
    if (v43 >= 2)
    {
      if (v43 == 2)
      {
        uint64_t v44 = 2;
LABEL_35:
        *uint64_t v41 = v44;
        goto LABEL_36;
      }
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v43 == 2)
  {
    sub_1C01A75B8(a1 + v40);
LABEL_34:
    uint64_t v44 = *(void *)(v63 + v40);
    goto LABEL_35;
  }
  if (v42 >= 2)
  {
    if (v43 >= 2)
    {
      *uint64_t v41 = v43;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      goto LABEL_36;
    }
    swift_unknownObjectRelease();
    goto LABEL_34;
  }
  if (v43 >= 2)
  {
LABEL_29:
    *uint64_t v41 = v43;
    swift_unknownObjectRetain();
    goto LABEL_36;
  }
LABEL_28:
  *uint64_t v41 = v43;
LABEL_36:
  uint64_t v54 = v62[14];
  uint64_t v55 = *(void **)(a1 + v54);
  uint64_t v56 = *(void **)(v63 + v54);
  *(void *)(a1 + v54) = v56;
  id v57 = v56;

  return a1;
}

uint64_t sub_1C01A7564(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C01A75B8(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for FeedHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = a3[10];
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  *uint64_t v7 = *(unsigned char *)(a2 + v6);
  v7[1] = *(unsigned char *)(a2 + v6 + 1);
  uint64_t v9 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = &v7[v10];
  char v12 = (char *)(v8 + v10);
  char v13 = (int *)type metadata accessor for SharedItem();
  uint64_t v14 = *((void *)v13 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v11, v12, v16);
    v11[v13[5]] = v12[v13[5]];
    *(void *)&v11[v13[6]] = *(void *)&v12[v13[6]];
    uint64_t v17 = v13[7];
    uint64_t v29 = &v11[v17];
    uint64_t v18 = &v12[v17];
    uint64_t v19 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v29, v18, v19);
    (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
  }
  v7[v9[7]] = *(unsigned char *)(v8 + v9[7]);
  v7[v9[8]] = *(unsigned char *)(v8 + v9[8]);
  v7[v9[9]] = *(unsigned char *)(v8 + v9[9]);
  v7[v9[10]] = *(unsigned char *)(v8 + v9[10]);
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_1C151D2DC();
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1BFEEF378(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  uint64_t v27 = *(void *)(a2 + v26);
  if (v27 == 2) {
    uint64_t v27 = 2;
  }
  *(void *)(a1 + v26) = v27;
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for FeedHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v53 = a3;
  uint64_t v8 = a3[10];
  uint64_t v9 = (unsigned char *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  *uint64_t v9 = *(unsigned char *)(a2 + v8);
  v9[1] = *(unsigned char *)(a2 + v8 + 1);
  uint64_t v52 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v11 = v52[6];
  char v12 = &v9[v11];
  char v13 = (unsigned char *)(v10 + v11);
  uint64_t v14 = (int *)type metadata accessor for SharedItem();
  uint64_t v51 = *((void *)v14 - 1);
  uint64_t v15 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v51 + 48);
  int v16 = v15(v12, 1, v14);
  int v17 = v15(v13, 1, v14);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 32))(v12, v13, v18);
      v12[v14[5]] = v13[v14[5]];
      *(void *)&v12[v14[6]] = *(void *)&v13[v14[6]];
      uint64_t v19 = v14[7];
      uint64_t v20 = &v12[v19];
      uint64_t v21 = &v13[v19];
      uint64_t v22 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v51 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1BFEE9164((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SharedItem);
LABEL_6:
    uint64_t v23 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v12, v13, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v41 = sub_1C151631C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 40))(v12, v13, v41);
  v12[v14[5]] = v13[v14[5]];
  uint64_t v42 = v14[6];
  unint64_t v43 = *(void **)&v12[v42];
  *(void *)&v12[v42] = *(void *)&v13[v42];

  uint64_t v44 = v14[7];
  uint64_t v45 = &v12[v44];
  uint64_t v46 = &v13[v44];
  uint64_t v47 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 40))(v45, v46, v47);
LABEL_7:
  v9[v52[7]] = *(unsigned char *)(v10 + v52[7]);
  v9[v52[8]] = *(unsigned char *)(v10 + v52[8]);
  v9[v52[9]] = *(unsigned char *)(v10 + v52[9]);
  v9[v52[10]] = *(unsigned char *)(v10 + v52[10]);
  uint64_t v24 = a3[11];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = sub_1C151D2DC();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 48);
  int v30 = v29(v25, 1, v27);
  int v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v31)
  {
    (*(void (**)(void *, uint64_t))(v28 + 8))(v25, v27);
LABEL_12:
    sub_1BFEEF378(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v28 + 40))(v25, v26, v27);
LABEL_13:
  uint64_t v33 = v53[12];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  if (*(void *)(a1 + v33 + 8) < 0x11uLL)
  {
LABEL_16:
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    goto LABEL_18;
  }
  unint64_t v36 = *(void *)(v35 + 8);
  if (v36 < 0x11)
  {
    sub_1C01A7564(v34);
    goto LABEL_16;
  }
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = v36;
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v37 = v53[13];
  unint64_t v38 = (unint64_t *)(a1 + v37);
  unint64_t v39 = *(void *)(a1 + v37);
  unint64_t v40 = *(void *)(a2 + v37);
  if (v39 == 2)
  {
    if (v40 == 2) {
      unint64_t v40 = 2;
    }
    goto LABEL_30;
  }
  if (v40 == 2)
  {
    sub_1C01A75B8(a1 + v37);
  }
  else
  {
    if (v39 < 2) {
      goto LABEL_30;
    }
    if (v40 >= 2)
    {
      *unint64_t v38 = v40;
      swift_unknownObjectRelease();
      goto LABEL_31;
    }
    swift_unknownObjectRelease();
  }
  unint64_t v40 = *(void *)(a2 + v37);
LABEL_30:
  *unint64_t v38 = v40;
LABEL_31:
  uint64_t v48 = v53[14];
  id v49 = *(void **)(a1 + v48);
  *(void *)(a1 + v48) = *(void *)(a2 + v48);

  return a1;
}

uint64_t sub_1C01A7EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FeedHeadline.State(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 40);
      char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1BFEEF378(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C01A803C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FeedHeadline.State(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 40);
      char v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1BFEEF378(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FeedHeadline.State(unsigned char *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    a1[1] = *((unsigned char *)a2 + 1);
    uint64_t v7 = a3[6];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = (int *)type metadata accessor for SharedItem();
    uint64_t v11 = *((void *)v10 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      v8[v10[5]] = v9[v10[5]];
      uint64_t v15 = v10[6];
      uint64_t v16 = *(void **)&v9[v15];
      *(void *)&v8[v15] = v16;
      uint64_t v17 = v10[7];
      uint64_t v24 = &v9[v17];
      uint64_t v25 = &v8[v17];
      uint64_t v18 = sub_1C1515FDC();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      id v20 = v16;
      v19(v25, v24, v18);
      (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v21 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v21) = *((unsigned char *)a2 + v21);
    uint64_t v22 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v22) = *((unsigned char *)a2 + v22);
  }
  return v4;
}

unsigned char *assignWithCopy for FeedHeadline.State(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = (int *)type metadata accessor for SharedItem();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v23 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 24))(v7, v8, v23);
      v7[v9[5]] = v8[v9[5]];
      uint64_t v24 = v9[6];
      uint64_t v25 = *(void **)&v8[v24];
      uint64_t v26 = *(void **)&v7[v24];
      *(void *)&v7[v24] = v25;
      id v27 = v25;

      uint64_t v28 = v9[7];
      uint64_t v29 = &v7[v28];
      int v30 = &v8[v28];
      uint64_t v31 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
      goto LABEL_7;
    }
    sub_1BFEE9164((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SharedItem);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v21 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v7, v8, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1C151631C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
  v7[v9[5]] = v8[v9[5]];
  uint64_t v15 = v9[6];
  uint64_t v16 = *(void **)&v8[v15];
  *(void *)&v7[v15] = v16;
  uint64_t v17 = v9[7];
  uint64_t v32 = &v8[v17];
  uint64_t v33 = &v7[v17];
  uint64_t v18 = sub_1C1515FDC();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  id v20 = v16;
  v19(v33, v32, v18);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  a1[a3[7]] = a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

unsigned char *initializeWithTake for FeedHeadline.State(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = (int *)type metadata accessor for SharedItem();
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    v7[v9[5]] = v8[v9[5]];
    *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
    uint64_t v13 = v9[7];
    uint64_t v14 = &v7[v13];
    uint64_t v15 = &v8[v13];
    uint64_t v16 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v17 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v17] = a2[v17];
  uint64_t v18 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v18] = a2[v18];
  return a1;
}

unsigned char *assignWithTake for FeedHeadline.State(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = (int *)type metadata accessor for SharedItem();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v23 = sub_1C151631C();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 40))(v7, v8, v23);
      v7[v9[5]] = v8[v9[5]];
      uint64_t v24 = v9[6];
      uint64_t v25 = *(void **)&v7[v24];
      *(void *)&v7[v24] = *(void *)&v8[v24];

      uint64_t v26 = v9[7];
      id v27 = &v7[v26];
      uint64_t v28 = &v8[v26];
      uint64_t v29 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_1BFEE9164((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SharedItem);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v19 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v7, v8, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v14 = sub_1C151631C();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
  v7[v9[5]] = v8[v9[5]];
  *(void *)&v7[v9[6]] = *(void *)&v8[v9[6]];
  uint64_t v15 = v9[7];
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  uint64_t v18 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v20 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v20] = a2[v20];
  uint64_t v21 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v21] = a2[v21];
  return a1;
}

uint64_t sub_1C01A8B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 1);
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for FeedItem.SharedState(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C01A8BD4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 1) = a2 + 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for FeedItem.SharedState(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t dispatch thunk of WebEmbedCoordinatorType.webEmbedDidSelectLink(identifier:url:headline:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of WebEmbedCoordinatorType.webEmbedDidLoad(identifier:timeInterval:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of WebEmbedCoordinatorType.webEmbedDidFailLoad(identifier:timeInterval:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t type metadata accessor for WebEmbedCoordinator()
{
  return self;
}

BOOL static FeedRefreshUpdateBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedRefreshUpdateBehavior.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FeedRefreshUpdateBehavior.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C01A8D74()
{
  unint64_t result = qword_1EA197BC8;
  if (!qword_1EA197BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197BC8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedRefreshUpdateBehavior(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01A8E94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C01A8EBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  int v3 = v2;
  sub_1C1517E7C();
  if ((objc_msgSend(a1, sel_respondsToSelector_, sel_newsFeedFormatConfiguration) & 1) == 0) {
    goto LABEL_11;
  }
  id v6 = objc_msgSend(a1, sel_newsFeedFormatConfiguration);
  if (!v6) {
    goto LABEL_11;
  }
  uint64_t v7 = v6;
  unint64_t v8 = sub_1C151E62C();
  unint64_t v10 = v9;

  uint64_t v11 = v3[6];
  if (v11)
  {
    BOOL v12 = v3[5] == v8 && v11 == v10;
    if (v12 || (sub_1C1520A9C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
LABEL_11:
      uint64_t v16 = v3[4];
      *a2 = v3[3];
      a2[1] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_1C1517E8C();
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C02D2A68(v8, v10);
  unint64_t v15 = v14;
  sub_1C01A91E8();
  sub_1C1517D9C();
  sub_1BFE95664(v13, v15);
  v3[3] = v18;
  v3[4] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3[5] = v8;
  v3[6] = v10;
  swift_bridgeObjectRelease();
  *a2 = v18;
  a2[1] = v19;
  return sub_1C1517E8C();
}

uint64_t sub_1C01A9164()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatFeedConfigManager()
{
  return self;
}

unint64_t sub_1C01A91E8()
{
  unint64_t result = qword_1EA197BD0;
  if (!qword_1EA197BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197BD0);
  }
  return result;
}

uint64_t sub_1C01A923C()
{
  uint64_t v1 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v1 - 8);
  sub_1C1517E9C();
  sub_1C1517ECC();
  swift_allocObject();
  *(void *)(v0 + 16) = sub_1C1517EBC();
  type metadata accessor for FormatJSONDecoder();
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  swift_allocObject();
  *(void *)(v0 + 56) = sub_1C06599C4(MEMORY[0x1E4FBC860]);
  return v0;
}

uint64_t destroy for DebugFormatErrorModel(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s8NewsFeed21DebugFormatErrorModelVwCP_0(void *a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  id v5 = *(id *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = v4;
  a1[1] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatErrorModel(uint64_t a1, uint64_t a2)
{
  id v4 = *(id *)a2;
  id v5 = *(id *)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for DebugFormatErrorModel(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatErrorModel()
{
  return &type metadata for DebugFormatErrorModel;
}

uint64_t sub_1C01A9444(uint64_t a1)
{
  uint64_t v9 = MEMORY[0x1E4FBC860];
  sub_1BFF661B8(0, 0, 0);
  uint64_t v2 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 64;
    do
    {
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C0B72E50();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      unint64_t v6 = *(void *)(v9 + 16);
      unint64_t v5 = *(void *)(v9 + 24);
      if (v6 >= v5 >> 1) {
        sub_1BFF661B8(v5 > 1, v6 + 1, 1);
      }
      ++v3;
      v4 += 40;
      *(void *)(v9 + 16) = v6 + 1;
      uint64_t v7 = v9 + 16 * v6;
      *(void *)(v7 + 32) = 0x65736143202D2020;
      *(void *)(v7 + 40) = 0xE900000000000020;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_1C01A95D4(void *a1)
{
  sub_1C01AA278(0, &qword_1EA197BE8, MEMORY[0x1E4FAA9D8]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (void **)((char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v16 - v6;
  v16[1] = a1;
  id v8 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  uint64_t v9 = sub_1C15181CC();
  int v10 = swift_dynamicCast();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  if (!v10)
  {
    v11(v7, 1, 1, v9);
LABEL_6:
    id v14 = a1;
    goto LABEL_7;
  }
  uint64_t v12 = *(void *)(v9 - 8);
  v11(v7, 0, 1, v9);
  sub_1C01AD2C0((uint64_t)v7, (uint64_t)v4);
  if ((*(unsigned int (**)(void **, uint64_t))(v12 + 88))(v4, v9) != *MEMORY[0x1E4FAA9D0])
  {
    (*(void (**)(void **, uint64_t))(v12 + 8))(v4, v9);
    goto LABEL_6;
  }
  (*(void (**)(void **, uint64_t))(v12 + 96))(v4, v9);
  uint64_t v13 = *v4;
  a1 = (void *)sub_1C01A95D4(v13);

LABEL_7:
  sub_1C01AB7CC((uint64_t)v7, &qword_1EA197BE8, MEMORY[0x1E4FAA9D8]);
  return a1;
}

uint64_t sub_1C01A9804(void *a1)
{
  sub_1C01AA278(0, (unint64_t *)&qword_1EB85B950, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v58 = (char *)&v53 - v3;
  uint64_t v57 = type metadata accessor for FormatLayoutError();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v54 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01AA278(0, &qword_1EA197BD8, (void (*)(uint64_t))type metadata accessor for FormatVersioningError);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v62 = (char *)&v53 - v6;
  uint64_t v61 = type metadata accessor for FormatVersioningError(0);
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v55 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01AA278(0, &qword_1EA197BE0, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
  MEMORY[0x1F4188790](v8 - 8);
  int v10 = (char *)&v53 - v9;
  uint64_t v11 = type metadata accessor for FormatDerivedDataError();
  uint64_t v63 = *(void *)(v11 - 8);
  uint64_t v64 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01AA278(0, &qword_1EB85BDD8, (void (*)(uint64_t))type metadata accessor for DebugFormatServiceError);
  MEMORY[0x1F4188790](v13 - 8);
  unint64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = type metadata accessor for DebugFormatServiceError();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01AA278(0, &qword_1EA197BE8, MEMORY[0x1E4FAA9D8]);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (uint64_t *)((char *)&v53 - v21);
  v70[0] = a1;
  id v23 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  uint64_t v24 = sub_1C15181CC();
  int v25 = swift_dynamicCast();
  uint64_t v26 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  if (v25)
  {
    uint64_t v27 = *(void *)(v24 - 8);
    v26(v22, 0, 1, v24);
    if ((*(unsigned int (**)(void *, uint64_t))(v27 + 88))(v22, v24) == *MEMORY[0x1E4FAA9D0])
    {
      (*(void (**)(void *, uint64_t))(v27 + 96))(v22, v24);
      uint64_t v28 = (void *)*v22;
      uint64_t v29 = sub_1C01A9804(*v22);

      return v29;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v22, v24);
  }
  else
  {
    v26(v22, 1, 1, v24);
    sub_1C01AB7CC((uint64_t)v22, &qword_1EA197BE8, MEMORY[0x1E4FAA9D8]);
  }
  v70[0] = a1;
  id v30 = a1;
  int v31 = swift_dynamicCast();
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if (v31)
  {
    v32(v15, 0, 1, v16);
    sub_1C01AB764((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DebugFormatServiceError);
    uint64_t v29 = sub_1C01AA5A0((uint64_t)v19);
    uint64_t v33 = type metadata accessor for DebugFormatServiceError;
    uint64_t v34 = (uint64_t)v19;
LABEL_15:
    sub_1BFF978F0(v34, (uint64_t (*)(void))v33);
    return v29;
  }
  v32(v15, 1, 1, v16);
  sub_1C01AB7CC((uint64_t)v15, &qword_1EB85BDD8, (void (*)(uint64_t))type metadata accessor for DebugFormatServiceError);
  v70[0] = a1;
  id v35 = a1;
  uint64_t v36 = v64;
  int v37 = swift_dynamicCast();
  unint64_t v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56);
  if (v37)
  {
    v38(v10, 0, 1, v36);
    uint64_t v39 = v59;
    sub_1C01AB764((uint64_t)v10, v59, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataError);
    uint64_t v29 = sub_1C01AAC34(v39);
    unint64_t v40 = type metadata accessor for FormatDerivedDataError;
LABEL_14:
    uint64_t v33 = v40;
    uint64_t v34 = v39;
    goto LABEL_15;
  }
  v38(v10, 1, 1, v36);
  sub_1C01AB7CC((uint64_t)v10, &qword_1EA197BE0, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
  v70[0] = a1;
  id v41 = a1;
  uint64_t v42 = (uint64_t)v62;
  uint64_t v43 = v61;
  int v44 = swift_dynamicCast();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
  if (v44)
  {
    v45(v42, 0, 1, v43);
    uint64_t v39 = v55;
    sub_1C01AB764(v42, v55, type metadata accessor for FormatVersioningError);
    uint64_t v29 = sub_1C01AAE98(v39);
    unint64_t v40 = (uint64_t (*)())type metadata accessor for FormatVersioningError;
    goto LABEL_14;
  }
  v45(v42, 1, 1, v43);
  sub_1C01AB7CC(v42, &qword_1EA197BD8, (void (*)(uint64_t))type metadata accessor for FormatVersioningError);
  v70[0] = a1;
  id v46 = a1;
  uint64_t v47 = (uint64_t)v58;
  uint64_t v48 = v57;
  int v49 = swift_dynamicCast();
  uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56);
  if (v49)
  {
    v50(v47, 0, 1, v48);
    uint64_t v39 = v54;
    sub_1C01AB764(v47, v54, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
    uint64_t v29 = sub_1C01AB0E0(v39);
    unint64_t v40 = type metadata accessor for FormatLayoutError;
    goto LABEL_14;
  }
  v50(v47, 1, 1, v48);
  sub_1C01AB7CC(v47, (unint64_t *)&qword_1EB85B950, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  id v65 = a1;
  id v52 = a1;
  if (swift_dynamicCast())
  {
    sub_1C01AA2CC((uint64_t)v67, (uint64_t)v70);
    id v65 = 0;
    unint64_t v66 = 0xE000000000000000;
    sub_1C1520CDC();
    sub_1C01AA328((uint64_t)v67);
    uint64_t v29 = (uint64_t)v65;
    sub_1C01AA328((uint64_t)v70);
  }
  else
  {
    uint64_t v68 = 0;
    memset(v67, 0, sizeof(v67));
    char v69 = -1;
    sub_1C01AD260((uint64_t)v67, (uint64_t)&unk_1EA197BF0, (uint64_t)&type metadata for FormatBindingError, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1BFEFDD5C);
    *(void *)&v67[0] = a1;
    v70[0] = 0;
    v70[1] = 0xE000000000000000;
    sub_1C1520CDC();

    return v70[0];
  }
  return v29;
}

void sub_1C01AA278(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C01AA2CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C01AA328(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C01AA37C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1C01ACC80(v4, (uint64_t)v10, (uint64_t (*)(void))sub_1BFFFE918);
      sub_1C15200FC();
      sub_1C151E80C();
      __swift_project_boxed_opaque_existential_1(v10, v10[3]);
      sub_1C1520A3C();
      sub_1C151E80C();
      sub_1C01A9804((void *)v10[5]);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1BFF978F0((uint64_t)v10, (uint64_t (*)(void))sub_1BFFFE918);
      uint64_t v2 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v11;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BFF661B8(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v11;
      }
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = v2 + 16 * v6;
      *(void *)(v7 + 32) = 0;
      *(void *)(v7 + 40) = 0xE000000000000000;
      v4 += 48;
      --v1;
    }
    while (v1);
  }
  v10[0] = v2;
  sub_1BFEFDD5C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v8 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C01AA5A0(uint64_t a1)
{
  sub_1C01AA278(0, &qword_1EA197BE8, MEMORY[0x1E4FAA9D8]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (void *)((char *)v40 - v3);
  sub_1C01AA278(0, &qword_1EA197BF8, MEMORY[0x1E4FBBA90]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v40 - v6;
  uint64_t v8 = sub_1C15201EC();
  uint64_t v42 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  int v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DebugFormatServiceError();
  MEMORY[0x1F4188790](v15);
  int v44 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v40 - v18;
  sub_1C01ACC80(a1, (uint64_t)v40 - v18, (uint64_t (*)(void))type metadata accessor for DebugFormatServiceError);
  uint64_t v43 = v15;
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_1BFF978F0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for DebugFormatServiceError);
    goto LABEL_5;
  }
  v40[1] = a1;
  sub_1C0157218();
  uint64_t v21 = v20;
  uint64_t v22 = v12;
  id v23 = *(void **)&v19[*(int *)(v20 + 48)];
  uint64_t v41 = v22;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v14, v19, v11);
  uint64_t v45 = v23;
  id v24 = v23;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  int v25 = swift_dynamicCast();
  uint64_t v26 = v42;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
  if (!v25)
  {
    uint64_t v31 = v41;
    v27(v7, 1, 1, v8);
    sub_1C01AB7CC((uint64_t)v7, &qword_1EA197BF8, MEMORY[0x1E4FBBA90]);
    uint64_t v45 = v23;
    id v32 = v23;
    uint64_t v33 = sub_1C15181CC();
    int v34 = swift_dynamicCast();
    id v35 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
    if (v34)
    {
      uint64_t v36 = *(void *)(v33 - 8);
      v35(v4, 0, 1, v33);
      int v37 = (*(uint64_t (**)(uint64_t *, uint64_t))(v36 + 88))(v4, v33);
      uint64_t v29 = (uint64_t)v44;
      if (v37 == *MEMORY[0x1E4FAA9D0])
      {
        (*(void (**)(uint64_t *, uint64_t))(v36 + 96))(v4, v33);
        uint64_t v38 = *v4;
        uint64_t v39 = *(int *)(v21 + 48);
        (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v29, v14, v11);
        *(void *)(v29 + v39) = v38;
        swift_storeEnumTagMultiPayload();
        uint64_t v28 = sub_1C01AA5A0(v29);

        sub_1BFF978F0(v29, (uint64_t (*)(void))type metadata accessor for DebugFormatServiceError);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v11);
        return v28;
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v11);

      (*(void (**)(uint64_t *, uint64_t))(v36 + 8))(v4, v33);
      goto LABEL_6;
    }
    v35(v4, 1, 1, v33);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v11);
    sub_1C01AB7CC((uint64_t)v4, &qword_1EA197BE8, MEMORY[0x1E4FAA9D8]);
LABEL_5:
    uint64_t v29 = (uint64_t)v44;
LABEL_6:
    uint64_t v45 = 0;
    unint64_t v46 = 0xE000000000000000;
    sub_1C1520CDC();
    sub_1BFF978F0(v29, (uint64_t (*)(void))type metadata accessor for DebugFormatServiceError);
    return (uint64_t)v45;
  }
  v27(v7, 0, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v10, v7, v8);
  uint64_t v28 = sub_1C01ABEE0((uint64_t)v14, (uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v11);
  return v28;
}

unint64_t sub_1C01AAC34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatDerivedDataError();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v14 - v6;
  sub_1C01ACC80(a1, (uint64_t)&v14 - v6, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataError);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = (void *)*((void *)v7 + 2);
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v10 = 0xD000000000000018;
    uint64_t v11 = "Failed to compile style ";
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = (void *)*((void *)v7 + 2);
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v10 = 0xD00000000000001DLL;
    uint64_t v11 = "Failed to compile decoration ";
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      unint64_t v14 = 0;
      unint64_t v15 = 0xE000000000000000;
      sub_1C1520CDC();
      sub_1BFF978F0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataError);
      unint64_t v12 = v14;
      sub_1BFF978F0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatDerivedDataError);
      return v12;
    }
    uint64_t v9 = (void *)*((void *)v7 + 2);
    unint64_t v14 = 0;
    unint64_t v15 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v10 = 0xD000000000000018;
    uint64_t v11 = "Failed to compile group ";
  }
  unint64_t v14 = v10;
  unint64_t v15 = (unint64_t)(v11 - 32) | 0x8000000000000000;
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C01A9804(v9);
  sub_1C151E80C();
  swift_bridgeObjectRelease();

  return v14;
}

uint64_t sub_1C01AAE98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for FormatVersioningError(0) + 28));
  if (v1)
  {
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      sub_1BFC66384(v1 + 40 * v2 - 8, (uint64_t)v5);
      __swift_project_boxed_opaque_existential_1(v5, v5[3]);
      sub_1C1520F4C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    }
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_1C01ABFFC(v3);
    swift_bridgeObjectRelease();
  }
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_1C15200FC();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151928C();
  sub_1C01ACAE8((unint64_t *)&unk_1EB8714F0, MEMORY[0x1E4FAB0A8]);
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v5[0];
}

uint64_t sub_1C01AB0E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v48 - v6);
  sub_1C01ACC80(a1, (uint64_t)&v48 - v6, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
  if (swift_getEnumCaseMultiPayload() == 10)
  {
    uint64_t v8 = *v7;
    uint64_t v9 = v7[2];
    uint64_t v48 = v7[1];
    uint64_t v49 = v9;
    uint64_t v50 = v8;
    unint64_t v10 = *(void *)(v8 + 32);
    if (v10 >> 62) {
      goto LABEL_31;
    }
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    while (v11)
    {
      uint64_t v12 = 4;
      while (1)
      {
        uint64_t v13 = v12 - 4;
        if ((v10 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v14 = MEMORY[0x1C18C7CB0](v12 - 4, v10);
        BOOL v15 = __OFADD__(v13, 1);
        uint64_t v16 = v12 - 3;
        if (v15) {
          goto LABEL_30;
        }
LABEL_10:
        if (*(void *)(v14 + 16) >> 60 != 3)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_release();
          goto LABEL_29;
        }
        swift_release();
        ++v12;
        if (v16 == v11) {
          goto LABEL_12;
        }
      }
      uint64_t v14 = *(void *)(v10 + 8 * v12);
      swift_retain();
      BOOL v15 = __OFADD__(v13, 1);
      uint64_t v16 = v12 - 3;
      if (!v15) {
        goto LABEL_10;
      }
LABEL_30:
      __break(1u);
LABEL_31:
      swift_bridgeObjectRetain_n();
      uint64_t v11 = sub_1C15204BC();
    }
LABEL_12:
    swift_bridgeObjectRelease_n();
    unint64_t v52 = *(void *)(v50 + 32);
    if (v52 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_1C15204BC();
      uint64_t v17 = result;
      if (result) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v17)
      {
LABEL_14:
        if (v17 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v19 = 0;
        unint64_t v20 = v52 & 0xC000000000000001;
        uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v51 = v17;
        do
        {
          if (v20)
          {
            uint64_t v22 = MEMORY[0x1C18C7CB0](v19, v52);
          }
          else
          {
            uint64_t v22 = *(void *)(v52 + 8 * v19 + 32);
            swift_retain();
          }
          unint64_t v23 = *(void *)(v22 + 16);
          if (v23 >> 60 == 3)
          {
            id v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFLL);
            uint64_t v25 = v24[2];
            uint64_t v26 = v24[3];
            uint64_t v28 = v24[4];
            uint64_t v27 = v24[5];
            uint64_t v29 = v24[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_release();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v21 = sub_1C0EE2DA8(0, v21[2] + 1, 1, v21);
            }
            unint64_t v31 = v21[2];
            unint64_t v30 = v21[3];
            if (v31 >= v30 >> 1) {
              uint64_t v21 = sub_1C0EE2DA8((void *)(v30 > 1), v31 + 1, 1, v21);
            }
            v21[2] = v31 + 1;
            id v32 = &v21[5 * v31];
            v32[4] = v25;
            v32[5] = v26;
            v32[6] = v28;
            v32[7] = v27;
            v32[8] = v29;
            uint64_t v17 = v51;
          }
          else
          {
            swift_release();
          }
          ++v19;
        }
        while (v17 != v19);
        goto LABEL_35;
      }
    }
    uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
LABEL_35:
    swift_bridgeObjectRelease_n();
    uint64_t v33 = v48;
    swift_retain();
    uint64_t v34 = v49;
    swift_retain();
    uint64_t v35 = sub_1C01ACB30((uint64_t)v21, v33, v34);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v36 = *(void *)(v35 + 16);
    if (v36)
    {
      unint64_t v52 = 0;
      swift_bridgeObjectRetain();
      uint64_t v51 = v35;
      int v37 = (char *)(v35 + 64);
      uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        int v40 = *v37;
        if (v40 != 255)
        {
          uint64_t v41 = *((void *)v37 - 4);
          unint64_t v42 = *((void *)v37 - 3);
          uint64_t v44 = *((void *)v37 - 2);
          uint64_t v43 = *((void *)v37 - 1);
          sub_1BFF7D1D4(v41, v42, v44, v43, *v37);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v38 = sub_1C0EE2D94(0, v38[2] + 1, 1, v38);
          }
          unint64_t v46 = v38[2];
          unint64_t v45 = v38[3];
          if (v46 >= v45 >> 1) {
            uint64_t v38 = sub_1C0EE2D94((void *)(v45 > 1), v46 + 1, 1, v38);
          }
          v38[2] = v46 + 1;
          uint64_t v39 = &v38[5 * v46];
          v39[4] = v41;
          v39[5] = v42;
          v39[6] = v44;
          v39[7] = v43;
          *((unsigned char *)v39 + 64) = v40;
        }
        v37 += 40;
        --v36;
      }
      while (v36);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    sub_1C15200FC();
    uint64_t v56 = v54;
    unint64_t v57 = v55;
    sub_1C151E80C();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    uint64_t v47 = sub_1C01A9444((uint64_t)v38);
    swift_bridgeObjectRelease();
    uint64_t v53 = v47;
    sub_1BFEFDD5C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE99E40();
    sub_1C151E55C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return v56;
  }
  sub_1BFF978F0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
LABEL_29:
  uint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  sub_1C1520CDC();
  sub_1BFF978F0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
  return v54;
}

uint64_t sub_1C01AB764(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C01AB7CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C01AA278(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C01AB828(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v1, 0);
    uint64_t v2 = v15;
    uint64_t v4 = *(void *)(type metadata accessor for FeedItem(0) - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      sub_1C01AB9C0(v14);
      uint64_t v7 = v14[0];
      uint64_t v8 = v14[1];
      uint64_t v15 = v2;
      unint64_t v10 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1BFF661B8(v9 > 1, v10 + 1, 1);
        uint64_t v2 = v15;
      }
      *(void *)(v2 + 16) = v10 + 1;
      uint64_t v11 = v2 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v8;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  v14[0] = v2;
  sub_1BFEFDD5C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v12 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C01AB9C0@<X0>(void *a1@<X8>)
{
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_1C15200FC();
  sub_1C151E80C();
  FeedItem.kind.getter(&v7);
  uint64_t v2 = v7;
  unint64_t v3 = v8;
  sub_1BFD78FAC(v7, v8);
  sub_1BFEEFC20(v2, v3);
  sub_1C151E80C();
  FeedItem.debugIdentifier.getter();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  FeedItem.debugTitle.getter();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  FeedItem.traits.getter((uint64_t *)&v6);
  uint64_t v7 = 91;
  unint64_t v8 = 0xE100000000000000;
  uint64_t v6 = sub_1BFFBE5C8();
  sub_1BFEFDD5C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  sub_1C151E55C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v5 = v10;
  *a1 = v9;
  a1[1] = v5;
  return result;
}

uint64_t sub_1C01ABBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  sub_1C151E80C();
  sub_1C151E80C();
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF661B8(0, v4, 0);
    uint64_t result = sub_1BFD44A04(v3);
    int64_t v6 = result;
    int v8 = v7;
    char v10 = v9 & 1;
    uint64_t v26 = v3;
    uint64_t v27 = v3 + 56;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(v3 + 32))
    {
      if (((*(void *)(v27 + (((unint64_t)v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_16;
      }
      if (*(_DWORD *)(v3 + 36) != v8) {
        goto LABEL_17;
      }
      sub_1BFF27ECC();
      uint64_t v11 = sub_1C151FF1C();
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        uint64_t v13 = (uint64_t *)(v11 + 32 * v12);
        uint64_t v14 = *v13;
        uint64_t v15 = v13[1];
        uint64_t v16 = v13[2];
        uint64_t v17 = v13[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = MEMORY[0x1C18C7910](0x454D524F464C414DLL, 0xEC00000044492044);
        uint64_t v15 = v18;
        uint64_t v16 = v19;
        uint64_t v17 = v20;
      }
      MEMORY[0x1C18C6220](v14, v15, v16, v17);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v22 = *(void *)(v28 + 16);
      unint64_t v21 = *(void *)(v28 + 24);
      if (v22 >= v21 >> 1) {
        sub_1BFF661B8(v21 > 1, v22 + 1, 1);
      }
      *(void *)(v28 + 16) = v22 + 1;
      uint64_t v23 = v28 + 16 * v22;
      *(void *)(v23 + 32) = 539631648;
      *(void *)(v23 + 40) = 0xE400000000000000;
      uint64_t v3 = v26;
      uint64_t result = sub_1BFD43BF8(v6, v8, v10 & 1, v26);
      int64_t v6 = result;
      int v8 = v24;
      char v10 = v25 & 1;
      if (!--v4)
      {
        sub_1C0153754(result, v24, v25 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
LABEL_14:
    sub_1BFEFDD5C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE99E40();
    sub_1C151E55C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    return 8237;
  }
  return result;
}

uint64_t sub_1C01ABEE0(uint64_t a1, uint64_t a2)
{
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  strcpy((char *)v4, "File:\n    - ");
  sub_1C1515FDC();
  sub_1C01ACAE8((unint64_t *)&qword_1EB861120, MEMORY[0x1E4F276F0]);
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C01AC19C(a2);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v4[0];
}

uint64_t sub_1C01ABFFC(uint64_t a1)
{
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  do
  {
    sub_1BFC66384(v2, (uint64_t)v5);
    __swift_project_boxed_opaque_existential_1(v5, v6);
    sub_1C1520F6C();
    if (v3)
    {
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      __swift_project_boxed_opaque_existential_1(v5, v6);
      sub_1C1520F4C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
    }
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    v2 += 40;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1C01AC19C(uint64_t a1)
{
  uint64_t v2 = sub_1C15201DC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v36 - v7;
  uint64_t v9 = sub_1C15201EC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (long long *)((char *)&v36 - v15);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v36 - v15, a1, v9, v14);
  int v17 = (*(uint64_t (**)(long long *, uint64_t))(v10 + 88))(v16, v9);
  if (v17 == *MEMORY[0x1E4FBBA70])
  {
    (*(void (**)(long long *, uint64_t))(v10 + 96))(v16, v9);
    sub_1C01AC8BC();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, (char *)v16 + *(int *)(v18 + 48), v2);
    unint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v19 = 0xD000000000000014;
    uint64_t v20 = "Expected type to be ";
LABEL_5:
    unint64_t v37 = v19;
    unint64_t v38 = (unint64_t)(v20 - 32) | 0x8000000000000000;
    sub_1C1520FAC();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
LABEL_6:
    uint64_t v22 = sub_1C15201BC();
    sub_1C01ABFFC(v22);
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    unint64_t v23 = v37;
    unint64_t v24 = v38;
    sub_1C01AC96C();
    unint64_t v37 = v23;
    unint64_t v38 = v24;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v25 = v37;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return v25;
  }
  if (v17 == *MEMORY[0x1E4FBBA80])
  {
    (*(void (**)(long long *, uint64_t))(v10 + 96))(v16, v9);
    sub_1C01AC8BC();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, (char *)v16 + *(int *)(v21 + 48), v2);
    unint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v19 = 0xD000000000000018;
    uint64_t v20 = "Missing value with type ";
    goto LABEL_5;
  }
  if (v17 != *MEMORY[0x1E4FBBA68])
  {
    if (v17 != *MEMORY[0x1E4FBBA78])
    {
      unint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v37 = 0x206E776F6E6B6E55;
      unint64_t v38 = 0xEF0A3A726F727265;
      v40[0] = 0;
      v40[1] = 0xE000000000000000;
      sub_1C1520CDC();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v10 + 8);
      v35(v12, v9);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      unint64_t v25 = v37;
      v35((char *)v16, v9);
      return v25;
    }
    (*(void (**)(long long *, uint64_t))(v10 + 96))(v16, v9);
    (*(void (**)(char *, long long *, uint64_t))(v3 + 32))(v8, v16, v2);
    unint64_t v37 = 0;
    unint64_t v38 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    unint64_t v37 = 0xD000000000000012;
    unint64_t v38 = 0x80000001C1605EE0;
    goto LABEL_6;
  }
  (*(void (**)(long long *, uint64_t))(v10 + 96))(v16, v9);
  sub_1C01ACA68();
  uint64_t v28 = (char *)v16 + *(int *)(v27 + 48);
  sub_1BFC773DC(v16, (uint64_t)&v37);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v28, v2);
  __swift_project_boxed_opaque_existential_1(&v37, v39);
  uint64_t v29 = sub_1C1520F6C();
  if (v30)
  {
    v40[0] = 0;
    v40[1] = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    strcpy((char *)v40, "Missing key '");
    HIWORD(v40[1]) = -4864;
    __swift_project_boxed_opaque_existential_1(&v37, v39);
    sub_1C1520F4C();
  }
  else
  {
    uint64_t v31 = v29;
    v40[0] = 0;
    v40[1] = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    strcpy((char *)v40, "Missing index ");
    HIBYTE(v40[1]) = -18;
    uint64_t v36 = v31;
    sub_1C152088C();
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v32 = sub_1C15201BC();
  sub_1C01ABFFC(v32);
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v33 = v40[0];
  uint64_t v34 = v40[1];
  sub_1C01AC96C();
  v40[0] = v33;
  v40[1] = v34;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v25 = v40[0];
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
  return v25;
}

void sub_1C01AC8BC()
{
  if (!qword_1EA197C00)
  {
    sub_1C01AC92C();
    sub_1C15201DC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA197C00);
    }
  }
}

unint64_t sub_1C01AC92C()
{
  unint64_t result = qword_1EA197C08;
  if (!qword_1EA197C08)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA197C08);
  }
  return result;
}

uint64_t sub_1C01AC96C()
{
  return 0;
}

void sub_1C01ACA68()
{
  if (!qword_1EA197C10)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB863660);
    sub_1C15201DC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA197C10);
    }
  }
}

uint64_t sub_1C01ACAE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C01ACB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C05F6B14(0, v3, 0);
    uint64_t v4 = v21;
    uint64_t v8 = a1 + 64;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF72280(a2, a3, (uint64_t)&v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v9 = v18;
      long long v10 = v19;
      char v11 = v20;
      uint64_t v21 = v4;
      unint64_t v13 = *(void *)(v4 + 16);
      unint64_t v12 = *(void *)(v4 + 24);
      if (v13 >= v12 >> 1)
      {
        long long v16 = v19;
        long long v17 = v18;
        sub_1C05F6B14(v12 > 1, v13 + 1, 1);
        long long v10 = v16;
        long long v9 = v17;
        uint64_t v4 = v21;
      }
      *(void *)(v4 + 16) = v13 + 1;
      uint64_t v14 = v4 + 40 * v13;
      *(_OWORD *)(v14 + 32) = v9;
      *(_OWORD *)(v14 + 48) = v10;
      *(unsigned char *)(v14 + 64) = v11;
      v8 += 40;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1C01ACC80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_1C01ACCE8(void *a1)
{
  uint64_t v2 = (void *)sub_1C1515D2C();
  uint64_t v3 = sub_1C01A9804(a1);
  uint64_t v5 = v4;
  uint64_t v49 = a1;
  id v6 = a1;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1BFC845BC(0, (unint64_t *)&unk_1EA1A5FA0);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v47, (uint64_t)&v50);
    sub_1BFEFDD5C(0, &qword_1EA197C18, (uint64_t)&type metadata for DebugFormatErrorModel.Item, MEMORY[0x1E4FBBE00]);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
    uint64_t v8 = v52;
    uint64_t v9 = v53;
    __swift_project_boxed_opaque_existential_1(&v50, v52);
    *(void *)(v7 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    *(void *)(v7 + 40) = v10;
    char v11 = sub_1C0EE2EEC(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v13 = v11[2];
    unint64_t v12 = v11[3];
    if (v13 >= v12 >> 1) {
      char v11 = sub_1C0EE2EEC((void *)(v12 > 1), v13 + 1, 1, v11);
    }
    v11[2] = v13 + 1;
    uint64_t v14 = &v11[3 * v13];
    void v14[4] = 0x7470697263736544;
    v14[5] = 0xEB000000006E6F69;
    v14[6] = v7;
    uint64_t v15 = v52;
    uint64_t v16 = v53;
    __swift_project_boxed_opaque_existential_1(&v50, v52);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
    if (v18)
    {
      uint64_t v19 = v17;
      uint64_t v20 = v18;
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1C1529AE0;
      *(void *)(v21 + 32) = v19;
      *(void *)(v21 + 40) = v20;
      unint64_t v23 = v11[2];
      unint64_t v22 = v11[3];
      if (v23 >= v22 >> 1) {
        char v11 = sub_1C0EE2EEC((void *)(v22 > 1), v23 + 1, 1, v11);
      }
      v11[2] = v23 + 1;
      unint64_t v24 = &v11[3 * v23];
      void v24[4] = 1953392968;
      v24[5] = 0xE400000000000000;
      v24[6] = v21;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  }
  else
  {
    uint64_t v48 = 0;
    memset(v47, 0, sizeof(v47));
    sub_1C01AD260((uint64_t)v47, (uint64_t)&qword_1EA1B0940, (uint64_t)&unk_1EA1A5FA0, (uint64_t)&protocol descriptor for FormatError, (uint64_t (*)(void))sub_1BFE4D1E4);
    sub_1BFEFDD5C(0, &qword_1EA197C18, (uint64_t)&type metadata for DebugFormatErrorModel.Item, MEMORY[0x1E4FBBE00]);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
    id v26 = objc_msgSend(v2, sel_localizedDescription);
    uint64_t v27 = sub_1C151E62C();
    uint64_t v29 = v28;

    *(void *)(v25 + 32) = v27;
    *(void *)(v25 + 40) = v29;
    char v11 = sub_1C0EE2EEC(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v31 = v11[2];
    unint64_t v30 = v11[3];
    if (v31 >= v30 >> 1) {
      char v11 = sub_1C0EE2EEC((void *)(v30 > 1), v31 + 1, 1, v11);
    }
    v11[2] = v31 + 1;
    uint64_t v32 = &v11[3 * v31];
    v32[4] = 0x7470697263736544;
    v32[5] = 0xEB000000006E6F69;
    v32[6] = v25;
  }
  sub_1BFEFDD5C(0, &qword_1EA197C18, (uint64_t)&type metadata for DebugFormatErrorModel.Item, MEMORY[0x1E4FBBE00]);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
  id v34 = objc_msgSend(v2, sel_domain);
  uint64_t v35 = sub_1C151E62C();
  uint64_t v37 = v36;

  uint64_t v50 = v35;
  uint64_t v51 = v37;
  sub_1C151E80C();
  *(void *)&v47[0] = objc_msgSend(v2, sel_code);
  sub_1C152088C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v38 = v51;
  *(void *)(v33 + 32) = v50;
  *(void *)(v33 + 40) = v38;
  unint64_t v40 = v11[2];
  unint64_t v39 = v11[3];
  if (v40 >= v39 >> 1) {
    char v11 = sub_1C0EE2EEC((void *)(v39 > 1), v40 + 1, 1, v11);
  }
  v11[2] = v40 + 1;
  uint64_t v41 = (char *)&v11[3 * v40];
  strcpy(v41 + 32, "Domain + Code");
  *((_WORD *)v41 + 23) = -4864;
  *((void *)v41 + 6) = v33;
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_1C1529AE0;
  *(void *)(v42 + 32) = v3;
  *(void *)(v42 + 40) = v5;
  unint64_t v44 = v11[2];
  unint64_t v43 = v11[3];
  if (v44 >= v43 >> 1) {
    char v11 = sub_1C0EE2EEC((void *)(v43 > 1), v44 + 1, 1, v11);
  }
  v11[2] = v44 + 1;
  unint64_t v45 = &v11[3 * v44];
  v45[4] = 1886221636;
  v45[5] = 0xE400000000000000;
  v45[6] = v42;

  return a1;
}

uint64_t sub_1C01AD260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C01AD2C0(uint64_t a1, uint64_t a2)
{
  sub_1C01AA278(0, &qword_1EA197BE8, MEMORY[0x1E4FAA9D8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for DebugFormatErrorModel.Item()
{
  return &type metadata for DebugFormatErrorModel.Item;
}

uint64_t destroy for FormatOptionBinding()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s8NewsFeed19FormatOptionBindingVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatOptionBinding(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatOptionBinding(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatErrorModel.Section()
{
  return &type metadata for DebugFormatErrorModel.Section;
}

id sub_1C01AD490()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28D48]), sel_init);
  id result = objc_msgSend(v0, sel_setFormatOptions_, 3955);
  qword_1EB93C7C8 = (uint64_t)v0;
  return result;
}

ValueMetadata *type metadata accessor for FormatJSONDateFormatter.Errors()
{
  return &type metadata for FormatJSONDateFormatter.Errors;
}

uint64_t sub_1C01AD4F0()
{
  uint64_t v0 = sub_1C15198DC();
  __swift_allocate_value_buffer(v0, qword_1EA197C20);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA197C20);
  id v1 = (id)*MEMORY[0x1E4F7DE10];
  return sub_1C15198EC();
}

uint64_t sub_1C01AD550()
{
  v1[4] = v0;
  sub_1C01AE8C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  v1[5] = swift_task_alloc();
  uint64_t v2 = sub_1C1515FDC();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C01AD67C, 0, 0);
}

uint64_t sub_1C01AD67C()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_1C136F08C();
  __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC8NewsFeed22DiagnosticFileProvider_attachmentResolver), *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed22DiagnosticFileProvider_attachmentResolver + 24));
  sub_1C01AE8C0(0, (unint64_t *)&unk_1EB8945A0, MEMORY[0x1E4FAC148], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = sub_1C151A95C();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  uint64_t v7 = (void *)(v6 + v5);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v2;
  v8[3] = 0xD000000000000014;
  void v8[4] = 0x80000001C1606110;
  *uint64_t v7 = v8;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E4FAC138], v3);
  v0[10] = sub_1C151BEAC();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[11] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1C01AD8A8;
  return MEMORY[0x1F415EBC8](v0 + 2);
}

uint64_t sub_1C01AD8A8()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C01ADC08;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C01AD9C4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C01AD9C4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[7];
    uint64_t v20 = v3;
    uint64_t v21 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
    uint64_t v4 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    unint64_t v5 = (void (**)(unint64_t, unint64_t, uint64_t))(v3 + 32);
    swift_bridgeObjectRetain();
    uint64_t v6 = v1 + 40;
    unint64_t v7 = MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v9 = v0[5];
      uint64_t v8 = v0[6];
      swift_bridgeObjectRetain();
      sub_1C1515E5C();
      (*v21)(v9, 0, 1, v8);
      swift_bridgeObjectRelease();
      if ((*v4)(v9, 1, v8) == 1)
      {
        sub_1C002F608(v0[5]);
      }
      else
      {
        unint64_t v11 = v0[8];
        unint64_t v10 = v0[9];
        uint64_t v12 = v0[6];
        unint64_t v13 = *v5;
        (*v5)(v10, v0[5], v12);
        v13(v11, v10, v12);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v7 = sub_1BFEC5408(0, *(void *)(v7 + 16) + 1, 1, v7);
        }
        unint64_t v15 = *(void *)(v7 + 16);
        unint64_t v14 = *(void *)(v7 + 24);
        if (v15 >= v14 >> 1) {
          unint64_t v7 = sub_1BFEC5408(v14 > 1, v15 + 1, 1, v7);
        }
        unint64_t v16 = v0[8];
        uint64_t v17 = v0[6];
        *(void *)(v7 + 16) = v15 + 1;
        v13(v7+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v15, v16, v17);
      }
      v6 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v7 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(unint64_t))v0[1];
  return v18(v7);
}

uint64_t sub_1C01ADC08()
{
  swift_release();
  if (qword_1EA1943A0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = sub_1C15198DC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA197C20);
  id v3 = v1;
  id v4 = v1;
  unint64_t v5 = sub_1C15198AC();
  os_log_type_t v6 = sub_1C151F36C();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[12];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    unint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v12;
    sub_1C151FE1C();
    *unint64_t v10 = v12;

    _os_log_impl(&dword_1BFC31000, v5, v6, "NewsFeed.DiagnosticFileProvider failed to provide diagnostic files; error=%@",
      v9,
      0xCu);
    sub_1C01AE8C0(0, (unint64_t *)&qword_1EB861470, (uint64_t (*)(uint64_t))sub_1C01AE924, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v10, -1, -1);
    MEMORY[0x1C18C9B00](v9, -1, -1);
  }
  else
  {
  }
  unint64_t v13 = (void *)v0[12];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v15 = MEMORY[0x1E4FBC860];
  return v14(v15);
}

uint64_t sub_1C01ADFEC(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  id v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *id v4 = v2;
  v4[1] = sub_1C01AE094;
  return sub_1C01AD550();
}

uint64_t sub_1C01AE094()
{
  uint64_t v1 = *(void (***)(void, void))(*v0 + 24);
  uint64_t v2 = *(void **)(*v0 + 16);
  uint64_t v6 = *v0;
  swift_task_dealloc();

  sub_1C1515FDC();
  id v3 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  ((void (**)(void, void *))v1)[2](v1, v3);

  _Block_release(v1);
  id v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_1C01AE390(const void *a1, void *a2)
{
  *(void *)(v2 + 16) = a2;
  *(void *)(v2 + 24) = _Block_copy(a1);
  id v4 = a2;
  return MEMORY[0x1F4188298](sub_1C01AE408, 0, 0);
}

uint64_t sub_1C01AE408()
{
  uint64_t v1 = *(void (***)(void, void))(v0 + 24);

  sub_1C15183AC();
  uint64_t v2 = (void *)sub_1C151EBAC();
  ((void (**)(void, void *))v1)[2](v1, v2);

  _Block_release(v1);
  id v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t type metadata accessor for DiagnosticFileProvider()
{
  return self;
}

uint64_t sub_1C01AE548()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  id v3 = *(void **)(v0 + 24);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *id v4 = v1;
  v4[1] = sub_1BFC542F4;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA197C48 + dword_1EA197C48);
  return v5(v2, v3);
}

uint64_t sub_1C01AE600()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  id v3 = *(void **)(v0 + 24);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *id v4 = v1;
  v4[1] = sub_1C005E7F4;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_1EA197C58 + dword_1EA197C58);
  return v5(v2, v3);
}

uint64_t sub_1C01AE6B0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  id v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1C005E7F4;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EA1A6938 + dword_1EA1A6938);
  return v6(v2, v3, v4);
}

uint64_t objectdestroy_5Tm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C01AE7B4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C005E7F4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EA1A6948 + dword_1EA1A6948);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_1C01AE880()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C01AE8C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C01AE924()
{
  unint64_t result = qword_1EB87A330;
  if (!qword_1EB87A330)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A330);
  }
  return result;
}

uint64_t sub_1C01AE964()
{
  swift_unknownObjectWeakDestroy();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatRouter()
{
  return self;
}

uint64_t sub_1C01AE9C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1C1517ADC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v3;
  switch((unint64_t)*v3 >> 61)
  {
    case 1uLL:
      uint64_t v22 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C125B2C8(a2, a1, v22, v21, &v28);
      sub_1C01AE9C8(a1, a2);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 2uLL:
      uint64_t v24 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v23 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      v27[1] = v23 & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_retain();
      uint64_t v25 = (void *)sub_1C151769C();
      id v26 = objc_msgSend(v25, sel_userInterfaceStyle);

      if (v26 == (id)2)
      {
        uint64_t v28 = v23;
        swift_retain();
        sub_1C01AE9C8(a1, a2);
        swift_release_n();
        return swift_release();
      }
      else
      {
        uint64_t v28 = v24;
        swift_retain();
        sub_1C01AE9C8(a1, a2);
        swift_release();
        return swift_release_n();
      }
    case 3uLL:
      uint64_t v28 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      long long v29 = *(_OWORD *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      return sub_1C1403EE4(a1, a2, a3);
    case 4uLL:
      uint64_t v19 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v20 = *(void *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C02737B0(v19, v20, &v28);
      uint64_t v30 = v28;
      sub_1C01AE9C8(a1, a2);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_release();
    default:
      uint64_t v15 = swift_projectBox();
      sub_1C01AF294(v15, (uint64_t)v13);
      sub_1C15176EC();
      double v17 = v16;
      type metadata accessor for GroupLayoutContext();
      sub_1C151752C();
      sub_1C0A953A0(a1, (uint64_t)v10, a3, v17);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return sub_1C01AF2F8((uint64_t)v13);
  }
}

uint64_t static FormatVideoNodeContent.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FormatRemoteVideo();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v37 - v8;
  unint64_t v10 = *a1;
  unint64_t v11 = *a2;
  switch(v10 >> 61)
  {
    case 1uLL:
      if (v11 >> 61 != 1) {
        goto LABEL_27;
      }
      uint64_t v20 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v22 = v11 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v23 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)(v22 + 24);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((sub_1C00ECF2C(v20, v23) & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      uint64_t v39 = v21;
      uint64_t v37 = v24;
      char v14 = static FormatVideoNodeContent.== infix(_:_:)(&v39, &v37);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return v14 & 1;
    case 2uLL:
      if (v11 >> 61 != 2) {
        goto LABEL_27;
      }
      uint64_t v25 = v10 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v26 = *(void *)(v25 + 24);
      uint64_t v27 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v28 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v39 = *(void *)(v25 + 16);
      uint64_t v40 = v26;
      uint64_t v37 = v27;
      uint64_t v38 = v28;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      if ((static FormatVideoNodeContent.== infix(_:_:)(&v39, &v37) & 1) == 0)
      {
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_26;
      }
      char v29 = static FormatVideoNodeContent.== infix(_:_:)(&v40, &v38);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if ((v29 & 1) == 0) {
        goto LABEL_27;
      }
      goto LABEL_22;
    case 3uLL:
      if (v11 >> 61 == 3)
      {
        uint64_t v30 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v31 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v32 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v33 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
        BOOL v34 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) == v31
           && *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x18) == v32;
        if (v34 || (sub_1C1520A9C() & 1) != 0)
        {
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v35 = sub_1C00E3FD8(v30, v33);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v35) {
            goto LABEL_22;
          }
        }
      }
      goto LABEL_27;
    case 4uLL:
      if (v11 >> 61 != 4) {
        goto LABEL_27;
      }
      uint64_t v15 = v10 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v16 = *(void *)(v15 + 24);
      uint64_t v17 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v18 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v39 = *(void *)(v15 + 16);
      uint64_t v40 = v16;
      uint64_t v37 = v17;
      uint64_t v38 = v18;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (static FormatVideoNodeContent.== infix(_:_:)(&v39, &v37))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v19 = sub_1C00ECF14(v16, v18);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        if (v19)
        {
LABEL_22:
          char v14 = 1;
          return v14 & 1;
        }
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_26:
        swift_release();
      }
LABEL_27:
      char v14 = 0;
      return v14 & 1;
    default:
      if (v11 >> 61) {
        goto LABEL_27;
      }
      uint64_t v12 = swift_projectBox();
      uint64_t v13 = swift_projectBox();
      sub_1C01AF294(v12, (uint64_t)v9);
      sub_1C01AF294(v13, (uint64_t)v6);
      swift_retain();
      swift_retain();
      char v14 = _s8NewsFeed17FormatRemoteVideoV2eeoiySbAC_ACtFZ_0((uint64_t)v9, (uint64_t)v6);
      sub_1C01AF2F8((uint64_t)v6);
      sub_1C01AF2F8((uint64_t)v9);
      swift_release();
      swift_release();
      return v14 & 1;
  }
}

uint64_t sub_1C01AF260@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatVideoNodeContent.init(from:)(a1, a2);
}

uint64_t sub_1C01AF278(void *a1)
{
  return FormatVideoNodeContent.encode(to:)(a1);
}

uint64_t sub_1C01AF294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatRemoteVideo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01AF2F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatRemoteVideo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C01AF354(uint64_t a1)
{
  unint64_t result = sub_1C00738F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01AF37C()
{
  unint64_t result = qword_1EB891A00;
  if (!qword_1EB891A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB891A00);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoNodeContent()
{
  return &type metadata for FormatVideoNodeContent;
}

BOOL static FormatBindingImageExpressionLogic.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatBindingImageExpressionLogic.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatBindingImageExpressionLogic.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C01AF470()
{
  unint64_t result = qword_1EA197C80;
  if (!qword_1EA197C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197C80);
  }
  return result;
}

unint64_t sub_1C01AF4C4(uint64_t a1)
{
  unint64_t result = sub_1C01AF4EC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01AF4EC()
{
  unint64_t result = qword_1EA197C88;
  if (!qword_1EA197C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197C88);
  }
  return result;
}

unint64_t sub_1C01AF540(void *a1)
{
  a1[1] = sub_1C0068A80();
  a1[2] = sub_1C01AF578();
  unint64_t result = sub_1C01AF470();
  a1[3] = result;
  return result;
}

unint64_t sub_1C01AF578()
{
  unint64_t result = qword_1EB85C278;
  if (!qword_1EB85C278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C278);
  }
  return result;
}

uint64_t sub_1C01AF5CC(void *a1)
{
  return FormatBindingImageExpressionLogic.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatBindingImageExpressionLogic()
{
  return &type metadata for FormatBindingImageExpressionLogic;
}

uint64_t FormatProperty.resolveOptions(pool:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v4 = v1[2];
  if ((~v4 & 0xF000000000000007) != 0)
  {
    sub_1C01B0884(0, &qword_1EB87A730, MEMORY[0x1E4FBBE00]);
    uint64_t v9 = (int *)(type metadata accessor for FormatOption() - 8);
    unint64_t v10 = (*(unsigned __int8 *)(*(void *)v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v9 + 80);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    unint64_t v11 = (uint64_t *)(v8 + v10);
    *unint64_t v11 = v3;
    v11[1] = v2;
    v11[2] = v4;
    v11[3] = 1;
    unint64_t v12 = v8 + v10 + v9[9];
    uint64_t v13 = type metadata accessor for FormatVersionRequirement(0);
    (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 72);
  if (!*(void *)(v5 + 16))
  {
LABEL_7:
    uint64_t v8 = MEMORY[0x1E4FBC860];
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BFEF2D8C(v3, v2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(*(void *)(v5 + 56) + (v6 << 6) + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  sub_1BFDC11A4(v4);
  return v8;
}

uint64_t FormatProperty.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProperty.value.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = v2;
  return sub_1BFDC11A4(v2);
}

uint64_t FormatProperty.init(identifier:value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = *a3;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

uint64_t sub_1C01AF870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C01B06D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C01AF898(uint64_t a1)
{
  unint64_t v2 = sub_1BFDC1228();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C01AF8D4(uint64_t a1)
{
  unint64_t v2 = sub_1BFDC1228();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatProperty.encode(to:)(void *a1)
{
  sub_1BFDC113C(0, &qword_1EB85E118, (uint64_t (*)(void))sub_1BFDC1228, (uint64_t)&type metadata for FormatProperty.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)&v10 - v6;
  uint64_t v11 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFDC1228();
  sub_1C1520F0C();
  char v15 = 0;
  uint64_t v8 = v12;
  sub_1C15207CC();
  if (!v8)
  {
    uint64_t v13 = v11;
    char v14 = 1;
    sub_1C01B024C();
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C01AFACC(void *a1)
{
  return FormatProperty.encode(to:)(a1);
}

uint64_t sub_1C01AFAE8(uint64_t a1)
{
  return sub_1C01B00B4(a1, MEMORY[0x1E4F276F0]);
}

uint64_t sub_1C01AFB00(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFB0C(uint64_t a1)
{
  return sub_1C01AFB34(a1, (unint64_t *)&qword_1EB8741D0, (uint64_t (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem);
}

uint64_t sub_1C01AFB34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1C15203FC();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_1BFDC113C(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      uint64_t v8 = sub_1C151ECCC();
      *(void *)(v8 + 16) = a1;
    }
    else
    {
      uint64_t v8 = MEMORY[0x1E4FBC860];
    }
    sub_1BFDC113C(0, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    return v8;
  }
  return result;
}

uint64_t sub_1C01AFC70(uint64_t a1)
{
  return sub_1C01AFB34(a1, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType);
}

uint64_t sub_1C01AFC98(uint64_t a1)
{
  return sub_1C01B00B4(a1, sub_1BFF1D9F4);
}

uint64_t sub_1C01AFCB0(uint64_t a1)
{
  return sub_1C01AFB34(a1, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle);
}

uint64_t sub_1C01AFCD8(uint64_t a1)
{
  return sub_1C01AFB34(a1, (unint64_t *)&qword_1EB874180, (uint64_t (*)(void))sub_1C00F6ACC, (uint64_t)&type metadata for FormatDecoration);
}

uint64_t sub_1C01AFD00(uint64_t a1)
{
  return sub_1C01AFB34(a1, (unint64_t *)&qword_1EB874190, (uint64_t (*)(void))sub_1C00F69AC, (uint64_t)&type metadata for FormatLocalization);
}

uint64_t sub_1C01AFD28(uint64_t a1)
{
  return sub_1C01AFB34(a1, (unint64_t *)&qword_1EB8741B0, (uint64_t (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary);
}

uint64_t sub_1C01AFD50(uint64_t a1)
{
  return sub_1C01B00B4(a1, (void (*)(void))type metadata accessor for FormatSlotDefinition);
}

uint64_t sub_1C01AFD68(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFD74(uint64_t a1)
{
  return sub_1C01B00B4(a1, (void (*)(void))type metadata accessor for FormatOption);
}

uint64_t sub_1C01AFD8C(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFD98(uint64_t a1)
{
  return sub_1C01B00B4(a1, (void (*)(void))type metadata accessor for FormatCompilerOptions);
}

uint64_t sub_1C01AFDB0(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFDBC(uint64_t a1)
{
  return sub_1C01AFF4C(a1, (void (*)(void))sub_1BFEBC4B4);
}

uint64_t sub_1C01AFDD4(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFDE0(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFDEC(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFDF8(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFE04(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFE10(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFE1C(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFE28(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFE34(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFE40(uint64_t a1)
{
  return sub_1C01AFE68(a1, (uint64_t)&unk_1EA197CA0, MEMORY[0x1E4FBB3D0], (void (*)(void))sub_1C01B07C8);
}

uint64_t sub_1C01AFE68(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a1 < 0)
  {
    uint64_t result = sub_1C15203FC();
    __break(1u);
  }
  else if (a1)
  {
    a4(0);
    uint64_t result = sub_1C151ECCC();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C01AFF0C(uint64_t a1)
{
  return sub_1C01AFE68(a1, (uint64_t)&unk_1EA197CA8, MEMORY[0x1E4FBB550], (void (*)(void))sub_1C01B07C8);
}

uint64_t sub_1C01AFF34(uint64_t a1)
{
  return sub_1C01AFF4C(a1, (void (*)(void))sub_1C01B081C);
}

uint64_t sub_1C01AFF4C(uint64_t a1, void (*a2)(void))
{
  if (a1 < 0)
  {
    uint64_t result = sub_1C15203FC();
    __break(1u);
  }
  else if (a1)
  {
    a2(0);
    uint64_t result = sub_1C151ECCC();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C01AFFF0(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01AFFFC(uint64_t a1)
{
  return sub_1C01B0008(a1);
}

uint64_t sub_1C01B0008(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_1C15203FC();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = sub_1C151ECCC();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C01B009C(uint64_t a1)
{
  return sub_1C01B00B4(a1, (void (*)(void))type metadata accessor for DebugFormatCacheFile);
}

uint64_t sub_1C01B00B4(uint64_t a1, void (*a2)(void))
{
  if (a1 < 0)
  {
    uint64_t result = sub_1C15203FC();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      uint64_t v4 = sub_1C151ECCC();
      *(void *)(v4 + 16) = a1;
    }
    else
    {
      uint64_t v4 = MEMORY[0x1E4FBC860];
    }
    ((uint64_t (*)(void))a2)(0);
    return v4;
  }
  return result;
}

uint64_t sub_1C01B01A8(uint64_t a1)
{
  return sub_1C01AFE68(a1, (uint64_t)&unk_1EB879D90, MEMORY[0x1E4FBB320], (void (*)(void))sub_1C01B0884);
}

uint64_t _s8NewsFeed14FormatPropertyV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1C1520A9C(), v6 = 0, (v5 & 1) != 0))
  {
    uint64_t v8 = v3;
    uint64_t v9 = v2;
    char v6 = _s8NewsFeed19FormatPropertyValueO2eeoiySbAC_ACtFZ_0(&v9, &v8);
  }
  return v6 & 1;
}

unint64_t sub_1C01B024C()
{
  unint64_t result = qword_1EB85D3E8;
  if (!qword_1EB85D3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D3E8);
  }
  return result;
}

unint64_t sub_1C01B02A0(void *a1)
{
  a1[1] = sub_1C0081A44();
  a1[2] = sub_1C00FC944();
  unint64_t result = sub_1C01B02D8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C01B02D8()
{
  unint64_t result = qword_1EA197C90;
  if (!qword_1EA197C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197C90);
  }
  return result;
}

uint64_t destroy for FormatProperty(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) != 0)
  {
    return swift_release();
  }
  return result;
}

void *_s8NewsFeed14FormatPropertyVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  swift_bridgeObjectRetain();
  if ((~v4 & 0xF000000000000007) != 0) {
    swift_retain();
  }
  a1[2] = v4;
  return a1;
}

void *assignWithCopy for FormatProperty(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 2;
  uint64_t v5 = a2[2];
  unint64_t v6 = v5 & 0xF000000000000007;
  if ((~a1[2] & 0xF000000000000007) != 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *uint64_t v4 = v5;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_1C01B0494((uint64_t)(a1 + 2));
    uint64_t v5 = a2[2];
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
LABEL_6:
    *uint64_t v4 = v5;
    return a1;
  }
  *uint64_t v4 = v5;
  swift_retain();
  return a1;
}

uint64_t sub_1C01B0494(uint64_t a1)
{
  return a1;
}

void *assignWithTake for FormatProperty(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + 2;
  uint64_t v6 = a2[2];
  if ((~a1[2] & 0xF000000000000007) != 0)
  {
    if ((~v6 & 0xF000000000000007) != 0)
    {
      *uint64_t v5 = v6;
      swift_release();
      return a1;
    }
    sub_1C01B0494((uint64_t)(a1 + 2));
  }
  *uint64_t v5 = v6;
  return a1;
}

ValueMetadata *type metadata accessor for FormatProperty()
{
  return &type metadata for FormatProperty;
}

unsigned char *storeEnumTagSinglePayload for FormatProperty.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01B0640);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatProperty.CodingKeys()
{
  return &type metadata for FormatProperty.CodingKeys;
}

unint64_t sub_1C01B067C()
{
  unint64_t result = qword_1EA197C98;
  if (!qword_1EA197C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197C98);
  }
  return result;
}

uint64_t sub_1C01B06D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1C01B07C8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1C01B081C()
{
  if (!qword_1EA197CB0)
  {
    sub_1BFEBC4B4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA197CB0);
    }
  }
}

void sub_1C01B0884(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for FormatOption();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C01B08E4()
{
  unint64_t result = qword_1EB87A2D0;
  if (!qword_1EB87A2D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A2D0);
  }
  return result;
}

uint64_t sub_1C01B0924(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    sub_1BFE74E64(*v11, v13);
    sub_1C02B6908(v17, v12, v13);
    unint64_t result = sub_1BFF8F648(v17[0], v17[1]);
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t FeedTag.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedTag.Overrides.Image.assetHandle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFC66384(v1, a1);
}

uint64_t FeedTag.Overrides.Image.aspectRatio.getter()
{
  return *(void *)(v0 + 40);
}

unint64_t FeedTag.Overrides.Image.init(assetHandle:aspectRatio:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)(a4 + 24) = sub_1BFF6C3A8();
  unint64_t result = sub_1BFF6C3E8();
  *(void *)a4 = a1;
  *(void *)(a4 + 32) = result;
  *(void *)(a4 + 40) = a2;
  *(unsigned char *)(a4 + 48) = a3 & 1;
  return result;
}

uint64_t FeedTag.Overrides.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedTag.Overrides.coverImage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C01B0D24(v1 + 16, a1, (unint64_t *)&unk_1EA197CC0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
}

uint64_t FeedTag.Overrides.init(name:coverImage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  return sub_1C01B1178(a3, (uint64_t)(a4 + 2), (unint64_t *)&unk_1EA197CC0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
}

uint64_t FeedTag.tag.getter()
{
  return swift_unknownObjectRetain();
}

void FeedTag.badge.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

void FeedTag.layoutDirection.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 32);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FeedTag.accessoryText.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void FeedTag.tagTraits.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 64);
}

uint64_t FeedTag.additionalContextMenuOptions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedTag.name.getter()
{
  sub_1C01B0D24(v0 + 80, (uint64_t)&v5, &qword_1EB865538, (uint64_t)&type metadata for FeedTag.Overrides);
  uint64_t v1 = v6;
  if (v6 == 1)
  {
    sub_1C01B0F7C((uint64_t)&v5, &qword_1EB865538, (uint64_t)&type metadata for FeedTag.Overrides);
    sub_1BFEA435C(v0, (uint64_t)&v5);
LABEL_4:
    id v3 = objc_msgSend(v7, sel_name);
    uint64_t v2 = sub_1C151E62C();

    goto LABEL_5;
  }
  uint64_t v2 = v5;
  swift_bridgeObjectRetain();
  sub_1C01B0DA4((uint64_t)&v5);
  sub_1BFEA435C(v0, (uint64_t)&v5);
  if (!v1) {
    goto LABEL_4;
  }
LABEL_5:
  sub_1BFEA4290((uint64_t)&v5);
  return v2;
}

uint64_t sub_1C01B0D24(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C01B2E50(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C01B0DA4(uint64_t a1)
{
  return a1;
}

uint64_t FeedTag.coverImage.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C01B0D24(v1 + 80, (uint64_t)v11, &qword_1EB865538, (uint64_t)&type metadata for FeedTag.Overrides);
  if (v12 == 1)
  {
    id v3 = &qword_1EB865538;
    uint64_t v4 = &type metadata for FeedTag.Overrides;
    uint64_t v5 = v11;
  }
  else
  {
    sub_1C01B0D24((uint64_t)v13, (uint64_t)v8, (unint64_t *)&unk_1EA197CC0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
    sub_1C01B0DA4((uint64_t)v11);
    if (v10)
    {
      sub_1BFC66384((uint64_t)v8, (uint64_t)&v14);
      sub_1C01B0FEC((uint64_t)v8);
      goto LABEL_7;
    }
    id v3 = (unint64_t *)&unk_1EA197CC0;
    uint64_t v4 = &type metadata for FeedTag.Overrides.Image;
    uint64_t v5 = v8;
  }
  sub_1C01B0F7C((uint64_t)v5, v3, (uint64_t)v4);
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v16 = 0;
LABEL_7:
  sub_1BFEA435C(v1, (uint64_t)v11);
  if (*((void *)&v15 + 1))
  {
    sub_1BFEA4290((uint64_t)v11);
    return sub_1BFC773DC(&v14, a1);
  }
  id v7 = objc_msgSend(v13[0], sel_coverImageAssetHandle);
  sub_1BFEA435C((uint64_t)v11, (uint64_t)v8);
  if (v7)
  {
    sub_1BFEA4290((uint64_t)v8);
  }
  else
  {
    id v7 = objc_msgSend(v9, sel_feedNavImageAssetHandle);
    sub_1BFEA4290((uint64_t)v8);
    if (!v7)
    {
      sub_1BFEA4290((uint64_t)v11);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = 0;
      return sub_1BFF44FE0((uint64_t)&v14);
    }
  }
  *(void *)(a1 + 24) = sub_1BFF6C3A8();
  *(void *)(a1 + 32) = sub_1BFF6C3E8();
  *(void *)a1 = v7;
  sub_1BFEA4290((uint64_t)v11);
  return sub_1BFF44FE0((uint64_t)&v14);
}

uint64_t sub_1C01B0F7C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1C01B2E50(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C01B0FEC(uint64_t a1)
{
  return a1;
}

uint64_t FeedTag.coverImageAspectRatio.getter()
{
  sub_1C01B0D24(v0 + 80, (uint64_t)v6, &qword_1EB865538, (uint64_t)&type metadata for FeedTag.Overrides);
  if (v6[1] == 1)
  {
    uint64_t v1 = &qword_1EB865538;
    uint64_t v2 = &type metadata for FeedTag.Overrides;
    id v3 = v6;
LABEL_6:
    sub_1C01B0F7C((uint64_t)v3, v1, (uint64_t)v2);
    return 0;
  }
  sub_1C01B0D24((uint64_t)&v7, (uint64_t)v8, (unint64_t *)&unk_1EA197CC0, (uint64_t)&type metadata for FeedTag.Overrides.Image);
  sub_1C01B0DA4((uint64_t)v6);
  if (!v9)
  {
    uint64_t v1 = (unint64_t *)&unk_1EA197CC0;
    uint64_t v2 = &type metadata for FeedTag.Overrides.Image;
    id v3 = v8;
    goto LABEL_6;
  }
  uint64_t v4 = v10;
  sub_1C01B0FEC((uint64_t)v8);
  return v4;
}

NewsFeed::FeedTag::Traits __swiftcall FeedTag.Traits.init(rawValue:)(NewsFeed::FeedTag::Traits rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static FeedTag.Traits.followed.getter(void *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FeedTag.Traits.rawValue.getter()
{
  return *(void *)v0;
}

void sub_1C01B1100(void *a1@<X8>)
{
  *a1 = 1;
}

uint64_t FeedTag.init(identifier:tag:badge:accessoryText:tagTraits:overrides:additionalContextMenuOptions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v11 = *a4;
  uint64_t v12 = *a7;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = v11;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 32) = 0;
  *(unsigned char *)(a9 + 40) = 0;
  *(void *)(a9 + 64) = v12;
  uint64_t result = sub_1C01B1178(a8, a9 + 80, &qword_1EB865538, (uint64_t)&type metadata for FeedTag.Overrides);
  *(void *)(a9 + 72) = a10;
  return result;
}

uint64_t sub_1C01B1178(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C01B2E50(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t FeedTag.copy(contextMenuOptions:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = v1[2];
  char v6 = *((unsigned char *)v1 + 24);
  uint64_t v8 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v9 = v1[8];
  sub_1C01B0D24((uint64_t)(v1 + 10), a1 + 80, &qword_1EB865538, (uint64_t)&type metadata for FeedTag.Overrides);
  uint64_t v10 = v1[9];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t result = sub_1BFE701B0(v11, v10, sub_1C02B5CE4);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = result;
  return result;
}

void FeedTag.dragItem.getter(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*(id *)(v1 + 16), sel_identifier);
  if (!v3)
  {
    sub_1C151E62C();
    id v3 = (id)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  id v4 = objc_msgSend(self, sel_nss_NewsURLForTagID_, v3);

  if (v4)
  {
    sub_1C151E79C();
    uint64_t v5 = sub_1C151F6EC();
    swift_bridgeObjectRelease();
    FeedTag.name.getter();
    sub_1C151CA2C();
    if (v5) {

    }
    uint64_t v6 = sub_1C151CA3C();
    uint64_t v7 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    v7(a1, 0, 1, v6);
  }
  else
  {
    __break(1u);
  }
}

BOOL FeedTag.traits.getter@<W0>(uint64_t *a1@<X8>)
{
  return FCTagProviding.traits.getter(a1);
}

double FeedTag.kind.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C1530560;
  return result;
}

BOOL sub_1C01B1484@<W0>(uint64_t *a1@<X8>)
{
  return FCTagProviding.traits.getter(a1);
}

void sub_1C01B14B8(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 32);
  *(unsigned char *)(a1 + 8) = v2;
}

double sub_1C01B14CC@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C1530560;
  return result;
}

uint64_t sub_1C01B14DC()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t FeedTag.debugIdentifier.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t sub_1C01B158C()
{
  return 0;
}

uint64_t FeedTag.debugSourceName.getter()
{
  return 0;
}

uint64_t sub_1C01B15A4()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_name);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t FeedTag.debugTitle.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_name);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

id FeedTag.debugAssetHandle.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_feedNavImageAssetHandle);
  sub_1BFEA435C(v0, (uint64_t)v10);
  if (!v1)
  {
    id v3 = objc_msgSend(v11, sel_asSports);
    if (v3
      && (id v4 = objc_msgSend(v3, sel_sportsTheme), swift_unknownObjectRelease(), v4))
    {
      id v1 = objc_msgSend(v4, sel_sportsLogoImageAssetHandle);
      swift_unknownObjectRelease();
      sub_1BFEA435C((uint64_t)v10, (uint64_t)v8);
      if (v1)
      {
LABEL_12:
        sub_1BFEA4290((uint64_t)v10);
        uint64_t v2 = v8;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1BFEA435C((uint64_t)v10, (uint64_t)v8);
    }
    id v5 = objc_msgSend(v9, sel_asSports);
    id v1 = v5;
    if (v5)
    {
      id v6 = objc_msgSend(v5, sel_sportsTheme);
      swift_unknownObjectRelease();
      if (v6)
      {
        id v1 = objc_msgSend(v6, sel_sportsLogoImageCompactAssetHandle);
        swift_unknownObjectRelease();
      }
      else
      {
        id v1 = 0;
      }
    }
    goto LABEL_12;
  }
  uint64_t v2 = v10;
LABEL_13:
  sub_1BFEA4290((uint64_t)v2);
  return v1;
}

uint64_t FeedTag.debugScoreProfile.getter()
{
  return 0;
}

uint64_t _s8NewsFeed0B3TagV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BFEA435C((uint64_t)a1, (uint64_t)v31);
    sub_1BFEA435C((uint64_t)a2, (uint64_t)v29);
  }
  else
  {
    char v5 = sub_1C1520A9C();
    sub_1BFEA435C((uint64_t)a1, (uint64_t)v31);
    sub_1BFEA435C((uint64_t)a2, (uint64_t)v29);
    if ((v5 & 1) == 0)
    {
      sub_1BFEA4290((uint64_t)v31);
      sub_1BFEA4290((uint64_t)v29);
      sub_1BFEA435C((uint64_t)a1, (uint64_t)v27);
      sub_1BFEA435C((uint64_t)a2, (uint64_t)v25);
LABEL_16:
      sub_1BFEA4290((uint64_t)v25);
      sub_1BFEA4290((uint64_t)v27);
      sub_1BFEA435C((uint64_t)a1, (uint64_t)v24);
      sub_1BFEA435C((uint64_t)a2, (uint64_t)v23);
      goto LABEL_17;
    }
  }
  id v6 = objc_msgSend(v32, sel_identifier);
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  id v10 = objc_msgSend(v30, sel_identifier);
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;

  if (v7 == v11 && v9 == v13)
  {
    swift_bridgeObjectRelease_n();
    sub_1BFEA4290((uint64_t)v31);
    sub_1BFEA4290((uint64_t)v29);
    sub_1BFEA435C((uint64_t)a1, (uint64_t)v27);
    sub_1BFEA435C((uint64_t)a2, (uint64_t)v25);
  }
  else
  {
    char v14 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFEA4290((uint64_t)v31);
    sub_1BFEA4290((uint64_t)v29);
    sub_1BFEA435C((uint64_t)a1, (uint64_t)v27);
    sub_1BFEA435C((uint64_t)a2, (uint64_t)v25);
    if ((v14 & 1) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v15 = v28;
  uint64_t v16 = v26;
  sub_1BFEA4290((uint64_t)v25);
  sub_1BFEA4290((uint64_t)v27);
  sub_1BFEA435C((uint64_t)a1, (uint64_t)v24);
  sub_1BFEA435C((uint64_t)a2, (uint64_t)v23);
  if (v15 != v16)
  {
LABEL_17:
    char v21 = 0;
    goto LABEL_18;
  }
  uint64_t v17 = FeedTag.name.getter();
  uint64_t v19 = v18;
  if (v17 == FeedTag.name.getter() && v19 == v20)
  {
    swift_bridgeObjectRelease_n();
    char v21 = 1;
  }
  else
  {
    char v21 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_18:
  sub_1BFEA4290((uint64_t)v23);
  sub_1BFEA4290((uint64_t)v24);
  return v21 & 1;
}

unint64_t sub_1C01B1A84(uint64_t a1)
{
  unint64_t result = sub_1C01B1AAC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01B1AAC()
{
  unint64_t result = qword_1EA197CD0;
  if (!qword_1EA197CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197CD0);
  }
  return result;
}

unint64_t sub_1C01B1B04()
{
  unint64_t result = qword_1EA197CD8;
  if (!qword_1EA197CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197CD8);
  }
  return result;
}

unint64_t sub_1C01B1B5C()
{
  unint64_t result = qword_1EA197CE0;
  if (!qword_1EA197CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197CE0);
  }
  return result;
}

unint64_t sub_1C01B1BB4()
{
  unint64_t result = qword_1EB86F048;
  if (!qword_1EB86F048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F048);
  }
  return result;
}

unint64_t sub_1C01B1C0C()
{
  unint64_t result = qword_1EB86F050;
  if (!qword_1EB86F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F050);
  }
  return result;
}

uint64_t assignWithCopy for FeedTag(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  char v5 = (_OWORD *)(a1 + 80);
  id v6 = (_OWORD *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 88);
  if (*(void *)(a1 + 88) == 1)
  {
    if (v7 == 1)
    {
      *char v5 = *v6;
      long long v8 = *(_OWORD *)(a2 + 96);
      long long v9 = *(_OWORD *)(a2 + 112);
      long long v10 = *(_OWORD *)(a2 + 128);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v9;
      *(_OWORD *)(a1 + 128) = v10;
      *(_OWORD *)(a1 + 96) = v8;
      return a1;
    }
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    uint64_t v14 = a1 + 96;
    uint64_t v15 = (long long *)(a2 + 96);
    uint64_t v16 = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    if (v16)
    {
      *(void *)(a1 + 120) = v16;
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8))(a1 + 96, a2 + 96, v16);
LABEL_13:
      char v19 = *(unsigned char *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(unsigned char *)(a1 + 144) = v19;
      return a1;
    }
    goto LABEL_14;
  }
  if (v7 == 1)
  {
    sub_1C01B0DA4(a1 + 80);
    *char v5 = *v6;
    long long v12 = *(_OWORD *)(a2 + 112);
    long long v11 = *(_OWORD *)(a2 + 128);
    long long v13 = *(_OWORD *)(a2 + 96);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 128) = v11;
    *(_OWORD *)(a1 + 96) = v13;
    return a1;
  }
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + 96;
  uint64_t v15 = (long long *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 120);
  if (!*(void *)(a1 + 120))
  {
    if (v17)
    {
      *(void *)(a1 + 120) = v17;
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8))(a1 + 96, a2 + 96, v17);
      goto LABEL_13;
    }
LABEL_14:
    long long v20 = *v15;
    long long v21 = v15[1];
    long long v22 = v15[2];
    *(unsigned char *)(v14 + 48) = *((unsigned char *)v15 + 48);
    *(_OWORD *)(v14 + 16) = v21;
    *(_OWORD *)(v14 + 32) = v22;
    *(_OWORD *)uint64_t v14 = v20;
    return a1;
  }
  if (v17)
  {
    __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
    uint64_t v18 = *(void *)(a2 + 136);
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(void *)(a1 + 136) = v18;
  }
  else
  {
    sub_1C01B0FEC(a1 + 96);
    long long v24 = *(_OWORD *)(a2 + 112);
    long long v23 = *(_OWORD *)(a2 + 128);
    long long v25 = *v15;
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v24;
    *(_OWORD *)(a1 + 128) = v23;
    *(_OWORD *)uint64_t v14 = v25;
  }
  return a1;
}

__n128 __swift_memcpy145_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for FeedTag(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88) != 1)
  {
    uint64_t v7 = *(void *)(a2 + 88);
    if (v7 != 1)
    {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v7;
      swift_bridgeObjectRelease();
      long long v11 = (_OWORD *)(a1 + 96);
      long long v12 = (_OWORD *)(a2 + 96);
      if (*(void *)(a1 + 120))
      {
        if (*(void *)(a2 + 120))
        {
          __swift_destroy_boxed_opaque_existential_1(a1 + 96);
          long long v13 = *(_OWORD *)(a2 + 112);
          *long long v11 = *v12;
          *(_OWORD *)(a1 + 112) = v13;
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
          *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
          return a1;
        }
        sub_1C01B0FEC(a1 + 96);
      }
      long long v14 = *(_OWORD *)(a2 + 112);
      *long long v11 = *v12;
      *(_OWORD *)(a1 + 112) = v14;
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      return a1;
    }
    sub_1C01B0DA4(a1 + 80);
  }
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedTag(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 145)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedTag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 145) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t destroy for FeedTag.Overrides(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  return result;
}

uint64_t initializeWithCopy for FeedTag.Overrides(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 16;
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v7;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8))(a1 + 16, v5, v6);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  else
  {
    long long v8 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(v5 + 32);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(v5 + 48);
  }
  return a1;
}

uint64_t assignWithCopy for FeedTag.Overrides(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (long long *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
      uint64_t v7 = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 56) = v7;
    }
    else
    {
      sub_1C01B0FEC(a1 + 16);
      long long v10 = *(_OWORD *)(a2 + 32);
      long long v9 = *(_OWORD *)(a2 + 48);
      long long v11 = *v5;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v10;
      *(_OWORD *)(a1 + 48) = v9;
      *uint64_t v4 = v11;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 16, a2 + 16);
    char v8 = *(unsigned char *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(unsigned char *)(a1 + 64) = v8;
  }
  else
  {
    long long v12 = *v5;
    long long v13 = *(_OWORD *)(a2 + 32);
    long long v14 = *(_OWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v14;
    *uint64_t v4 = v12;
  }
  return a1;
}

uint64_t assignWithTake for FeedTag.Overrides(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = (_OWORD *)(a1 + 16);
  uint64_t v6 = (_OWORD *)(a2 + 16);
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  if (!*(void *)(a2 + 40))
  {
    sub_1C01B0FEC(a1 + 16);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 32);
    *uint64_t v5 = *v6;
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    return a1;
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *uint64_t v5 = *v6;
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedTag.Overrides(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedTag.Overrides(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedTag.Overrides()
{
  return &type metadata for FeedTag.Overrides;
}

uint64_t initializeWithCopy for FeedTag.Overrides.Image(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for FeedTag.Overrides.Image(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  return a1;
}

uint64_t assignWithTake for FeedTag.Overrides.Image(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedTag.Overrides.Image(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedTag.Overrides.Image(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedTag.Overrides.Image()
{
  return &type metadata for FeedTag.Overrides.Image;
}

ValueMetadata *type metadata accessor for FeedTag.Traits()
{
  return &type metadata for FeedTag.Traits;
}

uint64_t sub_1C01B2644(uint64_t a1, uint64_t a2)
{
  return sub_1C01B2674(a1, a2, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization, (void (*)(char *, char *))sub_1C02B90E4);
}

uint64_t sub_1C01B2674(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), void (*a5)(char *, char *))
{
  uint64_t v9 = a3(0) - 8;
  MEMORY[0x1F4188790](v9);
  long long v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v20 - v14;
  uint64_t v21 = a2;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v18 = *(void *)(v13 + 72);
    do
    {
      sub_1BFED3A1C(v17, (uint64_t)v11, a4);
      a5(v15, v11);
      sub_1BFECFC84((uint64_t)v15, a4);
      v17 += v18;
      --v16;
    }
    while (v16);
    return v21;
  }
  return a2;
}

void *sub_1C01B27B8(uint64_t a1, uint64_t a2)
{
  uint64_t v58 = *MEMORY[0x1E4F143B8];
  sub_1C0181BEC(0);
  uint64_t v43 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C01B0D24(a2, (uint64_t)&v46, &qword_1EB8819D8, (uint64_t)&type metadata for FeedTag);
  if (*((void *)&v46 + 1))
  {
    uint64_t v41 = a1;
    v56[6] = v52;
    v56[7] = v53;
    v56[8] = v54;
    void v56[2] = v48;
    v56[3] = v49;
    char v57 = v55;
    v56[4] = v50;
    v56[5] = v51;
    v56[0] = v46;
    v56[1] = v47;
    long long v7 = (void *)v47;
    sub_1C01B2D70();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    *((void *)&v47 + 1) = &type metadata for FeedTag;
    *(void *)&long long v48 = sub_1BFEA44FC();
    *(void *)&long long v46 = swift_allocObject();
    sub_1BFEA435C((uint64_t)v56, v46 + 16);
    uint64_t v40 = v7;
    swift_unknownObjectRetain();
    sub_1BFF7E884(&v46, v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    uint64_t v8 = v45[0];
    v45[0] = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, 0, 0);
    uint64_t v9 = v45[0];
    if (v8)
    {
      uint64_t v42 = v6 + 2;
      do
      {
        *(void *)&long long v46 = 91;
        *((void *)&v46 + 1) = 0xE100000000000000;
        unint64_t v44 = (void *)(v8 & -v8);
        unint64_t v44 = sub_1BFFBE5C8();
        sub_1C01B2E50(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        sub_1BFE99E40();
        sub_1C151E55C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        unint64_t v10 = sub_1C029748C(1uLL, v46, *((unint64_t *)&v46 + 1));
        unint64_t v12 = v11;
        swift_bridgeObjectRelease();
        if (__OFSUB__(sub_1C151FDBC(), 1))
        {
          __break(1u);
LABEL_16:
          __break(1u);
        }
        uint64_t v13 = sub_1C151FDAC();
        if (v14) {
          unint64_t v15 = v12;
        }
        else {
          unint64_t v15 = v13;
        }
        if (v15 >> 14 < v10 >> 14) {
          goto LABEL_16;
        }
        uint64_t v16 = sub_1C151FDEC();
        uint64_t v18 = v17;
        uint64_t v20 = v19;
        uint64_t v22 = v21;
        swift_bridgeObjectRelease();
        uint64_t v23 = MEMORY[0x1C18C6220](v16, v18, v20, v22);
        uint64_t v25 = v24;
        swift_bridgeObjectRelease();
        uint64_t v26 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v27 = (uint64_t *)((char *)v6 + *(int *)(v26 + 24));
        void *v27 = 0;
        v27[1] = 0xE000000000000000;
        uint64_t v28 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
        *uint64_t v6 = v23;
        v6[1] = v25;
        char v29 = v42;
        *uint64_t v42 = 0;
        v29[1] = 0;
        id v30 = (char *)v6 + *(int *)(v26 + 28);
        *(void *)id v30 = 0;
        *((void *)v30 + 1) = 0;
        v30[16] = -1;
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v6, 0, 1, v26);
        v45[0] = v9;
        unint64_t v32 = *(void *)(v9 + 16);
        unint64_t v31 = *(void *)(v9 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_1C05F62D0(v31 > 1, v32 + 1, 1);
          uint64_t v9 = v45[0];
        }
        v8 ^= v8 & -v8;
        *(void *)(v9 + 16) = v32 + 1;
        sub_1C0100634((uint64_t)v6, v9+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v32);
      }
      while (v8);
    }
    uint64_t v33 = (void *)inited;
    sub_1C09BCFA4(0x737469617254, 0xE600000000000000, 0, 0, v9, &v46);
    swift_release();
    v33[7] = &type metadata for FormatInspectionGroup;
    v33[8] = &off_1F1BDEC90;
    uint64_t v34 = swift_allocObject();
    void v33[4] = v34;
    *(void *)(v34 + 48) = v48;
    long long v35 = v47;
    *(_OWORD *)(v34 + 16) = v46;
    *(_OWORD *)(v34 + 32) = v35;
    uint64_t v36 = sub_1C0CD6684(v41, v40);
    swift_setDeallocating();
    sub_1BFE4D1E4(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
    swift_arrayDestroy();
    swift_unknownObjectRelease();
    sub_1BFEA4290((uint64_t)v56);
  }
  else
  {
    sub_1C01B0F7C((uint64_t)&v46, &qword_1EB8819D8, (uint64_t)&type metadata for FeedTag);
    return sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  return v36;
}

void sub_1C01B2D70()
{
  if (!qword_1EA1974D0)
  {
    sub_1BFE4D1E4(255, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1974D0);
    }
  }
}

uint64_t sub_1C01B2DE0()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

void sub_1C01B2E50(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C01B2E9C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C01B2F08@<X0>(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151A31C();
  BlueprintItem<>.feedItem.getter(v7, a1);
  FeedItem.identifier.getter();
  sub_1BFEE2FE0((uint64_t)v6, type metadata accessor for FeedItem);
  char v8 = sub_1C151E89C();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  if (v8)
  {
    BlueprintItem<>.feedItem.getter(v7, a1);
    uint64_t v10 = FeedItem.identifier.getter();
    uint64_t v11 = v14;
    uint64_t result = sub_1BFEE2FE0((uint64_t)v6, type metadata accessor for FeedItem);
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t v12 = MEMORY[0x1E4FBC870];
  }
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  a2[4] = 0;
  a2[5] = 0;
  return result;
}

uint64_t sub_1C01B3090@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unsigned char *a5@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v24 = a4;
  uint64_t v25 = a1;
  uint64_t v26 = a3;
  uint64_t v27 = a5;
  sub_1C151A31C();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C151879C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = sub_1C152012C();
  uint64_t v22 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v20 - v8;
  sub_1BFEC626C(255, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBB718]);
  sub_1C152034C();
  swift_getWitnessTable();
  sub_1C152049C();
  swift_getWitnessTable();
  uint64_t v10 = sub_1C152034C();
  uint64_t v21 = *(void *)(v10 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v20 - v12;
  MEMORY[0x1C18C64E0](v5, WitnessTable, v11);
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t v15 = v26;
  void v14[2] = v23;
  v14[3] = v15;
  uint64_t v16 = v25;
  void v14[4] = v24;
  v14[5] = v16;
  id v17 = v16;
  swift_getWitnessTable();
  sub_1C152057C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v28 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C151F12C();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v10);
  sub_1C01B3AD4((uint64_t)v32, (uint64_t)v31, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  sub_1C01B3AD4((uint64_t)v31, (uint64_t)v32, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  uint64_t result = sub_1C00A0A24(v32);
  if (result == 1)
  {
    char v19 = 0;
  }
  else
  {
    uint64_t result = sub_1C01B3B54((uint64_t)v31);
    char v19 = v33;
  }
  unsigned char *v27 = v19;
  return result;
}

uint64_t sub_1C01B34CC@<X0>(void *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151A31C();
  BlueprintItem<>.feedItem.getter(v9, a2);
  FeedItem.feedIssue.getter((uint64_t)v20);
  sub_1BFEE2FE0((uint64_t)v8, type metadata accessor for FeedItem);
  sub_1C01B3AD4((uint64_t)v20, (uint64_t)v22, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  sub_1C01B3AD4((uint64_t)v22, (uint64_t)v23, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  if (sub_1C00A0A24((uint64_t *)v23) == 1) {
    goto LABEL_8;
  }
  id v10 = objc_msgSend(*(id *)&v23[0], sel_identifier);
  uint64_t v11 = sub_1C151E62C();
  uint64_t v13 = v12;

  id v14 = objc_msgSend(a1, sel_identifier);
  uint64_t v15 = sub_1C151E62C();
  uint64_t v17 = v16;

  if (v11 != v15 || v13 != v17)
  {
    char v18 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_6;
    }
    sub_1C01B3B54((uint64_t)v22);
LABEL_8:
    sub_1C01B3C58(v20);
    return sub_1C01B3AD4((uint64_t)v20, a3, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
  }
  swift_bridgeObjectRelease_n();
LABEL_6:
  v20[6] = v23[6];
  v21[0] = v24[0];
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)((char *)v24 + 9);
  void v20[2] = v23[2];
  void v20[3] = v23[3];
  v20[4] = v23[4];
  void v20[5] = v23[5];
  v20[0] = v23[0];
  v20[1] = v23[1];
  nullsub_1(v20);
  return sub_1C01B3AD4((uint64_t)v20, a3, (unint64_t *)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue);
}

uint64_t sub_1C01B3704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFECA0F4(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v24[-v8];
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v24[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for FormatWebEmbed.Resolved();
  sub_1BFECA54C(a1 + *(int *)(v13 + 36), (uint64_t)v12, (uint64_t (*)(void))sub_1BFEC8548);
  sub_1BFEC84E0();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v14) == 1)
  {
    sub_1BFEE2FE0((uint64_t)v12, (uint64_t (*)(void))sub_1BFEC8548);
    uint64_t v17 = type metadata accessor for FeedHeadline(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  else
  {
    sub_1C151948C();
    char v19 = v26;
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v12, v15);
    uint64_t v20 = sub_1C151D2DC();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 1, 1, v20);
    uint64_t v28 = 0;
    uint64_t v26 = 0;
    char v27 = 1;
    char v25 = 0;
    uint64_t v21 = (char *)v6 + v4[6];
    uint64_t v22 = type metadata accessor for SharedItem();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
    *uint64_t v6 = 258;
    *((unsigned char *)v6 + v4[7]) = 1;
    *((unsigned char *)v6 + v4[8]) = 0;
    *((unsigned char *)v6 + v4[9]) = 0;
    *((unsigned char *)v6 + v4[10]) = 0;
    FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v19, 0, &v25, (uint64_t)v9, (uint64_t)v6, &v28, a2, (uint64_t)&v26);
    uint64_t v23 = type metadata accessor for FeedHeadline(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a2, 0, 1, v23);
  }
}

uint64_t sub_1C01B3A90()
{
  return swift_deallocObject();
}

uint64_t sub_1C01B3AC8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C01B34CC(*(void **)(v1 + 40), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C01B3AD4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFEC626C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C01B3B54(uint64_t a1)
{
  return a1;
}

void *sub_1C01B3BB8(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, unint64_t a17)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    sub_1BFFF2340(a10, a11, a12, a13, a14);
    return (void *)sub_1BFEEFC20(a16, a17);
  }
  return result;
}

double sub_1C01B3C58(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 121) = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1C01B3C74()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C01B3CAC()
{
  uint64_t v1 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = v3 + v1[5];
  uint64_t v5 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v6 = v3 + v1[14];
  uint64_t v7 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + v7[5];
    swift_bridgeObjectRelease();
    uint64_t v9 = type metadata accessor for FormatWebEmbed();
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void *)(v11 - 8);
    char v25 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v25(v10, v11);
    uint64_t v13 = v8 + *(int *)(v9 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11)) {
      v25(v13, v11);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v14 = v6 + v7[8];
    uint64_t v15 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = type metadata accessor for GenericDataVisualization();
        v25(v14 + *(int *)(v16 + 20), v11);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v17 = v6 + v7[9];
    sub_1BFEC84E0();
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v21 = v3 + v1[18];
  uint64_t v22 = sub_1C151D6DC();
  uint64_t v23 = *(void *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C01B41BC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C01B2F08(*(void *)(v1 + 24), a1);
}

uint64_t sub_1C01B41E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *assignWithCopy for SlotReference(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  if (!a1[4])
  {
    if (v4)
    {
      a1[4] = v4;
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v4)
  {
    sub_1C01B4324((uint64_t)(a1 + 4));
    goto LABEL_7;
  }
  a1[4] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C01B4324(uint64_t a1)
{
  return a1;
}

void *assignWithTake for SlotReference(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  if (!a1[4]) {
    goto LABEL_5;
  }
  if (!v5)
  {
    sub_1C01B4324((uint64_t)(a1 + 4));
LABEL_5:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  a1[4] = v5;
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SlotReference()
{
  return &type metadata for SlotReference;
}

uint64_t initializeBufferWithCopyOfBuffer for FormatAuxiliaryView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

void destroy for FeedIssue.Overrides.Image(id *a1)
{
}

uint64_t assignWithCopy for FormatAuxiliaryView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t assignWithTake for FormatAuxiliaryView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for FormatAuxiliaryView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatAuxiliaryView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAuxiliaryView()
{
  return &type metadata for FormatAuxiliaryView;
}

uint64_t type metadata accessor for DebugNavigationController()
{
  return self;
}

void sub_1C01B4814(void *a1)
{
  id v1 = objc_msgSend(a1, sel_topViewController);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = objc_msgSend(v1, sel_navigationItem);

    int v4 = (void *)sub_1C151E5EC();
    id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithTitle_style_target_action_, v4, 0, 0, 0);

    objc_msgSend(v3, sel_setBackBarButtonItem_, v5);
  }
}

BOOL static FeedServiceConfigExpansion.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedServiceConfigExpansion.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FeedServiceConfigExpansion.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C01B4978@<X0>(uint64_t a1@<X8>)
{
  return FeedServiceConfigType.appVersion.getter(a1);
}

uint64_t FeedServiceConfigType.appVersion.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB8943F8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C151928C();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB893CD8);
  uint64_t v6 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v3, v2);
  int v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
  return v4(a1, 0, 1, v2);
}

uint64_t FeedServiceConfigType.cacheKey.getter(uint64_t a1, uint64_t a2)
{
  sub_1BFF97C40();
  v18[1] = v4;
  MEMORY[0x1F4188790](v4);
  v18[0] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v11 = swift_checkMetadataState();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v18 - v14;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 64))(a1, a2, v13);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v11, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  uint64_t v16 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(v16 + 40))(AssociatedTypeWitness, v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  return sub_1C151E6AC();
}

uint64_t sub_1C01B4D28()
{
  return MEMORY[0x1E4FBC870];
}

void sub_1C01B4D3C(unsigned char *a1@<X8>)
{
}

void FeedServiceConfigType.expansion.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_1C01B4D5C(unsigned char *a1@<X8>)
{
}

void FeedServiceConfigType.feedKind.getter(unsigned char *a1@<X8>)
{
  *a1 = 21;
}

uint64_t FeedServiceConfigType.expand(cursor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)a1 + 80) - 8) + 16))(a2, v2);
}

uint64_t sub_1C01B4DC8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return FeedServiceConfigType.cached(repooled:ignoreFeedItemIdentifiers:ignoreTagsForGrouping:)(a1, a2);
}

uint64_t FeedServiceConfigType.cached(repooled:ignoreFeedItemIdentifiers:ignoreTagsForGrouping:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t FeedServiceConfigType.seenContentMarker(contentConfig:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t FeedServiceConfigType.groups.getter(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = swift_checkMetadataState();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  __n128 v13 = (char *)&v17 - v12;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 64))(a1, a2, v11);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v9, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(AssociatedTypeWitness, v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  return v15;
}

uint64_t FeedServiceConfigType.replacing(groups:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v41 = a4;
  uint64_t v42 = a2;
  uint64_t v40 = a1;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v39 = v8;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v34 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v37 = (char *)v32 - v11;
  uint64_t v12 = swift_checkMetadataState();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v32 - v17;
  __n128 v20 = MEMORY[0x1F4188790](v19);
  char v33 = (char *)v32 - v21;
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, __n128))(a3 + 64);
  uint64_t v35 = a3;
  uint64_t v36 = v4;
  uint64_t v23 = v42;
  v22(v42, a3, v20);
  ((void (*)(uint64_t, uint64_t))v22)(v23, a3);
  uint64_t v24 = v34;
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v12, AssociatedConformanceWitness);
  char v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v32[1] = v13 + 8;
  v25(v15, v12);
  uint64_t v26 = v38;
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  uint64_t v28 = v37;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 64))(v40, v26, v27);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v39 + 8);
  v29(v24, v26);
  uint64_t v30 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(v28, v12, AssociatedConformanceWitness);
  v29(v28, v26);
  v25(v18, v12);
  (*(void (**)(char *, uint64_t))(v35 + 136))(v30, v42);
  return ((uint64_t (*)(char *, uint64_t))v25)(v30, v12);
}

uint64_t _s8NewsFeed0B17ServiceConfigTypePAAE45excludedGroupKindsForIgnoredTagIdentificationShy0B4Pool_0bG04KindQZGvg_0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_1C151E31C();
}

unint64_t sub_1C01B5500()
{
  unint64_t result = qword_1EA197D50;
  if (!qword_1EA197D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197D50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedServiceConfigExpansion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01B5620);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedServiceConfigExpansion()
{
  return &type metadata for FeedServiceConfigExpansion;
}

uint64_t dispatch thunk of FeedServiceConfigType.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedServiceConfigType.appVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeedServiceConfigType.contentConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FeedServiceConfigType.cachePolicy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeedServiceConfigType.cacheKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of FeedServiceConfigType.canCache.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of FeedServiceConfigType.selectors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of FeedServiceConfigType.refreshInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of FeedServiceConfigType.excludedGroupKindsForIgnoredTagIdentification.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of FeedServiceConfigType.expansion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of FeedServiceConfigType.feedKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of FeedServiceConfigType.replacing(contentConfig:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of FeedServiceConfigType.expand(cursor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of FeedServiceConfigType.cached(repooled:ignoreFeedItemIdentifiers:ignoreTagsForGrouping:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 152))();
}

uint64_t dispatch thunk of FeedServiceConfigType.seenContentMarker(contentConfig:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

ValueMetadata *_s2AdVMa()
{
  return &_s2AdVN;
}

uint64_t sub_1C01B5794@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFC66384(v1, a1);
}

uint64_t sub_1C01B57A0()
{
  return sub_1C12BC66C();
}

uint64_t sub_1C01B57B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v46 = a3;
  uint64_t v47 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v48 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v12 = v11[5];
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = v11[6];
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
  unint64_t v19 = *(void *)(v9 + v16 + 24);
  if (v19 >= 2) {
    unint64_t v19 = swift_bridgeObjectRetain();
  }
  *(void *)(v17 + 24) = v19;
  uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v20 + 36);
  uint64_t v22 = (void *)(v17 + v21);
  uint64_t v23 = (const void *)(v18 + v21);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 16))(v22, v23, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(void *)(v17 + *(int *)(v20 + 40)) = *(void *)(v18 + *(int *)(v20 + 40));
  *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
  *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
  *(unsigned char *)(v8 + v11[11]) = *(unsigned char *)(v9 + v11[11]);
  *(void *)(v8 + v11[12]) = *(void *)(v9 + v11[12]);
  uint64_t v28 = *(int *)(v46 + 24);
  uint64_t v29 = (void *)(v48 + v28);
  uint64_t v30 = v47 + v28;
  uint64_t v31 = *(void *)(v47 + v28 + 8);
  *uint64_t v29 = *(void *)(v47 + v28);
  v29[1] = v31;
  unint64_t v32 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v33 = v32[5];
  unint64_t v45 = (char *)v29 + v33;
  uint64_t v34 = v30 + v33;
  uint64_t v35 = sub_1C151DBAC();
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v36(v45, v34, v35);
  *(void *)((char *)v29 + v32[6]) = *(void *)(v30 + v32[6]);
  uint64_t v37 = v32[7];
  uint64_t v38 = (char *)v29 + v37;
  uint64_t v39 = v30 + v37;
  *(void *)uint64_t v38 = *(void *)v39;
  v38[8] = *(unsigned char *)(v39 + 8);
  uint64_t v40 = v32[8];
  uint64_t v41 = (void *)((char *)v29 + v40);
  uint64_t v42 = (void *)(v30 + v40);
  unint64_t v43 = v42[1];
  if (v43 >= 0x11)
  {
    *uint64_t v41 = *v42;
    v41[1] = v43;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  }
  *(void *)(v48 + *(int *)(v46 + 28)) = *(void *)(v47 + *(int *)(v46 + 28));
  swift_retain();
  return v48;
}

uint64_t *sub_1C01B5BA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v56 = a3;
  char v57 = a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v58 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  long long v53 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = &v7[v15];
  uint64_t v17 = &v8[v15];
  long long v18 = *(_OWORD *)&v8[v15];
  v16[16] = v8[v15 + 16];
  *(_OWORD *)uint64_t v16 = v18;
  v16[17] = v8[v15 + 17];
  v16[18] = v8[v15 + 18];
  v16[19] = v8[v15 + 19];
  v16[20] = v8[v15 + 20];
  v16[21] = v8[v15 + 21];
  v16[22] = v8[v15 + 22];
  v16[23] = v8[v15 + 23];
  unint64_t v19 = (unint64_t *)&v7[v15 + 24];
  unint64_t v20 = *(void *)&v8[v15 + 24];
  if (*v19 >= 2)
  {
    if (v20 >= 2)
    {
      *unint64_t v19 = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F164((uint64_t)(v16 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *unint64_t v19 = *((void *)v17 + 3);
    }
  }
  else
  {
    *unint64_t v19 = v20;
    if (v20 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v55 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v55 + 36);
  uint64_t v22 = (uint64_t)&v16[v21];
  uint64_t v23 = &v17[v21];
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v54 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    uint64_t v29 = v56;
    uint64_t v28 = v57;
    if (v27)
    {
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v30 - 8) + 64);
      unint64_t v32 = (void *)v54;
LABEL_13:
      memcpy(v32, v23, v31);
      goto LABEL_16;
    }
    uint64_t v34 = sub_1C151B62C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v54, v23, v34);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v54, 0, 1, v24);
  }
  else
  {
    uint64_t v29 = v56;
    uint64_t v28 = v57;
    if (v27)
    {
      sub_1BFF1F164(v54, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v31 = *(void *)(*(void *)(v33 - 8) + 64);
      unint64_t v32 = (void *)v54;
      goto LABEL_13;
    }
    uint64_t v35 = sub_1C151B62C();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v54, v23, v35);
  }
LABEL_16:
  *(void *)&v16[*(int *)(v55 + 40)] = *(void *)&v17[*(int *)(v55 + 40)];
  *(void *)&v7[v53[7]] = *(void *)&v8[v53[7]];
  *(void *)&v7[v53[8]] = *(void *)&v8[v53[8]];
  v7[v53[9]] = v8[v53[9]];
  *(void *)&v7[v53[10]] = *(void *)&v8[v53[10]];
  swift_retain();
  swift_release();
  v7[v53[11]] = v8[v53[11]];
  *(void *)&v7[v53[12]] = *(void *)&v8[v53[12]];
  swift_retain();
  swift_release();
  uint64_t v36 = *(int *)(v29 + 24);
  uint64_t v37 = (uint64_t *)((char *)v58 + v36);
  uint64_t v38 = (uint64_t)v28 + v36;
  void *v37 = *(uint64_t *)((char *)v28 + v36);
  v37[1] = *(uint64_t *)((char *)v28 + v36 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v40 = v39[5];
  uint64_t v41 = (char *)v37 + v40;
  uint64_t v42 = v38 + v40;
  uint64_t v43 = sub_1C151DBAC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  *(void *)((char *)v37 + v39[6]) = *(void *)(v38 + v39[6]);
  uint64_t v44 = v39[7];
  unint64_t v45 = (char *)v37 + v44;
  uint64_t v46 = v38 + v44;
  char v47 = *(unsigned char *)(v46 + 8);
  *(void *)unint64_t v45 = *(void *)v46;
  v45[8] = v47;
  uint64_t v48 = v39[8];
  long long v49 = (void *)((char *)v37 + v48);
  long long v50 = (void *)(v38 + v48);
  unint64_t v51 = *(void *)(v38 + v48 + 8);
  if (v49[1] >= 0x11uLL)
  {
    if (v51 >= 0x11)
    {
      *long long v49 = *v50;
      v49[1] = v50[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_1C01A7564((uint64_t)v49);
    goto LABEL_21;
  }
  if (v51 < 0x11)
  {
LABEL_21:
    *(_OWORD *)long long v49 = *(_OWORD *)v50;
    goto LABEL_23;
  }
  *long long v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
LABEL_23:
  *(uint64_t *)((char *)v58 + *(int *)(v29 + 28)) = *(uint64_t *)((char *)v28 + *(int *)(v29 + 28));
  swift_retain();
  swift_release();
  return v58;
}

uint64_t sub_1C01B6134(uint64_t a1, uint64_t a2, int *a3)
{
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v11 = v10[5];
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = v10[6];
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(_WORD *)(v16 + 17) = *(_WORD *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(_DWORD *)(v16 + 20) = *(_DWORD *)(v8 + v15 + 20);
  *(void *)(v16 + 24) = *(void *)(v8 + v15 + 24);
  uint64_t v18 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v19 = *(int *)(v18 + 36);
  __dst = (void *)(v16 + v19);
  uint64_t v38 = v18;
  unint64_t v20 = (const void *)(v17 + v19);
  uint64_t v21 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(__dst, v20, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
  }
  *(void *)(v16 + *(int *)(v38 + 40)) = *(void *)(v17 + *(int *)(v38 + 40));
  *(void *)(v7 + v10[7]) = *(void *)(v8 + v10[7]);
  *(void *)(v7 + v10[8]) = *(void *)(v8 + v10[8]);
  *(unsigned char *)(v7 + v10[9]) = *(unsigned char *)(v8 + v10[9]);
  *(void *)(v7 + v10[10]) = *(void *)(v8 + v10[10]);
  *(unsigned char *)(v7 + v10[11]) = *(unsigned char *)(v8 + v10[11]);
  *(void *)(v7 + v10[12]) = *(void *)(v8 + v10[12]);
  uint64_t v25 = a3[6];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  uint64_t v28 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v29 = v28[5];
  uint64_t v30 = v26 + v29;
  uint64_t v31 = v27 + v29;
  uint64_t v32 = sub_1C151DBAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  *(void *)(v26 + v28[6]) = *(void *)(v27 + v28[6]);
  uint64_t v33 = v28[7];
  uint64_t v34 = v26 + v33;
  uint64_t v35 = v27 + v33;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(void *)uint64_t v34 = *(void *)v35;
  *(_OWORD *)(v26 + v28[8]) = *(_OWORD *)(v27 + v28[8]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C01B64AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v57 = a1;
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = v9 + v12;
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  long long v52 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
  *(unsigned char *)(v17 + 17) = *(unsigned char *)(v9 + v16 + 17);
  *(unsigned char *)(v17 + 18) = *(unsigned char *)(v9 + v16 + 18);
  *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
  *(unsigned char *)(v17 + 20) = *(unsigned char *)(v9 + v16 + 20);
  *(unsigned char *)(v17 + 21) = *(unsigned char *)(v9 + v16 + 21);
  *(unsigned char *)(v17 + 22) = *(unsigned char *)(v9 + v16 + 22);
  *(unsigned char *)(v17 + 23) = *(unsigned char *)(v9 + v16 + 23);
  uint64_t v19 = (unint64_t *)(v8 + v16 + 24);
  unint64_t v20 = *(void *)(v9 + v16 + 24);
  if (*v19 < 2) {
    goto LABEL_4;
  }
  if (v20 < 2)
  {
    sub_1BFF1F164((uint64_t)v19, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v20 = *(void *)(v18 + 24);
LABEL_4:
    *uint64_t v19 = v20;
    goto LABEL_6;
  }
  *uint64_t v19 = v20;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v54 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v21 = *(int *)(v54 + 36);
  uint64_t v22 = v17 + v21;
  uint64_t v23 = (const void *)(v18 + v21);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v53 = v22;
  LODWORD(v22) = v26(v22, 1, v24);
  int v27 = v26((uint64_t)v23, 1, v24);
  if (v22)
  {
    uint64_t v28 = v56;
    if (v27)
    {
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
      uint64_t v31 = (void *)v53;
LABEL_11:
      memcpy(v31, v23, v30);
      goto LABEL_14;
    }
    uint64_t v33 = sub_1C151B62C();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v33 - 8) + 32))(v53, v23, v33);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(v53, 0, 1, v24);
  }
  else
  {
    uint64_t v28 = v56;
    if (v27)
    {
      sub_1BFF1F164(v53, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
      sub_1C01B6C4C(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
      uint64_t v31 = (void *)v53;
      goto LABEL_11;
    }
    uint64_t v34 = sub_1C151B62C();
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v34 - 8) + 40))(v53, v23, v34);
  }
LABEL_14:
  *(void *)(v17 + *(int *)(v54 + 40)) = *(void *)(v18 + *(int *)(v54 + 40));
  *(void *)(v8 + v52[7]) = *(void *)(v9 + v52[7]);
  *(void *)(v8 + v52[8]) = *(void *)(v9 + v52[8]);
  *(unsigned char *)(v8 + v52[9]) = *(unsigned char *)(v9 + v52[9]);
  *(void *)(v8 + v52[10]) = *(void *)(v9 + v52[10]);
  swift_release();
  *(unsigned char *)(v8 + v52[11]) = *(unsigned char *)(v9 + v52[11]);
  *(void *)(v8 + v52[12]) = *(void *)(v9 + v52[12]);
  swift_release();
  uint64_t v35 = *(int *)(v55 + 24);
  uint64_t v36 = (void *)(v57 + v35);
  uint64_t v37 = v28 + v35;
  uint64_t v38 = *(void *)(v28 + v35 + 8);
  void *v36 = *(void *)(v28 + v35);
  v36[1] = v38;
  swift_bridgeObjectRelease();
  uint64_t v39 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v40 = v39[5];
  uint64_t v41 = (char *)v36 + v40;
  uint64_t v42 = v37 + v40;
  uint64_t v43 = sub_1C151DBAC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 40))(v41, v42, v43);
  *(void *)((char *)v36 + v39[6]) = *(void *)(v37 + v39[6]);
  uint64_t v44 = v39[7];
  unint64_t v45 = (char *)v36 + v44;
  uint64_t v46 = v37 + v44;
  *(void *)unint64_t v45 = *(void *)v46;
  v45[8] = *(unsigned char *)(v46 + 8);
  uint64_t v47 = v39[8];
  uint64_t v48 = (void *)((char *)v36 + v47);
  long long v49 = (void *)(v37 + v47);
  if (*(void *)((char *)v36 + v47 + 8) >= 0x11uLL)
  {
    unint64_t v50 = v49[1];
    if (v50 >= 0x11)
    {
      *uint64_t v48 = *v49;
      v48[1] = v50;
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    sub_1C01A7564((uint64_t)v48);
  }
  *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
LABEL_19:
  *(void *)(v57 + *(int *)(v55 + 28)) = *(void *)(v28 + *(int *)(v55 + 28));
  swift_release();
  return v57;
}

uint64_t sub_1C01B69CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01B69E0);
}

uint64_t sub_1C01B69E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FeedBannerAd();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C01B6B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01B6B20);
}

uint64_t sub_1C01B6B20(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for FeedBannerAd();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1C01B6C4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

NewsFeed::FeedGroupNativeAdInsertionLocation_optional __swiftcall FeedGroupNativeAdInsertionLocation.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FeedGroupNativeAdInsertionLocation.rawValue.getter()
{
  uint64_t v1 = 0x676E696C69617274;
  if (*v0 != 1) {
    uint64_t v1 = 1701736302;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x676E696461656CLL;
  }
}

uint64_t sub_1C01B6D64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1492B5C(*a1, *a2);
}

unint64_t sub_1C01B6D74()
{
  unint64_t result = qword_1EA197D58;
  if (!qword_1EA197D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197D58);
  }
  return result;
}

uint64_t sub_1C01B6DC8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C01B6E64()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01B6EEC()
{
  return sub_1C1520E0C();
}

NewsFeed::FeedGroupNativeAdInsertionLocation_optional sub_1C01B6F84(Swift::String *a1)
{
  return FeedGroupNativeAdInsertionLocation.init(rawValue:)(*a1);
}

void sub_1C01B6F90(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x676E696C69617274;
  if (v2 != 1)
  {
    uint64_t v5 = 1701736302;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x676E696461656CLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C01B6FE8()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C01B7048()
{
  return sub_1C151EAEC();
}

uint64_t dispatch thunk of FeedGroupNativeAdInsertable.placementType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedGroupNativeAdInsertable.supportsNativeAds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeedGroupNativeAdInsertable.nativeAdInsertionLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

unsigned char *storeEnumTagSinglePayload for FeedGroupNativeAdInsertionLocation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01B71A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unint64_t sub_1C01B71C8()
{
  unint64_t result = qword_1EB886AC0;
  if (!qword_1EB886AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886AC0);
  }
  return result;
}

id sub_1C01B7224(uint64_t a1, id a2)
{
  id v2 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  uint64_t v3 = sub_1C151F9EC();
  if (!v3) {
    goto LABEL_6;
  }
  unsigned int v4 = (void *)v3;
  uint64_t v5 = sub_1C151F9EC();
  if (!v5)
  {

    id v2 = v4;
LABEL_6:

    goto LABEL_7;
  }
  unsigned int v6 = (void *)v5;
  id v7 = objc_msgSend(self, sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

  if (v7) {
    return v7;
  }
LABEL_7:
  return a2;
}

id sub_1C01B732C(uint64_t a1, id a2)
{
  id v2 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  uint64_t v3 = sub_1C151F9EC();
  if (!v3) {
    goto LABEL_6;
  }
  unsigned int v4 = (void *)v3;
  uint64_t v5 = sub_1C151F9EC();
  if (!v5)
  {

    id v2 = v4;
LABEL_6:

    goto LABEL_7;
  }
  unsigned int v6 = (void *)v5;
  id v7 = objc_msgSend(self, sel_ts_dynamicColor_withDarkStyleVariant_, v4, v5);

  if (v7) {
    return v7;
  }
LABEL_7:
  return a2;
}

id sub_1C01B7444(uint64_t a1)
{
  Class v2 = FormatColor.color.getter(a1);
  id v3 = [(objc_class *)v2 resolvedColorWithTraitCollection:a1];

  return v3;
}

uint64_t _s8NewsFeed20FormatColorProcessorO2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1 >> 61)
  {
    case 1uLL:
      if (v3 >> 61 != 1) {
        goto LABEL_27;
      }
      double v4 = *(double *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      double v5 = *(double *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v6 = *(unsigned char *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unsigned __int8 v7 = *(unsigned char *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      goto LABEL_6;
    case 2uLL:
      if (v3 >> 61 != 2) {
        goto LABEL_27;
      }
      uint64_t v10 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v12 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v24 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v25 = v10;
      sub_1BFF65DE8(v3);
      sub_1BFF65DE8(v2);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if ((static FormatColorExpression.== infix(_:_:)(&v25, &v24) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_28;
      }
      char v13 = sub_1C00E5A8C(v11, v12);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BFF65E20(v2);
      sub_1BFF65E20(v3);
      if ((v13 & 1) == 0) {
        goto LABEL_29;
      }
      goto LABEL_36;
    case 3uLL:
      if (v3 >> 61 != 3) {
        goto LABEL_27;
      }
      uint64_t v14 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v24 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v25 = v14;
      sub_1BFF65DE8(v3);
      sub_1BFF65DE8(v2);
      char v9 = static FormatColor.== infix(_:_:)(&v25, &v24);
      sub_1BFF65E20(v2);
      sub_1BFF65E20(v3);
      return v9 & 1;
    case 4uLL:
      if (v3 >> 61 != 4) {
        goto LABEL_27;
      }
      double v15 = *(double *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v16 = *(unsigned char *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v17 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      double v18 = *(double *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v19 = *(unsigned char *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      unint64_t v24 = *(void *)((v3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v25 = v17;
      sub_1BFF65DE8(v3);
      sub_1BFF65DE8(v2);
      char v20 = static FormatColor.== infix(_:_:)(&v25, &v24);
      sub_1BFF65E20(v2);
      sub_1BFF65E20(v3);
      if ((v20 & 1) == 0) {
        goto LABEL_29;
      }
      if (v16)
      {
        if ((v19 & 1) == 0) {
          goto LABEL_29;
        }
        goto LABEL_36;
      }
      if (v15 == v18) {
        char v23 = v19;
      }
      else {
        char v23 = 1;
      }
      if ((v23 & 1) == 0)
      {
LABEL_36:
        char v9 = 1;
        return v9 & 1;
      }
      goto LABEL_29;
    case 5uLL:
      if (v2 == 0xA000000000000000)
      {
        if (v3 == 0xA000000000000000)
        {
          sub_1BFF65E20(0xA000000000000000);
          unint64_t v21 = 0xA000000000000000;
          goto LABEL_26;
        }
      }
      else if (v2 == 0xA000000000000008)
      {
        if (v3 == 0xA000000000000008)
        {
          sub_1BFF65E20(0xA000000000000008);
          unint64_t v21 = 0xA000000000000008;
LABEL_26:
          sub_1BFF65E20(v21);
          char v9 = 1;
          return v9 & 1;
        }
      }
      else if (v3 == 0xA000000000000010)
      {
        sub_1BFF65E20(0xA000000000000010);
        unint64_t v21 = 0xA000000000000010;
        goto LABEL_26;
      }
LABEL_27:
      sub_1BFF65DE8(*a2);
      sub_1BFF65DE8(v2);
LABEL_28:
      sub_1BFF65E20(v2);
      sub_1BFF65E20(v3);
LABEL_29:
      char v9 = 0;
      return v9 & 1;
    default:
      if (v3 >> 61) {
        goto LABEL_27;
      }
      double v4 = *(double *)(v2 + 24);
      double v5 = *(double *)(v3 + 24);
      char v6 = *(unsigned char *)(v3 + 16);
      unsigned __int8 v7 = *(unsigned char *)(v2 + 16);
LABEL_6:
      sub_1BFF65DE8(*a2);
      sub_1BFF65DE8(v2);
      char v8 = sub_1C1478790(v7, v6);
      sub_1BFF65E20(v2);
      sub_1BFF65E20(v3);
      char v9 = v8 & (v4 == v5);
      return v9 & 1;
  }
}

unint64_t sub_1C01B77F8(uint64_t a1)
{
  unint64_t result = sub_1C01B7820();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01B7820()
{
  unint64_t result = qword_1EA197D60;
  if (!qword_1EA197D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197D60);
  }
  return result;
}

unint64_t sub_1C01B7874(void *a1)
{
  a1[1] = sub_1BFD46900();
  a1[2] = sub_1BFD6F3E0();
  unint64_t result = sub_1C01B78AC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C01B78AC()
{
  unint64_t result = qword_1EA197D68;
  if (!qword_1EA197D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197D68);
  }
  return result;
}

unint64_t *assignWithCopy for FormatColorProcessor(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFF65DE8(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1BFF65E20(v4);
  return a1;
}

unint64_t *assignWithTake for FormatColorProcessor(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1BFF65E20(v3);
  return a1;
}

uint64_t sub_1C01B7970(void *a1)
{
  uint64_t v1 = *a1 >> 61;
  if (v1 <= 4) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 5;
  }
}

unint64_t *sub_1C01B798C(unint64_t *result, uint64_t a2)
{
  if (a2 < 5)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 61;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 5);
    unint64_t v3 = 0xA000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatColorProcessor()
{
  return &type metadata for FormatColorProcessor;
}

uint64_t sub_1C01B79C8(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v15 = MEMORY[0x1E4FBC860];
    sub_1C05F6B44(0, v2, 0);
    uint64_t v3 = v15;
    char v6 = (unint64_t *)(a1 + 32);
    do
    {
      unint64_t v7 = *v6++;
      *(void *)&long long v12 = v7;
      sub_1BFF65DE8(v7);
      uint64_t v8 = sub_1C01B7AEC(a2, &v12);
      sub_1BFF65E20(v7);
      uint64_t v15 = v3;
      unint64_t v10 = *(void *)(v3 + 16);
      unint64_t v9 = *(void *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1C05F6B44(v9 > 1, v10 + 1, 1);
        uint64_t v3 = v15;
      }
      uint64_t v14 = &off_1F1C29D30;
      char v13 = &type metadata for FormatInspection;
      *(void *)&long long v12 = v8;
      *(void *)(v3 + 16) = v10 + 1;
      sub_1BFC773DC(&v12, v3 + 40 * v10 + 32);
      --v2;
    }
    while (v2);
  }
  return v3;
}

void *sub_1C01B7AEC(uint64_t a1, unint64_t *a2)
{
  unint64_t v2 = *a2;
  if ((~*a2 & 0xF000000000000007) == 0)
  {
    uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v3);
    sub_1C0181BEC(0);
    unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
    uint64_t v8 = (void *)(v7 + v6);
    unint64_t v9 = v8;
    uint64_t v10 = 1701736270;
    uint64_t v11 = 0xE400000000000000;
    goto LABEL_3;
  }
  switch(v2 >> 61)
  {
    case 1uLL:
      uint64_t v24 = v2 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v105 = *(void *)(v24 + 24);
      unsigned __int8 v14 = *(unsigned char *)(v24 + 16);
      uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v25);
      sub_1C0181BEC(0);
      uint64_t v17 = *(void *)(*(void *)(v26 - 8) + 72);
      unint64_t v27 = (*(unsigned __int8 *)(*(void *)(v26 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v26 - 8) + 80);
      uint64_t v19 = 2 * v17;
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1C152C7F0;
      unint64_t v21 = (void *)(v20 + v27);
      uint64_t v22 = v21;
      uint64_t v23 = 0x796669646F4DLL;
      goto LABEL_7;
    case 2uLL:
      unint64_t v35 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v37 = swift_initStackObject();
      *(_OWORD *)(v37 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v36);
      sub_1C0181BEC(0);
      uint64_t v39 = *(void *)(*(void *)(v38 - 8) + 72);
      unint64_t v40 = (*(unsigned __int8 *)(*(void *)(v38 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v38 - 8) + 80);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1C152C7F0;
      uint64_t v42 = (void *)(v41 + v40);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C0433600(1701869908, 0xE400000000000000, 0x6F697469646E6F43, 0xEB000000006C616ELL, v42);
      uint64_t v43 = type metadata accessor for FormatInspectionItem(0);
      char v102 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
      v102(v42, 0, 1, v43);
      uint64_t v44 = (v35 >> 58) & 0x38;
      uint64_t v100 = *(void *)((char *)&unk_1C1530DB8 + v44);
      uint64_t v101 = *(void *)((char *)&unk_1C1530D90 + v44);
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974C0, (uint64_t (*)(uint64_t))sub_1C01004D8, v36);
      uint64_t v45 = swift_initStackObject();
      *(_OWORD *)(v45 + 16) = xmmword_1C1529AE0;
      *(void *)&long long v107 = v35;
      swift_retain();
      uint64_t v46 = sub_1C0B2F280(a1, (unint64_t *)&v107);
      swift_release();
      *(void *)(v45 + 56) = &type metadata for FormatInspection;
      *(void *)(v45 + 64) = &off_1F1C29D30;
      *(void *)(v45 + 32) = v46;
      uint64_t v47 = sub_1C0233FC8(v45);
      swift_setDeallocating();
      sub_1C01004D8();
      swift_arrayDestroy();
      uint64_t v48 = sub_1C131B79C(v47);
      swift_bridgeObjectRelease();
      sub_1C042F458(0x6973736572707845, 0xEA00000000006E6FLL, (uint64_t)v48, v101, v100, (void *)((char *)v42 + v39));
      v102((void *)((char *)v42 + v39), 0, 1, v43);
      long long v49 = (void *)((char *)v42 + 2 * v39);
      sub_1C01677F4(a1);
      uint64_t v50 = swift_bridgeObjectRetain();
      uint64_t v51 = sub_1C01B79C8(v50, a1);
      sub_1C0167828(a1);
      swift_bridgeObjectRelease();
      uint64_t v52 = sub_1C0233FC8(v51);
      swift_bridgeObjectRelease();
      uint64_t v53 = sub_1C131B79C(v52);
      swift_bridgeObjectRelease();
      sub_1C042F458(0x6F737365636F7250, 0xE900000000000072, (uint64_t)v53, 0, 0, v49);
      v102(v49, 0, 1, v43);
      sub_1C09BCFA4(0x6F737365636F7250, 0xE900000000000072, 0, 0, v41, &v107);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(void *)(v37 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v37 + 64) = &off_1F1BDEC90;
      uint64_t v54 = swift_allocObject();
      *(void *)(v37 + 32) = v54;
      *(void *)(v54 + 48) = v109;
      long long v55 = v108;
      *(_OWORD *)(v54 + 16) = v107;
      *(_OWORD *)(v54 + 32) = v55;
      uint64_t v33 = sub_1C131B79C(v37);
      swift_setDeallocating();
      sub_1C01004A4(0);
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      swift_release();
      return v33;
    case 3uLL:
      uint64_t v56 = *(void *)((v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v57 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v58 = swift_initStackObject();
      *(_OWORD *)(v58 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v57);
      sub_1C0181BEC(0);
      uint64_t v60 = *(void *)(*(void *)(v59 - 8) + 72);
      unint64_t v61 = (*(unsigned __int8 *)(*(void *)(v59 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v59 - 8) + 80);
      uint64_t v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_1C1527210;
      uint64_t v63 = (void *)(v62 + v61);
      swift_retain();
      sub_1C0433600(1701869908, 0xE400000000000000, 0x6563616C706552, 0xE700000000000000, v63);
      uint64_t v64 = type metadata accessor for FormatInspectionItem(0);
      id v65 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56);
      v65(v63, 0, 1, v64);
      unint64_t v66 = (void *)((char *)v63 + v60);
      *(void *)&long long v107 = v56;
      swift_retain();
      uint64_t v67 = sub_1C10E25E4(a1, &v107);
      swift_release();
      sub_1C0434A74(0x65756C6156, 0xE500000000000000, v67, v66);
      v65(v66, 0, 1, v64);
      sub_1C09BCFA4(0x6F737365636F7250, 0xE900000000000072, 0, 0, v62, &v107);
      swift_setDeallocating();
      swift_arrayDestroy();
      goto LABEL_14;
    case 4uLL:
      uint64_t v68 = v2 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v69 = *(void *)(v68 + 16);
      uint64_t v106 = *(void *)(v68 + 24);
      char v104 = *(unsigned char *)(v68 + 32);
      uint64_t v70 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t v58 = swift_initStackObject();
      *(_OWORD *)(v58 + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v70);
      sub_1C0181BEC(0);
      uint64_t v72 = *(void *)(*(void *)(v71 - 8) + 72);
      unint64_t v73 = (*(unsigned __int8 *)(*(void *)(v71 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v71 - 8) + 80);
      uint64_t v103 = 2 * v72;
      uint64_t v74 = swift_allocObject();
      *(_OWORD *)(v74 + 16) = xmmword_1C152C7F0;
      swift_retain();
      sub_1C0433600(1701869908, 0xE400000000000000, 0x646E656C42, 0xE500000000000000, (void *)(v74 + v73));
      uint64_t v75 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v76 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56);
      v76(v74 + v73, 0, 1, v75);
      long long v77 = (void *)(v74 + v73 + v72);
      *(void *)&long long v107 = v69;
      swift_retain();
      uint64_t v78 = sub_1C10E25E4(a1, &v107);
      swift_release();
      sub_1C0434A74(0x726F6C6F43, 0xE500000000000000, v78, v77);
      v76((unint64_t)v77, 0, 1, v75);
      sub_1C042F1BC(0x6168706C41, 0xE500000000000000, v106, v104, (void *)(v74 + v73 + v103));
      v76(v74 + v73 + v103, 0, 1, v75);
      sub_1C09BCFA4(0x6F737365636F7250, 0xE900000000000072, 0, 0, v74, &v107);
      swift_setDeallocating();
      swift_arrayDestroy();
LABEL_14:
      swift_deallocClassInstance();
      *(void *)(v58 + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(v58 + 64) = &off_1F1BDEC90;
      uint64_t v79 = swift_allocObject();
      *(void *)(v58 + 32) = v79;
      *(void *)(v79 + 48) = v109;
      long long v80 = v108;
      *(_OWORD *)(v79 + 16) = v107;
      *(_OWORD *)(v79 + 32) = v80;
      uint64_t v33 = sub_1C131B79C(v58);
      swift_setDeallocating();
      sub_1C01004A4(0);
      swift_arrayDestroy();
      swift_release();
      return v33;
    case 5uLL:
      if (v2 == 0xA000000000000000)
      {
        uint64_t v90 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v82 = swift_allocObject();
        *(_OWORD *)(v82 + 16) = xmmword_1C1529AE0;
        sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v90);
        sub_1C0181BEC(0);
        unint64_t v92 = (*(unsigned __int8 *)(*(void *)(v91 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v91 - 8) + 80);
        uint64_t v85 = swift_allocObject();
        *(_OWORD *)(v85 + 16) = xmmword_1C1529AE0;
        uint64_t v86 = (void *)(v85 + v92);
        char v87 = v86;
        uint64_t v88 = 0x646574696D694CLL;
        uint64_t v89 = 0xE700000000000000;
        goto LABEL_19;
      }
      if (v2 == 0xA000000000000008)
      {
        long long v81 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
        sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
        uint64_t v82 = swift_allocObject();
        *(_OWORD *)(v82 + 16) = xmmword_1C1529AE0;
        sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v81);
        sub_1C0181BEC(0);
        unint64_t v84 = (*(unsigned __int8 *)(*(void *)(v83 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v83 - 8) + 80);
        uint64_t v85 = swift_allocObject();
        *(_OWORD *)(v85 + 16) = xmmword_1C1529AE0;
        uint64_t v86 = (void *)(v85 + v84);
        char v87 = v86;
        uint64_t v88 = 0x694C206172747845;
        uint64_t v89 = 0xED0000646574696DLL;
LABEL_19:
        sub_1C0433600(1701869908, 0xE400000000000000, v88, v89, v87);
        uint64_t v93 = type metadata accessor for FormatInspectionItem(0);
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v86, 0, 1, v93);
        sub_1C09BCFA4(0x6F737365636F7250, 0xE900000000000072, 0, 0, v85, &v107);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v82 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v82 + 64) = &off_1F1BDEC90;
        uint64_t v94 = swift_allocObject();
        *(void *)(v82 + 32) = v94;
        long long v95 = v108;
        *(_OWORD *)(v94 + 16) = v107;
        *(_OWORD *)(v94 + 32) = v95;
        *(void *)(v94 + 48) = v109;
        char v96 = sub_1C131B79C(v82);
        swift_setDeallocating();
        sub_1C01004A4(0);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        return v96;
      }
      char v97 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v97);
      sub_1C0181BEC(0);
      unint64_t v99 = (*(unsigned __int8 *)(*(void *)(v98 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v98 - 8) + 80);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
      uint64_t v8 = (void *)(v7 + v99);
      uint64_t v11 = 0x80000001C1606520;
      unint64_t v9 = v8;
      uint64_t v10 = 0xD000000000000012;
LABEL_3:
      sub_1C0433600(1701869908, 0xE400000000000000, v10, v11, v9);
      uint64_t v12 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 0, 1, v12);
      sub_1C09BCFA4(0x6F737365636F7250, 0xE900000000000072, 0, 0, v7, &v107);
      swift_setDeallocating();
      swift_arrayDestroy();
LABEL_8:
      swift_deallocClassInstance();
      *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(void *)(inited + 64) = &off_1F1BDEC90;
      uint64_t v31 = swift_allocObject();
      *(void *)(inited + 32) = v31;
      *(void *)(v31 + 48) = v109;
      long long v32 = v108;
      *(_OWORD *)(v31 + 16) = v107;
      *(_OWORD *)(v31 + 32) = v32;
      uint64_t v33 = sub_1C131B79C(inited);
      swift_setDeallocating();
      sub_1C01004A4(0);
      swift_arrayDestroy();
      return v33;
    default:
      uint64_t v105 = *(void *)(v2 + 24);
      unsigned __int8 v14 = *(unsigned char *)(v2 + 16);
      uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFF9E2D0(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      sub_1BFF9E2D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v15);
      sub_1C0181BEC(0);
      uint64_t v17 = *(void *)(*(void *)(v16 - 8) + 72);
      unint64_t v18 = (*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80);
      uint64_t v19 = 2 * v17;
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1C152C7F0;
      unint64_t v21 = (void *)(v20 + v18);
      uint64_t v22 = v21;
      uint64_t v23 = 0x6E6769737341;
LABEL_7:
      sub_1C0433600(1701869908, 0xE400000000000000, v23, 0xE600000000000000, v22);
      uint64_t v28 = type metadata accessor for FormatInspectionItem(0);
      uint64_t v29 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
      v29(v21, 0, 1, v28);
      size_t v30 = (void *)((char *)v21 + v17);
      sub_1C0434744(0x6E656E6F706D6F43, 0xE900000000000074, v14, v30);
      v29(v30, 0, 1, v28);
      sub_1C042F1BC(0x65756C6156, 0xE500000000000000, v105, 0, (void *)((char *)v21 + v19));
      v29((void *)((char *)v21 + v19), 0, 1, v28);
      sub_1C09BCFA4(0x6F737365636F7250, 0xE900000000000072, 0, 0, v20, &v107);
      swift_setDeallocating();
      swift_arrayDestroy();
      goto LABEL_8;
  }
}

uint64_t sub_1C01B8F84()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for J6_V1()
{
  return &type metadata for J6_V1;
}

uint64_t sub_1C01B8FDC(void *a1)
{
  uint64_t v3 = v1;
  sub_1C01BD020(0, &qword_1EA197D70, (uint64_t (*)(void))sub_1C01BCF78, (uint64_t)&type metadata for J6_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01BCF78();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C01BC398(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
    sub_1C01BD088(&qword_1EA197D78, (void (*)(void))sub_1C01BD118);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C01B9238()
{
  if (*v0) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0x656D617266;
  }
}

uint64_t sub_1C01B9274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C01BCBCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C01B929C(uint64_t a1)
{
  unint64_t v2 = sub_1C01BCF78();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C01B92D8(uint64_t a1)
{
  unint64_t v2 = sub_1C01BCF78();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C01B9314@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C01BCCB4(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C01B935C(void *a1)
{
  return sub_1C01B8FDC(a1);
}

uint64_t sub_1C01B9374()
{
  sub_1C01BC460();
  return sub_1C151798C();
}

uint64_t sub_1C01B93F0@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C01BD020(0, &qword_1EB85C818, (uint64_t (*)(void))sub_1C01BC9AC, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C01B94AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v49 = a1;
  uint64_t v38 = a3;
  uint64_t v41 = sub_1C151635C();
  uint64_t v6 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v45 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v38 - v12;
  uint64_t v44 = (uint64_t)&v38 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v46 = *(void *)(v14 - 8);
  uint64_t v47 = v14;
  MEMORY[0x1F4188790](v14);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v42 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for GroupLayoutBindingContext;
  sub_1BFF1B00C(a1, v42, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  sub_1BFF1B00C(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v40 = sub_1C151633C();
  uint64_t v39 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v41);
  uint64_t v60 = &type metadata for J6_V1;
  unint64_t v20 = sub_1C0185DA4();
  unint64_t v61 = v20;
  LOBYTE(v58) = v16;
  *((void *)&v58 + 1) = v17;
  unsigned __int8 v59 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v56 = sub_1C1520FAC();
  uint64_t v57 = v22;
  uint64_t v54 = 95;
  unint64_t v55 = 0xE100000000000000;
  uint64_t v52 = 45;
  unint64_t v53 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t)v45;
  unint64_t v27 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v28 = v39;
  uint64_t *v27 = v40;
  v27[1] = v28;
  sub_1BFC66384((uint64_t)&v58, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2389C(v42, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))v43);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v29, 0, 1, v47);
  uint64_t v30 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2389C(v44, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v30, 0, 1, v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  sub_1BFFFC630(v17, v18);
  uint64_t v60 = &type metadata for J6_V1;
  unint64_t v61 = v20;
  LOBYTE(v58) = v16;
  *((void *)&v58 + 1) = v17;
  unsigned __int8 v59 = v18;
  sub_1BFF1B00C(v48, v26, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  uint64_t v31 = v62;
  uint64_t v32 = sub_1C0E69930((uint64_t)&unk_1F1B67F80, 0, 0, 0, 0, 0, 0, 0);
  if (v31)
  {
    swift_release();
    sub_1BFF1F1C4(v26, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  }
  else
  {
    uint64_t v34 = v32;
    uint64_t v35 = type metadata accessor for J6_V1.Bound();
    uint64_t v36 = v38;
    v38[3] = v35;
    v36[4] = sub_1C01BC398(&qword_1EB85DD20, (void (*)(uint64_t))type metadata accessor for J6_V1.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v36);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v58, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2389C(v26, (uint64_t)boxed_opaque_existential_0 + *(int *)(v35 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v35 + 28)) = v34;
  }
  return result;
}

uint64_t sub_1C01B99F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + *(int *)(type metadata accessor for J6_V1.Bound() + 28));
  uint64_t v34 = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C0183444((void (*)(void *__return_ptr, _OWORD *))sub_1C01BC3E0, (uint64_t)v33, v8);
  *(void *)&long long v26 = 0;
  swift_bridgeObjectRelease();
  uint64_t v29 = v9;
  *(void *)&long long v36 = v9;
  sub_1C01BCA00(0, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context, MEMORY[0x1E4FBB320]);
  uint64_t v11 = v10;
  sub_1BFEB3578(&qword_1EB85DF28, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context);
  uint64_t v28 = v11;
  uint64_t v12 = sub_1C151F0BC();
  uint64_t v13 = *MEMORY[0x1E4FAB6D8];
  uint64_t v14 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v7, v13, v14);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAB8F0], v4);
  uint64_t v30 = v12;
  uint64_t v31 = 2;
  uint64_t v32 = v2;
  sub_1C01BC898(0, &qword_1EB85C838, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v15 = sub_1C1517BEC();
  swift_bridgeObjectRelease();
  uint64_t v27 = v15;
  uint64_t v16 = v26;
  uint64_t v17 = sub_1C1517BFC();
  if (v16)
  {
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v25[1] = v25;
    long long v26 = v36;
    uint64_t v18 = v37;
    uint64_t v19 = v38;
    uint64_t v35 = v39;
    *(void *)&long long v36 = v29;
    MEMORY[0x1F4188790](v17);
    unint64_t v20 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
    sub_1BFEB3578(&qword_1EB85DF20, &qword_1EB85DF18, (uint64_t)&type metadata for CoverIssueViewLayout.Context);
    sub_1BFEB3578(&qword_1EB85DF08, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes);
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C151951C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&long long v36 = v21;
    sub_1C01BCA00(0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes, v20);
    sub_1BFEB3578((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes);
    sub_1BFEB0FD4();
    uint64_t v22 = sub_1C151E91C();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)a1 = 0;
    *(_OWORD *)(a1 + 8) = v26;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v19;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    *(void *)(a1 + 40) = v22;
    *(void *)(a1 + 48) = v24;
  }
  return result;
}

uint64_t sub_1C01B9EA4@<X0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  long long v5 = a1[5];
  long long v6 = a1[7];
  long long v32 = a1[6];
  v33[0] = v6;
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)a1 + 121);
  long long v7 = a1[1];
  long long v8 = a1[3];
  long long v28 = a1[2];
  long long v29 = v8;
  long long v9 = a1[3];
  long long v10 = a1[5];
  long long v30 = a1[4];
  long long v31 = v10;
  long long v11 = a1[1];
  v27[0] = *a1;
  v27[1] = v11;
  long long v12 = a1[7];
  uint64_t v25[6] = v32;
  v26[0] = v12;
  *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)a1 + 121);
  void v25[2] = v28;
  void v25[3] = v9;
  v25[4] = v30;
  v25[5] = v5;
  uint64_t v13 = *a2;
  v25[0] = v27[0];
  v25[1] = v7;
  sub_1C01B3C58(v34);
  sub_1C0181C7C((uint64_t)v34, (uint64_t)v24);
  uint64_t v14 = (char *)a2 + *(int *)(type metadata accessor for J6_V1.Bound() + 24);
  uint64_t v15 = type metadata accessor for GroupLayoutContext();
  uint64_t v16 = *(void *)(*(void *)&v14[*(int *)(v15 + 40)] + 16);
  double v17 = *(double *)&v14[*(int *)(v15 + 32)];
  sub_1BFC66384(v16 + 16, (uint64_t)v22);
  sub_1BFC66384(v16 + 56, (uint64_t)v21);
  double v18 = v17 * *(double *)(v16 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(v22, inited + 16);
  sub_1BFC773DC(v21, inited + 56);
  *(double *)(inited + 96) = v18;
  swift_retain();
  sub_1C0187FB0((uint64_t)v27);
  FeedLayoutStylerFactory.styler()(v23);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  return CoverIssueViewLayout.Context.init(key:model:secondaryModel:styler:)(v13, v25, (uint64_t)v24, (uint64_t)v23, a3);
}

void sub_1C01BA038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v49 = a1;
  uint64_t v50 = a4;
  uint64_t v40 = a3;
  sub_1C01BD020(0, &qword_1EB85C848, (uint64_t (*)(void))sub_1C01BC40C, (uint64_t)&type metadata for J6_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v48 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v47 = (uint64_t *)((char *)&v39 - v7);
  uint64_t v52 = *(void *)(a2 + 16);
  if (v52)
  {
    uint64_t v8 = *(void *)(a2 + 32);
    uint64_t v51 = a2 + 32;
    unsigned int v46 = *MEMORY[0x1E4FABA08];
    uint64_t v44 = (void (**)(uint64_t *, uint64_t))(v6 + 8);
    uint64_t v45 = (void (**)(uint64_t *, void, uint64_t))(v6 + 104);
    unsigned int v43 = *MEMORY[0x1E4FABA28];
    unsigned int v42 = *MEMORY[0x1E4FAB638];
    uint64_t v39 = a2;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    long long v10 = &dword_1EB891000;
    long long v41 = xmmword_1C1529AE0;
    while (1)
    {
      uint64_t v25 = *(void *)(v51 + 8 * v9);
      uint64_t v26 = *(void *)(v25 + 16);
      uint64_t v27 = *(void *)(v8 + 16);
      uint64_t v57 = v25;
      if (v26 != v27) {
        break;
      }
      if (v26 && v25 != v8)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v28 = 32;
        while (1)
        {
          sub_1C01BC5C8(v25 + v28, (uint64_t)v61);
          sub_1C01BC5C8(v8 + v28, (uint64_t)v60);
          uint64_t v30 = v61[0];
          uint64_t v31 = v60[0];
          BOOL v32 = *(void *)(v61[0] + 16) == *(void *)(v60[0] + 16)
             && *(void *)(v61[0] + 24) == *(void *)(v60[0] + 24);
          if (!v32 && (sub_1C1520A9C() & 1) == 0) {
            break;
          }
          uint64_t v33 = *((void *)v10 + 62);
          uint64_t v34 = *(void *)(v30 + v33);
          uint64_t v35 = *(void *)(v30 + v33 + 8);
          long long v36 = (void *)(v31 + v33);
          if (v34 == *v36 && v35 == v36[1])
          {
            sub_1C01BC5C8((uint64_t)v61, (uint64_t)v59);
            sub_1C01BC5C8((uint64_t)v60, (uint64_t)v58);
          }
          else
          {
            char v38 = sub_1C1520A9C();
            sub_1C01BC5C8((uint64_t)v61, (uint64_t)v59);
            sub_1C01BC5C8((uint64_t)v60, (uint64_t)v58);
            if ((v38 & 1) == 0) {
              goto LABEL_33;
            }
          }
          if (v59[2] == v58[2] && v59[3] == v58[3])
          {
            sub_1C01BC710((uint64_t)v59);
            sub_1C01BC710((uint64_t)v58);
            sub_1C01BC710((uint64_t)v60);
            sub_1C01BC710((uint64_t)v61);
          }
          else
          {
            char v29 = sub_1C1520A9C();
            sub_1C01BC710((uint64_t)v59);
            sub_1C01BC710((uint64_t)v58);
            sub_1C01BC710((uint64_t)v60);
            sub_1C01BC710((uint64_t)v61);
            if ((v29 & 1) == 0) {
              goto LABEL_34;
            }
          }
          v28 += 392;
          if (!--v26)
          {
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
        }
        sub_1C01BC5C8((uint64_t)v61, (uint64_t)v59);
        sub_1C01BC5C8((uint64_t)v60, (uint64_t)v58);
LABEL_33:
        sub_1C01BC710((uint64_t)v59);
        sub_1C01BC710((uint64_t)v58);
        sub_1C01BC710((uint64_t)v60);
        sub_1C01BC710((uint64_t)v61);
LABEL_34:
        swift_bridgeObjectRelease();
        uint64_t v26 = *(void *)(v25 + 16);
LABEL_28:
        if (v26 != v40) {
          goto LABEL_5;
        }
        goto LABEL_4;
      }
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t v11 = v49;
      v61[0] = v49;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0x4024000000000000;
      uint64_t v13 = v47;
      *uint64_t v47 = v12;
      uint64_t v14 = *v45;
      uint64_t v56 = v9;
      uint64_t v15 = v48;
      v14(v13, v46, v48);
      uint64_t v16 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
      sub_1C01BC898(0, &qword_1EB85C808, MEMORY[0x1E4FAB6F0]);
      uint64_t v54 = v17;
      uint64_t v53 = sub_1C01BC634(&qword_1EB85C800, &qword_1EB85C808, v16);
      sub_1C151738C();
      unint64_t v55 = *v44;
      v55(v13, v15);
      v61[0] = v11;
      v14(v13, v43, v15);
      sub_1C01BC678();
      sub_1C01BD020(0, &qword_1EB85C7E0, (uint64_t (*)(void))sub_1C01BC40C, (uint64_t)&type metadata for J6_V1.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v19 = v18;
      uint64_t v20 = *(void *)(v18 - 8);
      unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v41;
      uint64_t v23 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v20 + 104))(v22 + v21, v42, v19);
      long long v10 = &dword_1EB891000;
      MEMORY[0x1F4188790](v23);
      sub_1C151731C();
      swift_bridgeObjectRelease();
      uint64_t v24 = v15;
      uint64_t v9 = v56;
      v55(v13, v24);
LABEL_5:
      swift_bridgeObjectRelease();
      if (++v9 == v52)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
}

void sub_1C01BA638(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v63 = a1;
  uint64_t v62 = sub_1C1517A9C();
  uint64_t v5 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  unint64_t v61 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01BD020(0, &qword_1EB85C848, (uint64_t (*)(void))sub_1C01BC40C, (uint64_t)&type metadata for J6_V1.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (void *)((char *)v48 - v10);
  uint64_t v12 = *(void *)(a2 + 16);
  if (v12)
  {
    uint64_t v60 = a3 + *(int *)(type metadata accessor for J6_V1.Bound() + 24);
    uint64_t v59 = *(int *)(type metadata accessor for GroupLayoutContext() + 40);
    uint64_t v13 = a2 + 32;
    unsigned int v58 = *MEMORY[0x1E4FAB7A8];
    unsigned int v57 = *MEMORY[0x1E4FAB7B0];
    unsigned int v56 = *MEMORY[0x1E4FAB9E8];
    unint64_t v55 = (void (**)(uint64_t *, void, uint64_t))(v9 + 104);
    unsigned int v54 = *MEMORY[0x1E4FAB5E8];
    unsigned int v53 = *MEMORY[0x1E4FAB620];
    uint64_t v67 = &v70;
    uint64_t v51 = (void (**)(uint64_t *, uint64_t))(v9 + 8);
    uint64_t v52 = (void (**)(char *, void, uint64_t))(v5 + 104);
    unsigned int v50 = *MEMORY[0x1E4FAB8F8];
    v48[1] = a2;
    swift_bridgeObjectRetain();
    long long v49 = xmmword_1C1529AE0;
    do
    {
      uint64_t v65 = v13;
      uint64_t v66 = v12;
      sub_1C01BC5C8(v13, (uint64_t)v69);
      uint64_t v68 = v63;
      uint64_t KeyPath = swift_getKeyPath();
      sub_1BFF35C38();
      uint64_t v15 = v14;
      uint64_t v16 = swift_allocBox();
      uint64_t v18 = v17;
      uint64_t v19 = (char *)v17 + *(int *)(v15 + 48);
      sub_1C151728C();
      uint64_t v20 = swift_allocBox();
      sub_1C151727C();
      *uint64_t v18 = v20;
      uint64_t v21 = sub_1C151786C();
      uint64_t v22 = *(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104);
      v22(v18, v58, v21);
      v22((uint64_t *)v19, v57, v21);
      *uint64_t v11 = v16;
      (*v55)(v11, v56, v8);
      sub_1C01BC678();
      sub_1C01BD020(0, &qword_1EB85C7E0, (uint64_t (*)(void))sub_1C01BC40C, (uint64_t)&type metadata for J6_V1.Layout, MEMORY[0x1E4FAB678]);
      uint64_t v24 = v23;
      uint64_t v25 = *(void *)(v23 - 8);
      unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v49;
      unint64_t v28 = v27 + v26;
      sub_1C01BD020(0, &qword_1EB85C7D0, (uint64_t (*)(void))sub_1C01BC40C, (uint64_t)&type metadata for J6_V1.Layout, MEMORY[0x1E4FAB618]);
      (*(void (**)(unint64_t, void, uint64_t))(*(void *)(v29 - 8) + 104))(v28, v54, v29);
      (*(void (**)(unint64_t, void, uint64_t))(v25 + 104))(v28, v53, v24);
      uint64_t v30 = *(void *)(*(void *)(v60 + v59) + 24);
      uint64_t v31 = v71;
      uint64_t v32 = v72;
      __swift_project_boxed_opaque_existential_1(v67, v71);
      uint64_t v33 = v8;
      uint64_t v34 = *(double (**)(uint64_t, uint64_t))(v32 + 16);
      swift_retain();
      double v35 = v34(v31, v32);
      if (qword_1EB85E720 != -1) {
        swift_once();
      }
      objc_msgSend((id)qword_1EB93C2A0, sel_size);
      double v38 = v35 * (v36 / v37);
      uint64_t v39 = v71;
      uint64_t v40 = v72;
      long long v41 = v67;
      __swift_project_boxed_opaque_existential_1(v67, v71);
      (*(void (**)(uint64_t, uint64_t))(v40 + 48))(v39, v40);
      uint64_t v42 = v71;
      uint64_t v43 = v72;
      __swift_project_boxed_opaque_existential_1(v41, v71);
      uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 56))(v42, v43);
      unint64_t v45 = MEMORY[0x1F4188790](v44).n128_u64[0];
      v48[-6] = v30;
      v48[-5] = v69;
      *(double *)&v48[-4] = v38;
      *(double *)&v48[-3] = v35;
      unint64_t v47 = v45;
      (*v52)(v61, v50, v62);
      sub_1C01BC774();
      swift_allocObject();
      sub_1C1517BEC();
      swift_release();
      unsigned int v46 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C01BC898(0, &qword_1EB85C7B0, MEMORY[0x1E4FAB4D0]);
      sub_1C01BC634(&qword_1EB85C7A8, &qword_1EB85C7B0, v46);
      unint64_t v47 = sub_1C01BC91C();
      sub_1C151735C();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      (*v51)(v11, v33);
      sub_1C01BC710((uint64_t)v69);
      uint64_t v13 = v65 + 392;
      uint64_t v12 = v66 - 1;
      uint64_t v8 = v33;
    }
    while (v66 != 1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C01BAD54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = swift_allocObject();
  sub_1C01BC5C8(a2, v10 + 16);
  memcpy((void *)(v10 + 408), a3, 0x180uLL);
  uint64_t v11 = a4 + *(int *)(type metadata accessor for J6_V1.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v13 = *(void *)(v11 + *(int *)(result + 28));
  BOOL v14 = __OFADD__(v13, a1);
  uint64_t v15 = v13 + a1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v10 + 792) = v15;
    *a5 = v10 | 0x5000000000000000;
  }
  return result;
}

uint64_t sub_1C01BAE10(uint64_t a1)
{
  return sub_1C02345C4(*(void *)(v1 + *(int *)(a1 + 28)));
}

uint64_t sub_1C01BAE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C01B94AC(a1, a2, a3);
}

uint64_t sub_1C01BAE38()
{
  return sub_1C12BC490();
}

unint64_t sub_1C01BAE48(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C01BAE78();
  unint64_t result = sub_1C01BAECC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C01BAE78()
{
  unint64_t result = qword_1EB85DE10;
  if (!qword_1EB85DE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DE10);
  }
  return result;
}

unint64_t sub_1C01BAECC()
{
  unint64_t result = qword_1EB85DE08;
  if (!qword_1EB85DE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DE08);
  }
  return result;
}

uint64_t type metadata accessor for J6_V1.Bound()
{
  uint64_t result = qword_1EB85DD28;
  if (!qword_1EB85DD28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C01BAF6C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    uint64_t v33 = a3;
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v17 = v16[5];
    uint64_t v18 = v13 + v17;
    uint64_t v19 = v14 + v17;
    uint64_t v20 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v16[6];
    uint64_t v22 = v13 + v21;
    uint64_t v23 = v14 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(v14 + v21);
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(unsigned char *)(v22 + 19) = *(unsigned char *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    unint64_t v24 = *(void *)(v14 + v21 + 24);
    if (v24 >= 2) {
      unint64_t v24 = swift_bridgeObjectRetain();
    }
    *(void *)(v22 + 24) = v24;
    uint64_t v32 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v25 = *(int *)(v32 + 36);
    __dst = (void *)(v22 + v25);
    unint64_t v26 = (const void *)(v23 + v25);
    uint64_t v27 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_1C01BB2C0();
      memcpy(__dst, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      uint64_t v30 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 16))(__dst, v26, v30);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
    }
    *(void *)(v22 + *(int *)(v32 + 40)) = *(void *)(v23 + *(int *)(v32 + 40));
    *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
    *(void *)(v13 + v16[8]) = *(void *)(v14 + v16[8]);
    *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
    *(void *)(v13 + v16[10]) = *(void *)(v14 + v16[10]);
    *(unsigned char *)(v13 + v16[11]) = *(unsigned char *)(v14 + v16[11]);
    *(void *)(v13 + v16[12]) = *(void *)(v14 + v16[12]);
    *(void *)(a1 + *(int *)(v33 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v33 + 28));
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void sub_1C01BB2C0()
{
  if (!qword_1EB890DB0)
  {
    type metadata accessor for FeedLayoutSolverOptions.PluginOptions(255);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890DB0);
    }
  }
}

uint64_t sub_1C01BB318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  uint64_t v25 = (const void *)(v21 + v24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C01BB2C0();
    memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  *(void *)(a1 + *(int *)(v32 + 28)) = *(void *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C01BB62C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  uint64_t v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  long long v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  double v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  void v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F1C4((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C01BB2C0();
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F1C4(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C01BB2C0();
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C01BBA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  long long v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  uint64_t v18 = (const void *)(v16 + v17);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C01BB2C0();
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)(v15 + *(int *)(v24 + 40)) = *(void *)(v16 + *(int *)(v24 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C01BBD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F1C4((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C01BB2C0();
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F1C4(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C01BB2C0();
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C01BC110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01BC124);
}

uint64_t sub_1C01BC124(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C01BC1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01BC1E8);
}

void *sub_1C01BC1E8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C01BC290()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C01BC340(uint64_t a1)
{
  uint64_t result = sub_1C01BC398(&qword_1EB85DD18, (void (*)(uint64_t))type metadata accessor for J6_V1.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C01BC398(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C01BC3E0@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C01B9EA4(a1, *(uint64_t **)(v2 + 16), a2);
}

void sub_1C01BC400(uint64_t a1)
{
  sub_1C01BA038(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1C01BC40C()
{
  unint64_t result = qword_1EB85DE00;
  if (!qword_1EB85DE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DE00);
  }
  return result;
}

unint64_t sub_1C01BC460()
{
  unint64_t result = qword_1EB85DDE8;
  if (!qword_1EB85DDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DDE8);
  }
  return result;
}

uint64_t sub_1C01BC4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C01BAD54(a1, a2, a3, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C01BC4BC()
{
  swift_release();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 152) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v1 = *(void **)(v0 + 168);
  if (v1)
  {

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 248) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 296) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 312);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C01BC5C8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C01BC624()
{
  return swift_deallocObject();
}

uint64_t sub_1C01BC634(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C01BC898(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C01BC678()
{
  if (!qword_1EB85E148)
  {
    sub_1C01BD020(255, &qword_1EB85C7E0, (uint64_t (*)(void))sub_1C01BC40C, (uint64_t)&type metadata for J6_V1.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85E148);
    }
  }
}

void sub_1C01BC708(uint64_t a1)
{
  sub_1C01BA638(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C01BC710(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C01BC764(uint64_t a1)
{
  return sub_1C0FB5830(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(double *)(v1 + 32), *(double *)(v1 + 40), *(double *)(v1 + 48));
}

void sub_1C01BC774()
{
  if (!qword_1EB85C830)
  {
    sub_1C01BC7F0();
    sub_1C01BC844();
    unint64_t v0 = sub_1C1517C1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C830);
    }
  }
}

unint64_t sub_1C01BC7F0()
{
  unint64_t result = qword_1EB85D488;
  if (!qword_1EB85D488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D488);
  }
  return result;
}

unint64_t sub_1C01BC844()
{
  unint64_t result = qword_1EB85D470;
  if (!qword_1EB85D470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D470);
  }
  return result;
}

void sub_1C01BC898(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for J6_V1.Layout;
    v8[1] = &type metadata for J6_V1.Layout.Attributes;
    v8[2] = sub_1C01BC40C();
    v8[3] = sub_1C01BC460();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

unint64_t sub_1C01BC91C()
{
  unint64_t result = qword_1EB85C810;
  if (!qword_1EB85C810)
  {
    sub_1C01BD020(255, &qword_1EB85C818, (uint64_t (*)(void))sub_1C01BC9AC, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FAB718]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C810);
  }
  return result;
}

unint64_t sub_1C01BC9AC()
{
  unint64_t result = qword_1EB85D468;
  if (!qword_1EB85D468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D468);
  }
  return result;
}

void sub_1C01BCA00(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

ValueMetadata *type metadata accessor for J6_V1.Layout.Attributes()
{
  return &type metadata for J6_V1.Layout.Attributes;
}

ValueMetadata *type metadata accessor for J6_V1.Layout()
{
  return &type metadata for J6_V1.Layout;
}

unint64_t sub_1C01BCA70()
{
  unint64_t result = qword_1EB85DDF8;
  if (!qword_1EB85DDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DDF8);
  }
  return result;
}

unint64_t sub_1C01BCAC8()
{
  unint64_t result = qword_1EB85DDF0;
  if (!qword_1EB85DDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DDF0);
  }
  return result;
}

unint64_t sub_1C01BCB20()
{
  unint64_t result = qword_1EB85DDD8;
  if (!qword_1EB85DDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DDD8);
  }
  return result;
}

unint64_t sub_1C01BCB78()
{
  unint64_t result = qword_1EB85DDE0;
  if (!qword_1EB85DDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DDE0);
  }
  return result;
}

uint64_t sub_1C01BCBCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C1606560)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C01BCCB4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C01BD020(0, &qword_1EB85E0F0, (uint64_t (*)(void))sub_1C01BCF78, (uint64_t)&type metadata for J6_V1.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01BCF78();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C01BC398(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1C01BCA00(0, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
  char v23 = 1;
  sub_1C01BD088(&qword_1EB85DF10, (void (*)(void))sub_1C01BCFCC);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  uint64_t v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1C01BCF78()
{
  unint64_t result = qword_1EB85DDC0;
  if (!qword_1EB85DDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DDC0);
  }
  return result;
}

unint64_t sub_1C01BCFCC()
{
  unint64_t result = qword_1EB85D480;
  if (!qword_1EB85D480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D480);
  }
  return result;
}

void sub_1C01BD020(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C01BD088(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C01BCA00(255, &qword_1EB85DF00, (uint64_t)&type metadata for CoverIssueViewLayout.Attributes, MEMORY[0x1E4FBB320]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C01BD118()
{
  unint64_t result = qword_1EB85D478;
  if (!qword_1EB85D478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D478);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for J6_V1.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01BD238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for J6_V1.Layout.Attributes.CodingKeys()
{
  return &type metadata for J6_V1.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C01BD274()
{
  unint64_t result = qword_1EA197D80;
  if (!qword_1EA197D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197D80);
  }
  return result;
}

unint64_t sub_1C01BD2CC()
{
  unint64_t result = qword_1EB85DDD0;
  if (!qword_1EB85DDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DDD0);
  }
  return result;
}

unint64_t sub_1C01BD324()
{
  unint64_t result = qword_1EB85DDC8;
  if (!qword_1EB85DDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85DDC8);
  }
  return result;
}

uint64_t FormatArticleThumbnail.focalFrame.getter()
{
  return *(void *)v0;
}

uint64_t FormatArticleThumbnail.accentColor.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleThumbnail.backgroundColor.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleThumbnail.primaryColor.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleThumbnail.textColor.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatArticleThumbnail.lowQualityImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatArticleThumbnail();
  return sub_1BFE0C93C(v1 + *(int *)(v3 + 36), a1, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
}

uint64_t FormatArticleThumbnail.defaultQualityImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatArticleThumbnail();
  return sub_1BFE0C93C(v1 + *(int *)(v3 + 40), a1, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
}

uint64_t FormatArticleThumbnail.mediumQualityImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatArticleThumbnail();
  return sub_1BFE0C93C(v1 + *(int *)(v3 + 44), a1, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
}

uint64_t FormatArticleThumbnail.highQualityImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatArticleThumbnail();
  return sub_1BFE0C93C(v1 + *(int *)(v3 + 48), a1, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
}

uint64_t FormatArticleThumbnail.ultraQualityImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatArticleThumbnail();
  return sub_1BFE0C93C(v1 + *(int *)(v3 + 52), a1, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
}

BOOL sub_1C01BD5E8()
{
  uint64_t v1 = type metadata accessor for FormatArticleThumbnail();
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v50 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v49 = (uint64_t)&v41 - v5;
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v48 = (uint64_t)&v41 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v41 - v8;
  sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v41 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v41 - v23;
  uint64_t v44 = (int *)v1;
  sub_1BFE0C93C(v0 + *(int *)(v1 + 36), (uint64_t)&v41 - v23, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  uint64_t v25 = type metadata accessor for FormatArticleThumbnailImage();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  uint64_t v45 = v25;
  unsigned int v46 = v27;
  uint64_t v47 = v26 + 48;
  LODWORD(v1) = ((uint64_t (*)(char *, uint64_t))v27)(v24, 1);
  sub_1BFE0C840((uint64_t)v24, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  sub_1C01C02F4(v0, (uint64_t)v9);
  if (v1 != 1)
  {
    sub_1C01C0358((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
    uint64_t v32 = v48;
    sub_1C01C02F4(v0, v48);
    goto LABEL_7;
  }
  uint64_t v42 = v13;
  uint64_t v43 = v16;
  size_t v28 = v44;
  sub_1BFE0C93C((uint64_t)&v9[v44[10]], (uint64_t)v22, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  sub_1C01C0358((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
  uint64_t v29 = v45;
  uint64_t v30 = v46;
  int v31 = v46(v22, 1, v45);
  sub_1BFE0C840((uint64_t)v22, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  uint64_t v32 = v48;
  sub_1C01C02F4(v0, v48);
  if (v31 != 1)
  {
LABEL_7:
    sub_1C01C0358(v32, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
    uint64_t v34 = v49;
    sub_1C01C02F4(v0, v49);
    goto LABEL_8;
  }
  sub_1BFE0C93C(v32 + v28[11], (uint64_t)v19, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  sub_1C01C0358(v32, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
  int v33 = v30(v19, 1, v29);
  sub_1BFE0C840((uint64_t)v19, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  uint64_t v34 = v49;
  sub_1C01C02F4(v0, v49);
  if (v33 != 1)
  {
LABEL_8:
    sub_1C01C0358(v34, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
    uint64_t v37 = v50;
    sub_1C01C02F4(v0, v50);
    goto LABEL_9;
  }
  uint64_t v35 = (uint64_t)v43;
  sub_1BFE0C93C(v34 + v28[12], (uint64_t)v43, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  sub_1C01C0358(v34, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
  int v36 = v30((char *)v35, 1, v29);
  sub_1BFE0C840(v35, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  uint64_t v37 = v50;
  sub_1C01C02F4(v0, v50);
  if (v36 != 1)
  {
LABEL_9:
    sub_1C01C0358(v37, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
    return 0;
  }
  uint64_t v38 = (uint64_t)v42;
  sub_1BFE0C93C(v37 + v28[13], (uint64_t)v42, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  sub_1C01C0358(v37, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
  BOOL v39 = v30((char *)v38, 1, v29) == 1;
  sub_1BFE0C840(v38, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  return v39;
}

unint64_t sub_1C01BDB64(char a1)
{
  unint64_t result = 0x6172466C61636F66;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F43746E65636361;
      break;
    case 2:
      unint64_t result = 0x756F72676B636162;
      break;
    case 3:
      unint64_t result = 0x437972616D697270;
      break;
    case 4:
      unint64_t result = 0x6F6C6F4374786574;
      break;
    case 5:
      unint64_t result = 0x696C617551776F6CLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C01BDCDC()
{
  return sub_1C01BDB64(*v0);
}

uint64_t sub_1C01BDCE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C01C2A80(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C01BDD0C(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1C01BDD18(uint64_t a1)
{
  unint64_t v2 = sub_1C01C01BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C01BDD54(uint64_t a1)
{
  unint64_t v2 = sub_1C01C01BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatArticleThumbnail.encode(to:)(void *a1)
{
  sub_1C01C0210(0, &qword_1EB8635C0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01C01BC();
  sub_1C1520F0C();
  v9[31] = 0;
  sub_1C15207BC();
  if (!v1)
  {
    v9[30] = 1;
    sub_1C152074C();
    v9[29] = 2;
    sub_1C152074C();
    v9[28] = 3;
    sub_1C152074C();
    v9[27] = 4;
    sub_1C152074C();
    type metadata accessor for FormatArticleThumbnail();
    v9[26] = 5;
    type metadata accessor for FormatArticleThumbnailImage();
    sub_1C01C0464(&qword_1EB862FD8, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    sub_1C152078C();
    v9[25] = 6;
    sub_1C152078C();
    v9[24] = 7;
    sub_1C152078C();
    v9[15] = 8;
    sub_1C152078C();
    v9[14] = 9;
    sub_1C152078C();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FormatArticleThumbnail.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v41 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v41 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v41 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v41 - v16;
  sub_1C01C0210(0, &qword_1EB863508, MEMORY[0x1E4FBBDC0]);
  uint64_t v49 = v18;
  uint64_t v46 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v53 = type metadata accessor for FormatArticleThumbnail();
  MEMORY[0x1F4188790](v53);
  uint64_t v52 = (uint64_t *)((char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = a1[3];
  uint64_t v50 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1C01C01BC();
  uint64_t v48 = v20;
  uint64_t v23 = v51;
  sub_1C1520EBC();
  if (v23) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  }
  uint64_t v51 = v17;
  uint64_t v44 = v11;
  uint64_t v45 = v14;
  uint64_t v42 = v5;
  uint64_t v43 = v8;
  uint64_t v25 = v46;
  uint64_t v24 = v47;
  char v63 = 0;
  uint64_t v26 = sub_1C152068C();
  uint64_t v27 = (int *)v53;
  size_t v28 = v52;
  *uint64_t v52 = v26;
  *((unsigned char *)v28 + 8) = v29 & 1;
  char v62 = 1;
  void v28[2] = sub_1C152060C();
  void v28[3] = v30;
  char v61 = 2;
  v28[4] = sub_1C152060C();
  v28[5] = v31;
  char v60 = 3;
  v28[6] = sub_1C152060C();
  v28[7] = v32;
  char v59 = 4;
  void v28[8] = sub_1C152060C();
  v28[9] = v33;
  type metadata accessor for FormatArticleThumbnailImage();
  char v58 = 5;
  uint64_t v34 = sub_1C01C0464(&qword_1EB862FE0, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  uint64_t v35 = (uint64_t)v51;
  uint64_t v41 = v34;
  sub_1C152065C();
  sub_1C01C0274(v35, (uint64_t)v28 + v27[9]);
  char v57 = 6;
  uint64_t v36 = (uint64_t)v45;
  sub_1C152065C();
  sub_1C01C0274(v36, (uint64_t)v28 + v27[10]);
  char v56 = 7;
  uint64_t v37 = (uint64_t)v44;
  sub_1C152065C();
  sub_1C01C0274(v37, (uint64_t)v28 + v27[11]);
  char v55 = 8;
  uint64_t v38 = (uint64_t)v43;
  sub_1C152065C();
  sub_1C01C0274(v38, (uint64_t)v28 + v27[12]);
  char v54 = 9;
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v48, v49);
  uint64_t v39 = (uint64_t)v52;
  sub_1C01C0274((uint64_t)v42, (uint64_t)v52 + *(int *)(v53 + 52));
  sub_1C01C02F4(v39, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  return sub_1C01C0358(v39, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnail);
}

uint64_t sub_1C01BE8C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatArticleThumbnail.init(from:)(a1, a2);
}

uint64_t sub_1C01BE8E0(void *a1)
{
  return FormatArticleThumbnail.encode(to:)(a1);
}

BOOL _s8NewsFeed22FormatArticleThumbnailV2eeoiySbAC_ACtFZ_0(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatArticleThumbnailImage();
  uint64_t v213 = *(void *)(v4 - 8);
  uint64_t v214 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v207 = (uint64_t)&v187 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v187 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v209 = (uint64_t)&v187 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v210 = (uint64_t)&v187 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v212 = (char *)&v187 - v14;
  sub_1C01C2F0C();
  uint64_t v16 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v208 = (uint64_t)&v187 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v187 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v211 = (uint64_t)&v187 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v187 - v24;
  MEMORY[0x1F4188790](v26);
  v215 = (char *)&v187 - v27;
  sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  MEMORY[0x1F4188790](v28 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v187 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v187 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (void (*)(uint64_t))((char *)&v187 - v36);
  MEMORY[0x1F4188790](v38);
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v187 - v40;
  MEMORY[0x1F4188790](v42);
  MEMORY[0x1F4188790](v43);
  MEMORY[0x1F4188790](v44);
  MEMORY[0x1F4188790](v45);
  MEMORY[0x1F4188790](v46);
  MEMORY[0x1F4188790]((char *)&v187 - v47);
  MEMORY[0x1F4188790](v48);
  MEMORY[0x1F4188790](v49);
  MEMORY[0x1F4188790](v50);
  char v62 = (char *)&v187 - v58;
  char v63 = *(unsigned char *)(a2 + 8);
  if (a1[8])
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v63 = 1;
    }
    if (v63) {
      return 0;
    }
  }
  uint64_t v206 = v52;
  uint64_t v64 = *((void *)a1 + 3);
  uint64_t v65 = *(void *)(a2 + 24);
  if (!v64)
  {
    uint64_t v204 = v51;
    uint64_t v205 = v53;
    if (v65) {
      return 0;
    }
    goto LABEL_14;
  }
  if (!v65) {
    return 0;
  }
  uint64_t v204 = v51;
  uint64_t v205 = v53;
  if (*((void *)a1 + 2) == *(void *)(a2 + 16) && v64 == v65) {
    goto LABEL_14;
  }
  uint64_t v202 = v54;
  uint64_t v203 = v25;
  uint64_t v198 = v41;
  uint64_t v199 = (char *)v16;
  uint64_t v200 = v8;
  uint64_t v201 = (uint64_t (*)())v37;
  uint64_t v196 = a1;
  v197 = v20;
  uint64_t v66 = v31;
  uint64_t v67 = a2;
  uint64_t v68 = v34;
  uint64_t v69 = v59;
  uint64_t v70 = v60;
  uint64_t v71 = v55;
  uint64_t v72 = v61;
  uint64_t v73 = v56;
  uint64_t v74 = v57;
  uint64_t v75 = (char *)&v187 - v58;
  char v76 = sub_1C1520A9C();
  char v62 = v75;
  uint64_t v57 = v74;
  uint64_t v56 = v73;
  uint64_t v54 = v202;
  uint64_t v25 = v203;
  uint64_t v61 = v72;
  uint64_t v55 = v71;
  uint64_t v60 = v70;
  uint64_t v59 = v69;
  uint64_t v34 = v68;
  a2 = v67;
  uint64_t v31 = v66;
  a1 = v196;
  uint64_t v20 = v197;
  uint64_t v16 = (uint64_t)v199;
  uint64_t v8 = v200;
  uint64_t v37 = (void (*)(uint64_t))v201;
  uint64_t v41 = v198;
  char v77 = v76;
  BOOL result = 0;
  if (v77)
  {
LABEL_14:
    uint64_t v79 = *((void *)a1 + 5);
    uint64_t v80 = *(void *)(a2 + 40);
    if (v79)
    {
      if (!v80) {
        return 0;
      }
      if (*((void *)a1 + 4) != *(void *)(a2 + 32) || v79 != v80)
      {
        uint64_t v202 = v54;
        uint64_t v203 = v25;
        uint64_t v198 = v41;
        uint64_t v199 = (char *)v16;
        uint64_t v200 = v8;
        uint64_t v201 = (uint64_t (*)())v37;
        uint64_t v196 = a1;
        v197 = v20;
        long long v81 = v31;
        uint64_t v82 = a2;
        uint64_t v83 = v34;
        uint64_t v84 = v59;
        uint64_t v85 = v60;
        uint64_t v86 = v55;
        uint64_t v87 = v61;
        uint64_t v88 = v56;
        uint64_t v89 = v57;
        uint64_t v90 = v62;
        char v91 = sub_1C1520A9C();
        char v62 = v90;
        uint64_t v57 = v89;
        uint64_t v56 = v88;
        uint64_t v54 = v202;
        uint64_t v25 = v203;
        uint64_t v61 = v87;
        uint64_t v55 = v86;
        uint64_t v60 = v85;
        uint64_t v59 = v84;
        uint64_t v34 = v83;
        a2 = v82;
        uint64_t v31 = v81;
        a1 = v196;
        uint64_t v20 = v197;
        uint64_t v16 = (uint64_t)v199;
        uint64_t v8 = v200;
        uint64_t v37 = (void (*)(uint64_t))v201;
        uint64_t v41 = v198;
        char v92 = v91;
        BOOL result = 0;
        if ((v92 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v80)
    {
      return 0;
    }
    uint64_t v93 = *((void *)a1 + 7);
    uint64_t v94 = *(void *)(a2 + 56);
    if (v93)
    {
      if (!v94) {
        return 0;
      }
      if (*((void *)a1 + 6) != *(void *)(a2 + 48) || v93 != v94)
      {
        uint64_t v202 = v54;
        uint64_t v203 = v25;
        uint64_t v198 = v41;
        uint64_t v199 = (char *)v16;
        uint64_t v200 = v8;
        uint64_t v201 = (uint64_t (*)())v37;
        uint64_t v196 = a1;
        v197 = v20;
        long long v95 = v31;
        uint64_t v96 = a2;
        char v97 = v34;
        uint64_t v98 = v59;
        uint64_t v99 = v60;
        uint64_t v100 = v55;
        uint64_t v101 = v61;
        uint64_t v102 = v56;
        uint64_t v103 = v57;
        char v104 = v62;
        char v105 = sub_1C1520A9C();
        char v62 = v104;
        uint64_t v57 = v103;
        uint64_t v56 = v102;
        uint64_t v54 = v202;
        uint64_t v25 = v203;
        uint64_t v61 = v101;
        uint64_t v55 = v100;
        uint64_t v60 = v99;
        uint64_t v59 = v98;
        uint64_t v34 = v97;
        a2 = v96;
        uint64_t v31 = v95;
        a1 = v196;
        uint64_t v20 = v197;
        uint64_t v16 = (uint64_t)v199;
        uint64_t v8 = v200;
        uint64_t v37 = (void (*)(uint64_t))v201;
        uint64_t v41 = v198;
        char v106 = v105;
        BOOL result = 0;
        if ((v106 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v94)
    {
      return 0;
    }
    uint64_t v107 = *((void *)a1 + 9);
    uint64_t v108 = *(void *)(a2 + 72);
    if (v107)
    {
      if (!v108) {
        return 0;
      }
      if (*((void *)a1 + 8) != *(void *)(a2 + 64) || v107 != v108)
      {
        uint64_t v202 = v54;
        uint64_t v203 = v25;
        uint64_t v198 = v41;
        uint64_t v199 = (char *)v16;
        uint64_t v200 = v8;
        uint64_t v201 = (uint64_t (*)())v37;
        uint64_t v196 = a1;
        v197 = v20;
        uint64_t v109 = v31;
        uint64_t v110 = a2;
        char v111 = v34;
        uint64_t v112 = v59;
        uint64_t v113 = v60;
        uint64_t v114 = v55;
        uint64_t v115 = v61;
        uint64_t v116 = v56;
        uint64_t v117 = v57;
        unint64_t v118 = v62;
        char v119 = sub_1C1520A9C();
        char v62 = v118;
        uint64_t v57 = v117;
        uint64_t v56 = v116;
        uint64_t v54 = v202;
        uint64_t v25 = v203;
        uint64_t v61 = v115;
        uint64_t v55 = v114;
        uint64_t v60 = v113;
        uint64_t v59 = v112;
        uint64_t v34 = v111;
        a2 = v110;
        uint64_t v31 = v109;
        a1 = v196;
        uint64_t v20 = v197;
        uint64_t v16 = (uint64_t)v199;
        uint64_t v8 = v200;
        uint64_t v37 = (void (*)(uint64_t))v201;
        uint64_t v41 = v198;
        char v120 = v119;
        BOOL result = 0;
        if ((v120 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v108)
    {
      return 0;
    }
    unint64_t v195 = v62;
    uint64_t v194 = v57;
    uint64_t v191 = v56;
    uint64_t v202 = v54;
    uint64_t v203 = v25;
    uint64_t v192 = v55;
    uint64_t v190 = v61;
    uint64_t v189 = v60;
    uint64_t v188 = v59;
    uint64_t v121 = type metadata accessor for FormatArticleThumbnail();
    uint64_t v122 = (uint64_t)&a1[*(int *)(v121 + 36)];
    uint64_t v201 = type metadata accessor for FormatArticleThumbnailImage;
    sub_1BFE0C93C(v122, (uint64_t)v195, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    uint64_t v193 = (int *)v121;
    uint64_t v123 = a2 + *(int *)(v121 + 36);
    uint64_t v124 = (void (*)(uint64_t))v201;
    sub_1BFE0C93C(v123, v206, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))v201);
    uint64_t v199 = &v215[*(int *)(v16 + 48)];
    sub_1BFE0C93C((uint64_t)v195, (uint64_t)v215, (unint64_t *)&qword_1EB88C798, v124);
    sub_1BFE0C93C(v206, (uint64_t)v199, (unint64_t *)&qword_1EB88C798, v124);
    uint64_t v196 = *(unsigned char **)(v213 + 48);
    uint64_t v125 = v213 + 48;
    unsigned int v126 = ((uint64_t (*)(char *, uint64_t, uint64_t))v196)(v215, 1, v214);
    uint64_t v213 = v125;
    if (v126 == 1)
    {
      uint64_t v200 = v8;
      uint64_t v201 = (uint64_t (*)())v37;
      sub_1BFE0C840(v206, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      sub_1BFE0C840((uint64_t)v195, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v196)(v199, 1, v214) == 1)
      {
        sub_1BFE0C840((uint64_t)v215, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        goto LABEL_38;
      }
    }
    else
    {
      sub_1BFE0C93C((uint64_t)v215, v205, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v196)(v199, 1, v214) != 1)
      {
        uint64_t v137 = (uint64_t)v212;
        sub_1C01C2F8C((uint64_t)v199, (uint64_t)v212, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
        if ((MEMORY[0x1C18BDA40](v205, v137) & 1) == 0)
        {
          sub_1C01C0358(v137, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
          sub_1BFE0C840(v206, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          sub_1BFE0C840((uint64_t)v195, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          sub_1C01C0358(v205, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
          uint64_t v142 = (uint64_t)v215;
          goto LABEL_84;
        }
        uint64_t v200 = v8;
        uint64_t v201 = (uint64_t (*)())v37;
        uint64_t v138 = *(int *)(v214 + 20);
        uint64_t v139 = v205;
        v197 = *(char **)(v205 + v138);
        uint64_t v199 = *(char **)(v137 + v138);
        int64_t v187 = type metadata accessor for FormatArticleThumbnailImage;
        sub_1C01C0358(v137, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BFE0C840(v206, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        sub_1BFE0C840((uint64_t)v195, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        sub_1C01C0358(v139, (uint64_t (*)(void))v187);
        sub_1BFE0C840((uint64_t)v215, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        if (v197 != v199) {
          return 0;
        }
LABEL_38:
        uint64_t v198 = v41;
        uint64_t v127 = v193;
        uint64_t v128 = v194;
        sub_1BFE0C93C((uint64_t)&a1[v193[10]], v194, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        uint64_t v129 = v204;
        sub_1BFE0C93C(a2 + v127[10], v204, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        uint64_t v199 = (char *)v16;
        uint64_t v130 = *(int *)(v16 + 48);
        uint64_t v131 = (uint64_t)v203;
        uint64_t v132 = (uint64_t)&v203[v130];
        sub_1BFE0C93C(v128, (uint64_t)v203, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        v215 = (char *)v132;
        uint64_t v133 = (unsigned int (*)(char *, uint64_t, uint64_t))v196;
        sub_1BFE0C93C(v129, v132, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
        uint64_t v134 = v214;
        if (v133((char *)v131, 1, v214) == 1)
        {
          sub_1BFE0C840(v129, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          uint64_t v135 = v214;
          sub_1BFE0C840(v194, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v196)(v215, 1, v135) == 1)
          {
            sub_1BFE0C840((uint64_t)v203, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            uint64_t v136 = v193;
            goto LABEL_53;
          }
        }
        else
        {
          uint64_t v140 = v131;
          uint64_t v141 = v191;
          sub_1BFE0C93C(v140, v191, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          if (v133(v215, 1, v134) != 1)
          {
            uint64_t v143 = v210;
            sub_1C01C2F8C((uint64_t)v215, v210, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
            if ((MEMORY[0x1C18BDA40](v141, v143) & 1) == 0)
            {
              sub_1C01C0358(v143, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
              sub_1BFE0C840(v129, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              sub_1BFE0C840(v194, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              sub_1C01C0358(v141, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
              uint64_t v142 = (uint64_t)v203;
              goto LABEL_84;
            }
            uint64_t v144 = *(int *)(v134 + 20);
            v215 = *(char **)(v141 + v144);
            uint64_t v212 = *(char **)(v143 + v144);
            sub_1C01C0358(v143, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
            sub_1BFE0C840(v129, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            sub_1BFE0C840(v194, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            sub_1C01C0358(v141, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
            sub_1BFE0C840((uint64_t)v203, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            uint64_t v136 = v193;
            if (v215 != v212) {
              return 0;
            }
LABEL_53:
            uint64_t v145 = v192;
            sub_1BFE0C93C((uint64_t)&a1[v136[11]], v192, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            uint64_t v146 = v202;
            sub_1BFE0C93C(a2 + v136[11], v202, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            uint64_t v147 = v211;
            uint64_t v148 = v211 + *((int *)v199 + 12);
            sub_1BFE0C93C(v145, v211, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            v215 = (char *)v148;
            sub_1BFE0C93C(v146, v148, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
            uint64_t v149 = v214;
            uint64_t v150 = (unsigned int (*)(char *, uint64_t, uint64_t))v196;
            if (((unsigned int (*)(uint64_t, uint64_t))v196)(v147, 1) == 1)
            {
              sub_1BFE0C840(v202, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              uint64_t v147 = v211;
              sub_1BFE0C840(v192, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              if (((unsigned int (*)(char *, uint64_t, uint64_t))v196)(v215, 1, v149) == 1)
              {
                sub_1BFE0C840(v147, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
LABEL_56:
                unint64_t v151 = v193;
                uint64_t v152 = (uint64_t)v198;
                sub_1BFE0C93C((uint64_t)&a1[v193[12]], (uint64_t)v198, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                uint64_t v153 = a2 + v151[12];
                uint64_t v154 = v189;
                sub_1BFE0C93C(v153, v189, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                uint64_t v155 = (uint64_t)&v20[*((int *)v199 + 12)];
                sub_1BFE0C93C(v152, (uint64_t)v20, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                v215 = (char *)v155;
                sub_1BFE0C93C(v154, v155, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                uint64_t v156 = v214;
                uint64_t v157 = (unsigned int (*)(char *, uint64_t, uint64_t))v196;
                if (((unsigned int (*)(char *, uint64_t, uint64_t))v196)(v20, 1, v214) == 1)
                {
                  sub_1BFE0C840(v154, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                  sub_1BFE0C840((uint64_t)v198, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                  if (((unsigned int (*)(char *, uint64_t, uint64_t))v196)(v215, 1, v156) == 1)
                  {
                    sub_1BFE0C840((uint64_t)v20, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
LABEL_59:
                    uint64_t v158 = v193;
                    sub_1BFE0C93C((uint64_t)&a1[v193[13]], (uint64_t)v34, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                    sub_1BFE0C93C(a2 + v158[13], (uint64_t)v31, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                    uint64_t v159 = (uint64_t)v31;
                    uint64_t v160 = v208;
                    uint64_t v161 = v208 + *((int *)v199 + 12);
                    sub_1BFE0C93C((uint64_t)v34, v208, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                    uint64_t v162 = v159;
                    sub_1BFE0C93C(v159, v161, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                    uint64_t v163 = v214;
                    uint64_t v164 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v196;
                    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v196)(v160, 1, v214) == 1)
                    {
                      sub_1BFE0C840(v159, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                      sub_1BFE0C840((uint64_t)v34, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                      if (v164(v161, 1, v163) == 1)
                      {
                        sub_1BFE0C840(v160, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                        return 1;
                      }
                      goto LABEL_78;
                    }
                    uint64_t v179 = v188;
                    sub_1BFE0C93C(v160, v188, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                    if (v164(v161, 1, v163) == 1)
                    {
                      sub_1BFE0C840(v159, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                      sub_1BFE0C840((uint64_t)v34, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                      sub_1C01C0358(v179, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
LABEL_78:
                      sub_1C01C0358(v160, (uint64_t (*)(void))sub_1C01C2F0C);
                      return 0;
                    }
                    uint64_t v180 = (uint64_t)v34;
                    uint64_t v181 = v161;
                    uint64_t v182 = v207;
                    sub_1C01C2F8C(v181, v207, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                    if (MEMORY[0x1C18BDA40](v179, v182))
                    {
                      uint64_t v183 = *(int *)(v214 + 20);
                      uint64_t v184 = v188;
                      uint64_t v185 = *(void *)(v188 + v183);
                      uint64_t v186 = *(void *)(v207 + v183);
                      sub_1C01C0358(v207, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                      sub_1BFE0C840(v162, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                      sub_1BFE0C840(v180, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                      sub_1C01C0358(v184, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                      sub_1BFE0C840(v208, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                      return v185 == v186;
                    }
                    sub_1C01C0358(v207, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                    sub_1BFE0C840(v159, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                    sub_1BFE0C840((uint64_t)v34, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                    sub_1C01C0358(v188, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                    uint64_t v142 = v208;
LABEL_84:
                    sub_1BFE0C840(v142, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                    return 0;
                  }
                }
                else
                {
                  double v173 = (void (*)(uint64_t))v201;
                  sub_1BFE0C93C((uint64_t)v20, (uint64_t)v201, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                  uint64_t v174 = (uint64_t)v215;
                  if (v157(v215, 1, v156) != 1)
                  {
                    v197 = v20;
                    uint64_t v175 = (uint64_t)v200;
                    sub_1C01C2F8C(v174, (uint64_t)v200, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                    if ((MEMORY[0x1C18BDA40](v173, v175) & 1) == 0)
                    {
                      sub_1C01C0358(v175, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                      sub_1BFE0C840(v189, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                      sub_1BFE0C840((uint64_t)v198, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                      sub_1C01C0358((uint64_t)v173, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                      uint64_t v142 = (uint64_t)v197;
                      goto LABEL_84;
                    }
                    uint64_t v176 = *(int *)(v214 + 20);
                    uint64_t v177 = *(void *)((char *)v173 + v176);
                    uint64_t v178 = *(void *)(v175 + v176);
                    sub_1C01C0358(v175, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                    sub_1BFE0C840(v189, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                    sub_1BFE0C840((uint64_t)v198, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                    sub_1C01C0358((uint64_t)v173, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                    sub_1BFE0C840((uint64_t)v197, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                    if (v177 != v178) {
                      return 0;
                    }
                    goto LABEL_59;
                  }
                  sub_1BFE0C840(v189, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                  sub_1BFE0C840((uint64_t)v198, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                  sub_1C01C0358((uint64_t)v173, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                }
                sub_1C01C0358((uint64_t)v20, (uint64_t (*)(void))sub_1C01C2F0C);
                return 0;
              }
            }
            else
            {
              uint64_t v165 = v190;
              sub_1BFE0C93C(v147, v190, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              if (v150(v215, 1, v149) != 1)
              {
                uint64_t v166 = v209;
                sub_1C01C2F8C((uint64_t)v215, v209, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                if ((MEMORY[0x1C18BDA40](v165, v166) & 1) == 0)
                {
                  sub_1C01C0358(v166, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                  sub_1BFE0C840(v202, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                  sub_1BFE0C840(v192, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                  sub_1C01C0358(v165, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                  uint64_t v142 = v211;
                  goto LABEL_84;
                }
                uint64_t v167 = *(int *)(v214 + 20);
                v215 = v31;
                uint64_t v168 = *(void *)(v165 + v167);
                double v169 = v20;
                uint64_t v170 = a1;
                uint64_t v171 = *(void *)(v166 + v167);
                sub_1C01C0358(v166, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                sub_1BFE0C840(v202, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                sub_1BFE0C840(v192, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                sub_1C01C0358(v165, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
                sub_1BFE0C840(v211, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
                BOOL v172 = v168 == v171;
                a1 = v170;
                uint64_t v20 = v169;
                uint64_t v31 = v215;
                if (!v172) {
                  return 0;
                }
                goto LABEL_56;
              }
              sub_1BFE0C840(v202, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              sub_1BFE0C840(v192, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
              sub_1C01C0358(v165, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
            }
            sub_1C01C0358(v147, (uint64_t (*)(void))sub_1C01C2F0C);
            return 0;
          }
          sub_1BFE0C840(v129, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          sub_1BFE0C840(v194, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
          sub_1C01C0358(v141, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
        }
        sub_1C01C0358((uint64_t)v203, (uint64_t (*)(void))sub_1C01C2F0C);
        return 0;
      }
      sub_1BFE0C840(v206, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      sub_1BFE0C840((uint64_t)v195, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      sub_1C01C0358(v205, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
    }
    sub_1C01C0358((uint64_t)v215, (uint64_t (*)(void))sub_1C01C2F0C);
    return 0;
  }
  return result;
}

unint64_t sub_1C01C01BC()
{
  unint64_t result = qword_1EB862F08;
  if (!qword_1EB862F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862F08);
  }
  return result;
}

void sub_1C01C0210(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C01C01BC();
    unint64_t v7 = a3(a1, &type metadata for FormatArticleThumbnail.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C01C0274(uint64_t a1, uint64_t a2)
{
  sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01C02F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatArticleThumbnail();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01C0358(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C01C03B8(void *a1)
{
  a1[1] = sub_1C01C0464(qword_1EB88A618, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  a1[2] = sub_1C01C0464(&qword_1EB867000, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  uint64_t result = sub_1C01C0464(&qword_1EA197D88, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnail);
  a1[3] = result;
  return result;
}

uint64_t sub_1C01C0464(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for FormatArticleThumbnail(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v8;
    uint64_t v9 = a2[9];
    uint64_t v10 = a3[9];
    __dst = (char *)(a1 + v10);
    uint64_t v11 = (char *)a2 + v10;
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v9;
    uint64_t v12 = type metadata accessor for FormatArticleThumbnailImage();
    uint64_t v39 = *(void *)(v12 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v11, 1, v12))
    {
      sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
      uint64_t v15 = v39;
    }
    else
    {
      uint64_t v17 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v11, v17);
      *(void *)&__dst[*(int *)(v12 + 20)] = *(void *)&v11[*(int *)(v12 + 20)];
      uint64_t v15 = v39;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v18 = a3[10];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (v13((char *)a2 + v18, 1, v12))
    {
      sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v19, v20, v22);
      *(void *)&v19[*(int *)(v12 + 20)] = *(void *)&v20[*(int *)(v12 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v12);
    }
    uint64_t v23 = a3[11];
    uint64_t v24 = (char *)v4 + v23;
    uint64_t v25 = (char *)a2 + v23;
    if (v13((char *)a2 + v23, 1, v12))
    {
      sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      uint64_t v27 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v24, v25, v27);
      *(void *)&v24[*(int *)(v12 + 20)] = *(void *)&v25[*(int *)(v12 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v12);
    }
    uint64_t v28 = a3[12];
    uint64_t v29 = (char *)v4 + v28;
    uint64_t v30 = (char *)a2 + v28;
    if (v13((char *)a2 + v28, 1, v12))
    {
      sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      uint64_t v32 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v29, v30, v32);
      *(void *)&v29[*(int *)(v12 + 20)] = *(void *)&v30[*(int *)(v12 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v29, 0, 1, v12);
    }
    uint64_t v33 = a3[13];
    uint64_t v34 = (char *)v4 + v33;
    uint64_t v35 = (char *)a2 + v33;
    if (v13(v35, 1, v12))
    {
      sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      uint64_t v37 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v34, v35, v37);
      *(void *)&v34[*(int *)(v12 + 20)] = *(void *)&v35[*(int *)(v12 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v34, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t destroy for FormatArticleThumbnail(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[9];
  uint64_t v5 = type metadata accessor for FormatArticleThumbnailImage();
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    uint64_t v7 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
  }
  uint64_t v8 = a1 + a2[10];
  if (!v6(v8, 1, v5))
  {
    uint64_t v9 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + a2[11];
  if (!v6(v10, 1, v5))
  {
    uint64_t v11 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + a2[12];
  if (!v6(v12, 1, v5))
  {
    uint64_t v13 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  uint64_t v14 = a1 + a2[13];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v14, 1, v5);
  if (!result)
  {
    uint64_t v16 = sub_1C1515FDC();
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);
    return v17(v14, v16);
  }
  return result;
}

uint64_t initializeWithCopy for FormatArticleThumbnail(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  uint64_t v9 = a3[9];
  __dst = (char *)(a1 + v9);
  uint64_t v10 = (char *)(a2 + v9);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  uint64_t v11 = type metadata accessor for FormatArticleThumbnailImage();
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v10, 1, v11))
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(__dst, v10, *(void *)(*(void *)(v13 - 8) + 64));
    uint64_t v14 = v37;
  }
  else
  {
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(__dst, v10, v15);
    *(void *)&__dst[*(int *)(v11 + 20)] = *(void *)&v10[*(int *)(v11 + 20)];
    uint64_t v14 = v37;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v16 = a3[10];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  if (v12((char *)(a2 + v16), 1, v11))
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v17, v18, v20);
    *(void *)&v17[*(int *)(v11 + 20)] = *(void *)&v18[*(int *)(v11 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v11);
  }
  uint64_t v21 = a3[11];
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  if (v12((char *)(a2 + v21), 1, v11))
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v22, v23, v25);
    *(void *)&v22[*(int *)(v11 + 20)] = *(void *)&v23[*(int *)(v11 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v11);
  }
  uint64_t v26 = a3[12];
  uint64_t v27 = (char *)(a1 + v26);
  uint64_t v28 = (char *)(a2 + v26);
  if (v12((char *)(a2 + v26), 1, v11))
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v27, v28, v30);
    *(void *)&v27[*(int *)(v11 + 20)] = *(void *)&v28[*(int *)(v11 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v11);
  }
  uint64_t v31 = a3[13];
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)(a2 + v31);
  if (v12(v33, 1, v11))
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    uint64_t v35 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v32, v33, v35);
    *(void *)&v32[*(int *)(v11 + 20)] = *(void *)&v33[*(int *)(v11 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v32, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for FormatArticleThumbnail(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[9];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for FormatArticleThumbnailImage();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      uint64_t v15 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
      *(void *)&v8[*(int *)(v10 + 20)] = *(void *)&v9[*(int *)(v10 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_1C01C0358((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
LABEL_6:
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v8, v9, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v46 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v8, v9, v46);
  *(void *)&v8[*(int *)(v10 + 20)] = *(void *)&v9[*(int *)(v10 + 20)];
LABEL_7:
  uint64_t v17 = a3[10];
  uint64_t v18 = (char *)(a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  int v20 = v12((char *)(a1 + v17), 1, v10);
  int v21 = v12(v19, 1, v10);
  if (v20)
  {
    if (!v21)
    {
      uint64_t v22 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
      *(void *)&v18[*(int *)(v10 + 20)] = *(void *)&v19[*(int *)(v10 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    sub_1C01C0358((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
LABEL_12:
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v47 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 24))(v18, v19, v47);
  *(void *)&v18[*(int *)(v10 + 20)] = *(void *)&v19[*(int *)(v10 + 20)];
LABEL_13:
  uint64_t v24 = a3[11];
  uint64_t v25 = (char *)(a1 + v24);
  uint64_t v26 = (char *)a2 + v24;
  int v27 = v12((char *)(a1 + v24), 1, v10);
  int v28 = v12(v26, 1, v10);
  if (v27)
  {
    if (!v28)
    {
      uint64_t v29 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v25, v26, v29);
      *(void *)&v25[*(int *)(v10 + 20)] = *(void *)&v26[*(int *)(v10 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v25, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    sub_1C01C0358((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
LABEL_18:
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v25, v26, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v48 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 24))(v25, v26, v48);
  *(void *)&v25[*(int *)(v10 + 20)] = *(void *)&v26[*(int *)(v10 + 20)];
LABEL_19:
  uint64_t v31 = a3[12];
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)a2 + v31;
  int v34 = v12((char *)(a1 + v31), 1, v10);
  int v35 = v12(v33, 1, v10);
  if (v34)
  {
    if (!v35)
    {
      uint64_t v36 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
      *(void *)&v32[*(int *)(v10 + 20)] = *(void *)&v33[*(int *)(v10 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v35)
  {
    sub_1C01C0358((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
LABEL_24:
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_25;
  }
  uint64_t v49 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 24))(v32, v33, v49);
  *(void *)&v32[*(int *)(v10 + 20)] = *(void *)&v33[*(int *)(v10 + 20)];
LABEL_25:
  uint64_t v38 = a3[13];
  uint64_t v39 = (char *)(a1 + v38);
  uint64_t v40 = (char *)a2 + v38;
  int v41 = v12((char *)(a1 + v38), 1, v10);
  int v42 = v12(v40, 1, v10);
  if (!v41)
  {
    if (!v42)
    {
      uint64_t v50 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 24))(v39, v40, v50);
      *(void *)&v39[*(int *)(v10 + 20)] = *(void *)&v40[*(int *)(v10 + 20)];
      return a1;
    }
    sub_1C01C0358((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
    goto LABEL_30;
  }
  if (v42)
  {
LABEL_30:
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v39, v40, *(void *)(*(void *)(v44 - 8) + 64));
    return a1;
  }
  uint64_t v43 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v39, v40, v43);
  *(void *)&v39[*(int *)(v10 + 20)] = *(void *)&v40[*(int *)(v10 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v39, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for FormatArticleThumbnail(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  uint64_t v8 = a3[9];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  uint64_t v11 = type metadata accessor for FormatArticleThumbnailImage();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v9, v10, v15);
    *(void *)&v9[*(int *)(v11 + 20)] = *(void *)&v10[*(int *)(v11 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v16 = a3[10];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  if (v13((char *)(a2 + v16), 1, v11))
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    *(void *)&v17[*(int *)(v11 + 20)] = *(void *)&v18[*(int *)(v11 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  }
  uint64_t v21 = a3[11];
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  if (v13((char *)(a2 + v21), 1, v11))
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
    *(void *)&v22[*(int *)(v11 + 20)] = *(void *)&v23[*(int *)(v11 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
  }
  uint64_t v26 = a3[12];
  int v27 = (char *)(a1 + v26);
  int v28 = (char *)(a2 + v26);
  if (v13((char *)(a2 + v26), 1, v11))
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
    *(void *)&v27[*(int *)(v11 + 20)] = *(void *)&v28[*(int *)(v11 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
  }
  uint64_t v31 = a3[13];
  uint64_t v32 = (char *)(a1 + v31);
  uint64_t v33 = (char *)(a2 + v31);
  if (v13(v33, 1, v11))
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    uint64_t v35 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v33, v35);
    *(void *)&v32[*(int *)(v11 + 20)] = *(void *)&v33[*(int *)(v11 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v32, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithTake for FormatArticleThumbnail(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[9];
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for FormatArticleThumbnailImage();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      uint64_t v18 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
      *(void *)&v11[*(int *)(v13 + 20)] = *(void *)&v12[*(int *)(v13 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    sub_1C01C0358((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
LABEL_6:
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v11, v12, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v49 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40))(v11, v12, v49);
  *(void *)&v11[*(int *)(v13 + 20)] = *(void *)&v12[*(int *)(v13 + 20)];
LABEL_7:
  uint64_t v20 = a3[10];
  uint64_t v21 = (char *)(a1 + v20);
  uint64_t v22 = (char *)(a2 + v20);
  int v23 = v15((char *)(a1 + v20), 1, v13);
  int v24 = v15(v22, 1, v13);
  if (v23)
  {
    if (!v24)
    {
      uint64_t v25 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v21, v22, v25);
      *(void *)&v21[*(int *)(v13 + 20)] = *(void *)&v22[*(int *)(v13 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    sub_1C01C0358((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
LABEL_12:
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v50 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 40))(v21, v22, v50);
  *(void *)&v21[*(int *)(v13 + 20)] = *(void *)&v22[*(int *)(v13 + 20)];
LABEL_13:
  uint64_t v27 = a3[11];
  int v28 = (char *)(a1 + v27);
  uint64_t v29 = (char *)(a2 + v27);
  int v30 = v15((char *)(a1 + v27), 1, v13);
  int v31 = v15(v29, 1, v13);
  if (v30)
  {
    if (!v31)
    {
      uint64_t v32 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v28, v29, v32);
      *(void *)&v28[*(int *)(v13 + 20)] = *(void *)&v29[*(int *)(v13 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v28, 0, 1, v13);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    sub_1C01C0358((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
LABEL_18:
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_19;
  }
  uint64_t v51 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 40))(v28, v29, v51);
  *(void *)&v28[*(int *)(v13 + 20)] = *(void *)&v29[*(int *)(v13 + 20)];
LABEL_19:
  uint64_t v34 = a3[12];
  uint64_t v35 = (char *)(a1 + v34);
  uint64_t v36 = (char *)(a2 + v34);
  int v37 = v15((char *)(a1 + v34), 1, v13);
  int v38 = v15(v36, 1, v13);
  if (v37)
  {
    if (!v38)
    {
      uint64_t v39 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v35, v36, v39);
      *(void *)&v35[*(int *)(v13 + 20)] = *(void *)&v36[*(int *)(v13 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v35, 0, 1, v13);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v38)
  {
    sub_1C01C0358((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
LABEL_24:
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_25;
  }
  uint64_t v52 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 40))(v35, v36, v52);
  *(void *)&v35[*(int *)(v13 + 20)] = *(void *)&v36[*(int *)(v13 + 20)];
LABEL_25:
  uint64_t v41 = a3[13];
  int v42 = (char *)(a1 + v41);
  uint64_t v43 = (char *)(a2 + v41);
  int v44 = v15((char *)(a1 + v41), 1, v13);
  int v45 = v15(v43, 1, v13);
  if (!v44)
  {
    if (!v45)
    {
      uint64_t v53 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 40))(v42, v43, v53);
      *(void *)&v42[*(int *)(v13 + 20)] = *(void *)&v43[*(int *)(v13 + 20)];
      return a1;
    }
    sub_1C01C0358((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for FormatArticleThumbnailImage);
    goto LABEL_30;
  }
  if (v45)
  {
LABEL_30:
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
    return a1;
  }
  uint64_t v46 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v42, v43, v46);
  *(void *)&v42[*(int *)(v13 + 20)] = *(void *)&v43[*(int *)(v13 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v42, 0, 1, v13);
  return a1;
}

uint64_t sub_1C01C26D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 36);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1C01C27B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 24) = a2;
  }
  else
  {
    sub_1BFE0C89C(0, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatArticleThumbnail.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01C2940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatArticleThumbnail.CodingKeys()
{
  return &type metadata for FormatArticleThumbnail.CodingKeys;
}

unint64_t sub_1C01C297C()
{
  unint64_t result = qword_1EA197D90;
  if (!qword_1EA197D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197D90);
  }
  return result;
}

unint64_t sub_1C01C29D4()
{
  unint64_t result = qword_1EB862F18;
  if (!qword_1EB862F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862F18);
  }
  return result;
}

unint64_t sub_1C01C2A2C()
{
  unint64_t result = qword_1EB862F10;
  if (!qword_1EB862F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862F10);
  }
  return result;
}

uint64_t sub_1C01C2A80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6172466C61636F66 && a2 == 0xEA0000000000656DLL;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F43746E65636361 && a2 == 0xEB00000000726F6CLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x437972616D697270 && a2 == 0xEC000000726F6C6FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xE900000000000072 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x696C617551776F6CLL && a2 == 0xEF6567616D497974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1606580 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C16065A0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C16065C0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16065E0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

void sub_1C01C2F0C()
{
  if (!qword_1EA197D98)
  {
    sub_1BFE0C89C(255, (unint64_t *)&qword_1EB88C798, (void (*)(uint64_t))type metadata accessor for FormatArticleThumbnailImage);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA197D98);
    }
  }
}

uint64_t sub_1C01C2F8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C01C2FF4()
{
  unint64_t result = qword_1EB8633C0;
  if (!qword_1EB8633C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB8633C0);
  }
  return result;
}

uint64_t static FormatServiceCachePolicy.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) != 1) {
    return (v4 & 1) == 0 && v2 == v3;
  }
  BOOL v5 = *(void *)&v3 == 0;
  if (v3 == 0.0) {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v6 = 0;
  }
  if (v5) {
    unsigned int v4 = 0;
  }
  if (v2 == 0.0) {
    return v6;
  }
  else {
    return v4;
  }
}

uint64_t sub_1C01C3088(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) != 1) {
    return (v4 & 1) == 0 && v2 == v3;
  }
  BOOL v5 = *(void *)&v3 == 0;
  if (v3 == 0.0) {
    unsigned int v6 = *(unsigned __int8 *)(a2 + 8);
  }
  else {
    unsigned int v6 = 0;
  }
  if (v5) {
    unsigned int v4 = 0;
  }
  if (v2 == 0.0) {
    return v6;
  }
  else {
    return v4;
  }
}

ValueMetadata *type metadata accessor for FormatServiceCachePolicy()
{
  return &type metadata for FormatServiceCachePolicy;
}

uint64_t FeedGroupEmitterPriority.rawValue.getter()
{
  if (*v0) {
    return 0x6C616D726F6ELL;
  }
  else {
    return 7827308;
  }
}

void sub_1C01C311C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7827308;
  if (*v1) {
    uint64_t v2 = 0x6C616D726F6ELL;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C01C3150()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C01C31A0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C01C3218()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t SVImageLayer.loadImage(from:with:queue:completion:)(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v12 = __swift_project_boxed_opaque_existential_1(a2, v10);
  return sub_1C01C3780(a1, (uint64_t)v12, a3, a4, a5, v5, v10, v11);
}

uint64_t sub_1C01C3328(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v23[1] = a3;
  uint64_t v12 = sub_1C151E16C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[0] = sub_1C151E1DC();
  uint64_t v16 = *(void *)(v23[0] - 8);
  MEMORY[0x1F4188790](v23[0]);
  uint64_t v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFC66384(a5, (uint64_t)v25);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = a4;
  sub_1BFC773DC(v25, (uint64_t)(v19 + 3));
  v19[8] = a6;
  v19[9] = a7;
  void v19[10] = a1;
  aBlock[4] = sub_1C01C3974;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_6;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = a1;
  swift_retain();
  swift_retain();
  sub_1C151E19C();
  void v23[2] = MEMORY[0x1E4FBC860];
  sub_1BFDE8C64((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  sub_1BFDE826C();
  sub_1BFDE8C64((unint64_t *)&qword_1EB879C80, (void (*)(uint64_t))sub_1BFDE826C);
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v18, v15, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, void))(v16 + 8))(v18, v23[0]);
  return swift_release();
}

void sub_1C01C362C(uint64_t a1, void *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a1 + 16;
  swift_beginAccess();
  uint64_t v9 = (void *)MEMORY[0x1C18C9C60](v8);
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_msgSend(v9, sel_identifier);
    if (v11)
    {
      uint64_t v12 = v11;
      uint64_t v13 = sub_1C151E62C();
      uint64_t v15 = v14;
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
    }
    __swift_project_boxed_opaque_existential_1(a2, a2[3]);
    uint64_t v16 = sub_1C151BD8C();
    if (!v15)
    {

      swift_bridgeObjectRelease();
      return;
    }
    if (v13 == v16 && v15 == v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v18 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
LABEL_12:

        return;
      }
    }
    a3(a5);
    goto LABEL_12;
  }
}

uint64_t sub_1C01C3780(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  v22[3] = a7;
  v22[4] = a8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a7 - 8) + 16))(boxed_opaque_existential_0, a2, a7);
  sub_1C151BD8C();
  uint64_t v16 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(a6, sel_setIdentifier_, v16);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BFC66384((uint64_t)v22, (uint64_t)v21);
  char v18 = (void *)swift_allocObject();
  void v18[2] = a3;
  v18[3] = v17;
  sub_1BFC773DC(v21, (uint64_t)(v18 + 4));
  v18[9] = a4;
  v18[10] = a5;
  id v19 = a3;
  swift_retain();
  swift_retain();
  sub_1C151A50C();
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t sub_1C01C3924()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();

  return swift_deallocObject();
}

void sub_1C01C3974()
{
  sub_1C01C362C(*(void *)(v0 + 16), (void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
}

uint64_t sub_1C01C3988()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C01C39C0()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C01C3A10(void *a1, uint64_t a2)
{
  return sub_1C01C3328(a1, a2, v2[2], v2[3], (uint64_t)(v2 + 4), v2[9], v2[10]);
}

unint64_t FeedPoolCachePolicy.cachePolicy.getter()
{
  unint64_t result = *v0;
  if (*v0)
  {
    if (result == 1) {
      id v2 = objc_msgSend(self, sel_cachedOnlyCachePolicy);
    }
    else {
      id v2 = objc_msgSend(self, sel_cachePolicyWithSoftMaxAge_, 604800.0);
    }
    return (unint64_t)v2;
  }
  return result;
}

uint64_t FeedPoolCachePolicy.rawValue.getter()
{
  uint64_t v1 = 0x6E4F646568636163;
  if (*v0 != 1) {
    uint64_t v1 = 0x6143726566657270;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x746C7561666564;
  }
}

uint64_t sub_1C01C3AF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C14941D8(*a1, *a2);
}

void sub_1C01C3AFC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xEA0000000000796CLL;
  uint64_t v5 = 0x6E4F646568636163;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6143726566657270;
    unint64_t v4 = 0xEC00000064656863;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x746C7561666564;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1C01C3B68()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C01C3C18()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01C3CB4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C01C3D60()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C01C3DB0()
{
  return FeedPoolServiceType.expandPool(cursor:)();
}

uint64_t FeedPoolServiceType.expandPool(cursor:)()
{
  type metadata accessor for FeedServiceError();
  swift_getWitnessTable();
  swift_allocError();
  *(void *)uint64_t v0 = 7;
  *(void *)(v0 + 8) = 0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 6;
  return swift_willThrow();
}

unint64_t sub_1C01C3E74()
{
  unint64_t result = qword_1EA197DA0;
  if (!qword_1EA197DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197DA0);
  }
  return result;
}

uint64_t dispatch thunk of FeedPoolServiceType.createPool(with:feedContext:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of FeedPoolServiceType.expandPool(cursor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

ValueMetadata *type metadata accessor for A18_V8()
{
  return &type metadata for A18_V8;
}

uint64_t sub_1C01C3F3C(void *a1)
{
  uint64_t v3 = v1;
  sub_1C01C95C4(0, &qword_1EA197E58, (uint64_t (*)(void))sub_1C01C9570, (uint64_t)&type metadata for A18_V8.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01C9570();
  sub_1C1520F0C();
  long long v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  char v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1C01C962C(&qword_1EA197288, type metadata accessor for CGRect);
  sub_1C152080C();
  if (!v2)
  {
    *(void *)&v12[0] = *(void *)(v3 + 32);
    char v13 = 1;
    sub_1BFC6CA08(0, &qword_1EB879DF0);
    sub_1BFC86580(&qword_1EA197720, (void (*)(void))sub_1C007AA58);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C01C4184(uint64_t a1)
{
  unint64_t v2 = sub_1C01C9570();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C01C41C0(uint64_t a1)
{
  unint64_t v2 = sub_1C01C9570();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C01C41FC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C01C8F8C(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C01C4244(void *a1)
{
  return sub_1C01C3F3C(a1);
}

uint64_t sub_1C01C425C()
{
  sub_1C01C8DA0();
  return sub_1C151798C();
}

uint64_t sub_1C01C42D8@<X0>(uint64_t *a1@<X8>)
{
  sub_1BFE13974();
  swift_allocObject();
  uint64_t v2 = sub_1C15172BC();
  sub_1C01C95C4(0, &qword_1EB871310, (uint64_t (*)(void))sub_1C007AAAC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes, MEMORY[0x1E4FAB718]);
  swift_allocObject();
  uint64_t result = sub_1C151775C();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t sub_1C01C4394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v53 = a3;
  uint64_t v56 = sub_1C151635C();
  uint64_t v6 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupLayoutContext();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v63 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v76 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  char v13 = (char *)&v53 - v12;
  uint64_t v14 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v57 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = *v3;
  uint64_t v17 = (void *)*((void *)v3 + 1);
  unsigned __int8 v18 = v3[16];
  uint64_t v65 = a1;
  sub_1BFF1AFA4(a1, v57, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  uint64_t v60 = type metadata accessor for GroupLayoutContext;
  sub_1BFF1AFA4(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  sub_1BFFFC7A0(v17, v18);
  sub_1C151634C();
  uint64_t v55 = sub_1C151633C();
  uint64_t v54 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  uint64_t v74 = &type metadata for A18_V8;
  unint64_t v20 = sub_1C01861E8();
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  type metadata accessor for GroupLayoutKey();
  uint64_t v21 = swift_allocObject();
  sub_1BFFFC7A0(v17, v18);
  uint64_t v66 = sub_1C1520FAC();
  uint64_t v67 = v22;
  uint64_t v70 = 95;
  unint64_t v71 = 0xE100000000000000;
  uint64_t v68 = 45;
  unint64_t v69 = 0xE100000000000000;
  sub_1BFF27ECC();
  uint64_t v23 = sub_1C151FEBC();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  *(void *)(v21 + 16) = v23;
  *(void *)(v21 + 24) = v25;
  uint64_t v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  uint64_t v27 = v54;
  *uint64_t v26 = v55;
  v26[1] = v27;
  sub_1BFC66384((uint64_t)&v72, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  uint64_t v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BFF2396C(v57, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v28, 0, 1, v59);
  uint64_t v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BFF2396C((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v29, 0, 1, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  sub_1BFFFC630(v17, v18);
  uint64_t v74 = &type metadata for A18_V8;
  unint64_t v75 = v20;
  LOBYTE(v72) = v16;
  *((void *)&v72 + 1) = v17;
  unsigned __int8 v73 = v18;
  sub_1BFF1AFA4(v61, v76, (uint64_t (*)(void))v60);
  sub_1C0019244(0, qword_1EB871A20, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = MEMORY[0x1E4FBC860];
  int v31 = (void *)(v30 + 16);
  swift_beginAccess();
  uint64_t v32 = *(void **)(v30 + 16);
  sub_1BFFFC7A0(v17, v18);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v30 + 16) = v32;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v32 = sub_1BFFB83AC(0, v32[2] + 1, 1, v32);
    *int v31 = v32;
  }
  unint64_t v35 = v32[2];
  unint64_t v34 = v32[3];
  if (v35 >= v34 >> 1)
  {
    uint64_t v32 = sub_1BFFB83AC((void *)(v34 > 1), v35 + 1, 1, v32);
    *int v31 = v32;
  }
  void v32[2] = v35 + 1;
  uint64_t v36 = &v32[2 * v35];
  v36[4] = sub_1C064667C;
  v36[5] = 0;
  swift_endAccess();
  uint64_t v37 = v64;
  uint64_t v38 = sub_1C001E608((uint64_t)&unk_1F1B68078, 0, 0, v30, 4, 0, 0, 0);
  if (v37)
  {
    swift_release();
    swift_release();
    sub_1BFF1F224(v76, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  }
  else
  {
    uint64_t v39 = v38;
    swift_release();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v41 = (void *)(v40 + 16);
    swift_beginAccess();
    int v42 = *(void **)(v40 + 16);
    char v43 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v40 + 16) = v42;
    if ((v43 & 1) == 0)
    {
      int v42 = sub_1BFFB83AC(0, v42[2] + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    unint64_t v45 = v42[2];
    unint64_t v44 = v42[3];
    if (v45 >= v44 >> 1)
    {
      int v42 = sub_1BFFB83AC((void *)(v44 > 1), v45 + 1, 1, v42);
      *uint64_t v41 = v42;
    }
    v42[2] = v45 + 1;
    uint64_t v46 = &v42[2 * v45];
    v46[4] = sub_1C064667C;
    v46[5] = 0;
    swift_endAccess();
    uint64_t v48 = sub_1C001E608((uint64_t)&unk_1F1B680A0, 0, 0, v40, 0, 0, 0, 0);
    swift_release();
    uint64_t v66 = v39;
    sub_1C0018900(v48);
    uint64_t v49 = v66;
    uint64_t v50 = type metadata accessor for A18_V8.Bound();
    uint64_t v51 = v53;
    v53[3] = v50;
    v51[4] = sub_1C01C962C(&qword_1EA197DB8, (void (*)(uint64_t))type metadata accessor for A18_V8.Bound);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
    uint64_t *boxed_opaque_existential_0 = v21;
    sub_1BFC773DC(&v72, (uint64_t)(boxed_opaque_existential_0 + 1));
    uint64_t result = sub_1BFF2396C(v76, (uint64_t)boxed_opaque_existential_0 + *(int *)(v50 + 24), (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v50 + 28)) = v49;
  }
  return result;
}

double sub_1C01C4B38@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  int v42 = a1;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v41 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0019244(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v6 = type metadata accessor for A18_V8.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(v7 + *(int *)(v8 + 40));
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(int *)(v8 + 32);
  *(void *)&long long v40 = v7;
  double v12 = *(double *)(v7 + v11);
  sub_1BFC66384(v10 + 16, (uint64_t)&v47);
  sub_1BFC66384(v10 + 56, (uint64_t)v46);
  double v13 = v12 * *(double *)(v10 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v47, v14 + 16);
  sub_1BFC773DC(v46, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v45[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v45, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v9 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v46);
  sub_1BFC66384(v15 + 56, (uint64_t)v45);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v46, v17 + 16);
  sub_1BFC773DC(v45, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v44[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v44, (uint64_t *)&v47);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v18 = sub_1BFEB3714((uint64_t)&v47, *(void *)(*(void *)(v2 + *(int *)(v6 + 28)) + 16) - 1);
  *(void *)&long long v47 = inited;
  sub_1BFEB37F8(v18);
  uint64_t v19 = v47;
  v43[2] = v2;
  uint64_t v20 = swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C06472C0(v20, v19, (void (*)(char *, uint64_t))sub_1C01C8D3C, (uint64_t)v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v21 + 16) < 4uLL)
  {
    __break(1u);
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
    sub_1C00B2130(v21, v21 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)), 1, 9uLL);
    goto LABEL_7;
  }
  sub_1C1520B6C();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  uint64_t v23 = *(void *)(v22 + 16);
  swift_release();
  if (v23 != 3) {
    goto LABEL_9;
  }
  if (!swift_dynamicCastClass()) {
    swift_bridgeObjectRelease();
  }
LABEL_7:
  swift_bridgeObjectRelease();
  uint64_t v24 = *MEMORY[0x1E4FAB6D8];
  uint64_t v25 = sub_1C151759C();
  uint64_t v26 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v41, v24, v25);
  uint64_t v27 = (*(uint64_t (**)(char *, void, uint64_t))(v38 + 104))(v26, *MEMORY[0x1E4FAB8F0], v39);
  MEMORY[0x1F4188790](v27);
  sub_1C01C8E58(0, &qword_1EA197DD8, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v28 = sub_1C1517BEC();
  swift_release();
  uint64_t v41 = (char *)v28;
  uint64_t v29 = sub_1C1517BFC();
  long long v40 = v47;
  uint64_t v30 = v48;
  uint64_t v31 = v49;
  *(void *)&long long v47 = v21;
  *(void *)&v46[0] = v50;
  MEMORY[0x1F4188790](v29);
  sub_1C0019244(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v47 = v32;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v33 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v34 = v42;
  *int v42 = 0;
  double result = *(double *)&v40;
  *(_OWORD *)(v34 + 8) = v40;
  *((void *)v34 + 3) = v30;
  *((void *)v34 + 4) = v31;
  uint64_t v36 = MEMORY[0x1E4FBC860];
  *((void *)v34 + 5) = v33;
  *((void *)v34 + 6) = v36;
  return result;
}

uint64_t sub_1C01C51E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1C01C52B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C01C95C4(0, &qword_1EA197DF0, (uint64_t (*)(void))sub_1C01C8D4C, (uint64_t)&type metadata for A18_V8.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)&v14[-v9];
  uint64_t v17 = a1;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 18;
  *uint64_t v10 = v11;
  (*(void (**)(uint64_t *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABA10], v7);
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  double v12 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
  sub_1C01C8E58(0, &qword_1EA197DF8, MEMORY[0x1E4FAB6F0]);
  sub_1C01C8E14(&qword_1EA197E00, &qword_1EA197DF8, v12);
  sub_1C151734C();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C01C54A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v23 = sub_1C01C8D4C;
  sub_1C01C95C4(0, &qword_1EA197DF0, (uint64_t (*)(void))sub_1C01C8D4C, (uint64_t)&type metadata for A18_V8.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v22 - v7);
  uint64_t v28 = a1;
  uint64_t v9 = sub_1C151729C();
  uint64_t v10 = swift_allocBox();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, *MEMORY[0x1E4FAB4E8], v9);
  *uint64_t v8 = v10;
  double v12 = *(void (**)(uint64_t *, void, uint64_t))(v6 + 104);
  v12(v8, *MEMORY[0x1E4FAB940], v5);
  double v13 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C01C8E58(0, &qword_1EA197E08, MEMORY[0x1E4FAB4D0]);
  uint64_t v22 = v14;
  sub_1C01C8E14(&qword_1EA197E10, &qword_1EA197E08, v13);
  sub_1C151738C();
  uint64_t v15 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v15(v8, v5);
  uint64_t v28 = a1;
  v12(v8, *MEMORY[0x1E4FAB9E0], v5);
  sub_1C01C8EDC();
  sub_1C01C95C4(0, &qword_1EA197E20, (uint64_t (*)(void))v23, (uint64_t)&type metadata for A18_V8.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C1529AE0;
  (*(void (**)(unint64_t, void, uint64_t))(v18 + 104))(v20 + v19, *MEMORY[0x1E4FAB638], v17);
  uint64_t v26 = v24;
  uint64_t v27 = v25;
  sub_1C151731C();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(uint64_t *, uint64_t))v15)(v8, v5);
}

uint64_t sub_1C01C5814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v37 = a2;
  uint64_t v35 = a1;
  sub_1C01C95C4(0, &qword_1EA197DF0, (uint64_t (*)(void))sub_1C01C8D4C, (uint64_t)&type metadata for A18_V8.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v30 - v7);
  uint64_t v41 = a1;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 6;
  *uint64_t v8 = v9;
  unsigned int v33 = *MEMORY[0x1E4FABA10];
  uint64_t v32 = *(void (**)(uint64_t *))(v6 + 104);
  uint64_t v34 = v6 + 104;
  v32(v8);
  sub_1C01C8EDC();
  sub_1C01C95C4(0, &qword_1EA197E20, (uint64_t (*)(void))sub_1C01C8D4C, (uint64_t)&type metadata for A18_V8.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
  unint64_t v15 = v14 + v13;
  sub_1C003F3A8();
  uint64_t v17 = (void *)(v15 + *(int *)(v16 + 48));
  uint64_t v18 = *MEMORY[0x1E4FAB7E0];
  uint64_t v19 = sub_1C151789C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v15, v18, v19);
  *uint64_t v17 = 0x6469737468676972;
  v17[1] = 0xE900000000000065;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v15, *MEMORY[0x1E4FAB5B0], v11);
  uint64_t v40 = v37;
  uint64_t v20 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C01C8E58(0, &qword_1EA197E08, MEMORY[0x1E4FAB4D0]);
  sub_1C01C8E14(&qword_1EA197E10, &qword_1EA197E08, v20);
  sub_1C151734C();
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  uint64_t v31 = v5;
  v21(v8, v5);
  uint64_t v22 = v35;
  uint64_t v41 = v35;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 6;
  *uint64_t v8 = v23;
  uint64_t v24 = v33;
  uint64_t v25 = v5;
  uint64_t v26 = v32;
  ((void (*)(uint64_t *, void, uint64_t))v32)(v8, v33, v25);
  uint64_t v39 = v36;
  sub_1C151734C();
  uint64_t v27 = v31;
  v21(v8, v31);
  uint64_t v41 = v22;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = 6;
  *uint64_t v8 = v28;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v26)(v8, v24, v27);
  uint64_t v38 = v37;
  sub_1C151734C();
  return ((uint64_t (*)(uint64_t *, uint64_t))v21)(v8, v27);
}

uint64_t sub_1C01C5CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a2;
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v48 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151794C();
  uint64_t v49 = *(void *)(v5 - 8);
  uint64_t v50 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v43 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01C95C4(0, &qword_1EA197DF0, (uint64_t (*)(void))sub_1C01C8D4C, (uint64_t)&type metadata for A18_V8.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v41 - v17;
  uint64_t v52 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = *MEMORY[0x1E4FAB9E0];
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  long long v47 = v18;
  v20(v18, v19, v15);
  sub_1C01C8EDC();
  sub_1C01C95C4(0, &qword_1EA197E20, (uint64_t (*)(void))sub_1C01C8D4C, (uint64_t)&type metadata for A18_V8.Layout, MEMORY[0x1E4FAB678]);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
  (*(void (**)(unint64_t, void, uint64_t))(v23 + 104))(v25 + v24, *MEMORY[0x1E4FAB638], v22);
  if (!*(void *)(v51 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v41 = v16;
  uint64_t v42 = v15;
  sub_1BFF1AFA4(v51 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80)), (uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v26 = qword_1F1B680E8;
  uint64_t v27 = (char *)v10 + v8[5];
  uint64_t v28 = *MEMORY[0x1E4FAB8C8];
  uint64_t v29 = sub_1C1517A7C();
  uint64_t v30 = *(void *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 104))(v27, v28, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  uint64_t v31 = (void **)MEMORY[0x1E4FB27D0];
  *uint64_t v10 = v26;
  *(uint64_t *)((char *)v10 + v8[6]) = 0;
  uint64_t v32 = *v31;
  *(uint64_t *)((char *)v10 + v8[7]) = (uint64_t)v32;
  uint64_t v33 = qword_1EB87CC48;
  id v34 = v32;
  if (v33 != -1) {
LABEL_5:
  }
    swift_once();
  swift_retain();
  sub_1C151709C();
  uint64_t v35 = swift_release();
  __n128 v36 = MEMORY[0x1F4188790](v35);
  *(&v41 - 4) = (uint64_t)v13;
  *(&v41 - 3) = (uint64_t)v10;
  unint64_t v40 = (unint64_t)v7;
  (*(void (**)(char *, void, uint64_t, __n128))(v45 + 104))(v48, *MEMORY[0x1E4FAB8F8], v46, v36);
  sub_1C018C5C8();
  swift_allocObject();
  sub_1C1517BEC();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v50);
  sub_1BFF1F224((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BFF1F224((uint64_t)v13, type metadata accessor for HeadlineViewLayout.Context);
  uint64_t v37 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C01C8E58(0, &qword_1EA197E08, MEMORY[0x1E4FAB4D0]);
  sub_1C01C8E14(&qword_1EA197E10, &qword_1EA197E08, v37);
  unint64_t v40 = sub_1BFD5DED4();
  uint64_t v38 = v47;
  sub_1C151735C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v38, v42);
}

void sub_1C01C6398(uint64_t a1, uint64_t a2)
{
  uint64_t v86 = a1;
  uint64_t v3 = type metadata accessor for HeadlineViewLayout.Context(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v64 = (uint64_t)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01C923C();
  uint64_t v78 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0019244(0, &qword_1EB876238, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v65 = (uint64_t)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v63 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v63 - v15;
  uint64_t v77 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v77);
  uint64_t v76 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01C95C4(0, &qword_1EA197DF0, (uint64_t (*)(void))sub_1C01C8D4C, (uint64_t)&type metadata for A18_V8.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v85 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (uint64_t *)((char *)&v63 - v20);
  uint64_t v22 = *(void *)(a2 + 16);
  if (v22)
  {
    uint64_t v68 = v16;
    uint64_t v79 = v13;
    uint64_t v88 = v8;
    uint64_t v75 = v3;
    uint64_t v23 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v24 = *(void *)(v4 + 72);
    uint64_t v73 = v23 + v24 * (v22 - 1);
    uint64_t v74 = v24;
    unsigned int v72 = *MEMORY[0x1E4FAB958];
    uint64_t v84 = (void (**)(uint64_t *, void, uint64_t))(v19 + 104);
    unsigned int v71 = *MEMORY[0x1E4FAB8C8];
    uint64_t v70 = (void *)*MEMORY[0x1E4FB27D0];
    double v25 = *MEMORY[0x1E4FB2848];
    double v26 = *(double *)(MEMORY[0x1E4FB2848] + 8);
    double v27 = *(double *)(MEMORY[0x1E4FB2848] + 16);
    double v28 = *(double *)(MEMORY[0x1E4FB2848] + 24);
    uint64_t v83 = (void (**)(uint64_t *, uint64_t))(v19 + 8);
    unint64_t v69 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56);
    uint64_t v29 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    unsigned int v67 = *MEMORY[0x1E4FAB4E8];
    unsigned int v66 = *MEMORY[0x1E4FAB940];
    uint64_t v63 = a2;
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v87 = v22;
      uint64_t v89 = v86;
      swift_getKeyPath();
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = 0x4060E00000000000;
      *uint64_t v21 = v31;
      uint64_t v32 = v85;
      uint64_t v82 = *v84;
      v82(v21, v72, v85);
      id v34 = v76;
      uint64_t v33 = v77;
      uint64_t v35 = &v76[*(int *)(v77 + 20)];
      uint64_t v36 = sub_1C1517A7C();
      uint64_t v37 = v29;
      uint64_t v38 = *(void *)(v36 - 8);
      (*(void (**)(char *, void, uint64_t))(v38 + 104))(v35, v71, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v36);
      *id v34 = 0;
      *(void *)((char *)v34 + *(int *)(v33 + 24)) = 0;
      uint64_t v39 = v70;
      *(void *)((char *)v34 + *(int *)(v33 + 28)) = v70;
      id v40 = v39;
      _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v23, (uint64_t)v34, v25, v26, v27, v28);
      sub_1BFF1F224((uint64_t)v34, type metadata accessor for HeadlineViewLayout.Options);
      uint64_t v41 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
      sub_1C01C8E58(0, &qword_1EA197E08, MEMORY[0x1E4FAB4D0]);
      uint64_t v42 = sub_1C01C8E14(&qword_1EA197E10, &qword_1EA197E08, v41);
      sub_1BFD5DED4();
      uint64_t v81 = v42;
      sub_1C151735C();
      swift_release();
      swift_release();
      uint64_t v80 = *v83;
      v80(v21, v32);
      uint64_t v43 = (uint64_t)v68;
      sub_1BFF1AFA4(v23, (uint64_t)v68, type metadata accessor for HeadlineViewLayout.Context);
      unint64_t v44 = *v69;
      uint64_t v45 = v75;
      (*v69)(v43, 0, 1, v75);
      uint64_t v46 = (uint64_t)v79;
      sub_1BFF1AFA4(v73, (uint64_t)v79, type metadata accessor for HeadlineViewLayout.Context);
      v44(v46, 0, 1, v45);
      uint64_t v47 = (uint64_t)v88;
      uint64_t v48 = (uint64_t)&v88[*(int *)(v78 + 48)];
      sub_1C01C92D0(v43, (uint64_t)v88);
      sub_1C01C92D0(v46, v48);
      uint64_t v49 = *v37;
      if ((*v37)(v47, 1, v45) == 1)
      {
        sub_1C01C9364(v46);
        sub_1C01C9364(v43);
        uint64_t v29 = v37;
        if (v49(v48, 1, v45) != 1) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v50 = v47;
        uint64_t v51 = v65;
        sub_1C01C92D0(v50, v65);
        uint64_t v29 = v37;
        if (v49(v48, 1, v45) == 1)
        {
          sub_1C01C9364((uint64_t)v79);
          sub_1C01C9364(v43);
          sub_1BFF1F224(v51, type metadata accessor for HeadlineViewLayout.Context);
LABEL_11:
          sub_1BFF1F224((uint64_t)v88, (uint64_t (*)(void))sub_1C01C923C);
          uint64_t v30 = v87;
LABEL_12:
          uint64_t v89 = v86;
          uint64_t v52 = sub_1C151729C();
          uint64_t v53 = swift_allocBox();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v52 - 8) + 104))(v54, v67, v52);
          *uint64_t v21 = v53;
          uint64_t v55 = v85;
          v82(v21, v66, v85);
          sub_1C151738C();
          v80(v21, v55);
          goto LABEL_5;
        }
        uint64_t v56 = v48;
        uint64_t v57 = v64;
        sub_1BFF2396C(v56, v64, type metadata accessor for HeadlineViewLayout.Context);
        uint64_t v58 = *(int *)(v45 + 20);
        uint64_t v59 = *(void *)(v51 + v58);
        uint64_t v60 = *(void *)(v51 + v58 + 8);
        uint64_t v61 = (void *)(v57 + v58);
        if (v59 != *v61 || v60 != v61[1])
        {
          char v62 = sub_1C1520A9C();
          sub_1BFF1F224(v64, type metadata accessor for HeadlineViewLayout.Context);
          sub_1C01C9364((uint64_t)v79);
          sub_1C01C9364(v43);
          sub_1BFF1F224(v51, type metadata accessor for HeadlineViewLayout.Context);
          sub_1C01C9364((uint64_t)v88);
          uint64_t v30 = v87;
          if (v62) {
            goto LABEL_5;
          }
          goto LABEL_12;
        }
        sub_1BFF1F224(v64, type metadata accessor for HeadlineViewLayout.Context);
        sub_1C01C9364((uint64_t)v79);
        sub_1C01C9364(v43);
        sub_1BFF1F224(v51, type metadata accessor for HeadlineViewLayout.Context);
      }
      sub_1C01C9364((uint64_t)v88);
      uint64_t v30 = v87;
LABEL_5:
      v23 += v74;
      uint64_t v22 = v30 - 1;
      if (!v22)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

uint64_t sub_1C01C6CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01C95C4(0, &qword_1EA197DF0, (uint64_t (*)(void))sub_1C01C8D4C, (uint64_t)&type metadata for A18_V8.Layout, MEMORY[0x1E4FABA30]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v64 - v10);
  uint64_t v89 = a1;
  uint64_t v92 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v13;
  uint64_t v14 = *(void (**)(void))(v9 + 104);
  unsigned int v87 = *MEMORY[0x1E4FAB958];
  uint64_t v91 = v8;
  uint64_t v88 = v9 + 104;
  uint64_t v86 = v14;
  uint64_t result = ((uint64_t (*)(uint64_t *))v14)(v11);
  unint64_t v85 = *(void *)(a2 + 16);
  if (v85 < 5)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8);
  uint64_t v17 = a2 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v18 = *(void *)(v16 + 72);
  uint64_t v83 = v17;
  uint64_t v80 = v18;
  uint64_t v19 = v17 + 4 * v18;
  uint64_t v20 = &v6[v4[5]];
  uint64_t v75 = KeyPath;
  uint64_t v21 = *MEMORY[0x1E4FAB8C8];
  uint64_t v22 = sub_1C1517A7C();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(void (**)(char *, void, uint64_t))(v23 + 104);
  unsigned int v81 = v21;
  uint64_t v77 = v24;
  uint64_t v78 = v23 + 104;
  v24(v20, v21, v22);
  double v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
  uint64_t v84 = v22;
  uint64_t v82 = v23 + 56;
  uint64_t v79 = v25;
  v25(v20, 0, 1, v22);
  double v26 = (void *)*MEMORY[0x1E4FB27D0];
  *(void *)uint64_t v6 = 0;
  *(void *)&v6[v4[6]] = 0;
  uint64_t v76 = v4;
  *(void *)&v6[v4[7]] = v26;
  double v27 = *MEMORY[0x1E4FB2848];
  double v28 = *(double *)(MEMORY[0x1E4FB2848] + 8);
  double v29 = *(double *)(MEMORY[0x1E4FB2848] + 16);
  double v30 = *(double *)(MEMORY[0x1E4FB2848] + 24);
  unsigned int v71 = v26;
  _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v19, (uint64_t)v6, v27, v28, v29, v30);
  sub_1BFF1F224((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
  uint64_t v31 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB4D0];
  sub_1C01C8E58(0, &qword_1EA197E08, MEMORY[0x1E4FAB4D0]);
  uint64_t v90 = v32;
  uint64_t v33 = sub_1C01C8E14(&qword_1EA197E10, &qword_1EA197E08, v31);
  unint64_t v74 = sub_1BFD5DED4();
  sub_1C151735C();
  swift_release();
  swift_release();
  id v34 = *(void (**)(uint64_t *, uint64_t))(v9 + 8);
  uint64_t v35 = v91;
  v34(v11, v91);
  uint64_t v36 = v89;
  uint64_t v92 = v89;
  uint64_t v37 = sub_1C151729C();
  uint64_t v38 = swift_allocBox();
  uint64_t v39 = *(void *)(v37 - 8);
  id v40 = *(void (**)(void))(v39 + 104);
  unsigned int v69 = *MEMORY[0x1E4FAB4E8];
  uint64_t v70 = v37;
  uint64_t v68 = (void (*)(uint64_t, void, uint64_t))v40;
  uint64_t v67 = v39 + 104;
  v40(v41);
  *uint64_t v11 = v38;
  unsigned int v66 = *MEMORY[0x1E4FAB940];
  uint64_t v42 = (uint64_t (*)(uint64_t *, void, uint64_t))v86;
  v86(v11);
  uint64_t v75 = v33;
  sub_1C151738C();
  uint64_t v72 = v9 + 8;
  uint64_t v73 = v34;
  v34(v11, v35);
  uint64_t v92 = v36;
  swift_getKeyPath();
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v43;
  uint64_t result = v42(v11, v87, v35);
  if (v85 == 5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v44 = v84;
  uint64_t v45 = v83 + 5 * v80;
  uint64_t v46 = v76;
  uint64_t v47 = &v6[v76[5]];
  v77(v47, v81, v84);
  v79(v47, 0, 1, v44);
  *(void *)uint64_t v6 = 0;
  *(void *)&v6[v46[6]] = 0;
  uint64_t v48 = v71;
  *(void *)&v6[v46[7]] = v71;
  id v65 = v48;
  _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v45, (uint64_t)v6, v27, v28, v29, v30);
  unsigned int v71 = v6;
  sub_1BFF1F224((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
  sub_1C151735C();
  swift_release();
  swift_release();
  uint64_t v49 = v91;
  uint64_t v50 = v73;
  v73(v11, v91);
  uint64_t v51 = v89;
  uint64_t v92 = v89;
  uint64_t v52 = v70;
  uint64_t v53 = swift_allocBox();
  v68(v54, v69, v52);
  *uint64_t v11 = v53;
  uint64_t v55 = (uint64_t (*)(uint64_t *, void, uint64_t))v86;
  ((void (*)(uint64_t *, void, uint64_t))v86)(v11, v66, v49);
  sub_1C151738C();
  v50(v11, v49);
  uint64_t v92 = v51;
  swift_getKeyPath();
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = 0x4060E00000000000;
  *uint64_t v11 = v56;
  uint64_t result = v55(v11, v87, v49);
  if (v85 >= 7)
  {
    uint64_t v57 = v84;
    uint64_t v58 = v83 + 6 * v80;
    uint64_t v59 = v76;
    uint64_t v60 = v71;
    uint64_t v61 = &v71[v76[5]];
    v77(v61, v81, v84);
    v79(v61, 0, 1, v57);
    *uint64_t v60 = 0;
    *(void *)((char *)v60 + v59[6]) = 0;
    char v62 = v65;
    *(void *)((char *)v60 + v59[7]) = v65;
    id v63 = v62;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v58, (uint64_t)v60, v27, v28, v29, v30);
    sub_1BFF1F224((uint64_t)v60, type metadata accessor for HeadlineViewLayout.Options);
    sub_1C151735C();
    swift_release();
    swift_release();
    return ((uint64_t (*)(uint64_t *, uint64_t))v73)(v11, v91);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1C01C75D4@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  memcpy(v21, __src, sizeof(v21));
  sub_1BFE298EC();
  uint64_t v10 = v9;
  uint64_t v11 = swift_allocBox();
  uint64_t v13 = v12;
  uint64_t v14 = (void *)(v12 + *(int *)(v10 + 48));
  uint64_t v15 = *(int *)(v10 + 64);
  sub_1BFF1AFA4(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  uint64_t v16 = a4 + *(int *)(type metadata accessor for A18_V8.Bound() + 24);
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v18 = *(void *)(v16 + *(int *)(result + 28));
  BOOL v19 = __OFADD__(v18, a2);
  uint64_t v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1C01C76C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1C01C4394(a1, a2, a3);
}

uint64_t sub_1C01C76DC()
{
  return sub_1C12BC3D0();
}

unint64_t sub_1C01C76EC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C01C771C();
  unint64_t result = sub_1C01C7770();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C01C771C()
{
  unint64_t result = qword_1EA197DA8;
  if (!qword_1EA197DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197DA8);
  }
  return result;
}

unint64_t sub_1C01C7770()
{
  unint64_t result = qword_1EA197DB0;
  if (!qword_1EA197DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197DB0);
  }
  return result;
}

uint64_t type metadata accessor for A18_V8.Bound()
{
  uint64_t result = qword_1EA197DC0;
  if (!qword_1EA197DC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C01C7810(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    uint64_t v35 = a3;
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v17 = v16[5];
    uint64_t v18 = v13 + v17;
    uint64_t v19 = v14 + v17;
    uint64_t v20 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v16[6];
    uint64_t v22 = v13 + v21;
    uint64_t v23 = v14 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(v14 + v21);
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(unsigned char *)(v22 + 19) = *(unsigned char *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    unint64_t v24 = *(void *)(v14 + v21 + 24);
    if (v24 >= 2) {
      unint64_t v24 = swift_bridgeObjectRetain();
    }
    *(void *)(v22 + 24) = v24;
    uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v26 = *(int *)(v25 + 36);
    __dst = (void *)(v22 + v26);
    uint64_t v34 = v25;
    double v27 = (const void *)(v23 + v26);
    uint64_t v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1C0019244(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v27, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(void *)(v22 + *(int *)(v34 + 40)) = *(void *)(v23 + *(int *)(v34 + 40));
    *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
    *(void *)(v13 + v16[8]) = *(void *)(v14 + v16[8]);
    *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
    *(void *)(v13 + v16[10]) = *(void *)(v14 + v16[10]);
    *(unsigned char *)(v13 + v16[11]) = *(unsigned char *)(v14 + v16[11]);
    *(void *)(v13 + v16[12]) = *(void *)(v14 + v16[12]);
    *(void *)(a1 + *(int *)(v35 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v35 + 28));
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C01C7B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  long long v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_retain();
  v9(a1 + 8, v6, v8);
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = v14[6];
  uint64_t v20 = v11 + v19;
  uint64_t v21 = v12 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)(v12 + v19);
  *(unsigned char *)(v20 + 16) = *(unsigned char *)(v12 + v19 + 16);
  *(_WORD *)(v20 + 17) = *(_WORD *)(v12 + v19 + 17);
  *(unsigned char *)(v20 + 19) = *(unsigned char *)(v12 + v19 + 19);
  *(_DWORD *)(v20 + 20) = *(_DWORD *)(v12 + v19 + 20);
  unint64_t v22 = *(void *)(v12 + v19 + 24);
  if (v22 >= 2) {
    unint64_t v22 = swift_bridgeObjectRetain();
  }
  *(void *)(v20 + 24) = v22;
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v24 = *(int *)(v23 + 36);
  __dst = (void *)(v20 + v24);
  uint64_t v25 = (const void *)(v21 + v24);
  uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C0019244(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v25, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
  }
  *(void *)(v20 + *(int *)(v23 + 40)) = *(void *)(v21 + *(int *)(v23 + 40));
  *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
  *(void *)(v11 + v14[8]) = *(void *)(v12 + v14[8]);
  *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
  *(void *)(v11 + v14[10]) = *(void *)(v12 + v14[10]);
  *(unsigned char *)(v11 + v14[11]) = *(unsigned char *)(v12 + v14[11]);
  *(void *)(v11 + v14[12]) = *(void *)(v12 + v14[12]);
  *(void *)(a1 + *(int *)(v32 + 28)) = *(void *)(v33 + *(int *)(v32 + 28));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C01C7EE0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, v6);
  uint64_t v39 = a3;
  id v40 = a2;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v41 = a1;
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151772C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = &v8[v12];
  uint64_t v14 = &v9[v12];
  uint64_t v15 = sub_1C151757C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v36 = (int *)v11;
  uint64_t v16 = *(int *)(v11 + 24);
  uint64_t v17 = &v8[v16];
  uint64_t v18 = &v9[v16];
  long long v19 = *(_OWORD *)&v9[v16];
  v17[16] = v9[v16 + 16];
  *(_OWORD *)uint64_t v17 = v19;
  void v17[17] = v9[v16 + 17];
  v17[18] = v9[v16 + 18];
  v17[19] = v9[v16 + 19];
  v17[20] = v9[v16 + 20];
  v17[21] = v9[v16 + 21];
  v17[22] = v9[v16 + 22];
  v17[23] = v9[v16 + 23];
  uint64_t v20 = (unint64_t *)&v8[v16 + 24];
  unint64_t v21 = *(void *)&v9[v16 + 24];
  if (*v20 >= 2)
  {
    if (v21 >= 2)
    {
      *uint64_t v20 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BFF1F224((uint64_t)(v17 + 24), (uint64_t (*)(void))sub_1C018B80C);
      *uint64_t v20 = *((void *)v18 + 3);
    }
  }
  else
  {
    *uint64_t v20 = v21;
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v38 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v22 = *(int *)(v38 + 36);
  uint64_t v23 = (uint64_t)&v17[v22];
  uint64_t v24 = &v18[v22];
  uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v37 = v23;
  LODWORD(v23) = v27(v23, 1, v25);
  int v28 = v27((uint64_t)v24, 1, v25);
  if (v23)
  {
    if (!v28)
    {
      uint64_t v33 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v37, v24, v33);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v37, 0, 1, v25);
      goto LABEL_16;
    }
    sub_1C0019244(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v29 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  else
  {
    if (!v28)
    {
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v37, v24, v34);
      goto LABEL_16;
    }
    sub_1BFF1F224(v37, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0019244(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v30 = *(void *)(*(void *)(v32 - 8) + 64);
    uint64_t v31 = (void *)v37;
  }
  memcpy(v31, v24, v30);
LABEL_16:
  *(void *)&v17[*(int *)(v38 + 40)] = *(void *)&v18[*(int *)(v38 + 40)];
  *(void *)&v8[v36[7]] = *(void *)&v9[v36[7]];
  *(void *)&v8[v36[8]] = *(void *)&v9[v36[8]];
  v8[v36[9]] = v9[v36[9]];
  *(void *)&v8[v36[10]] = *(void *)&v9[v36[10]];
  swift_retain();
  swift_release();
  v8[v36[11]] = v9[v36[11]];
  *(void *)&v8[v36[12]] = *(void *)&v9[v36[12]];
  swift_retain();
  swift_release();
  *(void *)((char *)v41 + *(int *)(v39 + 28)) = *(void *)((char *)v40 + *(int *)(v39 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1C01C8374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  long long v9 = (int *)type metadata accessor for GroupLayoutContext();
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = v6 + v14;
  uint64_t v16 = v7 + v14;
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
  *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
  *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
  *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
  *(void *)(v15 + 24) = *(void *)(v7 + v14 + 24);
  uint64_t v24 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v17 = *(int *)(v24 + 36);
  __dst = (void *)(v15 + v17);
  uint64_t v18 = (const void *)(v16 + v17);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C0019244(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(__dst, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
  }
  *(void *)(v15 + *(int *)(v24 + 40)) = *(void *)(v16 + *(int *)(v24 + 40));
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
  *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
  *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
  *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
  *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C01C8658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v38 = a3;
  uint64_t v39 = a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v34 = a1;
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for GroupLayoutContext();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = v7 + v11;
  uint64_t v13 = v8 + v11;
  uint64_t v14 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v37 = (int *)v10;
  uint64_t v15 = *(int *)(v10 + 24);
  uint64_t v16 = v7 + v15;
  uint64_t v17 = v8 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(v8 + v15);
  *(unsigned char *)(v16 + 16) = *(unsigned char *)(v8 + v15 + 16);
  *(unsigned char *)(v16 + 17) = *(unsigned char *)(v8 + v15 + 17);
  *(unsigned char *)(v16 + 18) = *(unsigned char *)(v8 + v15 + 18);
  *(unsigned char *)(v16 + 19) = *(unsigned char *)(v8 + v15 + 19);
  *(unsigned char *)(v16 + 20) = *(unsigned char *)(v8 + v15 + 20);
  *(unsigned char *)(v16 + 21) = *(unsigned char *)(v8 + v15 + 21);
  *(unsigned char *)(v16 + 22) = *(unsigned char *)(v8 + v15 + 22);
  *(unsigned char *)(v16 + 23) = *(unsigned char *)(v8 + v15 + 23);
  uint64_t v18 = (unint64_t *)(v7 + v15 + 24);
  unint64_t v19 = *(void *)(v8 + v15 + 24);
  if (*v18 < 2) {
    goto LABEL_4;
  }
  if (v19 < 2)
  {
    sub_1BFF1F224((uint64_t)v18, (uint64_t (*)(void))sub_1C018B80C);
    unint64_t v19 = *(void *)(v17 + 24);
LABEL_4:
    *uint64_t v18 = v19;
    goto LABEL_6;
  }
  *uint64_t v18 = v19;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v36 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v20 = *(int *)(v36 + 36);
  uint64_t v21 = v16 + v20;
  uint64_t v22 = (const void *)(v17 + v20);
  uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v35 = v21;
  LODWORD(v21) = v25(v21, 1, v23);
  int v26 = v25((uint64_t)v22, 1, v23);
  if (v21)
  {
    if (!v26)
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v31 - 8) + 32))(v35, v22, v31);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v23);
      goto LABEL_14;
    }
    sub_1C0019244(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  else
  {
    if (!v26)
    {
      uint64_t v32 = sub_1C151B62C();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v32 - 8) + 40))(v35, v22, v32);
      goto LABEL_14;
    }
    sub_1BFF1F224(v35, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1C0019244(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
    size_t v28 = *(void *)(*(void *)(v30 - 8) + 64);
    uint64_t v29 = (void *)v35;
  }
  memcpy(v29, v22, v28);
LABEL_14:
  *(void *)(v16 + *(int *)(v36 + 40)) = *(void *)(v17 + *(int *)(v36 + 40));
  *(void *)(v7 + v37[7]) = *(void *)(v8 + v37[7]);
  *(void *)(v7 + v37[8]) = *(void *)(v8 + v37[8]);
  *(unsigned char *)(v7 + v37[9]) = *(unsigned char *)(v8 + v37[9]);
  *(void *)(v7 + v37[10]) = *(void *)(v8 + v37[10]);
  swift_release();
  *(unsigned char *)(v7 + v37[11]) = *(unsigned char *)(v8 + v37[11]);
  *(void *)(v7 + v37[12]) = *(void *)(v8 + v37[12]);
  swift_release();
  *(void *)(v34 + *(int *)(v38 + 28)) = *(void *)(v39 + *(int *)(v38 + 28));
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_1C01C8AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01C8AC8);
}

uint64_t sub_1C01C8AC8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for GroupLayoutContext();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C01C8B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01C8B8C);
}

void *sub_1C01C8B8C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for GroupLayoutContext();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C01C8C34()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C01C8CE4(uint64_t a1)
{
  uint64_t result = sub_1C01C962C(&qword_1EA197DD0, (void (*)(uint64_t))type metadata accessor for A18_V8.Bound);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C01C8D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C01C51E4(a1, a2, a3);
}

uint64_t sub_1C01C8D44(uint64_t a1)
{
  return sub_1C01C52B4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_1C01C8D4C()
{
  unint64_t result = qword_1EA197DE0;
  if (!qword_1EA197DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197DE0);
  }
  return result;
}

unint64_t sub_1C01C8DA0()
{
  unint64_t result = qword_1EA197DE8;
  if (!qword_1EA197DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197DE8);
  }
  return result;
}

uint64_t sub_1C01C8DF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1C01C75D4(a3, a1, a2, *(void *)(v4 + 16), a4);
}

uint64_t sub_1C01C8DFC()
{
  return swift_deallocObject();
}

uint64_t sub_1C01C8E0C(uint64_t a1)
{
  return sub_1C01C54A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C01C8E14(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C01C8E58(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C01C8E58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for A18_V8.Layout;
    v8[1] = &type metadata for A18_V8.Layout.Attributes;
    v8[2] = sub_1C01C8D4C();
    v8[3] = sub_1C01C8DA0();
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C01C8EDC()
{
  if (!qword_1EA197E18)
  {
    sub_1C01C95C4(255, &qword_1EA197E20, (uint64_t (*)(void))sub_1C01C8D4C, (uint64_t)&type metadata for A18_V8.Layout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197E18);
    }
  }
}

uint64_t sub_1C01C8F6C(uint64_t a1)
{
  return sub_1C01C5814(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C01C8F74(uint64_t a1)
{
  return sub_1C01C5CDC(a1, *(void *)(v1 + 16));
}

void sub_1C01C8F7C(uint64_t a1)
{
  sub_1C01C6398(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C01C8F84(uint64_t a1)
{
  return sub_1C01C6CD4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C01C8F8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C01C95C4(0, &qword_1EA197E48, (uint64_t (*)(void))sub_1C01C9570, (uint64_t)&type metadata for A18_V8.Layout.Attributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01C9570();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  type metadata accessor for CGRect(0);
  char v23 = 0;
  sub_1C01C962C(&qword_1EB87A290, type metadata accessor for CGRect);
  sub_1C15206EC();
  uint64_t v11 = v19;
  uint64_t v12 = v20;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  char v23 = 1;
  sub_1BFC86580(&qword_1EB879E00, (void (*)(void))sub_1C007AA04);
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v10 = v11;
  v10[1] = v12;
  void v10[2] = v13;
  uint64_t v10[3] = v14;
  v10[4] = v15;
  return result;
}

void sub_1C01C923C()
{
  if (!qword_1EB876240)
  {
    sub_1C0019244(255, &qword_1EB876238, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB876240);
    }
  }
}

uint64_t sub_1C01C92D0(uint64_t a1, uint64_t a2)
{
  sub_1C0019244(0, &qword_1EB876238, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01C9364(uint64_t a1)
{
  sub_1C0019244(0, &qword_1EB876238, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for A18_V8.Layout.Attributes()
{
  return &type metadata for A18_V8.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A18_V8.Layout()
{
  return &type metadata for A18_V8.Layout;
}

unint64_t sub_1C01C9414()
{
  unint64_t result = qword_1EA197E28;
  if (!qword_1EA197E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197E28);
  }
  return result;
}

unint64_t sub_1C01C946C()
{
  unint64_t result = qword_1EA197E30;
  if (!qword_1EA197E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197E30);
  }
  return result;
}

unint64_t sub_1C01C94C4()
{
  unint64_t result = qword_1EA197E38;
  if (!qword_1EA197E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197E38);
  }
  return result;
}

unint64_t sub_1C01C951C()
{
  unint64_t result = qword_1EA197E40;
  if (!qword_1EA197E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197E40);
  }
  return result;
}

unint64_t sub_1C01C9570()
{
  unint64_t result = qword_1EA197E50;
  if (!qword_1EA197E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197E50);
  }
  return result;
}

void sub_1C01C95C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C01C962C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for A18_V8.Layout.Attributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01C9740);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for A18_V8.Layout.Attributes.CodingKeys()
{
  return &type metadata for A18_V8.Layout.Attributes.CodingKeys;
}

unint64_t sub_1C01C977C()
{
  unint64_t result = qword_1EA197E60;
  if (!qword_1EA197E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197E60);
  }
  return result;
}

unint64_t sub_1C01C97D4()
{
  unint64_t result = qword_1EA197E68;
  if (!qword_1EA197E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197E68);
  }
  return result;
}

unint64_t sub_1C01C982C()
{
  unint64_t result = qword_1EA197E70;
  if (!qword_1EA197E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197E70);
  }
  return result;
}

uint64_t static UIActivityType.report.getter()
{
  return sub_1C151E5EC();
}

BOOL static PageKind.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t PageKind.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t PageKind.hashValue.getter()
{
  return sub_1C1520E0C();
}

id sub_1C01C991C()
{
  unint64_t v0 = (objc_class *)type metadata accessor for BridgedPageKind();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___NAPageKind_kind] = 0;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_1EA197E80 = (uint64_t)result;
  return result;
}

id static BridgedPageKind.anf.getter()
{
  return sub_1BFC5BA38(&qword_1EA1943B0, (void **)&qword_1EA197E80);
}

id sub_1C01C99BC()
{
  unint64_t v0 = (objc_class *)type metadata accessor for BridgedPageKind();
  uint64_t v1 = objc_allocWithZone(v0);
  v1[OBJC_IVAR___NAPageKind_kind] = 1;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = objc_msgSendSuper2(&v3, sel_init);
  qword_1EA197E88 = (uint64_t)result;
  return result;
}

id static BridgedPageKind.pdf.getter()
{
  return sub_1BFC5BA38(qword_1EA1943B8, (void **)&qword_1EA197E88);
}

id sub_1C01C9A60(uint64_t a1, uint64_t a2, void *a3, void **a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v5 = *a4;
  return v5;
}

uint64_t BridgedPageKind.kind.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR___NAPageKind_kind);
}

id BridgedPageKind.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void BridgedPageKind.init()()
{
}

id BridgedPageKind.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C01C9B90()
{
  sub_1C00520A0(0, (unint64_t *)&unk_1EB87C850, (uint64_t)&type metadata for PageKind, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned int v4 = (char *)&v6 - v3;
  sub_1C00520A0(0, (unint64_t *)&unk_1EB87C8C8, (uint64_t)&type metadata for PageKind, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87CAB8 = result;
  return result;
}

uint64_t static Commands.Articles.next.getter()
{
  return sub_1BFC387A8(&qword_1EB87C398);
}

uint64_t sub_1C01C9CF4()
{
  sub_1C00520A0(0, (unint64_t *)&unk_1EB87C850, (uint64_t)&type metadata for PageKind, MEMORY[0x1E4FAD778]);
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned int v4 = (char *)&v6 - v3;
  sub_1C00520A0(0, (unint64_t *)&unk_1EB87C8C8, (uint64_t)&type metadata for PageKind, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4FAD770], v1);
  uint64_t result = sub_1C151C9BC();
  qword_1EB87CAC0 = result;
  return result;
}

uint64_t static Commands.Articles.previous.getter()
{
  return sub_1BFC387A8(qword_1EB87CAD0);
}

uint64_t sub_1C01C9E58()
{
  uint64_t v0 = MEMORY[0x1E4FBC848] + 8;
  sub_1C00520A0(0, (unint64_t *)&qword_1EB87C870, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD778]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1C00520A0(0, (unint64_t *)&unk_1EB87C8E8, v0, MEMORY[0x1E4FAD790]);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAD770], v2);
  uint64_t result = sub_1C151C9BC();
  qword_1EA197E98 = result;
  return result;
}

uint64_t static Commands.Articles.close.getter()
{
  return sub_1BFC387A8(&qword_1EA1943C8);
}

uint64_t FeedReadStoryCommandContext.headline.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FeedReadStoryCommandContext.feedItemIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedReadStoryCommandContext.init(headline:feedItemIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t ReportConcernCompleteContext.headline.getter()
{
  return swift_unknownObjectRetain();
}

void ReportConcernCompleteContext.concernType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t ReportConcernCompleteContext.subconcern.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ReportConcernCompleteContext.init(headline:concernType:subconcern:)@<X0>(uint64_t result@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *a2;
  *(void *)a5 = result;
  *(unsigned char *)(a5 + 8) = v5;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  return result;
}

uint64_t static ContextMenuItem.readStory(headline:)(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return 0;
  }
  uint64_t v6 = qword_1EB87CAF0;
  swift_unknownObjectRetain();
  if (v6 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v8 = self;
  swift_unknownObjectRetain();
  swift_retain();
  id v9 = objc_msgSend(v8, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EA194A70 != -1) {
    swift_once();
  }
  unint64_t v10 = (void *)qword_1EA1AA2D0;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  v14[1] = a1;
  swift_allocObject();
  id v11 = v10;
  uint64_t v12 = sub_1C151A7FC();
  swift_unknownObjectRelease();
  return v12;
}

uint64_t static SwipeAction.removeFromHistory(headline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v21 = a3;
  uint64_t v20 = sub_1C151A13C();
  uint64_t v5 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C151A14C();
  uint64_t v8 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB87CAB0 != -1) {
    swift_once();
  }
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  id v11 = self;
  swift_retain();
  swift_bridgeObjectRetain();
  id v12 = objc_msgSend(v11, sel_systemRedColor);
  if (qword_1EB870738 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_1EB870558;
  id v14 = objc_msgSend(v11, sel_whiteColor);
  _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v13, v14);

  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FABC60], v19);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FABC58], v20);
  return sub_1C151A15C();
}

uint64_t static SharingActivity.report(headline:)(uint64_t a1)
{
  uint64_t v2 = sub_1C151B3AC();
  MEMORY[0x1F4188790](v2 - 8);
  if (!a1) {
    return 0;
  }
  uint64_t v3 = qword_1EB87BDF0;
  swift_unknownObjectRetain();
  if (v3 != -1) {
    swift_once();
  }
  swift_unknownObjectRetain();
  swift_retain();
  sub_1C151E5EC();
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v5 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB87C318 != -1) {
    swift_once();
  }
  id v6 = (id)qword_1EB87C308;
  sub_1C151B39C();
  swift_allocObject();
  uint64_t v7 = sub_1C151A9EC();
  swift_unknownObjectRelease();
  return v7;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE6report8headlineACSgSo19FCHeadlineProviding_pSg_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E454(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)v22 - v11;
  if (!a1) {
    return 0;
  }
  id v13 = objc_msgSend((id)swift_unknownObjectRetain(), sel_routeURL);
  if (v13)
  {
    id v14 = v13;
    sub_1C1515F1C();

    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v9, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
    {
      swift_unknownObjectRelease();
      sub_1C002F608((uint64_t)v12);
      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
  }
  sub_1C002F608((uint64_t)v12);
  if (qword_1EB87BDF0 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v17 = self;
  swift_unknownObjectRetain();
  swift_retain();
  id v18 = objc_msgSend(v17, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB87C318 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_1EB87C308;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  v22[1] = a1;
  sub_1C151A81C();
  swift_allocObject();
  id v20 = v19;
  uint64_t v15 = sub_1C151A7FC();
  swift_unknownObjectRelease();
  return v15;
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE17removeFromHistory8headlineACSS_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151B03C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB87CAB0 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  uint64_t v9 = self;
  swift_retain();
  swift_bridgeObjectRetain();
  id v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EB870738 != -1) {
    swift_once();
  }
  uint64_t v11 = (void *)qword_1EB870558;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FAC3D8], v4);
  v14[0] = a1;
  v14[1] = a2;
  sub_1C151A81C();
  swift_allocObject();
  id v12 = v11;
  return sub_1C151A7FC();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE04readG5Story7contextACSgAD0g4Readi7CommandC0V_tFZ_0(uint64_t *a1)
{
  uint64_t v2 = sub_1C151B03C();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = a1[2];
  if (qword_1EB864548 != -1) {
    swift_once();
  }
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v10 = self;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  id v11 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  if (qword_1EA194A70 != -1) {
    swift_once();
  }
  id v12 = (void *)qword_1EA1AA2D0;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAC3E0], v2);
  v15[1] = v6;
  void v15[2] = v7;
  v15[3] = v8;
  sub_1C151A81C();
  swift_allocObject();
  id v13 = v12;
  return sub_1C151A7FC();
}

unint64_t sub_1C01CB108()
{
  unint64_t result = qword_1EA197EB0;
  if (!qword_1EA197EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197EB0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PageKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01CB228);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PageKind()
{
  return &type metadata for PageKind;
}

uint64_t type metadata accessor for BridgedPageKind()
{
  return self;
}

uint64_t method lookup function for BridgedPageKind(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for BridgedPageKind);
}

ValueMetadata *type metadata accessor for Commands.Articles()
{
  return &type metadata for Commands.Articles;
}

void *assignWithCopy for FeedReadStoryCommandContext(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for FeedReadStoryCommandContext(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for ReportConcernCompleteContext()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReportConcernCompleteContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReportConcernCompleteContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ReportConcernCompleteContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C01CB4A0(void *a1)
{
  sub_1C01CBBA0(0, &qword_1EA197EB8, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = v1[2];
  uint64_t v17 = v1[3];
  uint64_t v18 = v8;
  uint64_t v9 = v1[4];
  uint64_t v15 = v1[5];
  uint64_t v16 = v9;
  uint64_t v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01CBAA0();
  sub_1C1520F0C();
  char v24 = 0;
  uint64_t v10 = v19;
  sub_1C15207CC();
  if (!v10)
  {
    uint64_t v11 = v14;
    char v23 = 1;
    sub_1C15207CC();
    char v22 = 2;
    sub_1C152074C();
    uint64_t v20 = v11;
    char v21 = 3;
    sub_1C01CBAF4();
    sub_1C01CBC04(&qword_1EA197EC0, (void (*)(void))sub_1C01CBC70);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C01CB6E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C01CBBA0(0, &qword_1EB86B820, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01CBAA0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v30 = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  char v29 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C152069C();
  uint64_t v25 = v14;
  uint64_t v22 = v13;
  uint64_t v23 = v10;
  char v28 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  uint64_t v21 = sub_1C152060C();
  uint64_t v16 = v15;
  sub_1C01CBAF4();
  char v27 = 3;
  sub_1C01CBC04((unint64_t *)&unk_1EB86B2F0, (void (*)(void))sub_1C01CBB4C);
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v18 = v26;
  swift_bridgeObjectRetain();
  uint64_t v19 = v16;
  uint64_t v20 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v18;
  *(unsigned char *)(a2 + 56) = 6;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C01CBAA0()
{
  unint64_t result = qword_1EB86AD20;
  if (!qword_1EB86AD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AD20);
  }
  return result;
}

void sub_1C01CBAF4()
{
  if (!qword_1EB86B2E8)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B2E8);
    }
  }
}

unint64_t sub_1C01CBB4C()
{
  unint64_t result = qword_1EB86AC60;
  if (!qword_1EB86AC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AC60);
  }
  return result;
}

void sub_1C01CBBA0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C01CBAA0();
    unint64_t v7 = a3(a1, &type metadata for SportsDataVisualizationResponseInjuryReportItem.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C01CBC04(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C01CBAF4();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C01CBC70()
{
  unint64_t result = qword_1EA197EC8;
  if (!qword_1EA197EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197EC8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsDataVisualizationResponseInjuryReportItem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01CBD90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseInjuryReportItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseInjuryReportItem.CodingKeys;
}

uint64_t initializeWithCopy for SportsDataVisualizationResponseInjuryReportItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SportsDataVisualizationResponseInjuryReportItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for SportsDataVisualizationResponseInjuryReportItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsDataVisualizationResponseInjuryReportItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseInjuryReportItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseInjuryReportItem()
{
  return &type metadata for SportsDataVisualizationResponseInjuryReportItem;
}

uint64_t sub_1C01CC000()
{
  uint64_t result = 0x6E6F6E6143636D75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6449746E657665;
      break;
    case 2:
      uint64_t result = 0x615465756761656CLL;
      break;
    case 3:
      uint64_t result = 0x53617461446C7275;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C01CC0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C01CC288(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C01CC0D8(uint64_t a1)
{
  unint64_t v2 = sub_1C01CBAA0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C01CC114(uint64_t a1)
{
  unint64_t v2 = sub_1C01CBAA0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C01CC150@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C01CB6E8(a1, a2);
}

uint64_t sub_1C01CC168(void *a1)
{
  return sub_1C01CB4A0(a1);
}

unint64_t sub_1C01CC184()
{
  unint64_t result = qword_1EA197ED0;
  if (!qword_1EA197ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197ED0);
  }
  return result;
}

unint64_t sub_1C01CC1DC()
{
  unint64_t result = qword_1EB86AD30;
  if (!qword_1EB86AD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AD30);
  }
  return result;
}

unint64_t sub_1C01CC234()
{
  unint64_t result = qword_1EB86AD28;
  if (!qword_1EB86AD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AD28);
  }
  return result;
}

uint64_t sub_1C01CC288(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6E6143636D75 && a2 == 0xEE0064496C616369;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449746E657665 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615465756761656CLL && a2 == 0xEB00000000644967 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x53617461446C7275 && a2 == 0xEE0073656372756FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void FormatParagraphStyle.alignment.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FormatParagraphStyle.firstLineHeadIndent.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t FormatParagraphStyle.headIndent.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t FormatParagraphStyle.tailIndent.getter()
{
  return *(void *)(v0 + 40);
}

void FormatParagraphStyle.lineBreakMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 49);
}

void FormatParagraphStyle.lineBreakStrategy.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 50);
}

uint64_t FormatParagraphStyle.maximumLineHeight.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t FormatParagraphStyle.minimumLineHeight.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t FormatParagraphStyle.lineSpacing.getter()
{
  return *(void *)(v0 + 88);
}

uint64_t FormatParagraphStyle.paragraphSpacing.getter()
{
  return *(void *)(v0 + 104);
}

uint64_t FormatParagraphStyle.paragraphSpacingBefore.getter()
{
  return *(void *)(v0 + 120);
}

uint64_t FormatParagraphStyle.lineHeightMultiple.getter()
{
  return *(void *)(v0 + 136);
}

uint64_t FormatParagraphStyle.minimumLineHeightMultiple.getter()
{
  return *(void *)(v0 + 152);
}

uint64_t FormatParagraphStyle.defaultTabInterval.getter()
{
  return *(void *)(v0 + 168);
}

uint64_t FormatParagraphStyle.hyphenationFactor.getter()
{
  return *(void *)(v0 + 184);
}

uint64_t FormatParagraphStyle.allowsDefaultTighteningForTruncation.getter()
{
  return *(unsigned __int8 *)(v0 + 193);
}

uint64_t FormatParagraphStyle.init(alignment:firstLineHeadIndent:headIndent:tailIndent:lineBreakMode:lineBreakStrategy:maximumLineHeight:minimumLineHeight:lineSpacing:paragraphSpacing:paragraphSpacingBefore:lineHeightMultiple:minimumLineHeightMultiple:defaultTabInterval:hyphenationFactor:allowsDefaultTighteningForTruncation:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, char *a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,char a29)
{
  char v29 = *a8;
  char v30 = *a10;
  *(unsigned char *)a9 = *a1;
  *(void *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 16) = a3 & 1;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5 & 1;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = a7 & 1;
  *(unsigned char *)(a9 + 49) = v29;
  *(unsigned char *)(a9 + 50) = v30;
  *(void *)(a9 + 56) = a11;
  uint64_t result = a12 & 1;
  *(unsigned char *)(a9 + 64) = a12 & 1;
  *(void *)(a9 + 72) = a13;
  *(unsigned char *)(a9 + 80) = a14 & 1;
  *(void *)(a9 + 88) = a15;
  *(unsigned char *)(a9 + 96) = a16 & 1;
  *(void *)(a9 + 104) = a17;
  *(unsigned char *)(a9 + 112) = a18 & 1;
  *(void *)(a9 + 120) = a19;
  *(unsigned char *)(a9 + 128) = a20 & 1;
  *(void *)(a9 + 136) = a21;
  *(unsigned char *)(a9 + 144) = a22 & 1;
  *(void *)(a9 + 152) = a23;
  *(unsigned char *)(a9 + 160) = a24 & 1;
  *(void *)(a9 + 168) = a25;
  *(unsigned char *)(a9 + 176) = a26 & 1;
  *(void *)(a9 + 184) = a27;
  *(unsigned char *)(a9 + 192) = a28 & 1;
  *(unsigned char *)(a9 + 193) = a29;
  return result;
}

uint64_t _s8NewsFeed20FormatParagraphStyleV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  int v4 = *(unsigned __int8 *)a1;
  double v5 = a1[1];
  double v6 = a1[3];
  unsigned __int8 v186 = *((unsigned char *)a1 + 32);
  unsigned __int8 v187 = *((unsigned char *)a1 + 16);
  double v7 = a1[5];
  unsigned __int8 v8 = *((unsigned char *)a1 + 48);
  int v9 = *((unsigned __int8 *)a1 + 49);
  int v10 = *((unsigned __int8 *)a1 + 50);
  double v11 = a1[7];
  unsigned __int8 v12 = *((unsigned char *)a1 + 64);
  double v13 = a1[9];
  unsigned __int8 v14 = *((unsigned char *)a1 + 80);
  double v15 = a1[11];
  unsigned __int8 v16 = *((unsigned char *)a1 + 96);
  double v17 = a1[13];
  unsigned __int8 v18 = *((unsigned char *)a1 + 112);
  double v19 = a1[15];
  unsigned __int8 v20 = *((unsigned char *)a1 + 128);
  double v21 = a1[17];
  unsigned __int8 v22 = *((unsigned char *)a1 + 144);
  double v23 = a1[19];
  unsigned __int8 v24 = *((unsigned char *)a1 + 160);
  double v25 = a1[21];
  unsigned __int8 v26 = *((unsigned char *)a1 + 176);
  double v27 = a1[23];
  unsigned __int8 v28 = *((unsigned char *)a1 + 192);
  int v29 = *((unsigned __int8 *)a1 + 193);
  int v30 = *(unsigned __int8 *)a2;
  double v31 = a2[1];
  int v32 = *((unsigned __int8 *)a2 + 16);
  double v33 = a2[3];
  int v185 = *((unsigned __int8 *)a2 + 32);
  double v34 = a2[5];
  int v184 = *((unsigned __int8 *)a2 + 48);
  int v35 = *((unsigned __int8 *)a2 + 49);
  int v36 = *((unsigned __int8 *)a2 + 50);
  double v37 = a2[7];
  int v38 = *((unsigned __int8 *)a2 + 64);
  double v39 = a2[9];
  int v40 = *((unsigned __int8 *)a2 + 80);
  double v41 = a2[11];
  int v42 = *((unsigned __int8 *)a2 + 96);
  double v43 = a2[13];
  int v44 = *((unsigned __int8 *)a2 + 112);
  double v45 = a2[15];
  int v46 = *((unsigned __int8 *)a2 + 128);
  double v47 = a2[17];
  int v48 = *((unsigned __int8 *)a2 + 144);
  double v49 = a2[19];
  int v50 = *((unsigned __int8 *)a2 + 160);
  double v51 = a2[21];
  int v52 = *((unsigned __int8 *)a2 + 176);
  double v53 = a2[23];
  int v54 = *((unsigned __int8 *)a2 + 192);
  int v55 = *((unsigned __int8 *)a2 + 193);
  if (v4 == 5)
  {
    if (v30 != 5) {
      return 0;
    }
  }
  else
  {
    if (v30 == 5) {
      return 0;
    }
    int v115 = *((unsigned __int8 *)a2 + 193);
    unsigned __int8 v56 = v28;
    int v57 = v29;
    double v110 = a2[23];
    double v111 = v21;
    double v114 = v19;
    double v112 = a2[21];
    double v116 = v17;
    double v178 = a2[19];
    double v172 = v15;
    double v163 = v13;
    double v166 = a2[17];
    double v157 = a2[15];
    double v151 = v11;
    double v145 = a2[13];
    double v136 = a2[11];
    double v130 = a2[9];
    double v124 = a2[7];
    double v109 = v23;
    double v58 = v25;
    double v59 = v27;
    int v120 = *((unsigned __int8 *)a2 + 50);
    unsigned __int8 v122 = v22;
    unsigned __int8 v60 = v20;
    int v181 = *((unsigned __int8 *)a2 + 160);
    unsigned __int8 v175 = v18;
    int v127 = *((unsigned __int8 *)a2 + 64);
    int v169 = *((unsigned __int8 *)a2 + 144);
    unsigned __int8 v117 = v16;
    int v160 = *((unsigned __int8 *)a2 + 128);
    unsigned __int8 v154 = v14;
    int v148 = *((unsigned __int8 *)a2 + 112);
    int v139 = *((unsigned __int8 *)a2 + 96);
    unsigned __int8 v142 = v12;
    int v133 = *((unsigned __int8 *)a2 + 80);
    int v61 = *((unsigned __int8 *)a2 + 192);
    unsigned __int8 v113 = v8;
    int v62 = v10;
    unsigned __int8 v63 = v24;
    unsigned __int8 v64 = v26;
    int v65 = v9;
    double v66 = a2[5];
    char v67 = sub_1C14891FC(v4, v30);
    double v34 = v66;
    int v9 = v65;
    unsigned __int8 v26 = v64;
    unsigned __int8 v24 = v63;
    int v10 = v62;
    unsigned __int8 v8 = v113;
    int v54 = v61;
    int v40 = v133;
    int v42 = v139;
    unsigned __int8 v12 = v142;
    int v44 = v148;
    unsigned __int8 v14 = v154;
    int v46 = v160;
    unsigned __int8 v16 = v117;
    int v48 = v169;
    int v38 = v127;
    unsigned __int8 v18 = v175;
    int v50 = v181;
    unsigned __int8 v20 = v60;
    int v36 = v120;
    unsigned __int8 v22 = v122;
    double v27 = v59;
    double v25 = v58;
    double v23 = v109;
    double v53 = v110;
    double v37 = v124;
    double v39 = v130;
    double v41 = v136;
    double v43 = v145;
    double v11 = v151;
    double v45 = v157;
    double v13 = v163;
    double v47 = v166;
    double v15 = v172;
    double v49 = v178;
    double v17 = v116;
    double v21 = v111;
    double v51 = v112;
    double v19 = v114;
    int v29 = v57;
    unsigned __int8 v28 = v56;
    int v55 = v115;
    if ((v67 & 1) == 0) {
      return 0;
    }
  }
  if (v187)
  {
    if (!v32) {
      return 0;
    }
  }
  else
  {
    if (v5 == v31) {
      char v68 = v32;
    }
    else {
      char v68 = 1;
    }
    if (v68) {
      return 0;
    }
  }
  if (v186)
  {
    if (!v185) {
      return 0;
    }
  }
  else
  {
    char v69 = v185;
    if (v6 != v33) {
      char v69 = 1;
    }
    if (v69) {
      return 0;
    }
  }
  if (v8)
  {
    if (!v184) {
      return 0;
    }
  }
  else
  {
    char v70 = v184;
    if (v7 != v34) {
      char v70 = 1;
    }
    if (v70) {
      return 0;
    }
  }
  if (v9 == 6)
  {
    if (v35 != 6) {
      return 0;
    }
  }
  else
  {
    if (v35 == 6) {
      return 0;
    }
    int v71 = v29;
    double v72 = v21;
    double v73 = v53;
    double v74 = v51;
    double v75 = v17;
    double v179 = v49;
    double v173 = v15;
    double v164 = v13;
    double v167 = v47;
    double v158 = v45;
    double v152 = v11;
    double v146 = v43;
    double v137 = v41;
    double v131 = v39;
    double v125 = v37;
    double v76 = v23;
    double v77 = v25;
    double v78 = v27;
    int v121 = v36;
    unsigned __int8 v123 = v22;
    unsigned __int8 v79 = v20;
    int v182 = v50;
    int v128 = v38;
    unsigned __int8 v176 = v18;
    int v170 = v48;
    unsigned __int8 v80 = v16;
    int v161 = v46;
    unsigned __int8 v155 = v14;
    int v149 = v44;
    int v140 = v42;
    unsigned __int8 v143 = v12;
    int v134 = v40;
    int v81 = v54;
    int v82 = v10;
    unsigned __int8 v83 = v26;
    char v84 = sub_1C1488FB0(v9, v35);
    unsigned __int8 v26 = v83;
    int v10 = v82;
    int v54 = v81;
    int v40 = v134;
    int v42 = v140;
    unsigned __int8 v12 = v143;
    int v44 = v149;
    unsigned __int8 v14 = v155;
    int v46 = v161;
    unsigned __int8 v16 = v80;
    int v48 = v170;
    unsigned __int8 v18 = v176;
    int v38 = v128;
    int v50 = v182;
    unsigned __int8 v20 = v79;
    int v36 = v121;
    unsigned __int8 v22 = v123;
    double v27 = v78;
    double v25 = v77;
    double v23 = v76;
    double v37 = v125;
    double v39 = v131;
    double v41 = v137;
    double v43 = v146;
    double v11 = v152;
    double v45 = v158;
    double v13 = v164;
    double v47 = v167;
    double v15 = v173;
    double v49 = v179;
    double v17 = v75;
    double v51 = v74;
    double v53 = v73;
    double v21 = v72;
    int v29 = v71;
    if ((v84 & 1) == 0) {
      return 0;
    }
  }
  if (v10 == 3)
  {
    if (v36 != 3) {
      return 0;
    }
LABEL_48:
    if (v12)
    {
      if (!v38) {
        return 0;
      }
    }
    else
    {
      if (v11 == v37) {
        char v100 = v38;
      }
      else {
        char v100 = 1;
      }
      if (v100) {
        return 0;
      }
    }
    if (v14)
    {
      if (!v40) {
        return 0;
      }
    }
    else
    {
      if (v13 == v39) {
        char v101 = v40;
      }
      else {
        char v101 = 1;
      }
      if (v101) {
        return 0;
      }
    }
    if (v16)
    {
      if (!v42) {
        return 0;
      }
    }
    else
    {
      if (v15 == v41) {
        char v102 = v42;
      }
      else {
        char v102 = 1;
      }
      if (v102) {
        return 0;
      }
    }
    if (v18)
    {
      if (!v44) {
        return 0;
      }
    }
    else
    {
      if (v17 == v43) {
        char v103 = v44;
      }
      else {
        char v103 = 1;
      }
      if (v103) {
        return 0;
      }
    }
    if (v20)
    {
      if (!v46) {
        return 0;
      }
    }
    else
    {
      if (v19 == v45) {
        char v104 = v46;
      }
      else {
        char v104 = 1;
      }
      if (v104) {
        return 0;
      }
    }
    if (v22)
    {
      if (!v48) {
        return 0;
      }
    }
    else
    {
      if (v21 == v47) {
        char v105 = v48;
      }
      else {
        char v105 = 1;
      }
      if (v105) {
        return 0;
      }
    }
    if (v24)
    {
      if (!v50) {
        return 0;
      }
    }
    else
    {
      if (v23 == v49) {
        char v106 = v50;
      }
      else {
        char v106 = 1;
      }
      if (v106) {
        return 0;
      }
    }
    if (v26)
    {
      if (!v52) {
        return 0;
      }
    }
    else
    {
      if (v25 == v51) {
        char v107 = v52;
      }
      else {
        char v107 = 1;
      }
      if (v107) {
        return 0;
      }
    }
    if (v28)
    {
      if (!v54) {
        return 0;
      }
    }
    else
    {
      if (v27 == v53) {
        char v108 = v54;
      }
      else {
        char v108 = 1;
      }
      if (v108) {
        return 0;
      }
    }
    if (v29 == 2)
    {
      if (v55 != 2) {
        return 0;
      }
    }
    else if (v55 == 2 || ((((v29 & 1) == 0) ^ v55) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (v36 != 3)
  {
    int v119 = v52;
    unint64_t v85 = 0x80000001C1600D50;
    unint64_t v86 = 0xD000000000000012;
    int v87 = v54;
    if (v10)
    {
      if (v10 == 1)
      {
        unint64_t v88 = 0xE700000000000000;
        unint64_t v89 = 0x74754F68737570;
      }
      else
      {
        unint64_t v88 = 0xE800000000000000;
        unint64_t v89 = 0x647261646E617473;
      }
    }
    else
    {
      unint64_t v89 = 0xD000000000000012;
      unint64_t v88 = 0x80000001C1600D50;
    }
    int v183 = v50;
    double v180 = v49;
    unsigned __int8 v177 = v18;
    double v174 = v15;
    int v171 = v48;
    double v165 = v13;
    double v168 = v47;
    unsigned __int8 v118 = v16;
    int v162 = v46;
    double v159 = v45;
    unsigned __int8 v156 = v14;
    double v153 = v11;
    int v150 = v44;
    double v147 = v43;
    int v141 = v42;
    unsigned __int8 v144 = v12;
    double v138 = v41;
    int v135 = v40;
    double v132 = v39;
    int v129 = v38;
    double v126 = v37;
    double v90 = v17;
    unsigned __int8 v91 = v20;
    double v92 = v51;
    if (v36)
    {
      if (v36 == 1)
      {
        unsigned __int8 v93 = v22;
        double v94 = v53;
        double v95 = v21;
        unint64_t v85 = 0xE700000000000000;
        unint64_t v86 = 0x74754F68737570;
      }
      else
      {
        unsigned __int8 v93 = v22;
        double v94 = v53;
        double v95 = v21;
        unint64_t v85 = 0xE800000000000000;
        unint64_t v86 = 0x647261646E617473;
      }
    }
    else
    {
      unsigned __int8 v93 = v22;
      double v94 = v53;
      double v95 = v21;
    }
    unsigned __int8 v96 = v26;
    double v97 = v27;
    int v98 = v29;
    if (v89 == v86 && v88 == v85)
    {
      swift_bridgeObjectRelease_n();
      int v29 = v98;
      double v27 = v97;
      unsigned __int8 v26 = v96;
      double v21 = v95;
      int v54 = v87;
      double v53 = v94;
      unsigned __int8 v22 = v93;
      unsigned __int8 v16 = v118;
      int v52 = v119;
      double v51 = v92;
      unsigned __int8 v20 = v91;
      double v17 = v90;
      int v50 = v183;
      double v49 = v180;
      unsigned __int8 v18 = v177;
      double v15 = v174;
      int v48 = v171;
      double v13 = v165;
      double v47 = v168;
      int v46 = v162;
      double v45 = v159;
      unsigned __int8 v14 = v156;
      double v11 = v153;
      int v44 = v150;
      double v43 = v147;
      int v42 = v141;
      unsigned __int8 v12 = v144;
      double v41 = v138;
      int v40 = v135;
      double v39 = v132;
      int v38 = v129;
      double v37 = v126;
    }
    else
    {
      char v188 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      int v29 = v98;
      double v27 = v97;
      unsigned __int8 v26 = v96;
      double v21 = v95;
      int v54 = v87;
      double v53 = v94;
      unsigned __int8 v22 = v93;
      unsigned __int8 v16 = v118;
      int v52 = v119;
      double v51 = v92;
      unsigned __int8 v20 = v91;
      double v17 = v90;
      int v50 = v183;
      double v49 = v180;
      unsigned __int8 v18 = v177;
      double v15 = v174;
      int v48 = v171;
      double v13 = v165;
      double v47 = v168;
      int v46 = v162;
      double v45 = v159;
      unsigned __int8 v14 = v156;
      double v11 = v153;
      int v44 = v150;
      double v43 = v147;
      int v42 = v141;
      unsigned __int8 v12 = v144;
      double v41 = v138;
      int v40 = v135;
      double v39 = v132;
      int v38 = v129;
      double v37 = v126;
      if ((v188 & 1) == 0) {
        return result;
      }
    }
    goto LABEL_48;
  }
  return 0;
}

unint64_t sub_1C01CCEEC(uint64_t a1)
{
  unint64_t result = sub_1C01CCF14();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01CCF14()
{
  unint64_t result = qword_1EA197ED8;
  if (!qword_1EA197ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197ED8);
  }
  return result;
}

unint64_t sub_1C01CCF68(void *a1)
{
  a1[1] = sub_1BFE942F4();
  a1[2] = sub_1BFE798B0();
  unint64_t result = sub_1C01CCFA0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C01CCFA0()
{
  unint64_t result = qword_1EA197EE0;
  if (!qword_1EA197EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197EE0);
  }
  return result;
}

__n128 __swift_memcpy194_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatParagraphStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 194)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 193);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

ValueMetadata *type metadata accessor for FormatParagraphStyle()
{
  return &type metadata for FormatParagraphStyle;
}

void *sub_1C01CD0A8(uint64_t a1)
{
  sub_1C01CDA1C(a1, (uint64_t)v84);
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E334(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C1529AE0;
  sub_1BFF9E334(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v1);
  sub_1C0181BEC(0);
  uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 72);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1531C20;
  long long v7 = (void *)(v6 + v5);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v85);
  if (sub_1C01CDAD8((uint64_t)v85) == 1) {
    unsigned __int8 v8 = 5;
  }
  else {
    unsigned __int8 v8 = v85[0];
  }
  sub_1C0434DD0(0x6E656D6E67696C41, 0xE900000000000074, v8, v7);
  uint64_t v9 = type metadata accessor for FormatInspectionItem(0);
  long long v10 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v7, 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v79);
  int v11 = sub_1C01CDAD8((uint64_t)v79);
  if (v11 == 1) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = v80;
  }
  sub_1C042F1BC(0xD000000000000016, 0x80000001C1606970, v12, (v11 == 1) | v81 & 1, (void *)((char *)v7 + v4));
  v10((void *)((char *)v7 + v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v76);
  int v13 = sub_1C01CDAD8((uint64_t)v76);
  if (v13 == 1) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = v77;
  }
  sub_1C042F1BC(0x646E492064616548, 0xEB00000000746E65, v14, (v13 == 1) | v78 & 1, (void *)((char *)v7 + 2 * v4));
  v10((void *)((char *)v7 + 2 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v73);
  int v15 = sub_1C01CDAD8((uint64_t)v73);
  if (v15 == 1) {
    uint64_t v16 = 0;
  }
  else {
    uint64_t v16 = v74;
  }
  sub_1C042F1BC(0x646E49206C696154, 0xEB00000000746E65, v16, (v15 == 1) | v75 & 1, (void *)((char *)v7 + 3 * v4));
  v10((void *)((char *)v7 + 3 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v72);
  if (sub_1C01CDAD8((uint64_t)v72) == 1) {
    unsigned __int8 v17 = 6;
  }
  else {
    unsigned __int8 v17 = v72[49];
  }
  sub_1C04350F4(0x65724220656E694CLL, 0xEF65646F4D206B61, v17, (void *)((char *)v7 + 4 * v4));
  v10((void *)((char *)v7 + 4 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v71);
  if (sub_1C01CDAD8((uint64_t)v71) == 1) {
    unsigned __int8 v18 = 3;
  }
  else {
    unsigned __int8 v18 = v71[50];
  }
  sub_1C0435440(0xD000000000000013, 0x80000001C1606990, v18, (void *)((char *)v7 + 5 * v4));
  v10((void *)((char *)v7 + 5 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v68);
  int v19 = sub_1C01CDAD8((uint64_t)v68);
  if (v19 == 1) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = v69;
  }
  sub_1C042F1BC(0xD000000000000013, 0x80000001C16069B0, v20, (v19 == 1) | v70 & 1, (void *)((char *)v7 + 6 * v4));
  v10((void *)((char *)v7 + 6 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v65);
  int v21 = sub_1C01CDAD8((uint64_t)v65);
  if (v21 == 1) {
    uint64_t v22 = 0;
  }
  else {
    uint64_t v22 = v66;
  }
  uint64_t v23 = v4;
  sub_1C042F1BC(0xD000000000000013, 0x80000001C16069D0, v22, (v21 == 1) | v67 & 1, (void *)((char *)v7 + 7 * v4));
  v10((void *)((char *)v7 + 7 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v62);
  int v24 = sub_1C01CDAD8((uint64_t)v62);
  if (v24 == 1) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = v63;
  }
  sub_1C042F1BC(0x61705320656E694CLL, 0xEC000000676E6963, v25, (v24 == 1) | v64 & 1, &v7[v23]);
  v10(&v7[v23], 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v59);
  int v26 = sub_1C01CDAD8((uint64_t)v59);
  if (v26 == 1) {
    uint64_t v27 = 0;
  }
  else {
    uint64_t v27 = v60;
  }
  sub_1C042F1BC(0xD000000000000011, 0x80000001C16069F0, v27, (v26 == 1) | v61 & 1, (void *)((char *)v7 + 9 * v4));
  v10((void *)((char *)v7 + 9 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v56);
  int v28 = sub_1C01CDAD8((uint64_t)v56);
  if (v28 == 1) {
    uint64_t v29 = 0;
  }
  else {
    uint64_t v29 = v57;
  }
  sub_1C042F1BC(0xD000000000000018, 0x80000001C1606A10, v29, (v28 == 1) | v58 & 1, (void *)((char *)v7 + 10 * v4));
  v10((void *)((char *)v7 + 10 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v53);
  int v30 = sub_1C01CDAD8((uint64_t)v53);
  if (v30 == 1) {
    uint64_t v31 = 0;
  }
  else {
    uint64_t v31 = v54;
  }
  sub_1C042F1BC(0xD000000000000014, 0x80000001C1606A30, v31, (v30 == 1) | v55 & 1, (void *)((char *)v7 + 11 * v4));
  v10((void *)((char *)v7 + 11 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v50);
  int v32 = sub_1C01CDAD8((uint64_t)v50);
  if (v32 == 1) {
    uint64_t v33 = 0;
  }
  else {
    uint64_t v33 = v51;
  }
  sub_1C042F1BC(0xD00000000000001CLL, 0x80000001C1606A50, v33, (v32 == 1) | v52 & 1, (void *)((char *)v7 + 12 * v4));
  v10((void *)((char *)v7 + 12 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v47);
  int v34 = sub_1C01CDAD8((uint64_t)v47);
  if (v34 == 1) {
    uint64_t v35 = 0;
  }
  else {
    uint64_t v35 = v48;
  }
  sub_1C042F1BC(0xD000000000000014, 0x80000001C1606A70, v35, (v34 == 1) | v49 & 1, (void *)((char *)v7 + 13 * v4));
  v10((void *)((char *)v7 + 13 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v44);
  int v36 = sub_1C01CDAD8((uint64_t)v44);
  if (v36 == 1) {
    uint64_t v37 = 0;
  }
  else {
    uint64_t v37 = v45;
  }
  sub_1C042F1BC(0xD000000000000012, 0x80000001C1606A90, v37, (v36 == 1) | v46 & 1, (void *)((char *)v7 + 14 * v4));
  v10((void *)((char *)v7 + 14 * v4), 0, 1, v9);
  sub_1C01CDA1C((uint64_t)v84, (uint64_t)v43);
  if (sub_1C01CDAD8((uint64_t)v43) == 1) {
    char v38 = 2;
  }
  else {
    char v38 = v43[193];
  }
  sub_1C0432B74(0xD000000000000028, 0x80000001C1606AB0, v38, (void *)((char *)v7 + 15 * v4));
  v10((void *)((char *)v7 + 15 * v4), 0, 1, v9);
  sub_1C09BCFA4(0x7061726761726150, 0xE900000000000068, 0, 0, v6, v82);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(v2 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v2 + 64) = &off_1F1BDEC90;
  uint64_t v39 = swift_allocObject();
  *(void *)(v2 + 32) = v39;
  long long v40 = v82[1];
  *(_OWORD *)(v39 + 16) = v82[0];
  *(_OWORD *)(v39 + 32) = v40;
  *(void *)(v39 + 48) = v83;
  double v41 = sub_1C131B79C(v2);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v41;
}

uint64_t sub_1C01CDA1C(uint64_t a1, uint64_t a2)
{
  sub_1C01CDA80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C01CDA80()
{
  if (!qword_1EB876CA0)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB876CA0);
    }
  }
}

uint64_t sub_1C01CDAD8(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 193);
  if (v1 >= 2) {
    int v2 = ((v1 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v2 = -2;
  }
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C01CDB08()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C01CDB50()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  long long v7 = (uint64_t *)((char *)&v33 - v6);
  uint64_t v8 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1F4188790](v8);
  long long v10 = (id *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C01CE650(v1, (uint64_t)v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C01CE6B4((uint64_t)v10, (uint64_t)v4);
      unint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      unint64_t v35 = 0xD000000000000011;
      unint64_t v36 = 0x80000001C1606AE0;
      uint64_t v24 = v4[3];
      uint64_t v25 = v4[4];
      __swift_project_boxed_opaque_existential_1(v4, v24);
      int v26 = *(void **)((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25) + 16);
      swift_bridgeObjectRelease();
      int v34 = v26;
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      unint64_t v22 = v35;
      uint64_t v27 = (uint64_t)v4;
      goto LABEL_9;
    case 2u:

      sub_1BFFD07D8((uint64_t)v10);
      unint64_t v22 = 0xD00000000000001ALL;
      break;
    case 3u:
      id v23 = v10[37];
      unint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      int v34 = v23;
      sub_1C017F734();
      sub_1C152036C();

      unint64_t v22 = v35;
      sub_1BFFD07D8((uint64_t)v10);
      break;
    default:
      sub_1C01CE6B4((uint64_t)v10, (uint64_t)v7);
      int v11 = (void *)((char *)v7 + *(int *)(v2 + 24));
      uint64_t v12 = v11[4];
      uint64_t v13 = v11[5];
      __swift_project_boxed_opaque_existential_1(v11 + 1, v12);
      uint64_t v14 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13) + 16);
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)((char *)v7 + *(int *)(v2 + 28) + 40);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v16 = *(void *)(sub_1C0AC6F70(v15) + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unsigned __int8 v17 = (void *)(v14 - v16);
      unint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      sub_1C15200FC();
      if (v14 == v16)
      {
        swift_bridgeObjectRelease();
        unint64_t v35 = 0x74756F206469614CLL;
        unint64_t v36 = 0xE900000000000020;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        unsigned __int8 v18 = *(void **)(sub_1C0AC6F70(v15) + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v34 = v18;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        uint64_t v19 = v7[3];
        uint64_t v20 = v7[4];
        __swift_project_boxed_opaque_existential_1(v7, v19);
        int v21 = *(void **)((*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20) + 16);
        swift_bridgeObjectRelease();
        int v34 = v21;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
      }
      else
      {
        sub_1C151E80C();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        int v28 = *(void **)(sub_1C0AC6F70(v15) + 16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v34 = v28;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        uint64_t v29 = v7[3];
        uint64_t v30 = v7[4];
        __swift_project_boxed_opaque_existential_1(v7, v29);
        uint64_t v31 = *(void **)((*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30) + 16);
        swift_bridgeObjectRelease();
        int v34 = v31;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        int v34 = v17;
        sub_1C152088C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
      }
      unint64_t v22 = v35;
      uint64_t v27 = (uint64_t)v7;
LABEL_9:
      sub_1C01CE718(v27, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
      break;
  }
  return v22;
}

uint64_t sub_1C01CE1A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1F4188790](v5);
  long long v7 = (id *)&v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  long long v10 = (id *)&v15[-v9];
  sub_1C01CE650(v1, (uint64_t)&v15[-v9]);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C01CE718((uint64_t)v10, type metadata accessor for DebugFormatTestCaseResult.Result);
      uint64_t v11 = 4;
      break;
    case 2u:

      sub_1BFFD07D8((uint64_t)v10);
      uint64_t v11 = 1;
      break;
    case 3u:

      sub_1BFFD07D8((uint64_t)v10);
      uint64_t v11 = 0;
      break;
    default:
      sub_1C01CE650(v1, (uint64_t)v7);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_1C01CE718((uint64_t)v7, type metadata accessor for DebugFormatTestCaseResult.Result);
          goto LABEL_11;
        case 2u:
        case 3u:

          sub_1BFFD07D8((uint64_t)v7);
LABEL_11:
          uint64_t v11 = 4;
          break;
        default:
          sub_1C01CE6B4((uint64_t)v7, (uint64_t)v4);
          uint64_t v12 = *(void *)&v4[*(int *)(v2 + 28) + 40];
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v13 = *(void *)(sub_1C0AC6F70(v12) + 16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C01CE718((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
          if (v13) {
            uint64_t v11 = 2;
          }
          else {
            uint64_t v11 = 4;
          }
          break;
      }
      sub_1C01CE718((uint64_t)v10, type metadata accessor for DebugFormatTestCaseResult.Result);
      break;
  }
  return v11;
}

uint64_t sub_1C01CE464()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1F4188790](v5);
  long long v7 = (id *)&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C01CE650(v1, (uint64_t)v7);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C01CE718((uint64_t)v7, type metadata accessor for DebugFormatTestCaseResult.Result);
      goto LABEL_5;
    case 2u:
    case 3u:

      sub_1BFFD07D8((uint64_t)v7);
LABEL_5:
      uint64_t v9 = 0;
      break;
    default:
      sub_1C01CE6B4((uint64_t)v7, (uint64_t)v4);
      uint64_t v8 = *(void *)&v4[*(int *)(v2 + 28) + 40];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v9 = *(void *)(sub_1C0AC6F70(v8) + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C01CE718((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
      break;
  }
  return v9;
}

uint64_t type metadata accessor for DebugFormatTestCaseResult.Result(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA197EE8);
}

uint64_t sub_1C01CE650(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01CE6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugFormatTestCaseLayout();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01CE718(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C01CE778@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DebugFormatTestCaseLayout();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (id *)&v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1C01CE650(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() - 2 >= 2)
  {
    sub_1C01CE6B4((uint64_t)v9, (uint64_t)v6);
    uint64_t v11 = v6[3];
    uint64_t v12 = v6[4];
    __swift_project_boxed_opaque_existential_1(v6, v11);
    sub_1BFFFABA8(v11, v12);
    return sub_1C01CE718((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DebugFormatTestCaseLayout);
  }
  else
  {

    memcpy(v14, v9, sizeof(v14));
    *a1 = v14[48];
    return sub_1BFFD07D8((uint64_t)v14);
  }
}

uint64_t sub_1C01CE8F0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *(void *)a1 = *a2;
    a1 = v26 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        long long v32 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v32;
        (**(void (***)(uint64_t, uint64_t *))(v32 - 8))(a1, a2);
        unsigned __int8 v118 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
        uint64_t v33 = v118[5];
        uint64_t v34 = a1 + v33;
        uint64_t v35 = (uint64_t)a2 + v33;
        uint64_t v36 = sub_1C151772C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        uint64_t v37 = (int *)type metadata accessor for GroupLayoutContext();
        uint64_t v38 = v37[5];
        uint64_t v39 = v34 + v38;
        uint64_t v40 = v35 + v38;
        uint64_t v41 = sub_1C151757C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
        uint64_t v42 = v37[6];
        uint64_t v43 = v34 + v42;
        uint64_t v44 = v35 + v42;
        *(_OWORD *)uint64_t v43 = *(_OWORD *)(v35 + v42);
        *(unsigned char *)(v43 + 16) = *(unsigned char *)(v35 + v42 + 16);
        *(_WORD *)(v43 + 17) = *(_WORD *)(v35 + v42 + 17);
        *(unsigned char *)(v43 + 19) = *(unsigned char *)(v35 + v42 + 19);
        *(_DWORD *)(v43 + 20) = *(_DWORD *)(v35 + v42 + 20);
        unint64_t v45 = *(void *)(v35 + v42 + 24);
        if (v45 >= 2) {
          unint64_t v45 = swift_bridgeObjectRetain();
        }
        *(void *)(v43 + 24) = v45;
        uint64_t v46 = type metadata accessor for FeedLayoutSolverOptions(0);
        uint64_t v47 = *(int *)(v46 + 36);
        uint64_t v114 = v46;
        __dsta = (void *)(v43 + v47);
        uint64_t v48 = (const void *)(v44 + v47);
        uint64_t v49 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        uint64_t v50 = *(void *)(v49 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
        {
          sub_1C01BB2C0();
          memcpy(__dsta, v48, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          uint64_t v73 = sub_1C151B62C();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v73 - 8) + 16))(__dsta, v48, v73);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(__dsta, 0, 1, v49);
        }
        *(void *)(v43 + *(int *)(v114 + 40)) = *(void *)(v44 + *(int *)(v114 + 40));
        *(void *)(v34 + v37[7]) = *(void *)(v35 + v37[7]);
        *(void *)(v34 + v37[8]) = *(void *)(v35 + v37[8]);
        *(unsigned char *)(v34 + v37[9]) = *(unsigned char *)(v35 + v37[9]);
        *(void *)(v34 + v37[10]) = *(void *)(v35 + v37[10]);
        *(unsigned char *)(v34 + v37[11]) = *(unsigned char *)(v35 + v37[11]);
        *(void *)(v34 + v37[12]) = *(void *)(v35 + v37[12]);
        uint64_t v74 = v118[6];
        uint64_t v75 = a1 + v74;
        uint64_t v76 = (uint64_t)a2 + v74;
        *(unsigned char *)uint64_t v75 = *((unsigned char *)a2 + v74);
        uint64_t v77 = a1 + v74 + 8;
        uint64_t v78 = (uint64_t)a2 + v74 + 8;
        long long v79 = *(_OWORD *)((char *)a2 + v74 + 32);
        *(_OWORD *)(v75 + 32) = v79;
        uint64_t v80 = v79;
        char v81 = **(void (***)(uint64_t, uint64_t, uint64_t))(v79 - 8);
        swift_retain();
        swift_retain();
        v81(v77, v78, v80);
        uint64_t v82 = *(void *)(v76 + 56);
        *(void *)(v75 + 48) = *(void *)(v76 + 48);
        *(void *)(v75 + 56) = v82;
        uint64_t v83 = *(void *)(v76 + 72);
        *(void *)(v75 + 64) = *(void *)(v76 + 64);
        *(void *)(v75 + 72) = v83;
        *(void *)(v75 + 80) = *(void *)(v76 + 80);
        *(unsigned char *)(v75 + 88) = *(unsigned char *)(v76 + 88);
        *(void *)(v75 + 96) = *(void *)(v76 + 96);
        char v84 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v85 = v84[13];
        uint64_t v108 = v76 + v85;
        uint64_t v111 = v75 + v85;
        uint64_t v86 = sub_1C151787C();
        char v106 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v106(v111, v108, v86);
        *(void *)(v75 + v84[14]) = *(void *)(v76 + v84[14]);
        *(void *)(v75 + v84[15]) = *(void *)(v76 + v84[15]);
        *(unsigned char *)(v75 + v84[16]) = *(unsigned char *)(v76 + v84[16]);
        *(void *)(v75 + v84[17]) = *(void *)(v76 + v84[17]);
        *(void *)(v75 + v84[18]) = *(void *)(v76 + v84[18]);
        *(void *)(v75 + v84[19]) = *(void *)(v76 + v84[19]);
        uint64_t v87 = v118[7];
        uint64_t v88 = a1 + v87;
        uint64_t v89 = (uint64_t)a2 + v87;
        *(unsigned char *)uint64_t v88 = *(unsigned char *)v89;
        *(_OWORD *)(v88 + 8) = *(_OWORD *)(v89 + 8);
        *(_OWORD *)(v88 + 24) = *(_OWORD *)(v89 + 24);
        uint64_t v90 = *(void *)(v89 + 48);
        *(void *)(v88 + 40) = *(void *)(v89 + 40);
        *(void *)(v88 + 48) = v90;
        *(void *)(a1 + v118[8]) = *(uint64_t *)((char *)a2 + v118[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v27 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v27;
        uint64_t v28 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v28;
        uint64_t v29 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v29;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(void *)(a1 + 56) = a2[7];
        uint64_t v30 = a2 + 8;
        unint64_t v31 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31 > 2) {
          goto LABEL_15;
        }
        *(_OWORD *)(a1 + 64) = *v30;
        goto LABEL_21;
      case 3u:
        uint64_t v52 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v52;
        uint64_t v53 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v53;
        uint64_t v54 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v54;
        *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
        *(void *)(a1 + 56) = a2[7];
        uint64_t v30 = a2 + 8;
        unint64_t v31 = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v31 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *v30;
        }
        else
        {
LABEL_15:
          *(unsigned char *)(a1 + 64) = *(unsigned char *)v30;
          *(void *)(a1 + 72) = v31;
          swift_bridgeObjectRetain();
        }
LABEL_21:
        uint64_t v91 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v91;
        uint64_t v92 = a2[13];
        *(void *)(a1 + 96) = a2[12];
        *(void *)(a1 + 104) = v92;
        uint64_t v93 = a2[15];
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v93;
        *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
        uint64_t v94 = a2[18];
        *(void *)(a1 + 136) = a2[17];
        *(void *)(a1 + 144) = v94;
        *(void *)(a1 + 152) = a2[19];
        long long v95 = *(_OWORD *)(a2 + 23);
        *(_OWORD *)(a1 + 184) = v95;
        uint64_t v112 = v95;
        double v109 = **(void (***)(uint64_t, uint64_t, uint64_t))(v95 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v109(a1 + 160, (uint64_t)(a2 + 20), v112);
        *(void *)(a1 + 200) = a2[25];
        long long v96 = *(_OWORD *)(a2 + 29);
        *(_OWORD *)(a1 + 232) = v96;
        uint64_t v97 = v96;
        int v98 = **(void (***)(uint64_t, uint64_t, uint64_t))(v96 - 8);
        swift_retain();
        v98(a1 + 208, (uint64_t)(a2 + 26), v97);
        uint64_t v99 = a2[32];
        *(void *)(a1 + 248) = a2[31];
        *(void *)(a1 + 256) = v99;
        uint64_t v100 = a2[34];
        *(void *)(a1 + 264) = a2[33];
        *(void *)(a1 + 272) = v100;
        uint64_t v101 = a2[36];
        *(void *)(a1 + 280) = a2[35];
        *(void *)(a1 + 288) = v101;
        char v102 = (void *)a2[37];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        id v103 = v102;
        *(void *)(a1 + 296) = v102;
        break;
      default:
        long long v6 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v6;
        (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
        unsigned __int8 v117 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
        uint64_t v7 = v117[5];
        uint64_t v8 = a1 + v7;
        uint64_t v9 = (uint64_t)a2 + v7;
        uint64_t v10 = sub_1C151772C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        uint64_t v11 = (int *)type metadata accessor for GroupLayoutContext();
        uint64_t v12 = v11[5];
        uint64_t v13 = v8 + v12;
        uint64_t v14 = v9 + v12;
        uint64_t v15 = sub_1C151757C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        uint64_t v16 = v11[6];
        uint64_t v17 = v8 + v16;
        uint64_t v18 = v9 + v16;
        *(_OWORD *)uint64_t v17 = *(_OWORD *)(v9 + v16);
        *(unsigned char *)(v17 + 16) = *(unsigned char *)(v9 + v16 + 16);
        *(_WORD *)(v17 + 17) = *(_WORD *)(v9 + v16 + 17);
        *(unsigned char *)(v17 + 19) = *(unsigned char *)(v9 + v16 + 19);
        *(_DWORD *)(v17 + 20) = *(_DWORD *)(v9 + v16 + 20);
        unint64_t v19 = *(void *)(v9 + v16 + 24);
        if (v19 >= 2) {
          unint64_t v19 = swift_bridgeObjectRetain();
        }
        *(void *)(v17 + 24) = v19;
        uint64_t v20 = type metadata accessor for FeedLayoutSolverOptions(0);
        uint64_t v21 = *(int *)(v20 + 36);
        uint64_t v113 = v20;
        __dst = (void *)(v17 + v21);
        unint64_t v22 = (const void *)(v18 + v21);
        uint64_t v23 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1C01BB2C0();
          memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          uint64_t v55 = sub_1C151B62C();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v55 - 8) + 16))(__dst, v22, v55);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
        }
        *(void *)(v17 + *(int *)(v113 + 40)) = *(void *)(v18 + *(int *)(v113 + 40));
        *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
        *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
        *(unsigned char *)(v8 + v11[9]) = *(unsigned char *)(v9 + v11[9]);
        *(void *)(v8 + v11[10]) = *(void *)(v9 + v11[10]);
        *(unsigned char *)(v8 + v11[11]) = *(unsigned char *)(v9 + v11[11]);
        *(void *)(v8 + v11[12]) = *(void *)(v9 + v11[12]);
        uint64_t v56 = v117[6];
        uint64_t v57 = a1 + v56;
        uint64_t v58 = (uint64_t)a2 + v56;
        *(unsigned char *)uint64_t v57 = *((unsigned char *)a2 + v56);
        uint64_t v59 = a1 + v56 + 8;
        uint64_t v60 = (uint64_t)a2 + v56 + 8;
        long long v61 = *(_OWORD *)((char *)a2 + v56 + 32);
        *(_OWORD *)(v57 + 32) = v61;
        uint64_t v62 = v61;
        uint64_t v63 = **(void (***)(uint64_t, uint64_t, uint64_t))(v61 - 8);
        swift_retain();
        swift_retain();
        v63(v59, v60, v62);
        uint64_t v64 = *(void *)(v58 + 56);
        *(void *)(v57 + 48) = *(void *)(v58 + 48);
        *(void *)(v57 + 56) = v64;
        uint64_t v65 = *(void *)(v58 + 72);
        *(void *)(v57 + 64) = *(void *)(v58 + 64);
        *(void *)(v57 + 72) = v65;
        *(void *)(v57 + 80) = *(void *)(v58 + 80);
        *(unsigned char *)(v57 + 88) = *(unsigned char *)(v58 + 88);
        *(void *)(v57 + 96) = *(void *)(v58 + 96);
        uint64_t v66 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v67 = v66[13];
        uint64_t v107 = v58 + v67;
        uint64_t v110 = v57 + v67;
        uint64_t v68 = sub_1C151787C();
        char v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v105(v110, v107, v68);
        *(void *)(v57 + v66[14]) = *(void *)(v58 + v66[14]);
        *(void *)(v57 + v66[15]) = *(void *)(v58 + v66[15]);
        *(unsigned char *)(v57 + v66[16]) = *(unsigned char *)(v58 + v66[16]);
        *(void *)(v57 + v66[17]) = *(void *)(v58 + v66[17]);
        *(void *)(v57 + v66[18]) = *(void *)(v58 + v66[18]);
        *(void *)(v57 + v66[19]) = *(void *)(v58 + v66[19]);
        uint64_t v69 = v117[7];
        uint64_t v70 = a1 + v69;
        uint64_t v71 = (uint64_t)a2 + v69;
        *(unsigned char *)uint64_t v70 = *(unsigned char *)v71;
        *(_OWORD *)(v70 + 8) = *(_OWORD *)(v71 + 8);
        *(_OWORD *)(v70 + 24) = *(_OWORD *)(v71 + 24);
        uint64_t v72 = *(void *)(v71 + 48);
        *(void *)(v70 + 40) = *(void *)(v71 + 40);
        *(void *)(v70 + 48) = v72;
        *(void *)(a1 + v117[8]) = *(uint64_t *)((char *)a2 + v117[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1C01CF6E0(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(a1);
      uint64_t v2 = type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v3 = a1 + *(int *)(v2 + 20);
      uint64_t v4 = sub_1C151772C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      uint64_t v5 = type metadata accessor for GroupLayoutContext();
      uint64_t v6 = v3 + *(int *)(v5 + 20);
      uint64_t v7 = sub_1C151757C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      uint64_t v8 = v3 + *(int *)(v5 + 24);
      if (*(void *)(v8 + 24) >= 2uLL) {
        swift_bridgeObjectRelease();
      }
      uint64_t v9 = v8 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
      uint64_t v10 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
      {
        uint64_t v11 = sub_1C151B62C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);
      }
      swift_release();
      swift_release();
      uint64_t v12 = a1 + *(int *)(v2 + 24);
      __swift_destroy_boxed_opaque_existential_1(v12 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v12 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
      uint64_t v14 = sub_1C151787C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 2u:
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 72) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(a1 + 160);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(a1 + 208);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v15 = *(void **)(a1 + 296);

      break;
    default:
      return;
  }
}

uint64_t sub_1C01CFA68(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
      uint64_t v24 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v24;
      uint64_t v25 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v25;
      uint64_t v26 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v26;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      uint64_t v27 = (_OWORD *)(a2 + 64);
      unint64_t v28 = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28 <= 2)
      {
        *(_OWORD *)(a1 + 64) = *v27;
      }
      else
      {
        *(unsigned char *)(a1 + 64) = *(unsigned char *)v27;
        *(void *)(a1 + 72) = v28;
        swift_bridgeObjectRetain();
      }
      uint64_t v47 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v47;
      uint64_t v48 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v48;
      uint64_t v49 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v49;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      uint64_t v50 = *(void *)(a2 + 144);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = v50;
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      long long v51 = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 184) = v51;
      uint64_t v65 = v51;
      uint64_t v63 = **(void (***)(uint64_t, uint64_t, uint64_t))(v51 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v63(a1 + 160, a2 + 160, v65);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      long long v52 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 232) = v52;
      uint64_t v53 = v52;
      uint64_t v54 = **(void (***)(uint64_t, uint64_t, uint64_t))(v52 - 8);
      swift_retain();
      v54(a1 + 208, a2 + 208, v53);
      uint64_t v55 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v55;
      uint64_t v56 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v56;
      uint64_t v57 = *(void *)(a2 + 288);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = v57;
      uint64_t v58 = *(void **)(a2 + 296);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      id v59 = v58;
      *(void *)(a1 + 296) = v58;
      break;
    default:
      long long v4 = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      uint64_t v68 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v5 = v68[5];
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_1C151772C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      uint64_t v9 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v10 = v9[5];
      uint64_t v11 = v6 + v10;
      uint64_t v12 = v7 + v10;
      uint64_t v13 = sub_1C151757C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      uint64_t v14 = v9[6];
      uint64_t v15 = v6 + v14;
      uint64_t v16 = v7 + v14;
      *(_OWORD *)uint64_t v15 = *(_OWORD *)(v7 + v14);
      *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
      *(_WORD *)(v15 + 17) = *(_WORD *)(v7 + v14 + 17);
      *(unsigned char *)(v15 + 19) = *(unsigned char *)(v7 + v14 + 19);
      *(_DWORD *)(v15 + 20) = *(_DWORD *)(v7 + v14 + 20);
      unint64_t v17 = *(void *)(v7 + v14 + 24);
      if (v17 >= 2) {
        unint64_t v17 = swift_bridgeObjectRetain();
      }
      *(void *)(v15 + 24) = v17;
      uint64_t v18 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v19 = *(int *)(v18 + 36);
      uint64_t v66 = v18;
      __dst = (void *)(v15 + v19);
      uint64_t v20 = (const void *)(v16 + v19);
      uint64_t v21 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
        sub_1C01BB2C0();
        memcpy(__dst, v20, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        uint64_t v29 = sub_1C151B62C();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(__dst, v20, v29);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
      }
      *(void *)(v15 + *(int *)(v66 + 40)) = *(void *)(v16 + *(int *)(v66 + 40));
      *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
      *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
      *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
      *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
      *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
      *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
      uint64_t v30 = v68[6];
      uint64_t v31 = a1 + v30;
      uint64_t v32 = a2 + v30;
      *(unsigned char *)uint64_t v31 = *(unsigned char *)(a2 + v30);
      uint64_t v33 = a1 + v30 + 8;
      uint64_t v34 = a2 + v30 + 8;
      long long v35 = *(_OWORD *)(a2 + v30 + 32);
      *(_OWORD *)(v31 + 32) = v35;
      uint64_t v36 = v35;
      uint64_t v37 = **(void (***)(uint64_t, uint64_t, uint64_t))(v35 - 8);
      swift_retain();
      swift_retain();
      v37(v33, v34, v36);
      uint64_t v38 = *(void *)(v32 + 56);
      *(void *)(v31 + 48) = *(void *)(v32 + 48);
      *(void *)(v31 + 56) = v38;
      uint64_t v39 = *(void *)(v32 + 72);
      *(void *)(v31 + 64) = *(void *)(v32 + 64);
      *(void *)(v31 + 72) = v39;
      *(void *)(v31 + 80) = *(void *)(v32 + 80);
      *(unsigned char *)(v31 + 88) = *(unsigned char *)(v32 + 88);
      *(void *)(v31 + 96) = *(void *)(v32 + 96);
      uint64_t v40 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v41 = v40[13];
      uint64_t v62 = v32 + v41;
      uint64_t v64 = v31 + v41;
      uint64_t v42 = sub_1C151787C();
      long long v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61(v64, v62, v42);
      *(void *)(v31 + v40[14]) = *(void *)(v32 + v40[14]);
      *(void *)(v31 + v40[15]) = *(void *)(v32 + v40[15]);
      *(unsigned char *)(v31 + v40[16]) = *(unsigned char *)(v32 + v40[16]);
      *(void *)(v31 + v40[17]) = *(void *)(v32 + v40[17]);
      *(void *)(v31 + v40[18]) = *(void *)(v32 + v40[18]);
      *(void *)(v31 + v40[19]) = *(void *)(v32 + v40[19]);
      uint64_t v43 = v68[7];
      uint64_t v44 = a1 + v43;
      uint64_t v45 = a2 + v43;
      *(unsigned char *)uint64_t v44 = *(unsigned char *)v45;
      *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 8);
      *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
      uint64_t v46 = *(void *)(v45 + 48);
      *(void *)(v44 + 40) = *(void *)(v45 + 40);
      *(void *)(v44 + 48) = v46;
      *(void *)(a1 + v68[8]) = *(void *)(a2 + v68[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C01D017C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C01CE718(a1, type metadata accessor for DebugFormatTestCaseResult.Result);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        unint64_t v25 = *(void *)(a2 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25 <= 2)
        {
          *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        }
        else
        {
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          swift_bridgeObjectRetain();
        }
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        uint64_t v41 = *(void *)(a2 + 184);
        *(void *)(a1 + 184) = v41;
        *(void *)(a1 + 192) = *(void *)(a2 + 192);
        uint64_t v49 = **(void (***)(uint64_t, uint64_t, uint64_t))(v41 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v49(a1 + 160, a2 + 160, v41);
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        uint64_t v42 = *(void *)(a2 + 232);
        *(void *)(a1 + 232) = v42;
        *(void *)(a1 + 240) = *(void *)(a2 + 240);
        uint64_t v43 = **(void (***)(uint64_t, uint64_t, uint64_t))(v42 - 8);
        swift_retain();
        v43(a1 + 208, a2 + 208, v42);
        *(void *)(a1 + 248) = *(void *)(a2 + 248);
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        *(void *)(a1 + 264) = *(void *)(a2 + 264);
        *(void *)(a1 + 272) = *(void *)(a2 + 272);
        *(void *)(a1 + 280) = *(void *)(a2 + 280);
        *(void *)(a1 + 288) = *(void *)(a2 + 288);
        uint64_t v44 = *(void **)(a2 + 296);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        id v45 = v44;
        *(void *)(a1 + 296) = v44;
        break;
      default:
        uint64_t v4 = *(void *)(a2 + 24);
        *(void *)(a1 + 24) = v4;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
        uint64_t v53 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
        uint64_t v5 = v53[5];
        uint64_t v6 = a1 + v5;
        uint64_t v7 = a2 + v5;
        uint64_t v8 = sub_1C151772C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        uint64_t v9 = (int *)type metadata accessor for GroupLayoutContext();
        uint64_t v10 = v9[5];
        uint64_t v11 = v6 + v10;
        uint64_t v12 = v7 + v10;
        uint64_t v13 = sub_1C151757C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        uint64_t v14 = v9[6];
        uint64_t v15 = v6 + v14;
        uint64_t v16 = v7 + v14;
        long long v17 = *(_OWORD *)(v7 + v14);
        *(unsigned char *)(v15 + 16) = *(unsigned char *)(v7 + v14 + 16);
        *(_OWORD *)uint64_t v15 = v17;
        LOBYTE(v14) = *(unsigned char *)(v7 + v14 + 19);
        *(_WORD *)(v15 + 17) = *(_WORD *)(v16 + 17);
        *(unsigned char *)(v15 + 19) = v14;
        *(_WORD *)(v15 + 20) = *(_WORD *)(v16 + 20);
        *(_WORD *)(v15 + 22) = *(_WORD *)(v16 + 22);
        unint64_t v18 = *(void *)(v16 + 24);
        if (v18 >= 2) {
          unint64_t v18 = swift_bridgeObjectRetain();
        }
        *(void *)(v15 + 24) = v18;
        uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions(0);
        uint64_t v20 = *(int *)(v19 + 36);
        uint64_t v51 = v19;
        __dst = (void *)(v15 + v20);
        uint64_t v21 = (const void *)(v16 + v20);
        uint64_t v22 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_1C01BB2C0();
          memcpy(__dst, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v26 = sub_1C151B62C();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(__dst, v21, v26);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
        }
        *(void *)(v15 + *(int *)(v51 + 40)) = *(void *)(v16 + *(int *)(v51 + 40));
        *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
        *(void *)(v6 + v9[8]) = *(void *)(v7 + v9[8]);
        *(unsigned char *)(v6 + v9[9]) = *(unsigned char *)(v7 + v9[9]);
        *(void *)(v6 + v9[10]) = *(void *)(v7 + v9[10]);
        *(unsigned char *)(v6 + v9[11]) = *(unsigned char *)(v7 + v9[11]);
        *(void *)(v6 + v9[12]) = *(void *)(v7 + v9[12]);
        uint64_t v27 = v53[6];
        uint64_t v28 = a1 + v27;
        uint64_t v29 = a2 + v27;
        *(unsigned char *)uint64_t v28 = *(unsigned char *)(a2 + v27);
        uint64_t v30 = a1 + v27 + 8;
        uint64_t v31 = a2 + v27 + 8;
        uint64_t v32 = *(void *)(a2 + v27 + 32);
        *(void *)(v28 + 32) = v32;
        *(void *)(v28 + 40) = *(void *)(a2 + v27 + 40);
        uint64_t v33 = **(void (***)(uint64_t, uint64_t, uint64_t))(v32 - 8);
        swift_retain();
        swift_retain();
        v33(v30, v31, v32);
        *(void *)(v28 + 48) = *(void *)(v29 + 48);
        *(void *)(v28 + 56) = *(void *)(v29 + 56);
        *(void *)(v28 + 64) = *(void *)(v29 + 64);
        *(void *)(v28 + 72) = *(void *)(v29 + 72);
        *(void *)(v28 + 80) = *(void *)(v29 + 80);
        *(unsigned char *)(v28 + 88) = *(unsigned char *)(v29 + 88);
        *(void *)(v28 + 96) = *(void *)(v29 + 96);
        uint64_t v34 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v35 = v34[13];
        uint64_t v48 = v29 + v35;
        uint64_t v50 = v28 + v35;
        uint64_t v36 = sub_1C151787C();
        uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v47(v50, v48, v36);
        *(void *)(v28 + v34[14]) = *(void *)(v29 + v34[14]);
        *(void *)(v28 + v34[15]) = *(void *)(v29 + v34[15]);
        *(unsigned char *)(v28 + v34[16]) = *(unsigned char *)(v29 + v34[16]);
        *(void *)(v28 + v34[17]) = *(void *)(v29 + v34[17]);
        *(void *)(v28 + v34[18]) = *(void *)(v29 + v34[18]);
        *(void *)(v28 + v34[19]) = *(void *)(v29 + v34[19]);
        uint64_t v37 = v53[7];
        uint64_t v38 = a1 + v37;
        uint64_t v39 = a2 + v37;
        *(unsigned char *)uint64_t v38 = *(unsigned char *)v39;
        long long v40 = *(_OWORD *)(v39 + 8);
        *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
        *(_OWORD *)(v38 + 8) = v40;
        *(void *)(v38 + 40) = *(void *)(v39 + 40);
        *(void *)(v38 + 48) = *(void *)(v39 + 48);
        *(void *)(a1 + v53[8]) = *(void *)(a2 + v53[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1C01D093C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    long long v24 = a2[1];
    *a1 = *a2;
    a1[1] = v24;
    *((void *)a1 + 4) = *((void *)a2 + 4);
    uint64_t v50 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
    uint64_t v25 = v50[5];
    uint64_t v9 = (char *)a1 + v25;
    uint64_t v10 = (char *)a2 + v25;
    uint64_t v26 = sub_1C151772C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v9, v10, v26);
    uint64_t v12 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v27 = v12[5];
    uint64_t v28 = &v9[v27];
    uint64_t v29 = &v10[v27];
    uint64_t v30 = sub_1C151757C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    uint64_t v31 = v12[6];
    unint64_t v18 = &v9[v31];
    uint64_t v19 = &v10[v31];
    *(_OWORD *)unint64_t v18 = *(_OWORD *)&v10[v31];
    v18[16] = v10[v31 + 16];
    *(_WORD *)(v18 + 17) = *(_WORD *)&v10[v31 + 17];
    v18[19] = v10[v31 + 19];
    *((_DWORD *)v18 + 5) = *(_DWORD *)&v10[v31 + 20];
    *((void *)v18 + 3) = *(void *)&v10[v31 + 24];
    uint64_t v49 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v32 = *(int *)(v49 + 36);
    __dst = &v18[v32];
    uint64_t v21 = &v19[v32];
    uint64_t v22 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
LABEL_6:
      sub_1C01BB2C0();
      memcpy(__dst, v21, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_9:
      *(void *)&v18[*(int *)(v49 + 40)] = *(void *)&v19[*(int *)(v49 + 40)];
      *(void *)&v9[v12[7]] = *(void *)&v10[v12[7]];
      *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
      v9[v12[9]] = v10[v12[9]];
      *(void *)&v9[v12[10]] = *(void *)&v10[v12[10]];
      v9[v12[11]] = v10[v12[11]];
      *(void *)&v9[v12[12]] = *(void *)&v10[v12[12]];
      uint64_t v35 = v50[6];
      uint64_t v36 = (char *)a1 + v35;
      uint64_t v37 = (char *)a2 + v35;
      char *v36 = *((unsigned char *)a2 + v35);
      *(_OWORD *)(v36 + 8) = *(_OWORD *)((char *)a2 + v35 + 8);
      *(_OWORD *)(v36 + 24) = *(_OWORD *)((char *)a2 + v35 + 24);
      *((void *)v36 + 5) = *(void *)((char *)a2 + v35 + 40);
      long long v38 = *(_OWORD *)((char *)a2 + v35 + 64);
      *((_OWORD *)v36 + 3) = *(_OWORD *)((char *)a2 + v35 + 48);
      *((_OWORD *)v36 + 4) = v38;
      *((void *)v36 + 10) = *(void *)((char *)a2 + v35 + 80);
      v36[88] = *((unsigned char *)a2 + v35 + 88);
      *((void *)v36 + 12) = *(void *)((char *)a2 + v35 + 96);
      uint64_t v39 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v40 = v39[13];
      uint64_t v41 = &v36[v40];
      uint64_t v42 = &v37[v40];
      uint64_t v43 = sub_1C151787C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      *(void *)&v36[v39[14]] = *(void *)&v37[v39[14]];
      *(void *)&v36[v39[15]] = *(void *)&v37[v39[15]];
      v36[v39[16]] = v37[v39[16]];
      *(void *)&v36[v39[17]] = *(void *)&v37[v39[17]];
      *(void *)&v36[v39[18]] = *(void *)&v37[v39[18]];
      *(void *)&v36[v39[19]] = *(void *)&v37[v39[19]];
      uint64_t v44 = v50[7];
      id v45 = (char *)a1 + v44;
      uint64_t v46 = (char *)a2 + v44;
      long long v47 = *((_OWORD *)v46 + 1);
      *(_OWORD *)id v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v47;
      *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
      *((void *)v45 + 6) = *((void *)v46 + 6);
      *(void *)((char *)a1 + v50[8]) = *(void *)((char *)a2 + v50[8]);
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_8:
    uint64_t v34 = sub_1C151B62C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(__dst, v21, v34);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((void *)a1 + 4) = *((void *)a2 + 4);
    uint64_t v50 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
    uint64_t v8 = v50[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151772C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    uint64_t v12 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v13 = v12[5];
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    uint64_t v16 = sub_1C151757C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    uint64_t v17 = v12[6];
    unint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    *(_OWORD *)unint64_t v18 = *(_OWORD *)&v10[v17];
    v18[16] = v10[v17 + 16];
    *(_WORD *)(v18 + 17) = *(_WORD *)&v10[v17 + 17];
    v18[19] = v10[v17 + 19];
    *((_DWORD *)v18 + 5) = *(_DWORD *)&v10[v17 + 20];
    *((void *)v18 + 3) = *(void *)&v10[v17 + 24];
    uint64_t v49 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v20 = *(int *)(v49 + 36);
    __dst = &v18[v20];
    uint64_t v21 = &v19[v20];
    uint64_t v22 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1C01D10C4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C01CE718((uint64_t)a1, type metadata accessor for DebugFormatTestCaseResult.Result);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      long long v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v50 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v25 = v50[5];
      uint64_t v9 = (char *)a1 + v25;
      uint64_t v10 = (char *)a2 + v25;
      uint64_t v26 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v9, v10, v26);
      uint64_t v12 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v27 = v12[5];
      uint64_t v28 = &v9[v27];
      uint64_t v29 = &v10[v27];
      uint64_t v30 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      uint64_t v31 = v12[6];
      unint64_t v18 = &v9[v31];
      uint64_t v19 = &v10[v31];
      *(_OWORD *)unint64_t v18 = *(_OWORD *)&v10[v31];
      v18[16] = v10[v31 + 16];
      *(_WORD *)(v18 + 17) = *(_WORD *)&v10[v31 + 17];
      v18[19] = v10[v31 + 19];
      *((_DWORD *)v18 + 5) = *(_DWORD *)&v10[v31 + 20];
      *((void *)v18 + 3) = *(void *)&v10[v31 + 24];
      uint64_t v49 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v32 = *(int *)(v49 + 36);
      __dst = &v18[v32];
      uint64_t v21 = &v19[v32];
      uint64_t v22 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
LABEL_7:
        sub_1C01BB2C0();
        memcpy(__dst, v21, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_10:
        *(void *)&v18[*(int *)(v49 + 40)] = *(void *)&v19[*(int *)(v49 + 40)];
        *(void *)&v9[v12[7]] = *(void *)&v10[v12[7]];
        *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
        v9[v12[9]] = v10[v12[9]];
        *(void *)&v9[v12[10]] = *(void *)&v10[v12[10]];
        v9[v12[11]] = v10[v12[11]];
        *(void *)&v9[v12[12]] = *(void *)&v10[v12[12]];
        uint64_t v35 = v50[6];
        uint64_t v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        char *v36 = *((unsigned char *)a2 + v35);
        *(_OWORD *)(v36 + 8) = *(_OWORD *)((char *)a2 + v35 + 8);
        *(_OWORD *)(v36 + 24) = *(_OWORD *)((char *)a2 + v35 + 24);
        *((void *)v36 + 5) = *(void *)((char *)a2 + v35 + 40);
        long long v38 = *(_OWORD *)((char *)a2 + v35 + 64);
        *((_OWORD *)v36 + 3) = *(_OWORD *)((char *)a2 + v35 + 48);
        *((_OWORD *)v36 + 4) = v38;
        *((void *)v36 + 10) = *(void *)((char *)a2 + v35 + 80);
        v36[88] = *((unsigned char *)a2 + v35 + 88);
        *((void *)v36 + 12) = *(void *)((char *)a2 + v35 + 96);
        uint64_t v39 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v40 = v39[13];
        uint64_t v41 = &v36[v40];
        uint64_t v42 = &v37[v40];
        uint64_t v43 = sub_1C151787C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
        *(void *)&v36[v39[14]] = *(void *)&v37[v39[14]];
        *(void *)&v36[v39[15]] = *(void *)&v37[v39[15]];
        v36[v39[16]] = v37[v39[16]];
        *(void *)&v36[v39[17]] = *(void *)&v37[v39[17]];
        *(void *)&v36[v39[18]] = *(void *)&v37[v39[18]];
        *(void *)&v36[v39[19]] = *(void *)&v37[v39[19]];
        uint64_t v44 = v50[7];
        id v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        long long v47 = *((_OWORD *)v46 + 1);
        *(_OWORD *)id v45 = *(_OWORD *)v46;
        *((_OWORD *)v45 + 1) = v47;
        *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
        *((void *)v45 + 6) = *((void *)v46 + 6);
        *(void *)((char *)a1 + v50[8]) = *(void *)((char *)a2 + v50[8]);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_9:
      uint64_t v34 = sub_1C151B62C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(__dst, v21, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((void *)a1 + 4) = *((void *)a2 + 4);
      uint64_t v50 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v8 = v50[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      uint64_t v12 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v13 = v12[5];
      uint64_t v14 = &v9[v13];
      uint64_t v15 = &v10[v13];
      uint64_t v16 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      uint64_t v17 = v12[6];
      unint64_t v18 = &v9[v17];
      uint64_t v19 = &v10[v17];
      *(_OWORD *)unint64_t v18 = *(_OWORD *)&v10[v17];
      v18[16] = v10[v17 + 16];
      *(_WORD *)(v18 + 17) = *(_WORD *)&v10[v17 + 17];
      v18[19] = v10[v17 + 19];
      *((_DWORD *)v18 + 5) = *(_DWORD *)&v10[v17 + 20];
      *((void *)v18 + 3) = *(void *)&v10[v17 + 24];
      uint64_t v49 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v20 = *(int *)(v49 + 36);
      __dst = &v18[v20];
      uint64_t v21 = &v19[v20];
      uint64_t v22 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C01D1870()
{
  uint64_t result = type metadata accessor for DebugFormatTestCaseLayout();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C01D1904(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    uint64_t v12 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(void *)(a1 + 56) = a2[7];
    uint64_t v9 = a2 + 8;
    unint64_t v10 = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 <= 2)
    {
      *(_OWORD *)(a1 + 64) = *v9;
    }
    else
    {
      *(unsigned char *)(a1 + 64) = *(unsigned char *)v9;
      *(void *)(a1 + 72) = v10;
      swift_bridgeObjectRetain();
    }
    uint64_t v13 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v13;
    uint64_t v14 = a2;
    uint64_t v15 = a2[12];
    uint64_t v16 = a2[13];
    *(void *)(a1 + 96) = v15;
    *(void *)(a1 + 104) = v16;
    uint64_t v17 = v14[15];
    *(void *)(a1 + 112) = v14[14];
    *(void *)(a1 + 120) = v17;
    *(unsigned char *)(a1 + 128) = *((unsigned char *)v14 + 128);
    uint64_t v18 = v14[18];
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v135 = a1 + v19;
    int v133 = v14;
    uint64_t v20 = a1;
    uint64_t v21 = (uint64_t)v14 + v19;
    *(void *)(v20 + 136) = v14[17];
    *(void *)(v20 + 144) = v18;
    uint64_t v132 = v20;
    type metadata accessor for DebugFormatTestCaseResult.Result(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        long long v49 = *(_OWORD *)(v21 + 24);
        *(_OWORD *)(v135 + 24) = v49;
        (**(void (***)(uint64_t, uint64_t))(v49 - 8))(v135, v21);
        int v129 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
        uint64_t v131 = v21;
        uint64_t v50 = v129[5];
        uint64_t v51 = v135 + v50;
        uint64_t v52 = v21 + v50;
        uint64_t v53 = sub_1C151772C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
        uint64_t v54 = (int *)type metadata accessor for GroupLayoutContext();
        uint64_t v55 = v54[5];
        uint64_t v56 = v51 + v55;
        uint64_t v57 = v52 + v55;
        uint64_t v58 = sub_1C151757C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
        uint64_t v59 = v54[6];
        uint64_t v60 = v51 + v59;
        uint64_t v61 = v52 + v59;
        *(_OWORD *)uint64_t v60 = *(_OWORD *)(v52 + v59);
        *(unsigned char *)(v60 + 16) = *(unsigned char *)(v52 + v59 + 16);
        *(_WORD *)(v60 + 17) = *(_WORD *)(v52 + v59 + 17);
        *(unsigned char *)(v60 + 19) = *(unsigned char *)(v52 + v59 + 19);
        *(_DWORD *)(v60 + 20) = *(_DWORD *)(v52 + v59 + 20);
        unint64_t v62 = *(void *)(v52 + v59 + 24);
        if (v62 >= 2) {
          unint64_t v62 = swift_bridgeObjectRetain();
        }
        *(void *)(v60 + 24) = v62;
        uint64_t v63 = type metadata accessor for FeedLayoutSolverOptions(0);
        uint64_t v64 = *(int *)(v63 + 36);
        int v121 = (void *)(v60 + v64);
        __dsta = (int *)v63;
        uint64_t v65 = (const void *)(v61 + v64);
        uint64_t v66 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        uint64_t v67 = *(void *)(v66 - 8);
        uint64_t v12 = v132;
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          sub_1C01BB2C0();
          memcpy(v121, v65, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          uint64_t v100 = sub_1C151B62C();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v100 - 8) + 16))(v121, v65, v100);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v121, 0, 1, v66);
        }
        *(void *)(v60 + __dsta[10]) = *(void *)(v61 + __dsta[10]);
        *(void *)(v51 + v54[7]) = *(void *)(v52 + v54[7]);
        *(void *)(v51 + v54[8]) = *(void *)(v52 + v54[8]);
        *(unsigned char *)(v51 + v54[9]) = *(unsigned char *)(v52 + v54[9]);
        *(void *)(v51 + v54[10]) = *(void *)(v52 + v54[10]);
        *(unsigned char *)(v51 + v54[11]) = *(unsigned char *)(v52 + v54[11]);
        *(void *)(v51 + v54[12]) = *(void *)(v52 + v54[12]);
        uint64_t v101 = v129[6];
        uint64_t v102 = v135 + v101;
        uint64_t v103 = v131 + v101;
        *(unsigned char *)uint64_t v102 = *(unsigned char *)(v131 + v101);
        long long v104 = *(_OWORD *)(v131 + v101 + 32);
        *(_OWORD *)(v102 + 32) = v104;
        uint64_t v105 = v104;
        char v106 = **(void (***)(uint64_t, uint64_t, uint64_t))(v104 - 8);
        swift_retain();
        swift_retain();
        v106(v102 + 8, v103 + 8, v105);
        uint64_t v107 = *(void *)(v103 + 56);
        *(void *)(v102 + 48) = *(void *)(v103 + 48);
        *(void *)(v102 + 56) = v107;
        uint64_t v108 = *(void *)(v103 + 72);
        *(void *)(v102 + 64) = *(void *)(v103 + 64);
        *(void *)(v102 + 72) = v108;
        *(void *)(v102 + 80) = *(void *)(v103 + 80);
        *(unsigned char *)(v102 + 88) = *(unsigned char *)(v103 + 88);
        *(void *)(v102 + 96) = *(void *)(v103 + 96);
        double v109 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v110 = v109[13];
        uint64_t v120 = v103 + v110;
        double v124 = (void *)(v102 + v110);
        uint64_t v111 = sub_1C151787C();
        unsigned __int8 v117 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v111 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v117(v124, v120, v111);
        *(void *)(v102 + v109[14]) = *(void *)(v103 + v109[14]);
        *(void *)(v102 + v109[15]) = *(void *)(v103 + v109[15]);
        *(unsigned char *)(v102 + v109[16]) = *(unsigned char *)(v103 + v109[16]);
        *(void *)(v102 + v109[17]) = *(void *)(v103 + v109[17]);
        *(void *)(v102 + v109[18]) = *(void *)(v103 + v109[18]);
        *(void *)(v102 + v109[19]) = *(void *)(v103 + v109[19]);
        uint64_t v112 = v129[7];
        uint64_t v113 = v135 + v112;
        uint64_t v114 = v131 + v112;
        *(unsigned char *)uint64_t v113 = *(unsigned char *)v114;
        *(_OWORD *)(v113 + 8) = *(_OWORD *)(v114 + 8);
        *(_OWORD *)(v113 + 24) = *(_OWORD *)(v114 + 24);
        uint64_t v115 = *(void *)(v114 + 48);
        *(void *)(v113 + 40) = *(void *)(v114 + 40);
        *(void *)(v113 + 48) = v115;
        *(void *)(v135 + v129[8]) = *(void *)(v131 + v129[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 2u:
      case 3u:
        uint64_t v23 = *(void *)(v21 + 8);
        *(void *)uint64_t v135 = *(void *)v21;
        *(void *)(v135 + 8) = v23;
        uint64_t v24 = *(void *)(v21 + 24);
        *(void *)(v135 + 16) = *(void *)(v21 + 16);
        *(void *)(v135 + 24) = v24;
        uint64_t v25 = *(void *)(v21 + 40);
        *(void *)(v135 + 32) = *(void *)(v21 + 32);
        *(void *)(v135 + 40) = v25;
        *(unsigned char *)(v135 + 48) = *(unsigned char *)(v21 + 48);
        *(void *)(v135 + 56) = *(void *)(v21 + 56);
        uint64_t v26 = (_OWORD *)(v135 + 64);
        uint64_t v27 = (_OWORD *)(v21 + 64);
        unint64_t v28 = *(void *)(v21 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v28 >= 2)
        {
          uint64_t v12 = v132;
          if (v28 == 2)
          {
            *uint64_t v26 = *v27;
          }
          else
          {
            *(unsigned char *)(v135 + 64) = *(unsigned char *)v27;
            *(void *)(v135 + 72) = v28;
            swift_bridgeObjectRetain();
          }
        }
        else
        {
          *uint64_t v26 = *v27;
          uint64_t v12 = v132;
        }
        uint64_t v69 = *(void *)(v22 + 88);
        *(void *)(v135 + 80) = *(void *)(v22 + 80);
        *(void *)(v135 + 88) = v69;
        uint64_t v70 = *(void *)(v22 + 104);
        *(void *)(v135 + 96) = *(void *)(v22 + 96);
        *(void *)(v135 + 104) = v70;
        uint64_t v71 = *(void *)(v22 + 120);
        *(void *)(v135 + 112) = *(void *)(v22 + 112);
        *(void *)(v135 + 120) = v71;
        *(unsigned char *)(v135 + 128) = *(unsigned char *)(v22 + 128);
        uint64_t v72 = *(void *)(v22 + 144);
        *(void *)(v135 + 136) = *(void *)(v22 + 136);
        *(void *)(v135 + 144) = v72;
        *(void *)(v135 + 152) = *(void *)(v22 + 152);
        long long v73 = *(_OWORD *)(v22 + 184);
        *(_OWORD *)(v135 + 184) = v73;
        unsigned __int8 v122 = (void *)v73;
        unsigned __int8 v118 = **(void (***)(uint64_t, uint64_t, void *))(v73 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v118(v135 + 160, v22 + 160, v122);
        *(void *)(v135 + 200) = *(void *)(v22 + 200);
        long long v74 = *(_OWORD *)(v22 + 232);
        *(_OWORD *)(v135 + 232) = v74;
        uint64_t v75 = v74;
        uint64_t v76 = **(void (***)(uint64_t, uint64_t, uint64_t))(v74 - 8);
        swift_retain();
        v76(v135 + 208, v22 + 208, v75);
        uint64_t v77 = *(void *)(v22 + 256);
        *(void *)(v135 + 248) = *(void *)(v22 + 248);
        *(void *)(v135 + 256) = v77;
        uint64_t v78 = *(void *)(v22 + 272);
        *(void *)(v135 + 264) = *(void *)(v22 + 264);
        *(void *)(v135 + 272) = v78;
        uint64_t v79 = *(void *)(v22 + 288);
        *(void *)(v135 + 280) = *(void *)(v22 + 280);
        *(void *)(v135 + 288) = v79;
        uint64_t v80 = *(void **)(v22 + 296);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        id v81 = v80;
        *(void *)(v135 + 296) = v80;
LABEL_25:
        int v98 = v133;
        uint64_t v99 = a3;
        break;
      default:
        long long v29 = *(_OWORD *)(v21 + 24);
        *(_OWORD *)(v135 + 24) = v29;
        (**(void (***)(uint64_t, uint64_t))(v29 - 8))(v135, v21);
        int v128 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
        uint64_t v130 = v21;
        uint64_t v30 = v128[5];
        uint64_t v31 = v135 + v30;
        uint64_t v32 = v21 + v30;
        uint64_t v33 = sub_1C151772C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
        uint64_t v34 = (int *)type metadata accessor for GroupLayoutContext();
        uint64_t v35 = v34[5];
        uint64_t v36 = v31 + v35;
        uint64_t v37 = v32 + v35;
        uint64_t v38 = sub_1C151757C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
        uint64_t v39 = v34[6];
        uint64_t v40 = v31 + v39;
        uint64_t v41 = v32 + v39;
        *(_OWORD *)uint64_t v40 = *(_OWORD *)(v32 + v39);
        *(unsigned char *)(v40 + 16) = *(unsigned char *)(v32 + v39 + 16);
        *(_WORD *)(v40 + 17) = *(_WORD *)(v32 + v39 + 17);
        *(unsigned char *)(v40 + 19) = *(unsigned char *)(v32 + v39 + 19);
        *(_DWORD *)(v40 + 20) = *(_DWORD *)(v32 + v39 + 20);
        unint64_t v42 = *(void *)(v32 + v39 + 24);
        if (v42 >= 2) {
          unint64_t v42 = swift_bridgeObjectRetain();
        }
        *(void *)(v40 + 24) = v42;
        uint64_t v43 = type metadata accessor for FeedLayoutSolverOptions(0);
        uint64_t v44 = *(int *)(v43 + 36);
        __dst = (void *)(v40 + v44);
        id v45 = (const void *)(v41 + v44);
        uint64_t v46 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        uint64_t v47 = *(void *)(v46 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
        {
          sub_1C01BB2C0();
          memcpy(__dst, v45, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          uint64_t v82 = sub_1C151B62C();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v82 - 8) + 16))(__dst, v45, v82);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
        }
        *(void *)(v40 + *(int *)(v43 + 40)) = *(void *)(v41 + *(int *)(v43 + 40));
        *(void *)(v31 + v34[7]) = *(void *)(v32 + v34[7]);
        *(void *)(v31 + v34[8]) = *(void *)(v32 + v34[8]);
        *(unsigned char *)(v31 + v34[9]) = *(unsigned char *)(v32 + v34[9]);
        *(void *)(v31 + v34[10]) = *(void *)(v32 + v34[10]);
        *(unsigned char *)(v31 + v34[11]) = *(unsigned char *)(v32 + v34[11]);
        *(void *)(v31 + v34[12]) = *(void *)(v32 + v34[12]);
        uint64_t v83 = v128[6];
        uint64_t v84 = v135 + v83;
        uint64_t v85 = v130 + v83;
        *(unsigned char *)uint64_t v84 = *(unsigned char *)(v130 + v83);
        long long v86 = *(_OWORD *)(v130 + v83 + 32);
        *(_OWORD *)(v84 + 32) = v86;
        uint64_t v87 = v86;
        uint64_t v88 = **(void (***)(uint64_t, uint64_t, uint64_t))(v86 - 8);
        swift_retain();
        swift_retain();
        v88(v84 + 8, v85 + 8, v87);
        uint64_t v89 = *(void *)(v85 + 56);
        *(void *)(v84 + 48) = *(void *)(v85 + 48);
        *(void *)(v84 + 56) = v89;
        uint64_t v90 = *(void *)(v85 + 72);
        *(void *)(v84 + 64) = *(void *)(v85 + 64);
        *(void *)(v84 + 72) = v90;
        *(void *)(v84 + 80) = *(void *)(v85 + 80);
        *(unsigned char *)(v84 + 88) = *(unsigned char *)(v85 + 88);
        *(void *)(v84 + 96) = *(void *)(v85 + 96);
        uint64_t v91 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v92 = v91[13];
        unsigned __int8 v123 = (void *)(v85 + v92);
        __dstb = (void *)(v84 + v92);
        uint64_t v93 = sub_1C151787C();
        int v119 = *(void (**)(void *, void *, uint64_t))(*(void *)(v93 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v119(__dstb, v123, v93);
        *(void *)(v84 + v91[14]) = *(void *)(v85 + v91[14]);
        *(void *)(v84 + v91[15]) = *(void *)(v85 + v91[15]);
        *(unsigned char *)(v84 + v91[16]) = *(unsigned char *)(v85 + v91[16]);
        *(void *)(v84 + v91[17]) = *(void *)(v85 + v91[17]);
        *(void *)(v84 + v91[18]) = *(void *)(v85 + v91[18]);
        *(void *)(v84 + v91[19]) = *(void *)(v85 + v91[19]);
        uint64_t v94 = v128[7];
        uint64_t v95 = v135 + v94;
        uint64_t v96 = v130 + v94;
        *(unsigned char *)uint64_t v95 = *(unsigned char *)v96;
        *(_OWORD *)(v95 + 8) = *(_OWORD *)(v96 + 8);
        *(_OWORD *)(v95 + 24) = *(_OWORD *)(v96 + 24);
        uint64_t v97 = *(void *)(v96 + 48);
        *(void *)(v95 + 40) = *(void *)(v96 + 40);
        *(void *)(v95 + 48) = v97;
        *(void *)(v135 + v128[8]) = *(void *)(v130 + v128[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v98 = v133;
        uint64_t v99 = a3;
        uint64_t v12 = v132;
        break;
    }
    swift_storeEnumTagMultiPayload();
    *(void *)(v12 + *(int *)(v99 + 28)) = *(uint64_t *)((char *)v98 + *(int *)(v99 + 28));
  }
  return v12;
}

void sub_1C01D2664(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for DebugFormatTestCaseResult.Result(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(v4);
      uint64_t v5 = type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v6 = v4 + *(int *)(v5 + 20);
      uint64_t v7 = sub_1C151772C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      uint64_t v8 = type metadata accessor for GroupLayoutContext();
      uint64_t v9 = v6 + *(int *)(v8 + 20);
      uint64_t v10 = sub_1C151757C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      uint64_t v11 = v6 + *(int *)(v8 + 24);
      if (*(void *)(v11 + 24) >= 2uLL) {
        swift_bridgeObjectRelease();
      }
      uint64_t v12 = v11 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
      uint64_t v13 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
      {
        uint64_t v14 = sub_1C151B62C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
      }
      swift_release();
      swift_release();
      uint64_t v15 = v4 + *(int *)(v5 + 24);
      __swift_destroy_boxed_opaque_existential_1(v15 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v15 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
      uint64_t v17 = sub_1C151787C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 2u:
    case 3u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v4 + 72) >= 3uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1(v4 + 160);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(v4 + 208);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v18 = *(void **)(v4 + 296);

      break;
    default:
      return;
  }
}

uint64_t sub_1C01D2A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v8 = (_OWORD *)(a2 + 64);
  unint64_t v9 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 <= 2)
  {
    *(_OWORD *)(a1 + 64) = *v8;
  }
  else
  {
    *(unsigned char *)(a1 + 64) = *(unsigned char *)v8;
    *(void *)(a1 + 72) = v9;
    swift_bridgeObjectRetain();
  }
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = a2;
  uint64_t v12 = *(void *)(a2 + 96);
  uint64_t v13 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = v12;
  *(void *)(a1 + 104) = v13;
  uint64_t v14 = *(void *)(v11 + 120);
  *(void *)(a1 + 112) = *(void *)(v11 + 112);
  *(void *)(a1 + 120) = v14;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(v11 + 128);
  uint64_t v15 = *(void *)(v11 + 144);
  uint64_t v16 = *(int *)(a3 + 24);
  uint64_t v86 = a1 + v16;
  uint64_t v84 = v11;
  uint64_t v17 = v11 + v16;
  *(void *)(a1 + 136) = *(void *)(v11 + 136);
  *(void *)(a1 + 144) = v15;
  uint64_t v83 = a1;
  type metadata accessor for DebugFormatTestCaseResult.Result(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
      uint64_t v38 = *(void *)(v17 + 8);
      *(void *)uint64_t v86 = *(void *)v17;
      *(void *)(v86 + 8) = v38;
      uint64_t v39 = *(void *)(v17 + 24);
      *(void *)(v86 + 16) = *(void *)(v17 + 16);
      *(void *)(v86 + 24) = v39;
      uint64_t v40 = *(void *)(v17 + 40);
      *(void *)(v86 + 32) = *(void *)(v17 + 32);
      *(void *)(v86 + 40) = v40;
      *(unsigned char *)(v86 + 48) = *(unsigned char *)(v17 + 48);
      *(void *)(v86 + 56) = *(void *)(v17 + 56);
      uint64_t v41 = (_OWORD *)(v86 + 64);
      unint64_t v42 = (_OWORD *)(v17 + 64);
      unint64_t v43 = *(void *)(v17 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43 >= 2)
      {
        if (v43 == 2)
        {
          *uint64_t v41 = *v42;
        }
        else
        {
          *(unsigned char *)(v86 + 64) = *(unsigned char *)v42;
          *(void *)(v86 + 72) = v43;
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        *uint64_t v41 = *v42;
      }
      uint64_t v62 = *(void *)(v17 + 88);
      *(void *)(v86 + 80) = *(void *)(v17 + 80);
      *(void *)(v86 + 88) = v62;
      uint64_t v63 = *(void *)(v17 + 104);
      *(void *)(v86 + 96) = *(void *)(v17 + 96);
      *(void *)(v86 + 104) = v63;
      uint64_t v64 = *(void *)(v17 + 120);
      *(void *)(v86 + 112) = *(void *)(v17 + 112);
      *(void *)(v86 + 120) = v64;
      *(unsigned char *)(v86 + 128) = *(unsigned char *)(v17 + 128);
      uint64_t v65 = *(void *)(v17 + 144);
      *(void *)(v86 + 136) = *(void *)(v17 + 136);
      *(void *)(v86 + 144) = v65;
      *(void *)(v86 + 152) = *(void *)(v17 + 152);
      long long v66 = *(_OWORD *)(v17 + 184);
      *(_OWORD *)(v86 + 184) = v66;
      uint64_t v79 = v66;
      uint64_t v77 = **(void (***)(uint64_t, uint64_t, uint64_t))(v66 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v77(v86 + 160, v17 + 160, v79);
      *(void *)(v86 + 200) = *(void *)(v17 + 200);
      long long v67 = *(_OWORD *)(v17 + 232);
      *(_OWORD *)(v86 + 232) = v67;
      uint64_t v68 = v67;
      uint64_t v69 = **(void (***)(uint64_t, uint64_t, uint64_t))(v67 - 8);
      swift_retain();
      v69(v86 + 208, v17 + 208, v68);
      uint64_t v70 = *(void *)(v17 + 256);
      *(void *)(v86 + 248) = *(void *)(v17 + 248);
      *(void *)(v86 + 256) = v70;
      uint64_t v71 = *(void *)(v17 + 272);
      *(void *)(v86 + 264) = *(void *)(v17 + 264);
      *(void *)(v86 + 272) = v71;
      uint64_t v72 = *(void *)(v17 + 288);
      *(void *)(v86 + 280) = *(void *)(v17 + 280);
      *(void *)(v86 + 288) = v72;
      long long v73 = *(void **)(v17 + 296);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      id v74 = v73;
      *(void *)(v86 + 296) = v73;
      uint64_t v61 = v84;
      break;
    default:
      long long v18 = *(_OWORD *)(v17 + 24);
      *(_OWORD *)(v86 + 24) = v18;
      (**(void (***)(uint64_t, uint64_t))(v18 - 8))(v86, v17);
      uint64_t v82 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v19 = v82[5];
      uint64_t v20 = v86 + v19;
      uint64_t v21 = v17 + v19;
      uint64_t v22 = sub_1C151772C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      uint64_t v23 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v24 = v23[5];
      uint64_t v25 = v20 + v24;
      uint64_t v26 = v21 + v24;
      uint64_t v27 = sub_1C151757C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      uint64_t v28 = v23[6];
      uint64_t v29 = v20 + v28;
      uint64_t v30 = v21 + v28;
      *(_OWORD *)uint64_t v29 = *(_OWORD *)(v21 + v28);
      *(unsigned char *)(v29 + 16) = *(unsigned char *)(v21 + v28 + 16);
      *(_WORD *)(v29 + 17) = *(_WORD *)(v21 + v28 + 17);
      *(unsigned char *)(v29 + 19) = *(unsigned char *)(v21 + v28 + 19);
      *(_DWORD *)(v29 + 20) = *(_DWORD *)(v21 + v28 + 20);
      unint64_t v31 = *(void *)(v21 + v28 + 24);
      if (v31 >= 2) {
        unint64_t v31 = swift_bridgeObjectRetain();
      }
      *(void *)(v29 + 24) = v31;
      uint64_t v32 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v33 = *(int *)(v32 + 36);
      __dst = (void *)(v29 + v33);
      uint64_t v34 = (const void *)(v30 + v33);
      uint64_t v35 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        sub_1C01BB2C0();
        memcpy(__dst, v34, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        uint64_t v44 = sub_1C151B62C();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v44 - 8) + 16))(__dst, v34, v44);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v35);
      }
      *(void *)(v29 + *(int *)(v32 + 40)) = *(void *)(v30 + *(int *)(v32 + 40));
      *(void *)(v20 + v23[7]) = *(void *)(v21 + v23[7]);
      *(void *)(v20 + v23[8]) = *(void *)(v21 + v23[8]);
      *(unsigned char *)(v20 + v23[9]) = *(unsigned char *)(v21 + v23[9]);
      *(void *)(v20 + v23[10]) = *(void *)(v21 + v23[10]);
      *(unsigned char *)(v20 + v23[11]) = *(unsigned char *)(v21 + v23[11]);
      *(void *)(v20 + v23[12]) = *(void *)(v21 + v23[12]);
      uint64_t v45 = v82[6];
      uint64_t v46 = v86 + v45;
      uint64_t v47 = v17 + v45;
      *(unsigned char *)uint64_t v46 = *(unsigned char *)(v17 + v45);
      uint64_t v48 = v17 + v45 + 8;
      long long v49 = *(_OWORD *)(v17 + v45 + 32);
      *(_OWORD *)(v46 + 32) = v49;
      uint64_t v50 = v49;
      uint64_t v51 = **(void (***)(uint64_t, uint64_t, uint64_t))(v49 - 8);
      swift_retain();
      swift_retain();
      v51(v46 + 8, v48, v50);
      uint64_t v52 = *(void *)(v47 + 56);
      *(void *)(v46 + 48) = *(void *)(v47 + 48);
      *(void *)(v46 + 56) = v52;
      uint64_t v53 = *(void *)(v47 + 72);
      *(void *)(v46 + 64) = *(void *)(v47 + 64);
      *(void *)(v46 + 72) = v53;
      *(void *)(v46 + 80) = *(void *)(v47 + 80);
      *(unsigned char *)(v46 + 88) = *(unsigned char *)(v47 + 88);
      *(void *)(v46 + 96) = *(void *)(v47 + 96);
      uint64_t v54 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v55 = v54[13];
      uint64_t v78 = v47 + v55;
      uint64_t v80 = v46 + v55;
      uint64_t v56 = sub_1C151787C();
      uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v76(v80, v78, v56);
      *(void *)(v46 + v54[14]) = *(void *)(v47 + v54[14]);
      *(void *)(v46 + v54[15]) = *(void *)(v47 + v54[15]);
      *(unsigned char *)(v46 + v54[16]) = *(unsigned char *)(v47 + v54[16]);
      *(void *)(v46 + v54[17]) = *(void *)(v47 + v54[17]);
      *(void *)(v46 + v54[18]) = *(void *)(v47 + v54[18]);
      *(void *)(v46 + v54[19]) = *(void *)(v47 + v54[19]);
      uint64_t v57 = v82[7];
      uint64_t v58 = v86 + v57;
      uint64_t v59 = v17 + v57;
      *(unsigned char *)uint64_t v58 = *(unsigned char *)v59;
      *(_OWORD *)(v58 + 8) = *(_OWORD *)(v59 + 8);
      *(_OWORD *)(v58 + 24) = *(_OWORD *)(v59 + 24);
      uint64_t v60 = *(void *)(v59 + 48);
      *(void *)(v58 + 40) = *(void *)(v59 + 40);
      *(void *)(v58 + 48) = v60;
      *(void *)(v86 + v82[8]) = *(void *)(v17 + v82[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v61 = v84;
      a1 = v83;
      break;
  }
  swift_storeEnumTagMultiPayload();
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(v61 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C01D3300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(a1 + 72);
  unint64_t v7 = *(void *)(a2 + 72);
  if (v6 == 2)
  {
    if (v7 > 2) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v7 == 2)
  {
    sub_1C01D3D9C(a1 + 64);
LABEL_11:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_12;
  }
  if (v6 < 2)
  {
    if (v7 >= 2)
    {
LABEL_8:
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v7 < 2)
  {
    sub_1C01CE718(a1 + 64, (uint64_t (*)(void))sub_1C01D3CEC);
    goto LABEL_11;
  }
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_12:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    sub_1C01CE718(a1 + v8, type metadata accessor for DebugFormatTestCaseResult.Result);
    type metadata accessor for DebugFormatTestCaseResult.Result(0);
    uint64_t v64 = a3;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
        *(void *)uint64_t v9 = *(void *)v10;
        *(void *)(v9 + 8) = *(void *)(v10 + 8);
        *(void *)(v9 + 16) = *(void *)(v10 + 16);
        *(void *)(v9 + 24) = *(void *)(v10 + 24);
        *(void *)(v9 + 32) = *(void *)(v10 + 32);
        *(void *)(v9 + 40) = *(void *)(v10 + 40);
        *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
        *(void *)(v9 + 56) = *(void *)(v10 + 56);
        unint64_t v33 = *(void *)(v10 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v33 <= 2)
        {
          *(_OWORD *)(v9 + 64) = *(_OWORD *)(v10 + 64);
        }
        else
        {
          *(unsigned char *)(v9 + 64) = *(unsigned char *)(v10 + 64);
          *(void *)(v9 + 72) = *(void *)(v10 + 72);
          swift_bridgeObjectRetain();
        }
        *(void *)(v9 + 80) = *(void *)(v10 + 80);
        *(void *)(v9 + 88) = *(void *)(v10 + 88);
        *(void *)(v9 + 96) = *(void *)(v10 + 96);
        *(void *)(v9 + 104) = *(void *)(v10 + 104);
        *(void *)(v9 + 112) = *(void *)(v10 + 112);
        *(void *)(v9 + 120) = *(void *)(v10 + 120);
        *(unsigned char *)(v9 + 128) = *(unsigned char *)(v10 + 128);
        *(void *)(v9 + 136) = *(void *)(v10 + 136);
        *(void *)(v9 + 144) = *(void *)(v10 + 144);
        *(void *)(v9 + 152) = *(void *)(v10 + 152);
        uint64_t v47 = *(void *)(v10 + 184);
        *(void *)(v9 + 184) = v47;
        *(void *)(v9 + 192) = *(void *)(v10 + 192);
        uint64_t v55 = **(void (***)(uint64_t, uint64_t, uint64_t))(v47 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v55(v9 + 160, v10 + 160, v47);
        *(void *)(v9 + 200) = *(void *)(v10 + 200);
        uint64_t v48 = *(void *)(v10 + 232);
        *(void *)(v9 + 232) = v48;
        *(void *)(v9 + 240) = *(void *)(v10 + 240);
        long long v49 = **(void (***)(uint64_t, uint64_t, uint64_t))(v48 - 8);
        swift_retain();
        v49(v9 + 208, v10 + 208, v48);
        *(void *)(v9 + 248) = *(void *)(v10 + 248);
        *(void *)(v9 + 256) = *(void *)(v10 + 256);
        *(void *)(v9 + 264) = *(void *)(v10 + 264);
        *(void *)(v9 + 272) = *(void *)(v10 + 272);
        *(void *)(v9 + 280) = *(void *)(v10 + 280);
        *(void *)(v9 + 288) = *(void *)(v10 + 288);
        uint64_t v50 = *(void **)(v10 + 296);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        id v51 = v50;
        *(void *)(v9 + 296) = v50;
        break;
      default:
        uint64_t v11 = *(void *)(v10 + 24);
        *(void *)(v9 + 24) = v11;
        *(void *)(v9 + 32) = *(void *)(v10 + 32);
        (**(void (***)(uint64_t, uint64_t))(v11 - 8))(v9, v10);
        uint64_t v63 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
        uint64_t v12 = v63[5];
        uint64_t v13 = v9 + v12;
        uint64_t v14 = v10 + v12;
        uint64_t v15 = sub_1C151772C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        uint64_t v16 = (int *)type metadata accessor for GroupLayoutContext();
        uint64_t v17 = v16[5];
        uint64_t v18 = v13 + v17;
        uint64_t v19 = v14 + v17;
        uint64_t v20 = sub_1C151757C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        uint64_t v21 = v16[6];
        uint64_t v22 = v13 + v21;
        uint64_t v23 = v14 + v21;
        long long v24 = *(_OWORD *)(v14 + v21);
        *(unsigned char *)(v22 + 16) = *(unsigned char *)(v14 + v21 + 16);
        *(_OWORD *)uint64_t v22 = v24;
        LOBYTE(v21) = *(unsigned char *)(v14 + v21 + 19);
        *(_WORD *)(v22 + 17) = *(_WORD *)(v23 + 17);
        *(unsigned char *)(v22 + 19) = v21;
        *(_WORD *)(v22 + 20) = *(_WORD *)(v23 + 20);
        *(_WORD *)(v22 + 22) = *(_WORD *)(v23 + 22);
        unint64_t v25 = *(void *)(v23 + 24);
        if (v25 >= 2) {
          unint64_t v25 = swift_bridgeObjectRetain();
        }
        *(void *)(v22 + 24) = v25;
        uint64_t v26 = type metadata accessor for FeedLayoutSolverOptions(0);
        uint64_t v27 = *(int *)(v26 + 36);
        uint64_t v59 = v26;
        __dst = (void *)(v22 + v27);
        uint64_t v28 = (void *)(v23 + v27);
        uint64_t v29 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
        uint64_t v56 = *(void *)(v29 - 8);
        __src = v28;
        uint64_t v30 = v28;
        uint64_t v31 = v29;
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v56 + 48))(v30, 1, v29))
        {
          sub_1C01BB2C0();
          memcpy(__dst, __src, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          uint64_t v34 = sub_1C151B62C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(__dst, __src, v34);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(__dst, 0, 1, v31);
        }
        *(void *)(v22 + *(int *)(v59 + 40)) = *(void *)(v23 + *(int *)(v59 + 40));
        *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
        *(void *)(v13 + v16[8]) = *(void *)(v14 + v16[8]);
        *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
        *(void *)(v13 + v16[10]) = *(void *)(v14 + v16[10]);
        *(unsigned char *)(v13 + v16[11]) = *(unsigned char *)(v14 + v16[11]);
        *(void *)(v13 + v16[12]) = *(void *)(v14 + v16[12]);
        uint64_t v35 = v63[6];
        uint64_t v36 = v9 + v35;
        uint64_t v37 = v10 + v35;
        *(unsigned char *)uint64_t v36 = *(unsigned char *)(v10 + v35);
        uint64_t v60 = v10 + v35 + 8;
        __dsta = (void *)(v9 + v35 + 8);
        uint64_t v38 = *(void *)(v10 + v35 + 32);
        *(void *)(v36 + 32) = v38;
        *(void *)(v36 + 40) = *(void *)(v10 + v35 + 40);
        uint64_t v39 = **(void (***)(void *, uint64_t, uint64_t))(v38 - 8);
        swift_retain();
        swift_retain();
        v39(__dsta, v60, v38);
        *(void *)(v36 + 48) = *(void *)(v37 + 48);
        *(void *)(v36 + 56) = *(void *)(v37 + 56);
        *(void *)(v36 + 64) = *(void *)(v37 + 64);
        *(void *)(v36 + 72) = *(void *)(v37 + 72);
        *(void *)(v36 + 80) = *(void *)(v37 + 80);
        *(unsigned char *)(v36 + 88) = *(unsigned char *)(v37 + 88);
        *(void *)(v36 + 96) = *(void *)(v37 + 96);
        uint64_t v40 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v41 = v40[13];
        uint64_t v54 = v37 + v41;
        uint64_t v57 = v36 + v41;
        uint64_t v42 = sub_1C151787C();
        uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v53(v57, v54, v42);
        *(void *)(v36 + v40[14]) = *(void *)(v37 + v40[14]);
        *(void *)(v36 + v40[15]) = *(void *)(v37 + v40[15]);
        *(unsigned char *)(v36 + v40[16]) = *(unsigned char *)(v37 + v40[16]);
        *(void *)(v36 + v40[17]) = *(void *)(v37 + v40[17]);
        *(void *)(v36 + v40[18]) = *(void *)(v37 + v40[18]);
        *(void *)(v36 + v40[19]) = *(void *)(v37 + v40[19]);
        uint64_t v43 = v63[7];
        uint64_t v44 = v9 + v43;
        uint64_t v45 = v10 + v43;
        *(unsigned char *)uint64_t v44 = *(unsigned char *)v45;
        long long v46 = *(_OWORD *)(v45 + 8);
        *(_OWORD *)(v44 + 24) = *(_OWORD *)(v45 + 24);
        *(_OWORD *)(v44 + 8) = v46;
        *(void *)(v44 + 40) = *(void *)(v45 + 40);
        *(void *)(v44 + 48) = *(void *)(v45 + 48);
        *(void *)(v9 + v63[8]) = *(void *)(v10 + v63[8]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    a3 = v64;
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

void sub_1C01D3CEC()
{
  if (!qword_1EB888F20)
  {
    sub_1C01D3D48();
    unint64_t v0 = type metadata accessor for FormatSelectorValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB888F20);
    }
  }
}

unint64_t sub_1C01D3D48()
{
  unint64_t result = qword_1EB88C9C8;
  if (!qword_1EB88C9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88C9C8);
  }
  return result;
}

uint64_t sub_1C01D3D9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C01D3DF0(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v6 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 128) = a2[8];
  long long v7 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v8;
  long long v10 = *a2;
  long long v9 = a2[1];
  *(void *)(a1 + 144) = *((void *)a2 + 18);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)(a1 + v11);
  uint64_t v13 = (long long *)((char *)a2 + v11);
  *(_OWORD *)a1 = v10;
  *(_OWORD *)(a1 + 16) = v9;
  uint64_t v14 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v63 = v3;
    long long v33 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v33;
    *((void *)v12 + 4) = *((void *)v13 + 4);
    uint64_t v59 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
    uint64_t v34 = v59[5];
    uint64_t v61 = v13;
    uint64_t v62 = v12;
    uint64_t v18 = (char *)v12 + v34;
    uint64_t v19 = (char *)v13 + v34;
    uint64_t v35 = sub_1C151772C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v18, v19, v35);
    uint64_t v21 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v36 = v21[5];
    uint64_t v37 = &v18[v36];
    uint64_t v38 = &v19[v36];
    uint64_t v39 = sub_1C151757C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    uint64_t v40 = v21[6];
    uint64_t v27 = &v18[v40];
    uint64_t v28 = &v19[v40];
    *(_OWORD *)uint64_t v27 = *(_OWORD *)&v19[v40];
    v27[16] = v19[v40 + 16];
    *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v40 + 17];
    v27[19] = v19[v40 + 19];
    *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v40 + 20];
    *((void *)v27 + 3) = *(void *)&v19[v40 + 24];
    uint64_t v58 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v41 = *(int *)(v58 + 36);
    __dst = &v27[v41];
    uint64_t v30 = &v28[v41];
    uint64_t v31 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
LABEL_6:
      sub_1C01BB2C0();
      memcpy(__dst, v30, *(void *)(*(void *)(v42 - 8) + 64));
LABEL_9:
      *(void *)&v27[*(int *)(v58 + 40)] = *(void *)&v28[*(int *)(v58 + 40)];
      *(void *)&v18[v21[7]] = *(void *)&v19[v21[7]];
      *(void *)&v18[v21[8]] = *(void *)&v19[v21[8]];
      v18[v21[9]] = v19[v21[9]];
      *(void *)&v18[v21[10]] = *(void *)&v19[v21[10]];
      v18[v21[11]] = v19[v21[11]];
      *(void *)&v18[v21[12]] = *(void *)&v19[v21[12]];
      uint64_t v44 = v59[6];
      uint64_t v45 = (char *)v62 + v44;
      long long v46 = (char *)v61 + v44;
      *uint64_t v45 = *((unsigned char *)v61 + v44);
      *(_OWORD *)(v45 + 8) = *(_OWORD *)((char *)v61 + v44 + 8);
      *(_OWORD *)(v45 + 24) = *(_OWORD *)((char *)v61 + v44 + 24);
      *((void *)v45 + 5) = *(void *)((char *)v61 + v44 + 40);
      long long v47 = *(_OWORD *)((char *)v61 + v44 + 64);
      *((_OWORD *)v45 + 3) = *(_OWORD *)((char *)v61 + v44 + 48);
      *((_OWORD *)v45 + 4) = v47;
      *((void *)v45 + 10) = *(void *)((char *)v61 + v44 + 80);
      v45[88] = *((unsigned char *)v61 + v44 + 88);
      *((void *)v45 + 12) = *(void *)((char *)v61 + v44 + 96);
      uint64_t v48 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v49 = v48[13];
      uint64_t v50 = &v45[v49];
      id v51 = &v46[v49];
      uint64_t v52 = sub_1C151787C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      *(void *)&v45[v48[14]] = *(void *)&v46[v48[14]];
      *(void *)&v45[v48[15]] = *(void *)&v46[v48[15]];
      v45[v48[16]] = v46[v48[16]];
      *(void *)&v45[v48[17]] = *(void *)&v46[v48[17]];
      *(void *)&v45[v48[18]] = *(void *)&v46[v48[18]];
      *(void *)&v45[v48[19]] = *(void *)&v46[v48[19]];
      uint64_t v53 = v59[7];
      uint64_t v54 = (char *)v62 + v53;
      uint64_t v55 = (char *)v61 + v53;
      long long v56 = *((_OWORD *)v55 + 1);
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      *((_OWORD *)v54 + 1) = v56;
      *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
      *((void *)v54 + 6) = *((void *)v55 + 6);
      *(void *)((char *)v62 + v59[8]) = *(void *)((char *)v61 + v59[8]);
      swift_storeEnumTagMultiPayload();
      uint64_t v3 = v63;
      goto LABEL_10;
    }
LABEL_8:
    uint64_t v43 = sub_1C151B62C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(__dst, v30, v43);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v63 = v3;
    long long v16 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v16;
    *((void *)v12 + 4) = *((void *)v13 + 4);
    uint64_t v59 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
    uint64_t v17 = v59[5];
    uint64_t v61 = v13;
    uint64_t v62 = v12;
    uint64_t v18 = (char *)v12 + v17;
    uint64_t v19 = (char *)v13 + v17;
    uint64_t v20 = sub_1C151772C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    uint64_t v21 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v22 = v21[5];
    uint64_t v23 = &v18[v22];
    long long v24 = &v19[v22];
    uint64_t v25 = sub_1C151757C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    uint64_t v26 = v21[6];
    uint64_t v27 = &v18[v26];
    uint64_t v28 = &v19[v26];
    *(_OWORD *)uint64_t v27 = *(_OWORD *)&v19[v26];
    v27[16] = v19[v26 + 16];
    *(_WORD *)(v27 + 17) = *(_WORD *)&v19[v26 + 17];
    v27[19] = v19[v26 + 19];
    *((_DWORD *)v27 + 5) = *(_DWORD *)&v19[v26 + 20];
    *((void *)v27 + 3) = *(void *)&v19[v26 + 24];
    uint64_t v58 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v29 = *(int *)(v58 + 36);
    __dst = &v27[v29];
    uint64_t v30 = &v28[v29];
    uint64_t v31 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_10:
  *(void *)(a1 + *(int *)(v3 + 28)) = *(void *)((char *)a2 + *(int *)(v3 + 28));
  return a1;
}

uint64_t sub_1C01D45E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  long long v9 = (_OWORD *)(a2 + 64);
  unint64_t v10 = *(void *)(a1 + 72);
  unint64_t v11 = *(void *)(a2 + 72);
  if (v10 == 2) {
    goto LABEL_7;
  }
  if (v11 == 2)
  {
    sub_1C01D3D9C(a1 + 64);
LABEL_7:
    *(_OWORD *)(a1 + 64) = *v9;
    goto LABEL_8;
  }
  if (v10 < 2) {
    goto LABEL_7;
  }
  if (v11 < 2)
  {
    sub_1C01CE718(a1 + 64, (uint64_t (*)(void))sub_1C01D3CEC);
    goto LABEL_7;
  }
  *(unsigned char *)(a1 + 64) = *(unsigned char *)v9;
  *(void *)(a1 + 72) = v11;
  swift_bridgeObjectRelease();
LABEL_8:
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (_OWORD *)(a1 + v12);
    uint64_t v14 = (_OWORD *)(a2 + v12);
    sub_1C01CE718(a1 + v12, type metadata accessor for DebugFormatTestCaseResult.Result);
    uint64_t v15 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v93 = a3;
      long long v36 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v36;
      *((void *)v13 + 4) = *((void *)v14 + 4);
      uint64_t v90 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v37 = v90[5];
      uint64_t v38 = (char *)v13 + v37;
      uint64_t v92 = v14;
      uint64_t v39 = (char *)v14 + v37;
      uint64_t v40 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
      uint64_t v41 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v42 = v41[5];
      uint64_t v43 = &v38[v42];
      uint64_t v44 = &v39[v42];
      uint64_t v45 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
      uint64_t v46 = v41[6];
      long long v47 = &v38[v46];
      uint64_t v48 = &v39[v46];
      *(_OWORD *)long long v47 = *(_OWORD *)&v39[v46];
      v47[16] = v39[v46 + 16];
      *(_WORD *)(v47 + 17) = *(_WORD *)&v39[v46 + 17];
      v47[19] = v39[v46 + 19];
      *((_DWORD *)v47 + 5) = *(_DWORD *)&v39[v46 + 20];
      *((void *)v47 + 3) = *(void *)&v39[v46 + 24];
      uint64_t v49 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v50 = *(int *)(v49 + 36);
      uint64_t v86 = &v47[v50];
      uint64_t v88 = v49;
      id v51 = &v48[v50];
      uint64_t v52 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v84 = *(void *)(v52 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v84 + 48))(v51, 1, v52))
      {
        sub_1C01BB2C0();
        memcpy(v86, v51, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        uint64_t v68 = sub_1C151B62C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v86, v51, v68);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v86, 0, 1, v52);
      }
      *(void *)&v47[*(int *)(v88 + 40)] = *(void *)&v48[*(int *)(v88 + 40)];
      *(void *)&v38[v41[7]] = *(void *)&v39[v41[7]];
      *(void *)&v38[v41[8]] = *(void *)&v39[v41[8]];
      v38[v41[9]] = v39[v41[9]];
      *(void *)&v38[v41[10]] = *(void *)&v39[v41[10]];
      v38[v41[11]] = v39[v41[11]];
      *(void *)&v38[v41[12]] = *(void *)&v39[v41[12]];
      uint64_t v69 = v90[6];
      uint64_t v70 = (char *)v13 + v69;
      uint64_t v71 = (char *)v92 + v69;
      *uint64_t v70 = *((unsigned char *)v92 + v69);
      *(_OWORD *)(v70 + 8) = *(_OWORD *)((char *)v92 + v69 + 8);
      *(_OWORD *)(v70 + 24) = *(_OWORD *)((char *)v92 + v69 + 24);
      *((void *)v70 + 5) = *(void *)((char *)v92 + v69 + 40);
      long long v72 = *(_OWORD *)((char *)v92 + v69 + 64);
      *((_OWORD *)v70 + 3) = *(_OWORD *)((char *)v92 + v69 + 48);
      *((_OWORD *)v70 + 4) = v72;
      *((void *)v70 + 10) = *(void *)((char *)v92 + v69 + 80);
      v70[88] = *((unsigned char *)v92 + v69 + 88);
      *((void *)v70 + 12) = *(void *)((char *)v92 + v69 + 96);
      long long v73 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v74 = v73[13];
      uint64_t v75 = &v70[v74];
      uint64_t v76 = &v71[v74];
      uint64_t v77 = sub_1C151787C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
      *(void *)&v70[v73[14]] = *(void *)&v71[v73[14]];
      *(void *)&v70[v73[15]] = *(void *)&v71[v73[15]];
      v70[v73[16]] = v71[v73[16]];
      *(void *)&v70[v73[17]] = *(void *)&v71[v73[17]];
      *(void *)&v70[v73[18]] = *(void *)&v71[v73[18]];
      *(void *)&v70[v73[19]] = *(void *)&v71[v73[19]];
      uint64_t v78 = v90[7];
      uint64_t v79 = (char *)v13 + v78;
      uint64_t v80 = (char *)v92 + v78;
      long long v81 = *((_OWORD *)v80 + 1);
      *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
      *((_OWORD *)v79 + 1) = v81;
      *((_OWORD *)v79 + 2) = *((_OWORD *)v80 + 2);
      *((void *)v79 + 6) = *((void *)v80 + 6);
      *(void *)((char *)v13 + v90[8]) = *(void *)((char *)v92 + v90[8]);
      goto LABEL_20;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v93 = a3;
      long long v17 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v17;
      *((void *)v13 + 4) = *((void *)v14 + 4);
      uint64_t v89 = (int *)type metadata accessor for DebugFormatTestCaseLayout();
      uint64_t v18 = v89[5];
      uint64_t v83 = v13;
      uint64_t v19 = (char *)v13 + v18;
      uint64_t v91 = v14;
      uint64_t v20 = (char *)v14 + v18;
      uint64_t v21 = sub_1C151772C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      uint64_t v22 = (int *)type metadata accessor for GroupLayoutContext();
      uint64_t v23 = v22[5];
      long long v24 = &v19[v23];
      uint64_t v25 = &v20[v23];
      uint64_t v26 = sub_1C151757C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      uint64_t v27 = v22[6];
      uint64_t v28 = &v19[v27];
      uint64_t v29 = &v20[v27];
      *(_OWORD *)uint64_t v28 = *(_OWORD *)&v20[v27];
      v28[16] = v20[v27 + 16];
      *(_WORD *)(v28 + 17) = *(_WORD *)&v20[v27 + 17];
      v28[19] = v20[v27 + 19];
      *((_DWORD *)v28 + 5) = *(_DWORD *)&v20[v27 + 20];
      *((void *)v28 + 3) = *(void *)&v20[v27 + 24];
      uint64_t v30 = type metadata accessor for FeedLayoutSolverOptions(0);
      uint64_t v31 = *(int *)(v30 + 36);
      uint64_t v85 = &v28[v31];
      uint64_t v87 = v30;
      uint64_t v32 = &v29[v31];
      uint64_t v33 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        sub_1C01BB2C0();
        memcpy(v85, v32, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        uint64_t v54 = sub_1C151B62C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v85, v32, v54);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v85, 0, 1, v33);
      }
      *(void *)&v28[*(int *)(v87 + 40)] = *(void *)&v29[*(int *)(v87 + 40)];
      *(void *)&v19[v22[7]] = *(void *)&v20[v22[7]];
      *(void *)&v19[v22[8]] = *(void *)&v20[v22[8]];
      v19[v22[9]] = v20[v22[9]];
      *(void *)&v19[v22[10]] = *(void *)&v20[v22[10]];
      v19[v22[11]] = v20[v22[11]];
      *(void *)&v19[v22[12]] = *(void *)&v20[v22[12]];
      uint64_t v55 = v89[6];
      long long v56 = (char *)v83 + v55;
      uint64_t v57 = (char *)v91 + v55;
      *long long v56 = *((unsigned char *)v91 + v55);
      *(_OWORD *)(v56 + 8) = *(_OWORD *)((char *)v91 + v55 + 8);
      *(_OWORD *)(v56 + 24) = *(_OWORD *)((char *)v91 + v55 + 24);
      *((void *)v56 + 5) = *(void *)((char *)v91 + v55 + 40);
      long long v58 = *(_OWORD *)((char *)v91 + v55 + 64);
      *((_OWORD *)v56 + 3) = *(_OWORD *)((char *)v91 + v55 + 48);
      *((_OWORD *)v56 + 4) = v58;
      *((void *)v56 + 10) = *(void *)((char *)v91 + v55 + 80);
      v56[88] = *((unsigned char *)v91 + v55 + 88);
      *((void *)v56 + 12) = *(void *)((char *)v91 + v55 + 96);
      uint64_t v59 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v60 = v59[13];
      uint64_t v61 = &v56[v60];
      uint64_t v62 = &v57[v60];
      uint64_t v63 = sub_1C151787C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
      *(void *)&v56[v59[14]] = *(void *)&v57[v59[14]];
      *(void *)&v56[v59[15]] = *(void *)&v57[v59[15]];
      v56[v59[16]] = v57[v59[16]];
      *(void *)&v56[v59[17]] = *(void *)&v57[v59[17]];
      *(void *)&v56[v59[18]] = *(void *)&v57[v59[18]];
      *(void *)&v56[v59[19]] = *(void *)&v57[v59[19]];
      uint64_t v64 = v89[7];
      uint64_t v65 = (char *)v83 + v64;
      long long v66 = (char *)v91 + v64;
      long long v67 = *((_OWORD *)v66 + 1);
      *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
      *((_OWORD *)v65 + 1) = v67;
      *((_OWORD *)v65 + 2) = *((_OWORD *)v66 + 2);
      *((void *)v65 + 6) = *((void *)v66 + 6);
      *(void *)((char *)v83 + v89[8]) = *(void *)((char *)v91 + v89[8]);
LABEL_20:
      swift_storeEnumTagMultiPayload();
      a3 = v93;
      goto LABEL_21;
    }
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
LABEL_21:
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C01D4F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01D4F34);
}

uint64_t sub_1C01D4F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C01D4FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01D4FF8);
}

uint64_t sub_1C01D4FF8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DebugFormatTestCaseResult.Result(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatTestCaseResult(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA197EF8);
}

uint64_t sub_1C01D50C0()
{
  uint64_t result = type metadata accessor for DebugFormatTestCaseResult.Result(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C01D5170(uint64_t a1)
{
  unint64_t v1 = *(void **)(a1 + 16);
  uint64_t v2 = (void *)sub_1C1515E9C();
  id v3 = objc_msgSend(v1, sel_assetHandleForURL_lifetimeHint_, v2, 1);

  id v4 = objc_msgSend(v3, sel_filePath);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1C151E62C();

    sub_1C01D7424();
    swift_allocObject();
    uint64_t v6 = sub_1C151908C();
  }
  else
  {
    MEMORY[0x1F4188790](0);
    sub_1C01D7424();
    swift_allocObject();
    uint64_t v6 = sub_1C151911C();
  }

  return v6;
}

uint64_t sub_1C01D52B0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1515E4C();
  id v6 = objc_allocWithZone(MEMORY[0x1E4F16608]);
  uint64_t v7 = (void *)sub_1C1515E9C();
  id v8 = objc_msgSend(v6, sel_initWithURL_, v7);

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *a1 = v8;
  return result;
}

void sub_1C01D53D4(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a3 + *(int *)(type metadata accessor for FormatVideoData(0) + 20);
  uint64_t v5 = *(void **)v4;
  char v6 = *(unsigned char *)(v4 + 8);
  uint64_t v7 = *(void *)(v4 + 16);
  char v8 = *(unsigned char *)(v4 + 24);
  char v9 = *(unsigned char *)(v4 + 25);
  uint64_t v11 = *(void **)(v4 + 32);
  uint64_t v10 = *(void *)(v4 + 40);
  uint64_t v14 = v5;
  char v15 = v6;
  uint64_t v16 = v7;
  char v17 = v8;
  char v18 = v9;
  uint64_t v19 = v11;
  uint64_t v20 = v10;
  id v12 = v5;
  id v13 = v11;
  sub_1C11A1720(v3, (uint64_t)&v14);
}

void sub_1C01D5484(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  if (a1)
  {
    uint64_t v9 = a2 + 16;
    swift_beginAccess();
    uint64_t v10 = MEMORY[0x1C18C9C60](v9);
    if (v10)
    {
      uint64_t v11 = (void *)v10;
      swift_beginAccess();
      uint64_t v12 = MEMORY[0x1C18C9C60](a3 + 16);
      if (v12)
      {
        id v13 = (id)v12;
        if ((void *)v12 == a4)
        {
          uint64_t v14 = a5 + *(int *)(type metadata accessor for FormatVideoData(0) + 20);
          char v15 = *(void **)v14;
          uint64_t v16 = *(void **)(v14 + 32);
          id v17 = a1;
          id v18 = v15;
          id v19 = v16;
          id v20 = objc_msgSend(v11, sel_layer);
          self;
          id v21 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

          objc_msgSend(v21, sel_setContentsGravity_, v19);
          id v22 = objc_msgSend(v11, sel_layer);
          self;
          id v13 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

          objc_msgSend(v13, sel_setImage_, v17);
          uint64_t v11 = v17;
        }

        uint64_t v11 = v13;
      }
    }
  }
}

uint64_t sub_1C01D5660()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1C01D56A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a3)
  {
    uint64_t v9 = *(void *)(a3 + 80);
    uint64_t v10 = *(void *)(a3 + 88);
    char v11 = *(unsigned char *)(a3 + 96);
    sub_1BFEF6828(v9, v10, v11);
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    char v11 = -2;
  }
  id v12 = objc_msgSend(a1, sel_layer);
  objc_msgSend(a1, sel_bounds);
  uint64_t v31 = v9;
  uint64_t v32 = v10;
  char v33 = v11;
  sub_1BFE6A0C8(v12, (uint64_t)&v31, v13, v14, v15, v16);

  uint64_t v17 = sub_1BFEF68AC(v9, v10, v11);
  if (a3)
  {
    if ((~*(void *)(a3 + 192) & 0xF000000000000007) != 0)
    {
      uint64_t v31 = *(void *)(a3 + 192);
      Class v18 = FormatColor.color.getter(v17);
    }
    else
    {
      Class v18 = 0;
    }
    sub_1C151F92C();

    unint64_t v24 = *(void *)(a3 + 64);
    if (!(v24 >> 61) && (v24 & 0xF000000000000007) != 0xF000000000000007)
    {
      uint64_t v31 = *(void *)(v24 + 16);
      uint64_t v25 = swift_retain();
      Class v26 = FormatColor.color.getter(v25);
      sub_1C151F95C();
      swift_release();
    }
    uint64_t v22 = *(void *)(a2 + 144);
    uint64_t v21 = *(void *)(a3 + 72);
    uint64_t v19 = *(void *)(a3 + 80);
    uint64_t v20 = *(void *)(a3 + 88);
    char v23 = *(unsigned char *)(a3 + 96);
    swift_bridgeObjectRetain();
    sub_1BFEF6828(v19, v20, v23);
  }
  else
  {
    sub_1C151F92C();
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = *(void *)(a2 + 144);
    char v23 = -2;
  }
  id v27 = objc_msgSend(a1, sel_layer);
  uint64_t v31 = v19;
  uint64_t v32 = v20;
  char v33 = v23;
  sub_1BFE69BFC(v22, v27, a5, v21, &v31);

  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v19, v20, v23);
  if (a3)
  {
    uint64_t v28 = *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v28 = 0;
  }
  uint64_t v31 = v28;
  sub_1BFE69FD4(v22, a1, &v31, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01D58FC(char *a1, uint64_t a2, void *a3)
{
  uint64_t v130 = a3;
  double v158 = (char *)a2;
  uint64_t v139 = *v3;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C00645C4(0, (unint64_t *)&qword_1EB887A08, type metadata accessor for FormatVideoData.Assets, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v153 = (uint64_t)&v129 - v7;
  uint64_t v131 = type metadata accessor for FormatVideoData(0);
  uint64_t v140 = *(void *)(v131 - 8);
  MEMORY[0x1F4188790](v131);
  uint64_t v141 = v8;
  uint64_t v142 = (uint64_t)&v129 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  double v147 = (char *)&v129 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  int v134 = (char *)&v129 - v13;
  sub_1C0092B34();
  double v151 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v138 = (uint64_t)&v129 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  Class v18 = (char *)&v129 - v17;
  sub_1C00645C4(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v5);
  MEMORY[0x1F4188790](v19 - 8);
  unsigned __int8 v156 = (char *)&v129 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v143 = (uint64_t)&v129 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v149 = (uint64_t)&v129 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v145 = (uint64_t)&v129 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v135 = (uint64_t)&v129 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v129 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v129 - v33;
  double v157 = a1;
  uint64_t v35 = &a1[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_assets];
  swift_beginAccess();
  uint64_t v36 = type metadata accessor for FormatVideoData.Assets(0);
  uint64_t v146 = *(void *)(v36 - 8);
  uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48);
  uint64_t v152 = v36;
  uint64_t v137 = v146 + 48;
  double v136 = v37;
  int v38 = ((uint64_t (*)(char *, uint64_t))v37)(v35, 1);
  unsigned __int8 v154 = v35;
  if (v38)
  {
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    unint64_t v40 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v39(v34, 1, 1, v9);
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    v41(v34, v35, v9);
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    unint64_t v40 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v39(v34, 0, 1, v9);
  }
  uint64_t v42 = v9;
  v41(v31, v158, v9);
  int v133 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v39;
  unint64_t v132 = v40;
  v39(v31, 0, 1, v9);
  uint64_t v43 = (uint64_t)&v18[v151[12]];
  sub_1C0025B10((uint64_t)v34, (uint64_t)v18);
  sub_1C0025B10((uint64_t)v31, v43);
  uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  unsigned int v45 = v44(v18, 1, v9);
  uint64_t v155 = v9;
  uint64_t v46 = v156;
  uint64_t v148 = v10;
  int v150 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v44;
  if (v45 != 1)
  {
    uint64_t v51 = v135;
    sub_1C0025B10((uint64_t)v18, v135);
    unsigned int v52 = v44((char *)v43, 1, v42);
    uint64_t v48 = v153;
    if (v52 != 1)
    {
      uint64_t v53 = v134;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v134, v43, v42);
      sub_1BFCBD0F4((unint64_t *)&unk_1EB871110, MEMORY[0x1E4F276F0]);
      char v54 = sub_1C151E5CC();
      uint64_t v55 = *(void (**)(char *, uint64_t))(v10 + 8);
      long long v56 = v53;
      uint64_t v46 = v156;
      v55(v56, v155);
      sub_1C002F608((uint64_t)v31);
      sub_1C002F608((uint64_t)v34);
      v55((char *)v51, v155);
      uint64_t v42 = v155;
      sub_1C002F608((uint64_t)v18);
      uint64_t v49 = (uint64_t)v154;
      uint64_t v50 = v152;
      uint64_t v57 = v149;
      if (v54) {
        goto LABEL_15;
      }
      goto LABEL_11;
    }
    sub_1C002F608((uint64_t)v31);
    sub_1C002F608((uint64_t)v34);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v51, v42);
    uint64_t v49 = (uint64_t)v154;
LABEL_9:
    sub_1C01D6DB8((uint64_t)v18);
    uint64_t v50 = v152;
LABEL_11:
    long long v58 = v157;
    id v59 = objc_msgSend(v157, sel_layer);
    self;
    objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setPlayer_, 0);

    uint64_t v60 = &v58[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties];
    uint64_t v61 = *(void **)&v58[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties];
    uint64_t v62 = *(void *)&v58[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 8];
    uint64_t v63 = *(void *)&v58[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 16];
    uint64_t v64 = *(void *)&v58[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 24];
    uint64_t v65 = *(void **)&v58[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_playerProperties + 32];
    *(_OWORD *)uint64_t v60 = 0u;
    *((_OWORD *)v60 + 1) = 0u;
    *((_OWORD *)v60 + 2) = 0u;
    sub_1C01D6E14(v61, v62, v63, v64, v65);
    uint64_t v66 = *(void *)&v58[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_displayStateCoordinator];
    uint64_t v67 = swift_beginAccess();
    int v68 = *(unsigned __int8 *)(v66 + 16);
    *(unsigned char *)(v66 + 16) = 0;
    if (v68 == 1) {
      *(_WORD *)(v66 + 56) = 2;
    }
    MEMORY[0x1F4188790](v67);
    uint64_t v69 = (uint64_t)v158;
    *(&v129 - 2) = v144;
    *(&v129 - 1) = v69;
    sub_1C151932C();
    sub_1BFC39268(0, &qword_1EA197F08);
    sub_1C151901C();
    swift_release();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    uint64_t v70 = (void *)sub_1C151F56C();
    uint64_t v71 = v142;
    sub_1C01D6E70(v69, v142, type metadata accessor for FormatVideoData);
    unint64_t v72 = (*(unsigned __int8 *)(v140 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
    uint64_t v73 = swift_allocObject();
    sub_1C01D7058(v71, v73 + v72);
    type metadata accessor for FormatVideoView();
    sub_1C151901C();
    swift_release();
    swift_release();

    swift_release();
    uint64_t v42 = v155;
    uint64_t v46 = v156;
    goto LABEL_14;
  }
  sub_1C002F608((uint64_t)v31);
  sub_1C002F608((uint64_t)v34);
  unsigned int v47 = v44((char *)v43, 1, v42);
  uint64_t v48 = v153;
  uint64_t v49 = (uint64_t)v154;
  if (v47 != 1) {
    goto LABEL_9;
  }
  sub_1C002F608((uint64_t)v18);
  uint64_t v50 = v152;
LABEL_14:
  uint64_t v57 = v149;
LABEL_15:
  uint64_t v74 = (uint64_t)&v158[*(int *)(v50 + 20)];
  uint64_t v75 = v145;
  sub_1C0025B10(v74, v145);
  if (v150(v75, 1, v42) == 1)
  {
    sub_1C002F608(v75);
    id v76 = objc_msgSend(v157, sel_layer);
    self;
    id v77 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

    objc_msgSend(v77, sel_setImage_, 0);
    sub_1C01D6E70((uint64_t)v158, v48, type metadata accessor for FormatVideoData.Assets);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v146 + 56))(v48, 0, 1, v50);
    swift_beginAccess();
    uint64_t v78 = v48;
    uint64_t v79 = v49;
    goto LABEL_33;
  }
  uint64_t v80 = v75;
  long long v81 = *(void (**)(char *, uint64_t, uint64_t))(v148 + 32);
  v81(v147, v80, v42);
  if (v136(v49, 1, v50)) {
    v133(v57, 1, 1, v42);
  }
  else {
    sub_1C0025B10(v49 + *(int *)(v50 + 20), v57);
  }
  uint64_t v82 = v42;
  uint64_t v83 = v143;
  sub_1C0025B10(v74, v143);
  uint64_t v84 = v138;
  uint64_t v85 = v138 + v151[12];
  sub_1C0025B10(v57, v138);
  sub_1C0025B10(v83, v85);
  uint64_t v86 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v150;
  if (v150(v84, 1, v82) == 1)
  {
    sub_1C002F608(v83);
    sub_1C002F608(v57);
    int v87 = v86(v85, 1, v82);
    uint64_t v88 = v82;
    uint64_t v89 = v147;
    uint64_t v90 = (uint64_t)v154;
    if (v87 == 1)
    {
      sub_1C002F608(v84);
      uint64_t v91 = v153;
      (*(void (**)(char *, uint64_t))(v148 + 8))(v89, v88);
LABEL_28:
      sub_1C01D6E70((uint64_t)v158, v91, type metadata accessor for FormatVideoData.Assets);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v146 + 56))(v91, 0, 1, v152);
      swift_beginAccess();
      uint64_t v78 = v91;
      uint64_t v79 = v90;
      goto LABEL_33;
    }
    goto LABEL_25;
  }
  sub_1C0025B10(v84, (uint64_t)v46);
  if (v86(v85, 1, v82) == 1)
  {
    sub_1C002F608(v143);
    sub_1C002F608(v149);
    (*(void (**)(char *, uint64_t))(v148 + 8))((char *)v46, v82);
    uint64_t v89 = v147;
LABEL_25:
    sub_1C01D6DB8(v84);
    goto LABEL_29;
  }
  uint64_t v92 = (char *)v46;
  uint64_t v93 = v134;
  v81(v134, v85, v82);
  sub_1BFCBD0F4((unint64_t *)&unk_1EB871110, MEMORY[0x1E4F276F0]);
  uint64_t v94 = v84;
  char v95 = sub_1C151E5CC();
  uint64_t v96 = *(void (**)(char *, uint64_t))(v148 + 8);
  v96(v93, v82);
  sub_1C002F608(v143);
  sub_1C002F608(v149);
  v96(v92, v82);
  sub_1C002F608(v94);
  uint64_t v89 = v147;
  uint64_t v91 = v153;
  uint64_t v90 = (uint64_t)v154;
  if (v95)
  {
    v96(v147, v155);
    goto LABEL_28;
  }
LABEL_29:
  uint64_t v97 = v144;
  int v98 = *(void **)(v144 + 16);
  uint64_t v99 = (void *)sub_1C1515E9C();
  id v100 = objc_msgSend(v98, sel_assetHandleForURL_lifetimeHint_, v99, 1);

  uint64_t v160 = sub_1BFC39268(0, (unint64_t *)&qword_1EB87A100);
  unint64_t v161 = sub_1BFF6C3E8();
  v159[0] = v100;
  unsigned __int8 v156 = (char *)v100;
  uint64_t v101 = v157;
  objc_msgSend(v157, sel_bounds);
  uint64_t v102 = sub_1C151B4CC();
  swift_allocObject();
  uint64_t v103 = sub_1C151B4AC();
  long long v104 = (void *)(v97 + 24);
  __swift_project_boxed_opaque_existential_1((void *)(v97 + 24), *(void *)(v97 + 48));
  uint64_t v160 = v102;
  unint64_t v161 = MEMORY[0x1E4FAC7D8];
  v159[0] = (id)v103;
  swift_retain();
  uint64_t v105 = (void *)sub_1C151A52C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v159);
  if (v105)
  {
    char v106 = (uint64_t)&v158[*(int *)(v131 + 20)];
    uint64_t v107 = *(void **)(v106 + 32);
    double v151 = (int *)*(id *)v106;
    id v108 = v107;
    id v109 = objc_msgSend(v101, sel_layer);
    self;
    id v110 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

    objc_msgSend(v110, sel_setContentsGravity_, v108);
    id v111 = objc_msgSend(v101, sel_layer);
    self;
    id v112 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

    objc_msgSend(v112, sel_setImage_, v105);
    swift_release();

    (*(void (**)(char *, uint64_t))(v148 + 8))(v89, v155);
  }
  else
  {
    id v113 = objc_msgSend(v101, sel_layer);
    self;
    uint64_t v114 = v101;
    id v115 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

    objc_msgSend(v115, sel_setImage_, 0);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    swift_retain();
    double v116 = (void *)sub_1C151F56C();
    uint64_t v117 = swift_allocObject();
    unsigned __int8 v118 = v130;
    swift_unknownObjectWeakInit();
    uint64_t v119 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v120 = v142;
    sub_1C01D6E70((uint64_t)v158, v142, type metadata accessor for FormatVideoData);
    unint64_t v121 = (*(unsigned __int8 *)(v140 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
    unsigned __int8 v122 = (void *)swift_allocObject();
    v122[2] = v119;
    v122[3] = v117;
    v122[4] = v118;
    sub_1C01D7058(v120, (uint64_t)v122 + v121);
    swift_retain();
    swift_retain();
    id v123 = v118;
    id v124 = objc_msgSend(v114, sel_layer);
    self;
    id v125 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_stillImageLayer);

    sub_1C0BA1678(v104, v103, v116, (uint64_t)sub_1C01D73A4, (uint64_t)v122, v125);
    swift_release();

    swift_release();
    (*(void (**)(char *, uint64_t))(v148 + 8))(v147, v155);
    swift_release();
    swift_release();
    swift_release();
  }
  uint64_t v126 = v153;
  sub_1C01D6E70((uint64_t)v158, v153, type metadata accessor for FormatVideoData.Assets);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v146 + 56))(v126, 0, 1, v152);
  uint64_t v127 = (uint64_t)v154;
  swift_beginAccess();
  uint64_t v78 = v126;
  uint64_t v79 = v127;
LABEL_33:
  sub_1C01D7140(v78, v79);
  return swift_endAccess();
}

uint64_t sub_1C01D6C20(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v13 = &a2[OBJC_IVAR____TtC8NewsFeed15FormatVideoView_identifier];
  *(void *)uint64_t v13 = v12;
  *((void *)v13 + 1) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C151F8FC();
  objc_msgSend(a2, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a1 + 120));
  uint64_t v14 = *(void *)(a1 + 152);
  if (v14) {
    uint64_t v15 = *(unsigned char *)(v14 + 200) & 1;
  }
  else {
    uint64_t v15 = 0;
  }
  objc_msgSend(a2, sel_setAccessibilityIgnoresInvertColors_, v15, a5);
  uint64_t v16 = *(void *)(a1 + 128);
  uint64_t v17 = *(unsigned __int8 *)(a1 + 136);
  objc_msgSend(a2, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a2, sel_setAccessibilityElementsHidden_, 0);
  if (v17 <= 0xFD)
  {
    if ((v17 & 0x80) != 0)
    {
      if (!(v16 | v17 ^ 0x80)) {
        goto LABEL_10;
      }
      Class v18 = &selRef_setAccessibilityElementsHidden_;
    }
    else
    {
      Class v18 = &selRef_setIsAccessibilityElement_;
    }
    objc_msgSend(a2, *v18, 1);
  }
LABEL_10:
  objc_msgSend(a2, sel_setClipsToBounds_, 1);
  sub_1C01D56A8(a2, a1, v14, a3, a6);
  return sub_1C01D58FC(a2, a4, v21);
}

uint64_t sub_1C01D6DB8(uint64_t a1)
{
  sub_1C0092B34();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C01D6E14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a1)
  {
  }
}

uint64_t sub_1C01D6E54()
{
  return sub_1C01D5170(*(void *)(v0 + 16));
}

uint64_t sub_1C01D6E70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C01D6ED8()
{
  uint64_t v1 = type metadata accessor for FormatVideoData(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(v0 + v2, v3);
  unint64_t v6 = v0 + v2 + *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v3)) {
    v5(v6, v3);
  }
  uint64_t v7 = (id *)(v0 + v2 + *(int *)(v1 + 20));

  return swift_deallocObject();
}

uint64_t sub_1C01D7058(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVideoData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C01D70BC(void **a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FormatVideoData(0) - 8);
  sub_1C01D53D4(a1, a2, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_1C01D7140(uint64_t a1, uint64_t a2)
{
  sub_1C00645C4(0, (unint64_t *)&qword_1EB887A08, type metadata accessor for FormatVideoData.Assets, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01D71D4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C01D720C()
{
  uint64_t v1 = type metadata accessor for FormatVideoData(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  swift_release();

  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(v0 + v2, v3);
  unint64_t v6 = v0 + v2 + *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v3)) {
    v5(v6, v3);
  }
  uint64_t v7 = (id *)(v0 + v2 + *(int *)(v1 + 20));

  return swift_deallocObject();
}

void sub_1C01D73A4(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FormatVideoData(0) - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unint64_t v6 = (void *)v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  sub_1C01D5484(a1, v4, v5, v6, v7);
}

uint64_t sub_1C01D741C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C025894C(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1C01D7424()
{
  if (!qword_1EB85C880)
  {
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85C880);
    }
  }
}

uint64_t PuzzleProgress.score.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t PuzzleProgress.rankID.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleProgress.usedReveal.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_1C01D74C4(unsigned __int8 *a1, char *a2)
{
  return sub_1C148F920(*a1, *a2);
}

uint64_t sub_1C01D74D0()
{
  return sub_1C0450410();
}

uint64_t sub_1C01D74DC()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01D75FC()
{
  return sub_1C0450410();
}

uint64_t sub_1C01D7604@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C01D96B4();
  *a1 = result;
  return result;
}

void sub_1C01D7634(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEC00000061746144;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED00006C6576654CLL;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x65726F6373;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 3:
      *(void *)a1 = 0x44496B6E6172;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      *(void *)a1 = 0x6576655264657375;
      *(void *)(a1 + 8) = 0xEA00000000006C61;
      break;
    case 5:
      strcpy((char *)a1, "playDuration");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 6:
      *(void *)a1 = 0x6465766C6F537369;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = 0x73736572676F7270;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C01D7738()
{
  uint64_t result = 0x73736572676F7270;
  switch(*v0)
  {
    case 2:
      uint64_t result = 0x65726F6373;
      break;
    case 3:
      uint64_t result = 0x44496B6E6172;
      break;
    case 4:
      uint64_t result = 0x6576655264657375;
      break;
    case 5:
      uint64_t result = 0x6172754479616C70;
      break;
    case 6:
      uint64_t result = 0x6465766C6F537369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C01D7824@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C01D96B4();
  *a1 = result;
  return result;
}

void sub_1C01D784C(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1C01D7858(uint64_t a1)
{
  unint64_t v2 = sub_1C01D87BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C01D7894(uint64_t a1)
{
  unint64_t v2 = sub_1C01D87BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C01D78D0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v77[4] = *(id *)MEMORY[0x1E4F143B8];
  if (!*(void *)(a1 + 16)
    || (unint64_t v4 = sub_1BFEF2D8C(0x73736572676F7270, 0xED00006C6576654CLL), (v5 & 1) == 0)
    || (sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v4, (uint64_t)v77), (swift_dynamicCast() & 1) == 0))
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1C15198DC();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EB93C7A8);
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C15198AC();
    os_log_type_t v14 = sub_1C151F36C();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = a2;
      uint64_t v16 = (void *)swift_slowAlloc();
      v77[0] = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_1C151E34C();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      sub_1BFDA76EC(v17, v19, (uint64_t *)v77);
      sub_1C151FE1C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v13, v14, "Failed parsing PuzzleProgress message. Missing progressLevel: %s", v15, 0xCu);
      swift_arrayDestroy();
      uint64_t v20 = v16;
      a2 = v73;
      MEMORY[0x1C18C9B00](v20, -1, -1);
      MEMORY[0x1C18C9B00](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_61;
  }
  uint64_t v6 = a1;
  if (!*(void *)(a1 + 16))
  {
    uint64_t v10 = 0;
    char v11 = 1;
    goto LABEL_27;
  }
  unint64_t v7 = sub_1BFEF2D8C(0x65726F6373, 0xE500000000000000);
  if ((v8 & 1) == 0)
  {
    uint64_t v10 = 0;
    char v11 = 1;
    if (*(void *)(a1 + 16)) {
      goto LABEL_18;
    }
LABEL_27:
    uint64_t v25 = 0;
    uint64_t v24 = 0;
LABEL_28:
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v7, (uint64_t)v77);
  int v9 = swift_dynamicCast();
  if (v9) {
    uint64_t v10 = v75;
  }
  else {
    uint64_t v10 = 0;
  }
  char v11 = v9 ^ 1;
  if (!*(void *)(a1 + 16)) {
    goto LABEL_27;
  }
LABEL_18:
  unint64_t v21 = sub_1BFEF2D8C(0x44496B6E6172, 0xE600000000000000);
  if (v22)
  {
    sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v21, (uint64_t)v77);
    int v23 = swift_dynamicCast();
    if (v23) {
      uint64_t v24 = v75;
    }
    else {
      uint64_t v24 = 0;
    }
    if (v23) {
      uint64_t v25 = v76;
    }
    else {
      uint64_t v25 = 0;
    }
    if (!*(void *)(a1 + 16)) {
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v41 = sub_1BFEF2D8C(0x6576655264657375, 0xEA00000000006C61);
  if (v42)
  {
    sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v41, (uint64_t)v77);
    if (swift_dynamicCast())
    {
      char v26 = v75;
      if (!*(void *)(v6 + 16)) {
        goto LABEL_44;
      }
      goto LABEL_30;
    }
  }
LABEL_29:
  char v26 = 0;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_44;
  }
LABEL_30:
  unint64_t v27 = sub_1BFEF2D8C(0x6172754479616C70, 0xEC0000006E6F6974);
  if (v28)
  {
    sub_1BFF6A008(*(void *)(v6 + 56) + 32 * v27, (uint64_t)v77);
    if (swift_dynamicCast())
    {
      if (*(void *)(v6 + 16)
        && (unint64_t v29 = sub_1BFEF2D8C(0x6465766C6F537369, 0xE800000000000000), (v30 & 1) != 0)
        && (sub_1BFF6A008(*(void *)(v6 + 56) + 32 * v29, (uint64_t)v77), (swift_dynamicCast() & 1) != 0))
      {
        if (*(void *)(v6 + 16))
        {
          unint64_t v31 = sub_1BFEF2D8C(0x73736572676F7270, 0xEC00000061746144);
          if (v32)
          {
            sub_1BFF6A008(*(void *)(v6 + 56) + 32 * v31, (uint64_t)v77);
            sub_1BFFB4FA4();
            if (swift_dynamicCast())
            {
              uint64_t v74 = a2;
              swift_bridgeObjectRelease();
              uint64_t v33 = self;
              uint64_t v34 = (void *)sub_1C151E32C();
              swift_bridgeObjectRelease();
              v77[0] = 0;
              id v35 = objc_msgSend(v33, sel_dataWithJSONObject_options_error_, v34, 0, v77);

              if (v35)
              {
                id v36 = v77[0];
                uint64_t v37 = sub_1C151606C();
                unint64_t v39 = v38;

                sub_1C00C2AC0(v37, v39);
                *(void *)uint64_t v74 = v75;
                *(void *)(v74 + 8) = v75;
                *(unsigned char *)(v74 + 16) = v75;
                *(void *)(v74 + 24) = v37;
                *(void *)(v74 + 32) = v39;
                *(void *)(v74 + 40) = v10;
                *(unsigned char *)(v74 + 48) = v11;
                *(void *)(v74 + 56) = v24;
                *(void *)(v74 + 64) = v25;
                *(unsigned char *)(v74 + 72) = v26;
                sub_1BFE95878(v37, v39);
                swift_bridgeObjectRelease();
                return result;
              }
              id v62 = v77[0];
              swift_bridgeObjectRelease();
              uint64_t v63 = (void *)sub_1C1515D3C();

              swift_willThrow();
              if (qword_1EB8814A0 != -1) {
                swift_once();
              }
              uint64_t v64 = sub_1C15198DC();
              __swift_project_value_buffer(v64, (uint64_t)qword_1EB93C7A8);
              id v65 = v63;
              id v66 = v63;
              uint64_t v67 = sub_1C15198AC();
              os_log_type_t v68 = sub_1C151F36C();
              if (os_log_type_enabled(v67, v68))
              {
                uint64_t v69 = (uint8_t *)swift_slowAlloc();
                uint64_t v70 = (void *)swift_slowAlloc();
                *(_DWORD *)uint64_t v69 = 138412290;
                id v71 = v63;
                unint64_t v72 = (void *)_swift_stdlib_bridgeErrorToNSError();
                v77[0] = v72;
                sub_1C151FE1C();
                *uint64_t v70 = v72;

                _os_log_impl(&dword_1BFC31000, v67, v68, "Failed to create InternalData error: %@", v69, 0xCu);
                sub_1C01DA31C();
                swift_arrayDestroy();
                MEMORY[0x1C18C9B00](v70, -1, -1);
                MEMORY[0x1C18C9B00](v69, -1, -1);
              }
              else
              {
              }
              a2 = v74;
              goto LABEL_60;
            }
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v43 = a2;
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v58 = sub_1C15198DC();
        __swift_project_value_buffer(v58, (uint64_t)qword_1EB93C7A8);
        swift_bridgeObjectRetain();
        unsigned int v45 = sub_1C15198AC();
        os_log_type_t v53 = sub_1C151F36C();
        if (os_log_type_enabled(v45, v53))
        {
          unsigned int v47 = (uint8_t *)swift_slowAlloc();
          uint64_t v48 = (void *)swift_slowAlloc();
          v77[0] = v48;
          *(_DWORD *)unsigned int v47 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v59 = sub_1C151E34C();
          unint64_t v61 = v60;
          swift_bridgeObjectRelease();
          sub_1BFDA76EC(v59, v61, (uint64_t *)v77);
          sub_1C151FE1C();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v57 = "Failed parsing PuzzleProgress message. Missing progressData: %s";
          goto LABEL_53;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v43 = a2;
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v52 = sub_1C15198DC();
        __swift_project_value_buffer(v52, (uint64_t)qword_1EB93C7A8);
        swift_bridgeObjectRetain();
        unsigned int v45 = sub_1C15198AC();
        os_log_type_t v53 = sub_1C151F36C();
        if (os_log_type_enabled(v45, v53))
        {
          unsigned int v47 = (uint8_t *)swift_slowAlloc();
          uint64_t v48 = (void *)swift_slowAlloc();
          v77[0] = v48;
          *(_DWORD *)unsigned int v47 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v54 = sub_1C151E34C();
          unint64_t v56 = v55;
          swift_bridgeObjectRelease();
          sub_1BFDA76EC(v54, v56, (uint64_t *)v77);
          sub_1C151FE1C();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v57 = "Failed parsing PuzzleProgress message. Missing isSolved: %s";
LABEL_53:
          _os_log_impl(&dword_1BFC31000, v45, v53, v57, v47, 0xCu);
          goto LABEL_48;
        }
      }
LABEL_58:

      swift_bridgeObjectRelease_n();
      goto LABEL_59;
    }
  }
LABEL_44:
  swift_bridgeObjectRelease();
  uint64_t v43 = a2;
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v44 = sub_1C15198DC();
  __swift_project_value_buffer(v44, (uint64_t)qword_1EB93C7A8);
  swift_bridgeObjectRetain();
  unsigned int v45 = sub_1C15198AC();
  os_log_type_t v46 = sub_1C151F36C();
  if (!os_log_type_enabled(v45, v46)) {
    goto LABEL_58;
  }
  unsigned int v47 = (uint8_t *)swift_slowAlloc();
  uint64_t v48 = (void *)swift_slowAlloc();
  v77[0] = v48;
  *(_DWORD *)unsigned int v47 = 136315138;
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1C151E34C();
  unint64_t v51 = v50;
  swift_bridgeObjectRelease();
  sub_1BFDA76EC(v49, v51, (uint64_t *)v77);
  sub_1C151FE1C();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BFC31000, v45, v46, "Failed parsing PuzzleProgress message. Missing playDuration: %s", v47, 0xCu);
LABEL_48:
  swift_arrayDestroy();
  MEMORY[0x1C18C9B00](v48, -1, -1);
  MEMORY[0x1C18C9B00](v47, -1, -1);

LABEL_59:
  a2 = v43;
LABEL_60:
  swift_bridgeObjectRelease();
LABEL_61:
  double result = 0.0;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 64) = 1;
  *(unsigned char *)(a2 + 72) = 0;
  return result;
}

uint64_t PuzzleProgress.encode(to:)(void *a1)
{
  sub_1C01D8C50(0, &qword_1EA197F10, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)v14 - v6;
  uint64_t v8 = *v1;
  uint64_t v15 = v1[1];
  v14[1] = *((unsigned __int8 *)v1 + 16);
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  uint64_t v19 = v1[5];
  uint64_t v20 = v8;
  int v24 = *((unsigned __int8 *)v1 + 48);
  uint64_t v11 = v1[7];
  uint64_t v17 = v1[8];
  uint64_t v18 = v11;
  int v16 = *((unsigned __int8 *)v1 + 72);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01D87BC();
  sub_1C1520F0C();
  uint64_t v22 = v9;
  uint64_t v23 = v10;
  char v25 = 0;
  sub_1C01D8810();
  uint64_t v12 = v21;
  sub_1C152078C();
  if (!v12)
  {
    LOBYTE(v22) = 1;
    sub_1C15207FC();
    LOBYTE(v22) = 2;
    sub_1C152077C();
    LOBYTE(v22) = 3;
    sub_1C152074C();
    LOBYTE(v22) = 4;
    sub_1C15207DC();
    LOBYTE(v22) = 5;
    sub_1C15207FC();
    LOBYTE(v22) = 6;
    sub_1C15207DC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C01D87BC()
{
  unint64_t result = qword_1EA197F18;
  if (!qword_1EA197F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197F18);
  }
  return result;
}

unint64_t sub_1C01D8810()
{
  unint64_t result = qword_1EA197F20;
  if (!qword_1EA197F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197F20);
  }
  return result;
}

uint64_t PuzzleProgress.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C01D8C50(0, &qword_1EA197F28, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C01D87BC();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v28 = 0;
  sub_1C01D8CB4();
  sub_1C152065C();
  uint64_t v11 = v25;
  unint64_t v10 = v26;
  LOBYTE(v25) = 1;
  sub_1C00C2AC0(v11, v26);
  uint64_t v23 = sub_1C15206DC();
  LOBYTE(v25) = 2;
  uint64_t v12 = sub_1C152063C();
  int v27 = v13;
  uint64_t v22 = v12;
  LOBYTE(v25) = 3;
  uint64_t v21 = sub_1C152060C();
  LOBYTE(v25) = 4;
  uint64_t v24 = v15;
  swift_bridgeObjectRetain();
  int v20 = sub_1C15206AC();
  LOBYTE(v25) = 5;
  uint64_t v19 = sub_1C15206DC();
  LOBYTE(v25) = 6;
  char v16 = sub_1C15206AC();
  v20 &= 1u;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1C00C2AC0(v11, v10);
  sub_1BFE95878(v11, v10);
  uint64_t v17 = v19;
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = v16 & 1;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v10;
  *(void *)(a2 + 40) = v22;
  *(unsigned char *)(a2 + 48) = v27 & 1;
  uint64_t v18 = v24;
  *(void *)(a2 + 56) = v21;
  *(void *)(a2 + 64) = v18;
  *(unsigned char *)(a2 + 72) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1BFE95878(v11, v10);
  return swift_bridgeObjectRelease();
}

void sub_1C01D8C50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C01D87BC();
    unint64_t v7 = a3(a1, &type metadata for PuzzleProgress.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C01D8CB4()
{
  unint64_t result = qword_1EA197F30;
  if (!qword_1EA197F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197F30);
  }
  return result;
}

uint64_t sub_1C01D8D08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleProgress.init(from:)(a1, a2);
}

uint64_t sub_1C01D8D20(void *a1)
{
  return PuzzleProgress.encode(to:)(a1);
}

uint64_t PuzzleProgress.debugDescription.getter()
{
  return 0;
}

uint64_t destroy for PuzzleProgress(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 32);
  if (v1 >> 60 != 15) {
    sub_1BFE95664(*(void *)(a1 + 24), v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleProgress(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (uint64_t *)(a2 + 24);
  unint64_t v5 = *(void *)(a2 + 32);
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
  }
  else
  {
    uint64_t v6 = *v4;
    sub_1BFE95820(*v4, *(void *)(a2 + 32));
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v5;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleProgress(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  unint64_t v5 = (uint64_t *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_1BFE95820(*v5, *(void *)(a2 + 32));
      uint64_t v9 = *(void *)(a1 + 24);
      unint64_t v10 = *(void *)(a1 + 32);
      *(void *)(a1 + 24) = v8;
      *(void *)(a1 + 32) = v6;
      sub_1BFE95664(v9, v10);
      goto LABEL_8;
    }
    sub_1C01D91B8(a1 + 24);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *uint64_t v4 = *(_OWORD *)v5;
    goto LABEL_8;
  }
  uint64_t v7 = *v5;
  sub_1BFE95820(*v5, *(void *)(a2 + 32));
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
LABEL_8:
  uint64_t v11 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t sub_1C01D91B8(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for PuzzleProgress(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = (_OWORD *)(a1 + 24);
  unint64_t v5 = (void *)(a2 + 24);
  unint64_t v6 = *(void *)(a1 + 32);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 32);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 24);
      *(void *)(a1 + 24) = *v5;
      *(void *)(a1 + 32) = v7;
      sub_1BFE95664(v8, v6);
      goto LABEL_6;
    }
    sub_1C01D91B8(a1 + 24);
  }
  *uint64_t v4 = *(_OWORD *)v5;
LABEL_6:
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleProgress(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 73)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleProgress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(void *)(result + 64) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleProgress()
{
  return &type metadata for PuzzleProgress;
}

uint64_t type metadata accessor for PuzzleProgressMessageHandler()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for PuzzleProgress.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01D9574);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleProgress.CodingKeys()
{
  return &type metadata for PuzzleProgress.CodingKeys;
}

unint64_t sub_1C01D95B0()
{
  unint64_t result = qword_1EA197F48;
  if (!qword_1EA197F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197F48);
  }
  return result;
}

unint64_t sub_1C01D9608()
{
  unint64_t result = qword_1EA197F50;
  if (!qword_1EA197F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197F50);
  }
  return result;
}

unint64_t sub_1C01D9660()
{
  unint64_t result = qword_1EA197F58;
  if (!qword_1EA197F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197F58);
  }
  return result;
}

uint64_t sub_1C01D96B4()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C01D9700(long long *a1, uint64_t a2)
{
  unsigned int v4 = *(void **)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzle);
  if (v4)
  {
    swift_unknownObjectRetain();
    if (sub_1C02AEE1C())
    {
      uint64_t v5 = (void *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService);
      uint64_t v6 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 24);
      uint64_t v7 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService + 32);
      __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleHistoryService), v6);
      id v8 = objc_msgSend(v4, sel_identifier);
      uint64_t v9 = sub_1C151E62C();
      uint64_t v11 = v10;

      char v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8) + 8))(v9, v11, v6);
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        uint64_t v13 = v5[3];
        uint64_t v14 = v5[4];
        __swift_project_boxed_opaque_existential_1(v5, v13);
        id v15 = objc_msgSend(v4, sel_identifier);
        uint64_t type = sub_1C151E62C();
        uint64_t v17 = v16;

        id v18 = objc_msgSend(objc_msgSend(v4, sel_puzzleType), sel_identifier);
        swift_unknownObjectRelease();
        uint64_t v19 = sub_1C151E62C();
        uint64_t v21 = v20;

        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 24))(type, v17, v19, v21, v13, v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v22 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleNotificationAutoEnableManager + 24);
        uint64_t v23 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleNotificationAutoEnableManager + 32);
        __swift_project_boxed_opaque_existential_1((void *)(a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_puzzleNotificationAutoEnableManager), v22);
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
      }
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_1C15198DC();
      __swift_project_value_buffer(v24, (uint64_t)qword_1EB93C7A8);
      swift_unknownObjectRetain();
      sub_1C01DA2A4((uint64_t)a1);
      swift_unknownObjectRetain();
      sub_1C01DA2A4((uint64_t)a1);
      uint64_t v25 = sub_1C15198AC();
      os_log_type_t v26 = sub_1C151F38C();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v47 = swift_slowAlloc();
        v52[0] = v47;
        *(_DWORD *)uint64_t v27 = 136315394;
        id v28 = objc_msgSend(v4, sel_identifier);
        uint64_t v29 = sub_1C151E62C();
        unint64_t v31 = v30;

        *(void *)&long long v48 = sub_1BFDA76EC(v29, v31, v52);
        sub_1C151FE1C();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2080;
        long long v32 = a1[3];
        long long v50 = a1[2];
        v51[0] = v32;
        *(_OWORD *)((char *)v51 + 9) = *(long long *)((char *)a1 + 57);
        long long v33 = a1[1];
        long long v48 = *a1;
        long long v49 = v33;
        uint64_t v34 = PuzzleProgress.debugDescription.getter();
        *(void *)&long long v48 = sub_1BFDA76EC(v34, v35, v52);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        sub_1C01DA2E0((uint64_t)a1);
        sub_1C01DA2E0((uint64_t)a1);
        _os_log_impl(&dword_1BFC31000, v25, v26, "Submitting puzzle progress for the puzzle=%s progress=[%s]", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v47, -1, -1);
        MEMORY[0x1C18C9B00](v27, -1, -1);
      }
      else
      {
        swift_unknownObjectRelease_n();
        sub_1C01DA2E0((uint64_t)a1);
        sub_1C01DA2E0((uint64_t)a1);
      }

      uint64_t v36 = v5[3];
      uint64_t v37 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v36);
      long long v38 = a1[3];
      long long v50 = a1[2];
      v51[0] = v38;
      *(_OWORD *)((char *)v51 + 9) = *(long long *)((char *)a1 + 57);
      long long v39 = a1[1];
      long long v48 = *a1;
      long long v49 = v39;
      (*(void (**)(long long *, void *, uint64_t, uint64_t))(v37 + 32))(&v48, v4, v36, v37);
    }
    swift_unknownObjectRelease();
  }
  uint64_t result = MEMORY[0x1C18C9C60](a2 + OBJC_IVAR____TtC8NewsFeed17PuzzleDataManager_delegate);
  if (result)
  {
    uint64_t v41 = result + OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_delegate;
    swift_beginAccess();
    if (MEMORY[0x1C18C9C60](v41))
    {
      uint64_t v42 = *(void *)(v41 + 8);
      uint64_t ObjectType = swift_getObjectType();
      long long v44 = a1[3];
      long long v50 = a1[2];
      v51[0] = v44;
      *(_OWORD *)((char *)v51 + 9) = *(long long *)((char *)a1 + 57);
      long long v45 = a1[1];
      long long v48 = *a1;
      long long v49 = v45;
      (*(void (**)(long long *, uint64_t, uint64_t))(v42 + 40))(&v48, ObjectType, v42);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1C01D9C0C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_body);
  uint64_t v5 = sub_1C151E33C();

  unint64_t v6 = sub_1C147180C(v5);
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_14;
  }
  if (!*(void *)(v6 + 16) || (unint64_t v7 = sub_1BFEF2D8C(0x7461745379616C70, 0xE900000000000065), (v8 & 1) == 0))
  {
    long long v55 = 0u;
    long long v56 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_1BFF6A008(*(void *)(v6 + 56) + 32 * v7, (uint64_t)&v55);
  swift_bridgeObjectRelease();
  if (!*((void *)&v56 + 1))
  {
LABEL_13:
    sub_1BFEFE4A0((uint64_t)&v55);
    goto LABEL_14;
  }
  sub_1BFFB4FA4();
  if (swift_dynamicCast())
  {
    sub_1C01D78D0(v45, (uint64_t)&v45);
    uint64_t v9 = v52;
    if (v52 != 1)
    {
      uint64_t v10 = v45;
      uint64_t v11 = v47;
      unint64_t v12 = v48;
      long long v55 = v45;
      LOBYTE(v56) = v46 & 1;
      *((void *)&v56 + 1) = v47;
      unint64_t v57 = v48;
      uint64_t v58 = v49;
      char v59 = v50 & 1;
      uint64_t v60 = v51;
      uint64_t v61 = v52;
      char v62 = v53 & 1;
      if ((*((void *)&v45 + 1) & 0x8000000000000000) == 0)
      {
        uint64_t v38 = *((void *)&v45 + 1);
        uint64_t v39 = v46;
        uint64_t v43 = v49;
        uint64_t v44 = v50;
        uint64_t v40 = v51;
        if (qword_1EB8814A0 != -1) {
          swift_once();
        }
        uint64_t v13 = sub_1C15198DC();
        __swift_project_value_buffer(v13, (uint64_t)qword_1EB93C7A8);
        sub_1C00C2AC0(v11, v12);
        swift_bridgeObjectRetain();
        sub_1C00C2AC0(v11, v12);
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_1C15198AC();
        os_log_type_t v15 = sub_1C151F38C();
        log = v14;
        uint64_t v42 = v11;
        if (os_log_type_enabled(v14, v15))
        {
          os_log_type_t type = v15;
          uint64_t v16 = (uint8_t *)swift_slowAlloc();
          uint64_t v35 = swift_slowAlloc();
          *(void *)&long long v45 = v35;
          *(_DWORD *)uint64_t v16 = 136315138;
          uint64_t v17 = PuzzleProgress.debugDescription.getter();
          uint64_t v54 = sub_1BFDA76EC(v17, v18, (uint64_t *)&v45);
          sub_1C151FE1C();
          swift_bridgeObjectRelease();
          unint64_t v37 = v12;
          uint64_t v19 = v39;
          uint64_t v20 = v40;
          sub_1C01DA250(v10, v38, v39, v11, v12, v43, v44, v40, v9);
          sub_1C01DA250(v10, v38, v39, v11, v12, v43, v44, v40, v9);
          _os_log_impl(&dword_1BFC31000, log, type, "PuzzleProgressMessageHandler received progress=%s", v16, 0xCu);
          uint64_t v21 = v11;
          uint64_t v22 = v38;
          swift_arrayDestroy();
          unint64_t v23 = v37;
          MEMORY[0x1C18C9B00](v35, -1, -1);
          MEMORY[0x1C18C9B00](v16, -1, -1);
        }
        else
        {
          uint64_t v22 = v38;
          uint64_t v19 = v39;
          uint64_t v33 = v11;
          unint64_t v23 = v12;
          sub_1C01DA250(v10, v38, v39, v33, v12, v43, v44, v40, v9);
          uint64_t v20 = v40;
          uint64_t v21 = v42;
          sub_1C01DA250(v10, v38, v39, v42, v23, v43, v44, v40, v9);
        }

        uint64_t v34 = MEMORY[0x1C18C9C60](v2 + OBJC_IVAR____TtC8NewsFeed28PuzzleProgressMessageHandler_delegate);
        if (v34)
        {
          sub_1C01D9700(&v55, v34);
          swift_unknownObjectRelease();
        }
        sub_1C01DA250(v10, v22, v19, v21, v23, v43, v44, v20, v9);
        return;
      }
      sub_1C01DA250(v45, *((uint64_t *)&v45 + 1), v46, v47, v48, v49, v50, v51, v52);
    }
  }
LABEL_14:
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1C15198DC();
  __swift_project_value_buffer(v24, (uint64_t)qword_1EB93C7A8);
  swift_unknownObjectRetain_n();
  uint64_t v25 = sub_1C15198AC();
  os_log_type_t v26 = sub_1C151F36C();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    *(void *)&long long v45 = v28;
    id v29 = objc_msgSend(a1, sel_body);
    sub_1C151E33C();

    uint64_t v30 = sub_1C151E34C();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_1BFDA76EC(v30, v32, (uint64_t *)&v45);
    sub_1C151FE1C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BFC31000, v25, v26, "PuzzleProgressMessageHandler received invalid message %s", v27, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v28, -1, -1);
    MEMORY[0x1C18C9B00](v27, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
}

uint64_t sub_1C01DA250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a9 != 1)
  {
    sub_1BFE95878(a4, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C01DA2A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C01DA2E0(uint64_t a1)
{
  return a1;
}

void sub_1C01DA31C()
{
  if (!qword_1EB861470)
  {
    sub_1C01AE924();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB861470);
    }
  }
}

void sub_1C01DA39C()
{
  uint64_t v1 = v0;
  v18.receiver = v0;
  v18.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v18, sel_viewDidLoad);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_tableView];
  objc_msgSend(v2, sel_setDelegate_, v1);
  objc_msgSend(v2, sel_setDataSource_, v1);
  objc_msgSend(v2, sel_setAlwaysBounceVertical_, 1);
  id v3 = objc_msgSend(self, sel_secondaryLabelColor);
  objc_msgSend(v2, sel_setTintColor_, v3);

  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v2, sel_setTableFooterView_, v4);

  type metadata accessor for DebugFormatTableViewCell();
  sub_1C151F26C();
  id v5 = objc_msgSend(v1, sel_view);
  if (v5)
  {
    unint64_t v6 = v5;
    objc_msgSend(v5, sel_addSubview_, v2);

    id v7 = objc_msgSend(v1, sel_navigationItem);
    char v8 = (void *)sub_1C151E5EC();
    objc_msgSend(v7, sel_setTitle_, v8);

    id v9 = objc_msgSend(v1, sel_navigationItem);
    sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C15320E0;
    uint64_t v11 = (void *)sub_1C151E5EC();
    id v12 = objc_msgSend(self, sel_systemImageNamed_, v11);

    id v13 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v14 = v1;
    id v15 = objc_msgSend(v13, sel_initWithImage_style_target_action_, v12, 0, v14, sel_doDismiss);

    *(void *)(v10 + 32) = v15;
    sub_1C151EBEC();
    sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
    uint64_t v16 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setRightBarButtonItems_, v16);

    sub_1C01DA6F8(0);
    uint64_t v17 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setToolbarItems_, v17);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C01DA6F8(char a1)
{
  if (a1)
  {
    id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
    objc_msgSend(v2, sel_startAnimating);
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithCustomView_, v2);
    sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1C15320F0;
    *(void *)(v4 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    *(void *)(v4 + 40) = v3;
    sub_1C151EBEC();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t ObjectType = swift_getObjectType();
    void v20[3] = ObjectType;
    v20[0] = v1;
    id v7 = v1;
    char v8 = (void *)sub_1C151E5EC();
    if (ObjectType)
    {
      id v9 = __swift_project_boxed_opaque_existential_1(v20, ObjectType);
      uint64_t v10 = *(void *)(ObjectType - 8);
      __n128 v11 = MEMORY[0x1F4188790](v9);
      id v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v10 + 16))(v13, v11);
      uint64_t v14 = sub_1C1520A7C();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, ObjectType);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
    else
    {
      uint64_t v14 = 0;
    }
    id v15 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    id v16 = objc_msgSend(v15, sel_initWithTitle_style_target_action_, v8, 2, v14, sel_doUploadWithSender_, v20[0]);

    swift_unknownObjectRelease();
    id v17 = objc_msgSend(self, sel_systemBlueColor);
    objc_msgSend(v16, sel_setTintColor_, v17);

    sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1C15320F0;
    *(void *)(v18 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
    *(void *)(v18 + 40) = v16;
    v20[0] = v18;
    sub_1C151EBEC();
    return v20[0];
  }
  return v5;
}

uint64_t type metadata accessor for DebugFormatUploadConfirmViewController()
{
  return self;
}

uint64_t sub_1C01DAC9C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_uploadService);
  uint64_t v2 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_entries);
  if (qword_1EA194610 != -1) {
    swift_once();
  }
  type metadata accessor for DebugFormatUploadService();
  sub_1C01DCEFC();
  sub_1C1516FBC();
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = v6;
  *(void *)(v3 + 24) = v1;
  *(void *)(v3 + 32) = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C151930C();
  swift_release();
  return v4;
}

uint64_t sub_1C01DADBC(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)a1;
  long long v4 = *(_OWORD *)(a1 + 8);
  if (MEMORY[0x1C18C9C60](a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_delegate))
  {
    sub_1C09E7538();
    swift_unknownObjectRelease();
  }
  v5[0] = v2;
  long long v6 = v4;
  return sub_1C01DAE3C(v5);
}

uint64_t sub_1C01DAE3C(char *a1)
{
  uint64_t v2 = v1;
  char v3 = *a1;
  uint64_t v5 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections;
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections);
  int64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v29 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections;
    uint64_t v30 = v2;
    uint64_t v33 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C05F6C08(0, v8, 0);
    uint64_t v9 = v33;
    uint64_t v10 = v7 + 48;
    char v31 = v3;
    do
    {
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v32 = *(void *)(v10 - 16);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v13 = sub_1C01DC374(v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = v5;
      swift_bridgeObjectRelease();
      uint64_t v33 = v9;
      unint64_t v16 = *(void *)(v9 + 16);
      unint64_t v15 = *(void *)(v9 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1C05F6C08(v15 > 1, v16 + 1, 1);
        uint64_t v9 = v33;
      }
      *(void *)(v9 + 16) = v16 + 1;
      id v17 = (void *)(v9 + 24 * v16);
      v17[4] = v32;
      v17[5] = v11;
      v17[6] = v13;
      v10 += 24;
      --v8;
      uint64_t v5 = v14;
      char v3 = v31;
    }
    while (v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = v29;
    uint64_t v2 = v30;
  }
  *(void *)(v2 + v6) = v9;
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_tableView), sel_reloadData);
  if (*(void *)(v4 + 16) <= *(void *)(v5 + 16)) {
    uint64_t v18 = *(void *)(v5 + 16);
  }
  else {
    uint64_t v18 = *(void *)(v4 + 16);
  }
  LOBYTE(v33) = v3;
  v34[0] = v5;
  v34[1] = v4;
  uint64_t result = sub_1C1507168();
  BOOL v20 = __OFSUB__(v18, result);
  uint64_t v21 = v18 - result;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    uint64_t v22 = sub_1C1507168();
    uint64_t v23 = sub_1C01DC100(v22, v21);
    uint64_t v25 = v24;
    uint64_t v26 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v22;
    *(void *)(v27 + 24) = v26;
    LOBYTE(v33) = 0;
    strcpy((char *)v34, "Update Result");
    HIWORD(v34[1]) = -4864;
    v34[2] = v23;
    v34[3] = v25;
    v34[4] = sub_1C01DCE98;
    v34[5] = v27;
    uint64_t v28 = (void *)(*(void *)(v2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_editor)
                   + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
    swift_beginAccess();
    if (*v28)
    {
      swift_retain();
      sub_1C0D6A240((long long *)&v33);
      swift_release();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C01DB140()
{
  return sub_1C01DB164();
}

uint64_t sub_1C01DB164()
{
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C1520CDC();

  LOBYTE(v3[0]) = 0;
  v3[1] = (id)0x726F727245;
  v3[2] = (id)0xE500000000000000;
  v3[3] = 0;
  v3[4] = (id)0xE000000000000000;
  v3[5] = 0;
  v3[6] = 0;
  uint64_t v1 = (void *)(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_editor)
                + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
  swift_beginAccess();
  if (*v1)
  {
    swift_retain();
    sub_1C0D6A240((long long *)v3);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

void sub_1C01DB26C(void *a1)
{
  sub_1C01DA6F8(0);
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  uint64_t v2 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setToolbarItems_, v2);

  id v3 = objc_msgSend(a1, sel_navigationController);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_view);

    if (v5)
    {
      objc_msgSend(v5, sel_setUserInteractionEnabled_, 1);
    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_1C01DB420()
{
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_53;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections);
  if (result >= *(void *)(v2 + 16))
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v3 = *(void *)(v2 + 24 * result + 48);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (result >= *(void *)(v3 + 16))
  {
LABEL_55:
    __break(1u);
    return result;
  }
  sub_1C01DC7FC(v3 + (result << 6) + 32, (uint64_t)v69);
  swift_bridgeObjectRelease();
  sub_1C01DC7FC((uint64_t)v69, (uint64_t)v66);
  if (v68)
  {
    if (v68 == 1)
    {
      type metadata accessor for DebugFormatTableViewCell();
      uint64_t v4 = (char *)sub_1C151F24C();
      id v5 = objc_msgSend(v4, sel_textLabel);
      if (v5)
      {
        uint64_t v6 = v5;
        id v7 = sub_1C009CF50();
        objc_msgSend(v6, sel_setAttributedText_, v7);
      }
      id v8 = objc_msgSend(v4, sel_textLabel);
      if (v8)
      {
        uint64_t v9 = v8;
        objc_msgSend(v8, sel_setNumberOfLines_, 0);
      }
      id v10 = objc_msgSend(v4, sel_detailTextLabel);
      if (v10)
      {
        uint64_t v11 = v10;
        id v12 = sub_1C009D3B8();
        objc_msgSend(v11, sel_setAttributedText_, v12);
      }
      id v13 = objc_msgSend(v4, sel_detailTextLabel);
      if (v13)
      {
        uint64_t v14 = v13;
        objc_msgSend(v13, sel_setNumberOfLines_, 0);
      }
      uint64_t v15 = OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor;
      unint64_t v16 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor];
      *(void *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor] = 0;

      id v17 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_circleView];
      objc_msgSend(v17, sel_setBackgroundColor_, *(void *)&v4[v15]);
      objc_msgSend(v17, sel_setHidden_, *(void *)&v4[v15] == 0);
      objc_msgSend(v4, sel_setAccessoryType_, 0);
    }
    else
    {
      uint64_t v21 = v66[1];
      type metadata accessor for DebugFormatTableViewCell();
      uint64_t v4 = (char *)sub_1C151F24C();
      id v22 = objc_msgSend(v4, sel_textLabel);
      if (v22)
      {
        uint64_t v23 = v22;
        id v24 = sub_1C009CF50();
        objc_msgSend(v23, sel_setAttributedText_, v24);
      }
      id v25 = objc_msgSend(v4, sel_textLabel);
      if (v25)
      {
        uint64_t v26 = v25;
        objc_msgSend(v25, sel_setNumberOfLines_, 0);
      }
      id v27 = objc_msgSend(v4, sel_detailTextLabel);
      if (v27)
      {
        uint64_t v28 = v27;
        id v29 = sub_1C009D3B8();
        objc_msgSend(v28, sel_setAttributedText_, v29);
      }
      id v30 = objc_msgSend(v4, sel_detailTextLabel);
      if (v30)
      {
        char v31 = v30;
        objc_msgSend(v30, sel_setNumberOfLines_, 0);
      }
      uint64_t v32 = *(void *)(v21 + 16);
      if (v32)
      {
        uint64_t v33 = 40;
        uint64_t v34 = *(void *)(v21 + 16);
        do
        {
          if ((*(void *)(v21 + v33) & 0x8000000000000000) != 0)
          {
            swift_bridgeObjectRelease();
            id v43 = objc_msgSend(self, sel_systemRedColor);
            uint64_t v44 = OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor;
            long long v45 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor];
            *(void *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor] = v43;
            id v46 = v43;

            uint64_t v47 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_circleView];
            objc_msgSend(v47, sel_setBackgroundColor_, *(void *)&v4[v44]);
            objc_msgSend(v47, sel_setHidden_, *(void *)&v4[v44] == 0);

            objc_msgSend(v4, sel_setAccessoryType_, 1);
            goto LABEL_50;
          }
          v33 += 16;
          --v34;
        }
        while (v34);
        uint64_t v35 = 40;
        while ((*(void *)(v21 + v35) & 0x8000000000000000) != 0)
        {
          v35 += 16;
          if (!--v32) {
            goto LABEL_33;
          }
        }
        swift_bridgeObjectRelease();
        id v57 = objc_msgSend(self, sel_systemGreenColor);
        uint64_t v58 = OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor;
        char v59 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor];
        *(void *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor] = v57;
        id v60 = v57;

        uint64_t v61 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_circleView];
        objc_msgSend(v61, sel_setBackgroundColor_, *(void *)&v4[v58]);
        objc_msgSend(v61, sel_setHidden_, *(void *)&v4[v58] == 0);
      }
      else
      {
LABEL_33:
        swift_bridgeObjectRelease();
        uint64_t v36 = OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor;
        unint64_t v37 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor];
        *(void *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor] = 0;

        uint64_t v38 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_circleView];
        objc_msgSend(v38, sel_setBackgroundColor_, *(void *)&v4[v36]);
        objc_msgSend(v38, sel_setHidden_, *(void *)&v4[v36] == 0);
      }
      char v62 = v4;
      objc_msgSend(v62, sel_setAccessoryType_, 0);
    }
LABEL_50:
    swift_release();
  }
  else
  {
    sub_1C01DC970((uint64_t)&v67, (uint64_t)v65);
    type metadata accessor for DebugFormatTableViewCell();
    uint64_t v4 = (char *)sub_1C151F24C();
    id v18 = objc_msgSend(v4, sel_textLabel);
    if (v18)
    {
      uint64_t v19 = v18;
      BOOL v20 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v19, sel_setText_, v20);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    id v39 = objc_msgSend(v4, sel_textLabel);
    if (v39)
    {
      uint64_t v40 = v39;
      objc_msgSend(v39, sel_setNumberOfLines_, 1);
    }
    id v41 = objc_msgSend(v4, sel_detailTextLabel);
    if (v41)
    {
      uint64_t v42 = v41;
      sub_1C01DC9D4((uint64_t)v65, (uint64_t)v63);
      if (v64)
      {
        __swift_project_boxed_opaque_existential_1(v63, v64);
        sub_1C152088C();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
      }
      else
      {
        sub_1C01DC8AC((uint64_t)v63);
      }
      unint64_t v48 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v42, sel_setText_, v48);
    }
    id v49 = objc_msgSend(v4, sel_detailTextLabel);
    if (v49)
    {
      uint64_t v50 = v49;
      id v51 = objc_msgSend(self, sel_secondaryLabelColor);
      objc_msgSend(v50, sel_setTextColor_, v51);
    }
    id v52 = objc_msgSend(v4, sel_detailTextLabel);
    if (v52)
    {
      char v53 = v52;
      objc_msgSend(v52, sel_setNumberOfLines_, 0);
    }
    uint64_t v54 = OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor;
    long long v55 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor];
    *(void *)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_indicatorColor] = 0;

    long long v56 = *(void **)&v4[OBJC_IVAR____TtC8NewsFeed24DebugFormatTableViewCell_circleView];
    objc_msgSend(v56, sel_setBackgroundColor_, *(void *)&v4[v54]);
    objc_msgSend(v56, sel_setHidden_, *(void *)&v4[v54] == 0);
    objc_msgSend(v4, sel_setAccessoryType_, 0);
    sub_1C01DC8AC((uint64_t)v65);
  }
  sub_1C01DC858((uint64_t)v69);
  return (unint64_t)v4;
}

unint64_t sub_1C01DBD7C(void *a1)
{
  uint64_t v2 = v1;
  sub_1C151F20C();
  unint64_t result = sub_1C151676C();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections];
  if (result >= *(void *)(v5 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)(v5 + 24 * result + 48);
  swift_bridgeObjectRetain();
  unint64_t result = sub_1C151675C();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (result >= *(void *)(v6 + 16))
  {
LABEL_18:
    __break(1u);
    return result;
  }
  sub_1C01DC7FC(v6 + (result << 6) + 32, (uint64_t)v21);
  swift_bridgeObjectRelease();
  sub_1C01DC7FC((uint64_t)v21, (uint64_t)v18);
  if (v20)
  {
    if (v20 == 1)
    {
      sub_1C01DC858((uint64_t)v21);
      return swift_release();
    }
    else
    {
      uint64_t v7 = v18[1];
      swift_release();
      type metadata accessor for DebugFormatInspectorPaneViewController();
      uint64_t v8 = *(void *)&v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_editor];
      sub_1BFE4F744(0, &qword_1EA1A4D40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      swift_retain();
      id v10 = sub_1C1229188(v7);
      swift_bridgeObjectRelease();
      *(void *)(inited + 32) = v10;
      uint64_t v11 = (void *)sub_1C0CF0780(v8, inited, 0, 0);
      objc_msgSend(v11, sel_setModalPresentationStyle_, 7);
      id v12 = objc_msgSend(v11, sel_popoverPresentationController);
      if (v12)
      {
        id v13 = v12;
        uint64_t v14 = (void *)sub_1C151670C();
        id v15 = objc_msgSend(a1, sel_cellForRowAtIndexPath_, v14);

        objc_msgSend(v13, sel_setSourceView_, v15);
      }
      id v16 = objc_msgSend(v11, sel_popoverPresentationController);
      if (v16)
      {
        id v17 = v16;
        objc_msgSend(v16, sel_setPermittedArrowDirections_, 12);
      }
      objc_msgSend(v2, sel_presentViewController_animated_completion_, v11, 1, 0);

      return sub_1C01DC858((uint64_t)v21);
    }
  }
  else
  {
    sub_1C01DC858((uint64_t)v21);
    swift_bridgeObjectRelease();
    return sub_1C01DC8AC((uint64_t)&v19);
  }
}

uint64_t sub_1C01DC100(uint64_t a1, uint64_t a2)
{
  if (a1)
  {
    if (a2)
    {
      v3[0] = 0;
      v3[1] = 0xE000000000000000;
      sub_1C15200FC();
      sub_1C151E80C();
      sub_1C152088C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
    }
    else
    {
      sub_1C15200FC();
      swift_bridgeObjectRelease();
      strcpy((char *)v3, "Upload failed ");
      HIBYTE(v3[1]) = -18;
    }
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    strcpy((char *)v3, "Uploaded ");
    WORD1(v3[1]) = 0;
    HIDWORD(v3[1]) = -385875968;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
  sub_1C151E80C();
  return v3[0];
}

void sub_1C01DC304(uint64_t a1, uint64_t a2)
{
  if (!a1)
  {
    uint64_t v2 = a2 + 16;
    swift_beginAccess();
    uint64_t v3 = (void *)MEMORY[0x1C18C9C60](v2);
    if (v3)
    {
      uint64_t v4 = v3;
      objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);
    }
  }
}

uint64_t sub_1C01DC374(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C05F6BD8(0, v1, 0);
    uint64_t v2 = v21;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1C01DC7FC(v4, (uint64_t)v16);
      if (v18)
      {
        uint64_t v5 = v16[0];
        if (v18 != 1) {
          swift_bridgeObjectRelease();
        }
        uint64_t v9 = *(void *)(v5 + 16);
        uint64_t v10 = *(void *)(v9 + 16);
        uint64_t v11 = *(void *)(v9 + 24);
        swift_bridgeObjectRetain();
        uint64_t v7 = sub_1C1506F88(v10, v11);
        swift_bridgeObjectRelease();
        v19[0] = v5;
        char v8 = 2;
      }
      else
      {
        uint64_t v6 = v16[0];
        uint64_t v7 = (void *)v16[1];
        sub_1C01DC970((uint64_t)&v17, (uint64_t)v20);
        char v8 = 0;
        v19[0] = v6;
      }
      v19[1] = v7;
      v20[40] = v8;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v21 = v2;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C05F6BD8(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v21;
      }
      unint64_t v14 = *(void *)(v2 + 16);
      unint64_t v13 = *(void *)(v2 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1C05F6BD8(v13 > 1, v14 + 1, 1);
        uint64_t v2 = v21;
      }
      *(void *)(v2 + 16) = v14 + 1;
      sub_1C01DCEA0((uint64_t)v19, v2 + (v14 << 6) + 32);
      v4 += 64;
      --v1;
    }
    while (v1);
  }
  return v2;
}

id sub_1C01DC520(uint64_t a1, unint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_uploadService;
  type metadata accessor for DebugFormatUploadService();
  swift_allocObject();
  uint64_t v7 = v2;
  *(void *)&v2[v6] = sub_1C0A0669C();
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_tableView;
  *(void *)&v7[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_editor] = a1;
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_entries] = a2;
  swift_retain_n();
  swift_bridgeObjectRetain();
  v39[5] = sub_1C0C5BC90();
  v39[6] = v9;
  v39[7] = v10;
  LOBYTE(v39[0]) = 0;
  unint64_t v11 = swift_bridgeObjectRetain();
  v39[8] = sub_1C0C5BE5C(v11, v39);
  v39[9] = v12;
  v39[10] = v13;
  LOBYTE(v39[0]) = 1;
  unint64_t v14 = swift_bridgeObjectRetain();
  v39[11] = sub_1C0C5BE5C(v14, v39);
  v39[12] = v15;
  v39[13] = v16;
  LOBYTE(v39[0]) = 2;
  unint64_t v17 = swift_bridgeObjectRetain();
  v39[14] = sub_1C0C5BE5C(v17, v39);
  v39[15] = v18;
  v39[16] = v19;
  LOBYTE(v39[0]) = 4;
  unint64_t v20 = swift_bridgeObjectRetain();
  v39[17] = sub_1C0C5BE5C(v20, v39);
  v39[18] = v21;
  v39[19] = v22;
  LOBYTE(v39[0]) = 6;
  unint64_t v23 = swift_bridgeObjectRetain();
  v39[20] = sub_1C0C5BE5C(v23, v39);
  v39[21] = v24;
  v39[22] = v25;
  LOBYTE(v39[0]) = 3;
  uint64_t v26 = 0;
  v39[23] = sub_1C0C5BE5C(a2, v39);
  v39[24] = v27;
  v39[25] = v28;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  do
  {
    if (*(void *)(v39[v26 + 7] + 16))
    {
      uint64_t v34 = v39[v26 + 5];
      long long v37 = *(_OWORD *)&v39[v26 + 6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v39[0] = v29;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C05F6C08(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v39[0];
      }
      unint64_t v31 = *(void *)(v29 + 16);
      unint64_t v30 = *(void *)(v29 + 24);
      long long v32 = v37;
      if (v31 >= v30 >> 1)
      {
        sub_1C05F6C08(v30 > 1, v31 + 1, 1);
        long long v32 = v37;
        uint64_t v29 = v39[0];
      }
      *(void *)(v29 + 16) = v31 + 1;
      uint64_t v33 = v29 + 24 * v31;
      *(void *)(v33 + 32) = v34;
      *(_OWORD *)(v33 + 40) = v32;
    }
    v26 += 3;
  }
  while (v26 != 21);
  swift_arrayDestroy();
  *(void *)&v7[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_sections] = v29;

  v38.receiver = v7;
  v38.super_class = ObjectType;
  return objc_msgSendSuper2(&v38, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1C01DC7FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C01DC858(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C01DC8AC(uint64_t a1)
{
  sub_1C01DC908();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C01DC908()
{
  if (!qword_1EA197F90)
  {
    sub_1BFC845BC(255, (unint64_t *)&unk_1EA1A8CE0);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA197F90);
    }
  }
}

uint64_t sub_1C01DC970(uint64_t a1, uint64_t a2)
{
  sub_1C01DC908();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01DC9D4(uint64_t a1, uint64_t a2)
{
  sub_1C01DC908();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C01DCA38()
{
  uint64_t v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_uploadService;
  type metadata accessor for DebugFormatUploadService();
  swift_allocObject();
  *(void *)&v0[v2] = sub_1C0A0669C();
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed38DebugFormatUploadConfirmViewController_tableView;
  *(void *)&v1[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1D00]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);

  sub_1C152040C();
  __break(1u);
}

void sub_1C01DCB1C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1400]), sel_initWithActivityIndicatorStyle_, 100);
  objc_msgSend(v2, sel_startAnimating);
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithCustomView_, v2);
  sub_1BFE4F744(0, (unint64_t *)&qword_1EB87A920);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C15320F0;
  *(void *)(v4 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(void *)(v4 + 40) = v3;
  sub_1C151EBEC();

  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  uint64_t v5 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setToolbarItems_, v5);

  id v6 = objc_msgSend(v1, sel_navigationController);
  if (!v6) {
    goto LABEL_4;
  }
  uint64_t v7 = v6;
  id v8 = objc_msgSend(v6, sel_view);

  if (v8)
  {
    objc_msgSend(v8, sel_setUserInteractionEnabled_, 0);

LABEL_4:
    MEMORY[0x1F4188790](v6);
    sub_1C151932C();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    uint64_t v9 = (void *)sub_1C151F56C();
    sub_1C151901C();
    swift_release();

    uint64_t v10 = (void *)sub_1C151F56C();
    sub_1C151904C();
    swift_release();

    unint64_t v11 = (void *)sub_1C151F56C();
    sub_1C15190AC();
    swift_release();
    swift_release();

    return;
  }
  __break(1u);
}

uint64_t sub_1C01DCE0C()
{
  return sub_1C01DAC9C(*(void *)(v0 + 16));
}

uint64_t sub_1C01DCE28()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C01DCE60()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C01DCE98()
{
  sub_1C01DC304(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C01DCEA0(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1C01DCEFC()
{
  unint64_t result = qword_1EA197FA0;
  if (!qword_1EA197FA0)
  {
    type metadata accessor for DebugFormatUploadService();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA197FA0);
  }
  return result;
}

uint64_t sub_1C01DCF54()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C01DCF94()
{
  return sub_1C0A028E8(*(unsigned __int8 *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t initializeBufferWithCopyOfBuffer for FormatMenuImageData(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C01DCFFC(*(void **)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1C01DCFFC(void *a1, char a2)
{
  if (a2) {
    return (id)swift_retain();
  }
  else {
    return a1;
  }
}

void destroy for FormatMenuImageData(uint64_t a1)
{
}

void sub_1C01DD018(void *a1, char a2)
{
  if (a2) {
    swift_release();
  }
  else {
}
  }

uint64_t assignWithCopy for FormatMenuImageData(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1C01DCFFC(*(void **)a2, v4);
  uint64_t v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C01DD018(v5, v6);
  return a1;
}

uint64_t assignWithTake for FormatMenuImageData(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C01DD018(v5, v6);
  return a1;
}

uint64_t sub_1C01DD0B8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuImageData()
{
  return &type metadata for FormatMenuImageData;
}

id FeedHeadlineTrack.audioTrack.getter()
{
  return *v0;
}

uint64_t FeedHeadlineTrack.init(audioTrack:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t initializeWithCopy for DebugFormatLayoutFeedItem(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for DebugFormatLayoutFeedItem(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for DebugFormatLayoutFeedItem(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatLayoutFeedItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatLayoutFeedItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatLayoutFeedItem()
{
  return &type metadata for DebugFormatLayoutFeedItem;
}

BOOL static FeedGroupConfigDataKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedGroupConfigDataKind.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FeedGroupConfigDataKind.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C01DD2F8()
{
  unint64_t result = qword_1EA198010;
  if (!qword_1EA198010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198010);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupConfigDataKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01DD418);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupConfigDataKind()
{
  return &type metadata for FeedGroupConfigDataKind;
}

uint64_t sub_1C01DD450(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    if (EnumCaseMultiPayload == 1)
    {
      *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = a2[3];
      *(void *)(a1 + 32) = v8;
      uint64_t v9 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v9;
      uint64_t v10 = a2[8];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = v10;
      uint64_t v11 = a2[10];
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = v11;
      uint64_t v61 = a2[12];
      *(void *)(a1 + 88) = a2[11];
      *(void *)(a1 + 96) = v61;
      uint64_t v57 = type metadata accessor for DebugNewsroomThemeData();
      uint64_t v12 = *(int *)(v57 + 48);
      __dst = (void *)(a1 + v12);
      uint64_t v54 = (char *)a2 + v12;
      uint64_t v13 = sub_1C151928C();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v59 = v15;
      uint64_t v53 = v14;
      if (v15(v54, 1, v13))
      {
        sub_1BFEC0CE8(0);
        memcpy(__dst, v54, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v14 + 16))(__dst, v54, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
      }
      uint64_t v24 = v13;
      sub_1C01DDB34();
      uint64_t v56 = v28;
      uint64_t v29 = *(int *)(v28 + 36);
      uint64_t v30 = a1 + v29;
      uint64_t v31 = (uint64_t)a2 + v29;
      uint64_t v32 = *(void *)(v31 + 8);
      *(void *)uint64_t v30 = *(void *)v31;
      *(void *)(v30 + 8) = v32;
      *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
      uint64_t v33 = *(void *)(v31 + 32);
      *(void *)(v30 + 24) = *(void *)(v31 + 24);
      *(void *)(v30 + 32) = v33;
      uint64_t v34 = *(void *)(v31 + 48);
      *(void *)(v30 + 40) = *(void *)(v31 + 40);
      *(void *)(v30 + 48) = v34;
      uint64_t v35 = *(void *)(v31 + 64);
      *(void *)(v30 + 56) = *(void *)(v31 + 56);
      *(void *)(v30 + 64) = v35;
      uint64_t v36 = *(void *)(v31 + 80);
      *(void *)(v30 + 72) = *(void *)(v31 + 72);
      *(void *)(v30 + 80) = v36;
      uint64_t v37 = *(void *)(v31 + 96);
      *(void *)(v30 + 88) = *(void *)(v31 + 88);
      *(void *)(v30 + 96) = v37;
      uint64_t v38 = *(int *)(v57 + 48);
      __dstb = (void *)(v30 + v38);
      id v39 = (const void *)(v31 + v38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v59(v39, 1, v24))
      {
LABEL_13:
        sub_1BFEC0CE8(0);
        memcpy(__dstb, v39, *(void *)(*(void *)(v51 - 8) + 64));
LABEL_15:
        *(void *)(a1 + *(int *)(v56 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(v56 + 40));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      uint64_t v18 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v18;
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v19 = a2[6];
      *(void *)(a1 + 40) = a2[5];
      *(void *)(a1 + 48) = v19;
      uint64_t v20 = a2[8];
      *(void *)(a1 + 56) = a2[7];
      *(void *)(a1 + 64) = v20;
      uint64_t v21 = a2[10];
      *(void *)(a1 + 72) = a2[9];
      *(void *)(a1 + 80) = v21;
      *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
      uint64_t v22 = a2[13];
      *(void *)(a1 + 96) = a2[12];
      *(void *)(a1 + 104) = v22;
      uint64_t v58 = type metadata accessor for DebugNewsroomLayoutData();
      uint64_t v23 = *(int *)(v58 + 52);
      __dsta = (void *)(a1 + v23);
      long long v55 = (char *)a2 + v23;
      uint64_t v24 = sub_1C151928C();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v60 = v26;
      uint64_t v53 = v25;
      if (v26(v55, 1, v24))
      {
        sub_1BFEC0CE8(0);
        memcpy(__dsta, v55, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v25 + 16))(__dsta, v55, v24);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(__dsta, 0, 1, v24);
      }
      sub_1C01DDAA0();
      uint64_t v56 = v40;
      uint64_t v41 = *(int *)(v40 + 36);
      uint64_t v42 = a1 + v41;
      uint64_t v43 = (uint64_t)a2 + v41;
      uint64_t v44 = *(void *)(v43 + 8);
      *(void *)uint64_t v42 = *(void *)v43;
      *(void *)(v42 + 8) = v44;
      uint64_t v45 = *(void *)(v43 + 24);
      *(void *)(v42 + 16) = *(void *)(v43 + 16);
      *(void *)(v42 + 24) = v45;
      *(unsigned char *)(v42 + 32) = *(unsigned char *)(v43 + 32);
      uint64_t v46 = *(void *)(v43 + 48);
      *(void *)(v42 + 40) = *(void *)(v43 + 40);
      *(void *)(v42 + 48) = v46;
      uint64_t v47 = *(void *)(v43 + 64);
      *(void *)(v42 + 56) = *(void *)(v43 + 56);
      *(void *)(v42 + 64) = v47;
      uint64_t v48 = *(void *)(v43 + 80);
      *(void *)(v42 + 72) = *(void *)(v43 + 72);
      *(void *)(v42 + 80) = v48;
      *(unsigned char *)(v42 + 88) = *(unsigned char *)(v43 + 88);
      uint64_t v49 = *(void *)(v43 + 104);
      *(void *)(v42 + 96) = *(void *)(v43 + 96);
      *(void *)(v42 + 104) = v49;
      uint64_t v50 = *(int *)(v58 + 52);
      __dstb = (void *)(v42 + v50);
      id v39 = (const void *)(v43 + v50);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v60(v39, 1, v24)) {
        goto LABEL_13;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(v53 + 16))(__dstb, v39, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(__dstb, 0, 1, v24);
    goto LABEL_15;
  }
  uint64_t v17 = *a2;
  *(void *)a1 = *a2;
  a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

void sub_1C01DDAA0()
{
  if (!qword_1EA198018)
  {
    type metadata accessor for DebugNewsroomLayoutData();
    sub_1C01E1400(&qword_1EA198020, (void (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData);
    unint64_t v0 = type metadata accessor for DebugNewsroomContainer();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA198018);
    }
  }
}

void sub_1C01DDB34()
{
  if (!qword_1EA198028)
  {
    type metadata accessor for DebugNewsroomThemeData();
    sub_1C01E1400(&qword_1EA198030, (void (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData);
    unint64_t v0 = type metadata accessor for DebugNewsroomContainer();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA198028);
    }
  }
}

uint64_t sub_1C01DDBC8(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = type metadata accessor for DebugNewsroomThemeData();
    uint64_t v4 = a1 + *(int *)(v3 + 48);
    uint64_t v5 = sub_1C151928C();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    sub_1C01DDB34();
    uint64_t v9 = a1 + *(int *)(v8 + 36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(int *)(v3 + 48);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = type metadata accessor for DebugNewsroomLayoutData();
    uint64_t v12 = a1 + *(int *)(v11 + 52);
    uint64_t v5 = sub_1C151928C();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v12, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
    }
    sub_1C01DDAA0();
    uint64_t v9 = a1 + *(int *)(v13 + 36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(int *)(v11 + 52);
  }
  uint64_t v14 = v9 + v10;
  if (!v7(v9 + v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01DDE84(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  if (EnumCaseMultiPayload == 1)
  {
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v6;
    uint64_t v7 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v7;
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v8;
    uint64_t v9 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v9;
    uint64_t v70 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v70;
    uint64_t v10 = type metadata accessor for DebugNewsroomThemeData();
    uint64_t v11 = *(int *)(v10 + 48);
    __dst = (void *)(a1 + v11);
    uint64_t v64 = (int *)v10;
    uint64_t v58 = (const void *)(a2 + v11);
    uint64_t v12 = sub_1C151928C();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v68 = v14;
    uint64_t v56 = v13;
    if (v14(v58, 1, v12))
    {
      sub_1BFEC0CE8(0);
      memcpy(__dst, v58, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(__dst, v58, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v27 = v12;
    sub_1C01DDB34();
    __dstb = v28;
    uint64_t v29 = v28[9];
    uint64_t v30 = a1 + v29;
    uint64_t v31 = a2 + v29;
    uint64_t v32 = *(void *)(v31 + 8);
    *(void *)uint64_t v30 = *(void *)v31;
    *(void *)(v30 + 8) = v32;
    *(unsigned char *)(v30 + 16) = *(unsigned char *)(v31 + 16);
    uint64_t v33 = *(void *)(v31 + 32);
    *(void *)(v30 + 24) = *(void *)(v31 + 24);
    *(void *)(v30 + 32) = v33;
    uint64_t v34 = *(void *)(v31 + 48);
    *(void *)(v30 + 40) = *(void *)(v31 + 40);
    *(void *)(v30 + 48) = v34;
    uint64_t v35 = *(void *)(v31 + 64);
    *(void *)(v30 + 56) = *(void *)(v31 + 56);
    *(void *)(v30 + 64) = v35;
    uint64_t v36 = *(void *)(v31 + 80);
    *(void *)(v30 + 72) = *(void *)(v31 + 72);
    *(void *)(v30 + 80) = v36;
    uint64_t v37 = *(void *)(v31 + 96);
    *(void *)(v30 + 88) = *(void *)(v31 + 88);
    *(void *)(v30 + 96) = v37;
    uint64_t v38 = v64[12];
    id v66 = (void *)(v30 + v38);
    id v39 = (const void *)(v31 + v38);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v68(v39, 1, v27))
    {
      sub_1BFEC0CE8(0);
      memcpy(v66, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v66, v39, v27);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(v66, 0, 1, v27);
    }
    *(void *)(a1 + __dstb[10]) = *(void *)(a2 + __dstb[10]);
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v16;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    uint64_t v17 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v17;
    uint64_t v18 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v18;
    uint64_t v19 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v19;
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    uint64_t v20 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v20;
    uint64_t v21 = type metadata accessor for DebugNewsroomLayoutData();
    uint64_t v22 = *(int *)(v21 + 52);
    __dsta = (void *)(a1 + v22);
    id v65 = (int *)v21;
    char v59 = (const void *)(a2 + v22);
    uint64_t v23 = sub_1C151928C();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v69 = v25;
    uint64_t v57 = v24;
    if (v25(v59, 1, v23))
    {
      sub_1BFEC0CE8(0);
      memcpy(__dsta, v59, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(__dsta, v59, v23);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(__dsta, 0, 1, v23);
    }
    uint64_t v41 = v23;
    sub_1C01DDAA0();
    __dstc = v42;
    uint64_t v43 = v42[9];
    uint64_t v44 = a1 + v43;
    uint64_t v45 = a2 + v43;
    uint64_t v46 = *(void *)(v45 + 8);
    *(void *)uint64_t v44 = *(void *)v45;
    *(void *)(v44 + 8) = v46;
    uint64_t v47 = *(void *)(v45 + 24);
    *(void *)(v44 + 16) = *(void *)(v45 + 16);
    *(void *)(v44 + 24) = v47;
    *(unsigned char *)(v44 + 32) = *(unsigned char *)(v45 + 32);
    uint64_t v48 = *(void *)(v45 + 48);
    *(void *)(v44 + 40) = *(void *)(v45 + 40);
    *(void *)(v44 + 48) = v48;
    uint64_t v49 = *(void *)(v45 + 64);
    *(void *)(v44 + 56) = *(void *)(v45 + 56);
    *(void *)(v44 + 64) = v49;
    uint64_t v50 = *(void *)(v45 + 80);
    *(void *)(v44 + 72) = *(void *)(v45 + 72);
    *(void *)(v44 + 80) = v50;
    *(unsigned char *)(v44 + 88) = *(unsigned char *)(v45 + 88);
    uint64_t v51 = *(void *)(v45 + 104);
    *(void *)(v44 + 96) = *(void *)(v45 + 96);
    *(void *)(v44 + 104) = v51;
    uint64_t v52 = v65[13];
    uint64_t v67 = (void *)(v44 + v52);
    uint64_t v53 = (const void *)(v45 + v52);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v69(v53, 1, v41))
    {
      sub_1BFEC0CE8(0);
      memcpy(v67, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v57 + 16))(v67, v53, v41);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v57 + 56))(v67, 0, 1, v41);
    }
    *(void *)(a1 + __dstc[10]) = *(void *)(a2 + __dstc[10]);
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C01DE478(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C01DFE8C(a1, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadRemotePackage);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    if (EnumCaseMultiPayload == 1)
    {
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      uint64_t v5 = type metadata accessor for DebugNewsroomThemeData();
      uint64_t v6 = *(int *)(v5 + 48);
      __dst = (void *)(a1 + v6);
      id v39 = (int *)v5;
      uint64_t v33 = (const void *)(a2 + v6);
      uint64_t v7 = sub_1C151928C();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v32 = v8;
      if (v9(v33, 1, v7))
      {
        sub_1BFEC0CE8(0);
        memcpy(__dst, v33, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(__dst, v33, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(__dst, 0, 1, v7);
      }
      sub_1C01DDB34();
      __dstb = v17;
      uint64_t v18 = v17[9];
      uint64_t v19 = a1 + v18;
      uint64_t v20 = a2 + v18;
      *(void *)uint64_t v19 = *(void *)v20;
      *(void *)(v19 + 8) = *(void *)(v20 + 8);
      *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
      *(void *)(v19 + 24) = *(void *)(v20 + 24);
      *(void *)(v19 + 32) = *(void *)(v20 + 32);
      *(void *)(v19 + 40) = *(void *)(v20 + 40);
      *(void *)(v19 + 48) = *(void *)(v20 + 48);
      *(void *)(v19 + 56) = *(void *)(v20 + 56);
      *(void *)(v19 + 64) = *(void *)(v20 + 64);
      *(void *)(v19 + 72) = *(void *)(v20 + 72);
      *(void *)(v19 + 80) = *(void *)(v20 + 80);
      *(void *)(v19 + 88) = *(void *)(v20 + 88);
      *(void *)(v19 + 96) = *(void *)(v20 + 96);
      uint64_t v21 = v39[12];
      uint64_t v41 = (void *)(v19 + v21);
      uint64_t v22 = (const void *)(v20 + v21);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9(v22, 1, v7))
      {
        sub_1BFEC0CE8(0);
        memcpy(v41, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v32 + 16))(v41, v22, v7);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v41, 0, 1, v7);
      }
      *(void *)(a1 + __dstb[10]) = *(void *)(a2 + __dstb[10]);
    }
    else
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      uint64_t v11 = type metadata accessor for DebugNewsroomLayoutData();
      uint64_t v12 = *(int *)(v11 + 52);
      __dsta = (void *)(a1 + v12);
      uint64_t v40 = (int *)v11;
      uint64_t v34 = (const void *)(a2 + v12);
      uint64_t v13 = sub_1C151928C();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15(v34, 1, v13))
      {
        sub_1BFEC0CE8(0);
        memcpy(__dsta, v34, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dsta, v34, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(__dsta, 0, 1, v13);
      }
      sub_1C01DDAA0();
      __dstc = v24;
      uint64_t v25 = v24[9];
      uint64_t v26 = a1 + v25;
      uint64_t v27 = a2 + v25;
      *(void *)uint64_t v26 = *(void *)v27;
      *(void *)(v26 + 8) = *(void *)(v27 + 8);
      *(void *)(v26 + 16) = *(void *)(v27 + 16);
      *(void *)(v26 + 24) = *(void *)(v27 + 24);
      *(unsigned char *)(v26 + 32) = *(unsigned char *)(v27 + 32);
      *(void *)(v26 + 40) = *(void *)(v27 + 40);
      *(void *)(v26 + 48) = *(void *)(v27 + 48);
      *(void *)(v26 + 56) = *(void *)(v27 + 56);
      *(void *)(v26 + 64) = *(void *)(v27 + 64);
      *(void *)(v26 + 72) = *(void *)(v27 + 72);
      *(void *)(v26 + 80) = *(void *)(v27 + 80);
      *(unsigned char *)(v26 + 88) = *(unsigned char *)(v27 + 88);
      *(void *)(v26 + 96) = *(void *)(v27 + 96);
      *(void *)(v26 + 104) = *(void *)(v27 + 104);
      uint64_t v28 = v40[13];
      uint64_t v42 = (void *)(v26 + v28);
      uint64_t v29 = (const void *)(v27 + v28);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15(v29, 1, v13))
      {
        sub_1BFEC0CE8(0);
        memcpy(v42, v29, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v42, v29, v13);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v42, 0, 1, v13);
      }
      *(void *)(a1 + __dstc[10]) = *(void *)(a2 + __dstc[10]);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for DebugFormatUploadRemotePackage()
{
  uint64_t result = qword_1EA198038;
  if (!qword_1EA198038) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C01DEBA4(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (EnumCaseMultiPayload != 1)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    uint64_t v13 = type metadata accessor for DebugNewsroomLayoutData();
    uint64_t v14 = *(int *)(v13 + 52);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    uint64_t v9 = sub_1C151928C();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    if (v17(v16, 1, v9))
    {
      sub_1BFEC0CE8(0);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v15, v16, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    }
    sub_1C01DDAA0();
    uint64_t v20 = v28;
    uint64_t v29 = *(int *)(v28 + 36);
    uint64_t v30 = a1 + v29;
    uint64_t v31 = a2 + v29;
    long long v32 = *(_OWORD *)(v31 + 16);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *(_OWORD *)(v30 + 16) = v32;
    *(unsigned char *)(v30 + 32) = *(unsigned char *)(v31 + 32);
    *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
    *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
    *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
    *(unsigned char *)(v30 + 88) = *(unsigned char *)(v31 + 88);
    *(_OWORD *)(v30 + 96) = *(_OWORD *)(v31 + 96);
    uint64_t v33 = *(int *)(v13 + 52);
    uint64_t v25 = (void *)(v30 + v33);
    uint64_t v26 = (const void *)(v31 + v33);
    if (v17((const void *)(v31 + v33), 1, v9)) {
      goto LABEL_8;
    }
LABEL_11:
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v25, v26, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
    goto LABEL_12;
  }
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  uint64_t v5 = type metadata accessor for DebugNewsroomThemeData();
  uint64_t v6 = *(int *)(v5 + 48);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1C151928C();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_1BFEC0CE8(0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  sub_1C01DDB34();
  uint64_t v20 = v19;
  uint64_t v21 = *(int *)(v19 + 36);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
  *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
  *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
  *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
  *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
  *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
  uint64_t v24 = *(int *)(v5 + 48);
  uint64_t v25 = (void *)(v22 + v24);
  uint64_t v26 = (const void *)(v23 + v24);
  if (!v11((const void *)(v23 + v24), 1, v9)) {
    goto LABEL_11;
  }
LABEL_8:
  sub_1BFEC0CE8(0);
  memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_12:
  *(void *)(a1 + *(int *)(v20 + 40)) = *(void *)(a2 + *(int *)(v20 + 40));
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C01DF030(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C01DFE8C(a1, (uint64_t (*)(void))type metadata accessor for DebugFormatUploadRemotePackage);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      uint64_t v5 = type metadata accessor for DebugNewsroomThemeData();
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (const void *)(a2 + v6);
      uint64_t v9 = sub_1C151928C();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      if (v11(v8, 1, v9))
      {
        sub_1BFEC0CE8(0);
        memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      sub_1C01DDB34();
      uint64_t v20 = v19;
      uint64_t v21 = *(int *)(v19 + 36);
      uint64_t v22 = a1 + v21;
      uint64_t v23 = a2 + v21;
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      *(unsigned char *)(v22 + 16) = *(unsigned char *)(v23 + 16);
      *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
      *(_OWORD *)(v22 + 40) = *(_OWORD *)(v23 + 40);
      *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
      *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
      *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
      uint64_t v24 = *(int *)(v5 + 48);
      uint64_t v25 = (void *)(v22 + v24);
      uint64_t v26 = (const void *)(v23 + v24);
      if (v11((const void *)(v23 + v24), 1, v9))
      {
LABEL_9:
        sub_1BFEC0CE8(0);
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_13:
        *(void *)(a1 + *(int *)(v20 + 40)) = *(void *)(a2 + *(int *)(v20 + 40));
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    else
    {
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      uint64_t v13 = type metadata accessor for DebugNewsroomLayoutData();
      uint64_t v14 = *(int *)(v13 + 52);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (const void *)(a2 + v14);
      uint64_t v9 = sub_1C151928C();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
      if (v17(v16, 1, v9))
      {
        sub_1BFEC0CE8(0);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v15, v16, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
      }
      sub_1C01DDAA0();
      uint64_t v20 = v28;
      uint64_t v29 = *(int *)(v28 + 36);
      uint64_t v30 = a1 + v29;
      uint64_t v31 = a2 + v29;
      long long v32 = *(_OWORD *)(v31 + 16);
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      *(_OWORD *)(v30 + 16) = v32;
      *(unsigned char *)(v30 + 32) = *(unsigned char *)(v31 + 32);
      *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
      *(_OWORD *)(v30 + 56) = *(_OWORD *)(v31 + 56);
      *(_OWORD *)(v30 + 72) = *(_OWORD *)(v31 + 72);
      *(unsigned char *)(v30 + 88) = *(unsigned char *)(v31 + 88);
      *(_OWORD *)(v30 + 96) = *(_OWORD *)(v31 + 96);
      uint64_t v33 = *(int *)(v13 + 52);
      uint64_t v25 = (void *)(v30 + v33);
      uint64_t v26 = (const void *)(v31 + v33);
      if (v17((const void *)(v31 + v33), 1, v9)) {
        goto LABEL_9;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v25, v26, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v25, 0, 1, v9);
    goto LABEL_13;
  }
  return a1;
}

void sub_1C01DF4E0()
{
  sub_1C01DDAA0();
  if (v0 <= 0x3F)
  {
    sub_1C01DDB34();
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t sub_1C01DF5A4(uint64_t a1)
{
  return sub_1C01DF5BC(a1);
}

uint64_t sub_1C01DF5BC(uint64_t a1)
{
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C151928C();
  MEMORY[0x1F4188790](v5);
  uint64_t v36 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v32 = (char *)&v28 - v9;
  uint64_t v33 = v8;
  uint64_t v10 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  uint64_t v13 = v12 & *(void *)(a1 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v35 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  unint64_t v37 = MEMORY[0x1E4FBC860];
  int64_t v30 = v14;
  uint64_t v31 = a1 + 64;
  if (!v13) {
    goto LABEL_7;
  }
LABEL_4:
  for (v13 &= v13 - 1; ; uint64_t v13 = (v19 - 1) & v19)
  {
    swift_bridgeObjectRetain();
    sub_1C15192BC();
    if ((*v15)(v4, 1, v5) == 1)
    {
      uint64_t result = sub_1C01DFE8C((uint64_t)v4, (uint64_t (*)(void))sub_1BFEC0CE8);
      if (v13) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v21 = *v35;
      uint64_t v22 = v32;
      (*v35)(v32, v4, v5);
      uint64_t v34 = v21;
      v21(v36, v22, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v37 = sub_1BFFC25AC(0, *(void *)(v37 + 16) + 1, 1, v37);
      }
      unint64_t v24 = *(void *)(v37 + 16);
      unint64_t v23 = *(void *)(v37 + 24);
      unint64_t v25 = v24 + 1;
      int64_t v14 = v30;
      uint64_t v10 = v31;
      if (v24 >= v23 >> 1)
      {
        unint64_t v29 = v24 + 1;
        uint64_t v27 = sub_1BFFC25AC(v23 > 1, v24 + 1, 1, v37);
        unint64_t v25 = v29;
        unint64_t v37 = v27;
      }
      unint64_t v26 = v37;
      *(void *)(v37 + 16) = v25;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v34)(v26+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v24, v36, v5);
      if (v13) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v18 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v14) {
      goto LABEL_29;
    }
    uint64_t v19 = *(void *)(v10 + 8 * v18);
    ++v17;
    if (!v19)
    {
      int64_t v17 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_29;
      }
      uint64_t v19 = *(void *)(v10 + 8 * v17);
      if (!v19)
      {
        int64_t v17 = v18 + 2;
        if (v18 + 2 >= v14) {
          goto LABEL_29;
        }
        uint64_t v19 = *(void *)(v10 + 8 * v17);
        if (!v19)
        {
          int64_t v17 = v18 + 3;
          if (v18 + 3 >= v14) {
            goto LABEL_29;
          }
          uint64_t v19 = *(void *)(v10 + 8 * v17);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    ;
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v14)
  {
LABEL_29:
    swift_release();
    return v37;
  }
  uint64_t v19 = *(void *)(v10 + 8 * v20);
  if (v19)
  {
    int64_t v17 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v17 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_29;
    }
    uint64_t v19 = *(void *)(v10 + 8 * v17);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void *sub_1C01DF974()
{
  uint64_t v1 = v0;
  sub_1C01DDB34();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01DDAA0();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DebugFormatUploadRemotePackage();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00C2A5C(v1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C01DFE24((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))sub_1C01DDB34);
    if (*((void *)v4 + 12))
    {
      uint64_t v11 = swift_bridgeObjectRetain();
      uint64_t v12 = (void *)sub_1C01DF5BC(v11);
      swift_bridgeObjectRelease();
      v19[0] = v12;
      swift_bridgeObjectRetain();
      sub_1C01DFD7C(v19);
      swift_bridgeObjectRelease();
      uint64_t v13 = v19[0];
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v16 = sub_1C01DDB34;
    uint64_t v17 = (uint64_t)v4;
  }
  else
  {
    sub_1C01DFE24((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))sub_1C01DDAA0);
    if (*((void *)v7 + 13))
    {
      uint64_t v14 = swift_bridgeObjectRetain();
      uint64_t v15 = (void *)sub_1C01DF5BC(v14);
      swift_bridgeObjectRelease();
      v19[0] = v15;
      swift_bridgeObjectRetain();
      sub_1C01DFD7C(v19);
      swift_bridgeObjectRelease();
      uint64_t v13 = v19[0];
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v16 = sub_1C01DDAA0;
    uint64_t v17 = (uint64_t)v7;
  }
  sub_1C01DFE8C(v17, (uint64_t (*)(void))v16);
  return v13;
}

uint64_t sub_1C01DFBD0()
{
  uint64_t v1 = v0;
  sub_1C01DDB34();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01DDAA0();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DebugFormatUploadRemotePackage();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00C2A5C(v1, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C01DFE24((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))sub_1C01DDB34);
    char v11 = v4[16];
    uint64_t v12 = sub_1C01DDB34;
    uint64_t v13 = (uint64_t)v4;
  }
  else
  {
    sub_1C01DFE24((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))sub_1C01DDAA0);
    char v11 = v7[88];
    uint64_t v12 = sub_1C01DDAA0;
    uint64_t v13 = (uint64_t)v7;
  }
  sub_1C01DFE8C(v13, (uint64_t (*)(void))v12);
  return v11 & 1;
}

void sub_1C01DFD7C(void **a1)
{
  uint64_t v2 = *(void *)(sub_1C151928C() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1BFFC3DD4(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1C01DFEEC(v5);
  *a1 = v3;
}

uint64_t sub_1C01DFE24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C01DFE8C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C01DFEEC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(void **)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v136 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  double v151 = (char *)&v131 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v146 = (char *)&v131 - v10;
  MEMORY[0x1F4188790](v11);
  double v147 = (char *)&v131 - v12;
  uint64_t v13 = a1[1];
  uint64_t v14 = sub_1C152086C();
  if (v14 >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      sub_1C01E0AAC(0, v13, 1, a1);
    }
    return;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  uint64_t v149 = v4;
  int v150 = a1;
  uint64_t v133 = v14;
  if (v13 < 2)
  {
    uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v138 = MEMORY[0x1E4FBC860]
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    uint64_t v132 = MEMORY[0x1E4FBC860];
    if (v13 != 1)
    {
      unint64_t v21 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_106:
      if (v21 >= 2)
      {
        uint64_t v125 = *v150;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v125) {
            goto LABEL_147;
          }
          uint64_t v127 = *(void *)&v19[16 * v126 + 32];
          uint64_t v128 = *(void *)&v19[16 * v21 + 24];
          sub_1C01E0DCC(v125 + v5[9] * v127, v125 + v5[9] * *(void *)&v19[16 * v21 + 16], v125 + v5[9] * v128, v138);
          if (v2) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_1C063604C((uint64_t)v19);
          }
          if (v126 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v129 = &v19[16 * v126 + 32];
          *(void *)uint64_t v129 = v127;
          *((void *)v129 + 1) = v128;
          unint64_t v130 = *((void *)v19 + 2);
          if (v21 > v130) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v130 - v21));
          *((void *)v19 + 2) = v130 - 1;
          unint64_t v21 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      *(void *)(v132 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = sub_1C151ECCC();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    uint64_t v132 = v17;
    unint64_t v138 = v17 + v18;
  }
  uint64_t v20 = 0;
  uint64_t v144 = (void (**)(char *, uint64_t))(v5 + 1);
  uint64_t v145 = v5 + 2;
  unsigned __int8 v154 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
  uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v139 = v5;
  while (1)
  {
    uint64_t v22 = v20;
    uint64_t v23 = v20 + 1;
    uint64_t v137 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_37;
    }
    uint64_t v24 = v149;
    uint64_t v25 = *v150;
    uint64_t v141 = v25;
    uint64_t v142 = v20 + 1;
    uint64_t v153 = v139[9];
    uint64_t v26 = v153;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v139[2];
    v27(v147, v25 + v153 * v23, v149);
    uint64_t v28 = v25 + v26 * v22;
    unint64_t v29 = v146;
    v27(v146, v28, v24);
    uint64_t v30 = sub_1C01E1400((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
    uint64_t v31 = v147;
    uint64_t v148 = v30;
    LODWORD(v152) = sub_1C151E57C();
    uint64_t v32 = v13;
    uint64_t v33 = (void (*)(char *, uint64_t))v139[1];
    uint64_t v34 = v29;
    uint64_t v22 = v137;
    v33(v34, v24);
    v33(v31, v24);
    uint64_t v35 = v153;
    uint64_t v23 = v22 + 2;
    uint64_t v143 = v32;
    if (v22 + 2 >= v32)
    {
      uint64_t v13 = v143;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      int v134 = v19;
      uint64_t v131 = v2;
      v142 *= v153;
      uint64_t v36 = v141;
      uint64_t v37 = v153 * v23;
      while (1)
      {
        uint64_t v38 = v23;
        id v39 = v147;
        uint64_t v40 = v149;
        v27(v147, v36 + v37, v149);
        uint64_t v41 = v146;
        v27(v146, v36 + v142, v40);
        int v42 = sub_1C151E57C();
        v33(v41, v40);
        v33(v39, v40);
        if ((v152 ^ v42)) {
          break;
        }
        uint64_t v23 = v38 + 1;
        uint64_t v35 = v153;
        v36 += v153;
        if (v143 == v38 + 1)
        {
          uint64_t v13 = v143;
          uint64_t v23 = v143;
          uint64_t v2 = v131;
          uint64_t v19 = v134;
          uint64_t v22 = v137;
          if (v152) {
            goto LABEL_25;
          }
          goto LABEL_37;
        }
      }
      uint64_t v2 = v131;
      uint64_t v19 = v134;
      uint64_t v23 = v38;
      uint64_t v22 = v137;
      uint64_t v13 = v143;
      uint64_t v35 = v153;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
LABEL_25:
    if (v23 < v22) {
      goto LABEL_141;
    }
    if (v22 >= v23)
    {
LABEL_37:
      uint64_t v47 = v150;
      goto LABEL_38;
    }
    int v134 = v19;
    uint64_t v43 = 0;
    uint64_t v44 = v35 * (v23 - 1);
    uint64_t v45 = v23 * v35;
    uint64_t v46 = v22 * v35;
    uint64_t v47 = v150;
    uint64_t v148 = v23;
    do
    {
      if (v22 != v23 + v43 - 1)
      {
        uint64_t v49 = v141;
        if (!v141) {
          goto LABEL_146;
        }
        uint64_t v50 = v2;
        unint64_t v51 = v141 + v46;
        uint64_t v52 = (char *)(v141 + v44);
        uint64_t v152 = *v154;
        v152(v136, v141 + v46, v149);
        if (v46 < v44 || v51 >= v49 + v45)
        {
          uint64_t v48 = v149;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v48 = v149;
          if (v46 != v44) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152(v52, (uint64_t)v136, v48);
        uint64_t v2 = v50;
        uint64_t v47 = v150;
        uint64_t v23 = v148;
        uint64_t v35 = v153;
      }
      ++v22;
      --v43;
      v44 -= v35;
      v45 -= v35;
      v46 += v35;
    }
    while (v22 < v23 + v43);
    uint64_t v19 = v134;
    uint64_t v22 = v137;
    uint64_t v13 = v143;
LABEL_38:
    uint64_t v53 = v149;
    if (v23 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v23, v22)) {
      goto LABEL_139;
    }
    if (v23 - v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_142;
    }
    uint64_t v54 = v22 + v133 >= v13 ? v13 : v22 + v133;
    if (v54 < v22) {
      break;
    }
    if (v23 != v54)
    {
      int v134 = v19;
      uint64_t v131 = v2;
      uint64_t v55 = v139[9];
      uint64_t v140 = (void (*)(char *, uint64_t, uint64_t))v139[2];
      uint64_t v141 = v55;
      uint64_t v56 = v55 * (v23 - 1);
      uint64_t v57 = v23 * v55;
      uint64_t v135 = v54;
      do
      {
        uint64_t v59 = 0;
        uint64_t v148 = v23;
        uint64_t v142 = v57;
        uint64_t v143 = v56;
        while (1)
        {
          uint64_t v60 = *v47;
          uint64_t v152 = (void (*)(char *, uint64_t, uint64_t))(v57 + v59);
          uint64_t v153 = v22;
          uint64_t v61 = v57 + v59 + v60;
          char v62 = v147;
          uint64_t v63 = v47;
          uint64_t v64 = v140;
          v140(v147, v61, v53);
          uint64_t v65 = v56 + v59 + v60;
          id v66 = v146;
          v64(v146, v65, v53);
          sub_1C01E1400((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
          LOBYTE(v60) = sub_1C151E57C();
          uint64_t v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v60 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          uint64_t v57 = v142;
          uint64_t v56 = v143;
          uint64_t v69 = (char *)(v68 + v143 + v59);
          uint64_t v70 = *v154;
          uint64_t v71 = v149;
          (*v154)(v151, v68 + v142 + v59, v149);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, (uint64_t)v151, v71);
          v59 -= v141;
          uint64_t v22 = v153 + 1;
          uint64_t v58 = v148;
          uint64_t v47 = v150;
          if (v148 == v153 + 1) {
            goto LABEL_49;
          }
        }
        uint64_t v58 = v148;
        uint64_t v53 = v149;
        uint64_t v47 = v63;
        uint64_t v57 = v142;
        uint64_t v56 = v143;
LABEL_49:
        uint64_t v23 = v58 + 1;
        v56 += v141;
        v57 += v141;
        uint64_t v22 = v137;
      }
      while (v23 != v135);
      uint64_t v23 = v135;
      uint64_t v2 = v131;
      uint64_t v19 = v134;
    }
LABEL_57:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v148 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_1C0634CC8(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      uint64_t v19 = sub_1C0634CC8((char *)(v73 > 1), v74 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    uint64_t v75 = v19 + 32;
    uint64_t v76 = &v19[16 * v74 + 32];
    uint64_t v77 = v148;
    *(void *)uint64_t v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v83 = &v75[16 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_123;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_124;
          }
          unint64_t v90 = v21 - 2;
          uint64_t v91 = &v75[16 * v21 - 32];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_126;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_129;
          }
          if (v95 >= v86)
          {
            id v113 = &v75[16 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_133;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_88;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_125;
        }
        unint64_t v90 = v21 - 2;
        uint64_t v96 = &v75[16 * v21 - 32];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_128;
        }
        uint64_t v102 = &v75[16 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_131;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_132;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_94:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v101) {
          goto LABEL_127;
        }
        id v109 = &v75[16 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_130;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v150) {
          goto LABEL_145;
        }
        unsigned __int8 v118 = v19;
        uint64_t v119 = &v75[16 * v117];
        uint64_t v120 = *(void *)v119;
        unint64_t v121 = &v75[16 * v78];
        uint64_t v122 = *((void *)v121 + 1);
        sub_1C01E0DCC(*v150 + v139[9] * *(void *)v119, *v150 + v139[9] * *(void *)v121, *v150 + v139[9] * v122, v138);
        if (v2) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_120;
        }
        if (v78 > *((void *)v118 + 2)) {
          goto LABEL_121;
        }
        id v123 = v118;
        *(void *)uint64_t v119 = v120;
        *(void *)&v75[16 * v117 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v78 >= v124) {
          goto LABEL_122;
        }
        uint64_t v19 = v123;
        unint64_t v21 = v124 - 1;
        memmove(&v75[16 * v78], v121 + 16, 16 * (v124 - 1 - v78));
        *((void *)v19 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    uint64_t v13 = v150[1];
    uint64_t v20 = v148;
    uint64_t v5 = v139;
    if (v148 >= v13) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  sub_1C15203FC();
  __break(1u);
}

void sub_1C01E0AAC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = sub_1C151928C();
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v37 = (char *)&v29 - v10;
  __n128 v13 = MEMORY[0x1F4188790](v11);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void, __n128))(v12 + 16);
    uint64_t v15 = v12 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v32 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = (void (*)(char *, uint64_t, uint64_t))v16;
    uint64_t v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      uint64_t v22 = v33;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v33)(v36, v20, v7, v13);
      uint64_t v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_1C01E1400((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
      LOBYTE(v22) = sub_1C151E57C();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = (char *)(v26 + v44 + v18);
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      v28(v27, (uint64_t)v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C01E0DCC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C151928C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v56 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v55 = (char *)v49 - v12;
  uint64_t v57 = *(void *)(v13 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v57;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v57;
  if (v15 >= v14 / v57)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v57;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v57;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v49[1] = v37 - 8;
        uint64_t v50 = v38;
        unint64_t v53 = -v57;
        uint64_t v54 = v37;
        unint64_t v51 = a4;
        uint64_t v39 = v55;
        uint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v57 = a3 + v36;
          uint64_t v41 = v50;
          v50(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v56;
          v41(v56, v42, v8);
          sub_1C01E1400((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
          LOBYTE(v41) = sub_1C151E57C();
          uint64_t v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v57;
            if (v43 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v53;
            v60 += v53;
          }
          else
          {
            a3 = v57;
            unint64_t v47 = v58;
            v58 += v53;
            if (v43 < v47 || v57 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v53;
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v53;
            }
          }
          unint64_t v34 = v58;
          if (v58 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v52);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v57;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v54 = v9 + 16;
      uint64_t v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        uint64_t v24 = v55;
        v21(v55, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v56;
        v21(v56, v25, v8);
        sub_1C01E1400((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
        char v27 = sub_1C151E57C();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v60;
        if (v27)
        {
          unint64_t v30 = a2 + v57;
          if (v60 < a2 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v59 + v57;
          if (v60 < v59 || v60 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v60 = v29 + v57;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_66:
    sub_1C063562C(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C01E1400(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FeedGroupKnobsRuleValue.__allocating_init(value:selectors:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v4 + 80) - 8) + 32))(v4 + *(void *)(*(void *)v4 + 112), a1);
  *(void *)(v4 + *(void *)(*(void *)v4 + 120)) = a2;
  return v4;
}

uint64_t static FeedGroupKnobsRuleValue.== infix(_:_:)()
{
  if (sub_1C151E5CC())
  {
    type metadata accessor for FeedGroupKnobsRuleValue.Selector();
    swift_getWitnessTable();
    char v0 = sub_1C151ED6C();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t FeedGroupKnobsRuleValue.value(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + *(void *)(*(void *)v1 + 120));
  uint64_t v16 = v4;
  uint64_t v5 = v3[10];
  uint64_t v6 = v3[11];
  uint64_t v7 = v3[12];
  uint64_t v8 = v3[13];
  uint64_t v12 = v5;
  uint64_t v13 = v6;
  uint64_t v14 = v7;
  uint64_t v15 = v8;
  type metadata accessor for FeedGroupKnobsRuleValue.Selector();
  sub_1C151ED5C();
  swift_getWitnessTable();
  if (sub_1C151F15C()) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 112), v5);
  }
  uint64_t v10 = type metadata accessor for FeedContext();
  v11[1] = v11;
  uint64_t v12 = v4;
  v11[0] = v1 + *(void *)(*(void *)v1 + 112);
  MEMORY[0x1F4188790](v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C151E9EC();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1C01E185C(void *a1)
{
  return sub_1C01E3E20(a1);
}

uint64_t sub_1C01E18A8()
{
  uint64_t v88 = *(void **)v0;
  uint64_t v1 = v88[10];
  uint64_t v2 = sub_1C151FD8C();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v81 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v80 = (char *)&v65 - v7;
  MEMORY[0x1F4188790](v8);
  unint64_t v78 = (char *)&v65 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v84 = (char *)&v65 - v11;
  MEMORY[0x1F4188790](v12);
  char v82 = (char *)&v65 - v13;
  uint64_t v90 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v70 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v69 = (char *)&v65 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v68 = (char *)&v65 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v87 = (char *)&v65 - v21;
  MEMORY[0x1F4188790](v22);
  uint64_t v67 = (char *)&v65 - v23;
  MEMORY[0x1F4188790](v24);
  uint64_t v86 = (char *)&v65 - v25;
  sub_1C152089C();
  uint64_t v26 = *(void *)(v3 + 72);
  swift_allocObject();
  uint64_t v27 = sub_1C151EC6C();
  uint64_t v29 = v28;
  uint64_t v30 = v0 + *(void *)(*(void *)v0 + 120);
  uint64_t v85 = v4;
  uint64_t v31 = *(void (**)(uint64_t))(v4 + 16);
  uint64_t v73 = v30;
  v31(v29);
  uint64_t v71 = v0 + *(void *)(*(void *)v0 + 112);
  v31(v29 + v26);
  uint64_t v74 = v0 + *(void *)(*(void *)v0 + 128);
  v31(v29 + 2 * v26);
  uint64_t v77 = v0 + *(void *)(*(void *)v0 + 136);
  v31(v29 + 3 * v26);
  uint64_t v95 = sub_1BFE94A38(v27);
  uint64_t v91 = v1;
  unint64_t v89 = v88[11];
  unint64_t v92 = v89;
  uint64_t v32 = v88[12];
  uint64_t v93 = v32;
  uint64_t v33 = v88[13];
  uint64_t v94 = v33;
  uint64_t v88 = (void *)v2;
  sub_1C151ED5C();
  swift_getWitnessTable();
  unint64_t v34 = v83;
  uint64_t v35 = sub_1C151E97C();
  uint64_t v79 = v34;
  swift_bridgeObjectRelease();
  uint64_t v95 = v35;
  sub_1C151ED5C();
  swift_getWitnessTable();
  unint64_t v36 = v82;
  sub_1C151F12C();
  swift_bridgeObjectRelease();
  uint64_t v37 = (char *)(v90 + 48);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48);
  if (v38(v36, 1, v1) == 1)
  {
    (*(void (**)(char *, void *))(v85 + 8))(v36, v88);
    uint64_t v95 = v1;
    unint64_t v96 = v89;
    uint64_t v97 = v32;
    uint64_t v98 = v33;
    type metadata accessor for LegacyFeedGroupKnobsRuleValue.Errors();
    swift_getWitnessTable();
    swift_allocError();
    return swift_willThrow();
  }
  else
  {
    uint64_t v40 = v33;
    unint64_t v72 = v38;
    uint64_t v41 = v37;
    uint64_t v42 = v90 + 32;
    unint64_t v43 = *(void (**)(char *, char *, uint64_t))(v90 + 32);
    v43(v86, v36, v1);
    uint64_t v95 = v1;
    unint64_t v96 = v89;
    uint64_t v66 = v32;
    uint64_t v97 = v32;
    uint64_t v98 = v40;
    uint64_t v65 = v40;
    type metadata accessor for FeedGroupKnobsRuleValue.Selector();
    uint64_t v99 = sub_1C151E30C();
    uint64_t v44 = v84;
    uint64_t v83 = v31;
    ((void (*)(char *, uint64_t, void *))v31)(v84, v71, v88);
    char v82 = v41;
    unsigned int v45 = v72(v44, 1, v1);
    unint64_t v46 = v72;
    uint64_t v47 = v1;
    uint64_t v76 = v42;
    uint64_t v75 = v43;
    if (v45 == 1)
    {
      uint64_t v48 = v85;
      uint64_t v49 = v88;
      (*(void (**)(char *, void *))(v85 + 8))(v84, v88);
    }
    else
    {
      uint64_t v50 = v67;
      v43(v67, v84, v47);
      uint64_t v51 = (uint64_t)v87;
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v50, v47);
      uint64_t v95 = 0xD00000000000001ELL;
      unint64_t v96 = 0x80000001C1606DF0;
      uint64_t v95 = (uint64_t)FeedGroupKnobsRuleValue.Selector.__allocating_init(value:selector:)(v51, &v95);
      sub_1C151ED5C();
      sub_1C151ED1C();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v50, v47);
      uint64_t v48 = v85;
      uint64_t v49 = v88;
    }
    unint64_t v52 = v78;
    ((void (*)(char *, uint64_t, void *))v83)(v78, v73, v49);
    if (v46(v52, 1, v47) == 1)
    {
      (*(void (**)(char *, void *))(v48 + 8))(v52, v49);
    }
    else
    {
      unint64_t v53 = v68;
      v75(v68, v52, v47);
      uint64_t v54 = (uint64_t)v87;
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v53, v47);
      uint64_t v95 = 0xD000000000000022;
      unint64_t v96 = 0x80000001C1606DC0;
      uint64_t v95 = (uint64_t)FeedGroupKnobsRuleValue.Selector.__allocating_init(value:selector:)(v54, &v95);
      sub_1C151ED5C();
      sub_1C151ED1C();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v53, v47);
    }
    uint64_t v55 = v47;
    uint64_t v56 = v80;
    uint64_t v57 = v83;
    ((void (*)(char *, uint64_t, void *))v83)(v80, v74, v49);
    if (v46(v56, 1, v55) == 1)
    {
      (*(void (**)(char *, void *))(v48 + 8))(v56, v49);
    }
    else
    {
      unint64_t v58 = v69;
      v75(v69, v56, v55);
      uint64_t v59 = (uint64_t)v87;
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v58, v55);
      uint64_t v95 = 0xD00000000000001BLL;
      unint64_t v96 = 0x80000001C1606DA0;
      uint64_t v95 = (uint64_t)FeedGroupKnobsRuleValue.Selector.__allocating_init(value:selector:)(v59, &v95);
      sub_1C151ED5C();
      sub_1C151ED1C();
      uint64_t v57 = v83;
      (*(void (**)(char *, uint64_t))(v90 + 8))(v58, v55);
    }
    unint64_t v60 = v81;
    ((void (*)(char *, uint64_t, void *))v57)(v81, v77, v49);
    if (v46(v60, 1, v55) == 1)
    {
      (*(void (**)(char *, void *))(v48 + 8))(v60, v49);
      uint64_t v61 = (uint64_t)v87;
      char v62 = (void (*)(uint64_t, char *, uint64_t))v75;
    }
    else
    {
      uint64_t v63 = v70;
      char v62 = (void (*)(uint64_t, char *, uint64_t))v75;
      v75(v70, v60, v55);
      uint64_t v64 = v90;
      uint64_t v61 = (uint64_t)v87;
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v87, v63, v55);
      uint64_t v95 = 0xD000000000000019;
      unint64_t v96 = 0x80000001C1606D80;
      uint64_t v95 = (uint64_t)FeedGroupKnobsRuleValue.Selector.__allocating_init(value:selector:)(v61, &v95);
      sub_1C151ED5C();
      sub_1C151ED1C();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v55);
    }
    uint64_t v95 = v55;
    unint64_t v96 = v89;
    uint64_t v97 = v66;
    uint64_t v98 = v65;
    type metadata accessor for FeedGroupKnobsRuleValue();
    v62(v61, v86, v55);
    return FeedGroupKnobsRuleValue.__allocating_init(value:selectors:)(v61, v99);
  }
}

uint64_t FeedGroupKnobsRuleValue.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)*v1;
  uint64_t v5 = v4[11];
  uint64_t v6 = v4[12];
  uint64_t v7 = v4[13];
  uint64_t v25 = v4[10];
  uint64_t v26 = v5;
  uint64_t v27 = v6;
  uint64_t v28 = v7;
  type metadata accessor for FeedGroupKnobsRuleValue.CodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = sub_1C152083C();
  uint64_t v20 = *(void *)(v8 - 8);
  uint64_t v21 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v19 = (char *)v16 - v9;
  uint64_t v10 = *(void *)((char *)v2 + v4[15]);
  uint64_t v30 = v10;
  uint64_t v22 = v6;
  uint64_t v23 = v25;
  uint64_t v26 = v5;
  uint64_t v27 = v6;
  uint64_t v28 = v7;
  uint64_t v11 = type metadata accessor for FeedGroupKnobsRuleValue.Selector();
  sub_1C151ED5C();
  swift_getWitnessTable();
  if (sub_1C151F15C())
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1C1520EEC();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v25, v28);
    sub_1C1520B2C();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  }
  else
  {
    v16[1] = v11;
    uint64_t v17 = v10;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v13 = v19;
    sub_1C1520F0C();
    LOBYTE(v25) = 0;
    uint64_t v14 = v21;
    uint64_t v15 = v24;
    sub_1C152080C();
    if (!v15)
    {
      uint64_t v25 = v17;
      LOBYTE(v30) = 1;
      uint64_t v29 = swift_getWitnessTable();
      swift_getWitnessTable();
      sub_1C152080C();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v13, v14);
  }
}

uint64_t FeedGroupKnobsRuleValue.init(value:selectors:)(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 112), a1);
  *(void *)(v2 + *(void *)(*(void *)v2 + 120)) = a2;
  return v2;
}

uint64_t sub_1C01E27B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v14 = a1;
  uint64_t v15 = a4;
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151FD8C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v14 - v11;
  sub_1C01E29F8(a2, (uint64_t)&v14 - v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v14, a3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, a3) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15, v8, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15, v12, a3);
  }
}

uint64_t sub_1C01E29BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C01E27B4(a1, *(void *)(v2 + 48), *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for LegacyFeedGroupKnobsRuleValue()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C01E29F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v20 = *(void *)v2;
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  uint64_t v5 = *((void *)v2 + 3);
  v23[0] = *((void *)v2 + 2);
  v23[1] = v5;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1BFEF53C0(v23);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(v6 + 64);
    do
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1BFF36784(a1, v9);
      char v12 = sub_1BFEFAE14(v11, v9);
      swift_release();
      if (v12)
      {
        char v13 = sub_1BFEFB810(a1, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v13)
        {
          swift_bridgeObjectRelease();
          uint64_t v14 = *(void *)(v20 + 80);
          uint64_t v21 = *(void *)(v14 - 8);
          (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(a2, &v3[*(void *)(*(void *)v3 + 120)], v14);
          uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
          uint64_t v16 = a2;
          uint64_t v17 = 0;
          uint64_t v18 = v14;
          goto LABEL_11;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v8 += 5;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = a2;
  uint64_t v18 = *(void *)(v20 + 80);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v17 = 1;
LABEL_11:
  return v15(v16, v17, 1, v18);
}

char *FeedGroupKnobsRuleValue.Selector.__allocating_init(value:selector:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (char *)swift_allocObject();
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(*(void *)v4 + 80) - 8) + 32))(&v4[*(void *)(*(void *)v4 + 120)], a1);
  *((void *)v4 + 2) = v6;
  *((void *)v4 + 3) = v5;
  return v4;
}

char *FeedGroupKnobsRuleValue.Selector.init(value:selector:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 32))(&v2[*(void *)(*(void *)v2 + 120)], a1);
  *((void *)v2 + 2) = v3;
  *((void *)v2 + 3) = v4;
  return v2;
}

uint64_t static FeedGroupKnobsRuleValue.Selector.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v2 || (sub_1C1520A9C() & 1) != 0) {
    return sub_1C151E5CC() & 1;
  }
  else {
    return 0;
  }
}

uint64_t FeedGroupKnobsRuleValue.Selector.description.getter()
{
  return 0;
}

uint64_t sub_1C01E2F80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL sub_1C01E306C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C00C2CCC(*a1, *a2);
}

uint64_t sub_1C01E3084()
{
  return sub_1C00C2DD8();
}

uint64_t sub_1C01E3098()
{
  return sub_1C00C2CDC();
}

uint64_t sub_1C01E30AC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C01E30F8(void *a1, uint64_t a2)
{
  return sub_1C01E3B18(a1, a2, (uint64_t (*)(void, void, void, void, void))sub_1C0052940);
}

uint64_t sub_1C01E3110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_1C01E56DC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_1C01E2F80, a4);
}

uint64_t sub_1C01E3128@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_1C01E5730(a1, (uint64_t (*)(void, void, void, void))sub_1C00C51E8, a2);
}

uint64_t sub_1C01E3140(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C01E3194(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t *FeedGroupKnobsRuleValue.Selector.deinit()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 120));
  return v0;
}

uint64_t FeedGroupKnobsRuleValue.Selector.__deallocating_deinit()
{
  return sub_1BFC44C80((void (*)(void))FeedGroupKnobsRuleValue.Selector.deinit);
}

uint64_t FeedGroupKnobsRuleValue.Selector.encode(to:)(void *a1)
{
  BOOL v2 = v1;
  long long v4 = *(_OWORD *)(*v2 + 80);
  v12[0] = *(_OWORD *)(*v2 + 96);
  v12[1] = v4;
  long long v14 = v4;
  long long v15 = v12[0];
  type metadata accessor for FeedGroupKnobsRuleValue.Selector.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C152083C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  uint64_t v9 = v2[3];
  *(void *)&long long v14 = v2[2];
  *((void *)&v14 + 1) = v9;
  char v16 = 0;
  sub_1BFE79808();
  uint64_t v10 = v13;
  sub_1C152080C();
  if (!v10)
  {
    LOBYTE(v14) = 1;
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FeedGroupKnobsRuleValue.Selector.__allocating_init(from:)(uint64_t a1)
{
  return sub_1BFDECBE0(a1, (void (*)(uint64_t))FeedGroupKnobsRuleValue.Selector.init(from:));
}

char *FeedGroupKnobsRuleValue.Selector.init(from:)(void *a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  uint64_t v16 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v19 = (char *)&v15 - v5;
  uint64_t v7 = *(void *)(v6 + 104);
  uint64_t v22 = v4;
  long long v17 = *(_OWORD *)(v3 + 88);
  long long v23 = v17;
  uint64_t v24 = v7;
  type metadata accessor for FeedGroupKnobsRuleValue.Selector.CodingKeys();
  swift_getWitnessTable();
  uint64_t v20 = sub_1C152072C();
  uint64_t v18 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = v21;
  sub_1C1520EBC();
  if (v10)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v11 = v18;
    char v12 = v19;
    char v25 = 0;
    sub_1BFE9420C();
    sub_1C15206EC();
    uint64_t v13 = v23;
    *((void *)v1 + 2) = v22;
    *((void *)v1 + 3) = v13;
    LOBYTE(v22) = 1;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v20);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v1[*(void *)(*(void *)v1 + 120)], v12, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1C01E3810()
{
  uint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 == 1) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (v0) {
    return v1;
  }
  else {
    return 0;
  }
}