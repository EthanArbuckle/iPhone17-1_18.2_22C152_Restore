uint64_t sub_1C01E3864@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = FeedGroupKnobsRuleValue.Selector.__allocating_init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C01E3890(void *a1)
{
  return FeedGroupKnobsRuleValue.Selector.encode(to:)(a1);
}

uint64_t sub_1C01E38B4(uint64_t *a1, uint64_t *a2)
{
  return static FeedGroupKnobsRuleValue.Selector.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C01E38C0()
{
  return FeedGroupKnobsRuleValue.Selector.description.getter();
}

uint64_t sub_1C01E38E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1C8];
  return MEMORY[0x1F4185BB0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C01E3958(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE0](a1, a2, WitnessTable, v5);
}

uint64_t sub_1C01E39C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C01E3A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4183DE8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1C01E3AA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C01E3810();
  *a1 = result;
  return result;
}

uint64_t sub_1C01E3AE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C0054844(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C01E3B18(void *a1, uint64_t a2, uint64_t (*a3)(void, void, void, void, void))
{
  return a3(*v3, a1[2], a1[3], a1[4], a1[5]);
}

uint64_t sub_1C01E3B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_1C01E56DC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_1C01E3810, a4);
}

uint64_t sub_1C01E3B4C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C01E3BA0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t FeedGroupKnobsRuleValue.description.getter()
{
  return 0;
}

uint64_t sub_1C01E3DCC(void *a1)
{
  return FeedGroupKnobsRuleValue.encode(to:)(a1);
}

uint64_t sub_1C01E3DF0()
{
  return static FeedGroupKnobsRuleValue.== infix(_:_:)();
}

uint64_t sub_1C01E3DFC()
{
  return FeedGroupKnobsRuleValue.description.getter();
}

void *sub_1C01E3E20(void *a1)
{
  v76 = (void *)*v1;
  v3 = v76;
  uint64_t v4 = v76[10];
  uint64_t v5 = sub_1C151FD8C();
  uint64_t v69 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  MEMORY[0x1F4188790](v5);
  v61 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v62 = (char *)&v58 - v8;
  MEMORY[0x1F4188790](v9);
  v63 = (char *)&v58 - v10;
  MEMORY[0x1F4188790](v11);
  v64 = (char *)&v58 - v12;
  MEMORY[0x1F4188790](v13);
  v65 = (char *)&v58 - v14;
  MEMORY[0x1F4188790](v15);
  v66 = (char *)&v58 - v16;
  MEMORY[0x1F4188790](v17);
  v67 = (char *)&v58 - v18;
  MEMORY[0x1F4188790](v19);
  v72 = (void (*)(void))((char *)&v58 - v20);
  uint64_t v21 = v3[11];
  uint64_t v22 = v3[12];
  v79 = v1;
  uint64_t v23 = v3[13];
  uint64_t v80 = v4;
  uint64_t v81 = v21;
  uint64_t v60 = v22;
  uint64_t v82 = v22;
  uint64_t v83 = v23;
  uint64_t v59 = v23;
  type metadata accessor for LegacyFeedGroupKnobsRuleValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v75 = sub_1C152072C();
  uint64_t v71 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  v77 = (char *)&v58 - v24;
  uint64_t v68 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v25);
  v27 = (char *)&v58 - v26;
  uint64_t v28 = a1[3];
  v84 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  id v29 = v78;
  sub_1C1520E9C();
  uint64_t v73 = v4;
  uint64_t v74 = v21;
  if (v29)
  {
    id v78 = v29;
    __swift_project_boxed_opaque_existential_1(v84, v84[3]);
    sub_1C1520EBC();
    LOBYTE(v80) = 0;
    sub_1C152065C();
    v39 = v79;
    v40 = *(void (**)(void))(v69 + 32);
    uint64_t v58 = (uint64_t)v39 + *(void *)(*v39 + 112);
    v72 = v40;
    v40();
    LOBYTE(v80) = 1;
    v41 = v67;
    sub_1C152065C();
    v42 = (char *)v39 + *(void *)(*v39 + 120);
    ((void (*)(char *, char *, uint64_t))v72)(v42, v41, v70);
    LOBYTE(v80) = 2;
    v43 = v66;
    sub_1C152065C();
    v67 = v42;
    uint64_t v44 = (uint64_t)v39 + *(void *)(*v39 + 128);
    v45 = v43;
    uint64_t v46 = v70;
    ((void (*)(uint64_t, char *, uint64_t))v72)(v44, v45, v70);
    LOBYTE(v80) = 3;
    sub_1C152065C();
    v66 = (char *)v39 + *(void *)(*v39 + 136);
    v72();
    uint64_t v47 = v69;
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
    v49 = v64;
    v48(v64, v58, v46);
    v76 = *(void **)(v68 + 48);
    int v50 = ((uint64_t (*)(char *, uint64_t, uint64_t))v76)(v49, 1, v73);
    v72 = *(void (**)(void))(v47 + 8);
    ((void (*)(char *, uint64_t))v72)(v49, v46);
    if (v50 != 1) {
      goto LABEL_10;
    }
    v51 = v63;
    v48(v63, (uint64_t)v67, v46);
    int v52 = ((uint64_t (*)(char *, uint64_t, uint64_t))v76)(v51, 1, v73);
    ((void (*)(char *, uint64_t))v72)(v51, v46);
    if (v52 != 1) {
      goto LABEL_10;
    }
    uint64_t v53 = v46;
    v54 = v62;
    v48(v62, v44, v53);
    int v55 = ((uint64_t (*)(char *, uint64_t, uint64_t))v76)(v54, 1, v73);
    ((void (*)(char *, uint64_t))v72)(v54, v53);
    if (v55 != 1) {
      goto LABEL_10;
    }
    v56 = v61;
    v48(v61, (uint64_t)v66, v53);
    int v57 = ((uint64_t (*)(char *, uint64_t, uint64_t))v76)(v56, 1, v73);
    ((void (*)(char *, uint64_t))v72)(v56, v53);
    if (v57 == 1)
    {
      uint64_t v80 = v73;
      uint64_t v81 = v74;
      uint64_t v82 = v60;
      uint64_t v83 = v59;
      type metadata accessor for LegacyFeedGroupKnobsRuleValue.Errors();
      swift_getWitnessTable();
      swift_allocError();
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v71 + 8))(v77, v75);
      v31 = v79;
      swift_release();
      v38 = v84;
    }
    else
    {
LABEL_10:
      (*(void (**)(char *, uint64_t))(v71 + 8))(v77, v75);

      v31 = v79;
      v38 = v84;
    }
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(&v80, v83);
    sub_1C1520AEC();
    v31 = v79;
    uint64_t v32 = (uint64_t)v31 + *(void *)(*v31 + 112);
    uint64_t v33 = v68;
    id v78 = *(id *)(v68 + 16);
    ((void (*)(uint64_t, char *, uint64_t))v78)(v32, v27, v4);
    v34 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56);
    v34(v32, 0, 1, v4);
    uint64_t v35 = (uint64_t)v31 + *(void *)(*v31 + 120);
    ((void (*)(uint64_t, char *, uint64_t))v78)(v35, v27, v4);
    v34(v35, 0, 1, v4);
    uint64_t v36 = (uint64_t)v31 + *(void *)(*v31 + 128);
    ((void (*)(uint64_t, char *, uint64_t))v78)(v36, v27, v4);
    v34(v36, 0, 1, v4);
    uint64_t v37 = (uint64_t)v31 + *(void *)(*v31 + 136);
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v37, v27, v4);
    v34(v37, 0, 1, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
    v38 = v84;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v31;
}

uint64_t sub_1C01E49A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v81 = &v71[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1C151FD8C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v75 = &v71[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v11);
  v77 = &v71[-v12];
  MEMORY[0x1F4188790](v13);
  uint64_t v80 = &v71[-v14];
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = &v71[-v16];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v86 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  v76 = &v71[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v20);
  v79 = &v71[-v21];
  MEMORY[0x1F4188790](v22);
  uint64_t v82 = &v71[-v23];
  __n128 v25 = MEMORY[0x1F4188790](v24);
  v27 = &v71[-v26];
  uint64_t v28 = *(void *)(*(void *)a1 + 112);
  uint64_t v83 = a1;
  uint64_t v29 = a1 + v28;
  uint64_t v30 = *(void *)(*(void *)a2 + 112);
  uint64_t v84 = a2;
  uint64_t v85 = v9;
  uint64_t v31 = a2 + v30;
  uint64_t v87 = v32;
  uint64_t v33 = &v71[*(int *)(v32 + 48) - v26];
  v34 = *(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v34(&v71[-v26], v29, v8, v25);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v34)(v33, v31, v8);
  uint64_t v35 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48);
  if (v35(v27, 1, v5) == 1)
  {
    id v78 = (void (*)(unsigned char *, uint64_t, uint64_t))v34;
    if (v35(v33, 1, v5) != 1) {
      goto LABEL_18;
    }
    uint64_t v36 = v35;
    uint64_t v74 = v6;
    uint64_t v37 = *(unsigned char **)(v85 + 8);
    ((void (*)(unsigned char *, uint64_t))v37)(v27, v8);
  }
  else
  {
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v34)(v17, v27, v8);
    if (v35(v33, 1, v5) == 1)
    {
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v17, v5);
      goto LABEL_18;
    }
    id v78 = (void (*)(unsigned char *, uint64_t, uint64_t))v34;
    v38 = v81;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v81, v33, v5);
    LODWORD(v73) = sub_1C151E5CC();
    uint64_t v74 = v6;
    v39 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
    v39(v38, v5);
    v39(v17, v5);
    uint64_t v37 = *(unsigned char **)(v85 + 8);
    ((void (*)(unsigned char *, uint64_t))v37)(v27, v8);
    uint64_t v36 = v35;
    if ((v73 & 1) == 0) {
      goto LABEL_19;
    }
  }
  v40 = v82;
  uint64_t v41 = v84 + *(void *)(*(void *)v84 + 120);
  v42 = &v82[*(int *)(v87 + 48)];
  v43 = v78;
  v78(v82, v83 + *(void *)(*(void *)v83 + 120), v8);
  uint64_t v44 = v41;
  v27 = v40;
  v43(v42, v44, v8);
  if (v36(v40, 1, v5) == 1)
  {
    if (v36(v42, 1, v5) != 1) {
      goto LABEL_18;
    }
    ((void (*)(unsigned char *, uint64_t))v37)(v40, v8);
    goto LABEL_13;
  }
  v45 = v80;
  v43(v80, (uint64_t)v27, v8);
  if (v36(v42, 1, v5) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v45, v5);
    goto LABEL_18;
  }
  uint64_t v46 = v74;
  uint64_t v47 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v74 + 32);
  uint64_t v73 = v36;
  v48 = v81;
  v47(v81, v42, v5);
  int v72 = sub_1C151E5CC();
  v49 = *(void (**)(unsigned char *, uint64_t))(v46 + 8);
  int v50 = v48;
  uint64_t v36 = v73;
  v49(v50, v5);
  v49(v45, v5);
  ((void (*)(unsigned char *, uint64_t))v37)(v82, v8);
  if (v72)
  {
LABEL_13:
    uint64_t v51 = v84 + *(void *)(*(void *)v84 + 128);
    v27 = v79;
    int v52 = &v79[*(int *)(v87 + 48)];
    v43(v79, v83 + *(void *)(*(void *)v83 + 128), v8);
    v43(v52, v51, v8);
    if (v36(v27, 1, v5) == 1)
    {
      if (v36(v52, 1, v5) == 1)
      {
        ((void (*)(unsigned char *, uint64_t))v37)(v27, v8);
LABEL_22:
        uint64_t v62 = v84 + *(void *)(*(void *)v84 + 136);
        v27 = v76;
        v63 = &v76[*(int *)(v87 + 48)];
        v43(v76, v83 + *(void *)(*(void *)v83 + 136), v8);
        v43(v63, v62, v8);
        if (v36(v27, 1, v5) == 1)
        {
          if (v36(v63, 1, v5) == 1)
          {
            ((void (*)(unsigned char *, uint64_t))v37)(v27, v8);
            char v54 = 1;
            return v54 & 1;
          }
        }
        else
        {
          v64 = (void (*)(unsigned char *, unsigned char *, uint64_t))v43;
          v65 = v75;
          v64(v75, v27, v8);
          unsigned int v66 = v36(v63, 1, v5);
          uint64_t v67 = v74;
          if (v66 != 1)
          {
            uint64_t v68 = v27;
            uint64_t v69 = v81;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v74 + 32))(v81, v63, v5);
            char v54 = sub_1C151E5CC();
            uint64_t v70 = *(void (**)(unsigned char *, uint64_t))(v67 + 8);
            v70(v69, v5);
            v70(v65, v5);
            ((void (*)(unsigned char *, uint64_t))v37)(v68, v8);
            return v54 & 1;
          }
          (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v65, v5);
        }
      }
    }
    else
    {
      uint64_t v53 = v77;
      v43(v77, (uint64_t)v27, v8);
      if (v36(v52, 1, v5) != 1)
      {
        v56 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v74 + 32);
        uint64_t v73 = v36;
        int v57 = v81;
        v56(v81, v52, v5);
        LODWORD(v80) = sub_1C151E5CC();
        uint64_t v82 = v37;
        uint64_t v58 = v27;
        uint64_t v59 = *(void (**)(unsigned char *, uint64_t))(v74 + 8);
        uint64_t v60 = v57;
        uint64_t v36 = v73;
        v59(v60, v5);
        v59(v53, v5);
        v61 = v58;
        uint64_t v37 = v82;
        ((void (*)(unsigned char *, uint64_t))v82)(v61, v8);
        if ((v80 & 1) == 0) {
          goto LABEL_19;
        }
        goto LABEL_22;
      }
      (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v53, v5);
    }
LABEL_18:
    (*(void (**)(unsigned char *, uint64_t))(v86 + 8))(v27, v87);
  }
LABEL_19:
  char v54 = 0;
  return v54 & 1;
}

uint64_t sub_1C01E53AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6269726373627573 && a2 == 0xEA00000000006465;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6373627553746F6ELL && a2 == 0xED00006465626972 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64657269707865 && a2 == 0xE700000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C61697274 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C01E5590(char a1)
{
  uint64_t result = 0x6269726373627573;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6373627553746F6ELL;
      break;
    case 2:
      uint64_t result = 0x64657269707865;
      break;
    case 3:
      uint64_t result = 0x6C61697274;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1C01E5630(char *a1, char *a2)
{
  return sub_1C00C3628(*a1, *a2);
}

uint64_t sub_1C01E5648()
{
  return _s8NewsFeed0B12RefreshStateO9hashValueSivg_0();
}

uint64_t sub_1C01E5658()
{
  return sub_1C00C3638();
}

uint64_t sub_1C01E5668()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C01E56B4()
{
  return sub_1C01E5590(*v0);
}

uint64_t sub_1C01E56C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  return sub_1C01E56DC(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void))sub_1C01E53AC, a4);
}

uint64_t sub_1C01E56DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void)@<X4>, unsigned char *a5@<X8>)
{
  uint64_t result = a4(a1, a2, a3[2], a3[3], a3[4], a3[5]);
  *a5 = result;
  return result;
}

uint64_t sub_1C01E5718@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_1C01E5730(a1, (uint64_t (*)(void, void, void, void))sub_1C01E61E0, a2);
}

uint64_t sub_1C01E5730@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5]);
  *a3 = result;
  return result;
}

uint64_t sub_1C01E576C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1C01E57C0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1C01E5814()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = sub_1C151FD8C();
  v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(void *)(*(void *)v0 + 120), v2);
  v3(v0 + *(void *)(*(void *)v0 + 128), v2);
  v3(v0 + *(void *)(*(void *)v0 + 136), v2);
  return v0;
}

uint64_t sub_1C01E5928()
{
  sub_1C01E5814();
  return swift_deallocClassInstance();
}

uint64_t sub_1C01E597C(void *a1)
{
  uint64_t v2 = v1;
  long long v4 = *(_OWORD *)(*(void *)v2 + 96);
  v11[0] = *(_OWORD *)(*(void *)v2 + 80);
  v11[1] = v4;
  long long v12 = v11[0];
  long long v13 = v4;
  type metadata accessor for LegacyFeedGroupKnobsRuleValue.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_1C152083C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  LOBYTE(v12) = 0;
  uint64_t v9 = v14;
  sub_1C152078C();
  if (!v9)
  {
    LOBYTE(v12) = 1;
    sub_1C152078C();
    LOBYTE(v12) = 2;
    sub_1C152078C();
    LOBYTE(v12) = 3;
    sub_1C152078C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_1C01E5C10@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C01E185C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C01E5C3C(void *a1)
{
  return sub_1C01E597C(a1);
}

uint64_t sub_1C01E5C60(uint64_t *a1, uint64_t *a2)
{
  return sub_1C01E49A4(*a1, *a2);
}

uint64_t method lookup function for FeedGroupKnobsRuleValue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedGroupKnobsRuleValue);
}

uint64_t dispatch thunk of FeedGroupKnobsRuleValue.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleValue.__allocating_init(value:selectors:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t method lookup function for FeedGroupKnobsRuleValue.Selector(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedGroupKnobsRuleValue.Selector);
}

uint64_t dispatch thunk of FeedGroupKnobsRuleValue.Selector.__allocating_init(value:selector:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedGroupKnobsRuleValue.Selector.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1C01E5D14()
{
  uint64_t result = sub_1C151FD8C();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *sub_1C01E5DB0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01E5E7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1C01E5EA4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C01E5EC0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C01E5EDC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C01E5EF8()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for LegacyFeedGroupKnobsRuleValue.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C01E5F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C151FD8C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t type metadata accessor for LegacyFeedGroupKnobsRuleValue.Errors()
{
  return swift_getGenericMetadata();
}

unsigned char *sub_1C01E5FB8(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C01E6054);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_1C01E607C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01E6148);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1C01E6170()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C01E618C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C01E61A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C01E61C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C01E61E0()
{
  return 4;
}

uint64_t sub_1C01E61E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v91 = (uint64_t)v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v98 = (uint64_t)v86 - v5;
  uint64_t v6 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v101 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v87 = (void *)((char *)v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (void *)((char *)v86 - v9);
  MEMORY[0x1F4188790](v11);
  v90 = (void *)((char *)v86 - v12);
  MEMORY[0x1F4188790](v13);
  uint64_t v95 = (uint64_t)v86 - v14;
  MEMORY[0x1F4188790](v15);
  v94 = (void *)((char *)v86 - v16);
  MEMORY[0x1F4188790](v17);
  v93 = (void *)((char *)v86 - v18);
  MEMORY[0x1F4188790](v19);
  v100 = (void *)((char *)v86 - v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v99 = (uint64_t)v86 - v22;
  MEMORY[0x1F4188790](v23);
  __n128 v25 = (char *)v86 - v24;
  int64_t v26 = *(void *)(a1 + 16);
  uint64_t v106 = MEMORY[0x1E4FBC860];
  sub_1BFF661B8(0, v26, 0);
  uint64_t v27 = *(void *)(a1 + 56);
  uint64_t v96 = a1 + 56;
  uint64_t v28 = -1;
  uint64_t v29 = -1 << *(unsigned char *)(a1 + 32);
  if (-v29 < 64) {
    uint64_t v28 = ~(-1 << -(char)v29);
  }
  unint64_t v30 = v28 & v27;
  uint64_t v92 = a1;
  uint64_t v102 = v6;
  int64_t v89 = v26;
  if (v26)
  {
    int64_t v97 = (unint64_t)(63 - v29) >> 6;
    swift_bridgeObjectRetain();
    uint64_t v31 = 0;
    int64_t v32 = 0;
    v88 = v10;
    while (1)
    {
      if (v30)
      {
        unint64_t v33 = __clz(__rbit64(v30));
        v30 &= v30 - 1;
        unint64_t v34 = v33 | (v32 << 6);
      }
      else
      {
        int64_t v35 = v32 + 1;
        if (__OFADD__(v32, 1)) {
          goto LABEL_115;
        }
        if (v35 >= v97) {
          goto LABEL_116;
        }
        unint64_t v36 = *(void *)(v96 + 8 * v35);
        ++v32;
        if (!v36)
        {
          int64_t v32 = v35 + 1;
          if (v35 + 1 >= v97) {
            goto LABEL_119;
          }
          unint64_t v36 = *(void *)(v96 + 8 * v32);
          if (!v36)
          {
            int64_t v32 = v35 + 2;
            if (v35 + 2 >= v97) {
              goto LABEL_121;
            }
            unint64_t v36 = *(void *)(v96 + 8 * v32);
            if (!v36)
            {
              int64_t v37 = v35 + 3;
              if (v37 >= v97) {
                goto LABEL_122;
              }
              unint64_t v36 = *(void *)(v96 + 8 * v37);
              if (!v36)
              {
                while (1)
                {
                  int64_t v32 = v37 + 1;
                  if (__OFADD__(v37, 1)) {
                    goto LABEL_117;
                  }
                  if (v32 >= v97) {
                    goto LABEL_118;
                  }
                  unint64_t v36 = *(void *)(v96 + 8 * v32);
                  ++v37;
                  if (v36) {
                    goto LABEL_20;
                  }
                }
              }
              int64_t v32 = v37;
            }
          }
        }
LABEL_20:
        unint64_t v30 = (v36 - 1) & v36;
        unint64_t v34 = __clz(__rbit64(v36)) + (v32 << 6);
      }
      uint64_t v38 = *(void *)(a1 + 48) + *(void *)(v101 + 72) * v34;
      uint64_t v39 = v95;
      sub_1C01EB700(v38, v95, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      v40 = v90;
      sub_1C01EB700(v39, (uint64_t)v90, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1C01EB7C8((uint64_t)v40, v91, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
        uint64_t v41 = v87;
        sub_1C01EB700(v39, (uint64_t)v87, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C01EB768((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          unint64_t v42 = 0xE700000000000000;
          uint64_t v43 = 0x636972656E6567;
        }
        else
        {
          switch(*v41 >> 61)
          {
            case 1:
              swift_release();
              unint64_t v42 = 0xE800000000000000;
              uint64_t v43 = 0x676E69646E617473;
              break;
            case 2:
              swift_release();
              unint64_t v42 = 0xE700000000000000;
              uint64_t v43 = 0x74656B63617262;
              break;
            case 3:
              swift_release();
              unint64_t v42 = 0xE800000000000000;
              uint64_t v43 = 0x65726F6353786F62;
              break;
            case 4:
              swift_release();
              uint64_t v43 = 0x726F6353656E696CLL;
              unint64_t v42 = 0xE900000000000065;
              break;
            case 5:
              swift_release();
              uint64_t v43 = 0x65527972756A6E69;
              unint64_t v42 = 0xEC00000074726F70;
              break;
            case 6:
              swift_release();
              unint64_t v42 = 0xE900000000000072;
              uint64_t v43 = 0x6579616C5079656BLL;
              break;
            default:
              swift_release();
              unint64_t v42 = 0xE500000000000000;
              uint64_t v43 = 0x65726F6373;
              break;
          }
        }
        uint64_t v104 = v43;
        unint64_t v105 = v42;
        sub_1C151E80C();
        uint64_t v44 = v91;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v45 = v104;
        unint64_t v46 = v105;
        sub_1C01EB768(v44, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
      }
      else
      {
        uint64_t v47 = v39;
        unint64_t v48 = *v40;
        sub_1C01EB700(v47, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C01EB768((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          unint64_t v49 = 0xE700000000000000;
          uint64_t v50 = 0x636972656E6567;
        }
        else
        {
          switch(*v10 >> 61)
          {
            case 1:
              swift_release();
              unint64_t v49 = 0xE800000000000000;
              uint64_t v50 = 0x676E69646E617473;
              break;
            case 2:
              swift_release();
              unint64_t v49 = 0xE700000000000000;
              uint64_t v50 = 0x74656B63617262;
              break;
            case 3:
              swift_release();
              unint64_t v49 = 0xE800000000000000;
              uint64_t v50 = 0x65726F6353786F62;
              break;
            case 4:
              swift_release();
              uint64_t v50 = 0x726F6353656E696CLL;
              unint64_t v49 = 0xE900000000000065;
              break;
            case 5:
              swift_release();
              uint64_t v50 = 0x65527972756A6E69;
              unint64_t v49 = 0xEC00000074726F70;
              break;
            case 6:
              swift_release();
              unint64_t v49 = 0xE900000000000072;
              uint64_t v50 = 0x6579616C5079656BLL;
              break;
            default:
              swift_release();
              unint64_t v49 = 0xE500000000000000;
              uint64_t v50 = 0x65726F6373;
              break;
          }
        }
        uint64_t v104 = v50;
        unint64_t v105 = v49;
        sub_1C151E80C();
        switch(v48 >> 61)
        {
          case 2uLL:
            uint64_t v55 = *(void *)((v48 & 0x1FFFFFFFFFFFFFFFLL) + 0x10)
                + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations;
            sub_1C00FD9D4();
            uint64_t v57 = v56;
            swift_retain();
            v86[2] = v57;
            v86[3] = v55;
            sub_1C151939C();
            uint64_t v58 = *(void **)(v103 + 64);
            swift_unknownObjectRetain();
            swift_release();
            if (v58
              && (id v59 = objc_msgSend(v58, sel_asSports),
                  swift_unknownObjectRelease(),
                  v59)
              && (id v60 = objc_msgSend(v59, sel_UMCCanonicalID),
                  swift_unknownObjectRelease(),
                  v60))
            {
              sub_1C151E62C();
              swift_release();
            }
            else
            {
              sub_1C151939C();
              swift_bridgeObjectRetain();
              swift_release();
              swift_release();
            }
            break;
          default:
            swift_bridgeObjectRetain();
            break;
        }
        sub_1C151E80C();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v45 = v104;
        unint64_t v46 = v105;
      }
      sub_1C01EB768(v95, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      uint64_t v51 = v106;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v51 + 16) + 1, 1);
        uint64_t v51 = v106;
      }
      unint64_t v53 = *(void *)(v51 + 16);
      unint64_t v52 = *(void *)(v51 + 24);
      if (v53 >= v52 >> 1)
      {
        sub_1BFF661B8(v52 > 1, v53 + 1, 1);
        uint64_t v51 = v106;
      }
      ++v31;
      *(void *)(v51 + 16) = v53 + 1;
      uint64_t v54 = v51 + 16 * v53;
      *(void *)(v54 + 32) = v45;
      *(void *)(v54 + 40) = v46;
      uint64_t v10 = v88;
      a1 = v92;
      if (v31 == v89) {
        goto LABEL_58;
      }
    }
  }
  uint64_t v51 = v106;
  int64_t v97 = (unint64_t)(63 - v29) >> 6;
  swift_bridgeObjectRetain();
  int64_t v32 = 0;
LABEL_58:
  if (!v30) {
    goto LABEL_60;
  }
LABEL_59:
  unint64_t v61 = __clz(__rbit64(v30));
  v30 &= v30 - 1;
  for (unint64_t i = v61 | (v32 << 6); ; unint64_t i = __clz(__rbit64(v64)) + (v32 << 6))
  {
    uint64_t v66 = v99;
    sub_1C01EB700(*(void *)(a1 + 48) + *(void *)(v101 + 72) * i, v99, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    sub_1C01EB7C8(v66, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v67 = v100;
    sub_1C01EB700((uint64_t)v25, (uint64_t)v100, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1C01EB7C8((uint64_t)v67, v98, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
      uint64_t v68 = v94;
      sub_1C01EB700((uint64_t)v25, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1C01EB768((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        unint64_t v69 = 0xE700000000000000;
        uint64_t v70 = 0x636972656E6567;
      }
      else
      {
        switch(*v68 >> 61)
        {
          case 1:
            swift_release();
            unint64_t v69 = 0xE800000000000000;
            uint64_t v70 = 0x676E69646E617473;
            break;
          case 2:
            swift_release();
            unint64_t v69 = 0xE700000000000000;
            uint64_t v70 = 0x74656B63617262;
            break;
          case 3:
            swift_release();
            unint64_t v69 = 0xE800000000000000;
            uint64_t v70 = 0x65726F6353786F62;
            break;
          case 4:
            swift_release();
            uint64_t v70 = 0x726F6353656E696CLL;
            unint64_t v69 = 0xE900000000000065;
            break;
          case 5:
            swift_release();
            uint64_t v70 = 0x65527972756A6E69;
            unint64_t v69 = 0xEC00000074726F70;
            break;
          case 6:
            swift_release();
            unint64_t v69 = 0xE900000000000072;
            uint64_t v70 = 0x6579616C5079656BLL;
            break;
          default:
            swift_release();
            unint64_t v69 = 0xE500000000000000;
            uint64_t v70 = 0x65726F6373;
            break;
        }
      }
      uint64_t v104 = v70;
      unint64_t v105 = v69;
      sub_1C151E80C();
      uint64_t v71 = v98;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v72 = v104;
      unint64_t v73 = v105;
      sub_1C01EB768(v71, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
    }
    else
    {
      unint64_t v74 = *v67;
      uint64_t v75 = v93;
      sub_1C01EB700((uint64_t)v25, (uint64_t)v93, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1C01EB768((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        unint64_t v76 = 0xE700000000000000;
        uint64_t v77 = 0x636972656E6567;
      }
      else
      {
        switch(*v75 >> 61)
        {
          case 1:
            swift_release();
            unint64_t v76 = 0xE800000000000000;
            uint64_t v77 = 0x676E69646E617473;
            break;
          case 2:
            swift_release();
            unint64_t v76 = 0xE700000000000000;
            uint64_t v77 = 0x74656B63617262;
            break;
          case 3:
            swift_release();
            unint64_t v76 = 0xE800000000000000;
            uint64_t v77 = 0x65726F6353786F62;
            break;
          case 4:
            swift_release();
            uint64_t v77 = 0x726F6353656E696CLL;
            unint64_t v76 = 0xE900000000000065;
            break;
          case 5:
            swift_release();
            uint64_t v77 = 0x65527972756A6E69;
            unint64_t v76 = 0xEC00000074726F70;
            break;
          case 6:
            swift_release();
            unint64_t v76 = 0xE900000000000072;
            uint64_t v77 = 0x6579616C5079656BLL;
            break;
          default:
            swift_release();
            unint64_t v76 = 0xE500000000000000;
            uint64_t v77 = 0x65726F6373;
            break;
        }
      }
      uint64_t v104 = v77;
      unint64_t v105 = v76;
      sub_1C151E80C();
      switch(v74 >> 61)
      {
        case 2uLL:
          uint64_t v81 = *(void *)((v74 & 0x1FFFFFFFFFFFFFFFLL) + 0x10)
              + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations;
          sub_1C00FD9D4();
          swift_retain();
          uint64_t v95 = v81;
          sub_1C151939C();
          uint64_t v82 = *(void **)(v103 + 64);
          swift_unknownObjectRetain();
          swift_release();
          if (v82
            && (id v83 = objc_msgSend(v82, sel_asSports),
                swift_unknownObjectRelease(),
                v83)
            && (id v84 = objc_msgSend(v83, sel_UMCCanonicalID),
                swift_unknownObjectRelease(),
                v84))
          {
            sub_1C151E62C();
            swift_release();
          }
          else
          {
            sub_1C151939C();
            swift_bridgeObjectRetain();
            swift_release();
            swift_release();
          }
          a1 = v92;
          break;
        default:
          swift_bridgeObjectRetain();
          break;
      }
      sub_1C151E80C();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v72 = v104;
      unint64_t v73 = v105;
    }
    sub_1C01EB768((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
    uint64_t v51 = v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BFF661B8(0, *(void *)(v51 + 16) + 1, 1);
      uint64_t v51 = v106;
    }
    unint64_t v79 = *(void *)(v51 + 16);
    unint64_t v78 = *(void *)(v51 + 24);
    if (v79 >= v78 >> 1)
    {
      sub_1BFF661B8(v78 > 1, v79 + 1, 1);
      uint64_t v51 = v106;
    }
    *(void *)(v51 + 16) = v79 + 1;
    uint64_t v80 = v51 + 16 * v79;
    *(void *)(v80 + 32) = v72;
    *(void *)(v80 + 40) = v73;
    if (v30) {
      goto LABEL_59;
    }
LABEL_60:
    int64_t v63 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
      goto LABEL_120;
    }
    if (v63 >= v97) {
      goto LABEL_113;
    }
    unint64_t v64 = *(void *)(v96 + 8 * v63);
    ++v32;
    if (!v64)
    {
      int64_t v32 = v63 + 1;
      if (v63 + 1 >= v97) {
        goto LABEL_113;
      }
      unint64_t v64 = *(void *)(v96 + 8 * v32);
      if (!v64)
      {
        int64_t v32 = v63 + 2;
        if (v63 + 2 >= v97) {
          goto LABEL_113;
        }
        unint64_t v64 = *(void *)(v96 + 8 * v32);
        if (!v64)
        {
          int64_t v32 = v63 + 3;
          if (v63 + 3 >= v97) {
            goto LABEL_113;
          }
          unint64_t v64 = *(void *)(v96 + 8 * v32);
          if (!v64) {
            break;
          }
        }
      }
    }
LABEL_75:
    unint64_t v30 = (v64 - 1) & v64;
  }
  int64_t v65 = v63 + 4;
  if (v65 < v97)
  {
    unint64_t v64 = *(void *)(v96 + 8 * v65);
    if (!v64)
    {
      while (1)
      {
        int64_t v32 = v65 + 1;
        if (__OFADD__(v65, 1)) {
          break;
        }
        if (v32 >= v97) {
          goto LABEL_113;
        }
        unint64_t v64 = *(void *)(v96 + 8 * v32);
        ++v65;
        if (v64) {
          goto LABEL_75;
        }
      }
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
      JUMPOUT(0x1C01E72F4);
    }
    int64_t v32 = v65;
    goto LABEL_75;
  }
LABEL_113:
  swift_release();
  return v51;
}

uint64_t sub_1C01E739C(long long *a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v24 = a3;
  uint64_t v25 = a4;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v6 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v21 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C151F55C();
  uint64_t v8 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151F52C();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v19 = OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_networkQueue;
  v18[1] = sub_1BFE4597C();
  sub_1C151E1AC();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1BFCBD13C((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  uint64_t v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C0064628(0, (unint64_t *)&unk_1EB879FB0, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1BFD0119C((unint64_t *)&qword_1EB879FC0, (unint64_t *)&unk_1EB879FB0, v13);
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4FBCC58], v20);
  *(void *)(v4 + v19) = sub_1C151F5AC();
  *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lastFailedResponses) = MEMORY[0x1E4FBC868];
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lock;
  sub_1C1517E9C();
  sub_1C1517ECC();
  swift_allocObject();
  *(void *)(v4 + v14) = sub_1C1517EBC();
  sub_1BFC773DC(v22, v4 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_sportsTokenManager);
  sub_1BFC773DC(v23, v4 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_genericTokenManager);
  uint64_t v15 = v4 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_networkProxy;
  uint64_t v16 = sub_1C151812C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, v24, v16);
  *(void *)(v5 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_defaultMaxAge) = v25;
  return v5;
}

uint64_t sub_1C01E7754(uint64_t a1)
{
  sub_1C1517E7C();
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lastFailedResponses);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*(void *)(v4 + 16) && (uint64_t v5 = sub_1C10521B0(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_endAccess();
  sub_1C1517E8C();
  return v7;
}

uint64_t sub_1C01E7800(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16)) {
    uint64_t v2 = &OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_genericTokenManager;
  }
  else {
    uint64_t v2 = &OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_sportsTokenManager;
  }
  sub_1BFC66384(a1 + *v2, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  uint64_t v3 = sub_1C1518A1C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t sub_1C01E78B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v52 = a4;
  uint64_t v55 = a2;
  uint64_t v57 = a1;
  uint64_t v56 = sub_1C151526C();
  uint64_t v54 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v51 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0064628(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  id v60 = (char *)&v46 - v8;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  unint64_t v61 = (char *)&v46 - v13;
  uint64_t v14 = sub_1C15155DC();
  uint64_t v58 = *(void *)(v14 - 8);
  uint64_t v59 = v14;
  MEMORY[0x1F4188790](v14);
  int64_t v63 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0064628(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], v6);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v46 - v17;
  uint64_t v19 = sub_1C15156FC();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v46 - v24;
  uint64_t v26 = *(int *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) + 24);
  uint64_t v53 = a3;
  uint64_t v27 = a3 + v26;
  sub_1C151564C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1C01EBA6C((uint64_t)v18, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
    uint64_t v28 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
    sub_1BFCBD13C(&qword_1EA1980C8, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v29, v27, v9);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    uint64_t v48 = v10;
    uint64_t v49 = v9;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v18, v19);
    sub_1C151562C();
    sub_1C151563C();
    unint64_t v30 = (void (*)(unsigned char *, void))sub_1C151561C();
    if (*v31)
    {
      int64_t v32 = v31;
      uint64_t v47 = v30;
      sub_1C151942C();
      sub_1C15155AC();
      swift_bridgeObjectRelease();
      unint64_t v33 = *v32;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *int64_t v32 = v33;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v33 = sub_1BFFB4568(0, *(void *)(v33 + 16) + 1, 1, v33);
        *int64_t v32 = v33;
      }
      unint64_t v36 = *(void *)(v33 + 16);
      unint64_t v35 = *(void *)(v33 + 24);
      if (v36 >= v35 >> 1)
      {
        unint64_t v33 = sub_1BFFB4568(v35 > 1, v36 + 1, 1, v33);
        *int64_t v32 = v33;
      }
      uint64_t v37 = v27;
      *(void *)(v33 + 16) = v36 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v33+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v36, v63, v59);
      v47(v62, 0);
    }
    else
    {
      uint64_t v37 = v27;
      v30(v62, 0);
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v25, v19);
    uint64_t v38 = (uint64_t)v60;
    sub_1C151565C();
    int64_t v63 = *(char **)(v20 + 8);
    ((void (*)(char *, uint64_t))v63)(v22, v19);
    uint64_t v40 = v48;
    uint64_t v39 = v49;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v38, 1, v49) == 1)
    {
      sub_1C01EBA6C(v38, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v28 = type metadata accessor for WebEmbedDataVisualizationDataServiceError();
      sub_1BFCBD13C(&qword_1EA1980C8, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError);
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v41, v37, v39);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    else
    {
      unint64_t v42 = v61;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v61, v38, v39);
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v50, v42, v39);
      uint64_t v43 = (uint64_t)v51;
      sub_1C151522C();
      uint64_t v44 = v53;
      sub_1C151525C();
      uint64_t v28 = sub_1C01E80D8(v44, v43, v52 & 1);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v43, v56);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v61, v39);
    }
    ((void (*)(char *, uint64_t))v63)(v25, v19);
  }
  return v28;
}

uint64_t sub_1C01E80D8(uint64_t a1, uint64_t a2, int a3)
{
  int v77 = a3;
  uint64_t v80 = a2;
  uint64_t v82 = *v3;
  id v83 = v3;
  uint64_t v85 = sub_1C151526C();
  uint64_t v74 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v79 = v5;
  uint64_t v81 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C151631C();
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v72 = v7;
  unint64_t v73 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  id v84 = (char *)v63 - v9;
  uint64_t v10 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v71 = (uint64_t)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v63 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v63 - v17;
  uint64_t v70 = v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (void *)((char *)v63 - v21);
  if (qword_1EB863FD0 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1C15198DC();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EB863FB8);
  sub_1C01EB700(a1, (uint64_t)v22, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  sub_1C01EB700(a1, (uint64_t)v18, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  sub_1C01EB700(a1, (uint64_t)v15, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  uint64_t v24 = sub_1C15198AC();
  os_log_type_t v25 = sub_1C151F34C();
  int v26 = v25;
  BOOL v27 = os_log_type_enabled(v24, v25);
  uint64_t v78 = a1;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v68 = (void (*)(void, void, void))swift_slowAlloc();
    v87[0] = (uint64_t)v68;
    *(_DWORD *)uint64_t v28 = 136446722;
    LODWORD(v67) = v26;
    uint64_t v69 = v11;
    uint64_t v29 = *v22;
    unint64_t v30 = v22[1];
    swift_bridgeObjectRetain();
    uint64_t v86 = sub_1BFDA76EC(v29, v30, v87);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C01EB768((uint64_t)v22, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    *(_WORD *)(v28 + 12) = 2082;
    uint64_t v31 = swift_bridgeObjectRetain();
    uint64_t v32 = sub_1C01E9268(v31);
    uint64_t v66 = (uint64_t (*)(uint64_t))v24;
    uint64_t v33 = v32;
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v86 = sub_1BFDA76EC(v33, v35, v87);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C01EB768((uint64_t)v18, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    *(_WORD *)(v28 + 22) = 2082;
    sub_1C1515FDC();
    sub_1BFCBD13C((unint64_t *)&qword_1EB861120, MEMORY[0x1E4F276F0]);
    uint64_t v36 = sub_1C152088C();
    uint64_t v86 = sub_1BFDA76EC(v36, v37, v87);
    a1 = v78;
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    uint64_t v11 = v69;
    sub_1C01EB768((uint64_t)v15, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    uint64_t v38 = v66;
    _os_log_impl(&dword_1BFC31000, (os_log_t)v66, (os_log_type_t)v67, "WebEmbedDataVisualizationDataService executing fetch with identifier=%{public}s; visualizations=%{public}s, url=%{public}s",
      (uint8_t *)v28,
      0x20u);
    uint64_t v39 = v68;
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v39, -1, -1);
    MEMORY[0x1C18C9B00](v28, -1, -1);
  }
  else
  {
    sub_1C01EB768((uint64_t)v22, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    sub_1C01EB768((uint64_t)v18, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    sub_1C01EB768((uint64_t)v15, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  }
  uint64_t v40 = sub_1C151630C();
  MEMORY[0x1F4188790](v40);
  uint64_t v41 = v80;
  unint64_t v42 = v83;
  v63[-2] = v80;
  v63[-1] = v42;
  sub_1C01EB6B0(0, &qword_1EB863DF8, MEMORY[0x1E4FAAE30]);
  v63[1] = sub_1C151932C();
  uint64_t v69 = *(void *)((char *)v42 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_networkQueue);
  unint64_t v64 = type metadata accessor for WebEmbedDataVisualizationDataRequest;
  uint64_t v43 = v71;
  sub_1C01EB700(a1, v71, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  uint64_t v44 = v74;
  uint64_t v68 = *(void (**)(void, void, void))(v74 + 16);
  uint64_t v45 = v81;
  v68(v81, v41, v85);
  uint64_t v46 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v47 = (v46 + 16) & ~v46;
  uint64_t v65 = v47 + v70;
  uint64_t v67 = v47;
  uint64_t v48 = *(unsigned __int8 *)(v44 + 80);
  uint64_t v49 = (v47 + v70 + v48) & ~v48;
  v63[2] = v46 | v48 | 7;
  uint64_t v50 = swift_allocObject();
  uint64_t v66 = type metadata accessor for WebEmbedDataVisualizationDataRequest;
  sub_1C01EB7C8(v43, v50 + v47, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  uint64_t v74 = *(void *)(v44 + 32);
  uint64_t v51 = v45;
  int v52 = v45;
  uint64_t v53 = v85;
  ((void (*)(uint64_t, char *, uint64_t))v74)(v50 + v49, v51, v85);
  type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  uint64_t v70 = sub_1C151900C();
  swift_release();
  swift_release();
  sub_1C01EB700(v78, v43, v64);
  uint64_t v55 = v75;
  uint64_t v54 = v76;
  uint64_t v56 = v73;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v73, v84, v76);
  v68(v52, v80, v53);
  unint64_t v57 = (v65 + *(unsigned __int8 *)(v55 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  unint64_t v58 = (v72 + v48 + v57) & ~v48;
  uint64_t v59 = v58 + v79;
  uint64_t v60 = swift_allocObject();
  sub_1C01EB7C8(v43, v60 + v67, v66);
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v60 + v57, v56, v54);
  ((void (*)(unint64_t, char *, uint64_t))v74)(v60 + v58, v81, v85);
  *(unsigned char *)(v60 + v59) = v77 & 1;
  uint64_t v61 = sub_1C15190EC();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v84, v54);
  return v61;
}

uint64_t sub_1C01E8998(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v41 = (uint64_t)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v38 = (void *)((char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  unint64_t v37 = (void *)((char *)v36 - v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (void *)((char *)v36 - v10);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v36 - v13;
  uint64_t v46 = 91;
  unint64_t v47 = 0xE100000000000000;
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v45 = MEMORY[0x1E4FBC860];
  sub_1BFF661B8(0, v15, 0);
  v36[0] = a1;
  if (v15)
  {
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v39 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    uint64_t v40 = v4;
    do
    {
      sub_1C01EB700(v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1C01EB700((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1C01EB7C8((uint64_t)v11, v41, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
        uint64_t v17 = v38;
        sub_1C01EB700((uint64_t)v14, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C01EB768((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          unint64_t v18 = 0xE700000000000000;
          uint64_t v19 = 0x636972656E6567;
        }
        else
        {
          switch(*v17 >> 61)
          {
            case 1:
              swift_release();
              unint64_t v18 = 0xE800000000000000;
              uint64_t v19 = 0x676E69646E617473;
              break;
            case 2:
              swift_release();
              unint64_t v18 = 0xE700000000000000;
              uint64_t v19 = 0x74656B63617262;
              break;
            case 3:
              swift_release();
              unint64_t v18 = 0xE800000000000000;
              uint64_t v19 = 0x65726F6353786F62;
              break;
            case 4:
              swift_release();
              uint64_t v19 = 0x726F6353656E696CLL;
              unint64_t v18 = 0xE900000000000065;
              break;
            case 5:
              swift_release();
              uint64_t v19 = 0x65527972756A6E69;
              unint64_t v18 = 0xEC00000074726F70;
              break;
            case 6:
              swift_release();
              unint64_t v18 = 0xE900000000000072;
              uint64_t v19 = 0x6579616C5079656BLL;
              break;
            default:
              swift_release();
              unint64_t v18 = 0xE500000000000000;
              uint64_t v19 = 0x65726F6373;
              break;
          }
        }
        uint64_t v43 = v19;
        unint64_t v44 = v18;
        sub_1C151E80C();
        uint64_t v20 = v41;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        uint64_t v22 = v43;
        unint64_t v21 = v44;
        sub_1C01EB768(v20, (uint64_t (*)(void))type metadata accessor for GenericDataVisualization);
      }
      else
      {
        unint64_t v23 = *v11;
        uint64_t v24 = v37;
        sub_1C01EB700((uint64_t)v14, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C01EB768((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
          unint64_t v25 = 0xE700000000000000;
          uint64_t v26 = 0x636972656E6567;
        }
        else
        {
          switch(*v24 >> 61)
          {
            case 1:
              swift_release();
              unint64_t v25 = 0xE800000000000000;
              uint64_t v26 = 0x676E69646E617473;
              break;
            case 2:
              swift_release();
              unint64_t v25 = 0xE700000000000000;
              uint64_t v26 = 0x74656B63617262;
              break;
            case 3:
              swift_release();
              unint64_t v25 = 0xE800000000000000;
              uint64_t v26 = 0x65726F6353786F62;
              break;
            case 4:
              swift_release();
              uint64_t v26 = 0x726F6353656E696CLL;
              unint64_t v25 = 0xE900000000000065;
              break;
            case 5:
              swift_release();
              uint64_t v26 = 0x65527972756A6E69;
              unint64_t v25 = 0xEC00000074726F70;
              break;
            case 6:
              swift_release();
              unint64_t v25 = 0xE900000000000072;
              uint64_t v26 = 0x6579616C5079656BLL;
              break;
            default:
              swift_release();
              unint64_t v25 = 0xE500000000000000;
              uint64_t v26 = 0x65726F6373;
              break;
          }
        }
        uint64_t v43 = v26;
        unint64_t v44 = v25;
        sub_1C151E80C();
        switch(v23 >> 61)
        {
          case 2uLL:
            uint64_t v31 = *(void *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10)
                + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations;
            sub_1C00FD9D4();
            swift_retain();
            v36[1] = v31;
            sub_1C151939C();
            uint64_t v32 = *(void **)(v42 + 64);
            swift_unknownObjectRetain();
            swift_release();
            if (v32
              && (id v33 = objc_msgSend(v32, sel_asSports, v36[0]),
                  swift_unknownObjectRelease(),
                  v33)
              && (id v34 = objc_msgSend(v33, sel_UMCCanonicalID),
                  swift_unknownObjectRelease(),
                  v34))
            {
              sub_1C151E62C();
              swift_release();
            }
            else
            {
              sub_1C151939C();
              swift_bridgeObjectRetain();
              swift_release();
              swift_release();
            }
            break;
          default:
            swift_bridgeObjectRetain();
            break;
        }
        sub_1C151E80C();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v22 = v43;
        unint64_t v21 = v44;
      }
      sub_1C01EB768((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      uint64_t v27 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v27 + 16) + 1, 1);
        uint64_t v27 = v45;
      }
      unint64_t v29 = *(void *)(v27 + 16);
      unint64_t v28 = *(void *)(v27 + 24);
      if (v29 >= v28 >> 1)
      {
        sub_1BFF661B8(v28 > 1, v29 + 1, 1);
        uint64_t v27 = v45;
      }
      *(void *)(v27 + 16) = v29 + 1;
      uint64_t v30 = v27 + 16 * v29;
      *(void *)(v30 + 32) = v22;
      *(void *)(v30 + 40) = v21;
      v16 += v39;
      --v15;
    }
    while (v15);
  }
  else
  {
    uint64_t v27 = v45;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v43 = v27;
  swift_retain();
  sub_1BFD8BB48(&v43);
  swift_release();
  sub_1C01EB6B0(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  sub_1C151E55C();
  swift_release();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return v46;
}

uint64_t sub_1C01E9268(uint64_t a1)
{
  uint64_t v3 = 91;
  unint64_t v4 = 0xE100000000000000;
  uint64_t v2 = sub_1C01E61E8(a1);
  swift_bridgeObjectRetain();
  sub_1BFD8BB48(&v2);
  swift_bridgeObjectRelease();
  sub_1C01EB6B0(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  sub_1C151E55C();
  swift_release();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return v3;
}

uint64_t sub_1C01E9360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151812C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C151526C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C15182FC();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_networkProxy, v4);
  sub_1C01EBADC();
  id v13 = objc_allocWithZone(v12);
  uint64_t v14 = (void *)sub_1C1518C4C();
  uint64_t v15 = sub_1C15182CC();

  return v15;
}

uint64_t sub_1C01E9520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a2;
  uint64_t v43 = a4;
  uint64_t v47 = a3;
  uint64_t v46 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0064628(0, &qword_1EB863670, MEMORY[0x1E4F26C48], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v40 - v7;
  uint64_t v9 = sub_1C151526C();
  uint64_t v44 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v41 = (char *)&v40 - v13;
  uint64_t v51 = sub_1C1515FDC();
  uint64_t v48 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0064628(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v5);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  unint64_t v21 = (char *)&v40 - v20;
  sub_1C01EB6B0(0, &qword_1EB863DF8, MEMORY[0x1E4FAAE30]);
  uint64_t v22 = sub_1C1518B5C();
  if (v22)
  {
    unint64_t v23 = (void *)v22;
    self;
    uint64_t v24 = (char *)swift_dynamicCastObjCClass();
    if (v24)
    {
      uint64_t v45 = v24;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v15, v47 + *(int *)(v46 + 24), v51);
      sub_1C1518B4C();
      uint64_t v25 = v44;
      uint64_t v26 = v9;
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v11, v43, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v8, 1, v9) == 1)
      {
        uint64_t v27 = (uint64_t)v41;
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v41, v11, v26);
        sub_1C01EBA6C((uint64_t)v8, &qword_1EB863670, MEMORY[0x1E4F26C48]);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
        uint64_t v27 = (uint64_t)v41;
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v41, v8, v26);
      }
      sub_1C1518B3C();
      uint64_t v37 = sub_1C01E9BD4((uint64_t)v15, v27, v45, v49, v50);

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v26);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v51);
      return v37;
    }
  }
  type metadata accessor for WebEmbedDataVisualizationDataServiceError();
  sub_1BFCBD13C(&qword_1EA1980C8, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError);
  swift_allocError();
  uint64_t v29 = v28;
  uint64_t v30 = (void *)sub_1C1518B5C();
  if (v30)
  {
    uint64_t v31 = v30;
    id v32 = objc_msgSend(v30, sel_URL);

    if (v32)
    {
      sub_1C1515F1C();

      uint64_t v33 = v48;
      id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
      unint64_t v35 = v18;
      uint64_t v36 = 0;
    }
    else
    {
      uint64_t v33 = v48;
      id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56);
      unint64_t v35 = v18;
      uint64_t v36 = 1;
    }
    uint64_t v37 = v51;
    v34(v35, v36, 1, v51);
    sub_1C002F694((uint64_t)v18, (uint64_t)v21);
  }
  else
  {
    uint64_t v33 = v48;
    uint64_t v37 = v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v21, 1, 1, v51);
  }
  uint64_t v38 = v45;
  sub_1C01EB700(v47, (uint64_t)v45, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v21, 1, v37) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))(v29, &v38[*(int *)(v46 + 24)], v37);
    sub_1C01EB768((uint64_t)v38, type metadata accessor for WebEmbedDataVisualizationDataRequest);
    sub_1C01EBA6C((uint64_t)v21, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v29, v21, v37);
    sub_1C01EB768((uint64_t)v38, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  }
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  return v37;
}

uint64_t sub_1C01E9BD4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a2;
  uint64_t v26 = a4;
  uint64_t v9 = (int *)type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = sub_1C15188FC();
  uint64_t v12 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1517E7C();
  swift_beginAccess();
  sub_1C0353840(a1);
  swift_endAccess();
  swift_release();
  sub_1C1517E8C();
  id v15 = a3;
  sub_1C15188EC();
  sub_1C15188DC();
  if (v16) {
    uint64_t v17 = *(void *)(v5 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_defaultMaxAge);
  }
  else {
    uint64_t v17 = sub_1C1520F2C();
  }
  unint64_t v18 = (char *)v11 + v9[6];
  uint64_t v19 = sub_1C1515FDC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v18, a1, v19);
  uint64_t v20 = (char *)v11 + v9[7];
  uint64_t v21 = sub_1C151526C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, v25, v21);
  *uint64_t v11 = v26;
  v11[1] = a5;
  _OWORD v11[2] = v17;
  *(void *)((char *)v11 + v9[8]) = v15;
  sub_1C0064628(0, (unint64_t *)&unk_1EB863E28, type metadata accessor for WebEmbedDataVisualizationDataResult, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  id v22 = v15;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C151908C();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v27);
  return v23;
}

uint64_t sub_1C01E9E94(void *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v84 = a6;
  uint64_t v97 = a4;
  uint64_t v98 = a5;
  uint64_t v102 = a3;
  v107 = a2;
  uint64_t v7 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  v82[0] = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  v82[1] = v8;
  uint64_t v83 = (uint64_t)v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0064628(0, &qword_1EA1980D0, MEMORY[0x1E4FAAEC0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  v100 = (char *)v82 - v10;
  uint64_t v99 = sub_1C151526C();
  uint64_t v96 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  unint64_t v105 = (char *)v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C151631C();
  uint64_t v94 = *(void *)(v12 - 8);
  uint64_t v95 = v12;
  MEMORY[0x1F4188790](v12);
  v93 = (char *)v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)v82 - v15;
  uint64_t v106 = sub_1C1515FDC();
  uint64_t v17 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v19 = (char *)v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_1C15188FC();
  uint64_t v89 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v21 = (char *)v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C1518C9C();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v85 = (void **)((char *)v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  uint64_t v86 = (char *)v82 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (id *)((char *)v82 - v28);
  id v108 = a1;
  id v104 = a1;
  id v30 = a1;
  unint64_t v92 = sub_1C017F734();
  int v31 = swift_dynamicCast();
  id v32 = (_DWORD *)MEMORY[0x1E4FAAEB8];
  uint64_t v103 = v22;
  uint64_t v101 = v23;
  if (v31)
  {
    if ((*(unsigned int (**)(id *, uint64_t))(v23 + 88))(v29, v22) == *v32)
    {
      (*(void (**)(id *, uint64_t))(v23 + 96))(v29, v22);
      id v33 = *v29;
      sub_1C15188EC();
      sub_1C15188DC();
      int v35 = v34;
      if (v34)
      {

        uint64_t v36 = 0;
      }
      else
      {
        uint64_t v36 = sub_1C1520F2C();
      }
      uint64_t v91 = v36;
      (*(void (**)(char *, uint64_t))(v89 + 8))(v21, v90);
      LODWORD(v90) = v35;
      goto LABEL_9;
    }
    (*(void (**)(id *, uint64_t))(v23 + 8))(v29, v22);
  }
  uint64_t v91 = 0;
  LODWORD(v90) = 1;
LABEL_9:

  uint64_t v89 = *(void *)&v107[OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lock];
  sub_1C1517E7C();
  uint64_t v37 = v102 + *(int *)(v7 + 24);
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v87 = v19;
  uint64_t v88 = v17;
  v38(v19, v37, v106);
  uint64_t v40 = v94;
  uint64_t v39 = v95;
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v94 + 16);
  v41(v16, v97, v95);
  uint64_t v42 = v96;
  uint64_t v43 = v99;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v105, v98, v99);
  type metadata accessor for WebEmbedDataVisualizationDataServiceFailure();
  uint64_t v44 = swift_allocObject();
  id v45 = v104;
  *(void *)(v44 + 16) = v104;
  v41((char *)(v44 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_fetchDate), (uint64_t)v16, v39);
  id v46 = v45;
  uint64_t v47 = v93;
  sub_1C151630C();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v39);
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v44 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_createdDate, v47, v39);
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v44 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_request, v105, v43);
  uint64_t v48 = v44 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_maxAge;
  uint64_t v49 = v91;
  *(void *)uint64_t v48 = v91;
  uint64_t v50 = v90;
  *(unsigned char *)(v48 + 8) = v90 & 1;
  uint64_t v51 = &v107[OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_lastFailedResponses];
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v109 = *(void *)v51;
  *(void *)uint64_t v51 = 0x8000000000000000;
  uint64_t v53 = (uint64_t)v87;
  sub_1C1066720(v44, (uint64_t)v87, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v51 = v109;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v53, v106);
  swift_endAccess();
  sub_1C1517E8C();
  id v54 = v104;
  id v108 = v104;
  id v55 = v104;
  uint64_t v56 = (uint64_t)v100;
  uint64_t v57 = v103;
  char v58 = swift_dynamicCast();
  uint64_t v59 = v101;
  uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v101 + 56);
  if (v58)
  {
    v60(v56, 0, 1, v57);
    uint64_t v61 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v86, v56, v57);
    uint64_t v62 = *(void (**)(void **, char *, uint64_t))(v59 + 16);
    int64_t v63 = v85;
    v62(v85, v61, v57);
    if ((*(unsigned int (**)(void **, uint64_t))(v59 + 88))(v63, v57) == *MEMORY[0x1E4FAAEB8])
    {
      (*(void (**)(void **, uint64_t))(v59 + 96))(v63, v57);
      unint64_t v64 = *v63;
      if (objc_msgSend(v64, sel_statusCode) == (id)403 && (v84 & 1) != 0)
      {
        MEMORY[0x1F4188790](403);
        uint64_t v65 = v102;
        v82[-2] = v107;
        v82[-1] = v65;
        sub_1C151932C();
        uint64_t v66 = v65;
        uint64_t v67 = v83;
        sub_1C01EB700(v66, v83, type metadata accessor for WebEmbedDataVisualizationDataRequest);
        unint64_t v68 = (*(unsigned __int8 *)(v82[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v82[0] + 80);
        uint64_t v69 = swift_allocObject();
        sub_1C01EB7C8(v67, v69 + v68, type metadata accessor for WebEmbedDataVisualizationDataRequest);
        uint64_t v70 = v59;
        uint64_t v71 = (void *)sub_1C1518E7C();
        type metadata accessor for WebEmbedDataVisualizationDataResult(0);
        type metadata accessor for WebEmbedDataVisualizationDataService(0);
        uint64_t v50 = sub_1C151900C();

        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v70 + 8))(v61, v103);
      }
      else
      {
        type metadata accessor for WebEmbedDataVisualizationDataServiceError();
        sub_1BFCBD13C(&qword_1EA1980C8, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError);
        swift_allocError();
        char v78 = v50;
        uint64_t v50 = v79;
        id v80 = objc_msgSend(v64, sel_statusCode);
        *(void *)uint64_t v50 = v49;
        *(unsigned char *)(v50 + 8) = v78 & 1;
        *(void *)(v50 + 16) = v80;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();

        (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v103);
      }
    }
    else
    {
      v107 = *(char **)(v59 + 8);
      ((void (*)(void **, uint64_t))v107)(v63, v57);
      type metadata accessor for WebEmbedDataVisualizationDataServiceError();
      sub_1BFCBD13C(&qword_1EA1980C8, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError);
      swift_allocError();
      uint64_t v75 = v74;
      sub_1BFCBD13C(&qword_1EA1980D8, MEMORY[0x1E4FAAEC0]);
      uint64_t v50 = swift_allocError();
      uint64_t v76 = v86;
      v62(v77, v86, v57);
      *uint64_t v75 = v50;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      ((void (*)(char *, uint64_t))v107)(v76, v57);
    }
  }
  else
  {
    v60(v56, 1, 1, v57);
    sub_1C01EBA6C(v56, &qword_1EA1980D0, MEMORY[0x1E4FAAEC0]);
    type metadata accessor for WebEmbedDataVisualizationDataServiceError();
    sub_1BFCBD13C(&qword_1EA1980C8, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationDataServiceError);
    swift_allocError();
    *uint64_t v72 = v54;
    swift_storeEnumTagMultiPayload();
    id v73 = v54;
    swift_willThrow();
  }
  return v50;
}

uint64_t sub_1C01EAB1C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16)) {
    uint64_t v2 = &OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_genericTokenManager;
  }
  else {
    uint64_t v2 = &OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_sportsTokenManager;
  }
  sub_1BFC66384(a1 + *v2, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  uint64_t v3 = sub_1C1518A0C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t sub_1C01EABCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  sub_1C151943C();
  sub_1C151932C();
  sub_1C01EB700(a3, (uint64_t)&v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for WebEmbedDataVisualizationDataRequest);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  sub_1C01EB7C8((uint64_t)&v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v9 + v8, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  *(unsigned char *)(v9 + v8 + v7) = 0;
  uint64_t v10 = (void *)sub_1C1518E7C();
  type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  type metadata accessor for WebEmbedDataVisualizationDataService(0);
  uint64_t v11 = sub_1C151900C();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_1C01EAD8C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_networkProxy;
  uint64_t v2 = sub_1C151812C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_sportsTokenManager);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed36WebEmbedDataVisualizationDataService_genericTokenManager);

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C01EAE7C()
{
  return type metadata accessor for WebEmbedDataVisualizationDataService(0);
}

uint64_t sub_1C01EAE84(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for WebEmbedDataVisualizationDataRequest(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v12 = *v1;
  uint64_t v13 = a1;
  sub_1C151943C();
  sub_1C151932C();
  sub_1C01EB700(a1, (uint64_t)&v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for WebEmbedDataVisualizationDataRequest);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  sub_1C01EB7C8((uint64_t)&v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v7 + v6, type metadata accessor for WebEmbedDataVisualizationDataRequest);
  *(unsigned char *)(v7 + v6 + v5) = 1;
  unint64_t v8 = (void *)sub_1C1518E7C();
  type metadata accessor for WebEmbedDataVisualizationDataResult(0);
  uint64_t v9 = sub_1C151900C();
  swift_release();
  swift_release();

  return v9;
}

uint64_t type metadata accessor for WebEmbedDataVisualizationDataRequest(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB864830);
}

uint64_t sub_1C01EB058()
{
  return sub_1C01E7800(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C01EB078(uint64_t a1, uint64_t a2)
{
  return sub_1C01EB9CC(a1, a2);
}

uint64_t type metadata accessor for WebEmbedDataVisualizationDataResult(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB864790);
}

uint64_t sub_1C01EB0B0()
{
  return sub_1C01E9360(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C01EB0CC()
{
  uint64_t v1 = (int *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_1C151526C();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRelease();
  unint64_t v7 = v0 + v2 + v1[8];
  uint64_t v8 = sub_1C1515FDC();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  return swift_deallocObject();
}

uint64_t sub_1C01EB258(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1C151526C() - 8);
  return sub_1C01E9520(a1, a2, v2 + v6, v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));
}

uint64_t sub_1C01EB338()
{
  uint64_t v1 = (int *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v13 = sub_1C151631C();
  uint64_t v4 = *(void *)(v13 - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = sub_1C151526C();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  swift_bridgeObjectRelease();
  unint64_t v10 = v0 + v2 + v1[8];
  uint64_t v11 = sub_1C1515FDC();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v13);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  return swift_deallocObject();
}

uint64_t sub_1C01EB550(void *a1, char *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1C151631C() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = *(void *)(sub_1C151526C() - 8);
  unint64_t v12 = (v9 + v10 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return sub_1C01E9E94(a1, a2, v2 + v6, v2 + v9, v2 + v12, *(unsigned __int8 *)(v2 + v12 + *(void *)(v11 + 64)));
}

void sub_1C01EB6B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C01EB700(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C01EB768(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C01EB7C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C01EB830()
{
  return sub_1C01EAB1C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C01EB84C()
{
  uint64_t v1 = (int *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[8];
  uint64_t v4 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C01EB94C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
  return sub_1C01EABCC(a1, a2, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_1C01EB9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1C01E78B0(a1, a2, v2 + v6, *(unsigned __int8 *)(v2 + v6 + *(void *)(v5 + 64)));
}

uint64_t sub_1C01EBA6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0064628(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C01EBADC()
{
  if (!qword_1EB8614D0)
  {
    sub_1C15189BC();
    unint64_t v0 = sub_1C1518C5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8614D0);
    }
  }
}

uint64_t *sub_1C01EBB3C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[6];
    unint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C1515FDC();
    unint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_1C151526C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[8];
    uint64_t v18 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)v4 + v17) = (uint64_t)v18;
    id v19 = v18;
  }
  return v4;
}

void sub_1C01EBC94(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = sub_1C151526C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = *(void **)(a1 + a2[8]);
}

void *sub_1C01EBD60(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1C151526C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = *(void **)((char *)a2 + v16);
  *(void *)((char *)a1 + v16) = v17;
  id v18 = v17;
  return a1;
}

void *sub_1C01EBE68(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1C151526C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = *(void **)((char *)a2 + v14);
  uint64_t v16 = *(void **)((char *)a1 + v14);
  *(void *)((char *)a1 + v14) = v15;
  id v17 = v15;

  return a1;
}

uint64_t sub_1C01EBF74(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1C151526C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

void *sub_1C01EC05C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_1C151526C();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = *(void **)((char *)a1 + v15);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);

  return a1;
}

uint64_t sub_1C01EC154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01EC168);
}

uint64_t sub_1C01EC168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1C151526C();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1C01EC294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01EC2A8);
}

uint64_t sub_1C01EC2A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1C151526C();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1C01EC3D4()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1C151526C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_1C01EC4C0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(void *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C01EC5D0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01EC65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C01EC71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C01EC7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1C01EC884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C01EC934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01EC948);
}

uint64_t sub_1C01EC948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C1515FDC();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C01EC9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01ECA0C);
}

uint64_t sub_1C01ECA0C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C01ECAB4()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C01ECB60()
{
  return sub_1C01EB058();
}

BOOL static FormatSupplementaryNodeRubberbandTrait.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2) {
    return ((v3 ^ v2) & 1) == 0;
  }
  return result;
}

BOOL static FormatSupplementaryNodeRubberbandTraitTransform.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C01ECBC4@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return FormatSupplementaryNodeRubberbandTrait.init(from:)(a1, a2);
}

uint64_t sub_1C01ECBDC(void *a1)
{
  return FormatSupplementaryNodeRubberbandTrait.encode(to:)(a1);
}

BOOL sub_1C01ECBF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL result = v3 == 2 && v2 == 2;
  if (v2 != 2 && v3 != 2) {
    return ((v3 ^ v2) & 1) == 0;
  }
  return result;
}

uint64_t FormatSupplementaryNodeRubberbandTraitTransform.description.getter()
{
  return 0x6C61635320706F54;
}

uint64_t FormatSupplementaryNodeRubberbandTraitTransform.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatSupplementaryNodeRubberbandTraitTransform.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C01ECCD0(uint64_t a1)
{
  unint64_t result = sub_1C01ECCF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01ECCF8()
{
  unint64_t result = qword_1EA1980E0;
  if (!qword_1EA1980E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1980E0);
  }
  return result;
}

uint64_t sub_1C01ECD4C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C01ECF48(a1, a2, a3, (uint64_t (*)(void))sub_1BFCAA810, (uint64_t (*)(void))sub_1C01ECD8C, (uint64_t (*)(void))sub_1C01ECDE0);
}

unint64_t sub_1C01ECD8C()
{
  unint64_t result = qword_1EB86A888;
  if (!qword_1EB86A888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A888);
  }
  return result;
}

unint64_t sub_1C01ECDE0()
{
  unint64_t result = qword_1EA1980E8;
  if (!qword_1EA1980E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1980E8);
  }
  return result;
}

unint64_t sub_1C01ECE38()
{
  unint64_t result = qword_1EA1980F0;
  if (!qword_1EA1980F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1980F0);
  }
  return result;
}

unint64_t sub_1C01ECE8C(uint64_t a1)
{
  unint64_t result = sub_1C01ECEB4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01ECEB4()
{
  unint64_t result = qword_1EA1980F8;
  if (!qword_1EA1980F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1980F8);
  }
  return result;
}

uint64_t sub_1C01ECF08(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C01ECF48(a1, a2, a3, (uint64_t (*)(void))sub_1C01ECF9C, (uint64_t (*)(void))sub_1C01ECFF0, (uint64_t (*)(void))sub_1C01ECE38);
}

uint64_t sub_1C01ECF48(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C01ECF9C()
{
  unint64_t result = qword_1EB86AD18;
  if (!qword_1EB86AD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86AD18);
  }
  return result;
}

unint64_t sub_1C01ECFF0()
{
  unint64_t result = qword_1EA198100;
  if (!qword_1EA198100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198100);
  }
  return result;
}

uint64_t sub_1C01ED044@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatSupplementaryNodeRubberbandTraitTransform.init(from:)(a1, a2);
}

uint64_t sub_1C01ED05C(void *a1)
{
  return FormatSupplementaryNodeRubberbandTraitTransform.encode(to:)(a1);
}

uint64_t sub_1C01ED074()
{
  return 0x6C61635320706F54;
}

uint64_t getEnumTagSinglePayload for FormatSupplementaryNodeRubberbandTrait(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C01ED154);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = v7 - 2;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C01ED190(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 2) {
    return v1 - 1;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1C01ED1A4(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodeRubberbandTrait()
{
  return &type metadata for FormatSupplementaryNodeRubberbandTrait;
}

unsigned char *storeEnumTagSinglePayload for FormatSupplementaryNodeRubberbandTraitTransform(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01ED290);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSupplementaryNodeRubberbandTraitTransform()
{
  return &type metadata for FormatSupplementaryNodeRubberbandTraitTransform;
}

void *sub_1C01ED2C8(unsigned __int8 *a1)
{
  int v1 = *a1;
  if (v1 == 2)
  {
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v11);
    sub_1C0181BEC(0);
    unint64_t v13 = (*(unsigned __int8 *)(*(void *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v12 - 8) + 80);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
    unsigned int v7 = (void *)(v6 + v13);
    BOOL v8 = v7;
    uint64_t v9 = 0x45206F54206E6950;
    uint64_t v10 = 0xEB00000000656764;
    goto LABEL_5;
  }
  if (v1 == 3)
  {
    unsigned int v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
    sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v2);
    sub_1C0181BEC(0);
    unint64_t v5 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
    unsigned int v7 = (void *)(v6 + v5);
    BOOL v8 = v7;
    uint64_t v9 = 1701736270;
    uint64_t v10 = 0xE400000000000000;
LABEL_5:
    sub_1C0433600(1701869908, 0xE400000000000000, v9, v10, v8);
    uint64_t v14 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 0, 1, v14);
    sub_1C09BCFA4(0x6162726562627552, 0xEA0000000000646ELL, 0, 0, v6, v28);
    swift_setDeallocating();
    goto LABEL_10;
  }
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBBE00];
  sub_1BFF9E398(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF9E398(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, v15);
  sub_1C0181BEC(0);
  uint64_t v17 = *(void *)(*(void *)(v16 - 8) + 72);
  unint64_t v18 = (*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1527210;
  uint64_t v20 = (void *)(v19 + v18);
  sub_1C0433600(1701869908, 0xE400000000000000, 0xD000000000000011, 0x80000001C1606F10, v20);
  uint64_t v21 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v22 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v20, 0, 1, v21);
  if (v1) {
    uint64_t v23 = 0xEB00000000592065;
  }
  else {
    uint64_t v23 = 0xE900000000000065;
  }
  sub_1C0433600(0x726F66736E617254, 0xE90000000000006DLL, 0x6C61635320706F54, v23, (void *)((char *)v20 + v17));
  v22((void *)((char *)v20 + v17), 0, 1, v21);
  sub_1C09BCFA4(0x6162726562627552, 0xEA0000000000646ELL, 0, 0, v19, v28);
  swift_setDeallocating();
LABEL_10:
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(inited + 64) = &off_1F1BDEC90;
  uint64_t v24 = swift_allocObject();
  *(void *)(inited + 32) = v24;
  *(void *)(v24 + 48) = v29;
  long long v25 = v28[1];
  *(_OWORD *)(v24 + 16) = v28[0];
  *(_OWORD *)(v24 + 32) = v25;
  uint64_t v26 = sub_1C131B79C(inited);
  swift_setDeallocating();
  sub_1C01004A4(0);
  swift_arrayDestroy();
  return v26;
}

uint64_t sub_1C01ED884()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void *initializeBufferWithCopyOfBuffer for FormatSharedItemData(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_1C151631C();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    unsigned int v7 = (int *)type metadata accessor for SharedItem();
    *((unsigned char *)a1 + v7[5]) = *((unsigned char *)a2 + v7[5]);
    uint64_t v8 = v7[6];
    uint64_t v9 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v9;
    uint64_t v10 = v7[7];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_1C1515FDC();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    id v15 = v9;
    v14(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FormatSharedItemData(uint64_t a1)
{
  uint64_t v2 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  uint64_t v3 = type metadata accessor for SharedItem();

  uint64_t v4 = a1 + *(int *)(v3 + 28);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t initializeWithCopy for FormatSharedItemData(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for SharedItem();
  *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
  uint64_t v6 = v5[6];
  unsigned int v7 = *(void **)(a2 + v6);
  *(void *)(a1 + v6) = v7;
  uint64_t v8 = v5[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FormatSharedItemData(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C01EE3F4(a1, (uint64_t (*)(void))type metadata accessor for FormatSharedItemData);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = (int *)type metadata accessor for SharedItem();
    *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
    uint64_t v6 = v5[6];
    unsigned int v7 = *(void **)(a2 + v6);
    *(void *)(a1 + v6) = v7;
    uint64_t v8 = v5[7];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    id v13 = v7;
    v12(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for FormatSharedItemData()
{
  uint64_t result = qword_1EB8604D0;
  if (!qword_1EB8604D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeWithTake for FormatSharedItemData(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = (int *)type metadata accessor for SharedItem();
  *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
  *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
  uint64_t v6 = v5[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for FormatSharedItemData(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C01EE3F4(a1, (uint64_t (*)(void))type metadata accessor for FormatSharedItemData);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    uint64_t v5 = (int *)type metadata accessor for SharedItem();
    *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
    *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
    uint64_t v6 = v5[7];
    uint64_t v7 = a1 + v6;
    uint64_t v8 = a2 + v6;
    uint64_t v9 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C01EDFD4()
{
  uint64_t result = type metadata accessor for SharedItem();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C01EE05C()
{
  uint64_t v1 = type metadata accessor for SharedItem();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FormatSharedItemData();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB87C520 != -1) {
    swift_once();
  }
  sub_1C01EE278(v0, (uint64_t)v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1C01EE2DC((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SharedItem);
  if (EnumCaseMultiPayload == 1) {
    SharedItemManager.hideContextMenuItem(for:)((uint64_t)v10);
  }
  else {
    SharedItemManager.replyContextMenuItem(for:)((uint64_t)v3, (uint64_t)v10);
  }
  sub_1C01EE3F4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SharedItem);
  sub_1C01EE2DC((uint64_t)v10, (uint64_t)v11, (uint64_t (*)(void))sub_1C01EE344);
  if (v12)
  {
    sub_1BFC66384((uint64_t)v11, (uint64_t)v10);
    __swift_project_boxed_opaque_existential_1(v10, v10[3]);
    uint64_t v8 = sub_1C151B32C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    uint64_t v8 = 0;
  }
  sub_1C01EE3F4((uint64_t)v11, (uint64_t (*)(void))sub_1C01EE344);
  return v8;
}

uint64_t sub_1C01EE278(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatSharedItemData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C01EE2DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C01EE344()
{
  if (!qword_1EB8945F0)
  {
    sub_1C01EE39C();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8945F0);
    }
  }
}

unint64_t sub_1C01EE39C()
{
  unint64_t result = qword_1EB8945E0;
  if (!qword_1EB8945E0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB8945E0);
  }
  return result;
}

uint64_t sub_1C01EE3F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL _s8NewsFeed27FormatImageAdjustmentFilterO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    switch(*(void *)&v2)
    {
      case 1:
        if (*(void *)&v3 != 1) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2:
        if (*(void *)&v3 != 2) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 3:
        if (*(void *)&v3 != 3) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 4:
        if (*(void *)&v3 != 4) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 5:
        if (*(void *)&v3 != 5) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 6:
        if (*(void *)&v3 != 6) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 7:
        if (*(void *)&v3 != 7) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 8:
        if (*(void *)&v3 != 8) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 9:
        if (*(void *)&v3 != 9) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 0xALL:
        if (*(void *)&v3 != 10) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 0xBLL:
        if (*(void *)&v3 != 11) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 0xCLL:
        if (*(void *)&v3 != 12) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 0xDLL:
        if (*(void *)&v3 != 13) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 0xELL:
        if (*(void *)&v3 != 14) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 0xFLL:
        if (*(void *)&v3 <= 0xEuLL) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      default:
        if (v3 != 0.0) {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (*(unsigned char *)(a2 + 8) & 1) == 0 && v2 == v3;
  }
  return result;
}

unint64_t sub_1C01EE638(uint64_t a1)
{
  unint64_t result = sub_1C01EE660();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01EE660()
{
  unint64_t result = qword_1EA198108;
  if (!qword_1EA198108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198108);
  }
  return result;
}

unint64_t sub_1C01EE6B4(void *a1)
{
  a1[1] = sub_1BFD1F834();
  a1[2] = sub_1BFCF2D20();
  unint64_t result = sub_1C01EE6EC();
  a1[3] = result;
  return result;
}

unint64_t sub_1C01EE6EC()
{
  unint64_t result = qword_1EA198110;
  if (!qword_1EA198110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198110);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatImageAdjustmentFilter()
{
  return &type metadata for FormatImageAdjustmentFilter;
}

BOOL static FormatSlotItemOrdering.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatSlotItemOrdering.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatSlotItemOrdering.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C01EE7E0()
{
  unint64_t result = qword_1EA198118;
  if (!qword_1EA198118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198118);
  }
  return result;
}

unint64_t sub_1C01EE834(uint64_t a1)
{
  unint64_t result = sub_1C01EE85C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01EE85C()
{
  unint64_t result = qword_1EA198120;
  if (!qword_1EA198120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198120);
  }
  return result;
}

unint64_t sub_1C01EE8B0(void *a1)
{
  a1[1] = sub_1C01EE8E8();
  a1[2] = sub_1C01EE93C();
  unint64_t result = sub_1C01EE7E0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C01EE8E8()
{
  unint64_t result = qword_1EB86CB20;
  if (!qword_1EB86CB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CB20);
  }
  return result;
}

unint64_t sub_1C01EE93C()
{
  unint64_t result = qword_1EB86CB18;
  if (!qword_1EB86CB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CB18);
  }
  return result;
}

uint64_t sub_1C01EE990@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return FormatSlotItemOrdering.init(from:)(a1, a2);
}

uint64_t sub_1C01EE9A8(void *a1)
{
  return FormatSlotItemOrdering.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatSlotItemOrdering(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C01EEA8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotItemOrdering()
{
  return &type metadata for FormatSlotItemOrdering;
}

uint64_t static FormatLayeredMediaNodeBinding.== infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  if (*a1)
  {
    if ((*a2 & 1) == 0) {
      return 0;
    }
  }
  else if (*a2)
  {
    return 0;
  }
  return 1;
}

unint64_t sub_1C01EEAE8(uint64_t a1)
{
  unint64_t result = sub_1C01EEB10();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01EEB10()
{
  unint64_t result = qword_1EA198128;
  if (!qword_1EA198128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198128);
  }
  return result;
}

unint64_t sub_1C01EEB64(void *a1)
{
  a1[1] = sub_1BFC88BF8();
  a1[2] = sub_1C01EEB9C();
  unint64_t result = sub_1C01EEBF0();
  a1[3] = result;
  return result;
}

unint64_t sub_1C01EEB9C()
{
  unint64_t result = qword_1EB85C150;
  if (!qword_1EB85C150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C150);
  }
  return result;
}

unint64_t sub_1C01EEBF0()
{
  unint64_t result = qword_1EA198130;
  if (!qword_1EA198130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198130);
  }
  return result;
}

uint64_t sub_1C01EEC44(void *a1)
{
  return FormatLayeredMediaNodeBinding.encode(to:)(a1);
}

uint64_t sub_1C01EEC5C(unsigned char *a1, unsigned char *a2)
{
  if (*a1)
  {
    if (*a2) {
      return 1;
    }
  }
  else if ((*a2 & 1) == 0)
  {
    return 1;
  }
  return 0;
}

uint64_t getEnumTagSinglePayload for FormatLayeredMediaNodeBinding(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  if (v6 <= 1) {
    int v7 = -1;
  }
  else {
    int v7 = v6 ^ 0xFF;
  }
  return (v7 + 1);
}

ValueMetadata *type metadata accessor for FormatLayeredMediaNodeBinding()
{
  return &type metadata for FormatLayeredMediaNodeBinding;
}

void *sub_1C01EED4C(uint64_t a1)
{
  uint64_t v4 = *(void *)v1;
  unint64_t v55 = *(void *)(v1 + 16);
  uint64_t v38 = *(void *)(v1 + 40);
  uint64_t v39 = *(void *)(v1 + 24);
  uint64_t v36 = *(void *)(v1 + 56);
  uint64_t v37 = *(void *)(v1 + 32);
  uint64_t v34 = *(void *)(v1 + 72);
  uint64_t v35 = *(void *)(v1 + 48);
  uint64_t v32 = *(void *)(v1 + 88);
  uint64_t v33 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 104);
  uint64_t v30 = *(void *)(v1 + 96);
  uint64_t v31 = *(void *)(v1 + 80);
  uint64_t v6 = *(void *)(v1 + 112);
  uint64_t v7 = *(void *)(v1 + 120);
  char v8 = *(unsigned char *)(v1 + 128);
  unsigned __int8 v9 = *(unsigned char *)(v1 + 8);
  uint64_t v40 = v4;
  LOBYTE(v41) = v9;
  sub_1C01EF338(v4, v9);
  uint64_t v10 = &v40;
  sub_1C0BF9BDC(a1);
  uint64_t v12 = v11;
  sub_1C01EF35C(v4, v9);
  if (!v2)
  {
    uint64_t v13 = v36;
    uint64_t v14 = v34;
    uint64_t v15 = v32;
    uint64_t v17 = v38;
    uint64_t v16 = v39;
    char v18 = v55;
    if ((v55 & 0xFF00) == 0x800)
    {
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v15 = 0;
      uint64_t v5 = 0;
      uint64_t v7 = 0;
      char v19 = 1;
      LOBYTE(v20) = 7;
      char v18 = 9;
      char v21 = 1;
      char v22 = 1;
      char v23 = 1;
      char v24 = 1;
      char v25 = 1;
      char v26 = 1;
    }
    else
    {
      unint64_t v20 = v55 >> 8;
      char v19 = v37 & 1;
      char v21 = v35 & 1;
      char v22 = v33 & 1;
      char v23 = v31 & 1;
      char v24 = v30 & 1;
      char v25 = v6 & 1;
      char v26 = v8 & 1;
    }
    LOBYTE(v40) = v18;
    BYTE1(v40) = v20;
    uint64_t v41 = v16;
    char v42 = v19;
    uint64_t v43 = v17;
    char v44 = v21;
    uint64_t v45 = v13;
    char v46 = v22;
    uint64_t v47 = v14;
    char v48 = v23;
    uint64_t v49 = v15;
    char v50 = v24;
    uint64_t v51 = v5;
    char v52 = v25;
    uint64_t v53 = v7;
    char v54 = v26;
    id v27 = sub_1C0466A9C();
    id v28 = objc_msgSend(v27, sel_stringFromNumber_, v12);

    if (v28)
    {
      uint64_t v10 = (void *)sub_1C151E62C();
    }
    else
    {

      return 0;
    }
  }
  return v10;
}

uint64_t sub_1C01EEF5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTextNodeNumber.init(from:)(a1, a2);
}

uint64_t sub_1C01EEF74(void *a1)
{
  return FormatTextNodeNumber.encode(to:)(a1);
}

BOOL _s8NewsFeed20FormatTextNodeNumberV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  char v2 = *((unsigned char *)a1 + 8);
  uint64_t v34 = a1[3];
  uint64_t v35 = a1[2];
  uint64_t v32 = a1[5];
  uint64_t v33 = a1[4];
  uint64_t v30 = a1[7];
  uint64_t v31 = a1[6];
  uint64_t v28 = a1[9];
  uint64_t v29 = a1[8];
  uint64_t v26 = a1[11];
  uint64_t v27 = a1[10];
  uint64_t v24 = a1[13];
  uint64_t v25 = a1[12];
  uint64_t v22 = a1[15];
  uint64_t v23 = a1[14];
  char v21 = *((unsigned char *)a1 + 128);
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v19 = a2[3];
  uint64_t v20 = a2[2];
  uint64_t v16 = a2[5];
  uint64_t v5 = a2[7];
  uint64_t v17 = a2[6];
  uint64_t v18 = a2[4];
  uint64_t v6 = a2[8];
  uint64_t v7 = a2[9];
  uint64_t v9 = a2[10];
  uint64_t v8 = a2[11];
  uint64_t v51 = *a1;
  LOBYTE(v52) = v2;
  uint64_t v11 = a2[12];
  uint64_t v10 = a2[13];
  uint64_t v36 = v3;
  LOBYTE(v37) = v4;
  uint64_t v13 = a2[14];
  uint64_t v12 = a2[15];
  char v14 = *((unsigned char *)a2 + 128);
  if ((_s8NewsFeed12FormatNumberO2eeoiySbAC_ACtFZ_0((uint64_t)&v51, (uint64_t)&v36) & 1) == 0) {
    return 0;
  }
  if ((v35 & 0xFF00) != 0x800)
  {
    uint64_t v51 = v35;
    uint64_t v52 = v34;
    uint64_t v53 = v33;
    uint64_t v54 = v32;
    uint64_t v55 = v31;
    uint64_t v56 = v30;
    uint64_t v57 = v29;
    uint64_t v58 = v28;
    uint64_t v59 = v27;
    uint64_t v60 = v26;
    uint64_t v61 = v25;
    uint64_t v62 = v24;
    uint64_t v63 = v23;
    uint64_t v64 = v22;
    char v65 = v21;
    if ((v20 & 0xFF00) == 0x800) {
      return 0;
    }
    LOWORD(v36) = v20;
    uint64_t v37 = v19;
    char v38 = v18 & 1;
    uint64_t v39 = v16;
    char v40 = v17 & 1;
    uint64_t v41 = v5;
    char v42 = v6 & 1;
    uint64_t v43 = v7;
    char v44 = v9 & 1;
    uint64_t v45 = v8;
    char v46 = v11 & 1;
    uint64_t v47 = v10;
    char v48 = v13 & 1;
    uint64_t v49 = v12;
    char v50 = v14 & 1;
    return _s8NewsFeed012FormatNumberC0V2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v51, (unsigned __int8 *)&v36);
  }
  return (v20 & 0xFF00) == 0x800;
}

unint64_t sub_1C01EF188(uint64_t a1)
{
  unint64_t result = sub_1C01EF1B0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01EF1B0()
{
  unint64_t result = qword_1EA198138;
  if (!qword_1EA198138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198138);
  }
  return result;
}

unint64_t sub_1C01EF204(void *a1)
{
  a1[1] = sub_1C01EF23C();
  a1[2] = sub_1C01EF290();
  unint64_t result = sub_1C01EF2E4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C01EF23C()
{
  unint64_t result = qword_1EB85D558;
  if (!qword_1EB85D558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D558);
  }
  return result;
}

unint64_t sub_1C01EF290()
{
  unint64_t result = qword_1EB85BBA8;
  if (!qword_1EB85BBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BBA8);
  }
  return result;
}

unint64_t sub_1C01EF2E4()
{
  unint64_t result = qword_1EA198140;
  if (!qword_1EA198140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198140);
  }
  return result;
}

uint64_t sub_1C01EF338(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for FormatNumber(uint64_t a1)
{
  return sub_1C01EF35C(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1C01EF35C(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FormatTextNodeNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a2 + 8);
  sub_1C01EF338(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  return a1;
}

uint64_t assignWithCopy for FormatTextNodeNumber(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a2 + 8);
  sub_1C01EF338(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  *(void *)a1 = v4;
  unsigned __int8 v7 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v5;
  sub_1C01EF35C(v6, v7);
  long long v8 = *(_OWORD *)(a2 + 16);
  long long v9 = *(_OWORD *)(a2 + 32);
  long long v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = v9;
  long long v11 = *(_OWORD *)(a2 + 80);
  long long v12 = *(_OWORD *)(a2 + 96);
  long long v13 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v12;
  *(_OWORD *)(a1 + 112) = v13;
  *(_OWORD *)(a1 + 80) = v11;
  return a1;
}

uint64_t assignWithTake for FormatTextNodeNumber(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C01EF35C(v5, v6);
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  long long v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v8;
  long long v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatTextNodeNumber(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 129)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatTextNodeNumber(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 129) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextNodeNumber()
{
  return &type metadata for FormatTextNodeNumber;
}

void static FormatCodingSizeToFitStrategy.defaultValue.getter(void *a1@<X8>)
{
  *a1 = 0xB000000000000008;
}

BOOL static FormatCodingSizeToFitStrategy.shouldEncode(wrappedValue:)(void *a1)
{
  return *a1 != 0xB000000000000008 || ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) != 22;
}

unint64_t sub_1C01EF5C8(uint64_t a1)
{
  unint64_t result = sub_1C01EF5F0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01EF5F0()
{
  unint64_t result = qword_1EA198148;
  if (!qword_1EA198148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198148);
  }
  return result;
}

void sub_1C01EF64C(void *a1@<X8>)
{
  *a1 = 0xB000000000000008;
}

BOOL sub_1C01EF65C(void *a1)
{
  return *a1 != 0xB000000000000008 || ((*a1 >> 59) & 0x1E | (*a1 >> 2) & 1) != 22;
}

ValueMetadata *type metadata accessor for FormatCodingSizeToFitStrategy()
{
  return &type metadata for FormatCodingSizeToFitStrategy;
}

uint64_t sub_1C01EF694(void *a1, uint64_t a2)
{
  v118 = a1;
  *(void *)&long long v119 = a2;
  sub_1C01F08BC(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v115 = (uint64_t)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v117 = (uint64_t)&v101 - v5;
  uint64_t v6 = type metadata accessor for FeedPuzzleStatistic();
  uint64_t v112 = *(void *)(v6 - 8);
  uint64_t v113 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v102 = (uint64_t)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v116 = (uint64_t)&v101 - v9;
  sub_1C01F08F0(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v110 = (uint64_t)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v114 = (uint64_t)&v101 - v13;
  uint64_t v14 = type metadata accessor for FeedWebEmbed();
  uint64_t v108 = *(void *)(v14 - 8);
  uint64_t v109 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v101 = (uint64_t)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v111 = (uint64_t)&v101 - v17;
  sub_1BFFFCF8C(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v105 = (uint64_t)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v107 = (uint64_t)&v101 - v21;
  uint64_t v22 = type metadata accessor for FeedHeadline(0);
  uint64_t v104 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (uint64_t *)((char *)&v101 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  uint64_t v106 = (uint64_t)&v101 - v26;
  sub_1C01F0924(0);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v29 = (char *)&v101 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v101 - v31;
  uint64_t v33 = type metadata accessor for FeedWeather(0);
  uint64_t v103 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v101 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  char v38 = (char *)&v101 - v37;
  uint64_t v39 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v101 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01F0958(v119, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      long long v45 = *((_OWORD *)v41 + 5);
      long long v46 = *((_OWORD *)v41 + 7);
      long long v135 = *((_OWORD *)v41 + 6);
      v136[0] = v46;
      *(_OWORD *)((char *)v136 + 9) = *(_OWORD *)(v41 + 121);
      long long v47 = *((_OWORD *)v41 + 1);
      long long v48 = *((_OWORD *)v41 + 3);
      long long v131 = *((_OWORD *)v41 + 2);
      long long v132 = v48;
      long long v49 = *((_OWORD *)v41 + 3);
      long long v50 = *((_OWORD *)v41 + 5);
      long long v133 = *((_OWORD *)v41 + 4);
      long long v134 = v50;
      long long v51 = *((_OWORD *)v41 + 1);
      long long v129 = *(_OWORD *)v41;
      long long v130 = v51;
      long long v52 = *((_OWORD *)v41 + 7);
      long long v126 = v135;
      v127[0] = v52;
      *(_OWORD *)((char *)v127 + 9) = *(_OWORD *)(v41 + 121);
      long long v122 = v131;
      long long v123 = v49;
      long long v124 = v133;
      long long v125 = v45;
      long long v120 = v129;
      long long v121 = v47;
      sub_1C0187FB0((uint64_t)&v129);
      uint64_t v44 = sub_1C0FE5F00((uint64_t)v118, &v120);
      sub_1C01880A4((uint64_t)&v129);
      sub_1C01880A4((uint64_t)&v129);
      return v44;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 3u:
      sub_1C01F0B9C((uint64_t)v41, (uint64_t)v38, type metadata accessor for FeedWeather);
      sub_1C01F0958((uint64_t)v38, (uint64_t)v32, type metadata accessor for FeedWeather);
      uint64_t v53 = v103;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v103 + 56))(v32, 0, 1, v33);
      sub_1C01F0958((uint64_t)v32, (uint64_t)v29, (uint64_t (*)(void))sub_1C01F0924);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v29, 1, v33) == 1)
      {
        sub_1C01F085C((uint64_t)v29, (uint64_t (*)(void))sub_1C01F0924);
        uint64_t v44 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
      }
      else
      {
        sub_1C01F0B9C((uint64_t)v29, (uint64_t)v35, type metadata accessor for FeedWeather);
        uint64_t v44 = (uint64_t)sub_1C03A0BB4((uint64_t)v118, (uint64_t)v35);
        sub_1C01F085C((uint64_t)v35, type metadata accessor for FeedWeather);
      }
      sub_1C01F085C((uint64_t)v32, (uint64_t (*)(void))sub_1C01F0924);
      sub_1C01F085C((uint64_t)v38, type metadata accessor for FeedWeather);
      return v44;
    case 4u:
      long long v54 = *((_OWORD *)v41 + 13);
      long long v55 = *((_OWORD *)v41 + 11);
      long long v140 = *((_OWORD *)v41 + 12);
      long long v141 = v54;
      long long v56 = *((_OWORD *)v41 + 13);
      long long v142 = *((_OWORD *)v41 + 14);
      long long v57 = *((_OWORD *)v41 + 9);
      long long v58 = *((_OWORD *)v41 + 7);
      v136[1] = *((_OWORD *)v41 + 8);
      long long v137 = v57;
      long long v59 = *((_OWORD *)v41 + 9);
      long long v60 = *((_OWORD *)v41 + 11);
      long long v138 = *((_OWORD *)v41 + 10);
      long long v139 = v60;
      long long v61 = *((_OWORD *)v41 + 5);
      long long v62 = *((_OWORD *)v41 + 3);
      long long v133 = *((_OWORD *)v41 + 4);
      long long v134 = v61;
      long long v63 = *((_OWORD *)v41 + 5);
      long long v64 = *((_OWORD *)v41 + 7);
      long long v135 = *((_OWORD *)v41 + 6);
      v136[0] = v64;
      long long v65 = *((_OWORD *)v41 + 1);
      long long v129 = *(_OWORD *)v41;
      long long v130 = v65;
      long long v66 = *((_OWORD *)v41 + 3);
      long long v68 = *(_OWORD *)v41;
      long long v67 = *((_OWORD *)v41 + 1);
      long long v131 = *((_OWORD *)v41 + 2);
      long long v132 = v66;
      v127[5] = v140;
      v127[6] = v56;
      v127[7] = *((_OWORD *)v41 + 14);
      v127[1] = v136[1];
      v127[2] = v59;
      v127[3] = v138;
      v127[4] = v55;
      long long v124 = v133;
      long long v125 = v63;
      long long v126 = v135;
      v127[0] = v58;
      long long v120 = v68;
      long long v121 = v67;
      uint64_t v143 = *((void *)v41 + 30);
      uint64_t v128 = *((void *)v41 + 30);
      long long v122 = v131;
      long long v123 = v62;
      uint64_t v44 = (uint64_t)sub_1C0CC1278((uint64_t)&v120);
      sub_1C01F0AC8((uint64_t)&v129);
      return v44;
    case 5u:
      uint64_t v69 = v106;
      sub_1C01F0B9C((uint64_t)v41, v106, type metadata accessor for FeedHeadline);
      uint64_t v70 = v107;
      sub_1C01F0958(v69, v107, type metadata accessor for FeedHeadline);
      uint64_t v71 = v104;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v104 + 56))(v70, 0, 1, v22);
      uint64_t v72 = v105;
      sub_1C01F0958(v70, v105, (uint64_t (*)(void))sub_1BFFFCF8C);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v72, 1, v22) == 1)
      {
        sub_1C01F085C(v72, (uint64_t (*)(void))sub_1BFFFCF8C);
        uint64_t v44 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
      }
      else
      {
        sub_1C01F0B9C(v72, (uint64_t)v24, type metadata accessor for FeedHeadline);
        uint64_t v44 = sub_1C00FF850(v118, v24);
        sub_1C01F085C((uint64_t)v24, type metadata accessor for FeedHeadline);
      }
      sub_1C01F085C(v70, (uint64_t (*)(void))sub_1BFFFCF8C);
      uint64_t v97 = type metadata accessor for FeedHeadline;
      goto LABEL_29;
    case 6u:
      uint64_t v69 = v111;
      sub_1C01F0B9C((uint64_t)v41, v111, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v73 = v114;
      sub_1C01F0958(v69, v114, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v75 = v108;
      uint64_t v74 = v109;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v108 + 56))(v73, 0, 1, v109);
      uint64_t v76 = v110;
      sub_1C01F0958(v73, v110, (uint64_t (*)(void))sub_1C01F08F0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v76, 1, v74) == 1)
      {
        sub_1C01F085C(v76, (uint64_t (*)(void))sub_1C01F08F0);
        uint64_t v44 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
      }
      else
      {
        uint64_t v98 = v101;
        sub_1C01F0B9C(v76, v101, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        uint64_t v44 = (uint64_t)sub_1C1034278(v118, v98);
        sub_1C01F085C(v98, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      }
      sub_1C01F085C(v73, (uint64_t (*)(void))sub_1C01F08F0);
      uint64_t v97 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
      goto LABEL_29;
    case 7u:
      id v77 = *(id *)v41;
      id v78 = FCFeedDescriptor.feedTag.getter();
      uint64_t v44 = (uint64_t)sub_1C0CD6684((uint64_t)v118, v78);

      swift_unknownObjectRelease();
      return v44;
    case 8u:
      uint64_t v79 = *((void *)v41 + 1);
      uint64_t v81 = *((void *)v41 + 2);
      uint64_t v80 = *((void *)v41 + 3);
      char v82 = v41[32];
      *(void *)&long long v129 = *(void *)v41;
      *((void *)&v129 + 1) = v79;
      *(void *)&long long v130 = v81;
      *((void *)&v130 + 1) = v80;
      LOBYTE(v131) = v82;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v44 = (uint64_t)sub_1C0DBCFA0((uint64_t)v118, &v129);
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return v44;
    case 9u:
      long long v83 = *((_OWORD *)v41 + 11);
      long long v138 = *((_OWORD *)v41 + 10);
      long long v139 = v83;
      long long v140 = *((_OWORD *)v41 + 12);
      long long v84 = *((_OWORD *)v41 + 7);
      long long v135 = *((_OWORD *)v41 + 6);
      v136[0] = v84;
      long long v85 = *((_OWORD *)v41 + 9);
      v136[1] = *((_OWORD *)v41 + 8);
      long long v137 = v85;
      long long v86 = *((_OWORD *)v41 + 3);
      long long v131 = *((_OWORD *)v41 + 2);
      long long v132 = v86;
      long long v87 = *((_OWORD *)v41 + 5);
      long long v133 = *((_OWORD *)v41 + 4);
      long long v134 = v87;
      long long v88 = *((_OWORD *)v41 + 1);
      long long v129 = *(_OWORD *)v41;
      long long v130 = v88;
      sub_1C01F09C0((uint64_t)&v129, (uint64_t)&v120);
      sub_1C01F0958((uint64_t)&v120, (uint64_t)v144, (uint64_t (*)(void))sub_1C01F0A1C);
      if ((void)v145)
      {
        v155[10] = v152;
        v155[11] = v153;
        v155[12] = v154;
        v155[6] = v148;
        v155[7] = v149;
        v155[8] = v150;
        v155[9] = v151;
        v155[2] = v144[2];
        v155[3] = v145;
        v155[4] = v146;
        v155[5] = v147;
        v155[0] = v144[0];
        v155[1] = v144[1];
        uint64_t v44 = (uint64_t)sub_1C0C2DA88((uint64_t)v155);
        sub_1C01F0A74((uint64_t)v155);
      }
      else
      {
        sub_1C01F085C((uint64_t)v144, (uint64_t (*)(void))sub_1C01F0A1C);
        uint64_t v44 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
      }
      sub_1C01F085C((uint64_t)&v120, (uint64_t (*)(void))sub_1C01F0A1C);
      sub_1C01F0A74((uint64_t)&v129);
      return v44;
    case 0xAu:
      char v89 = v41[16];
      uint64_t v90 = *((void *)v41 + 3);
      uint64_t v91 = *((void *)v41 + 6);
      uint64_t v92 = *((void *)v41 + 7);
      long long v129 = *(_OWORD *)v41;
      LOBYTE(v130) = v89;
      *((void *)&v130 + 1) = v90;
      long long v119 = *((_OWORD *)v41 + 2);
      long long v131 = v119;
      *(void *)&long long v132 = v91;
      *((void *)&v132 + 1) = v92;
      uint64_t v44 = (uint64_t)sub_1C0BFC31C((uint64_t *)&v129);
      sub_1BFEEFC20(v90, v119);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v44;
    case 0xBu:
      uint64_t v69 = v116;
      sub_1C01F0B9C((uint64_t)v41, v116, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v93 = v117;
      sub_1C01F0958(v69, v117, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v95 = v112;
      uint64_t v94 = v113;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v112 + 56))(v93, 0, 1, v113);
      uint64_t v96 = v115;
      sub_1C01F0958(v93, v115, (uint64_t (*)(void))sub_1C01F08BC);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v96, 1, v94) == 1)
      {
        sub_1C01F085C(v96, (uint64_t (*)(void))sub_1C01F08BC);
        uint64_t v44 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
      }
      else
      {
        uint64_t v99 = v102;
        sub_1C01F0B9C(v96, v102, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
        uint64_t v44 = (uint64_t)sub_1C0CDDC44(v99);
        sub_1C01F085C(v99, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      }
      sub_1C01F085C(v93, (uint64_t (*)(void))sub_1C01F08BC);
      uint64_t v97 = (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic;
LABEL_29:
      sub_1C01F085C(v69, v97);
      break;
    case 0xCu:
      sub_1C01F085C((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
LABEL_20:
      uint64_t v44 = (uint64_t)sub_1C131B79C(MEMORY[0x1E4FBC860]);
      break;
    default:
      id v42 = *(id *)v41;
      id v43 = *((id *)v41 + 1);
      swift_unknownObjectRetain();
      uint64_t v44 = (uint64_t)sub_1C0CD6684((uint64_t)v118, v42);

      swift_unknownObjectRelease_n();
      break;
  }
  return v44;
}

void *sub_1C01F0528(void *a1, uint64_t a2)
{
  sub_1C01F0778(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatInspectionFeedGroupItem();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C01F0958(a2, (uint64_t)v6, (uint64_t (*)(void))sub_1C01F0778);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C01F085C((uint64_t)v6, (uint64_t (*)(void))sub_1C01F0778);
    return sub_1C131B79C(MEMORY[0x1E4FBC860]);
  }
  else
  {
    sub_1C01F0B9C((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatInspectionFeedGroupItem);
    sub_1C01F07F8(0, (unint64_t *)&qword_1EA1974D0, (uint64_t (*)(uint64_t))sub_1C01004A4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v13 = sub_1C01EF694(a1, (uint64_t)v10);
    *(void *)(inited + 56) = &type metadata for FormatInspection;
    *(void *)(inited + 64) = &off_1F1C29D30;
    *(void *)(inited + 32) = v13;
    uint64_t v11 = sub_1C131B79C(inited);
    swift_setDeallocating();
    sub_1C01004A4(0);
    swift_arrayDestroy();
    sub_1C01F085C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatInspectionFeedGroupItem);
  }
  return v11;
}

void sub_1C01F0778(uint64_t a1)
{
}

uint64_t type metadata accessor for FormatInspectionFeedGroupItem()
{
  uint64_t result = qword_1EA198150;
  if (!qword_1EA198150) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C01F07F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C01F085C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C01F08BC(uint64_t a1)
{
}

void sub_1C01F08F0(uint64_t a1)
{
}

void sub_1C01F0924(uint64_t a1)
{
}

uint64_t sub_1C01F0958(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C01F09C0(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1C01F0A1C()
{
  if (!qword_1EB861728)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB861728);
    }
  }
}

uint64_t sub_1C01F0A74(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C01F0AC8(uint64_t a1)
{
  unint64_t v3 = *(void *)(a1 + 240);
  uint64_t v4 = *(void *)(a1 + 232);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEEFC20(v4, v3);
  return a1;
}

uint64_t sub_1C01F0B9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

char *sub_1C01F0C04(char *a1, char **a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for FeedGroupItem() - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        unint64_t v8 = *a2;
        uint64_t v9 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v9;
        *((void *)a1 + 2) = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        *((void *)a1 + 4) = a2[4];
        a1[40] = *((unsigned char *)a2 + 40);
        uint64_t v10 = a2[7];
        *((void *)a1 + 6) = a2[6];
        *((void *)a1 + 7) = v10;
        a1[64] = *((unsigned char *)a2 + 64);
        uint64_t v11 = a2[10];
        uint64_t v12 = v8;
        swift_bridgeObjectRetain();
        uint64_t v13 = v10;
        if (v11 == (char *)1)
        {
          long long v14 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 88) = v14;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
        }
        else
        {
          *((void *)a1 + 9) = a2[9];
          *((void *)a1 + 10) = v11;
          uint64_t v79 = a2[12];
          *((void *)a1 + 11) = a2[11];
          *((void *)a1 + 12) = v79;
          uint64_t v81 = a2[13];
          uint64_t v80 = a2[14];
          *((void *)a1 + 13) = v81;
          *((void *)a1 + 14) = v80;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v82 = v81;
        }
        long long v83 = a2 + 15;
        unint64_t v84 = (unint64_t)a2[16];
        if (v84 >= 0x11)
        {
          *((void *)a1 + 15) = *v83;
          *((void *)a1 + 16) = v84;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v83;
        }
        a1[136] = *((unsigned char *)a2 + 136);
        goto LABEL_138;
      case 2u:
        uint64_t v15 = *a2;
        uint64_t v16 = a2[1];
        *(void *)a1 = v15;
        *((void *)a1 + 1) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v17 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v17;
        a1[32] = *((unsigned char *)a2 + 32);
        uint64_t v18 = (int *)type metadata accessor for FeedWeather(0);
        uint64_t v19 = v18[7];
        uint64_t v20 = &a1[v19];
        uint64_t v21 = (uint64_t)a2 + v19;
        uint64_t v22 = sub_1C151E2BC();
        uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
        a1[v18[8]] = *((unsigned char *)a2 + v18[8]);
        uint64_t v24 = v18[9];
        uint64_t v25 = &a1[v24];
        uint64_t v26 = (uint64_t)a2 + v24;
        sub_1C01F07F8(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
        uint64_t v28 = v27;
        uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
        v29(v25, v26, v27);
        uint64_t v30 = (int *)type metadata accessor for FeedWeather.Temperature(0);
        v29(&v25[v30[5]], v26 + v30[5], v28);
        v29(&v25[v30[6]], v26 + v30[6], v28);
        v29(&v25[v30[7]], v26 + v30[7], v28);
        uint64_t v31 = v18[10];
        uint64_t v32 = &a1[v31];
        uint64_t v33 = (char **)((char *)a2 + v31);
        uint64_t v34 = v33[1];
        *(void *)uint64_t v32 = *v33;
        *((void *)v32 + 1) = v34;
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 4u:
        uint64_t v35 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v35;
        uint64_t v36 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v36;
        uint64_t v37 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v37;
        *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
        char v38 = a2[10];
        *((void *)a1 + 9) = a2[9];
        *((void *)a1 + 10) = v38;
        uint64_t v39 = a2[12];
        *((void *)a1 + 11) = a2[11];
        *((void *)a1 + 12) = v39;
        *((void *)a1 + 13) = a2[13];
        a1[112] = *((unsigned char *)a2 + 112);
        uint64_t v40 = a2[16];
        *((void *)a1 + 15) = a2[15];
        *((void *)a1 + 16) = v40;
        a1[136] = *((unsigned char *)a2 + 136);
        uint64_t v41 = a2[19];
        *((void *)a1 + 18) = a2[18];
        *((void *)a1 + 19) = v41;
        id v42 = a2[21];
        *((void *)a1 + 20) = a2[20];
        *((void *)a1 + 21) = v42;
        a1[184] = *((unsigned char *)a2 + 184);
        *((void *)a1 + 22) = a2[22];
        id v43 = a2[25];
        *((void *)a1 + 24) = a2[24];
        *((void *)a1 + 25) = v43;
        a1[224] = *((unsigned char *)a2 + 224);
        uint64_t v44 = a2[27];
        *((void *)a1 + 26) = a2[26];
        *((void *)a1 + 27) = v44;
        v288 = a2 + 29;
        unint64_t v45 = (unint64_t)a2[30];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v45 >= 0x11)
        {
          *((void *)a1 + 29) = *v288;
          *((void *)a1 + 30) = v45;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)v288;
        }
        goto LABEL_138;
      case 5u:
        long long v46 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v46;
        *((void *)a1 + 2) = a2[2];
        a1[24] = *((unsigned char *)a2 + 24);
        long long v47 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v47;
        *((void *)a1 + 6) = a2[6];
        a1[56] = *((unsigned char *)a2 + 56);
        v289 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v48 = v289[10];
        long long v49 = &a1[v48];
        uint64_t v50 = (uint64_t)a2 + v48;
        char *v49 = *((unsigned char *)a2 + v48);
        v49[1] = *((unsigned char *)a2 + v48 + 1);
        uint64_t v51 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v52 = *(int *)(v51 + 24);
        __dst = &v49[v52];
        v286 = (int *)v51;
        uint64_t v53 = (char *)(v50 + v52);
        long long v54 = (int *)type metadata accessor for SharedItem();
        uint64_t v283 = *((void *)v54 - 1);
        long long v55 = *(unsigned int (**)(char *, uint64_t, int *))(v283 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v55(v53, 1, v54))
        {
          uint64_t v56 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v53, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          uint64_t v115 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(__dst, v53, v115);
          __dst[v54[5]] = v53[v54[5]];
          uint64_t v116 = v54[6];
          uint64_t v117 = *(void **)&v53[v116];
          *(void *)&__dst[v116] = v117;
          uint64_t v118 = v54[7];
          v291 = &__dst[v118];
          v281 = &v53[v118];
          uint64_t v119 = sub_1C1515FDC();
          long long v120 = *(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16);
          id v121 = v117;
          v120(v291, v281, v119);
          (*(void (**)(char *, void, uint64_t, int *))(v283 + 56))(__dst, 0, 1, v54);
        }
        v49[v286[7]] = *(unsigned char *)(v50 + v286[7]);
        v49[v286[8]] = *(unsigned char *)(v50 + v286[8]);
        v49[v286[9]] = *(unsigned char *)(v50 + v286[9]);
        v49[v286[10]] = *(unsigned char *)(v50 + v286[10]);
        uint64_t v122 = v289[11];
        long long v123 = &a1[v122];
        long long v124 = (char *)a2 + v122;
        uint64_t v125 = sub_1C151D2DC();
        uint64_t v126 = *(void *)(v125 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v124, 1, v125))
        {
          sub_1C01F07F8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v123, v124, v125);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
        }
        uint64_t v140 = v289[12];
        long long v141 = &a1[v140];
        long long v142 = (char **)((char *)a2 + v140);
        unint64_t v143 = v142[1];
        if (v143 >= 0x11)
        {
          *(void *)long long v141 = *v142;
          *((void *)v141 + 1) = v143;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)long long v141 = *(_OWORD *)v142;
        }
        uint64_t v144 = v289[13];
        unint64_t v145 = *(unint64_t *)((char *)a2 + v144);
        if (v145 >= 2)
        {
          if (v145 == 2)
          {
            *(void *)&a1[v144] = 2;
          }
          else
          {
            *(void *)&a1[v144] = v145;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)&a1[v144] = v145;
        }
        uint64_t v181 = v289[14];
        v182 = *(char **)((char *)a2 + v181);
        *(void *)&a1[v181] = v182;
        id v183 = v182;
        goto LABEL_138;
      case 6u:
        long long v57 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v57;
        a1[16] = *((unsigned char *)a2 + 16);
        long long v58 = a2 + 3;
        unint64_t v59 = (unint64_t)a2[4];
        if (v59 >= 0x11)
        {
          *((void *)a1 + 3) = *v58;
          *((void *)a1 + 4) = v59;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v58;
        }
        long long v85 = a2[6];
        *((void *)a1 + 5) = a2[5];
        *((void *)a1 + 6) = v85;
        long long v86 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v87 = v86[8];
        long long v88 = &a1[v87];
        uint64_t v89 = (uint64_t)a2 + v87;
        uint64_t v90 = sub_1C1515FDC();
        uint64_t v91 = *(void *)(v90 - 8);
        uint64_t v92 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 16);
        swift_bridgeObjectRetain();
        v92(v88, v89, v90);
        uint64_t v93 = v86[9];
        uint64_t v94 = &a1[v93];
        uint64_t v95 = (char *)a2 + v93;
        uint64_t v287 = v90;
        v284 = (void (*)(char *, char *, uint64_t))v92;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))((uint64_t)a2 + v93, 1, v90))
        {
          sub_1C01F07F8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          v92(v94, (uint64_t)v95, v90);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v94, 0, 1, v90);
        }
        *(void *)&a1[v86[10]] = *(char **)((char *)a2 + v86[10]);
        *(void *)&a1[v86[11]] = *(char **)((char *)a2 + v86[11]);
        uint64_t v128 = v86[12];
        v290 = &a1[v128];
        v292 = v86;
        long long v129 = (char **)((char *)a2 + v128);
        uint64_t v130 = type metadata accessor for FeedHeadline(0);
        uint64_t v131 = *(void *)(v130 - 8);
        long long v132 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v131 + 48);
        swift_retain();
        swift_retain();
        if (v132(v129, 1, v130))
        {
          sub_1BFFFCF8C(0);
          memcpy(v290, v129, *(void *)(*(void *)(v133 - 8) + 64));
          long long v134 = v292;
        }
        else
        {
          v280 = (int *)v130;
          uint64_t v146 = v129[1];
          *(void *)v290 = *v129;
          *((void *)v290 + 1) = v146;
          *((void *)v290 + 2) = v129[2];
          v290[24] = *((unsigned char *)v129 + 24);
          uint64_t v147 = v129[5];
          *((void *)v290 + 4) = v129[4];
          *((void *)v290 + 5) = v147;
          *((void *)v290 + 6) = v129[6];
          v290[56] = *((unsigned char *)v129 + 56);
          uint64_t v148 = *(int *)(v130 + 40);
          long long v149 = &v290[v148];
          v282 = v129;
          long long v150 = (char *)v129 + v148;
          *long long v149 = *((unsigned char *)v129 + v148);
          v149[1] = *((unsigned char *)v129 + v148 + 1);
          uint64_t v151 = type metadata accessor for FeedHeadline.State(0);
          uint64_t v152 = *(int *)(v151 + 24);
          v278 = &v149[v152];
          v279 = (int *)v151;
          long long v153 = &v150[v152];
          long long v154 = (int *)type metadata accessor for SharedItem();
          uint64_t v277 = *((void *)v154 - 1);
          v155 = *(unsigned int (**)(char *, uint64_t, int *))(v277 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v155(v153, 1, v154))
          {
            uint64_t v156 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v278, v153, *(void *)(*(void *)(v156 - 8) + 64));
          }
          else
          {
            uint64_t v184 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v184 - 8) + 16))(v278, v153, v184);
            v278[v154[5]] = v153[v154[5]];
            uint64_t v185 = v154[6];
            v186 = *(void **)&v153[v185];
            *(void *)&v278[v185] = v186;
            uint64_t v187 = v154[7];
            v188 = &v278[v187];
            v189 = &v153[v187];
            id v190 = v186;
            v284(v188, v189, v287);
            (*(void (**)(char *, void, uint64_t, int *))(v277 + 56))(v278, 0, 1, v154);
          }
          v149[v279[7]] = v150[v279[7]];
          v149[v279[8]] = v150[v279[8]];
          v149[v279[9]] = v150[v279[9]];
          v149[v279[10]] = v150[v279[10]];
          uint64_t v191 = v280[11];
          v192 = &v290[v191];
          v193 = (char *)v129 + v191;
          uint64_t v194 = sub_1C151D2DC();
          uint64_t v195 = *(void *)(v194 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194))
          {
            sub_1C01F07F8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v192, v193, *(void *)(*(void *)(v196 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v192, v193, v194);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
          }
          long long v134 = v292;
          uint64_t v197 = v280[12];
          v198 = &v290[v197];
          v199 = (void *)((char *)v282 + v197);
          unint64_t v200 = v199[1];
          if (v200 >= 0x11)
          {
            *(void *)v198 = *v199;
            *((void *)v198 + 1) = v200;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v198 = *(_OWORD *)v199;
          }
          uint64_t v201 = v280[13];
          unint64_t v202 = *(void *)((char *)v282 + v201);
          if (v202 >= 2)
          {
            if (v202 == 2)
            {
              *(void *)&v290[v201] = 2;
            }
            else
            {
              *(void *)&v290[v201] = v202;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)&v290[v201] = v202;
          }
          uint64_t v220 = v280[14];
          v221 = *(void **)((char *)v282 + v220);
          *(void *)&v290[v220] = v221;
          v222 = *(void (**)(char *, void, uint64_t, int *))(v131 + 56);
          id v223 = v221;
          v222(v290, 0, 1, v280);
        }
        uint64_t v224 = v134[13];
        v225 = &a1[v224];
        v226 = (uint64_t *)((char *)a2 + v224);
        uint64_t v227 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v228 = *(void *)(v227 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v228 + 48))(v226, 1, v227))
        {
          sub_1C01F07F8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(v225, v226, *(void *)(*(void *)(v229 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v231 = *v226;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v232 = v226[1];
            *(void *)v225 = v231;
            *((void *)v225 + 1) = v232;
            uint64_t v233 = type metadata accessor for GenericDataVisualization();
            uint64_t v234 = *(int *)(v233 + 20);
            v235 = &v225[v234];
            v236 = (char *)v226 + v234;
            swift_bridgeObjectRetain();
            v237 = v236;
            long long v134 = v292;
            v284(v235, v237, v287);
            *(void *)&v225[*(int *)(v233 + 24)] = *(uint64_t *)((char *)v226 + *(int *)(v233 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            *(void *)v225 = v231;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v228 + 56))(v225, 0, 1, v227);
        }
        a1[v134[14]] = *((unsigned char *)a2 + v134[14]);
        goto LABEL_138;
      case 7u:
        long long v60 = *a2;
        *(void *)a1 = *a2;
        long long v61 = v60;
        goto LABEL_138;
      case 8u:
        long long v62 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v62;
        long long v63 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v63;
        a1[32] = *((unsigned char *)a2 + 32);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_138;
      case 9u:
        long long v64 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v64;
        a1[16] = *((unsigned char *)a2 + 16);
        long long v65 = a2 + 3;
        unint64_t v66 = (unint64_t)a2[4];
        if (v66 >= 0x11)
        {
          *((void *)a1 + 3) = *v65;
          *((void *)a1 + 4) = v66;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v65;
        }
        uint64_t v97 = a2[6];
        *((void *)a1 + 5) = a2[5];
        *((void *)a1 + 6) = v97;
        uint64_t v98 = a2[8];
        *((void *)a1 + 7) = a2[7];
        *((void *)a1 + 8) = v98;
        a1[72] = *((unsigned char *)a2 + 72);
        *((void *)a1 + 10) = a2[10];
        uint64_t v99 = a2[14];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v100 = v98;
        swift_bridgeObjectRetain();
        if (v99)
        {
          uint64_t v101 = a2[15];
          *((void *)a1 + 14) = v99;
          *((void *)a1 + 15) = v101;
          (**((void (***)(uint64_t, uint64_t, uint64_t))v99 - 1))((uint64_t)(a1 + 88), (uint64_t)(a2 + 11), (uint64_t)v99);
        }
        else
        {
          long long v135 = *(_OWORD *)(a2 + 13);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 104) = v135;
          *((void *)a1 + 15) = a2[15];
        }
        v136 = a1 + 128;
        long long v137 = a2 + 16;
        long long v138 = a2[19];
        if (v138)
        {
          long long v139 = a2[20];
          *((void *)a1 + 19) = v138;
          *((void *)a1 + 20) = v139;
          (**((void (***)(_OWORD *, _OWORD *))v138 - 1))(v136, v137);
        }
        else
        {
          long long v157 = *((_OWORD *)a2 + 9);
          _OWORD *v136 = *v137;
          *((_OWORD *)a1 + 9) = v157;
          *((void *)a1 + 20) = a2[20];
        }
        v158 = a1 + 168;
        v159 = a2 + 21;
        v160 = a2[24];
        if (v160)
        {
          v161 = a2[25];
          *((void *)a1 + 24) = v160;
          *((void *)a1 + 25) = v161;
          (**((void (***)(_OWORD *, _OWORD *))v160 - 1))(v158, v159);
        }
        else
        {
          long long v162 = *(_OWORD *)(a2 + 23);
          _OWORD *v158 = *v159;
          *(_OWORD *)(a1 + 184) = v162;
          *((void *)a1 + 25) = a2[25];
        }
        goto LABEL_138;
      case 0xAu:
        long long v67 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v67;
        a1[16] = *((unsigned char *)a2 + 16);
        long long v68 = a2 + 3;
        unint64_t v69 = (unint64_t)a2[4];
        if (v69 >= 0x11)
        {
          *((void *)a1 + 3) = *v68;
          *((void *)a1 + 4) = v69;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v68;
        }
        uint64_t v102 = a2[6];
        *((void *)a1 + 5) = a2[5];
        *((void *)a1 + 6) = v102;
        *((void *)a1 + 7) = a2[7];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_138;
      case 0xBu:
        uint64_t v70 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v70;
        a1[16] = *((unsigned char *)a2 + 16);
        uint64_t v71 = a2 + 3;
        unint64_t v72 = (unint64_t)a2[4];
        if (v72 >= 0x11)
        {
          *((void *)a1 + 3) = *v71;
          *((void *)a1 + 4) = v72;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v71;
        }
        break;
      case 0xCu:
        uint64_t v73 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v73;
        uint64_t v74 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        uint64_t v75 = &a1[v74];
        uint64_t v76 = (uint64_t)a2 + v74;
        uint64_t v77 = sub_1C151D6DC();
        id v78 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v77 - 8) + 16);
        swift_bridgeObjectRetain();
        v78(v75, v76, v77);
        goto LABEL_138;
      default:
        uint64_t v5 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v5;
        a1[16] = *((unsigned char *)a2 + 16);
        swift_unknownObjectRetain();
        uint64_t v6 = v5;
        goto LABEL_138;
    }
    uint64_t v103 = a2[6];
    *((void *)a1 + 5) = a2[5];
    *((void *)a1 + 6) = v103;
    uint64_t v104 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v105 = &a1[v104];
    uint64_t v106 = (uint64_t)a2 + v104;
    *(void *)&a1[v104] = *(char **)((char *)a2 + v104);
    uint64_t v107 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v108 = &v105[v107];
    uint64_t v109 = (void *)(v106 + v107);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v167 = type metadata accessor for PuzzleStatisticValue(0);
        int v168 = swift_getEnumCaseMultiPayload();
        if (v168 == 5)
        {
          uint64_t v169 = type metadata accessor for PuzzleStreak();
          uint64_t v170 = *(void *)(v169 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v170 + 48))(v109, 1, v169))
          {
LABEL_73:
            sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v108, v109, *(void *)(*(void *)(v171 - 8) + 64));
            goto LABEL_117;
          }
        }
        else
        {
          if (v168 != 4)
          {
            memcpy(v108, v109, *(void *)(*(void *)(v167 - 8) + 64));
            goto LABEL_118;
          }
          uint64_t v169 = type metadata accessor for PuzzleStreak();
          uint64_t v170 = *(void *)(v169 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v170 + 48))(v109, 1, v169)) {
            goto LABEL_73;
          }
        }
        uint64_t v259 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v259 - 8) + 16))(v108, v109, v259);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56))(v108, 0, 1, v169);
LABEL_117:
        swift_storeEnumTagMultiPayload();
LABEL_118:
        uint64_t v260 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v261 = *(int *)(v260 + 20);
        v262 = &v108[v261];
        v263 = (char *)v109 + v261;
        int v264 = swift_getEnumCaseMultiPayload();
        if (v264 == 5)
        {
          uint64_t v265 = type metadata accessor for PuzzleStreak();
          uint64_t v266 = *(void *)(v265 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v266 + 48))(v263, 1, v265))
          {
LABEL_123:
            sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v262, v263, *(void *)(*(void *)(v267 - 8) + 64));
            goto LABEL_126;
          }
        }
        else
        {
          if (v264 != 4)
          {
            memcpy(v262, v263, *(void *)(*(void *)(v167 - 8) + 64));
            goto LABEL_127;
          }
          uint64_t v265 = type metadata accessor for PuzzleStreak();
          uint64_t v266 = *(void *)(v265 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v266 + 48))(v263, 1, v265)) {
            goto LABEL_123;
          }
        }
        uint64_t v268 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 16))(v262, v263, v268);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v266 + 56))(v262, 0, 1, v265);
LABEL_126:
        swift_storeEnumTagMultiPayload();
LABEL_127:
        uint64_t v269 = *(int *)(v260 + 24);
        v270 = &v108[v269];
        uint64_t v109 = (void *)((char *)v109 + v269);
        int v271 = swift_getEnumCaseMultiPayload();
        if (v271 == 5)
        {
          uint64_t v272 = type metadata accessor for PuzzleStreak();
          uint64_t v273 = *(void *)(v272 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v273 + 48))(v109, 1, v272))
          {
LABEL_132:
            sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v270, v109, *(void *)(*(void *)(v274 - 8) + 64));
            goto LABEL_136;
          }
        }
        else
        {
          if (v271 != 4)
          {
            size_t v166 = *(void *)(*(void *)(v167 - 8) + 64);
            v251 = v270;
            goto LABEL_134;
          }
          uint64_t v272 = type metadata accessor for PuzzleStreak();
          uint64_t v273 = *(void *)(v272 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v273 + 48))(v109, 1, v272)) {
            goto LABEL_132;
          }
        }
        uint64_t v275 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v275 - 8) + 16))(v270, v109, v275);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v273 + 56))(v270, 0, 1, v272);
        goto LABEL_136;
      case 2u:
        v163 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v164 = *((void *)v163 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v164 + 48))(v109, 1, v163))
        {
          sub_1C01F07F8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v166 = *(void *)(*(void *)(v165 - 8) + 64);
          goto LABEL_107;
        }
        uint64_t v203 = sub_1C151631C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v203 - 8) + 16))(v108, v109, v203);
        v204 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v205 = v204[5];
        v206 = &v108[v205];
        v207 = (void *)((char *)v109 + v205);
        uint64_t v208 = v207[1];
        *(void *)v206 = *v207;
        *((void *)v206 + 1) = v208;
        uint64_t v209 = v204[6];
        v210 = &v108[v209];
        v211 = (void *)((char *)v109 + v209);
        uint64_t v212 = v211[1];
        *(void *)v210 = *v211;
        *((void *)v210 + 1) = v212;
        v213 = v211 + 2;
        unint64_t v214 = v211[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v214 >> 60 == 15)
        {
          *((_OWORD *)v210 + 1) = *(_OWORD *)v213;
        }
        else
        {
          uint64_t v252 = *v213;
          sub_1BFE95820(*v213, v214);
          *((void *)v210 + 2) = v252;
          *((void *)v210 + 3) = v214;
        }
        *(void *)&v108[v204[7]] = *(void *)((char *)v109 + v204[7]);
        *(void *)&v108[v204[8]] = *(void *)((char *)v109 + v204[8]);
        *(void *)&v108[v163[5]] = *(void *)((char *)v109 + v163[5]);
        *(void *)&v108[v163[6]] = *(void *)((char *)v109 + v163[6]);
        uint64_t v253 = v163[7];
        v254 = &v108[v253];
        v255 = (void *)((char *)v109 + v253);
        uint64_t v256 = v255[1];
        *(void *)v254 = *v255;
        *((void *)v254 + 1) = v256;
        v257 = *(void (**)(char *, void, uint64_t, int *))(v164 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v257(v108, 0, 1, v163);
        goto LABEL_137;
      case 3u:
        uint64_t v172 = v109[1];
        *(void *)uint64_t v108 = *v109;
        *((void *)v108 + 1) = v172;
        v108[16] = *((unsigned char *)v109 + 16);
        v173 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v174 = v173[6];
        v175 = &v108[v174];
        v176 = (char *)v109 + v174;
        uint64_t v177 = type metadata accessor for PuzzleStreak();
        uint64_t v178 = *(void *)(v177 - 8);
        v179 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v178 + 48);
        if (v179(v176, 1, v177))
        {
          sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v175, v176, *(void *)(*(void *)(v180 - 8) + 64));
        }
        else
        {
          uint64_t v215 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16))(v175, v176, v215);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v178 + 56))(v175, 0, 1, v177);
        }
        uint64_t v216 = v173[7];
        v217 = &v108[v216];
        v218 = (char *)v109 + v216;
        if (v179((char *)v109 + v216, 1, v177))
        {
          sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v217, v218, *(void *)(*(void *)(v219 - 8) + 64));
        }
        else
        {
          uint64_t v238 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v238 - 8) + 16))(v217, v218, v238);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v178 + 56))(v217, 0, 1, v177);
        }
        uint64_t v239 = v173[8];
        v240 = &v108[v239];
        v241 = (_OWORD *)((char *)v109 + v239);
        long long v242 = v241[1];
        *(_OWORD *)v240 = *v241;
        *((_OWORD *)v240 + 1) = v242;
        *(_OWORD *)(v240 + 25) = *(_OWORD *)((char *)v241 + 25);
        uint64_t v243 = v173[9];
        v244 = &v108[v243];
        v245 = (_OWORD *)((char *)v109 + v243);
        *(_OWORD *)(v244 + 25) = *(_OWORD *)((char *)v245 + 25);
        long long v246 = v245[1];
        *(_OWORD *)v244 = *v245;
        *((_OWORD *)v244 + 1) = v246;
        uint64_t v247 = v173[10];
        v248 = &v108[v247];
        v249 = (_OWORD *)((char *)v109 + v247);
        long long v250 = v249[1];
        *(_OWORD *)v248 = *v249;
        *((_OWORD *)v248 + 1) = v250;
        *(_OWORD *)(v248 + 25) = *(_OWORD *)((char *)v249 + 25);
        goto LABEL_137;
      default:
        uint64_t v110 = type metadata accessor for PuzzleStatisticValue(0);
        int v111 = swift_getEnumCaseMultiPayload();
        if (v111 == 5)
        {
          uint64_t v112 = type metadata accessor for PuzzleStreak();
          uint64_t v113 = *(void *)(v112 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v113 + 48))(v109, 1, v112)) {
            goto LABEL_41;
          }
        }
        else
        {
          if (v111 != 4)
          {
            size_t v166 = *(void *)(*(void *)(v110 - 8) + 64);
LABEL_107:
            v251 = v108;
LABEL_134:
            memcpy(v251, v109, v166);
            goto LABEL_137;
          }
          uint64_t v112 = type metadata accessor for PuzzleStreak();
          uint64_t v113 = *(void *)(v112 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v113 + 48))(v109, 1, v112))
          {
LABEL_41:
            sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v108, v109, *(void *)(*(void *)(v114 - 8) + 64));
            goto LABEL_136;
          }
        }
        uint64_t v258 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v258 - 8) + 16))(v108, v109, v258);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v108, 0, 1, v112);
LABEL_136:
        swift_storeEnumTagMultiPayload();
LABEL_137:
        swift_storeEnumTagMultiPayload();
LABEL_138:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

unint64_t sub_1C01F2F9C()
{
  unint64_t result = qword_1EB880D50;
  if (!qword_1EB880D50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB880D50);
  }
  return result;
}

void sub_1C01F2FDC(uint64_t a1)
{
  type metadata accessor for FeedGroupItem();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_unknownObjectRelease();
      id v2 = *(id *)(a1 + 8);
      goto LABEL_40;
    case 1u:

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 128) < 0x11uLL) {
        return;
      }
      goto LABEL_36;
    case 2u:
LABEL_82:
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for FeedWeather(0);
      uint64_t v4 = a1 + *(int *)(v3 + 28);
      uint64_t v5 = sub_1C151E2BC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      uint64_t v6 = a1 + *(int *)(v3 + 36);
      sub_1C01F07F8(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
      uint64_t v8 = v7;
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v9(v6, v7);
      uint64_t v10 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v9(v6 + v10[5], v8);
      v9(v6 + v10[6], v8);
      v9(v6 + v10[7], v8);
      goto LABEL_36;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 240) < 0x11uLL) {
        return;
      }
      goto LABEL_36;
    case 5u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v11 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v12 = a1 + v11[10];
      uint64_t v13 = v12 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      uint64_t v14 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
      {
        uint64_t v15 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);

        uint64_t v16 = v13 + *(int *)(v14 + 28);
        uint64_t v17 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      }
      uint64_t v18 = a1 + v11[11];
      uint64_t v19 = sub_1C151D2DC();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
      if (*(void *)(a1 + v11[12] + 8) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + v11[13]) >= 3uLL) {
        swift_unknownObjectRelease();
      }
      id v2 = *(id *)(a1 + v11[14]);
      goto LABEL_40;
    case 6u:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v21 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v22 = a1 + v21[8];
      uint64_t v23 = sub_1C1515FDC();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v25(v22, v23);
      uint64_t v26 = a1 + v21[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v26, 1, v23)) {
        v25(v26, v23);
      }
      swift_release();
      swift_release();
      uint64_t v27 = a1 + v21[12];
      uint64_t v28 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v28 - 1) + 48))(v27, 1, v28))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v29 = v28[10];
        uint64_t v30 = v27 + v29 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v31 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31))
        {
          uint64_t v32 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v30, v32);

          v25(v30 + *(int *)(v31 + 28), v23);
        }
        uint64_t v33 = v27 + v28[11];
        uint64_t v34 = sub_1C151D2DC();
        uint64_t v35 = *(void *)(v34 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
        }
        if (*(void *)(v27 + v28[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v27 + v28[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }
      }
      uint64_t v36 = a1 + v21[13];
      uint64_t v37 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v36, 1, v37)) {
        return;
      }
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for GenericDataVisualization();
        v25(v36 + *(int *)(v38 + 20), v23);
LABEL_36:
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      return;
    case 7u:
      id v2 = *(id *)a1;
LABEL_40:

      return;
    case 8u:
      goto LABEL_55;
    case 9u:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 112)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      }
      if (*(void *)(a1 + 152)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 128);
      }
      if (*(void *)(a1 + 192))
      {
        __swift_destroy_boxed_opaque_existential_1(a1 + 168);
      }
      return;
    case 0xAu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_55:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      break;
    case 0xBu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v39 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      uint64_t v40 = v39 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_75;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v44 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v40, 1, v44))
            {
              uint64_t v45 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v40, v45);
            }
          }
          uint64_t v46 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v47 = v40 + *(int *)(v46 + 20);
          int v48 = swift_getEnumCaseMultiPayload();
          if (v48 == 5 || v48 == 4)
          {
            uint64_t v49 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v47, 1, v49))
            {
              uint64_t v50 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v47, v50);
            }
          }
          v40 += *(int *)(v46 + 24);
LABEL_75:
          int v51 = swift_getEnumCaseMultiPayload();
          if (v51 == 5 || v51 == 4)
          {
            uint64_t v52 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v40, 1, v52))goto LABEL_90; {
          }
            }
          return;
        case 2u:
          uint64_t v53 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v40, 1, v53)) {
            return;
          }
          uint64_t v54 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v40, v54);
          uint64_t v55 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v56 = v40 + *(int *)(v55 + 24);
          swift_bridgeObjectRelease();
          unint64_t v57 = *(void *)(v56 + 24);
          if (v57 >> 60 != 15) {
            sub_1BFE95664(*(void *)(v56 + 16), v57);
          }
          goto LABEL_82;
        case 3u:
          uint64_t v58 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v59 = v40 + *(int *)(v58 + 24);
          uint64_t v60 = type metadata accessor for PuzzleStreak();
          long long v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48);
          if (!v61(v59, 1, v60))
          {
            uint64_t v62 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v59, v62);
          }
          v40 += *(int *)(v58 + 28);
          if (v61(v40, 1, v60)) {
            return;
          }
LABEL_90:
          uint64_t v41 = sub_1C151555C();
          goto LABEL_63;
        default:
          return;
      }
    case 0xCu:
      swift_bridgeObjectRelease();
      uint64_t v40 = a1 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      uint64_t v41 = sub_1C151D6DC();
LABEL_63:
      id v42 = *(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8);
      v42(v40, v41);
      break;
    default:
      return;
  }
}

uint64_t sub_1C01F3D6C(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FeedGroupItem();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = *(void **)a2;
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      uint64_t v8 = *(void **)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v8;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v9 = *(void *)(a2 + 80);
      id v10 = v6;
      swift_bridgeObjectRetain();
      id v11 = v8;
      if (v9 == 1)
      {
        long long v12 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v12;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = v9;
        uint64_t v77 = *(void *)(a2 + 96);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = v77;
        uint64_t v79 = *(void **)(a2 + 104);
        uint64_t v78 = *(void *)(a2 + 112);
        *(void *)(a1 + 104) = v79;
        *(void *)(a1 + 112) = v78;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v80 = v79;
      }
      uint64_t v81 = (void *)(a2 + 120);
      unint64_t v82 = *(void *)(a2 + 128);
      if (v82 >= 0x11)
      {
        *(void *)(a1 + 120) = *v81;
        *(void *)(a1 + 128) = v82;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v81;
      }
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      goto LABEL_136;
    case 2u:
      uint64_t v13 = *(void **)a2;
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v15 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v15;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v16 = (int *)type metadata accessor for FeedWeather(0);
      uint64_t v17 = v16[7];
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      uint64_t v20 = sub_1C151E2BC();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      *(unsigned char *)(a1 + v16[8]) = *(unsigned char *)(a2 + v16[8]);
      uint64_t v22 = v16[9];
      uint64_t v23 = a1 + v22;
      uint64_t v24 = a2 + v22;
      sub_1C01F07F8(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
      uint64_t v26 = v25;
      uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
      v27(v23, v24, v25);
      uint64_t v28 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v27(v23 + v28[5], v24 + v28[5], v26);
      v27(v23 + v28[6], v24 + v28[6], v26);
      v27(v23 + v28[7], v24 + v28[7], v26);
      uint64_t v29 = v16[10];
      uint64_t v30 = (void *)(a1 + v29);
      uint64_t v31 = (void *)(a2 + v29);
      uint64_t v32 = v31[1];
      *uint64_t v30 = *v31;
      v30[1] = v32;
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 4u:
      uint64_t v33 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v33;
      uint64_t v34 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v34;
      uint64_t v35 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v35;
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      uint64_t v36 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v36;
      uint64_t v37 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v37;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      uint64_t v38 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v38;
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      uint64_t v39 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v39;
      uint64_t v40 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v40;
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      uint64_t v41 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v41;
      *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
      uint64_t v42 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v42;
      uint64_t v287 = (void *)(a2 + 232);
      unint64_t v43 = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43 >= 0x11)
      {
        *(void *)(a1 + 232) = *v287;
        *(void *)(a1 + 240) = v43;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 232) = *(_OWORD *)v287;
      }
      goto LABEL_136;
    case 5u:
      uint64_t v44 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v44;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v45 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v45;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      v288 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v46 = v288[10];
      uint64_t v47 = (unsigned char *)(a1 + v46);
      uint64_t v48 = a2 + v46;
      *uint64_t v47 = *(unsigned char *)(a2 + v46);
      v47[1] = *(unsigned char *)(a2 + v46 + 1);
      uint64_t v49 = type metadata accessor for FeedHeadline.State(0);
      uint64_t v50 = *(int *)(v49 + 24);
      __dst = &v47[v50];
      v286 = (int *)v49;
      int v51 = (char *)(v48 + v50);
      uint64_t v52 = (int *)type metadata accessor for SharedItem();
      uint64_t v282 = *((void *)v52 - 1);
      uint64_t v53 = *(unsigned int (**)(char *, uint64_t, int *))(v282 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v53(v51, 1, v52))
      {
        uint64_t v54 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v51, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        uint64_t v113 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(__dst, v51, v113);
        __dst[v52[5]] = v51[v52[5]];
        uint64_t v114 = v52[6];
        uint64_t v115 = *(void **)&v51[v114];
        *(void *)&__dst[v114] = v115;
        uint64_t v116 = v52[7];
        v290 = &__dst[v116];
        v281 = &v51[v116];
        uint64_t v117 = sub_1C1515FDC();
        uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
        id v119 = v115;
        v118(v290, v281, v117);
        (*(void (**)(char *, void, uint64_t, int *))(v282 + 56))(__dst, 0, 1, v52);
      }
      v47[v286[7]] = *(unsigned char *)(v48 + v286[7]);
      v47[v286[8]] = *(unsigned char *)(v48 + v286[8]);
      v47[v286[9]] = *(unsigned char *)(v48 + v286[9]);
      v47[v286[10]] = *(unsigned char *)(v48 + v286[10]);
      uint64_t v120 = v288[11];
      id v121 = (void *)(a1 + v120);
      uint64_t v122 = (const void *)(a2 + v120);
      uint64_t v123 = sub_1C151D2DC();
      uint64_t v124 = *(void *)(v123 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123))
      {
        sub_1C01F07F8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
        memcpy(v121, v122, *(void *)(*(void *)(v125 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v124 + 16))(v121, v122, v123);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
      }
      uint64_t v139 = v288[12];
      uint64_t v140 = (void *)(a1 + v139);
      long long v141 = (void *)(a2 + v139);
      unint64_t v142 = v141[1];
      if (v142 >= 0x11)
      {
        *uint64_t v140 = *v141;
        v140[1] = v142;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v140 = *(_OWORD *)v141;
      }
      uint64_t v143 = v288[13];
      unint64_t v144 = *(void *)(a2 + v143);
      if (v144 >= 2)
      {
        if (v144 == 2)
        {
          *(void *)(a1 + v143) = 2;
        }
        else
        {
          *(void *)(a1 + v143) = v144;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)(a1 + v143) = v144;
      }
      uint64_t v180 = v288[14];
      uint64_t v181 = *(void **)(a2 + v180);
      *(void *)(a1 + v180) = v181;
      id v182 = v181;
      goto LABEL_136;
    case 6u:
      uint64_t v55 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v55;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v56 = (void *)(a2 + 24);
      unint64_t v57 = *(void *)(a2 + 32);
      if (v57 >= 0x11)
      {
        *(void *)(a1 + 24) = *v56;
        *(void *)(a1 + 32) = v57;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v56;
      }
      uint64_t v83 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v83;
      unint64_t v84 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v85 = v84[8];
      uint64_t v86 = a1 + v85;
      uint64_t v87 = a2 + v85;
      uint64_t v88 = sub_1C1515FDC();
      uint64_t v89 = *(void *)(v88 - 8);
      uint64_t v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16);
      swift_bridgeObjectRetain();
      v90(v86, v87, v88);
      uint64_t v91 = v84[9];
      uint64_t v92 = (void *)(a1 + v91);
      uint64_t v93 = (const void *)(a2 + v91);
      uint64_t v289 = v88;
      __dsta = (void (*)(char *, char *, uint64_t))v90;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(a2 + v91, 1, v88))
      {
        sub_1C01F07F8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        v90((uint64_t)v92, (uint64_t)v93, v88);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v92, 0, 1, v88);
      }
      *(void *)(a1 + v84[10]) = *(void *)(a2 + v84[10]);
      *(void *)(a1 + v84[11]) = *(void *)(a2 + v84[11]);
      uint64_t v126 = v84[12];
      uint64_t v127 = (void *)(a1 + v126);
      v291 = v84;
      uint64_t v128 = (void *)(a2 + v126);
      uint64_t v129 = type metadata accessor for FeedHeadline(0);
      uint64_t v130 = *(void *)(v129 - 8);
      uint64_t v131 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v130 + 48);
      swift_retain();
      swift_retain();
      if (v131(v128, 1, v129))
      {
        sub_1BFFFCF8C(0);
        memcpy(v127, v128, *(void *)(*(void *)(v132 - 8) + 64));
        uint64_t v133 = v291;
      }
      else
      {
        uint64_t v279 = v130;
        v280 = (int *)v129;
        uint64_t v145 = v128[1];
        *uint64_t v127 = *v128;
        v127[1] = v145;
        v127[2] = v128[2];
        *((unsigned char *)v127 + 24) = *((unsigned char *)v128 + 24);
        uint64_t v146 = v128[5];
        v127[4] = v128[4];
        v127[5] = v146;
        v127[6] = v128[6];
        *((unsigned char *)v127 + 56) = *((unsigned char *)v128 + 56);
        uint64_t v147 = *(int *)(v129 + 40);
        uint64_t v148 = (char *)v127 + v147;
        uint64_t v283 = v128;
        long long v149 = (char *)v128 + v147;
        *uint64_t v148 = *((unsigned char *)v128 + v147);
        v148[1] = *((unsigned char *)v128 + v147 + 1);
        uint64_t v150 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v151 = *(int *)(v150 + 24);
        uint64_t v277 = &v148[v151];
        v278 = (int *)v150;
        uint64_t v152 = &v149[v151];
        long long v153 = (int *)type metadata accessor for SharedItem();
        uint64_t v276 = *((void *)v153 - 1);
        long long v154 = *(unsigned int (**)(char *, uint64_t, int *))(v276 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v154(v152, 1, v153))
        {
          uint64_t v155 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v277, v152, *(void *)(*(void *)(v155 - 8) + 64));
        }
        else
        {
          uint64_t v183 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(v277, v152, v183);
          v277[v153[5]] = v152[v153[5]];
          uint64_t v184 = v153[6];
          uint64_t v185 = *(void **)&v152[v184];
          *(void *)&v277[v184] = v185;
          uint64_t v186 = v153[7];
          uint64_t v187 = &v277[v186];
          v188 = &v152[v186];
          id v189 = v185;
          __dsta(v187, v188, v289);
          (*(void (**)(char *, void, uint64_t, int *))(v276 + 56))(v277, 0, 1, v153);
        }
        v148[v278[7]] = v149[v278[7]];
        v148[v278[8]] = v149[v278[8]];
        v148[v278[9]] = v149[v278[9]];
        v148[v278[10]] = v149[v278[10]];
        uint64_t v190 = v280[11];
        uint64_t v191 = (char *)v127 + v190;
        v192 = (char *)v128 + v190;
        uint64_t v193 = sub_1C151D2DC();
        uint64_t v194 = *(void *)(v193 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48))(v192, 1, v193))
        {
          sub_1C01F07F8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v191, v192, *(void *)(*(void *)(v195 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v191, v192, v193);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v194 + 56))(v191, 0, 1, v193);
        }
        uint64_t v133 = v291;
        uint64_t v196 = v280[12];
        uint64_t v197 = (void *)((char *)v127 + v196);
        v198 = (void *)((char *)v283 + v196);
        unint64_t v199 = v198[1];
        if (v199 >= 0x11)
        {
          *uint64_t v197 = *v198;
          v197[1] = v199;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v197 = *(_OWORD *)v198;
        }
        uint64_t v200 = v280[13];
        unint64_t v201 = *(void *)((char *)v283 + v200);
        if (v201 >= 2)
        {
          if (v201 == 2)
          {
            *(void *)((char *)v127 + v200) = 2;
          }
          else
          {
            *(void *)((char *)v127 + v200) = v201;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v127 + v200) = v201;
        }
        uint64_t v219 = v280[14];
        uint64_t v220 = *(void **)((char *)v283 + v219);
        *(void *)((char *)v127 + v219) = v220;
        v221 = *(void (**)(void *, void, uint64_t, int *))(v279 + 56);
        id v222 = v220;
        v221(v127, 0, 1, v280);
      }
      uint64_t v223 = v133[13];
      uint64_t v224 = (void *)(a1 + v223);
      v225 = (uint64_t *)(a2 + v223);
      uint64_t v226 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v227 = *(void *)(v226 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v227 + 48))(v225, 1, v226))
      {
        sub_1C01F07F8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v224, v225, *(void *)(*(void *)(v228 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v230 = *v225;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v231 = v225[1];
          *uint64_t v224 = v230;
          v224[1] = v231;
          uint64_t v232 = type metadata accessor for GenericDataVisualization();
          uint64_t v233 = *(int *)(v232 + 20);
          uint64_t v234 = (char *)v224 + v233;
          v235 = (char *)v225 + v233;
          swift_bridgeObjectRetain();
          v236 = v235;
          uint64_t v133 = v291;
          __dsta(v234, v236, v289);
          *(void *)((char *)v224 + *(int *)(v232 + 24)) = *(uint64_t *)((char *)v225 + *(int *)(v232 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          *uint64_t v224 = v230;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v227 + 56))(v224, 0, 1, v226);
      }
      *(unsigned char *)(a1 + v133[14]) = *(unsigned char *)(a2 + v133[14]);
      goto LABEL_136;
    case 7u:
      uint64_t v58 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v59 = v58;
      goto LABEL_136;
    case 8u:
      uint64_t v60 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v60;
      uint64_t v61 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v61;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_136;
    case 9u:
      uint64_t v62 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v62;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      long long v63 = (void *)(a2 + 24);
      unint64_t v64 = *(void *)(a2 + 32);
      if (v64 >= 0x11)
      {
        *(void *)(a1 + 24) = *v63;
        *(void *)(a1 + 32) = v64;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v63;
      }
      uint64_t v95 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v95;
      uint64_t v96 = *(void **)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v96;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      uint64_t v97 = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v98 = v96;
      swift_bridgeObjectRetain();
      if (v97)
      {
        uint64_t v99 = *(void *)(a2 + 120);
        *(void *)(a1 + 112) = v97;
        *(void *)(a1 + 120) = v99;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v97 - 8))(a1 + 88, a2 + 88, v97);
      }
      else
      {
        long long v134 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v134;
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
      }
      long long v135 = (_OWORD *)(a1 + 128);
      v136 = (_OWORD *)(a2 + 128);
      uint64_t v137 = *(void *)(a2 + 152);
      if (v137)
      {
        uint64_t v138 = *(void *)(a2 + 160);
        *(void *)(a1 + 152) = v137;
        *(void *)(a1 + 160) = v138;
        (**(void (***)(_OWORD *, _OWORD *))(v137 - 8))(v135, v136);
      }
      else
      {
        long long v156 = *(_OWORD *)(a2 + 144);
        *long long v135 = *v136;
        *(_OWORD *)(a1 + 144) = v156;
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
      }
      long long v157 = (_OWORD *)(a1 + 168);
      v158 = (_OWORD *)(a2 + 168);
      uint64_t v159 = *(void *)(a2 + 192);
      if (v159)
      {
        uint64_t v160 = *(void *)(a2 + 200);
        *(void *)(a1 + 192) = v159;
        *(void *)(a1 + 200) = v160;
        (**(void (***)(_OWORD *, _OWORD *))(v159 - 8))(v157, v158);
      }
      else
      {
        long long v161 = *(_OWORD *)(a2 + 184);
        *long long v157 = *v158;
        *(_OWORD *)(a1 + 184) = v161;
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
      }
      goto LABEL_136;
    case 0xAu:
      uint64_t v65 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v65;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      unint64_t v66 = (void *)(a2 + 24);
      unint64_t v67 = *(void *)(a2 + 32);
      if (v67 >= 0x11)
      {
        *(void *)(a1 + 24) = *v66;
        *(void *)(a1 + 32) = v67;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v66;
      }
      uint64_t v100 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v100;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_136;
    case 0xBu:
      uint64_t v68 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v68;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      unint64_t v69 = (void *)(a2 + 24);
      unint64_t v70 = *(void *)(a2 + 32);
      if (v70 >= 0x11)
      {
        *(void *)(a1 + 24) = *v69;
        *(void *)(a1 + 32) = v70;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v69;
      }
      break;
    case 0xCu:
      uint64_t v71 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v71;
      uint64_t v72 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      uint64_t v73 = a1 + v72;
      uint64_t v74 = a2 + v72;
      uint64_t v75 = sub_1C151D6DC();
      uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16);
      swift_bridgeObjectRetain();
      v76(v73, v74, v75);
      goto LABEL_136;
    default:
      uint64_t v4 = *(void **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      swift_unknownObjectRetain();
      id v5 = v4;
      goto LABEL_136;
  }
  uint64_t v101 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v101;
  uint64_t v102 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v103 = a1 + v102;
  uint64_t v104 = a2 + v102;
  *(void *)(a1 + v102) = *(void *)(a2 + v102);
  uint64_t v105 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v106 = (void *)(v103 + v105);
  uint64_t v107 = (void *)(v104 + v105);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v166 = type metadata accessor for PuzzleStatisticValue(0);
      int v167 = swift_getEnumCaseMultiPayload();
      if (v167 == 5)
      {
        uint64_t v168 = type metadata accessor for PuzzleStreak();
        uint64_t v169 = *(void *)(v168 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v169 + 48))(v107, 1, v168))
        {
LABEL_71:
          sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v106, v107, *(void *)(*(void *)(v170 - 8) + 64));
          goto LABEL_115;
        }
      }
      else
      {
        if (v167 != 4)
        {
          memcpy(v106, v107, *(void *)(*(void *)(v166 - 8) + 64));
          goto LABEL_116;
        }
        uint64_t v168 = type metadata accessor for PuzzleStreak();
        uint64_t v169 = *(void *)(v168 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v169 + 48))(v107, 1, v168)) {
          goto LABEL_71;
        }
      }
      uint64_t v258 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v258 - 8) + 16))(v106, v107, v258);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v169 + 56))(v106, 0, 1, v168);
LABEL_115:
      swift_storeEnumTagMultiPayload();
LABEL_116:
      uint64_t v259 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v260 = *(int *)(v259 + 20);
      uint64_t v261 = (char *)v106 + v260;
      v262 = (char *)v107 + v260;
      int v263 = swift_getEnumCaseMultiPayload();
      if (v263 == 5)
      {
        uint64_t v264 = type metadata accessor for PuzzleStreak();
        uint64_t v265 = *(void *)(v264 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v265 + 48))(v262, 1, v264))
        {
LABEL_121:
          sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v261, v262, *(void *)(*(void *)(v266 - 8) + 64));
          goto LABEL_124;
        }
      }
      else
      {
        if (v263 != 4)
        {
          memcpy(v261, v262, *(void *)(*(void *)(v166 - 8) + 64));
          goto LABEL_125;
        }
        uint64_t v264 = type metadata accessor for PuzzleStreak();
        uint64_t v265 = *(void *)(v264 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v265 + 48))(v262, 1, v264)) {
          goto LABEL_121;
        }
      }
      uint64_t v267 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 16))(v261, v262, v267);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v265 + 56))(v261, 0, 1, v264);
LABEL_124:
      swift_storeEnumTagMultiPayload();
LABEL_125:
      uint64_t v268 = *(int *)(v259 + 24);
      uint64_t v269 = (char *)v106 + v268;
      uint64_t v107 = (void *)((char *)v107 + v268);
      int v270 = swift_getEnumCaseMultiPayload();
      if (v270 == 5)
      {
        uint64_t v271 = type metadata accessor for PuzzleStreak();
        uint64_t v272 = *(void *)(v271 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v272 + 48))(v107, 1, v271))
        {
LABEL_130:
          sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v269, v107, *(void *)(*(void *)(v273 - 8) + 64));
          goto LABEL_134;
        }
      }
      else
      {
        if (v270 != 4)
        {
          size_t v165 = *(void *)(*(void *)(v166 - 8) + 64);
          long long v250 = v269;
          goto LABEL_132;
        }
        uint64_t v271 = type metadata accessor for PuzzleStreak();
        uint64_t v272 = *(void *)(v271 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v272 + 48))(v107, 1, v271)) {
          goto LABEL_130;
        }
      }
      uint64_t v274 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v274 - 8) + 16))(v269, v107, v274);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v272 + 56))(v269, 0, 1, v271);
      goto LABEL_134;
    case 2u:
      long long v162 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v163 = *((void *)v162 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v163 + 48))(v107, 1, v162))
      {
        sub_1C01F07F8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        size_t v165 = *(void *)(*(void *)(v164 - 8) + 64);
        goto LABEL_105;
      }
      uint64_t v202 = sub_1C151631C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v202 - 8) + 16))(v106, v107, v202);
      uint64_t v203 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v204 = v203[5];
      uint64_t v205 = (void *)((char *)v106 + v204);
      v206 = (void *)((char *)v107 + v204);
      uint64_t v207 = v206[1];
      *uint64_t v205 = *v206;
      v205[1] = v207;
      uint64_t v208 = v203[6];
      uint64_t v209 = (char *)v106 + v208;
      v210 = (void *)((char *)v107 + v208);
      uint64_t v211 = v210[1];
      *(void *)uint64_t v209 = *v210;
      *((void *)v209 + 1) = v211;
      uint64_t v212 = v210 + 2;
      unint64_t v213 = v210[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v213 >> 60 == 15)
      {
        *((_OWORD *)v209 + 1) = *(_OWORD *)v212;
      }
      else
      {
        uint64_t v251 = *v212;
        sub_1BFE95820(*v212, v213);
        *((void *)v209 + 2) = v251;
        *((void *)v209 + 3) = v213;
      }
      *(void *)((char *)v106 + v203[7]) = *(void *)((char *)v107 + v203[7]);
      *(void *)((char *)v106 + v203[8]) = *(void *)((char *)v107 + v203[8]);
      *(void *)((char *)v106 + v162[5]) = *(void *)((char *)v107 + v162[5]);
      *(void *)((char *)v106 + v162[6]) = *(void *)((char *)v107 + v162[6]);
      uint64_t v252 = v162[7];
      uint64_t v253 = (void *)((char *)v106 + v252);
      v254 = (void *)((char *)v107 + v252);
      uint64_t v255 = v254[1];
      *uint64_t v253 = *v254;
      v253[1] = v255;
      uint64_t v256 = *(void (**)(void *, void, uint64_t, int *))(v163 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v256(v106, 0, 1, v162);
      goto LABEL_135;
    case 3u:
      uint64_t v171 = v107[1];
      *uint64_t v106 = *v107;
      v106[1] = v171;
      *((unsigned char *)v106 + 16) = *((unsigned char *)v107 + 16);
      uint64_t v172 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v173 = v172[6];
      uint64_t v174 = (char *)v106 + v173;
      v175 = (char *)v107 + v173;
      uint64_t v176 = type metadata accessor for PuzzleStreak();
      uint64_t v177 = *(void *)(v176 - 8);
      uint64_t v178 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48);
      if (v178(v175, 1, v176))
      {
        sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v174, v175, *(void *)(*(void *)(v179 - 8) + 64));
      }
      else
      {
        uint64_t v214 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16))(v174, v175, v214);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v174, 0, 1, v176);
      }
      uint64_t v215 = v172[7];
      uint64_t v216 = (char *)v106 + v215;
      v217 = (char *)v107 + v215;
      if (v178((char *)v107 + v215, 1, v176))
      {
        sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v216, v217, *(void *)(*(void *)(v218 - 8) + 64));
      }
      else
      {
        uint64_t v237 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 16))(v216, v217, v237);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v216, 0, 1, v176);
      }
      uint64_t v238 = v172[8];
      uint64_t v239 = (_OWORD *)((char *)v106 + v238);
      v240 = (_OWORD *)((char *)v107 + v238);
      long long v241 = v240[1];
      *uint64_t v239 = *v240;
      v239[1] = v241;
      *(_OWORD *)((char *)v239 + 25) = *(_OWORD *)((char *)v240 + 25);
      uint64_t v242 = v172[9];
      uint64_t v243 = (_OWORD *)((char *)v106 + v242);
      v244 = (_OWORD *)((char *)v107 + v242);
      *(_OWORD *)((char *)v243 + 25) = *(_OWORD *)((char *)v244 + 25);
      long long v245 = v244[1];
      *uint64_t v243 = *v244;
      v243[1] = v245;
      uint64_t v246 = v172[10];
      uint64_t v247 = (_OWORD *)((char *)v106 + v246);
      v248 = (_OWORD *)((char *)v107 + v246);
      long long v249 = v248[1];
      *uint64_t v247 = *v248;
      v247[1] = v249;
      *(_OWORD *)((char *)v247 + 25) = *(_OWORD *)((char *)v248 + 25);
      goto LABEL_135;
    default:
      uint64_t v108 = type metadata accessor for PuzzleStatisticValue(0);
      int v109 = swift_getEnumCaseMultiPayload();
      if (v109 == 5)
      {
        uint64_t v110 = type metadata accessor for PuzzleStreak();
        uint64_t v111 = *(void *)(v110 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v111 + 48))(v107, 1, v110)) {
          goto LABEL_39;
        }
      }
      else
      {
        if (v109 != 4)
        {
          size_t v165 = *(void *)(*(void *)(v108 - 8) + 64);
LABEL_105:
          long long v250 = (char *)v106;
LABEL_132:
          memcpy(v250, v107, v165);
          goto LABEL_135;
        }
        uint64_t v110 = type metadata accessor for PuzzleStreak();
        uint64_t v111 = *(void *)(v110 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v111 + 48))(v107, 1, v110))
        {
LABEL_39:
          sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v106, v107, *(void *)(*(void *)(v112 - 8) + 64));
          goto LABEL_134;
        }
      }
      uint64_t v257 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v257 - 8) + 16))(v106, v107, v257);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v106, 0, 1, v110);
LABEL_134:
      swift_storeEnumTagMultiPayload();
LABEL_135:
      swift_storeEnumTagMultiPayload();
LABEL_136:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t sub_1C01F60AC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C01F085C(a1, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    type metadata accessor for FeedGroupItem();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
        uint64_t v7 = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 32) = v7;
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        uint64_t v8 = *(void **)(a2 + 56);
        *(void *)(a1 + 56) = v8;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        uint64_t v9 = *(void *)(a2 + 80);
        id v10 = v6;
        swift_bridgeObjectRetain();
        id v11 = v8;
        if (v9 == 1)
        {
          long long v12 = *(_OWORD *)(a2 + 72);
          long long v13 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v13;
          *(_OWORD *)(a1 + 72) = v12;
        }
        else
        {
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          uint64_t v54 = *(void **)(a2 + 104);
          *(void *)(a1 + 104) = v54;
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v55 = v54;
        }
        if (*(void *)(a2 + 128) >= 0x11uLL)
        {
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        }
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        goto LABEL_137;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        uint64_t v14 = (int *)type metadata accessor for FeedWeather(0);
        uint64_t v15 = v14[7];
        uint64_t v16 = a1 + v15;
        uint64_t v17 = a2 + v15;
        uint64_t v18 = sub_1C151E2BC();
        uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        *(unsigned char *)(a1 + v14[8]) = *(unsigned char *)(a2 + v14[8]);
        uint64_t v20 = v14[9];
        uint64_t v21 = a1 + v20;
        uint64_t v22 = a2 + v20;
        sub_1C01F07F8(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
        uint64_t v24 = v23;
        uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16);
        v25(v21, v22, v23);
        uint64_t v26 = (int *)type metadata accessor for FeedWeather.Temperature(0);
        v25(v21 + v26[5], v22 + v26[5], v24);
        v25(v21 + v26[6], v22 + v26[6], v24);
        v25(v21 + v26[7], v22 + v26[7], v24);
        uint64_t v27 = v14[10];
        uint64_t v28 = (void *)(a1 + v27);
        uint64_t v29 = (void *)(a2 + v27);
        *uint64_t v28 = *v29;
        v28[1] = v29[1];
        swift_bridgeObjectRetain();
        goto LABEL_137;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
        *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        uint64_t v30 = *(void *)(a2 + 176);
        *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
        *(void *)(a1 + 176) = v30;
        *(void *)(a1 + 192) = *(void *)(a2 + 192);
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        uint64_t v31 = *(void *)(a2 + 216);
        *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
        *(void *)(a1 + 216) = v31;
        unint64_t v250 = *(void *)(a2 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v250 >= 0x11)
        {
          *(void *)(a1 + 232) = *(void *)(a2 + 232);
          *(void *)(a1 + 240) = *(void *)(a2 + 240);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
        }
        goto LABEL_137;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v32 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v32;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        long long v249 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v33 = v249[10];
        uint64_t v34 = (unsigned char *)(a1 + v33);
        uint64_t v35 = a2 + v33;
        *uint64_t v34 = *(unsigned char *)(a2 + v33);
        v34[1] = *(unsigned char *)(a2 + v33 + 1);
        uint64_t v36 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v37 = v36[6];
        __dst = &v34[v37];
        uint64_t v38 = (char *)(v35 + v37);
        uint64_t v39 = (int *)type metadata accessor for SharedItem();
        uint64_t v245 = *((void *)v39 - 1);
        uint64_t v40 = *(unsigned int (**)(char *, uint64_t, int *))(v245 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v40(v38, 1, v39))
        {
          uint64_t v41 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v38, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v81 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(__dst, v38, v81);
          __dst[v39[5]] = v38[v39[5]];
          uint64_t v82 = v39[6];
          uint64_t v83 = *(void **)&v38[v82];
          *(void *)&__dst[v82] = v83;
          uint64_t v84 = v39[7];
          uint64_t v252 = &v38[v84];
          uint64_t v253 = &__dst[v84];
          uint64_t v85 = sub_1C1515FDC();
          v244 = *(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16);
          id v86 = v83;
          v244(v253, v252, v85);
          (*(void (**)(char *, void, uint64_t, int *))(v245 + 56))(__dst, 0, 1, v39);
        }
        v34[v36[7]] = *(unsigned char *)(v35 + v36[7]);
        v34[v36[8]] = *(unsigned char *)(v35 + v36[8]);
        v34[v36[9]] = *(unsigned char *)(v35 + v36[9]);
        v34[v36[10]] = *(unsigned char *)(v35 + v36[10]);
        uint64_t v87 = v249[11];
        uint64_t v88 = (void *)(a1 + v87);
        uint64_t v89 = (const void *)(a2 + v87);
        uint64_t v90 = sub_1C151D2DC();
        uint64_t v91 = *(void *)(v90 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
        {
          sub_1C01F07F8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v91 + 16))(v88, v89, v90);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        }
        uint64_t v106 = v249[12];
        uint64_t v107 = (void *)(a1 + v106);
        uint64_t v108 = (void *)(a2 + v106);
        if (v108[1] >= 0x11uLL)
        {
          void *v107 = *v108;
          v107[1] = v108[1];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
        }
        uint64_t v109 = v249[13];
        unint64_t v110 = *(void *)(a2 + v109);
        if (v110 >= 2)
        {
          if (v110 == 2)
          {
            *(void *)(a1 + v109) = 2;
          }
          else
          {
            *(void *)(a1 + v109) = v110;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)(a1 + v109) = v110;
        }
        uint64_t v146 = v249[14];
        uint64_t v147 = *(void **)(a2 + v146);
        *(void *)(a1 + v146) = v147;
        id v148 = v147;
        goto LABEL_137;
      case 6u:
        *(void *)a1 = *(void *)a2;
        uint64_t v42 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v42;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        uint64_t v56 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v57 = v56[8];
        uint64_t v58 = a1 + v57;
        uint64_t v59 = a2 + v57;
        uint64_t v60 = sub_1C1515FDC();
        uint64_t v61 = *(void *)(v60 - 8);
        uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16);
        swift_bridgeObjectRetain();
        v62(v58, v59, v60);
        uint64_t v63 = v56[9];
        unint64_t v64 = (void *)(a1 + v63);
        uint64_t v65 = (const void *)(a2 + v63);
        uint64_t v251 = v60;
        __dsta = (void (*)(char *, char *, uint64_t))v62;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(a2 + v63, 1, v60))
        {
          sub_1C01F07F8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          v62((uint64_t)v64, (uint64_t)v65, v60);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56))(v64, 0, 1, v60);
        }
        *(void *)(a1 + v56[10]) = *(void *)(a2 + v56[10]);
        *(void *)(a1 + v56[11]) = *(void *)(a2 + v56[11]);
        uint64_t v93 = v56[12];
        uint64_t v94 = (void *)(a1 + v93);
        v254 = v56;
        uint64_t v95 = (void *)(a2 + v93);
        uint64_t v96 = type metadata accessor for FeedHeadline(0);
        uint64_t v97 = *(void *)(v96 - 8);
        id v98 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v97 + 48);
        swift_retain();
        swift_retain();
        if (v98(v95, 1, v96))
        {
          sub_1BFFFCF8C(0);
          memcpy(v94, v95, *(void *)(*(void *)(v99 - 8) + 64));
          uint64_t v100 = v254;
        }
        else
        {
          uint64_t v242 = v97;
          uint64_t v243 = (int *)v96;
          void *v94 = *v95;
          uint64_t v246 = v95;
          v94[1] = v95[1];
          uint64_t v111 = v95[2];
          *((unsigned char *)v94 + 24) = *((unsigned char *)v95 + 24);
          v94[2] = v111;
          v94[4] = v95[4];
          v94[5] = v95[5];
          v94[6] = v95[6];
          *((unsigned char *)v94 + 56) = *((unsigned char *)v95 + 56);
          uint64_t v112 = *(int *)(v96 + 40);
          uint64_t v113 = (char *)v94 + v112;
          uint64_t v114 = (char *)v95 + v112;
          *uint64_t v113 = *((unsigned char *)v95 + v112);
          v113[1] = *((unsigned char *)v95 + v112 + 1);
          uint64_t v115 = type metadata accessor for FeedHeadline.State(0);
          uint64_t v116 = *(int *)(v115 + 24);
          v240 = &v113[v116];
          long long v241 = (int *)v115;
          uint64_t v117 = &v114[v116];
          uint64_t v118 = (int *)type metadata accessor for SharedItem();
          uint64_t v239 = *((void *)v118 - 1);
          id v119 = *(unsigned int (**)(char *, uint64_t, int *))(v239 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v119(v117, 1, v118))
          {
            uint64_t v120 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v240, v117, *(void *)(*(void *)(v120 - 8) + 64));
          }
          else
          {
            uint64_t v149 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16))(v240, v117, v149);
            v240[v118[5]] = v117[v118[5]];
            uint64_t v150 = v118[6];
            uint64_t v151 = *(void **)&v117[v150];
            *(void *)&v240[v150] = v151;
            uint64_t v152 = v118[7];
            long long v153 = &v240[v152];
            long long v154 = &v117[v152];
            id v155 = v151;
            __dsta(v153, v154, v251);
            (*(void (**)(char *, void, uint64_t, int *))(v239 + 56))(v240, 0, 1, v118);
          }
          v113[v241[7]] = v114[v241[7]];
          v113[v241[8]] = v114[v241[8]];
          v113[v241[9]] = v114[v241[9]];
          v113[v241[10]] = v114[v241[10]];
          uint64_t v156 = v243[11];
          long long v157 = (char *)v94 + v156;
          v158 = (char *)v95 + v156;
          uint64_t v159 = sub_1C151D2DC();
          uint64_t v160 = *(void *)(v159 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48))(v158, 1, v159))
          {
            sub_1C01F07F8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v157, v158, *(void *)(*(void *)(v161 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v157, v158, v159);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v157, 0, 1, v159);
          }
          uint64_t v100 = v254;
          uint64_t v162 = v243[12];
          uint64_t v163 = (void *)((char *)v94 + v162);
          uint64_t v164 = (void *)((char *)v246 + v162);
          if (v164[1] >= 0x11uLL)
          {
            void *v163 = *v164;
            v163[1] = v164[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v163 = *(_OWORD *)v164;
          }
          uint64_t v165 = v243[13];
          unint64_t v166 = *(void *)((char *)v246 + v165);
          if (v166 >= 2)
          {
            if (v166 == 2)
            {
              *(void *)((char *)v94 + v165) = 2;
            }
            else
            {
              *(void *)((char *)v94 + v165) = v166;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)((char *)v94 + v165) = v166;
          }
          uint64_t v182 = v243[14];
          uint64_t v183 = *(void **)((char *)v246 + v182);
          *(void *)((char *)v94 + v182) = v183;
          uint64_t v184 = *(void (**)(void *, void, uint64_t, int *))(v242 + 56);
          id v185 = v183;
          v184(v94, 0, 1, v243);
        }
        uint64_t v186 = v100[13];
        uint64_t v187 = (void *)(a1 + v186);
        v188 = (void *)(a2 + v186);
        uint64_t v189 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v190 = *(void *)(v189 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189))
        {
          sub_1C01F07F8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(v187, v188, *(void *)(*(void *)(v191 - 8) + 64));
        }
        else
        {
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *uint64_t v187 = *v188;
          if (EnumCaseMultiPayload == 1)
          {
            v187[1] = v188[1];
            uint64_t v193 = type metadata accessor for GenericDataVisualization();
            uint64_t v194 = *(int *)(v193 + 20);
            uint64_t v195 = (char *)v187 + v194;
            uint64_t v196 = (char *)v188 + v194;
            swift_bridgeObjectRetain();
            uint64_t v197 = v196;
            uint64_t v100 = v254;
            __dsta(v195, v197, v251);
            *(void *)((char *)v187 + *(int *)(v193 + 24)) = *(void *)((char *)v188 + *(int *)(v193 + 24));
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(void *, void, uint64_t, uint64_t))(v190 + 56))(v187, 0, 1, v189);
        }
        *(unsigned char *)(a1 + v100[14]) = *(unsigned char *)(a2 + v100[14]);
        goto LABEL_137;
      case 7u:
        unint64_t v43 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v44 = v43;
        goto LABEL_137;
      case 8u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        uint64_t v45 = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 24) = v45;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_137;
      case 9u:
        *(void *)a1 = *(void *)a2;
        uint64_t v46 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v46;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        unint64_t v67 = *(void **)(a2 + 64);
        *(void *)(a1 + 64) = v67;
        *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        uint64_t v68 = *(void *)(a2 + 112);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        id v69 = v67;
        swift_bridgeObjectRetain();
        if (v68)
        {
          *(void *)(a1 + 112) = v68;
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v68 - 8))(a1 + 88, a2 + 88, v68);
        }
        else
        {
          long long v101 = *(_OWORD *)(a2 + 88);
          long long v102 = *(_OWORD *)(a2 + 104);
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(_OWORD *)(a1 + 88) = v101;
          *(_OWORD *)(a1 + 104) = v102;
        }
        uint64_t v103 = (_OWORD *)(a1 + 128);
        uint64_t v104 = (long long *)(a2 + 128);
        uint64_t v105 = *(void *)(a2 + 152);
        if (v105)
        {
          *(void *)(a1 + 152) = v105;
          *(void *)(a1 + 160) = *(void *)(a2 + 160);
          (**(void (***)(_OWORD *, long long *))(v105 - 8))(v103, v104);
        }
        else
        {
          long long v121 = *v104;
          long long v122 = *(_OWORD *)(a2 + 144);
          *(void *)(a1 + 160) = *(void *)(a2 + 160);
          *uint64_t v103 = v121;
          *(_OWORD *)(a1 + 144) = v122;
        }
        uint64_t v123 = (_OWORD *)(a1 + 168);
        uint64_t v124 = (long long *)(a2 + 168);
        uint64_t v125 = *(void *)(a2 + 192);
        if (v125)
        {
          *(void *)(a1 + 192) = v125;
          *(void *)(a1 + 200) = *(void *)(a2 + 200);
          (**(void (***)(_OWORD *, long long *))(v125 - 8))(v123, v124);
        }
        else
        {
          long long v126 = *v124;
          long long v127 = *(_OWORD *)(a2 + 184);
          *(void *)(a1 + 200) = *(void *)(a2 + 200);
          *uint64_t v123 = v126;
          *(_OWORD *)(a1 + 184) = v127;
        }
        goto LABEL_137;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        uint64_t v47 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v47;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_137;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        uint64_t v48 = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v48;
        if (*(void *)(a2 + 32) >= 0x11uLL)
        {
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        break;
      case 0xCu:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v49 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        uint64_t v50 = a1 + v49;
        uint64_t v51 = a2 + v49;
        uint64_t v52 = sub_1C151D6DC();
        uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v53(v50, v51, v52);
        goto LABEL_137;
      default:
        *(void *)a1 = *(void *)a2;
        uint64_t v4 = *(void **)(a2 + 8);
        *(void *)(a1 + 8) = v4;
        *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
        swift_unknownObjectRetain();
        id v5 = v4;
        goto LABEL_137;
    }
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    uint64_t v70 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
    uint64_t v71 = a1 + v70;
    uint64_t v72 = a2 + v70;
    *(void *)(a1 + v70) = *(void *)(a2 + v70);
    uint64_t v73 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
    uint64_t v74 = (void *)(v71 + v73);
    uint64_t v75 = (void *)(v72 + v73);
    type metadata accessor for PuzzleStatisticCategory(0);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v132 = type metadata accessor for PuzzleStatisticValue(0);
        int v133 = swift_getEnumCaseMultiPayload();
        if (v133 == 5)
        {
          uint64_t v134 = type metadata accessor for PuzzleStreak();
          uint64_t v135 = *(void *)(v134 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v135 + 48))(v75, 1, v134))
          {
LABEL_72:
            sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v74, v75, *(void *)(*(void *)(v136 - 8) + 64));
            goto LABEL_116;
          }
        }
        else
        {
          if (v133 != 4)
          {
            memcpy(v74, v75, *(void *)(*(void *)(v132 - 8) + 64));
            goto LABEL_117;
          }
          uint64_t v134 = type metadata accessor for PuzzleStreak();
          uint64_t v135 = *(void *)(v134 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v135 + 48))(v75, 1, v134)) {
            goto LABEL_72;
          }
        }
        uint64_t v221 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v221 - 8) + 16))(v74, v75, v221);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v135 + 56))(v74, 0, 1, v134);
LABEL_116:
        swift_storeEnumTagMultiPayload();
LABEL_117:
        uint64_t v222 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
        uint64_t v223 = *(int *)(v222 + 20);
        uint64_t v224 = (char *)v74 + v223;
        v225 = (char *)v75 + v223;
        int v226 = swift_getEnumCaseMultiPayload();
        if (v226 == 5)
        {
          uint64_t v227 = type metadata accessor for PuzzleStreak();
          uint64_t v228 = *(void *)(v227 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v228 + 48))(v225, 1, v227))
          {
LABEL_122:
            sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v224, v225, *(void *)(*(void *)(v229 - 8) + 64));
            goto LABEL_125;
          }
        }
        else
        {
          if (v226 != 4)
          {
            memcpy(v224, v225, *(void *)(*(void *)(v132 - 8) + 64));
            goto LABEL_126;
          }
          uint64_t v227 = type metadata accessor for PuzzleStreak();
          uint64_t v228 = *(void *)(v227 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v228 + 48))(v225, 1, v227)) {
            goto LABEL_122;
          }
        }
        uint64_t v230 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 16))(v224, v225, v230);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v228 + 56))(v224, 0, 1, v227);
LABEL_125:
        swift_storeEnumTagMultiPayload();
LABEL_126:
        uint64_t v231 = *(int *)(v222 + 24);
        uint64_t v232 = (char *)v74 + v231;
        uint64_t v75 = (void *)((char *)v75 + v231);
        int v233 = swift_getEnumCaseMultiPayload();
        if (v233 == 5)
        {
          uint64_t v234 = type metadata accessor for PuzzleStreak();
          uint64_t v235 = *(void *)(v234 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v235 + 48))(v75, 1, v234))
          {
LABEL_131:
            sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v232, v75, *(void *)(*(void *)(v236 - 8) + 64));
            goto LABEL_135;
          }
        }
        else
        {
          if (v233 != 4)
          {
            size_t v131 = *(void *)(*(void *)(v132 - 8) + 64);
            uint64_t v214 = v232;
            goto LABEL_133;
          }
          uint64_t v234 = type metadata accessor for PuzzleStreak();
          uint64_t v235 = *(void *)(v234 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v235 + 48))(v75, 1, v234)) {
            goto LABEL_131;
          }
        }
        uint64_t v237 = sub_1C151555C();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v237 - 8) + 16))(v232, v75, v237);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v235 + 56))(v232, 0, 1, v234);
        goto LABEL_135;
      case 2u:
        uint64_t v128 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
        uint64_t v129 = *((void *)v128 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v129 + 48))(v75, 1, v128))
        {
          sub_1C01F07F8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
          size_t v131 = *(void *)(*(void *)(v130 - 8) + 64);
          goto LABEL_106;
        }
        uint64_t v167 = sub_1C151631C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v167 - 8) + 16))(v74, v75, v167);
        uint64_t v168 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
        uint64_t v169 = v168[5];
        uint64_t v170 = (void *)((char *)v74 + v169);
        uint64_t v171 = (void *)((char *)v75 + v169);
        *uint64_t v170 = *v171;
        v170[1] = v171[1];
        uint64_t v172 = v168[6];
        uint64_t v173 = (char *)v74 + v172;
        uint64_t v174 = (void *)((char *)v75 + v172);
        *(void *)uint64_t v173 = *v174;
        *((void *)v173 + 1) = v174[1];
        v175 = v174 + 2;
        unint64_t v176 = v174[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v176 >> 60 == 15)
        {
          *((_OWORD *)v173 + 1) = *(_OWORD *)v175;
        }
        else
        {
          uint64_t v215 = *v175;
          sub_1BFE95820(*v175, v176);
          *((void *)v173 + 2) = v215;
          *((void *)v173 + 3) = v176;
        }
        *(void *)((char *)v74 + v168[7]) = *(void *)((char *)v75 + v168[7]);
        *(void *)((char *)v74 + v168[8]) = *(void *)((char *)v75 + v168[8]);
        *(void *)((char *)v74 + v128[5]) = *(void *)((char *)v75 + v128[5]);
        *(void *)((char *)v74 + v128[6]) = *(void *)((char *)v75 + v128[6]);
        uint64_t v216 = v128[7];
        v217 = (void *)((char *)v74 + v216);
        uint64_t v218 = (void *)((char *)v75 + v216);
        void *v217 = *v218;
        v217[1] = v218[1];
        uint64_t v219 = *(void (**)(void *, void, uint64_t, int *))(v129 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v219(v74, 0, 1, v128);
        goto LABEL_136;
      case 3u:
        *uint64_t v74 = *v75;
        uint64_t v137 = v75[1];
        *((unsigned char *)v74 + 16) = *((unsigned char *)v75 + 16);
        v74[1] = v137;
        uint64_t v138 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
        uint64_t v139 = v138[6];
        uint64_t v140 = (char *)v74 + v139;
        long long v141 = (char *)v75 + v139;
        uint64_t v142 = type metadata accessor for PuzzleStreak();
        uint64_t v143 = *(void *)(v142 - 8);
        unint64_t v144 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48);
        if (v144(v141, 1, v142))
        {
          sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v140, v141, *(void *)(*(void *)(v145 - 8) + 64));
        }
        else
        {
          uint64_t v177 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v140, v141, v177);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
        }
        uint64_t v178 = v138[7];
        uint64_t v179 = (char *)v74 + v178;
        uint64_t v180 = (char *)v75 + v178;
        if (v144((char *)v75 + v178, 1, v142))
        {
          sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v179, v180, *(void *)(*(void *)(v181 - 8) + 64));
        }
        else
        {
          uint64_t v198 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v179, v180, v198);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v179, 0, 1, v142);
        }
        uint64_t v199 = v138[8];
        uint64_t v200 = (_OWORD *)((char *)v74 + v199);
        unint64_t v201 = (long long *)((char *)v75 + v199);
        long long v202 = *v201;
        long long v203 = v201[1];
        *(_OWORD *)((char *)v200 + 25) = *(long long *)((char *)v201 + 25);
        *uint64_t v200 = v202;
        v200[1] = v203;
        uint64_t v204 = v138[9];
        uint64_t v205 = (_OWORD *)((char *)v74 + v204);
        v206 = (long long *)((char *)v75 + v204);
        long long v207 = *v206;
        long long v208 = v206[1];
        *(_OWORD *)((char *)v205 + 25) = *(long long *)((char *)v206 + 25);
        *uint64_t v205 = v207;
        v205[1] = v208;
        uint64_t v209 = v138[10];
        v210 = (_OWORD *)((char *)v74 + v209);
        uint64_t v211 = (long long *)((char *)v75 + v209);
        long long v212 = *v211;
        long long v213 = v211[1];
        *(_OWORD *)((char *)v210 + 25) = *(long long *)((char *)v211 + 25);
        _OWORD *v210 = v212;
        v210[1] = v213;
        goto LABEL_136;
      default:
        uint64_t v76 = type metadata accessor for PuzzleStatisticValue(0);
        int v77 = swift_getEnumCaseMultiPayload();
        if (v77 == 5)
        {
          uint64_t v78 = type metadata accessor for PuzzleStreak();
          uint64_t v79 = *(void *)(v78 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v79 + 48))(v75, 1, v78)) {
            goto LABEL_40;
          }
        }
        else
        {
          if (v77 != 4)
          {
            size_t v131 = *(void *)(*(void *)(v76 - 8) + 64);
LABEL_106:
            uint64_t v214 = (char *)v74;
LABEL_133:
            memcpy(v214, v75, v131);
            goto LABEL_136;
          }
          uint64_t v78 = type metadata accessor for PuzzleStreak();
          uint64_t v79 = *(void *)(v78 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v79 + 48))(v75, 1, v78))
          {
LABEL_40:
            sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v74, v75, *(void *)(*(void *)(v80 - 8) + 64));
            goto LABEL_135;
          }
        }
        uint64_t v220 = sub_1C151555C();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v220 - 8) + 16))(v74, v75, v220);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v74, 0, 1, v78);
LABEL_135:
        swift_storeEnumTagMultiPayload();
LABEL_136:
        swift_storeEnumTagMultiPayload();
LABEL_137:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

_OWORD *sub_1C01F85AC(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for FeedGroupItem();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      long long v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v6 = (int *)type metadata accessor for FeedWeather(0);
      uint64_t v7 = v6[7];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1C151E2BC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
      uint64_t v11 = v6[9];
      long long v12 = (char *)a1 + v11;
      long long v13 = (char *)a2 + v11;
      sub_1C01F07F8(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
      uint64_t v15 = v14;
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
      v16(v12, v13, v14);
      uint64_t v17 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v16(&v12[v17[5]], &v13[v17[5]], v15);
      v16(&v12[v17[6]], &v13[v17[6]], v15);
      v16(&v12[v17[7]], &v13[v17[7]], v15);
      *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
      goto LABEL_85;
    case 5u:
      *a1 = *a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      uint64_t v18 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v19 = v18[10];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      *uint64_t v20 = *((unsigned char *)a2 + v19);
      v20[1] = *((unsigned char *)a2 + v19 + 1);
      uint64_t v22 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v23 = v22[6];
      uint64_t v24 = &v20[v23];
      uint64_t v25 = &v21[v23];
      uint64_t v26 = (int *)type metadata accessor for SharedItem();
      uint64_t v27 = *((void *)v26 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
      {
        uint64_t v28 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v57 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v24, v25, v57);
        v24[v26[5]] = v25[v26[5]];
        *(void *)&v24[v26[6]] = *(void *)&v25[v26[6]];
        uint64_t v58 = v26[7];
        uint64_t v167 = &v24[v58];
        uint64_t v59 = &v25[v58];
        uint64_t v60 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v167, v59, v60);
        (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
      }
      v20[v22[7]] = v21[v22[7]];
      v20[v22[8]] = v21[v22[8]];
      v20[v22[9]] = v21[v22[9]];
      v20[v22[10]] = v21[v22[10]];
      uint64_t v61 = v18[11];
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      uint64_t v64 = sub_1C151D2DC();
      uint64_t v65 = *(void *)(v64 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
      {
        sub_1C01F07F8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
        memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
      }
      *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
      uint64_t v73 = v18[13];
      uint64_t v74 = *(void *)((char *)a2 + v73);
      if (v74 == 2) {
        uint64_t v74 = 2;
      }
      *(void *)((char *)a1 + v73) = v74;
      *(void *)((char *)a1 + v18[14]) = *(void *)((char *)a2 + v18[14]);
      goto LABEL_85;
    case 6u:
      uint64_t v29 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v29;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      uint64_t v30 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v31 = v30[8];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = sub_1C1515FDC();
      uint64_t v35 = *(void *)(v34 - 8);
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v36(v32, v33, v34);
      uint64_t v37 = v30[9];
      uint64_t v38 = (char *)a1 + v37;
      uint64_t v39 = (char *)a2 + v37;
      uint64_t v166 = v34;
      uint64_t v165 = v36;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))((char *)a2 + v37, 1, v34))
      {
        sub_1C01F07F8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        v36(v38, v39, v34);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v34);
      }
      *(void *)((char *)a1 + v30[10]) = *(void *)((char *)a2 + v30[10]);
      *(void *)((char *)a1 + v30[11]) = *(void *)((char *)a2 + v30[11]);
      uint64_t v67 = v30[12];
      uint64_t v68 = (_OWORD *)((char *)a1 + v67);
      id v69 = (_OWORD *)((char *)a2 + v67);
      uint64_t v70 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v71 = *((void *)v70 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v71 + 48))(v69, 1, v70))
      {
        sub_1BFFFCF8C(0);
        memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        uint64_t v162 = v71;
        uint64_t v163 = v30;
        *uint64_t v68 = *v69;
        *((void *)v68 + 2) = *((void *)v69 + 2);
        *((unsigned char *)v68 + 24) = *((unsigned char *)v69 + 24);
        *((void *)v68 + 4) = *((void *)v69 + 4);
        *(_OWORD *)((char *)v68 + 40) = *(_OWORD *)((char *)v69 + 40);
        *((unsigned char *)v68 + 56) = *((unsigned char *)v69 + 56);
        uint64_t v75 = v70[10];
        uint64_t v76 = (char *)v68 + v75;
        int v77 = (char *)v69 + v75;
        unsigned char *v76 = *((unsigned char *)v69 + v75);
        v76[1] = *((unsigned char *)v69 + v75 + 1);
        uint64_t v78 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v79 = v78[6];
        __dst = &v76[v79];
        uint64_t v80 = &v77[v79];
        uint64_t v81 = (int *)type metadata accessor for SharedItem();
        uint64_t v161 = *((void *)v81 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v161 + 48))(v80, 1, v81))
        {
          uint64_t v82 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v80, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          uint64_t v101 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(__dst, v80, v101);
          __dst[v81[5]] = v80[v81[5]];
          *(void *)&__dst[v81[6]] = *(void *)&v80[v81[6]];
          v165(&__dst[v81[7]], &v80[v81[7]], v166);
          (*(void (**)(char *, void, uint64_t, int *))(v161 + 56))(__dst, 0, 1, v81);
        }
        v76[v78[7]] = v77[v78[7]];
        v76[v78[8]] = v77[v78[8]];
        v76[v78[9]] = v77[v78[9]];
        v76[v78[10]] = v77[v78[10]];
        uint64_t v102 = v70[11];
        uint64_t v103 = (char *)v68 + v102;
        uint64_t v104 = (char *)v69 + v102;
        uint64_t v105 = sub_1C151D2DC();
        uint64_t v106 = *(void *)(v105 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
        {
          sub_1C01F07F8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v103, v104, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v103, v104, v105);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
        }
        uint64_t v30 = v163;
        *(_OWORD *)((char *)v68 + v70[12]) = *(_OWORD *)((char *)v69 + v70[12]);
        uint64_t v108 = v70[13];
        uint64_t v109 = *(void *)((char *)v69 + v108);
        if (v109 == 2) {
          uint64_t v109 = 2;
        }
        *(void *)((char *)v68 + v108) = v109;
        *(void *)((char *)v68 + v70[14]) = *(void *)((char *)v69 + v70[14]);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v162 + 56))(v68, 0, 1, v70);
      }
      uint64_t v110 = v30[13];
      uint64_t v111 = (_OWORD *)((char *)a1 + v110);
      uint64_t v112 = (_OWORD *)((char *)a2 + v110);
      uint64_t v113 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v114 = *(void *)(v113 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
      {
        sub_1C01F07F8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v111, v112, *(void *)(*(void *)(v115 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v111 = *v112;
          uint64_t v116 = type metadata accessor for GenericDataVisualization();
          v165((char *)v111 + *(int *)(v116 + 20), (char *)v112 + *(int *)(v116 + 20), v166);
          *(void *)((char *)v111 + *(int *)(v116 + 24)) = *(void *)((char *)v112 + *(int *)(v116 + 24));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v111, v112, *(void *)(v114 + 64));
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
      }
      *((unsigned char *)a1 + v30[14]) = *((unsigned char *)a2 + v30[14]);
      goto LABEL_85;
    case 0xBu:
      uint64_t v41 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v41;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      uint64_t v42 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      unint64_t v43 = (char *)a1 + v42;
      id v44 = (char *)a2 + v42;
      *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
      uint64_t v45 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v46 = &v43[v45];
      uint64_t v47 = &v44[v45];
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v87 = type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5)
          {
            uint64_t v89 = type metadata accessor for PuzzleStreak();
            uint64_t v90 = *(void *)(v89 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v47, 1, v89))
            {
LABEL_31:
              sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v46, v47, *(void *)(*(void *)(v91 - 8) + 64));
              goto LABEL_65;
            }
          }
          else
          {
            if (EnumCaseMultiPayload != 4)
            {
              memcpy(v46, v47, *(void *)(*(void *)(v87 - 8) + 64));
              goto LABEL_66;
            }
            uint64_t v89 = type metadata accessor for PuzzleStreak();
            uint64_t v90 = *(void *)(v89 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v47, 1, v89)) {
              goto LABEL_31;
            }
          }
          uint64_t v142 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v46, v47, v142);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v46, 0, 1, v89);
LABEL_65:
          swift_storeEnumTagMultiPayload();
LABEL_66:
          uint64_t v143 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v144 = *(int *)(v143 + 20);
          uint64_t v145 = &v46[v144];
          uint64_t v146 = &v47[v144];
          int v147 = swift_getEnumCaseMultiPayload();
          if (v147 == 5)
          {
            uint64_t v148 = type metadata accessor for PuzzleStreak();
            uint64_t v149 = *(void *)(v148 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v146, 1, v148))
            {
LABEL_71:
              sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v145, v146, *(void *)(*(void *)(v150 - 8) + 64));
              goto LABEL_74;
            }
          }
          else
          {
            if (v147 != 4)
            {
              memcpy(v145, v146, *(void *)(*(void *)(v87 - 8) + 64));
              goto LABEL_75;
            }
            uint64_t v148 = type metadata accessor for PuzzleStreak();
            uint64_t v149 = *(void *)(v148 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v146, 1, v148)) {
              goto LABEL_71;
            }
          }
          uint64_t v151 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v145, v146, v151);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v145, 0, 1, v148);
LABEL_74:
          swift_storeEnumTagMultiPayload();
LABEL_75:
          uint64_t v152 = *(int *)(v143 + 24);
          long long v153 = &v46[v152];
          long long v154 = &v47[v152];
          int v155 = swift_getEnumCaseMultiPayload();
          if (v155 == 5)
          {
            uint64_t v156 = type metadata accessor for PuzzleStreak();
            uint64_t v157 = *(void *)(v156 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v154, 1, v156))
            {
LABEL_80:
              sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v153, v154, *(void *)(*(void *)(v158 - 8) + 64));
              goto LABEL_83;
            }
          }
          else
          {
            if (v155 != 4)
            {
              memcpy(v153, v154, *(void *)(*(void *)(v87 - 8) + 64));
              goto LABEL_84;
            }
            uint64_t v156 = type metadata accessor for PuzzleStreak();
            uint64_t v157 = *(void *)(v156 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v154, 1, v156)) {
              goto LABEL_80;
            }
          }
          uint64_t v159 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v153, v154, v159);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v153, 0, 1, v156);
          goto LABEL_83;
        case 2u:
          uint64_t v83 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v84 = *((void *)v83 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v84 + 48))(v47, 1, v83))
          {
            sub_1C01F07F8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
            size_t v86 = *(void *)(*(void *)(v85 - 8) + 64);
            goto LABEL_57;
          }
          uint64_t v117 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v46, v47, v117);
          uint64_t v118 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          *(_OWORD *)&v46[v118[5]] = *(_OWORD *)&v47[v118[5]];
          uint64_t v119 = v118[6];
          uint64_t v120 = &v46[v119];
          long long v121 = &v47[v119];
          long long v122 = *((_OWORD *)v121 + 1);
          *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
          *((_OWORD *)v120 + 1) = v122;
          *(void *)&v46[v118[7]] = *(void *)&v47[v118[7]];
          *(void *)&v46[v118[8]] = *(void *)&v47[v118[8]];
          *(void *)&v46[v83[5]] = *(void *)&v47[v83[5]];
          *(void *)&v46[v83[6]] = *(void *)&v47[v83[6]];
          *(_OWORD *)&v46[v83[7]] = *(_OWORD *)&v47[v83[7]];
          (*(void (**)(char *, void, uint64_t, int *))(v84 + 56))(v46, 0, 1, v83);
          goto LABEL_84;
        case 3u:
          uint64_t v92 = *((void *)v47 + 1);
          *(void *)uint64_t v46 = *(void *)v47;
          *((void *)v46 + 1) = v92;
          v46[16] = v47[16];
          uint64_t v93 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v94 = v93[6];
          uint64_t v95 = &v46[v94];
          uint64_t v96 = &v47[v94];
          uint64_t v97 = type metadata accessor for PuzzleStreak();
          uint64_t v98 = *(void *)(v97 - 8);
          uint64_t v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
          if (v99(v96, 1, v97))
          {
            sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v95, v96, *(void *)(*(void *)(v100 - 8) + 64));
          }
          else
          {
            uint64_t v123 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v95, v96, v123);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
          }
          uint64_t v124 = v93[7];
          uint64_t v125 = &v46[v124];
          long long v126 = &v47[v124];
          if (v99(&v47[v124], 1, v97))
          {
            sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
            memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            uint64_t v128 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v125, v126, v128);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v125, 0, 1, v97);
          }
          uint64_t v129 = v93[8];
          uint64_t v130 = &v46[v129];
          size_t v131 = &v47[v129];
          long long v132 = *((_OWORD *)v131 + 1);
          *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
          *((_OWORD *)v130 + 1) = v132;
          *(_OWORD *)(v130 + 25) = *(_OWORD *)(v131 + 25);
          uint64_t v133 = v93[9];
          uint64_t v134 = &v46[v133];
          uint64_t v135 = &v47[v133];
          *(_OWORD *)(v134 + 25) = *(_OWORD *)(v135 + 25);
          long long v136 = *((_OWORD *)v135 + 1);
          *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
          *((_OWORD *)v134 + 1) = v136;
          uint64_t v137 = v93[10];
          uint64_t v138 = &v46[v137];
          uint64_t v139 = &v47[v137];
          long long v140 = *((_OWORD *)v139 + 1);
          *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
          *((_OWORD *)v138 + 1) = v140;
          *(_OWORD *)(v138 + 25) = *(_OWORD *)(v139 + 25);
          goto LABEL_84;
        default:
          uint64_t v48 = type metadata accessor for PuzzleStatisticValue(0);
          int v49 = swift_getEnumCaseMultiPayload();
          if (v49 == 5)
          {
            uint64_t v50 = type metadata accessor for PuzzleStreak();
            uint64_t v51 = *(void *)(v50 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v47, 1, v50)) {
              goto LABEL_12;
            }
          }
          else
          {
            if (v49 != 4)
            {
              size_t v86 = *(void *)(*(void *)(v48 - 8) + 64);
LABEL_57:
              memcpy(v46, v47, v86);
              goto LABEL_84;
            }
            uint64_t v50 = type metadata accessor for PuzzleStreak();
            uint64_t v51 = *(void *)(v50 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v47, 1, v50))
            {
LABEL_12:
              sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v46, v47, *(void *)(*(void *)(v52 - 8) + 64));
              goto LABEL_83;
            }
          }
          uint64_t v141 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v46, v47, v141);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v46, 0, 1, v50);
LABEL_83:
          swift_storeEnumTagMultiPayload();
LABEL_84:
          swift_storeEnumTagMultiPayload();
LABEL_85:
          swift_storeEnumTagMultiPayload();
          return a1;
      }
    case 0xCu:
      *a1 = *a2;
      uint64_t v53 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      uint64_t v54 = (char *)a1 + v53;
      id v55 = (char *)a2 + v53;
      uint64_t v56 = sub_1C151D6DC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
      goto LABEL_85;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      return a1;
  }
}

_OWORD *sub_1C01FA240(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_1C01F085C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    uint64_t v4 = type metadata accessor for FeedGroupItem();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        long long v5 = a2[1];
        *a1 = *a2;
        a1[1] = v5;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v6 = (int *)type metadata accessor for FeedWeather(0);
        uint64_t v7 = v6[7];
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_1C151E2BC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
        uint64_t v11 = v6[9];
        long long v12 = (char *)a1 + v11;
        long long v13 = (char *)a2 + v11;
        sub_1C01F07F8(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
        uint64_t v15 = v14;
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
        v16(v12, v13, v14);
        uint64_t v17 = (int *)type metadata accessor for FeedWeather.Temperature(0);
        v16(&v12[v17[5]], &v13[v17[5]], v15);
        v16(&v12[v17[6]], &v13[v17[6]], v15);
        v16(&v12[v17[7]], &v13[v17[7]], v15);
        *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
        goto LABEL_86;
      case 5u:
        *a1 = *a2;
        *((void *)a1 + 2) = *((void *)a2 + 2);
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        *((void *)a1 + 4) = *((void *)a2 + 4);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        uint64_t v18 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v19 = v18[10];
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        *uint64_t v20 = *((unsigned char *)a2 + v19);
        v20[1] = *((unsigned char *)a2 + v19 + 1);
        uint64_t v22 = (int *)type metadata accessor for FeedHeadline.State(0);
        uint64_t v23 = v22[6];
        uint64_t v24 = &v20[v23];
        uint64_t v25 = &v21[v23];
        uint64_t v26 = (int *)type metadata accessor for SharedItem();
        uint64_t v27 = *((void *)v26 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
        {
          uint64_t v28 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v57 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v24, v25, v57);
          v24[v26[5]] = v25[v26[5]];
          *(void *)&v24[v26[6]] = *(void *)&v25[v26[6]];
          uint64_t v58 = v26[7];
          uint64_t v167 = &v24[v58];
          uint64_t v59 = &v25[v58];
          uint64_t v60 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v167, v59, v60);
          (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
        }
        v20[v22[7]] = v21[v22[7]];
        v20[v22[8]] = v21[v22[8]];
        v20[v22[9]] = v21[v22[9]];
        v20[v22[10]] = v21[v22[10]];
        uint64_t v61 = v18[11];
        uint64_t v62 = (char *)a1 + v61;
        uint64_t v63 = (char *)a2 + v61;
        uint64_t v64 = sub_1C151D2DC();
        uint64_t v65 = *(void *)(v64 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
        {
          sub_1C01F07F8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v62, v63, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v62, v63, v64);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
        }
        *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
        uint64_t v73 = v18[13];
        uint64_t v74 = *(void *)((char *)a2 + v73);
        if (v74 == 2) {
          uint64_t v74 = 2;
        }
        *(void *)((char *)a1 + v73) = v74;
        *(void *)((char *)a1 + v18[14]) = *(void *)((char *)a2 + v18[14]);
        goto LABEL_86;
      case 6u:
        uint64_t v29 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v29;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        uint64_t v30 = (int *)type metadata accessor for FeedWebEmbed();
        uint64_t v31 = v30[8];
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = sub_1C1515FDC();
        uint64_t v35 = *(void *)(v34 - 8);
        uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
        v36(v32, v33, v34);
        uint64_t v37 = v30[9];
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        uint64_t v166 = v34;
        uint64_t v165 = v36;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))((char *)a2 + v37, 1, v34))
        {
          sub_1C01F07F8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
          memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          v36(v38, v39, v34);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v34);
        }
        *(void *)((char *)a1 + v30[10]) = *(void *)((char *)a2 + v30[10]);
        *(void *)((char *)a1 + v30[11]) = *(void *)((char *)a2 + v30[11]);
        uint64_t v67 = v30[12];
        uint64_t v68 = (_OWORD *)((char *)a1 + v67);
        id v69 = (_OWORD *)((char *)a2 + v67);
        uint64_t v70 = (int *)type metadata accessor for FeedHeadline(0);
        uint64_t v71 = *((void *)v70 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v71 + 48))(v69, 1, v70))
        {
          sub_1BFFFCF8C(0);
          memcpy(v68, v69, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          uint64_t v162 = v71;
          uint64_t v163 = v30;
          *uint64_t v68 = *v69;
          *((void *)v68 + 2) = *((void *)v69 + 2);
          *((unsigned char *)v68 + 24) = *((unsigned char *)v69 + 24);
          *((void *)v68 + 4) = *((void *)v69 + 4);
          *(_OWORD *)((char *)v68 + 40) = *(_OWORD *)((char *)v69 + 40);
          *((unsigned char *)v68 + 56) = *((unsigned char *)v69 + 56);
          uint64_t v75 = v70[10];
          uint64_t v76 = (char *)v68 + v75;
          int v77 = (char *)v69 + v75;
          unsigned char *v76 = *((unsigned char *)v69 + v75);
          v76[1] = *((unsigned char *)v69 + v75 + 1);
          uint64_t v78 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v79 = v78[6];
          __dst = &v76[v79];
          uint64_t v80 = &v77[v79];
          uint64_t v81 = (int *)type metadata accessor for SharedItem();
          uint64_t v161 = *((void *)v81 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v161 + 48))(v80, 1, v81))
          {
            uint64_t v82 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v80, *(void *)(*(void *)(v82 - 8) + 64));
          }
          else
          {
            uint64_t v101 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(__dst, v80, v101);
            __dst[v81[5]] = v80[v81[5]];
            *(void *)&__dst[v81[6]] = *(void *)&v80[v81[6]];
            v165(&__dst[v81[7]], &v80[v81[7]], v166);
            (*(void (**)(char *, void, uint64_t, int *))(v161 + 56))(__dst, 0, 1, v81);
          }
          v76[v78[7]] = v77[v78[7]];
          v76[v78[8]] = v77[v78[8]];
          v76[v78[9]] = v77[v78[9]];
          v76[v78[10]] = v77[v78[10]];
          uint64_t v102 = v70[11];
          uint64_t v103 = (char *)v68 + v102;
          uint64_t v104 = (char *)v69 + v102;
          uint64_t v105 = sub_1C151D2DC();
          uint64_t v106 = *(void *)(v105 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48))(v104, 1, v105))
          {
            sub_1C01F07F8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
            memcpy(v103, v104, *(void *)(*(void *)(v107 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v103, v104, v105);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v106 + 56))(v103, 0, 1, v105);
          }
          uint64_t v30 = v163;
          *(_OWORD *)((char *)v68 + v70[12]) = *(_OWORD *)((char *)v69 + v70[12]);
          uint64_t v108 = v70[13];
          uint64_t v109 = *(void *)((char *)v69 + v108);
          if (v109 == 2) {
            uint64_t v109 = 2;
          }
          *(void *)((char *)v68 + v108) = v109;
          *(void *)((char *)v68 + v70[14]) = *(void *)((char *)v69 + v70[14]);
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v162 + 56))(v68, 0, 1, v70);
        }
        uint64_t v110 = v30[13];
        uint64_t v111 = (_OWORD *)((char *)a1 + v110);
        uint64_t v112 = (_OWORD *)((char *)a2 + v110);
        uint64_t v113 = type metadata accessor for WebEmbedDataVisualization();
        uint64_t v114 = *(void *)(v113 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
        {
          sub_1C01F07F8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
          memcpy(v111, v112, *(void *)(*(void *)(v115 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *uint64_t v111 = *v112;
            uint64_t v116 = type metadata accessor for GenericDataVisualization();
            v165((char *)v111 + *(int *)(v116 + 20), (char *)v112 + *(int *)(v116 + 20), v166);
            *(void *)((char *)v111 + *(int *)(v116 + 24)) = *(void *)((char *)v112 + *(int *)(v116 + 24));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v111, v112, *(void *)(v114 + 64));
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v114 + 56))(v111, 0, 1, v113);
        }
        *((unsigned char *)a1 + v30[14]) = *((unsigned char *)a2 + v30[14]);
        goto LABEL_86;
      case 0xBu:
        uint64_t v41 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v41;
        *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        uint64_t v42 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        unint64_t v43 = (char *)a1 + v42;
        id v44 = (char *)a2 + v42;
        *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
        uint64_t v45 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        uint64_t v46 = &v43[v45];
        uint64_t v47 = &v44[v45];
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v87 = type metadata accessor for PuzzleStatisticValue(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 5)
            {
              uint64_t v89 = type metadata accessor for PuzzleStreak();
              uint64_t v90 = *(void *)(v89 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v47, 1, v89))
              {
LABEL_32:
                sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v46, v47, *(void *)(*(void *)(v91 - 8) + 64));
                goto LABEL_66;
              }
            }
            else
            {
              if (EnumCaseMultiPayload != 4)
              {
                memcpy(v46, v47, *(void *)(*(void *)(v87 - 8) + 64));
                goto LABEL_67;
              }
              uint64_t v89 = type metadata accessor for PuzzleStreak();
              uint64_t v90 = *(void *)(v89 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v47, 1, v89)) {
                goto LABEL_32;
              }
            }
            uint64_t v142 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v46, v47, v142);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(v46, 0, 1, v89);
LABEL_66:
            swift_storeEnumTagMultiPayload();
LABEL_67:
            uint64_t v143 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            uint64_t v144 = *(int *)(v143 + 20);
            uint64_t v145 = &v46[v144];
            uint64_t v146 = &v47[v144];
            int v147 = swift_getEnumCaseMultiPayload();
            if (v147 == 5)
            {
              uint64_t v148 = type metadata accessor for PuzzleStreak();
              uint64_t v149 = *(void *)(v148 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v146, 1, v148))
              {
LABEL_72:
                sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v145, v146, *(void *)(*(void *)(v150 - 8) + 64));
                goto LABEL_75;
              }
            }
            else
            {
              if (v147 != 4)
              {
                memcpy(v145, v146, *(void *)(*(void *)(v87 - 8) + 64));
                goto LABEL_76;
              }
              uint64_t v148 = type metadata accessor for PuzzleStreak();
              uint64_t v149 = *(void *)(v148 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v146, 1, v148)) {
                goto LABEL_72;
              }
            }
            uint64_t v151 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v145, v146, v151);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56))(v145, 0, 1, v148);
LABEL_75:
            swift_storeEnumTagMultiPayload();
LABEL_76:
            uint64_t v152 = *(int *)(v143 + 24);
            long long v153 = &v46[v152];
            long long v154 = &v47[v152];
            int v155 = swift_getEnumCaseMultiPayload();
            if (v155 == 5)
            {
              uint64_t v156 = type metadata accessor for PuzzleStreak();
              uint64_t v157 = *(void *)(v156 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v154, 1, v156))
              {
LABEL_81:
                sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v153, v154, *(void *)(*(void *)(v158 - 8) + 64));
                goto LABEL_84;
              }
            }
            else
            {
              if (v155 != 4)
              {
                memcpy(v153, v154, *(void *)(*(void *)(v87 - 8) + 64));
                goto LABEL_85;
              }
              uint64_t v156 = type metadata accessor for PuzzleStreak();
              uint64_t v157 = *(void *)(v156 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v154, 1, v156)) {
                goto LABEL_81;
              }
            }
            uint64_t v159 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 32))(v153, v154, v159);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v153, 0, 1, v156);
            goto LABEL_84;
          case 2u:
            uint64_t v83 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            uint64_t v84 = *((void *)v83 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v84 + 48))(v47, 1, v83))
            {
              sub_1C01F07F8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
              size_t v86 = *(void *)(*(void *)(v85 - 8) + 64);
              goto LABEL_58;
            }
            uint64_t v117 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 32))(v46, v47, v117);
            uint64_t v118 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
            *(_OWORD *)&v46[v118[5]] = *(_OWORD *)&v47[v118[5]];
            uint64_t v119 = v118[6];
            uint64_t v120 = &v46[v119];
            long long v121 = &v47[v119];
            long long v122 = *((_OWORD *)v121 + 1);
            *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
            *((_OWORD *)v120 + 1) = v122;
            *(void *)&v46[v118[7]] = *(void *)&v47[v118[7]];
            *(void *)&v46[v118[8]] = *(void *)&v47[v118[8]];
            *(void *)&v46[v83[5]] = *(void *)&v47[v83[5]];
            *(void *)&v46[v83[6]] = *(void *)&v47[v83[6]];
            *(_OWORD *)&v46[v83[7]] = *(_OWORD *)&v47[v83[7]];
            (*(void (**)(char *, void, uint64_t, int *))(v84 + 56))(v46, 0, 1, v83);
            goto LABEL_85;
          case 3u:
            uint64_t v92 = *((void *)v47 + 1);
            *(void *)uint64_t v46 = *(void *)v47;
            *((void *)v46 + 1) = v92;
            v46[16] = v47[16];
            uint64_t v93 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
            uint64_t v94 = v93[6];
            uint64_t v95 = &v46[v94];
            uint64_t v96 = &v47[v94];
            uint64_t v97 = type metadata accessor for PuzzleStreak();
            uint64_t v98 = *(void *)(v97 - 8);
            uint64_t v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
            if (v99(v96, 1, v97))
            {
              sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v95, v96, *(void *)(*(void *)(v100 - 8) + 64));
            }
            else
            {
              uint64_t v123 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v95, v96, v123);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
            }
            uint64_t v124 = v93[7];
            uint64_t v125 = &v46[v124];
            long long v126 = &v47[v124];
            if (v99(&v47[v124], 1, v97))
            {
              sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
            }
            else
            {
              uint64_t v128 = sub_1C151555C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 32))(v125, v126, v128);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v98 + 56))(v125, 0, 1, v97);
            }
            uint64_t v129 = v93[8];
            uint64_t v130 = &v46[v129];
            size_t v131 = &v47[v129];
            long long v132 = *((_OWORD *)v131 + 1);
            *(_OWORD *)uint64_t v130 = *(_OWORD *)v131;
            *((_OWORD *)v130 + 1) = v132;
            *(_OWORD *)(v130 + 25) = *(_OWORD *)(v131 + 25);
            uint64_t v133 = v93[9];
            uint64_t v134 = &v46[v133];
            uint64_t v135 = &v47[v133];
            *(_OWORD *)(v134 + 25) = *(_OWORD *)(v135 + 25);
            long long v136 = *((_OWORD *)v135 + 1);
            *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
            *((_OWORD *)v134 + 1) = v136;
            uint64_t v137 = v93[10];
            uint64_t v138 = &v46[v137];
            uint64_t v139 = &v47[v137];
            long long v140 = *((_OWORD *)v139 + 1);
            *(_OWORD *)uint64_t v138 = *(_OWORD *)v139;
            *((_OWORD *)v138 + 1) = v140;
            *(_OWORD *)(v138 + 25) = *(_OWORD *)(v139 + 25);
            goto LABEL_85;
          default:
            uint64_t v48 = type metadata accessor for PuzzleStatisticValue(0);
            int v49 = swift_getEnumCaseMultiPayload();
            if (v49 == 5)
            {
              uint64_t v50 = type metadata accessor for PuzzleStreak();
              uint64_t v51 = *(void *)(v50 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v47, 1, v50)) {
                goto LABEL_13;
              }
            }
            else
            {
              if (v49 != 4)
              {
                size_t v86 = *(void *)(*(void *)(v48 - 8) + 64);
LABEL_58:
                memcpy(v46, v47, v86);
                goto LABEL_85;
              }
              uint64_t v50 = type metadata accessor for PuzzleStreak();
              uint64_t v51 = *(void *)(v50 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v47, 1, v50))
              {
LABEL_13:
                sub_1C01F07F8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
                memcpy(v46, v47, *(void *)(*(void *)(v52 - 8) + 64));
                goto LABEL_84;
              }
            }
            uint64_t v141 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v46, v47, v141);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v46, 0, 1, v50);
LABEL_84:
            swift_storeEnumTagMultiPayload();
LABEL_85:
            swift_storeEnumTagMultiPayload();
LABEL_86:
            swift_storeEnumTagMultiPayload();
            break;
        }
        break;
      case 0xCu:
        *a1 = *a2;
        uint64_t v53 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        uint64_t v54 = (char *)a1 + v53;
        id v55 = (char *)a2 + v53;
        uint64_t v56 = sub_1C151D6DC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
        goto LABEL_86;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_1C01FBF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01FBF20);
}

uint64_t sub_1C01FBF20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedGroupItem();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_1C01FBF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01FBFA0);
}

uint64_t sub_1C01FBFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedGroupItem();
  long long v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_1C01FC010()
{
  uint64_t result = type metadata accessor for FeedGroupItem();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static FormatCodingNotEmptyImageExpressionLogicStrategy.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

BOOL static FormatCodingNotEmptyImageExpressionLogicStrategy.shouldEncode(wrappedValue:)(unsigned char *a1)
{
  return (*a1 & 1) == 0;
}

double static FormatCodingNotEmptyTextExpressionLogicStrategy.defaultValue.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 50) = -64;
  *(_WORD *)(a1 + 48) = 0;
  return result;
}

BOOL static FormatCodingNotEmptyTextExpressionLogicStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  int8x16_t v1 = vorrq_s8(*(int8x16_t *)(a1 + 8), *(int8x16_t *)(a1 + 24));
  uint64_t v2 = *(void *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | *(void *)(a1 + 40);
  return *(void *)a1 != 1
      || v2 != 0
      || (*(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16)) != 12582912;
}

double sub_1C01FC128@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 50) = -64;
  *(_WORD *)(a1 + 48) = 0;
  return result;
}

BOOL sub_1C01FC150(uint64_t a1)
{
  int8x16_t v1 = vorrq_s8(*(int8x16_t *)(a1 + 8), *(int8x16_t *)(a1 + 24));
  uint64_t v2 = *(void *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | *(void *)(a1 + 40);
  return *(void *)a1 != 1
      || v2 != 0
      || (*(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16)) != 12582912;
}

void static FormatCodingNotEmptyURLExpressionLogicStrategy.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

BOOL static FormatCodingNotEmptyURLExpressionLogicStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1 != 1;
}

BOOL sub_1C01FC1B4(unsigned __int8 *a1)
{
  return *a1 != 1;
}

double sub_1C01FC1C4@<D0>(_OWORD *a1@<X8>)
{
  *(void *)&double result = 13;
  *a1 = xmmword_1C1533150;
  return result;
}

double static FormatCodingNotEmptyFloatExpressionLogicStrategy.defaultValue.getter@<D0>(_OWORD *a1@<X8>)
{
  *(void *)&double result = 13;
  *a1 = xmmword_1C1533150;
  return result;
}

BOOL static FormatCodingNotEmptyFloatExpressionLogicStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1 != 13;
}

unint64_t sub_1C01FC1F4(uint64_t a1)
{
  unint64_t result = sub_1C01FC21C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01FC21C()
{
  unint64_t result = qword_1EA198160;
  if (!qword_1EA198160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198160);
  }
  return result;
}

unint64_t sub_1C01FC278(uint64_t a1)
{
  unint64_t result = sub_1C01FC2A0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01FC2A0()
{
  unint64_t result = qword_1EA198168;
  if (!qword_1EA198168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198168);
  }
  return result;
}

unint64_t sub_1C01FC2FC(uint64_t a1)
{
  unint64_t result = sub_1C01FC324();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01FC324()
{
  unint64_t result = qword_1EA198170;
  if (!qword_1EA198170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198170);
  }
  return result;
}

unint64_t sub_1C01FC37C()
{
  unint64_t result = qword_1EB870F30;
  if (!qword_1EB870F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870F30);
  }
  return result;
}

unint64_t sub_1C01FC3D4()
{
  unint64_t result = qword_1EB85C2B0;
  if (!qword_1EB85C2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C2B0);
  }
  return result;
}

unint64_t sub_1C01FC428(uint64_t a1)
{
  unint64_t result = sub_1C01FC450();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01FC450()
{
  unint64_t result = qword_1EA198178;
  if (!qword_1EA198178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198178);
  }
  return result;
}

unint64_t sub_1C01FC4A8()
{
  unint64_t result = qword_1EB880B88[0];
  if (!qword_1EB880B88[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB880B88);
  }
  return result;
}

unint64_t sub_1C01FC500()
{
  unint64_t result = qword_1EB860B80;
  if (!qword_1EB860B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860B80);
  }
  return result;
}

unint64_t sub_1C01FC554(uint64_t a1)
{
  unint64_t result = sub_1C01FC57C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01FC57C()
{
  unint64_t result = qword_1EA198180;
  if (!qword_1EA198180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198180);
  }
  return result;
}

unint64_t sub_1C01FC5D8(uint64_t a1)
{
  unint64_t result = sub_1C01FC600();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01FC600()
{
  unint64_t result = qword_1EA198188;
  if (!qword_1EA198188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198188);
  }
  return result;
}

unint64_t sub_1C01FC65C()
{
  unint64_t result = qword_1EB86A4E0;
  if (!qword_1EB86A4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86A4E0);
  }
  return result;
}

unint64_t sub_1C01FC6B0(uint64_t a1)
{
  unint64_t result = sub_1C01FC6D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C01FC6D8()
{
  unint64_t result = qword_1EA198190;
  if (!qword_1EA198190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198190);
  }
  return result;
}

unint64_t sub_1C01FC730()
{
  unint64_t result = qword_1EB86DC98;
  if (!qword_1EB86DC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86DC98);
  }
  return result;
}

unint64_t sub_1C01FC788()
{
  unint64_t result = qword_1EB86DC90;
  if (!qword_1EB86DC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86DC90);
  }
  return result;
}

BOOL sub_1C01FC7DC(unsigned __int8 *a1)
{
  return *a1 != 13;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyImageExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyImageExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyTextExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyTextExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyLayeredMediaExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyLayeredMediaExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyShareAttributionExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyShareAttributionExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyURLExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyURLExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyDateTimeExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyDateTimeExpressionLogicStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingNotEmptyFloatExpressionLogicStrategy()
{
  return &type metadata for FormatCodingNotEmptyFloatExpressionLogicStrategy;
}

uint64_t FeedReplaceLocation.group.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t FeedReplaceLocation.cursorContainer.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_retain();
  return v2;
}

uint64_t FeedReplaceLocation.init(group:cursorContainer:findConfigBlock:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a5, a1, AssociatedTypeWitness);
  uint64_t result = type metadata accessor for FeedReplaceLocation();
  *(void *)(a5 + *(int *)(result + 36)) = a2;
  long long v12 = (void *)(a5 + *(int *)(result + 40));
  *long long v12 = a3;
  v12[1] = a4;
  return result;
}

uint64_t type metadata accessor for FeedReplaceLocation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C01FCAB0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1C01FCBC4(void *a1, uint64_t *a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = v9;
    a1 = (void *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(void *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v10 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    long long v12 = (void *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = v12[1];
    uint64_t v14 = (void *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v14 = *v12;
    v14[1] = v13;
    swift_retain();
  }
  swift_retain();
  return a1;
}

uint64_t sub_1C01FCD50(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  swift_release();
  return swift_release();
}

uint64_t sub_1C01FCE4C(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  uint64_t v9 = (uint64_t *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  long long v12 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  *long long v12 = v10;
  v12[1] = v11;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1C01FCF60(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)v7;
  v7 += 15;
  uint64_t v9 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = v8;
  swift_retain();
  swift_release();
  uint64_t v10 = (void *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void *)((v7 & 0xFFFFFFFFFFFFFFF8) + 8);
  *uint64_t v10 = *(void *)(v7 & 0xFFFFFFFFFFFFFFF8);
  v10[1] = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C01FD08C(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C01FD190(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  swift_release();
  *(_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C01FD2A8(_DWORD *a1, unsigned int a2)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C01FD4BCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)(((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_1C01FD4D0(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v9 >= a3)
  {
    int v13 = 0;
    int v14 = a2 - v9;
    if (a2 <= v9)
    {
LABEL_17:
      switch(v13)
      {
        case 1:
          *((unsigned char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)((char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)((char *)a1 + v10) = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v18 = (void *)(((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                uint64_t v19 = a2 ^ 0x80000000;
                v18[1] = 0;
              }
              else
              {
                uint64_t v19 = (a2 - 1);
              }
              *unint64_t v18 = v19;
            }
            else
            {
              uint64_t v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
              v17(a1, a2);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v11 = a3 - v9 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    int v14 = a2 - v9;
    if (a2 <= v9) {
      goto LABEL_17;
    }
  }
  if (((((v8 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v15 = v14;
  }
  else {
    int v15 = 1;
  }
  if (((((v8 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v16 = ~v9 + a2;
    bzero(a1, v10);
    *a1 = v16;
  }
  switch(v13)
  {
    case 1:
      *((unsigned char *)a1 + v10) = v15;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v10) = v15;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1C01FD748);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = v15;
      break;
    default:
      return;
  }
}

uint64_t FormatAnimationNodeDataLayoutAttributes.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FormatAnimationNodeDataLayoutAttributes.animationData.getter()
{
  return swift_retain();
}

uint64_t FormatAnimationNodeDataLayoutAttributes.sourceItemData.getter@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(v2 + *(int *)(a1 + 32));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  return sub_1C017C3D4(v4, v5);
}

uint64_t FormatAnimationNodeDataLayoutAttributes<A>.auxViewRequirements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))(*(void *)(a1 + 16));
}

uint64_t sub_1C01FD7E4(uint64_t a1, uint64_t a2)
{
  return FormatAnimationNodeDataLayoutAttributes<A>.auxViewRequirements.getter(a1, *(void *)(a2 - 8));
}

uint64_t *sub_1C01FD7EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) != 0
    && ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) < 0xFFFFFFFFFFFFFFE8)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    size_t v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v11 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v11 = *v10;
    unint64_t v12 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v13 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = *(void *)(v13 + 8);
    swift_retain();
    if (v14 < 0xFFFFFFFF)
    {
      long long v15 = *(_OWORD *)v13;
      *(void *)(v12 + 16) = *(void *)(v13 + 16);
      *(_OWORD *)unint64_t v12 = v15;
    }
    else
    {
      *(void *)unint64_t v12 = *(void *)v13;
      *(void *)(v12 + 8) = *(void *)(v13 + 8);
      *(void *)(v12 + 16) = *(void *)(v13 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return v4;
}

unint64_t sub_1C01FD940(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = ((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_release();
  unint64_t result = *(void *)((v4 & 0xFFFFFFFFFFFFFFF8) + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C01FD9DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = v6 + a1;
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *v8;
  unint64_t v9 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = *(void *)(v10 + 8);
  swift_retain();
  if (v11 < 0xFFFFFFFF)
  {
    long long v12 = *(_OWORD *)v10;
    *(void *)(v9 + 16) = *(void *)(v10 + 16);
    *(_OWORD *)unint64_t v9 = v12;
  }
  else
  {
    *(void *)unint64_t v9 = *(void *)v10;
    *(void *)(v9 + 8) = *(void *)(v10 + 8);
    *(void *)(v9 + 16) = *(void *)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C01FDAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = v6 + a2;
  unint64_t v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *unint64_t v7 = *(void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  unint64_t v10 = (void *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = (void *)(v9 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v12 = v11[1];
  if (v10[1] < 0xFFFFFFFFuLL)
  {
    if (v12 >= 0xFFFFFFFF)
    {
      *unint64_t v10 = *v11;
      v10[1] = v11[1];
      v10[2] = v11[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v13 = *(_OWORD *)v11;
    v10[2] = v11[2];
    *(_OWORD *)unint64_t v10 = v13;
    return a1;
  }
  if (v12 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *unint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[2] = v11[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C01FDBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(v10 + 16);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
  *(void *)(v9 + 16) = v11;
  return a1;
}

uint64_t sub_1C01FDC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  swift_release();
  unint64_t v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(void *)(v9 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)(v10 + 8) < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v11 = *(_OWORD *)v10;
    *(void *)(v9 + 16) = *(void *)(v10 + 16);
    *(_OWORD *)unint64_t v9 = v11;
    return a1;
  }
  *(void *)unint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  swift_bridgeObjectRelease();
  *(void *)(v9 + 16) = *(void *)(v10 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C01FDD70(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v7 = 2147483646;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 24;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C01FDECCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  if ((v17 + 1) >= 2) {
    return v17;
  }
  else {
    return 0;
  }
}

void sub_1C01FDEE0(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFE)
            {
              uint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if (a2 > 0x7FFFFFFE)
              {
                *uint64_t v19 = 0;
                *(_DWORD *)uint64_t v19 = a2 - 0x7FFFFFFF;
              }
              else
              {
                *uint64_t v19 = a2;
              }
            }
            else
            {
              unint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFE8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFE8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFE8)
  {
    unsigned int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 24);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1C01FE0E0);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1C01FE108(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v2) {
      break;
    }
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C152028C();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x1C18C7CB0](v4, a1);
      }
      else {
        id v5 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v6 = v5;
      ++v4;
      id v7 = objc_msgSend(v5, sel_contentManifest);

      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      if (v2 == v4) {
        return v8;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FeedContentPrefetchContext.init(formatService:assetHandleFactory:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1BFC773DC(a1, a3);
  return sub_1BFC773DC(a2, a3 + 40);
}

uint64_t FeedContentPrefetchTask.Result.serviceConfig.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

id FeedContentPrefetchTask.Result.manifest.getter(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_1C01FE318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a3, a1, AssociatedTypeWitness);
  uint64_t result = type metadata accessor for FeedContentPrefetchTask.Result();
  *(void *)(a3 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t FeedContentPrefetchTask.__allocating_init(configFetcher:context:purpose:log:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  FeedContentPrefetchTask.init(configFetcher:context:purpose:log:)(a1, a2, a3, a4);
  return v8;
}

char *FeedContentPrefetchTask.init(configFetcher:context:purpose:log:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)v4;
  uint64_t v9 = *(void *)(*(void *)v4 + 80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(&v4[*(void *)(*(void *)v4 + 104)], a1, v9);
  uint64_t v10 = *(void *)(v8 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v9;
  *(void *)(v14 + 24) = v10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v14 + v13, a2, AssociatedTypeWitness);
  int v15 = (uint64_t (**)())&v4[*(void *)(*(void *)v4 + 112)];
  *int v15 = sub_1C01FE784;
  v15[1] = (uint64_t (*)())v14;
  *(void *)&v4[*(void *)(*(void *)v4 + 120)] = a3;
  *((void *)v4 + 2) = a4;
  return v4;
}

uint64_t sub_1C01FE5DC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  id v5 = (char *)&v7 - v4;
  sub_1C151917C();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, AssociatedTypeWitness);
  return sub_1C151907C();
}

uint64_t sub_1C01FE6E0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1C01FE784()
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return sub_1C01FE5DC(v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

char *FeedContentPrefetchTask.__allocating_init(configFetcher:purpose:log:contextBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (char *)swift_allocObject();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(*(void *)v10 + 80) - 8) + 32))(&v10[*(void *)(*(void *)v10 + 104)], a1);
  unsigned int v11 = &v10[*(void *)(*(void *)v10 + 112)];
  *(void *)unsigned int v11 = a4;
  *((void *)v11 + 1) = a5;
  *(void *)&v10[*(void *)(*(void *)v10 + 120)] = a2;
  *((void *)v10 + 2) = a3;
  return v10;
}

char *FeedContentPrefetchTask.init(configFetcher:purpose:log:contextBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(*(void *)v5 + 80) - 8) + 32))(&v5[*(void *)(*(void *)v5 + 104)], a1);
  uint64_t v10 = &v5[*(void *)(*(void *)v5 + 112)];
  *(void *)uint64_t v10 = a4;
  *((void *)v10 + 1) = a5;
  *(void *)&v5[*(void *)(*(void *)v5 + 120)] = a2;
  *((void *)v5 + 2) = a3;
  return v5;
}

uint64_t FeedContentPrefetchTask.prefetch(with:)(uint64_t a1)
{
  sub_1C151F38C();
  sub_1C15197BC();
  swift_getAssociatedTypeWitness();
  sub_1C151932C();
  uint64_t v2 = (void *)sub_1C1518E7C();
  swift_getAssociatedTypeWitness();
  sub_1C151900C();
  swift_release();

  sub_1C01FEFF4(a1, (uint64_t)&v15);
  uint64_t v3 = (_OWORD *)swift_allocObject();
  long long v4 = v18;
  v3[3] = v17;
  v3[4] = v4;
  v3[5] = v19;
  long long v5 = v16;
  v3[1] = v15;
  v3[2] = v5;
  uint64_t v6 = (void *)sub_1C1518E7C();
  sub_1C151900C();
  swift_release();
  swift_release();

  sub_1C01FEFF4(a1, (uint64_t)&v15);
  uint64_t v7 = (_OWORD *)swift_allocObject();
  long long v8 = v18;
  v7[3] = v17;
  v7[4] = v8;
  v7[5] = v19;
  long long v9 = v16;
  v7[1] = v15;
  v7[2] = v9;
  uint64_t v10 = (void *)sub_1C1518E7C();
  sub_1C01FF740();
  swift_getTupleTypeMetadata2();
  sub_1C151900C();
  swift_release();
  swift_release();

  unsigned int v11 = (void *)sub_1C1518E7C();
  type metadata accessor for FeedContentPrefetchTask.Result();
  sub_1C151901C();
  swift_release();

  uint64_t v12 = (void *)sub_1C1518E7C();
  uint64_t v13 = sub_1C151904C();
  swift_release();

  return v13;
}

uint64_t sub_1C01FED24()
{
  return (*(uint64_t (**)(void))(v0 + *(void *)(*(void *)v0 + 112)))();
}

uint64_t sub_1C01FED64(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)a2 + 88) + 48))(a1, *(void *)(*(void *)a2 + 80));
}

uint64_t sub_1C01FEDE0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v19 = *(void *)(*a2 + 88);
  uint64_t v7 = *(void *)(v6 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unsigned int v11 = (char *)&v18 - v10;
  sub_1C151F38C();
  sub_1C15197BC();
  sub_1C01FF04C(a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, AssociatedTypeWitness);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  uint64_t v14 = v19;
  *((void *)v13 + 2) = v7;
  *((void *)v13 + 3) = v14;
  *((void *)v13 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], v11, AssociatedTypeWitness);
  swift_retain();
  long long v15 = (void *)sub_1C1518E7C();
  uint64_t v16 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_1C01FEFF4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C01FF030(uint64_t a1, uint64_t *a2)
{
  return sub_1C01FEDE0(a1, a2, v2 + 16);
}

uint64_t sub_1C01FF04C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  long long v5 = (int *)type metadata accessor for FormatServiceOptions();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *(void **)((char *)v2 + *(void *)(v4 + 120));
  uint64_t v9 = (void *)v2[2];
  uint64_t v10 = qword_1EB87F110;
  id v11 = v8;
  id v12 = v9;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for FormatTransformData();
  uint64_t v14 = __swift_project_value_buffer(v13, (uint64_t)qword_1EB93C758);
  sub_1C0078E00(v14, (uint64_t)&v7[v5[10]], (uint64_t (*)(void))type metadata accessor for FormatTransformData);
  *((void *)v7 + 5) = 0x4122750000000000;
  v7[48] = 0;
  *(void *)&v7[v5[12]] = v11;
  *(void *)&v7[v5[13]] = v12;
  *(_OWORD *)(v7 + 56) = xmmword_1C15335A0;
  *((void *)v7 + 9) = 0x40F5180000000000;
  *((void *)v7 + 10) = 30;
  *(void *)&v7[v5[11]] = MEMORY[0x1E4FBC870];
  *(void *)&v7[v5[15]] = 0;
  *((void *)v7 + 4) = 0;
  *(_OWORD *)uint64_t v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v7[v5[14]] = 1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = sub_1C01FFF68(AssociatedTypeWitness, AssociatedConformanceWitness);
  MEMORY[0x1F4188790](v17);
  v22[-2] = a2;
  v22[-1] = v7;
  uint64_t v18 = sub_1C0183784((void (*)(uint64_t *__return_ptr, uint64_t))sub_1C0201D28, (uint64_t)&v22[-4], v17, (uint64_t)v23);
  swift_bridgeObjectRelease();
  sub_1C0201D48(0);
  v22[1] = v18;
  uint64_t v19 = (void *)sub_1C1518E7C();
  sub_1BFEC0AB0(0, &qword_1EB86AFD8, (uint64_t (*)(uint64_t))sub_1C0201D48, MEMORY[0x1E4FBB320]);
  sub_1C0201D7C(&qword_1EB86AFE0, &qword_1EB86AFD8, (uint64_t (*)(uint64_t))sub_1C0201D48);
  uint64_t v20 = sub_1C1518FAC();

  sub_1C02022DC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1C01FF378@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  sub_1BFFDEB20();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C1529AE0;
  uint64_t v5 = sub_1C152088C();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v4 + 64) = sub_1BFE9C558();
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_1C01FF4E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a3;
  uint64_t v5 = *(void *)(*(void *)a2 + 88);
  uint64_t v6 = *(void *)(*(void *)a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v16 - v9;
  sub_1C151F38C();
  sub_1C15197BC();
  uint64_t v17 = sub_1C02017E0(a1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, AssociatedTypeWitness);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  id v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = v6;
  *((void *)v12 + 3) = v5;
  *((void *)v12 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[v11], v10, AssociatedTypeWitness);
  swift_retain();
  uint64_t v13 = (void *)sub_1C1518E7C();
  sub_1C01FF740();
  swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_1C01FF724(uint64_t a1, uint64_t a2)
{
  return sub_1C01FF4E0(a1, a2, v2 + 16);
}

void sub_1C01FF740()
{
  if (!qword_1EB879F80)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A100);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879F80);
    }
  }
}

uint64_t sub_1C01FF7A8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  unint64_t v5 = *a1;
  sub_1BFFDEB20();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1529AE0;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = sub_1C152088C();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v6 + 64) = sub_1BFE9C558();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  sub_1C151F38C();
  sub_1C15197BC();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1C01FF740();
  uint64_t v11 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a3, a2, AssociatedTypeWitness);
  *(void *)(a3 + v11) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C01FF978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v4 = *(void *)(*(void *)a2 + 88);
  uint64_t v32 = *(void *)(*(void *)a2 + 80);
  uint64_t v29 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1C01FF740();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v28 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = MEMORY[0x1F4188790](v12);
  long long v15 = (char *)&v27 - v14;
  uint64_t v17 = *(int *)(v16 + 56);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
  v27(v8, a1, AssociatedTypeWitness, v13);
  unint64_t v18 = *(void *)(a1 + v17);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v8, AssociatedTypeWitness);
  swift_bridgeObjectRetain();
  id v19 = sub_1C01FFC90((uint64_t)v15);
  uint64_t v20 = v30;
  sub_1C01FE108(v18);
  uint64_t v30 = v20;
  swift_bridgeObjectRelease();
  id v21 = objc_allocWithZone(MEMORY[0x1E4F7E358]);
  sub_1BFC39268(0, (unint64_t *)&unk_1EB8633A8);
  uint64_t v22 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v21, sel_initWithManifests_, v22);

  uint64_t v24 = (uint64_t)v28;
  ((void (*)(char *, char *, uint64_t))v27)(v28, v15, AssociatedTypeWitness);
  id v25 = objc_msgSend(self, sel_manifestByMergingManifest_withManifest_, v19, v23);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, AssociatedTypeWitness);
  return sub_1C01FE318(v24, (uint64_t)v25, v31);
}

uint64_t sub_1C01FFC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C01FF978(a1, a2, a3);
}

uint64_t type metadata accessor for FeedContentPrefetchTask.Result()
{
  return __swift_instantiateGenericMetadata();
}

id sub_1C01FFC90(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __n128 v3 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v12 - v4, a1, AssociatedTypeWitness, v3);
  sub_1BFC845BC(0, &qword_1EB8612D0);
  if (swift_dynamicCast())
  {
    uint64_t v6 = *((void *)&v13 + 1);
    uint64_t v7 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
    uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    if (v8)
    {
      id v9 = objc_msgSend(v8, sel_contentManifest);

      return v9;
    }
  }
  else
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    sub_1C02022DC((uint64_t)&v12, (uint64_t (*)(void))sub_1C0201508);
  }
  id v11 = objc_msgSend(self, sel_empty);
  return v11;
}

uint64_t sub_1C01FFE6C()
{
  sub_1C151F36C();
  sub_1BFFDEB20();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C1529AE0;
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
  sub_1C152036C();
  *(void *)(v0 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v0 + 64) = sub_1BFE9C558();
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0xE000000000000000;
  sub_1C15197BC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C01FFF68(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = &v18[-v7];
  uint64_t v9 = swift_checkMetadataState();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v9);
  long long v13 = &v18[-v12];
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 64))(a1, a2, v11);
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v9, AssociatedConformanceWitness);
  (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(AssociatedTypeWitness, v14);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  uint64_t v21 = v15;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  swift_getAssociatedTypeWitness();
  sub_1C151ED5C();
  type metadata accessor for FormatContent(0);
  swift_getWitnessTable();
  uint64_t v16 = sub_1C151E97C();
  swift_bridgeObjectRelease();
  return v16;
}

void sub_1C0200258(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for FormatServiceOptions();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t v20 = a3;
  type metadata accessor for FormatContent.Resolved();
  sub_1C151932C();
  sub_1C01FEFF4(a2, (uint64_t)v21);
  sub_1C0078E00(a3, (uint64_t)&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t (*)(void))type metadata accessor for FormatServiceOptions);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (_OWORD *)swift_allocObject();
  long long v13 = v21[3];
  v12[3] = v21[2];
  v12[4] = v13;
  v12[5] = v21[4];
  long long v14 = v21[1];
  v12[1] = v21[0];
  v12[2] = v14;
  sub_1C02021BC((uint64_t)&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t)v12 + v11);
  uint64_t v15 = (void *)sub_1C1518E7C();
  uint64_t v16 = sub_1C1518FEC();
  swift_release();
  swift_release();

  *a4 = v16;
}

uint64_t sub_1C0200418(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v23 = a2;
  uint64_t v24 = a3;
  sub_1BFEC0AB0(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for FormatContentPool();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (id **)((char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = a1[3];
  uint64_t v22 = a1[4];
  uint64_t v21 = __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v11 = sub_1C151D6DC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v13 = sub_1C018D180(MEMORY[0x1E4FBC860]);
  unint64_t v14 = sub_1C018D180((uint64_t)v12);
  unint64_t v15 = sub_1C018D14C((uint64_t)v12);
  uint64_t v16 = (id *)sub_1C018DB38((uint64_t)v12);
  uint64_t v17 = (id *)sub_1C018DB6C((uint64_t)v12);
  unint64_t v18 = sub_1C018D770((uint64_t)v12);
  FormatContentPool.init(headlines:headlineLists:issues:tags:tagFeeds:tagFeedFetches:puzzles:puzzleTypes:puzzleStatistics:placeholders:slotPlaceholders:webArchivePromises:resourcePromises:sportsDataVisualizations:genericDataVisualizations:sponsoredAdBanner:)((unint64_t)v12, v13, (unint64_t)v12, (unint64_t)v12, v14, v15, (unint64_t)v12, v12, v9, (unint64_t)v12, (uint64_t)v12, (uint64_t)v12, v16, v17, (uint64_t)v12, v18, (uint64_t)v6);
  uint64_t v19 = FormatServiceType.resolve(content:pool:options:)(v23, (uint64_t)v9, v24, v10, v22);
  sub_1C02022DC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatContentPool);
  return v19;
}

uint64_t sub_1C0200644(uint64_t a1, uint64_t a2)
{
  __n128 v5 = MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a2, v5);
  sub_1BFC845BC(0, &qword_1EB86C3A0);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v12, (uint64_t)v14);
    uint64_t v8 = v15;
    uint64_t v9 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8))(a1 + 40, v8, v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_1C02022DC((uint64_t)v12, (uint64_t (*)(void))sub_1C0201B14);
    return MEMORY[0x1E4FBC860];
  }
  return v10;
}

id *FeedContentPrefetchTask.deinit()
{
  uint64_t v1 = *v0;

  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 13));
  swift_release();

  return v0;
}

uint64_t FeedContentPrefetchTask.__deallocating_deinit()
{
  FeedContentPrefetchTask.deinit();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of FeedGroupPrefetchable.prefetchableContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedConfigPrefetchable.prefetchableAssets(factory:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for FeedContentPrefetchTaskError()
{
  return &type metadata for FeedContentPrefetchTaskError;
}

uint64_t destroy for FeedContentPrefetchContext(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t initializeWithCopy for FeedContentPrefetchContext(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for FeedContentPrefetchContext(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t assignWithTake for FeedContentPrefetchContext(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedContentPrefetchContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedContentPrefetchContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedContentPrefetchContext()
{
  return &type metadata for FeedContentPrefetchContext;
}

uint64_t sub_1C0200B28()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for FeedContentPrefetchTask()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for FeedContentPrefetchTask(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedContentPrefetchTask);
}

uint64_t dispatch thunk of FeedContentPrefetchTask.__allocating_init(configFetcher:context:purpose:log:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of FeedContentPrefetchTask.__allocating_init(configFetcher:purpose:log:contextBlock:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1C0200C3C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0200CE8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v10 = *(void **)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = v10;
    id v11 = v10;
  }
  return a1;
}

void sub_1C0200E00(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  long long v4 = *(void **)((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1C0200E94(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = v8;
  id v9 = v8;
  return a1;
}

uint64_t sub_1C0200F38(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  id v9 = *v7;
  *int v7 = v8;
  id v10 = v8;

  return a1;
}

uint64_t sub_1C0200FE4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C0201084(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *v7;
  *int v7 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1C020112C(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C02012CCLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_1C02012E0(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v9 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v9 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v9)
  {
    if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v9;
    }
    else {
      int v15 = 1;
    }
    if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v9 + a2;
      bzero(a1, v10);
      *a1 = v16;
    }
    switch(v14)
    {
      case 1:
        *((unsigned char *)a1 + v10) = v15;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v10) = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)((char *)a1 + v10) = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      *((unsigned char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)((char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1C02014E0);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v18 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = (a2 - 1);
          }
          *unint64_t v18 = v19;
        }
        else
        {
          uint64_t v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
          v17(a1, a2);
        }
      }
      return;
  }
}

void sub_1C0201508()
{
  if (!qword_1EB86C800)
  {
    sub_1BFC845BC(255, &qword_1EB8612D0);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C800);
    }
  }
}

uint64_t sub_1C0201570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __n128 v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)v12 - v6, a1, AssociatedTypeWitness, v5);
  sub_1BFC845BC(0, &qword_1EB865208);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v12, (uint64_t)v14);
    uint64_t v8 = v15;
    uint64_t v9 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_1C02022DC((uint64_t)v12, (uint64_t (*)(void))sub_1C020233C);
    uint64_t v11 = type metadata accessor for FormatContent(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
}

uint64_t sub_1C02017E0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v4 = sub_1C0200644(a2, AssociatedTypeWitness);
  unint64_t v5 = v4;
  if (!(v4 >> 62))
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    sub_1C0201AAC();
    int v12 = (void *)sub_1C1518E7C();
    sub_1BFEC0AB0(0, &qword_1EB86DDA8, (uint64_t (*)(uint64_t))sub_1C0201AAC, MEMORY[0x1E4FBB320]);
    sub_1C0201D7C(&qword_1EB86DDB0, &qword_1EB86DDA8, (uint64_t (*)(uint64_t))sub_1C0201AAC);
    uint64_t v13 = sub_1C1518FAC();
    swift_bridgeObjectRelease();

    return v13;
  }
  uint64_t v6 = sub_1C15204BC();
  if (!v6) {
    goto LABEL_14;
  }
LABEL_3:
  uint64_t result = sub_1C152028C();
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1C18C7CB0](v8, v5);
      }
      else {
        id v9 = *(id *)(v5 + 8 * v8 + 32);
      }
      size_t v10 = v9;
      id v11 = objc_msgSend(v9, sel_filePath, v14);
      if (v11)
      {

        uint64_t v14 = v10;
        sub_1C0201AAC();
        swift_allocObject();
        sub_1C151908C();
      }
      else
      {
        MEMORY[0x1F4188790](0);
        sub_1C0201AAC();
        swift_allocObject();
        sub_1C151911C();
      }
      ++v8;
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
    }
    while (v6 != v8);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0201A78(uint64_t a1)
{
  return sub_1C0201C8C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C01FF7A8);
}

uint64_t sub_1C0201AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0258C9C(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1C0201AAC()
{
  if (!qword_1EB86C280)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A100);
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C280);
    }
  }
}

void sub_1C0201B14()
{
  if (!qword_1EB86C3A8)
  {
    sub_1BFC845BC(255, &qword_1EB86C3A0);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C3A8);
    }
  }
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1C0201C60(uint64_t a1)
{
  return sub_1C0201C8C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C01FF378);
}

uint64_t sub_1C0201C8C(uint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return a2(a1, *(void *)(v2 + 32), v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

void sub_1C0201D28(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0200258(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void sub_1C0201D48(uint64_t a1)
{
}

uint64_t sub_1C0201D7C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEC0AB0(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0201DE0()
{
  return sub_1C0200418(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C0201E00()
{
  uint64_t v1 = (int *)type metadata accessor for FormatServiceOptions();
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  uint64_t v3 = v0 + v2;
  if (*(void *)(v0 + v2 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v0 + v2);
  }
  uint64_t v4 = (id *)(v3 + v1[10]);
  uint64_t v5 = type metadata accessor for FormatTransformKnobs();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {

    uint64_t v6 = (int *)type metadata accessor for FeedContext();
    uint64_t v7 = (char *)v4 + v6[5];
    uint64_t v8 = type metadata accessor for BundleSession();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      unint64_t v18 = &v7[*(int *)(v8 + 20)];
      uint64_t v9 = sub_1C151631C();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v18, v9);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(char **)((char *)v4 + v6[12] + 8) - 1 >= (char *)3) {
      swift_bridgeObjectRelease();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4 + *(int *)(v5 + 20));
  }
  uint64_t v10 = type metadata accessor for FormatTransformData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v11 = (char *)v4 + *(int *)(v10 + 40);
  uint64_t v12 = type metadata accessor for FeedPersonalizationClusteringRules();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    uint64_t v13 = &v11[*(int *)(v12 + 24)];
    uint64_t v14 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = &v13[*(int *)(v14 + 24)];
      uint64_t v16 = sub_1C1516D9C();
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      swift_bridgeObjectRelease();
    }
    if (*(void *)&v11[*(int *)(v12 + 40) + 32] != 1) {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C02021BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatServiceOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0202220(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FormatServiceOptions() - 8);
  uint64_t v4 = v1 + 2;
  uint64_t v5 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v7 = v1[5];
  uint64_t v6 = v1[6];
  __swift_project_boxed_opaque_existential_1(v4, v7);
  return FormatServiceType.prefetch(content:options:)(a1, v5, v7, v6);
}

uint64_t sub_1C02022C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C0201570(a1, a2);
}

uint64_t sub_1C02022DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C020233C()
{
  if (!qword_1EB86C398)
  {
    sub_1BFC845BC(255, &qword_1EB865208);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86C398);
    }
  }
}

void sub_1C02023AC(uint64_t a1@<X8>)
{
}

void FormatPluginDataProviding.pluginPlaceholderContent.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 4;
}

void sub_1C02023D4(unsigned char *a1@<X8>)
{
}

void FormatPluginDataProviding.autoscrollBehavior.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t dispatch thunk of FormatPluginDataProviding.pluginPlaceholderContent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatPluginDataProviding.autoscrollBehavior.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t static FormatSlotItemTagFilterCondition.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1 >> 62)
  {
    case 1uLL:
      if (v3 >> 62 != 1) {
        goto LABEL_21;
      }
      uint64_t v11 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v5 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v6 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v14 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = v11;
      goto LABEL_11;
    case 2uLL:
      if (v3 >> 62 != 2) {
        goto LABEL_21;
      }
      uint64_t v7 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = v7;
      sub_1BFF58F10(v3);
      sub_1BFF58F10(v2);
      char v8 = static FormatSlotItemTagFilterCondition.== infix(_:_:)(&v15, &v14);
      sub_1BFF07CD8(v2);
      sub_1BFF07CD8(v3);
      return v8 & 1;
    case 3uLL:
      *((void *)&v9 + 1) = *a1;
      *(void *)&long long v9 = v2 + 0x4000000000000000;
      switch((unint64_t)(v9 >> 3))
      {
        case 1uLL:
          if (v3 != 0xC000000000000008) {
            goto LABEL_21;
          }
          sub_1BFF07CD8(*a1);
          unint64_t v10 = 0xC000000000000008;
          break;
        case 2uLL:
          if (v3 != 0xC000000000000010) {
            goto LABEL_21;
          }
          sub_1BFF07CD8(*a1);
          unint64_t v10 = 0xC000000000000010;
          break;
        case 3uLL:
          if (v3 != 0xC000000000000018) {
            goto LABEL_21;
          }
          sub_1BFF07CD8(*a1);
          unint64_t v10 = 0xC000000000000018;
          break;
        default:
          if (v3 != 0xC000000000000000) {
            goto LABEL_21;
          }
          sub_1BFF07CD8(*a1);
          unint64_t v10 = 0xC000000000000000;
          break;
      }
      sub_1BFF07CD8(v10);
      char v8 = 1;
      return v8 & 1;
    default:
      if (v3 >> 62)
      {
LABEL_21:
        sub_1BFF58F10(*a2);
        sub_1BFF58F10(v2);
LABEL_22:
        sub_1BFF07CD8(v2);
        sub_1BFF07CD8(v3);
        goto LABEL_23;
      }
      uint64_t v4 = *(void *)(v2 + 16);
      uint64_t v5 = *(void *)(v2 + 24);
      uint64_t v6 = *(void *)(v3 + 24);
      uint64_t v14 = *(void *)(v3 + 16);
      uint64_t v15 = v4;
LABEL_11:
      sub_1BFF58F10(v3);
      sub_1BFF58F10(v2);
      if ((static FormatSlotItemTagFilterCondition.== infix(_:_:)(&v15, &v14) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v14 = v6;
      uint64_t v15 = v5;
      char v12 = static FormatSlotItemTagFilterCondition.== infix(_:_:)(&v15, &v14);
      sub_1BFF07CD8(v2);
      sub_1BFF07CD8(v3);
      if (v12)
      {
        char v8 = 1;
        return v8 & 1;
      }
LABEL_23:
      char v8 = 0;
      return v8 & 1;
  }
}

unint64_t sub_1C0202658(uint64_t a1)
{
  unint64_t result = sub_1C0202680();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0202680()
{
  unint64_t result = qword_1EA1981A0;
  if (!qword_1EA1981A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1981A0);
  }
  return result;
}

unint64_t sub_1C02026D4(void *a1)
{
  a1[1] = sub_1C020270C();
  a1[2] = sub_1C0202760();
  unint64_t result = sub_1C02027B4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C020270C()
{
  unint64_t result = qword_1EA1981A8;
  if (!qword_1EA1981A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1981A8);
  }
  return result;
}

unint64_t sub_1C0202760()
{
  unint64_t result = qword_1EA1981B0;
  if (!qword_1EA1981B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1981B0);
  }
  return result;
}

unint64_t sub_1C02027B4()
{
  unint64_t result = qword_1EA1981B8;
  if (!qword_1EA1981B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1981B8);
  }
  return result;
}

uint64_t sub_1C0202808@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatSlotItemTagFilterCondition.init(from:)(a1, a2);
}

unint64_t sub_1C0202820(void *a1)
{
  return FormatSlotItemTagFilterCondition.encode(to:)(a1);
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatSymbolImageColor(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFF58F10(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for FormatSymbolImageColor(unint64_t *a1)
{
  return sub_1BFF07CD8(*a1);
}

unint64_t *assignWithCopy for FormatSymbolImageColor(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFF58F10(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_1BFF07CD8(v4);
  return a1;
}

unint64_t *assignWithTake for FormatSymbolImageColor(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_1BFF07CD8(v3);
  return a1;
}

uint64_t sub_1C02028E8(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 == 3) {
    return (*a1 >> 3) + 3;
  }
  else {
    return v1;
  }
}

unint64_t *sub_1C0202904(unint64_t *result, uint64_t a2)
{
  if (a2 < 3)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 3);
    unint64_t v3 = 0xC000000000000000;
  }
  *unint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotItemTagFilterCondition()
{
  return &type metadata for FormatSlotItemTagFilterCondition;
}

uint64_t sub_1C0202940(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FormatServiceOptions();
  MEMORY[0x1F4188790](v7);
  long long v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v12 = MEMORY[0x1F4188790](v10).n128_u64[0];
  uint64_t v14 = (char *)&v45 - v13;
  uint64_t v15 = *v3;
  switch((unint64_t)*v3 >> 62)
  {
    case 1uLL:
      uint64_t v21 = v15 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v23 = *(void *)(v21 + 16);
      unint64_t v22 = *(void *)(v21 + 24);
      unint64_t v46 = v23;
      sub_1BFF58F10(v23);
      sub_1BFF58F10(v22);
      sub_1BFF58F10(v23);
      char v24 = sub_1C0202940(a1, a2, a3);
      sub_1BFF07CD8(v23);
      sub_1C0202F3C(a2, (uint64_t)v9);
      if ((v24 & 1) == 0)
      {
        unint64_t v46 = v22;
        sub_1BFF58F10(v22);
        unsigned __int8 v19 = sub_1C0202940(a1, v9, a3);
        sub_1BFF07CD8(v22);
        sub_1C0202FA0((uint64_t)v9);
        sub_1BFF07CD8(v23);
        unint64_t v20 = v22;
        goto LABEL_14;
      }
      sub_1C0202FA0((uint64_t)v9);
      sub_1BFF07CD8(v23);
      sub_1BFF07CD8(v22);
      unsigned __int8 v19 = 1;
      break;
    case 2uLL:
      unint64_t v25 = *(void *)((v15 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v46 = v25;
      sub_1BFF58F10(v25);
      char v26 = sub_1C0202940(a1, a2, a3);
      sub_1BFF07CD8(v25);
      unsigned __int8 v19 = v26 ^ 1;
      break;
    case 3uLL:
      *((void *)&v27 + 1) = *v3;
      *(void *)&long long v27 = v15 + 0x4000000000000000;
      switch((unint64_t)(v27 >> 3))
      {
        case 1uLL:
          uint64_t v35 = *(void *)(a2 + *(int *)(v11 + 60));
          if (!v35) {
            goto LABEL_12;
          }
          uint64_t v36 = *(void **)(v35 + 32);
          if (!v36) {
            goto LABEL_12;
          }
          swift_unknownObjectRetain();
          id v37 = objc_msgSend(a1, sel_identifier);
          uint64_t v31 = sub_1C151E62C();
          uint64_t v33 = v38;

          id v34 = objc_msgSend(v36, sel_identifier);
          goto LABEL_18;
        case 2uLL:
          unsigned __int8 v19 = objc_msgSend(*(id *)(a3 + 16), sel_hasSubscriptionToTag_, a1, v12);
          break;
        case 3uLL:
          unsigned __int8 v19 = objc_msgSend(*(id *)(a3 + 16), sel_hasSubscriptionToTag_, a1, v12) ^ 1;
          break;
        default:
          uint64_t v28 = *(void *)(a2 + *(int *)(v11 + 60));
          if (!v28 || !*(void *)(v28 + 24)) {
            goto LABEL_12;
          }
          id v29 = FCFeedDescriptor.feedTag.getter();
          id v30 = objc_msgSend(a1, sel_identifier);
          uint64_t v31 = sub_1C151E62C();
          uint64_t v33 = v32;

          id v34 = objc_msgSend(v29, sel_identifier);
LABEL_18:
          id v39 = v34;
          uint64_t v40 = sub_1C151E62C();
          uint64_t v42 = v41;

          if (v31 == v40 && v33 == v42) {
            unsigned __int8 v19 = 1;
          }
          else {
            unsigned __int8 v19 = sub_1C1520A9C();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          break;
      }
      break;
    default:
      unint64_t v17 = *(void *)(v15 + 16);
      unint64_t v16 = *(void *)(v15 + 24);
      unint64_t v46 = v17;
      sub_1BFF58F10(v17);
      sub_1BFF58F10(v16);
      sub_1BFF58F10(v17);
      char v18 = sub_1C0202940(a1, a2, a3);
      sub_1BFF07CD8(v17);
      sub_1C0202F3C(a2, (uint64_t)v14);
      if (v18)
      {
        unint64_t v46 = v16;
        sub_1BFF58F10(v16);
        unsigned __int8 v19 = sub_1C0202940(a1, v14, a3);
        sub_1BFF07CD8(v16);
        sub_1C0202FA0((uint64_t)v14);
        sub_1BFF07CD8(v17);
        unint64_t v20 = v16;
LABEL_14:
        sub_1BFF07CD8(v20);
      }
      else
      {
        sub_1C0202FA0((uint64_t)v14);
        sub_1BFF07CD8(v17);
        sub_1BFF07CD8(v16);
LABEL_12:
        unsigned __int8 v19 = 0;
      }
      break;
  }
  return v19 & 1;
}

uint64_t sub_1C0202D64(uint64_t a1)
{
  uint64_t v2 = *v1;
  switch((unint64_t)*v1 >> 62)
  {
    case 1uLL:
      uint64_t v8 = ((uint64_t (*)(void))sub_1C0202D64)();
      goto LABEL_7;
    case 2uLL:
      uint64_t v8 = 762605422;
      unint64_t v7 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFF58F10(v7);
      unint64_t v3 = sub_1BFF58F10(v7);
      sub_1C0202D64(v3);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1BFF07CD8(v7);
      sub_1BFF07CD8(v7);
      return v8;
    case 3uLL:
      *((void *)&v4 + 1) = *v1;
      *(void *)&long long v4 = v2 + 0x4000000000000000;
      uint64_t result = 0x67615464656566;
      switch((unint64_t)(v4 >> 3))
      {
        case 1uLL:
          uint64_t result = 0x67615470756F7267;
          break;
        case 2uLL:
          uint64_t result = 0x6465776F6C6C6F66;
          break;
        case 3uLL:
          uint64_t result = 0x776F6C6C6F666E75;
          break;
        default:
          return result;
      }
      return result;
    default:
      uint64_t v8 = sub_1C0202D64(a1);
LABEL_7:
      uint64_t v6 = sub_1C151E80C();
      sub_1C0202D64(v6);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      return v8;
  }
}

uint64_t sub_1C0202F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatServiceOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0202FA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatServiceOptions();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0203008()
{
  return 0x737265746C6966;
}

uint64_t sub_1C0203024(uint64_t a1)
{
  unint64_t v2 = sub_1C02030EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0203060(uint64_t a1)
{
  unint64_t v2 = sub_1C02030EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSubgroupFilterAnd.encode(to:)(void *a1)
{
  return sub_1C02033F8(a1, &qword_1EB86FE00, (uint64_t (*)(void))sub_1C02030EC, (uint64_t)&type metadata for FormatContentSubgroupFilterAnd.CodingKeys, (uint64_t)sub_1C02030EC);
}

unint64_t sub_1C02030EC()
{
  unint64_t result = qword_1EB86FCB0;
  if (!qword_1EB86FCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FCB0);
  }
  return result;
}

void sub_1C0203140()
{
  if (!qword_1EB890050)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890050);
    }
  }
}

uint64_t FormatContentSubgroupFilterAnd.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0203634(a1, &qword_1EB86FDD0, (uint64_t (*)(void))sub_1C02030EC, (uint64_t)&type metadata for FormatContentSubgroupFilterAnd.CodingKeys, (void (*)(void))sub_1C02030EC, a2);
}

uint64_t sub_1C02031E8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0203140();
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0203254@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatContentSubgroupFilterAnd.init(from:)(a1, a2);
}

uint64_t sub_1C020326C(void *a1)
{
  return FormatContentSubgroupFilterAnd.encode(to:)(a1);
}

uint64_t FormatContentSubgroupFilterOr.filters.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FormatContentSubgroupFilterOr.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00DEB9C(*a1, *a2);
}

uint64_t sub_1C0203298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x737265746C6966 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0203330(uint64_t a1)
{
  unint64_t v2 = sub_1C0203590();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C020336C(uint64_t a1)
{
  unint64_t v2 = sub_1C0203590();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSubgroupFilterOr.encode(to:)(void *a1)
{
  return sub_1C02033F8(a1, &qword_1EB8635D0, (uint64_t (*)(void))sub_1C0203590, (uint64_t)&type metadata for FormatContentSubgroupFilterOr.CodingKeys, (uint64_t)sub_1C0203590);
}

uint64_t sub_1C02033F8(void *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5)
{
  v14[0] = a5;
  sub_1C0203D3C(0, a2, a3, a4, MEMORY[0x1E4FBBDE0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v14 - v10;
  uint64_t v12 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  ((void (*)(void))v14[0])();
  sub_1C1520F0C();
  void v14[3] = v12;
  sub_1C0203140();
  sub_1C02031E8((unint64_t *)&qword_1EB86B1D8, (void (*)(void))sub_1C006CAC4);
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_1C0203590()
{
  unint64_t result = qword_1EB863058;
  if (!qword_1EB863058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863058);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterOr.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C0203634(a1, &qword_1EB863518, (uint64_t (*)(void))sub_1C0203590, (uint64_t)&type metadata for FormatContentSubgroupFilterOr.CodingKeys, (void (*)(void))sub_1C0203590, a2);
}

uint64_t sub_1C0203634@<X0>(void *a1@<X0>, unint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X3>, void (*a5)(void)@<X4>, void *a6@<X8>)
{
  unint64_t v17 = a6;
  sub_1C0203D3C(0, a2, a3, a4, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v16 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v16 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a5();
  sub_1C1520EBC();
  if (!v6)
  {
    uint64_t v14 = v16;
    uint64_t v13 = v17;
    sub_1C0203140();
    sub_1C02031E8((unint64_t *)&qword_1EB890060, (void (*)(void))sub_1C006CA70);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v10);
    *uint64_t v13 = v18;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1C020380C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatContentSubgroupFilterOr.init(from:)(a1, a2);
}

uint64_t sub_1C0203824(void *a1)
{
  return FormatContentSubgroupFilterOr.encode(to:)(a1);
}

uint64_t sub_1C020383C(uint64_t *a1, uint64_t *a2)
{
  return sub_1C00DEB9C(*a1, *a2);
}

uint64_t FormatContentSubgroupFilterNot.filter.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t static FormatContentSubgroupFilterNot.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = v2;
  return static FormatContentSubgroupFilter.== infix(_:_:)(&v5, &v4) & 1;
}

uint64_t sub_1C0203890()
{
  return 0x7265746C6966;
}

uint64_t sub_1C02038A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7265746C6966 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0203934(uint64_t a1)
{
  unint64_t v2 = sub_1C0203B28();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0203970(uint64_t a1)
{
  unint64_t v2 = sub_1C0203B28();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSubgroupFilterNot.encode(to:)(void *a1)
{
  sub_1C0203D3C(0, (unint64_t *)&unk_1EB8635F0, (uint64_t (*)(void))sub_1C0203B28, (uint64_t)&type metadata for FormatContentSubgroupFilterNot.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v10 - v6;
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0203B28();
  sub_1C1520F0C();
  v10[3] = v8;
  sub_1C006CAC4();
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C0203B28()
{
  unint64_t result = qword_1EB8630D8;
  if (!qword_1EB8630D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630D8);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterNot.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v12 = a2;
  sub_1C0203D3C(0, &qword_1EB863520, (uint64_t (*)(void))sub_1C0203B28, (uint64_t)&type metadata for FormatContentSubgroupFilterNot.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0203B28();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v12;
    sub_1C006CA70();
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *uint64_t v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C0203D3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C0203DA4(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C020405C(a1, a2, a3, (uint64_t (*)(void))sub_1C0203DE4, (uint64_t (*)(void))sub_1C0203E38, (uint64_t (*)(void))sub_1C0203E8C);
}

unint64_t sub_1C0203DE4()
{
  unint64_t result = qword_1EB86FCD0;
  if (!qword_1EB86FCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FCD0);
  }
  return result;
}

unint64_t sub_1C0203E38()
{
  unint64_t result = qword_1EB86FCC8;
  if (!qword_1EB86FCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FCC8);
  }
  return result;
}

unint64_t sub_1C0203E8C()
{
  unint64_t result = qword_1EA1981C0;
  if (!qword_1EA1981C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1981C0);
  }
  return result;
}

uint64_t sub_1C0203EE0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C020405C(a1, a2, a3, (uint64_t (*)(void))sub_1C0203F20, (uint64_t (*)(void))sub_1C0203F74, (uint64_t (*)(void))sub_1C0203FC8);
}

unint64_t sub_1C0203F20()
{
  unint64_t result = qword_1EB8613E8;
  if (!qword_1EB8613E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8613E8);
  }
  return result;
}

unint64_t sub_1C0203F74()
{
  unint64_t result = qword_1EB863070;
  if (!qword_1EB863070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863070);
  }
  return result;
}

unint64_t sub_1C0203FC8()
{
  unint64_t result = qword_1EA1981C8;
  if (!qword_1EA1981C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1981C8);
  }
  return result;
}

uint64_t sub_1C020401C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C020405C(a1, a2, a3, (uint64_t (*)(void))sub_1C02040B0, (uint64_t (*)(void))sub_1C0204104, (uint64_t (*)(void))sub_1C0204158);
}

uint64_t sub_1C020405C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C02040B0()
{
  unint64_t result = qword_1EB8630F8;
  if (!qword_1EB8630F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630F8);
  }
  return result;
}

unint64_t sub_1C0204104()
{
  unint64_t result = qword_1EB8630F0;
  if (!qword_1EB8630F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630F0);
  }
  return result;
}

unint64_t sub_1C0204158()
{
  unint64_t result = qword_1EA1981D0;
  if (!qword_1EA1981D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1981D0);
  }
  return result;
}

uint64_t sub_1C02041AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatContentSubgroupFilterNot.init(from:)(a1, a2);
}

uint64_t sub_1C02041C4(void *a1)
{
  return FormatContentSubgroupFilterNot.encode(to:)(a1);
}

uint64_t sub_1C02041DC(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = v2;
  return static FormatContentSubgroupFilter.== infix(_:_:)(&v5, &v4) & 1;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterAnd()
{
  return &type metadata for FormatContentSubgroupFilterAnd;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterOr()
{
  return &type metadata for FormatContentSubgroupFilterOr;
}

void *assignWithCopy for SportsDataVisualizationEventStatus(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for SportsDataVisualizationEventStatus(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterNot()
{
  return &type metadata for FormatContentSubgroupFilterNot;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterNot.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterNot.CodingKeys;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterOr.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterOr.CodingKeys;
}

unsigned char *_s8NewsFeed30FormatContentSubgroupFilterNotV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0204380);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterAnd.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterAnd.CodingKeys;
}

unint64_t sub_1C02043BC()
{
  unint64_t result = qword_1EA1981D8;
  if (!qword_1EA1981D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1981D8);
  }
  return result;
}

unint64_t sub_1C0204414()
{
  unint64_t result = qword_1EA1981E0;
  if (!qword_1EA1981E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1981E0);
  }
  return result;
}

unint64_t sub_1C020446C()
{
  unint64_t result = qword_1EA1981E8;
  if (!qword_1EA1981E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1981E8);
  }
  return result;
}

unint64_t sub_1C02044C4()
{
  unint64_t result = qword_1EB8630E8;
  if (!qword_1EB8630E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630E8);
  }
  return result;
}

unint64_t sub_1C020451C()
{
  unint64_t result = qword_1EB8630E0;
  if (!qword_1EB8630E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630E0);
  }
  return result;
}

unint64_t sub_1C0204574()
{
  unint64_t result = qword_1EB863068;
  if (!qword_1EB863068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863068);
  }
  return result;
}

unint64_t sub_1C02045CC()
{
  unint64_t result = qword_1EB863060;
  if (!qword_1EB863060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB863060);
  }
  return result;
}

unint64_t sub_1C0204624()
{
  unint64_t result = qword_1EB86FCC0;
  if (!qword_1EB86FCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FCC0);
  }
  return result;
}

unint64_t sub_1C020467C()
{
  unint64_t result = qword_1EB86FCB8;
  if (!qword_1EB86FCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FCB8);
  }
  return result;
}

unint64_t sub_1C02046E0(char a1)
{
  unint64_t result = 0x776F6C6C61;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C0204780()
{
  return sub_1C02046E0(*v0);
}

unsigned char *storeEnumTagSinglePayload for FeedCursorDedupResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0204854);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedCursorDedupResult()
{
  return &type metadata for FeedCursorDedupResult;
}

unint64_t sub_1C0204890()
{
  unint64_t result = qword_1EA1981F0;
  if (!qword_1EA1981F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1981F0);
  }
  return result;
}

id sub_1C02048E4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return (id)v2;
  }
  uint64_t v29 = MEMORY[0x1E4FBC860];
  sub_1C05F69D4(0, v1, 0);
  uint64_t v2 = v29;
  id result = (id)sub_1BFEABF78(a1);
  uint64_t v6 = (uint64_t)result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v25 = v1;
  int v26 = v5;
  uint64_t v27 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = v12[1];
    uint64_t v28 = *v12;
    uint64_t v14 = *(void **)(*(void *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
    id result = objc_msgSend(v14, sel_doubleValue);
    uint64_t v16 = v15;
    unint64_t v18 = *(void *)(v29 + 16);
    unint64_t v17 = *(void *)(v29 + 24);
    if (v18 >= v17 >> 1) {
      id result = (id)sub_1C05F69D4(v17 > 1, v18 + 1, 1);
    }
    *(void *)(v29 + 16) = v18 + 1;
    unsigned __int8 v19 = (void *)(v29 + 24 * v18);
    v19[4] = v28;
    v19[5] = v13;
    v19[6] = v16;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v20 = *(void *)(v27 + 8 * v11);
    if ((v20 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v26;
    if (*(_DWORD *)(a1 + 36) != v26) {
      goto LABEL_27;
    }
    unint64_t v21 = v20 & (-2 << (v6 & 0x3F));
    if (v21)
    {
      int64_t v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v25;
    }
    else
    {
      unint64_t v22 = v11 + 1;
      unint64_t v23 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v25;
      if (v11 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v27 + 8 * v22);
        if (v24)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v24)) + (v22 << 6);
        }
        else
        {
          while (v23 - 2 != v11)
          {
            unint64_t v24 = *(void *)(a1 + 80 + 8 * v11++);
            if (v24)
            {
              unint64_t v22 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return (id)v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C0204B18(unint64_t a1)
{
  unint64_t v19 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_46;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F6994(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    if (!v2) {
      break;
    }
    if (v19)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C15204BC();
    }
    else
    {
      uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    unint64_t v6 = 0;
    unint64_t v5 = a1 & 0xC000000000000001;
    while ((v2 & ~(v2 >> 63)) != v6)
    {
      if (v18 == v6) {
        goto LABEL_44;
      }
      if (v5)
      {
        uint64_t v7 = MEMORY[0x1C18C7CB0](v6, a1);
      }
      else
      {
        if (v6 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_45;
        }
        uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      id v8 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
      if (!v8) {
        id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
      }
      swift_unknownObjectRelease();
      unint64_t v10 = *(void *)(v20 + 16);
      unint64_t v9 = *(void *)(v20 + 24);
      if (v10 >= v9 >> 1) {
        sub_1C05F6994(v9 > 1, v10 + 1, 1);
      }
      ++v6;
      *(void *)(v20 + 16) = v10 + 1;
      uint64_t v11 = v20 + 16 * v10;
      *(void *)(v11 + 32) = v7;
      *(void *)(v11 + 40) = v8;
      if (v2 == v6)
      {
        uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
        goto LABEL_22;
      }
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v5 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
LABEL_22:
  if (v19)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v2 == v12) {
        break;
      }
LABEL_26:
      if (v5)
      {
        uint64_t v13 = MEMORY[0x1C18C7CB0](v2, a1);
        if (__OFADD__(v2, 1)) {
          goto LABEL_42;
        }
      }
      else
      {
        if (v2 < 0)
        {
          __break(1u);
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
        if ((unint64_t)v2 >= *(void *)(v4 + 16)) {
          goto LABEL_41;
        }
        uint64_t v13 = *(void *)(a1 + 8 * v2 + 32);
        swift_unknownObjectRetain();
        if (__OFADD__(v2, 1)) {
          goto LABEL_42;
        }
      }
      id v14 = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
      if (!v14) {
        id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
      }
      swift_unknownObjectRelease();
      unint64_t v16 = *(void *)(v20 + 16);
      unint64_t v15 = *(void *)(v20 + 24);
      if (v16 >= v15 >> 1) {
        sub_1C05F6994(v15 > 1, v16 + 1, 1);
      }
      *(void *)(v20 + 16) = v16 + 1;
      uint64_t v17 = v20 + 16 * v16;
      *(void *)(v17 + 32) = v13;
      *(void *)(v17 + 40) = v14;
      ++v2;
      if (!v19) {
        goto LABEL_23;
      }
    }
  }
  else
  {
LABEL_23:
    if (v2 != *(void *)(v4 + 16)) {
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease();
  return v20;
}

double FeedPersonalizationServiceType.score<A>(group:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = FeedGroupable.personalizingScoredItems.getter(a4, a6);
  if (v10)
  {
    double v11 = (*(double (**)(uint64_t, uint64_t, uint64_t))(a5 + 40))(v10, a3, a5);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a6 + 32))(a4, a6);
    uint64_t v12 = (*(uint64_t (**)(void))(a5 + 8))();
    double v11 = (*(double (**)(uint64_t, uint64_t, uint64_t))(a5 + 40))(v12, a3, a5);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v11 * (*(double (**)(uint64_t, uint64_t))(a6 + 48))(a4, a6);
}

double FeedPersonalizationServiceType.groupScore(items:context:)(uint64_t a1, __int16 *a2, uint64_t a3, uint64_t a4)
{
  __int16 v7 = *a2;
  (*(void (**)(uint64_t, __int16 *))(a4 + 8))(a1, &v7);
  double v5 = (*(double (**)(void))(a4 + 40))();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t FeedPersonalizationServiceType.scoreSort<A>(groups:context:)(uint64_t a1, __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __int16 v10 = *a2;
  uint64_t v31 = a1;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v28 = a6;
  __int16 v29 = v10;
  uint64_t v11 = sub_1C151ED5C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = MEMORY[0x1E4FBC248];
  uint64_t v15 = MEMORY[0x1E4FBC278];
  uint64_t v30 = sub_1C035E7C8((void (*)(char *, char *))sub_1C0205308, (uint64_t)v24, v11, TupleTypeMetadata2, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v16);
  v23[8] = a3;
  v23[9] = a4;
  v23[10] = a5;
  v23[11] = a6;
  uint64_t v17 = sub_1C151ED5C();
  swift_getWitnessTable();
  uint64_t v18 = sub_1C151E9FC();
  swift_bridgeObjectRelease();
  uint64_t v30 = v18;
  v23[2] = a3;
  v23[3] = a4;
  v23[4] = a5;
  v23[5] = a6;
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v21 = sub_1C035E7C8((void (*)(char *, char *))sub_1C02054A0, (uint64_t)v23, v17, a4, v14, v19, v15, v20);
  swift_bridgeObjectRelease();
  return v21;
}

void sub_1C0205224(uint64_t a1@<X0>, __int16 a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v14 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(a7, a1, a4);
  __int16 v15 = a2;
  *(double *)(a7 + v14) = FeedPersonalizationServiceType.score<A>(group:context:)(a1, (uint64_t)&v15, a3, a4, a5, a6);
}

void sub_1C0205308(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0205224(a1, *(_WORD *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

BOOL sub_1C0205334(uint64_t a1, uint64_t a2)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return *(double *)(a2 + *(int *)(TupleTypeMetadata2 + 48)) < *(double *)(a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_1C020539C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  __n128 v7 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  unint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))((char *)&v12 - v8, a1, a2, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v9, a2);
}

uint64_t sub_1C02054A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C020539C(a1, *(void *)(v2 + 24), a2);
}

uint64_t FeedPersonalizationServiceType.score(content:context:)(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v119 = a4;
  uint64_t v118 = a3;
  uint64_t v148 = a2;
  sub_1BFECFA20(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v113 - v10;
  uint64_t v12 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v113 - v16;
  uint64_t v18 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (id *)((char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (id *)((char *)&v113 - v24);
  unsigned int v26 = *v148;
  if ((v26 >> 14) - 1 >= 2)
  {
    int v147 = v17;
    uint64_t v148 = (unsigned __int16 *)v14;
    uint64_t v149 = v8;
    uint64_t v150 = v12;
    uint64_t v146 = v23;
    uint64_t v116 = v4;
    uint64_t v117 = v22;
    if (v26 >> 14)
    {
      uint64_t v69 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
      unint64_t v70 = MEMORY[0x1E4FBC860];
      unint64_t v153 = MEMORY[0x1E4FBC860];
      uint64_t v71 = v119;
      uint64_t v121 = *(void *)(v69 + 16);
      if (v121)
      {
        uint64_t v115 = a1;
        uint64_t v120 = v69 + 32;
        uint64_t v114 = v69;
        swift_bridgeObjectRetain_n();
        uint64_t v72 = 0;
        uint64_t v73 = 0;
        uint64_t v145 = v18;
        do
        {
          uint64_t v126 = v73;
          uint64_t v127 = v72;
          uint64_t v74 = (uint64_t *)(v120 + 80 * v72);
          uint64_t v75 = v74[1];
          uint64_t v131 = *v74;
          uint64_t v129 = v75;
          unint64_t v76 = v74[2];
          uint64_t v125 = v74[3];
          uint64_t v77 = v74[4];
          uint64_t v134 = v74[5];
          uint64_t v78 = (char *)v74[6];
          unint64_t v128 = v74[7];
          uint64_t v79 = v74[8];
          uint64_t v80 = v74[9];
          uint64_t v124 = v77 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v133 = v79;
          unint64_t v130 = v76;
          uint64_t v135 = v78;
          sub_1BFEE0A78();
          uint64_t v132 = v80;
          sub_1BFEE0A78();
          unint64_t v81 = v128;
          sub_1BFEE0A78();
          uint64_t v123 = v77;
          sub_1BFEE0A78();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v82 = v81;
          swift_bridgeObjectRetain();
          uint64_t v83 = v133;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v84 = v126;
          uint64_t v85 = sub_1C10468B0(v83);
          uint64_t v126 = v84;
          swift_bridgeObjectRelease();
          unint64_t v152 = v82;
          swift_bridgeObjectRetain();
          sub_1BFEE0654(v85);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v86 = v152;
          unint64_t v152 = v70;
          uint64_t v137 = *(void *)(v86 + 16);
          if (v137)
          {
            unint64_t v136 = v86 + 32;
            unint64_t v122 = v86;
            swift_bridgeObjectRetain();
            unint64_t v87 = 0;
            do
            {
              uint64_t v90 = (void *)(v136 + (v87 << 6));
              uint64_t v91 = v90[1];
              uint64_t v92 = v90[2];
              uint64_t v93 = v90[3];
              uint64_t v94 = v90[4];
              uint64_t v96 = v90[5];
              uint64_t v95 = v90[6];
              uint64_t v97 = v90[7];
              unint64_t v151 = v70;
              uint64_t v98 = *(void *)(v94 + 16);
              if (v98)
              {
                int v147 = (char *)v87;
                uint64_t v99 = v94;
                uint64_t v100 = v146;
                uint64_t v101 = v97;
                uint64_t v102 = v92;
                uint64_t v103 = v93;
                uint64_t v104 = v99
                     + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
                uint64_t v144 = v91;
                swift_bridgeObjectRetain_n();
                uint64_t v142 = v102;
                swift_bridgeObjectRetain_n();
                uint64_t v141 = v103;
                swift_bridgeObjectRetain_n();
                uint64_t v143 = v99;
                swift_bridgeObjectRetain_n();
                uint64_t v140 = v96;
                swift_bridgeObjectRetain_n();
                uint64_t v139 = v95;
                swift_bridgeObjectRetain_n();
                uint64_t v138 = v101;
                uint64_t v105 = (uint64_t)v149;
                swift_bridgeObjectRetain_n();
                uint64_t v106 = *(void *)(v100 + 72);
                uint64_t v107 = (uint64_t)v148;
                uint64_t v108 = v150;
                do
                {
                  sub_1BFECA5B4(v104, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:

                      break;
                    case 2u:
                    case 4u:
                    case 5u:
                      swift_unknownObjectRelease();
                      break;
                    case 3u:
                      sub_1C0207BE0((uint64_t)v20, v107);
                      sub_1C0207C44(v107 + *(int *)(v108 + 36), v105);
                      sub_1BFEC84E0();
                      uint64_t v110 = v109;
                      uint64_t v111 = *(void *)(v109 - 8);
                      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v105, 1, v109) != 1)
                      {
                        sub_1C151948C();
                        (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v105, v110);
                        sub_1BFECEFA4(v107, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                        uint64_t v108 = v150;
                        goto LABEL_46;
                      }
                      sub_1C0207CD8(v105);
                      sub_1BFECEFA4(v107, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                      uint64_t v108 = v150;
                      break;
                    case 6u:
                    case 7u:
                      sub_1BFECEFA4((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                      break;
                    case 8u:
                      swift_bridgeObjectRelease();
                      break;
                    default:
LABEL_46:
                      MEMORY[0x1C18C66D0]();
                      if (*(void *)((v151 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v151 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
                        sub_1C151EC8C();
                      sub_1C151ECEC();
                      sub_1C151EBEC();
                      uint64_t v107 = (uint64_t)v148;
                      uint64_t v105 = (uint64_t)v149;
                      break;
                  }
                  v104 += v106;
                  --v98;
                }
                while (v98);
                unint64_t v88 = v151;
                unint64_t v89 = MEMORY[0x1E4FBC860];
                unint64_t v87 = (unint64_t)v147;
              }
              else
              {
                unint64_t v88 = v70;
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                unint64_t v89 = v70;
              }
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              ++v87;
              sub_1BFE52C14(v88);
              unint64_t v70 = v89;
            }
            while (v87 != v137);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            int v147 = (char *)v152;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v147 = (char *)v70;
          }
          ++v127;
          sub_1C0033494();
          sub_1C0033494();
          sub_1C0033494();
          uint64_t v72 = v127;
          sub_1BFE52C14((unint64_t)v147);
          uint64_t v73 = v126;
        }
        while (v72 != v121);
        swift_bridgeObjectRelease_n();
        unint64_t v70 = v153;
        a1 = v115;
        uint64_t v71 = v119;
      }
      LOBYTE(v153) = 0;
      (*(void (**)(unint64_t, unint64_t *, uint64_t))(v71 + 16))(v70, &v153, v118);
      swift_bridgeObjectRelease();
    }
    else
    {
      LODWORD(v114) = v26;
      uint64_t v27 = *(void *)(a1 + *(int *)(type metadata accessor for FormatContent.Resolved() + 32));
      unint64_t v28 = MEMORY[0x1E4FBC860];
      unint64_t v153 = MEMORY[0x1E4FBC860];
      uint64_t v29 = v119;
      uint64_t v30 = v118;
      uint64_t v121 = *(void *)(v27 + 16);
      if (v121)
      {
        uint64_t v115 = a1;
        uint64_t v120 = v27 + 32;
        uint64_t v113 = v27;
        swift_bridgeObjectRetain_n();
        uint64_t v31 = 0;
        unint64_t v32 = 0;
        uint64_t v135 = v11;
        uint64_t v145 = v18;
        do
        {
          unint64_t v128 = v32;
          uint64_t v129 = v31;
          uint64_t v33 = (uint64_t *)(v120 + 80 * v31);
          uint64_t v34 = *v33;
          uint64_t v134 = v33[1];
          uint64_t v35 = v33[2];
          uint64_t v131 = v33[3];
          uint64_t v37 = v33[4];
          uint64_t v36 = v33[5];
          unint64_t v38 = v33[7];
          uint64_t v133 = v33[6];
          uint64_t v40 = v33[8];
          uint64_t v39 = v33[9];
          uint64_t v138 = v37 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v132 = v39;
          uint64_t v126 = v40;
          uint64_t v127 = v35;
          uint64_t v123 = v36;
          unint64_t v130 = v38;
          sub_1BFEE0A78();
          uint64_t v125 = v34;
          sub_1BFEE0A78();
          uint64_t v41 = v126;
          unint64_t v42 = v130;
          sub_1BFEE0A78();
          uint64_t v124 = v37;
          sub_1BFEE0A78();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          unint64_t v43 = v128;
          uint64_t v44 = sub_1C10468B0(v41);
          unint64_t v128 = v43;
          swift_bridgeObjectRelease();
          unint64_t v152 = v42;
          swift_bridgeObjectRetain();
          sub_1BFEE0654(v44);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v45 = v152;
          unint64_t v152 = v28;
          uint64_t v137 = *(void *)(v45 + 16);
          if (v137)
          {
            unint64_t v136 = v45 + 32;
            unint64_t v122 = v45;
            swift_bridgeObjectRetain();
            unint64_t v46 = 0;
            do
            {
              uint64_t v50 = (void *)(v136 + (v46 << 6));
              uint64_t v51 = (unsigned __int16 *)v50[1];
              uint64_t v52 = v50[2];
              uint64_t v54 = v50[3];
              uint64_t v53 = v50[4];
              uint64_t v56 = v50[5];
              uint64_t v55 = v50[6];
              uint64_t v57 = v50[7];
              unint64_t v151 = v28;
              unint64_t v58 = v28;
              uint64_t v59 = *(void *)(v53 + 16);
              uint64_t v148 = v51;
              uint64_t v149 = (char *)v46;
              if (v59)
              {
                uint64_t v60 = v53;
                uint64_t v61 = v146;
                uint64_t v62 = v60
                    + ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80));
                swift_bridgeObjectRetain_n();
                uint64_t v143 = v52;
                swift_bridgeObjectRetain_n();
                uint64_t v142 = v54;
                swift_bridgeObjectRetain_n();
                uint64_t v144 = v60;
                swift_bridgeObjectRetain_n();
                uint64_t v141 = v56;
                swift_bridgeObjectRetain_n();
                uint64_t v140 = v55;
                swift_bridgeObjectRetain_n();
                uint64_t v139 = v57;
                swift_bridgeObjectRetain_n();
                uint64_t v63 = *(void *)(v61 + 72);
                uint64_t v64 = (uint64_t)v147;
                uint64_t v65 = (uint64_t)v135;
                do
                {
                  sub_1BFECA5B4(v62, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:

                      break;
                    case 2u:
                    case 4u:
                    case 5u:
                      swift_unknownObjectRelease();
                      break;
                    case 3u:
                      sub_1C0207BE0((uint64_t)v25, v64);
                      sub_1C0207C44(v64 + *(int *)(v150 + 36), v65);
                      sub_1BFEC84E0();
                      uint64_t v67 = v66;
                      uint64_t v68 = *(void *)(v66 - 8);
                      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v65, 1, v66) != 1)
                      {
                        sub_1C151948C();
                        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v65, v67);
                        sub_1BFECEFA4(v64, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                        goto LABEL_22;
                      }
                      sub_1C0207CD8(v65);
                      sub_1BFECEFA4(v64, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                      break;
                    case 6u:
                    case 7u:
                      sub_1BFECEFA4((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                      break;
                    case 8u:
                      swift_bridgeObjectRelease();
                      break;
                    default:
LABEL_22:
                      MEMORY[0x1C18C66D0]();
                      if (*(void *)((v151 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v151 & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
                        sub_1C151EC8C();
                      sub_1C151ECEC();
                      sub_1C151EBEC();
                      uint64_t v64 = (uint64_t)v147;
                      break;
                  }
                  v62 += v63;
                  --v59;
                }
                while (v59);
                unint64_t v47 = v151;
                unint64_t v48 = MEMORY[0x1E4FBC860];
              }
              else
              {
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain_n();
                unint64_t v47 = v58;
                unint64_t v48 = v58;
              }
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              unint64_t v49 = (unint64_t)(v149 + 1);
              sub_1BFE52C14(v47);
              unint64_t v46 = v49;
              unint64_t v28 = v48;
            }
            while (v49 != v137);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            uint64_t v149 = (char *)v152;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v149 = (char *)v28;
          }
          ++v129;
          sub_1C0033494();
          sub_1C0033494();
          sub_1C0033494();
          uint64_t v31 = v129;
          sub_1BFE52C14((unint64_t)v149);
          unint64_t v32 = v128;
        }
        while (v31 != v121);
        swift_bridgeObjectRelease_n();
        unint64_t v28 = v153;
        a1 = v115;
        uint64_t v30 = v118;
        uint64_t v29 = v119;
      }
      LOBYTE(v153) = v114;
      (*(void (**)(unint64_t, unint64_t *, uint64_t))(v29 + 16))(v28, &v153, v30);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v22 = v117;
  }
  return sub_1BFECA5B4(a1, v22, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
}

Swift::OpaquePointer_optional __swiftcall FeedPersonalizationServiceType.bestOfGroup(from:context:allowClusteringFallback:)(Swift::OpaquePointer from, NewsFeed::FeedHeadlineScoringContext context, Swift::Bool allowClusteringFallback)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  __int16 v8 = *(unsigned __int8 *)context;
  int64_t v9 = *((void *)from._rawValue + 2);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1C05F69F4(0, v9, 0);
    uint64_t v10 = v34;
    uint64_t v12 = (long long *)((char *)from._rawValue + 32);
    do
    {
      long long v33 = *v12;
      uint64_t v34 = v10;
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      swift_unknownObjectRetain();
      id v15 = *((id *)&v33 + 1);
      if (v14 >= v13 >> 1)
      {
        sub_1C05F69F4(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v34;
      }
      *(void *)(v10 + 16) = v14 + 1;
      uint64_t v16 = v10 + 24 * v14;
      *(_OWORD *)(v16 + 32) = v33;
      *(void *)(v16 + 48) = 0;
      ++v12;
      --v9;
    }
    while (v9);
    uint64_t v6 = v32;
  }
  LOWORD(v34) = v8;
  if (qword_1EA194AF8 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for FeedPersonalizationClusteringRules();
  uint64_t v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1EA1ABEF8);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t *, Swift::Bool, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, &v34, allowClusteringFallback, v18, v6, v5);
  swift_bridgeObjectRelease();
  if (v19)
  {
    uint64_t v21 = *(void *)(v19 + 16);
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = (void **)(v19 + 40);
      uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
      do
      {
        uint64_t v25 = *v22;
        uint64_t v26 = swift_dynamicCastObjCProtocolConditional();
        if (v26)
        {
          uint64_t v27 = v26;
          swift_unknownObjectRetain();
          id v28 = v25;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v23 = sub_1C0EE25A4(0, v23[2] + 1, 1, v23);
          }
          unint64_t v30 = v23[2];
          unint64_t v29 = v23[3];
          if (v30 >= v29 >> 1) {
            uint64_t v23 = sub_1C0EE25A4((void *)(v29 > 1), v30 + 1, 1, v23);
          }
          v23[2] = v30 + 1;
          uint64_t v24 = &v23[2 * v30];
          v24[4] = v27;
          v24[5] = v28;
        }
        v22 += 3;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = (void *)MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v23 = 0;
  }
  uint64_t v31 = v23;
  result.value._rawValue = v31;
  result.is_nil = v20;
  return result;
}

uint64_t FeedPersonalizationService.__allocating_init(feedPersonalizingEngine:groupingPersonalizer:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t FeedPersonalizationService.score(items:context:)(unint64_t a1, unsigned __int16 *a2)
{
  unsigned int v4 = *a2;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_3;
    }
LABEL_8:
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
    uint64_t v12 = sub_1C02089DC(a1, v11);
    goto LABEL_9;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t v5 = *(void **)(v2 + 16);
  sub_1BFC9DBE8(0, &qword_1EB880D78);
  uint64_t v6 = (void *)sub_1C151EBAC();
  uint64_t v7 = 0;
  switch(v4 >> 14)
  {
    case 1u:
      uint64_t v7 = qword_1C1534008[(char)v4];
      break;
    case 3u:
      break;
    default:
      uint64_t v7 = FeedHeadlineScoringContext.configurationSet.getter();
      break;
  }
  id v8 = objc_msgSend(v5, sel_sortItems_options_configurationSet_, v6, 0, v7);

  id v9 = objc_msgSend(v8, sel_sortedItems);
  unint64_t v10 = sub_1C151EBCC();

  id v11 = v8;
  uint64_t v12 = sub_1C0207F10(v10, v11);
  swift_bridgeObjectRelease();

LABEL_9:
  return v12;
}

uint64_t FeedPersonalizationService.score(headlines:context:)(unint64_t a1)
{
  uint64_t v2 = v1;
  if (!(a1 >> 62))
  {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v5 = *(void **)(v2 + 16);
      swift_bridgeObjectRetain();
      sub_1C1520B5C();
      sub_1BFC9DBE8(0, &qword_1EB880D78);
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v14)
        {
          uint64_t v15 = v4 + 32;
          do
          {
            if (!swift_dynamicCastObjCProtocolConditional()) {
              break;
            }
            v15 += 8;
            --v14;
          }
          while (v14);
        }
      }
      goto LABEL_4;
    }
    return sub_1C0204B18(a1);
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v16) {
    return sub_1C0204B18(a1);
  }
  uint64_t v5 = *(void **)(v1 + 16);
  sub_1BFC9DBE8(0, &qword_1EB880D78);
  swift_bridgeObjectRetain();
  sub_1C152041C();
  swift_bridgeObjectRelease();
LABEL_4:
  sub_1BFC9DBE8(0, &qword_1EB880D78);
  uint64_t v6 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_sortItems_options_configurationSet_, v6, 0, FeedHeadlineScoringContext.configurationSet.getter());

  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB895E90);
  id v8 = (void *)sub_1C151EBAC();
  id v9 = objc_msgSend(v7, sel_scoreProfiles);
  FCAssignPersonalizationScoresFromProfiles();

  id v10 = objc_msgSend(v7, sel_sortedItems);
  unint64_t v11 = sub_1C151EBCC();

  id v12 = v7;
  uint64_t v13 = sub_1C02080D8(v11, v12);
  swift_bridgeObjectRelease();

  return (uint64_t)v13;
}

uint64_t FeedPersonalizationService.score(issues:context:)(unint64_t a1, char *a2)
{
  uint64_t v4 = *a2;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v12)
    {
      uint64_t v5 = *(void **)(v2 + 16);
      sub_1BFC9DBE8(0, &qword_1EB880D78);
      swift_bridgeObjectRetain();
      sub_1C152041C();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
LABEL_7:
    id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
    uint64_t v11 = sub_1C02086F0(a1, v13);

    return v11;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_7;
  }
  uint64_t v5 = *(void **)(v2 + 16);
  swift_bridgeObjectRetain();
  sub_1C1520B5C();
  sub_1BFC9DBE8(0, &qword_1EB880D78);
LABEL_4:
  sub_1BFC9DBE8(0, &qword_1EB880D78);
  uint64_t v6 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_sortItems_options_configurationSet_, v6, 0, qword_1C1534008[v4]);

  id v8 = objc_msgSend(v7, sel_sortedItems);
  unint64_t v9 = sub_1C151EBCC();

  id v10 = v7;
  uint64_t v11 = (uint64_t)sub_1C02082FC(v9, v10);
  swift_bridgeObjectRelease();

  return v11;
}

void FeedPersonalizationService.score(tags:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_1C151EBAC();
  id v3 = objc_msgSend(v1, sel_scoresForTagIDs_, v2);

  if (v3)
  {
    sub_1BFFBE2BC();
    uint64_t v4 = sub_1C151E33C();

    sub_1C02048E4(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t FeedPersonalizationService.bestOfGroup(from:context:allowClusteringFallback:clusteringRules:)(uint64_t a1, unsigned __int16 *a2)
{
  return sub_1C0208CE8(a1, a2);
}

double FeedPersonalizationService.baselineScore.getter()
{
  return 0.0;
}

Swift::OpaquePointer_optional __swiftcall FeedPersonalizationService.bestOfGroup(from:context:)(Swift::OpaquePointer from, NewsFeed::FeedHeadlineScoringContext context)
{
  unint64_t v3 = sub_1C018DD1C(MEMORY[0x1E4FBC860]);
  unint64_t v41 = (unint64_t)from._rawValue >> 62;
  if ((unint64_t)from._rawValue >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(((unint64_t)from._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      rawValue = from._rawValue;
      unint64_t v44 = (unint64_t)from._rawValue & 0xC000000000000001;
      uint64_t v5 = 4;
      do
      {
        uint64_t v7 = v5 - 4;
        if (v44)
        {
          id v8 = (void *)MEMORY[0x1C18C7CB0](v5 - 4, from._rawValue);
          uint64_t v9 = v5 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_22;
          }
        }
        else
        {
          id v8 = (void *)swift_unknownObjectRetain();
          uint64_t v9 = v5 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        id v10 = v8;
        id v11 = objc_msgSend(v8, sel_identifier);
        uint64_t v12 = sub_1C151E62C();
        from._rawValue = v13;

        unint64_t v14 = v3;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v45 = (void *)v3;
        unint64_t v17 = sub_1BFEF2D8C(v12, (uint64_t)from._rawValue);
        uint64_t v18 = *(void *)(v3 + 16);
        BOOL v19 = (v16 & 1) == 0;
        uint64_t v20 = v18 + v19;
        if (__OFADD__(v18, v19)) {
          goto LABEL_23;
        }
        unint64_t v3 = v16;
        if (*(void *)(v14 + 24) >= v20)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v23 = v45;
            if (v16) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_1C106AF80();
            uint64_t v23 = v45;
            if (v3) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_1C1055408(v20, isUniquelyReferenced_nonNull_native);
          unint64_t v21 = sub_1BFEF2D8C(v12, (uint64_t)from._rawValue);
          if ((v3 & 1) != (v22 & 1))
          {
            uint64_t v40 = (void *)sub_1C1520CFC();
            __break(1u);
            goto LABEL_33;
          }
          unint64_t v17 = v21;
          uint64_t v23 = v45;
          if (v3)
          {
LABEL_4:
            unint64_t v3 = (unint64_t)v23;
            uint64_t v6 = v23[7];
            swift_unknownObjectRelease();
            *(void *)(v6 + 8 * v17) = v10;
            goto LABEL_5;
          }
        }
        v23[(v17 >> 6) + 8] |= 1 << v17;
        uint64_t v24 = (Swift::OpaquePointer *)(v23[6] + 16 * v17);
        v24->_rawValue = (void *)v12;
        v24[1]._rawValue = from._rawValue;
        *(void *)(v23[7] + 8 * v17) = v10;
        uint64_t v25 = v23[2];
        BOOL v26 = __OFADD__(v25, 1);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_24;
        }
        unint64_t v3 = (unint64_t)v23;
        v23[2] = v27;
        swift_bridgeObjectRetain();
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v5;
        from._rawValue = rawValue;
      }
      while (v9 != v4);
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1EB87B060 != -1) {
    swift_once();
  }
  id v28 = (void *)qword_1EB93C700;
  sub_1BFECFA20(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
  if (v41)
  {
    swift_bridgeObjectRetain();
    id v32 = v28;
    uint64_t v30 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)(((unint64_t)from._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v31 = v28;
  }
  uint64_t v33 = MEMORY[0x1E4FBB5C8];
  *(void *)(v29 + 56) = MEMORY[0x1E4FBB550];
  *(void *)(v29 + 64) = v33;
  *(void *)(v29 + 32) = v30;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  uint64_t v34 = *(void **)(v42 + 24);
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB895E90);
  uint64_t v35 = (void *)sub_1C151EBAC();
  id v36 = objc_msgSend(v34, sel_bestOfGroupFromHeadlines_configurationSet_, v35, FeedHeadlineScoringContext.configurationSet.getter());

  unint64_t v37 = sub_1C151EBCC();
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1C0208504(v37, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  uint64_t v40 = (void *)v38;
LABEL_33:
  result.value._rawValue = v40;
  result.is_nil = v39;
  return result;
}

uint64_t FeedPersonalizationService.prepareForUse()()
{
  return sub_1C151911C();
}

void sub_1C02078B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  uint64_t v9 = *(void **)(a5 + 16);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1C005A48C;
  *(void *)(v10 + 24) = v8;
  v12[4] = sub_1BFC81770;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 1107296256;
  long long v12[2] = sub_1BFC9FC68;
  v12[3] = &block_descriptor_7;
  id v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_prepareForUseWithCompletionHandler_, v11);
  _Block_release(v11);
}

uint64_t FeedPersonalizationService.deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t FeedPersonalizationService.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0207A2C(unint64_t a1, unsigned __int16 *a2)
{
  return FeedPersonalizationService.score(items:context:)(a1, a2);
}

uint64_t sub_1C0207A50(unint64_t a1)
{
  return FeedPersonalizationService.score(headlines:context:)(a1);
}

uint64_t sub_1C0207A74(unint64_t a1, char *a2)
{
  return FeedPersonalizationService.score(issues:context:)(a1, a2);
}

void sub_1C0207A98()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 16);
  uint64_t v2 = (void *)sub_1C151EBAC();
  id v3 = objc_msgSend(v1, sel_scoresForTagIDs_, v2);

  if (v3)
  {
    sub_1BFFBE2BC();
    uint64_t v4 = sub_1C151E33C();

    sub_1C02048E4(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C0207B5C(uint64_t a1, unsigned __int16 *a2)
{
  return sub_1C0208CE8(a1, a2);
}

double sub_1C0207B84()
{
  return 0.0;
}

uint64_t sub_1C0207B8C()
{
  return sub_1C151911C();
}

uint64_t sub_1C0207BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatWebEmbed.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0207C44(uint64_t a1, uint64_t a2)
{
  sub_1BFECFA20(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0207CD8(uint64_t a1)
{
  sub_1BFECFA20(0, &qword_1EB894680, (uint64_t (*)(uint64_t))sub_1BFEC84E0, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0207D64(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (!v3) {
      return v4;
    }
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F69F4(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      break;
    }
    uint64_t v6 = 0;
    uint64_t v4 = v13;
    while (v3 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x1C18C7CB0](v6, a1);
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRetain();
      id v8 = objc_msgSend(a2, sel_objectForKey_, v7);
      if (!v8) {
        id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
      }
      swift_unknownObjectRelease();
      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      if (v10 >= v9 >> 1) {
        sub_1C05F69F4(v9 > 1, v10 + 1, 1);
      }
      ++v6;
      *(void *)(v13 + 16) = v10 + 1;
      id v11 = (void *)(v13 + 24 * v10);
      v11[4] = v7;
      v11[5] = v8;
      v11[6] = 0;
      if (v3 == v6) {
        return v4;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0207F10(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v4 = MEMORY[0x1E4FBC860];
    if (!v3) {
      return v4;
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F69F4(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      break;
    }
    uint64_t v6 = 0;
    uint64_t v4 = v14;
    while (v3 != v6)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = MEMORY[0x1C18C7CB0](v6, a1);
      }
      else
      {
        uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      swift_unknownObjectRetain();
      id v8 = objc_msgSend(a2, sel_scoreProfiles);
      id v9 = objc_msgSend(v8, sel_objectForKey_, v7);

      if (!v9) {
        id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
      }
      swift_unknownObjectRelease();
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_1C05F69F4(v10 > 1, v11 + 1, 1);
      }
      ++v6;
      *(void *)(v14 + 16) = v11 + 1;
      uint64_t v12 = (void *)(v14 + 24 * v11);
      v12[4] = v7;
      v12[5] = v9;
      void v12[6] = 0;
      if (v3 == v6) {
        return v4;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_1C02080D8(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v6 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = MEMORY[0x1C18C7CB0](i - 4, a1);
          uint64_t v8 = i - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(a1 + 8 * i);
          swift_unknownObjectRetain();
          uint64_t v8 = i - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        uint64_t v9 = swift_dynamicCastObjCProtocolConditional();
        if (v9)
        {
          uint64_t v10 = v9;
          swift_unknownObjectRetain();
          id v11 = objc_msgSend(a2, sel_scoreProfiles);
          id v12 = objc_msgSend(v11, sel_objectForKey_, v7);

          if (!v12) {
            id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
          }
          swift_unknownObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v4 = sub_1C0EE25A4(0, v4[2] + 1, 1, v4);
          }
          unint64_t v14 = v4[2];
          unint64_t v13 = v4[3];
          if (v14 >= v13 >> 1) {
            uint64_t v4 = sub_1C0EE25A4((void *)(v13 > 1), v14 + 1, 1, v4);
          }
          v4[2] = v14 + 1;
          uint64_t v15 = &v4[2 * v14];
          v15[4] = v10;
          v15[5] = v12;
        }
        else
        {
          swift_unknownObjectRelease();
        }
        if (v8 == v3)
        {
          swift_bridgeObjectRelease();
          return v4;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x1E4FBC860];
}

void *sub_1C02082FC(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v5 = 4;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = MEMORY[0x1C18C7CB0](v5 - 4, a1);
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(a1 + 8 * v5);
          swift_unknownObjectRetain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (v9)
        {
          uint64_t v10 = v9;
          swift_unknownObjectRetain();
          id v11 = objc_msgSend(a2, sel_scoreProfiles);
          id v12 = objc_msgSend(v11, sel_objectForKey_, v7);

          if (!v12) {
            id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E420]), sel_init);
          }
          swift_unknownObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v4 = sub_1C0EE26D4(0, v4[2] + 1, 1, v4);
          }
          unint64_t v14 = v4[2];
          unint64_t v13 = v4[3];
          if (v14 >= v13 >> 1) {
            uint64_t v4 = sub_1C0EE26D4((void *)(v13 > 1), v14 + 1, 1, v4);
          }
          v4[2] = v14 + 1;
          uint64_t v15 = &v4[2 * v14];
          v15[4] = v10;
          v15[5] = v12;
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v5;
        if (v8 == v3) {
          goto LABEL_22;
        }
      }
    }
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C0208504(unint64_t a1, uint64_t a2)
{
  uint64_t i = v2;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C15204BC();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v17 = i;
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v7 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = (void *)MEMORY[0x1C18C7CB0](i - 4, a1);
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v8 = *(void **)(a1 + 8 * i);
          swift_unknownObjectRetain();
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        id v10 = objc_msgSend(v8, sel_itemID, v17);
        uint64_t v11 = sub_1C151E62C();
        uint64_t v13 = v12;

        if (*(void *)(a2 + 16) && (sub_1BFEF2D8C(v11, v13), (v14 & 1) != 0))
        {
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
          uint64_t v15 = swift_bridgeObjectRelease();
          MEMORY[0x1C18C66D0](v15);
          if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
        }
        else
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (v9 == v6)
        {
          swift_bridgeObjectRelease();
          return v18;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C02086F0(unint64_t a1, void *a2)
{
  unint64_t v21 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_41;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F69B4(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    if (!v3) {
      break;
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C15204BC();
    }
    else
    {
      uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    unint64_t v6 = 0;
    unint64_t v23 = a1 & 0xC000000000000001;
    while ((v3 & ~(v3 >> 63)) != v6)
    {
      if (v20 == v6) {
        goto LABEL_39;
      }
      if (v23)
      {
        id v7 = (id)MEMORY[0x1C18C7CB0](v6, a1);
      }
      else
      {
        if (v6 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      id v8 = v7;
      unint64_t v10 = *(void *)(v24 + 16);
      unint64_t v9 = *(void *)(v24 + 24);
      id v11 = a2;
      if (v10 >= v9 >> 1) {
        sub_1C05F69B4(v9 > 1, v10 + 1, 1);
      }
      ++v6;
      *(void *)(v24 + 16) = v10 + 1;
      uint64_t v12 = v24 + 16 * v10;
      *(void *)(v12 + 32) = v8;
      *(void *)(v12 + 40) = v11;
      if (v3 == v6)
      {
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
        goto LABEL_20;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v23 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
LABEL_20:
  if (v21)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v3 == v13) {
        break;
      }
LABEL_24:
      if (v23)
      {
        id v14 = (id)MEMORY[0x1C18C7CB0](v3, a1);
      }
      else
      {
        if (v3 < 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        if ((unint64_t)v3 >= *(void *)(v5 + 16)) {
          goto LABEL_36;
        }
        id v14 = *(id *)(a1 + 8 * v3 + 32);
      }
      id v15 = v14;
      if (__OFADD__(v3, 1)) {
        goto LABEL_37;
      }
      unint64_t v17 = *(void *)(v24 + 16);
      unint64_t v16 = *(void *)(v24 + 24);
      id v18 = a2;
      if (v17 >= v16 >> 1) {
        sub_1C05F69B4(v16 > 1, v17 + 1, 1);
      }
      *(void *)(v24 + 16) = v17 + 1;
      uint64_t v19 = v24 + 16 * v17;
      *(void *)(v19 + 32) = v15;
      *(void *)(v19 + 40) = v18;
      ++v3;
      if (!v21) {
        goto LABEL_21;
      }
    }
  }
  else
  {
LABEL_21:
    if (v3 != *(void *)(v5 + 16)) {
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1C02089DC(unint64_t a1, void *a2)
{
  unint64_t v19 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_42;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v22 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C05F69F4(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    if (!v3) {
      break;
    }
    if (v19)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1C15204BC();
    }
    else
    {
      uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    unint64_t v6 = 0;
    unint64_t v21 = a1 & 0xC000000000000001;
    while ((v3 & ~(v3 >> 63)) != v6)
    {
      if (v18 == v6) {
        goto LABEL_40;
      }
      if (v21)
      {
        uint64_t v7 = MEMORY[0x1C18C7CB0](v6, a1);
      }
      else
      {
        if (v6 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_41;
        }
        uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      unint64_t v9 = *(void *)(v22 + 16);
      unint64_t v8 = *(void *)(v22 + 24);
      id v10 = a2;
      if (v9 >= v8 >> 1) {
        sub_1C05F69F4(v8 > 1, v9 + 1, 1);
      }
      ++v6;
      *(void *)(v22 + 16) = v9 + 1;
      id v11 = (void *)(v22 + 24 * v9);
      v11[4] = v7;
      v11[5] = v10;
      v11[6] = 0;
      if (v3 == v6)
      {
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
        goto LABEL_20;
      }
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v21 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
LABEL_20:
  if (v19)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v3 == v12) {
        break;
      }
LABEL_24:
      if (v21)
      {
        uint64_t v13 = MEMORY[0x1C18C7CB0](v3, a1);
        if (__OFADD__(v3, 1)) {
          goto LABEL_38;
        }
      }
      else
      {
        if (v3 < 0)
        {
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        if ((unint64_t)v3 >= *(void *)(v5 + 16)) {
          goto LABEL_37;
        }
        uint64_t v13 = *(void *)(a1 + 8 * v3 + 32);
        swift_unknownObjectRetain();
        if (__OFADD__(v3, 1)) {
          goto LABEL_38;
        }
      }
      unint64_t v15 = *(void *)(v22 + 16);
      unint64_t v14 = *(void *)(v22 + 24);
      id v16 = a2;
      if (v15 >= v14 >> 1) {
        sub_1C05F69F4(v14 > 1, v15 + 1, 1);
      }
      *(void *)(v22 + 16) = v15 + 1;
      unint64_t v17 = (void *)(v22 + 24 * v15);
      v17[4] = v13;
      v17[5] = v16;
      v17[6] = 0;
      ++v3;
      if (!v19) {
        goto LABEL_21;
      }
    }
  }
  else
  {
LABEL_21:
    if (v3 != *(void *)(v5 + 16)) {
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1C0208CE8(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  unsigned int v5 = *a2;
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F7E560]), sel_init);
  uint64_t v7 = a1 + 32;
  swift_bridgeObjectRetain();
  unint64_t v8 = (void *)(a1 + 40);
  uint64_t v9 = v3;
  do
  {
    objc_msgSend(v6, sel_setObject_forKey_, *v8, *(v8 - 1));
    v8 += 3;
    --v9;
  }
  while (v9);
  swift_bridgeObjectRelease();
  id v10 = *(void **)(v2 + 24);
  sub_1C152028C();
  do
  {
    v7 += 24;
    swift_unknownObjectRetain();
    sub_1C152025C();
    sub_1C152029C();
    sub_1C15202AC();
    sub_1C152026C();
    --v3;
  }
  while (v3);
  sub_1BFC9DBE8(0, &qword_1EB880D78);
  id v11 = (void *)sub_1C151EBAC();
  swift_release();
  uint64_t v12 = 0;
  switch(v5 >> 14)
  {
    case 1u:
      uint64_t v12 = qword_1C1534008[(char)v5];
      break;
    case 3u:
      break;
    default:
      uint64_t v12 = FeedHeadlineScoringContext.configurationSet.getter();
      break;
  }
  id v14 = objc_msgSend(v10, sel_bestOfGroupFromFeedItems_scoreProfiles_configurationSet_, v11, v6, v12);

  unint64_t v15 = sub_1C151EBCC();
  id v16 = v6;
  uint64_t v13 = sub_1C0207D64(v15, v16);
  swift_bridgeObjectRelease();

  return v13;
}

double _s8NewsFeed0B22PersonalizationServiceC10groupScore5itemsSdSayAA0B10ScoredItemVG_tF_0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    double v11 = MEMORY[0x1E4FBC860];
    sub_1C05F6CA8(0, v1, 0);
    double v3 = v11;
    uint64_t v4 = (id *)(a1 + 40);
    do
    {
      objc_msgSend(*v4, sel_sortingScore);
      uint64_t v6 = v5;
      double v10 = v3;
      unint64_t v8 = *(void *)(*(void *)&v3 + 16);
      unint64_t v7 = *(void *)(*(void *)&v3 + 24);
      if (v8 >= v7 >> 1) {
        sub_1C05F6CA8(v7 > 1, v8 + 1, 1);
      }
      *(void *)(*(void *)&v3 + 16) = v8 + 1;
      *(void *)(*(void *)&v3 + 8 * v8 + 32) = v6;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  sub_1C0209230();
  sub_1C151EC5C();
  swift_bridgeObjectRelease();
  return v10;
}

double _s8NewsFeed0B22PersonalizationServiceC10groupScore9headlinesSdSayAA0B14ScoredHeadlineVG_tF_0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    double v11 = MEMORY[0x1E4FBC860];
    sub_1C05F6CA8(0, v1, 0);
    double v3 = v11;
    uint64_t v4 = (id *)(a1 + 40);
    do
    {
      objc_msgSend(*v4, sel_sortingScore);
      uint64_t v6 = v5;
      double v10 = v3;
      unint64_t v8 = *(void *)(*(void *)&v3 + 16);
      unint64_t v7 = *(void *)(*(void *)&v3 + 24);
      if (v8 >= v7 >> 1) {
        sub_1C05F6CA8(v7 > 1, v8 + 1, 1);
      }
      *(void *)(*(void *)&v3 + 16) = v8 + 1;
      *(void *)(*(void *)&v3 + 8 * v8 + 32) = v6;
      v4 += 2;
      --v1;
    }
    while (v1);
  }
  sub_1C0209230();
  sub_1C151EC5C();
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1C0209110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C02078B0(a1, a2, a3, a4, v4);
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.score(items:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.score(headlines:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.score(issues:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.score(tags:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.groupScore(items:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.groupScore(headlines:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.bestOfGroup(from:context:allowClusteringFallback:clusteringRules:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.baselineScore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of FeedPersonalizationServiceType.prepareForUse()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t method lookup function for FeedPersonalizationService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedPersonalizationService);
}

uint64_t dispatch thunk of FeedPersonalizationService.__allocating_init(feedPersonalizingEngine:groupingPersonalizer:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1C02091F8()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1C0209230()
{
  unint64_t result = qword_1EB85E478;
  if (!qword_1EB85E478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E478);
  }
  return result;
}

Swift::Void __swiftcall TaskScheduler.scheduleIfMainElseStart(_:)(NSOperation a1)
{
  if (objc_msgSend(self, sel_isMainThread))
  {
    sub_1C15182DC();
  }
  else
  {
    [(objc_class *)a1.super.isa start];
  }
}

uint64_t FormatAdMetricsNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatAdMetricsNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAdMetricsNode.identifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatAdMetricsNode.privacyMarkerFrameIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t FormatAdMetricsNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 48);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatAdMetricsNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 56);
  return swift_retain();
}

uint64_t FormatAdMetricsNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatAdMetricsNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAdMetricsNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatAdMetricsNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 72);
}

uint64_t FormatAdMetricsNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*FormatAdMetricsNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t FormatAdMetricsNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 80);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

unint64_t sub_1C0209624(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 80);
  *(void *)(v3 + 80) = v2;
  sub_1BFE6FA30(v2);
  return sub_1BFF0056C(v4);
}

unint64_t FormatAdMetricsNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 80);
  *(void *)(v1 + 80) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatAdMetricsNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatAdMetricsNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t FormatAdMetricsNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatAdMetricsNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatAdMetricsNode.__allocating_init(identifier:content:privacyMarkerFrameIdentifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t *a10, char a11)
{
  uint64_t v17 = swift_allocObject();
  FormatAdMetricsNode.init(identifier:content:privacyMarkerFrameIdentifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:)(a1, a2, v18, a4, a5, a6, a7, a8, a9, a10, a11);
  return v17;
}

uint64_t FormatAdMetricsNode.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFF0056C(*(void *)(v0 + 80));
  return v0;
}

uint64_t FormatAdMetricsNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 48));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BFF0056C(*(void *)(v0 + 80));
  return swift_deallocClassInstance();
}

uint64_t sub_1C0209938(uint64_t a1)
{
  uint64_t result = sub_1C0209A58(&qword_1EA1981F8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C020997C(void *a1)
{
  a1[1] = sub_1C0209A58(&qword_1EB87ED80);
  a1[2] = sub_1C0209A58(&qword_1EB860298);
  uint64_t result = sub_1C0209A58(&qword_1EA198200);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0209A08(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed19FormatAdMetricsNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C0209A14(uint64_t a1)
{
  uint64_t result = sub_1C0209A58(&qword_1EA198208);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0209A58(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatAdMetricsNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0209A98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v15 = *(void *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v16 = *(void *)(a4 + 16);
  uint64_t v17 = *(void *)(a4 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  if (*(void *)(v15 + 40))
  {
    uint64_t v35 = *(void *)(v15 + 32);
    uint64_t v36 = *(void *)(v15 + 40);
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v16 = v35;
    uint64_t v17 = v36;
  }
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v28 = *(void *)(a4 + 16);
  uint64_t v29 = *(void *)(a4 + 24);
  swift_bridgeObjectRetain();
  swift_release();
  swift_unownedRetainStrong();
  uint64_t v18 = *(void *)(a4 + 56);
  swift_retain();
  swift_release();
  uint64_t v30 = v16;
  if (v18)
  {
    uint64_t v27 = *(void *)(v18 + 16);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v27 = 0;
  }
  uint64_t v19 = swift_allocObject();
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v20 = *(void *)(a4 + 72);
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  unint64_t v21 = *(void *)(a4 + 80);
  sub_1BFE6FA30(v21);
  swift_release();
  sub_1BFE6EF70(a3, &v37);
  sub_1BFF0056C(v21);
  uint64_t v22 = v37;
  swift_unownedRetainStrong();
  swift_beginAccess();
  char v23 = *(unsigned char *)(a4 + 88);
  swift_release();
  sub_1C1517EFC();
  swift_unownedRetainStrong();
  uint64_t v24 = *(void *)(a4 + 32);
  uint64_t v25 = *(void *)(a4 + 40);
  swift_bridgeObjectRetain();
  swift_release();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  *(void *)(v19 + 32) = v30;
  *(void *)(v19 + 40) = v17;
  *(void *)(v19 + 48) = v28;
  *(void *)(v19 + 56) = v29;
  *(double *)(v19 + 64) = a6;
  *(double *)(v19 + 72) = a7;
  *(double *)(v19 + 80) = a8;
  *(double *)(v19 + 88) = a9;
  *(void *)(v19 + 96) = v27;
  *(void *)(v19 + 104) = v20;
  *(void *)(v19 + 112) = v22;
  *(unsigned char *)(v19 + 120) = v23;
  *(void *)(v19 + 128) = v34;
  *(void *)(v19 + 136) = v24;
  *(void *)(v19 + 144) = v25;
  *a5 = v19 | 0x5000000000000004;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0209D48@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0209D98@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C0209DE8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 72);
  return result;
}

uint64_t sub_1C0209E30(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 72) = v2;
  return result;
}

unint64_t sub_1C0209E74@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 80);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C0209EC4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 88);
  return result;
}

uint64_t sub_1C0209F0C(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 88) = v2;
  return result;
}

uint64_t method lookup function for FormatAdMetricsNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatAdMetricsNode);
}

uint64_t dispatch thunk of FormatAdMetricsNode.__allocating_init(identifier:content:privacyMarkerFrameIdentifier:size:resize:adjustments:zIndex:visibility:isUserInteractionEnabled:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1C0209F8C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 112));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0209FF4(void *a1)
{
  sub_1C020FD04(0, &qword_1EA198288, (uint64_t (*)(void))sub_1C020FC5C, (uint64_t)&type metadata for DebugInspectionScoreProfile.Cohort.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C020FC5C();
  sub_1C1520F0C();
  char v13 = 0;
  sub_1C15207CC();
  if (!v1)
  {
    char v12 = 1;
    sub_1C15207EC();
    char v11 = 2;
    sub_1C15207EC();
    char v10 = 3;
    sub_1C15207EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C020A1D8(char a1)
{
  unint64_t result = 0x6353726576726573;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6353746E65696C63;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 6:
      unint64_t result = 0x726F635369626174;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C020A2E4(void *a1)
{
  sub_1C020FD04(0, &qword_1EA198290, (uint64_t (*)(void))sub_1C020FCB0, (uint64_t)&type metadata for DebugInspectionScoreProfile.Coefficients.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C020FCB0();
  sub_1C1520F0C();
  char v17 = 0;
  sub_1C15207EC();
  if (!v1)
  {
    char v16 = 1;
    sub_1C15207EC();
    char v15 = 2;
    sub_1C15207EC();
    char v14 = 3;
    sub_1C15207EC();
    char v13 = 4;
    sub_1C15207EC();
    char v12 = 5;
    sub_1C15207EC();
    char v11 = 6;
    sub_1C15207EC();
    char v10 = 7;
    sub_1C15207EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C020A56C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736B63696C63;
      break;
    case 2:
      uint64_t result = 0x6B63696C43776172;
      break;
    case 3:
      uint64_t result = 0x6973736572706D69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C020A608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C020C078(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C020A630(uint64_t a1)
{
  unint64_t v2 = sub_1C020FC5C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C020A66C(uint64_t a1)
{
  unint64_t v2 = sub_1C020FC5C();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C020A6A8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C020C25C(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1C020A6F0(void *a1)
{
  return sub_1C0209FF4(a1);
}

unint64_t sub_1C020A708()
{
  return sub_1C020A1D8(*v0);
}

uint64_t sub_1C020A710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C020C4F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C020A738(uint64_t a1)
{
  unint64_t v2 = sub_1C020FCB0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C020A774(uint64_t a1)
{
  unint64_t v2 = sub_1C020FCB0();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C020A7B0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C020C83C(a1, v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1C020A7F4(void *a1)
{
  return sub_1C020A2E4(a1);
}

uint64_t sub_1C020A80C(char a1)
{
  uint64_t result = 0x4365727574616566;
  switch(a1)
  {
    case 1:
    case 8:
    case 11:
    case 14:
    case 15:
    case 16:
      uint64_t result = 0xD000000000000014;
      break;
    case 2:
      uint64_t result = 0xD000000000000013;
      break;
    case 3:
      uint64_t result = 0xD000000000000010;
      break;
    case 4:
      uint64_t result = 0x6E69646465626D65;
      break;
    case 5:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 6:
      uint64_t result = 0xD000000000000011;
      break;
    case 7:
      uint64_t result = 0x726F635369626174;
      break;
    case 9:
      uint64_t result = 0xD000000000000013;
      break;
    case 10:
      uint64_t result = 0xD000000000000017;
      break;
    case 12:
      uint64_t result = 0xD000000000000018;
      break;
    case 13:
      uint64_t result = 0x6C754D6F69647561;
      break;
    case 17:
      uint64_t result = 0xD000000000000018;
      break;
    case 18:
      uint64_t result = 0xD000000000000013;
      break;
    case 19:
      uint64_t result = 0xD000000000000012;
      break;
    case 20:
      uint64_t result = 0xD000000000000016;
      break;
    case 21:
      uint64_t result = 0xD000000000000010;
      break;
    case 22:
      uint64_t result = 0xD000000000000015;
      break;
    case 23:
      uint64_t result = 0xD000000000000016;
      break;
    case 24:
      uint64_t result = 0xD000000000000012;
      break;
    case 25:
      uint64_t result = 0xD000000000000011;
      break;
    case 26:
      unsigned int v3 = 1852138867;
      goto LABEL_24;
    case 27:
      unsigned int v3 = 1684104562;
LABEL_24:
      uint64_t result = v3 | 0x616E655000000000;
      break;
    case 28:
      uint64_t result = 0x64656E657473696CLL;
      break;
    case 29:
      uint64_t result = 0xD000000000000011;
      break;
    case 30:
      uint64_t result = 0xD000000000000010;
      break;
    case 31:
      uint64_t result = 0xD000000000000013;
      break;
    case 32:
      uint64_t result = 0xD000000000000011;
      break;
    case 33:
      uint64_t result = 0xD000000000000015;
      break;
    case 34:
      uint64_t result = 0x53676E6974726F73;
      break;
    case 35:
      uint64_t result = 0x6154776F64616873;
      break;
    case 36:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 37:
      uint64_t result = 0x6F436C61626F6C67;
      break;
    case 38:
      uint64_t result = 0x6963696666656F63;
      break;
    case 39:
      uint64_t result = 0x56676E69726F6373;
      break;
    case 40:
      uint64_t result = 0xD000000000000017;
      break;
    case 41:
      uint64_t result = 0x696C7069746C756DLL;
      break;
    case 42:
      uint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C020AD1C(void *a1)
{
  uint64_t v3 = v1;
  sub_1C020FD04(0, &qword_1EA198238, (uint64_t (*)(void))sub_1C020F69C, (uint64_t)&type metadata for DebugInspectionScoreProfile.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C020F69C();
  sub_1C1520F0C();
  LOBYTE(v14) = 0;
  sub_1C15207EC();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1C15207EC();
    LOBYTE(v14) = 2;
    sub_1C15207EC();
    LOBYTE(v14) = 3;
    sub_1C15207EC();
    LOBYTE(v14) = 4;
    sub_1C15207EC();
    LOBYTE(v14) = 5;
    sub_1C15207EC();
    LOBYTE(v14) = 6;
    sub_1C15207EC();
    LOBYTE(v14) = 7;
    sub_1C15207EC();
    LOBYTE(v14) = 8;
    sub_1C15207EC();
    LOBYTE(v14) = 9;
    sub_1C15207EC();
    LOBYTE(v14) = 10;
    sub_1C15207EC();
    LOBYTE(v14) = 11;
    sub_1C15207EC();
    LOBYTE(v14) = 12;
    sub_1C15207EC();
    LOBYTE(v14) = 13;
    sub_1C15207EC();
    LOBYTE(v14) = 14;
    sub_1C15207EC();
    LOBYTE(v14) = 15;
    sub_1C15207EC();
    LOBYTE(v14) = 16;
    sub_1C15207EC();
    LOBYTE(v14) = 17;
    sub_1C15207EC();
    LOBYTE(v14) = 18;
    sub_1C15207EC();
    LOBYTE(v14) = 19;
    sub_1C15207EC();
    LOBYTE(v14) = 20;
    sub_1C15207EC();
    LOBYTE(v14) = 21;
    sub_1C15207EC();
    LOBYTE(v14) = 22;
    sub_1C15207EC();
    LOBYTE(v14) = 23;
    sub_1C15207EC();
    LOBYTE(v14) = 24;
    sub_1C15207EC();
    LOBYTE(v14) = 25;
    sub_1C15207EC();
    LOBYTE(v14) = 26;
    sub_1C15207EC();
    LOBYTE(v14) = 27;
    sub_1C15207EC();
    LOBYTE(v14) = 28;
    sub_1C15207EC();
    LOBYTE(v14) = 29;
    sub_1C15207EC();
    LOBYTE(v14) = 30;
    sub_1C15207EC();
    LOBYTE(v14) = 31;
    sub_1C15207EC();
    LOBYTE(v14) = 32;
    sub_1C15207EC();
    LOBYTE(v14) = 33;
    sub_1C15207EC();
    LOBYTE(v14) = 34;
    sub_1C15207EC();
    LOBYTE(v14) = 35;
    sub_1C15207EC();
    LOBYTE(v14) = 36;
    sub_1C15207EC();
    long long v10 = *(_OWORD *)(v3 + 312);
    long long v14 = *(_OWORD *)(v3 + 296);
    long long v15 = v10;
    *(void *)&long long v16 = *(void *)(v3 + 328);
    char v18 = 37;
    sub_1C020F808();
    sub_1C152080C();
    long long v11 = *(_OWORD *)(v3 + 352);
    long long v14 = *(_OWORD *)(v3 + 336);
    long long v15 = v11;
    long long v12 = *(_OWORD *)(v3 + 384);
    long long v16 = *(_OWORD *)(v3 + 368);
    long long v17 = v12;
    char v18 = 38;
    sub_1C020F85C();
    sub_1C152080C();
    LOBYTE(v14) = 39;
    sub_1C152082C();
    LOBYTE(v14) = 40;
    sub_1C152074C();
    LOBYTE(v14) = 41;
    sub_1C15207EC();
    LOBYTE(v14) = 42;
    sub_1C15207EC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C020B560()
{
  return sub_1C020A80C(*v0);
}

uint64_t sub_1C020B568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C020D980(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C020B590(unsigned char *a1@<X8>)
{
  *a1 = 43;
}

uint64_t sub_1C020B59C(uint64_t a1)
{
  unint64_t v2 = sub_1C020F69C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C020B5D8(uint64_t a1)
{
  unint64_t v2 = sub_1C020F69C();
  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1C020B614@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1C020E9DC(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x1B8uLL);
  }
  return result;
}

uint64_t sub_1C020B668(void *a1)
{
  return sub_1C020AD1C(a1);
}

uint64_t sub_1C020B680@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[52];
  if (v3)
  {
    uint64_t v4 = v1[51];
    sub_1BFEFDD10(0, (unint64_t *)&qword_1EA198210, (uint64_t)&type metadata for DebugInspectionDataItem, MEMORY[0x1E4FBBE00]);
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 32) = 0xD000000000000012;
    *(void *)(v5 + 40) = 0x80000001C1607760;
    uint64_t v6 = MEMORY[0x1E4FBB1A0];
    uint64_t v7 = MEMORY[0x1E4FBB208];
    *(_OWORD *)(v5 + 16) = xmmword_1C1529AE0;
    *(void *)(v5 + 72) = v6;
    *(void *)(v5 + 80) = v7;
    *(void *)(v5 + 48) = v4;
    *(void *)(v5 + 56) = v3;
    *(unsigned char *)(v5 + 88) = 0;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  sub_1BFEFDD10(0, (unint64_t *)&qword_1EA198210, (uint64_t)&type metadata for DebugInspectionDataItem, MEMORY[0x1E4FBBE00]);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C1531C20;
  uint64_t v9 = v1[1];
  *(void *)(v8 + 48) = *v1;
  *(void *)(v8 + 112) = v9;
  uint64_t v10 = v1[3];
  *(void *)(v8 + 176) = v1[2];
  *(void *)(v8 + 240) = v10;
  *(void *)(v8 + 304) = v1[4];
  uint64_t v11 = v1[7];
  *(void *)(v8 + 368) = v1[6];
  uint64_t v12 = v1[9];
  *(void *)(v8 + 432) = v1[8];
  *(void *)(v8 + 496) = v12;
  *(void *)(v8 + 560) = v11;
  uint64_t v13 = v1[11];
  *(void *)(v8 + 624) = v1[10];
  *(void *)(v8 + 688) = v13;
  *(void *)(v8 + 752) = v1[12];
  uint64_t v14 = v1[34];
  *(void *)(v8 + 816) = v1[33];
  *(void *)(v8 + 880) = v14;
  uint64_t v15 = v1[36];
  *(void *)(v8 + 944) = v1[35];
  *(void *)(v8 + 32) = 0x2065727574616546;
  *(void *)(v8 + 40) = 0xEB00000000525443;
  uint64_t v16 = MEMORY[0x1E4FBB3D0];
  uint64_t v17 = MEMORY[0x1E4FBB440];
  *(void *)(v8 + 72) = MEMORY[0x1E4FBB3D0];
  *(void *)(v8 + 80) = v17;
  *(unsigned char *)(v8 + 88) = 0;
  *(void *)(v8 + 96) = 0xD000000000000016;
  *(void *)(v8 + 104) = 0x80000001C16075D0;
  *(void *)(v8 + 136) = v16;
  *(void *)(v8 + 144) = v17;
  *(unsigned char *)(v8 + 152) = 0;
  *(void *)(v8 + 160) = 0xD000000000000015;
  *(void *)(v8 + 168) = 0x80000001C16075F0;
  *(void *)(v8 + 200) = v16;
  *(void *)(v8 + 208) = v17;
  *(unsigned char *)(v8 + 216) = 0;
  *(void *)(v8 + 224) = 0xD000000000000012;
  *(void *)(v8 + 232) = 0x80000001C1607610;
  *(void *)(v8 + 264) = v16;
  *(void *)(v8 + 272) = v17;
  *(unsigned char *)(v8 + 280) = 0;
  *(void *)(v8 + 288) = 0x6E69646465626D45;
  *(void *)(v8 + 296) = 0xEF65726F63532067;
  *(void *)(v8 + 328) = v16;
  *(void *)(v8 + 336) = v17;
  *(unsigned char *)(v8 + 344) = 0;
  *(void *)(v8 + 352) = 0xD000000000000013;
  *(void *)(v8 + 360) = 0x80000001C1607630;
  *(void *)(v8 + 392) = v16;
  *(void *)(v8 + 400) = v17;
  *(unsigned char *)(v8 + 408) = 0;
  *(void *)(v8 + 416) = 0xD000000000000017;
  *(void *)(v8 + 424) = 0x80000001C1607650;
  *(void *)(v8 + 456) = v16;
  *(void *)(v8 + 464) = v17;
  *(unsigned char *)(v8 + 472) = 0;
  *(void *)(v8 + 480) = 0xD000000000000015;
  *(void *)(v8 + 488) = 0x80000001C1607670;
  *(void *)(v8 + 520) = v16;
  *(void *)(v8 + 528) = v17;
  *(unsigned char *)(v8 + 536) = 0;
  *(void *)(v8 + 544) = 0x6F63532069626154;
  *(void *)(v8 + 552) = 0xEA00000000006572;
  *(void *)(v8 + 584) = v16;
  *(void *)(v8 + 592) = v17;
  *(unsigned char *)(v8 + 600) = 0;
  *(void *)(v8 + 608) = 0xD000000000000019;
  *(void *)(v8 + 616) = 0x80000001C1607690;
  *(void *)(v8 + 648) = v16;
  *(void *)(v8 + 656) = v17;
  *(unsigned char *)(v8 + 664) = 0;
  *(void *)(v8 + 672) = 0xD000000000000015;
  *(void *)(v8 + 680) = 0x80000001C16076B0;
  *(void *)(v8 + 712) = v16;
  *(void *)(v8 + 720) = v17;
  *(unsigned char *)(v8 + 728) = 0;
  *(void *)(v8 + 736) = 0xD00000000000001ALL;
  *(void *)(v8 + 744) = 0x80000001C16076D0;
  *(void *)(v8 + 776) = v16;
  *(void *)(v8 + 784) = v17;
  *(unsigned char *)(v8 + 792) = 0;
  *(void *)(v8 + 800) = 0xD000000000000016;
  *(void *)(v8 + 808) = 0x80000001C16076F0;
  *(void *)(v8 + 840) = v16;
  *(void *)(v8 + 848) = v17;
  *(unsigned char *)(v8 + 856) = 0;
  strcpy((char *)(v8 + 864), "Sorting Score");
  *(_WORD *)(v8 + 878) = -4864;
  *(void *)(v8 + 904) = v16;
  *(void *)(v8 + 912) = v17;
  *(unsigned char *)(v8 + 920) = 0;
  *(void *)(v8 + 928) = 0xD000000000000011;
  *(void *)(v8 + 936) = 0x80000001C1607710;
  *(void *)(v8 + 968) = v16;
  *(void *)(v8 + 976) = v17;
  *(unsigned char *)(v8 + 984) = 0;
  *(void *)(v8 + 992) = 0xD000000000000021;
  *(void *)(v8 + 1000) = 0x80000001C1607730;
  *(void *)(v8 + 1032) = v16;
  *(void *)(v8 + 1040) = v17;
  *(void *)(v8 + 1008) = v15;
  *(unsigned char *)(v8 + 1048) = 0;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C10484FC(v8);
  *(void *)(a1 + 24) = &type metadata for DebugInspectionDataSection;
  *(void *)(a1 + 32) = &off_1F1B9F170;
  strcpy((char *)a1, "Score Profile");
  *(_WORD *)(a1 + 14) = -4864;
  *(void *)(a1 + 16) = v5;
  return result;
}

uint64_t sub_1C020BAEC@<X0>(uint64_t a1@<X8>)
{
  sub_1BFEFDD10(0, (unint64_t *)&qword_1EA198210, (uint64_t)&type metadata for DebugInspectionDataItem, MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1C152C7F0;
  *(void *)(result + 32) = 0xD000000000000021;
  *(void *)(result + 40) = 0x80000001C1607560;
  uint64_t v4 = v1[5];
  uint64_t v5 = MEMORY[0x1E4FBB3D0];
  uint64_t v6 = MEMORY[0x1E4FBB440];
  *(void *)(result + 72) = MEMORY[0x1E4FBB3D0];
  *(void *)(result + 80) = v6;
  *(void *)(result + 48) = v4;
  *(unsigned char *)(result + 88) = 0;
  *(void *)(result + 96) = 0xD000000000000015;
  *(void *)(result + 104) = 0x80000001C1607590;
  uint64_t v7 = v1[31];
  *(void *)(result + 136) = v5;
  *(void *)(result + 144) = v6;
  *(void *)(result + 112) = v7;
  *(unsigned char *)(result + 152) = 0;
  *(void *)(result + 160) = 0xD000000000000016;
  *(void *)(result + 168) = 0x80000001C16075B0;
  uint64_t v8 = v1[49];
  *(void *)(result + 200) = v5;
  *(void *)(result + 208) = v6;
  *(void *)(result + 176) = v8;
  *(unsigned char *)(result + 216) = 0;
  *(void *)(a1 + 24) = &type metadata for DebugInspectionDataSection;
  *(void *)(a1 + 32) = &off_1F1B9F170;
  strcpy((char *)a1, "Coefficients");
  *(unsigned char *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
  *(void *)(a1 + 16) = result;
  return result;
}

double sub_1C020BC14@<D0>(void *a1@<X8>)
{
  sub_1BFEFDD10(0, (unint64_t *)&qword_1EA198210, (uint64_t)&type metadata for DebugInspectionDataItem, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15341A0;
  *(void *)(v3 + 48) = *(void *)(v1 + 424);
  uint64_t v4 = *(void *)(v1 + 112);
  *(void *)(v3 + 112) = *(void *)(v1 + 104);
  *(void *)(v3 + 176) = v4;
  uint64_t v5 = *(void *)(v1 + 128);
  *(void *)(v3 + 240) = *(void *)(v1 + 120);
  *(void *)(v3 + 304) = v5;
  uint64_t v6 = *(void *)(v1 + 144);
  *(void *)(v3 + 368) = *(void *)(v1 + 136);
  *(void *)(v3 + 432) = v6;
  uint64_t v7 = *(void *)(v1 + 160);
  *(void *)(v3 + 496) = *(void *)(v1 + 152);
  *(void *)(v3 + 560) = v7;
  double result = *(double *)(v1 + 168);
  uint64_t v9 = *(void *)(v1 + 176);
  *(double *)(v3 + 624) = result;
  *(void *)(v3 + 32) = 0x696C7069746C754DLL;
  *(void *)(v3 + 40) = 0xEA00000000007265;
  uint64_t v10 = MEMORY[0x1E4FBB3D0];
  uint64_t v11 = MEMORY[0x1E4FBB440];
  *(void *)(v3 + 72) = MEMORY[0x1E4FBB3D0];
  *(void *)(v3 + 80) = v11;
  *(unsigned char *)(v3 + 88) = 0;
  *(void *)(v3 + 96) = 0xD000000000000010;
  *(void *)(v3 + 104) = 0x80000001C1607420;
  *(void *)(v3 + 136) = v10;
  *(void *)(v3 + 144) = v11;
  *(unsigned char *)(v3 + 152) = 0;
  *(void *)(v3 + 160) = 0xD000000000000016;
  *(void *)(v3 + 168) = 0x80000001C1607440;
  *(void *)(v3 + 200) = v10;
  *(void *)(v3 + 208) = v11;
  *(unsigned char *)(v3 + 216) = 0;
  *(void *)(v3 + 224) = 0xD000000000000016;
  *(void *)(v3 + 232) = 0x80000001C1607460;
  *(void *)(v3 + 264) = v10;
  *(void *)(v3 + 272) = v11;
  *(unsigned char *)(v3 + 280) = 0;
  *(void *)(v3 + 288) = 0xD000000000000015;
  *(void *)(v3 + 296) = 0x80000001C1607480;
  *(void *)(v3 + 328) = v10;
  *(void *)(v3 + 336) = v11;
  *(unsigned char *)(v3 + 344) = 0;
  *(void *)(v3 + 352) = 0xD00000000000001ALL;
  *(void *)(v3 + 360) = 0x80000001C16074A0;
  *(void *)(v3 + 392) = v10;
  *(void *)(v3 + 400) = v11;
  *(unsigned char *)(v3 + 408) = 0;
  *(void *)(v3 + 416) = 0xD000000000000014;
  *(void *)(v3 + 424) = 0x80000001C16074C0;
  *(void *)(v3 + 456) = v10;
  *(void *)(v3 + 464) = v11;
  *(unsigned char *)(v3 + 472) = 0;
  *(void *)(v3 + 480) = 0xD000000000000013;
  *(void *)(v3 + 488) = 0x80000001C16074E0;
  *(void *)(v3 + 520) = v10;
  *(void *)(v3 + 528) = v11;
  *(unsigned char *)(v3 + 536) = 0;
  *(void *)(v3 + 544) = 0xD000000000000018;
  *(void *)(v3 + 552) = 0x80000001C1607500;
  *(void *)(v3 + 584) = v10;
  *(void *)(v3 + 592) = v11;
  *(unsigned char *)(v3 + 600) = 0;
  *(void *)(v3 + 608) = 0xD000000000000011;
  *(void *)(v3 + 616) = 0x80000001C1607520;
  *(void *)(v3 + 648) = v10;
  *(void *)(v3 + 656) = v11;
  *(unsigned char *)(v3 + 664) = 0;
  *(void *)(v3 + 672) = 0xD000000000000016;
  *(void *)(v3 + 680) = 0x80000001C1607540;
  *(void *)(v3 + 712) = v10;
  *(void *)(v3 + 720) = v11;
  *(void *)(v3 + 688) = v9;
  *(unsigned char *)(v3 + 728) = 0;
  a1[3] = &type metadata for DebugInspectionDataSection;
  a1[4] = &off_1F1B9F170;
  *a1 = 0x696C7069746C754DLL;
  a1[1] = 0xEB00000000737265;
  a1[2] = v3;
  return result;
}

double sub_1C020BE70@<D0>(void *a1@<X8>)
{
  sub_1BFEFDD10(0, (unint64_t *)&qword_1EA198210, (uint64_t)&type metadata for DebugInspectionDataItem, MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C15341B0;
  uint64_t v4 = *(void *)(v1 + 200);
  *(void *)(v3 + 48) = *(void *)(v1 + 208);
  uint64_t v5 = *(void *)(v1 + 224);
  *(void *)(v3 + 112) = *(void *)(v1 + 216);
  *(void *)(v3 + 176) = v5;
  uint64_t v6 = *(void *)(v1 + 240);
  *(void *)(v3 + 240) = *(void *)(v1 + 232);
  *(void *)(v3 + 304) = v6;
  uint64_t v7 = *(void *)(v1 + 192);
  *(void *)(v3 + 368) = *(void *)(v1 + 184);
  *(void *)(v3 + 432) = v7;
  strcpy((char *)(v3 + 32), "Seen Penalty");
  *(unsigned char *)(v3 + 45) = 0;
  *(_WORD *)(v3 + 46) = -5120;
  uint64_t v8 = MEMORY[0x1E4FBB3D0];
  uint64_t v9 = MEMORY[0x1E4FBB440];
  *(void *)(v3 + 72) = MEMORY[0x1E4FBB3D0];
  *(void *)(v3 + 80) = v9;
  *(unsigned char *)(v3 + 88) = 0;
  strcpy((char *)(v3 + 96), "Read Penalty");
  *(unsigned char *)(v3 + 109) = 0;
  *(_WORD *)(v3 + 110) = -5120;
  *(void *)(v3 + 136) = v8;
  *(void *)(v3 + 144) = v9;
  *(unsigned char *)(v3 + 152) = 0;
  *(void *)(v3 + 160) = 0xD000000000000010;
  *(void *)(v3 + 168) = 0x80000001C1607340;
  *(void *)(v3 + 200) = v8;
  *(void *)(v3 + 208) = v9;
  *(unsigned char *)(v3 + 216) = 0;
  *(void *)(v3 + 224) = 0xD000000000000013;
  *(void *)(v3 + 232) = 0x80000001C1607360;
  *(void *)(v3 + 264) = v8;
  *(void *)(v3 + 272) = v9;
  *(unsigned char *)(v3 + 280) = 0;
  *(void *)(v3 + 288) = 0xD000000000000012;
  *(void *)(v3 + 296) = 0x80000001C1607380;
  *(void *)(v3 + 328) = v8;
  *(void *)(v3 + 336) = v9;
  *(unsigned char *)(v3 + 344) = 0;
  *(void *)(v3 + 352) = 0xD000000000000018;
  *(void *)(v3 + 360) = 0x80000001C16073A0;
  *(void *)(v3 + 392) = v8;
  *(void *)(v3 + 400) = v9;
  *(unsigned char *)(v3 + 408) = 0;
  *(void *)(v3 + 416) = 0xD000000000000013;
  *(void *)(v3 + 424) = 0x80000001C16073C0;
  *(void *)(v3 + 456) = v8;
  *(void *)(v3 + 464) = v9;
  *(unsigned char *)(v3 + 472) = 0;
  *(void *)(v3 + 480) = 0xD000000000000013;
  *(void *)(v3 + 488) = 0x80000001C16073E0;
  *(void *)(v3 + 520) = v8;
  *(void *)(v3 + 528) = v9;
  *(void *)(v3 + 496) = v4;
  *(unsigned char *)(v3 + 536) = 0;
  *(void *)(v3 + 544) = 0xD000000000000012;
  *(void *)(v3 + 552) = 0x80000001C1607400;
  double result = *(double *)(v1 + 256);
  *(void *)(v3 + 584) = v8;
  *(void *)(v3 + 592) = v9;
  *(double *)(v3 + 560) = result;
  *(unsigned char *)(v3 + 600) = 0;
  a1[3] = &type metadata for DebugInspectionDataSection;
  a1[4] = &off_1F1B9F170;
  *a1 = 0x6569746C616E6550;
  a1[1] = 0xE900000000000073;
  a1[2] = v3;
  return result;
}

uint64_t sub_1C020C078(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736B63696C63 && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B63696C43776172 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6973736572706D69 && a2 == 0xEB00000000736E6FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1C020C25C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v21 = a2;
  sub_1C020FD04(0, &qword_1EA198268, (uint64_t (*)(void))sub_1C020FC5C, (uint64_t)&type metadata for DebugInspectionScoreProfile.Cohort.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v21 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C020FC5C();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v21;
  char v25 = 0;
  uint64_t v11 = sub_1C152069C();
  uint64_t v13 = v12;
  char v24 = 1;
  swift_bridgeObjectRetain();
  sub_1C15206BC();
  uint64_t v15 = v14;
  char v23 = 2;
  sub_1C15206BC();
  uint64_t v17 = v16;
  char v22 = 3;
  sub_1C15206BC();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v10 = v11;
  v10[1] = v13;
  v10[2] = v15;
  v10[3] = v17;
  void v10[4] = v19;
  return result;
}

uint64_t sub_1C020C4F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6353726576726573 && a2 == 0xEB0000000065726FLL;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6353746E65696C63 && a2 == 0xEB0000000065726FLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1607B50 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C1607B70 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C1607B90 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C1607BB0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F635369626174 && a2 == 0xE900000000000065 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C1607BD0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1C020C83C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v28 = a2;
  sub_1C020FD04(0, &qword_1EA198278, (uint64_t (*)(void))sub_1C020FCB0, (uint64_t)&type metadata for DebugInspectionScoreProfile.Coefficients.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v27 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C020FCB0();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v28;
  char v36 = 0;
  sub_1C15206BC();
  uint64_t v11 = v10;
  char v35 = 1;
  sub_1C15206BC();
  uint64_t v13 = v12;
  char v34 = 2;
  sub_1C15206BC();
  uint64_t v15 = v14;
  char v33 = 3;
  sub_1C15206BC();
  uint64_t v17 = v16;
  char v32 = 4;
  sub_1C15206BC();
  uint64_t v19 = v18;
  char v31 = 5;
  sub_1C15206BC();
  uint64_t v21 = v20;
  char v30 = 6;
  sub_1C15206BC();
  uint64_t v23 = v22;
  char v29 = 7;
  sub_1C15206BC();
  uint64_t v25 = v24;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *uint64_t v9 = v11;
  v9[1] = v13;
  v9[2] = v15;
  v9[3] = v17;
  v9[4] = v19;
  v9[5] = v21;
  v9[6] = v23;
  v9[7] = v25;
  return result;
}

uint64_t sub_1C020CB34@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    id v3 = a1;
    objc_msgSend(v3, sel_featureCtr);
    uint64_t v138 = v4;
    objc_msgSend(v3, sel_subscribedChannelCtr);
    uint64_t v137 = v5;
    objc_msgSend(v3, sel_paidNonpaidSubscriptionCtr);
    uint64_t v136 = v6;
    objc_msgSend(v3, sel_autoSubscribeCtr);
    uint64_t v135 = v7;
    objc_msgSend(v3, sel_embeddingScore);
    uint64_t v134 = v8;
    objc_msgSend(v3, sel_computedGlobalScoreCoefficient);
    uint64_t v133 = v9;
    objc_msgSend(v3, sel_userFeedbackScore);
    uint64_t v132 = v10;
    objc_msgSend(v3, sel_tabiScore);
    uint64_t v131 = v11;
    objc_msgSend(v3, sel_rawUserFeedbackScore);
    uint64_t v130 = v12;
    objc_msgSend(v3, sel_rawPersonalizationScore);
    uint64_t v129 = v13;
    objc_msgSend(v3, sel_personalizationScore);
    uint64_t v128 = v14;
    objc_msgSend(v3, sel_agedPersonalizationScore);
    uint64_t v127 = v15;
    objc_msgSend(v3, sel_conversionMultiplier);
    uint64_t v126 = v16;
    objc_msgSend(v3, sel_dampenedStaticMultiplier);
    uint64_t v125 = v17;
    objc_msgSend(v3, sel_staticMultiplier);
    uint64_t v124 = v18;
    objc_msgSend(v3, sel_qualitativeMultiplier);
    uint64_t v122 = v19;
    objc_msgSend(v3, sel_publisherDampener);
    uint64_t v123 = v20;
    objc_msgSend(v3, sel_publisherFavorability);
    uint64_t v121 = v21;
    objc_msgSend(v3, sel_sortingScore);
    uint64_t v120 = v22;
    objc_msgSend(v3, sel_shadowTabiScore);
    float v24 = v23;
    objc_msgSend(v3, sel_shadowAgedPersonalizationScore);
    float v26 = v25;
    id v27 = objc_msgSend(v3, sel_globalCohort);
    objc_msgSend(v27, sel_clicks);
    uint64_t v119 = v28;

    id v29 = objc_msgSend(v3, sel_globalCohort);
    objc_msgSend(v29, sel_rawClicks);
    uint64_t v118 = v30;

    id v31 = objc_msgSend(v3, sel_globalCohort);
    objc_msgSend(v31, sel_impressions);
    uint64_t v117 = v32;

    id v33 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v33, sel_serverScoreCoefficient);
    uint64_t v116 = v34;

    id v35 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v35, sel_clientScoreCoefficient);
    uint64_t v115 = v36;

    id v37 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v37, sel_subscribedTopicScoreCoefficient);
    uint64_t v114 = v38;

    id v39 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v39, sel_subscribedChannelScoreCoefficent);
    uint64_t v113 = v40;

    id v41 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v41, sel_autofavoritedScoreCoefficient);
    uint64_t v112 = v42;

    id v43 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v43, sel_articleEmbeddingScoreCoefficient);
    uint64_t v111 = v44;

    id v45 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v45, sel_tabiScoreCoefficient);
    uint64_t v110 = v46;

    id v47 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v47, sel_conversionCoefficient);
    uint64_t v109 = v48;

    id v49 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v49, sel_userConversionScore);
    uint64_t v108 = v50;

    id v51 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v51, sel_audioMultiplier);
    uint64_t v107 = v52;

    id v53 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v53, sel_bundleFreeMultiplier);
    uint64_t v106 = v54;

    id v55 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v55, sel_bundlePaidMultiplier);
    uint64_t v105 = v56;

    id v57 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v57, sel_evergreenMultiplier);
    uint64_t v104 = v58;

    id v59 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v59, sel_featuredMultiplier);
    uint64_t v103 = v60;

    objc_msgSend(v3, sel_nicheContentMultiplier);
    uint64_t v102 = v61;
    objc_msgSend(v3, sel_contentTriggerDampener);
    uint64_t v101 = v62;
    id v63 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v63, sel_multiplierDampener);
    uint64_t v100 = v64;

    id v65 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v65, sel_mutedVoteDampener);
    uint64_t v99 = v66;

    id v67 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v67, sel_seenPenalty);
    uint64_t v98 = v68;

    id v69 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v69, sel_readPenalty);
    uint64_t v96 = v70;

    id v71 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v71, sel_listenedPenalty);
    uint64_t v73 = v72;

    id v74 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v74, sel_sparseTagsPenalty);
    uint64_t v76 = v75;

    id v77 = objc_msgSend(v3, sel_debugFields);
    objc_msgSend(v77, sel_timeDecayPenalty);
    uint64_t v79 = v78;

    id v80 = objc_msgSend(v3, sel_coefficients);
    objc_msgSend(v80, sel_halfLifeCoefficient);
    uint64_t v82 = v81;

    id v83 = objc_msgSend(v3, sel_scoringVersion);
    id v84 = objc_msgSend(v3, sel_debugFields);
    id v85 = objc_msgSend(v84, sel_scoringAssetsIdentifier);

    if (v85)
    {
      uint64_t v86 = sub_1C151E62C();
      uint64_t v88 = v87;
    }
    else
    {
      uint64_t v86 = 0;
      uint64_t v88 = 0;
    }
    double v89 = v24;
    double v90 = v26;
    objc_msgSend(v3, sel_multiplier, v96);
    uint64_t v92 = v91;
    objc_msgSend(v3, sel_serverScoreDemocratizationFactor);
    uint64_t v94 = v93;

    v139[0] = v138;
    v139[1] = v137;
    v139[2] = v136;
    v139[3] = v135;
    v139[4] = v134;
    v139[5] = v133;
    v139[6] = v132;
    v139[7] = v131;
    v139[8] = v130;
    v139[9] = v108;
    v139[10] = v129;
    v139[11] = v128;
    v139[12] = v127;
    v139[13] = v107;
    v139[14] = v106;
    v139[15] = v105;
    v139[16] = v126;
    v139[17] = v125;
    v139[18] = v104;
    v139[19] = v103;
    v139[20] = v102;
    v139[21] = v124;
    v139[22] = v122;
    v139[23] = v101;
    v139[24] = v100;
    v139[25] = v99;
    v139[26] = v98;
    v139[27] = v97;
    v139[28] = v73;
    v139[29] = v76;
    v139[30] = v79;
    v139[31] = v82;
    v139[32] = v123;
    v139[33] = v121;
    v139[34] = v120;
    *(double *)&v139[35] = v89;
    *(double *)&v139[36] = v90;
    v139[37] = 42;
    v139[38] = 0xE100000000000000;
    v139[39] = v119;
    v139[40] = v118;
    v139[41] = v117;
    v139[42] = v116;
    v139[43] = v115;
    v139[44] = v114;
    v139[45] = v113;
    v139[46] = v112;
    v139[47] = v111;
    v139[48] = v110;
    v139[49] = v109;
    v139[50] = v83;
    v139[51] = v86;
    v139[52] = v88;
    v139[53] = v92;
    v139[54] = v94;
    nullsub_1();
  }
  else
  {
    sub_1C020D3F0((uint64_t)v139);
  }
  sub_1C020D434((uint64_t)v139, (uint64_t)v140);
  return sub_1C020D434((uint64_t)v140, a2);
}

double sub_1C020D3F0(uint64_t a1)
{
  *(void *)(a1 + 432) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_1C020D434(uint64_t a1, uint64_t a2)
{
  sub_1BFEFDD10(0, &qword_1EA1A96E0, (uint64_t)&type metadata for DebugInspectionScoreProfile, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for DebugInspectionScoreProfile()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugInspectionScoreProfile(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  long long v9 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v9;
  long long v10 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v10;
  long long v11 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v11;
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  uint64_t v12 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v12;
  long long v13 = *(_OWORD *)(a2 + 320);
  long long v14 = *(_OWORD *)(a2 + 336);
  long long v15 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v15;
  *(_OWORD *)(a1 + 320) = v13;
  *(_OWORD *)(a1 + 336) = v14;
  long long v16 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v16;
  uint64_t v17 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v17;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DebugInspectionScoreProfile(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  a1[20] = a2[20];
  a1[21] = a2[21];
  a1[22] = a2[22];
  a1[23] = a2[23];
  a1[24] = a2[24];
  a1[25] = a2[25];
  a1[26] = a2[26];
  a1[27] = a2[27];
  a1[28] = a2[28];
  a1[29] = a2[29];
  a1[30] = a2[30];
  a1[31] = a2[31];
  a1[32] = a2[32];
  a1[33] = a2[33];
  a1[34] = a2[34];
  a1[35] = a2[35];
  a1[36] = a2[36];
  a1[37] = a2[37];
  a1[38] = a2[38];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[39] = a2[39];
  a1[40] = a2[40];
  a1[41] = a2[41];
  a1[42] = a2[42];
  a1[43] = a2[43];
  a1[44] = a2[44];
  a1[45] = a2[45];
  a1[46] = a2[46];
  a1[47] = a2[47];
  a1[48] = a2[48];
  a1[49] = a2[49];
  a1[50] = a2[50];
  a1[51] = a2[51];
  a1[52] = a2[52];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[53] = a2[53];
  a1[54] = a2[54];
  return a1;
}

void *__swift_memcpy440_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1B8uLL);
}

uint64_t assignWithTake for DebugInspectionScoreProfile(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  long long v9 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v9;
  long long v10 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v10;
  long long v11 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v11;
  long long v12 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v12;
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  uint64_t v13 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v13;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  long long v14 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v14;
  long long v15 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v15;
  long long v16 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v16;
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v17;
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionScoreProfile(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 440)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 304);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectionScoreProfile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 440) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 304) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 440) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile()
{
  return &type metadata for DebugInspectionScoreProfile;
}

uint64_t sub_1C020D980(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x4365727574616566 && a2 == 0xEA00000000007274 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1607780 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C16077A0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C16077C0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xEE0065726F635367 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001C16077E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1607800 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F635369626174 && a2 == 0xE900000000000065 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1607820 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1607840 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C1607860 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1607880 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C16078A0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6C754D6F69647561 && a2 == 0xEF7265696C706974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C16078C0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C16078E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1607900 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1607920 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1607940 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C1607960 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C1607980 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C16079A0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C16079C0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C16079E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C1607A00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1607A20 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x616E65506E656573 && a2 == 0xEB0000000079746CLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x616E655064616572 && a2 == 0xEB0000000079746CLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x64656E657473696CLL && a2 == 0xEF79746C616E6550 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1607A40 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1607A60 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1607A80 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C1607AA0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C1607AC0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0x53676E6974726F73 && a2 == 0xEC00000065726F63 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0x6154776F64616873 && a2 == 0xEF65726F63536962 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001C1607AE0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0x6F436C61626F6C67 && a2 == 0xEC00000074726F68 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0x6963696666656F63 && a2 == 0xEC00000073746E65 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0x56676E69726F6373 && a2 == 0xEE006E6F69737265 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C1607B00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0x696C7069746C756DLL && a2 == 0xEA00000000007265 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001C1607B20)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v5) {
      return 42;
    }
    else {
      return 43;
    }
  }
}

void *sub_1C020E9DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C020FD04(0, &qword_1EA198218, (uint64_t (*)(void))sub_1C020F69C, (uint64_t)&type metadata for DebugInspectionScoreProfile.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v111 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  long long v8 = (char *)&v66 - v7;
  uint64_t v9 = a1[3];
  uint64_t v112 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1C020F69C();
  sub_1C1520EBC();
  if (v2) {
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
  }
  long long v10 = a2;
  uint64_t v11 = v6;
  LOBYTE(v114) = 0;
  sub_1C15206BC();
  uint64_t v13 = v12;
  LOBYTE(v114) = 1;
  sub_1C15206BC();
  uint64_t v15 = v14;
  LOBYTE(v114) = 2;
  sub_1C15206BC();
  uint64_t v17 = v16;
  LOBYTE(v114) = 3;
  sub_1C15206BC();
  uint64_t v19 = v18;
  LOBYTE(v114) = 4;
  sub_1C15206BC();
  uint64_t v21 = v20;
  LOBYTE(v114) = 5;
  sub_1C15206BC();
  uint64_t v23 = v22;
  LOBYTE(v114) = 6;
  sub_1C15206BC();
  uint64_t v25 = v24;
  LOBYTE(v114) = 7;
  sub_1C15206BC();
  uint64_t v110 = v26;
  LOBYTE(v114) = 8;
  sub_1C15206BC();
  uint64_t v28 = v27;
  LOBYTE(v114) = 9;
  sub_1C15206BC();
  uint64_t v109 = v29;
  LOBYTE(v114) = 10;
  sub_1C15206BC();
  uint64_t v108 = v30;
  LOBYTE(v114) = 11;
  sub_1C15206BC();
  uint64_t v107 = v31;
  LOBYTE(v114) = 12;
  sub_1C15206BC();
  uint64_t v106 = v32;
  LOBYTE(v114) = 13;
  sub_1C15206BC();
  uint64_t v105 = v33;
  LOBYTE(v114) = 14;
  sub_1C15206BC();
  uint64_t v104 = v34;
  LOBYTE(v114) = 15;
  sub_1C15206BC();
  uint64_t v103 = v35;
  LOBYTE(v114) = 16;
  sub_1C15206BC();
  uint64_t v102 = v36;
  LOBYTE(v114) = 17;
  sub_1C15206BC();
  uint64_t v101 = v37;
  LOBYTE(v114) = 18;
  sub_1C15206BC();
  uint64_t v100 = v38;
  LOBYTE(v114) = 19;
  sub_1C15206BC();
  uint64_t v99 = v39;
  LOBYTE(v114) = 20;
  sub_1C15206BC();
  uint64_t v98 = v40;
  LOBYTE(v114) = 21;
  sub_1C15206BC();
  uint64_t v97 = v41;
  LOBYTE(v114) = 22;
  sub_1C15206BC();
  uint64_t v96 = v42;
  LOBYTE(v114) = 23;
  sub_1C15206BC();
  uint64_t v95 = v43;
  LOBYTE(v114) = 24;
  sub_1C15206BC();
  uint64_t v94 = v44;
  LOBYTE(v114) = 25;
  sub_1C15206BC();
  uint64_t v93 = v45;
  LOBYTE(v114) = 26;
  sub_1C15206BC();
  uint64_t v92 = v46;
  LOBYTE(v114) = 27;
  sub_1C15206BC();
  uint64_t v91 = v47;
  LOBYTE(v114) = 28;
  sub_1C15206BC();
  uint64_t v90 = v48;
  LOBYTE(v114) = 29;
  sub_1C15206BC();
  uint64_t v89 = v49;
  LOBYTE(v114) = 30;
  sub_1C15206BC();
  uint64_t v88 = v50;
  LOBYTE(v114) = 31;
  sub_1C15206BC();
  uint64_t v87 = v51;
  LOBYTE(v114) = 32;
  sub_1C15206BC();
  uint64_t v86 = v52;
  LOBYTE(v114) = 33;
  sub_1C15206BC();
  uint64_t v85 = v53;
  LOBYTE(v114) = 34;
  sub_1C15206BC();
  uint64_t v84 = v54;
  LOBYTE(v114) = 35;
  sub_1C15206BC();
  uint64_t v83 = v55;
  LOBYTE(v114) = 36;
  sub_1C15206BC();
  uint64_t v82 = v56;
  LOBYTE(v113[0]) = 37;
  sub_1C020F6F0();
  sub_1C15206EC();
  uint64_t v57 = v114;
  uint64_t v58 = v115;
  uint64_t v80 = v117;
  uint64_t v81 = v116;
  uint64_t v79 = v118;
  LOBYTE(v113[0]) = 38;
  sub_1C020F744();
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v77 = v115;
  uint64_t v78 = v114;
  uint64_t v75 = v117;
  uint64_t v76 = v116;
  uint64_t v73 = v119;
  uint64_t v74 = v118;
  uint64_t v71 = v121;
  uint64_t v72 = v120;
  LOBYTE(v114) = 39;
  uint64_t v70 = sub_1C15206FC();
  LOBYTE(v114) = 40;
  uint64_t v69 = sub_1C152060C();
  uint64_t v60 = v59;
  LOBYTE(v114) = 41;
  swift_bridgeObjectRetain();
  sub_1C15206BC();
  uint64_t v68 = v61;
  char v169 = 42;
  sub_1C15206BC();
  uint64_t v67 = v62;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v111);
  v113[0] = v13;
  v113[1] = v15;
  v113[2] = v17;
  v113[3] = v19;
  v113[4] = v21;
  v113[5] = v23;
  v113[6] = v25;
  v113[7] = v110;
  v113[8] = v28;
  v113[9] = v109;
  v113[10] = v108;
  v113[11] = v107;
  v113[12] = v106;
  v113[13] = v105;
  v113[14] = v104;
  v113[15] = v103;
  v113[16] = v102;
  v113[17] = v101;
  v113[18] = v100;
  v113[19] = v99;
  v113[20] = v98;
  v113[21] = v97;
  v113[22] = v96;
  v113[23] = v95;
  v113[24] = v94;
  v113[25] = v93;
  v113[26] = v92;
  v113[27] = v91;
  v113[28] = v90;
  v113[29] = v89;
  v113[30] = v88;
  v113[31] = v87;
  v113[32] = v86;
  v113[33] = v85;
  v113[34] = v84;
  v113[35] = v83;
  v113[36] = v82;
  v113[37] = v57;
  v113[38] = v58;
  v113[39] = v81;
  v113[40] = v80;
  v113[41] = v79;
  v113[42] = v78;
  v113[43] = v77;
  v113[44] = v76;
  v113[45] = v75;
  v113[46] = v74;
  v113[47] = v73;
  v113[48] = v72;
  v113[49] = v71;
  uint64_t v64 = v69;
  uint64_t v63 = v70;
  v113[50] = v70;
  v113[51] = v69;
  v113[52] = v60;
  v113[53] = v68;
  v113[54] = v67;
  sub_1C020F798((uint64_t)v113);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v112);
  uint64_t v114 = v13;
  uint64_t v115 = v15;
  uint64_t v116 = v17;
  uint64_t v117 = v19;
  uint64_t v118 = v21;
  uint64_t v119 = v23;
  uint64_t v120 = v25;
  uint64_t v121 = v110;
  uint64_t v122 = v28;
  uint64_t v123 = v109;
  uint64_t v124 = v108;
  uint64_t v125 = v107;
  uint64_t v126 = v106;
  uint64_t v127 = v105;
  uint64_t v128 = v104;
  uint64_t v129 = v103;
  uint64_t v130 = v102;
  uint64_t v131 = v101;
  uint64_t v132 = v100;
  uint64_t v133 = v99;
  uint64_t v134 = v98;
  uint64_t v135 = v97;
  uint64_t v136 = v96;
  uint64_t v137 = v95;
  uint64_t v138 = v94;
  uint64_t v139 = v93;
  uint64_t v140 = v92;
  uint64_t v141 = v91;
  uint64_t v142 = v90;
  uint64_t v143 = v89;
  uint64_t v144 = v88;
  uint64_t v145 = v87;
  uint64_t v146 = v86;
  uint64_t v147 = v85;
  uint64_t v148 = v84;
  uint64_t v149 = v83;
  uint64_t v150 = v82;
  uint64_t v151 = v57;
  uint64_t v152 = v58;
  uint64_t v153 = v81;
  uint64_t v154 = v80;
  uint64_t v155 = v79;
  uint64_t v156 = v78;
  uint64_t v157 = v77;
  uint64_t v158 = v76;
  uint64_t v159 = v75;
  uint64_t v160 = v74;
  uint64_t v161 = v73;
  uint64_t v162 = v72;
  uint64_t v163 = v71;
  uint64_t v164 = v63;
  uint64_t v165 = v64;
  uint64_t v166 = v60;
  uint64_t v167 = v68;
  uint64_t v168 = v67;
  sub_1C020F7D0((uint64_t)&v114);
  return memcpy(v10, v113, 0x1B8uLL);
}

unint64_t sub_1C020F69C()
{
  unint64_t result = qword_1EA198220;
  if (!qword_1EA198220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198220);
  }
  return result;
}

unint64_t sub_1C020F6F0()
{
  unint64_t result = qword_1EA198228;
  if (!qword_1EA198228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198228);
  }
  return result;
}

unint64_t sub_1C020F744()
{
  unint64_t result = qword_1EA198230;
  if (!qword_1EA198230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198230);
  }
  return result;
}

uint64_t sub_1C020F798(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C020F7D0(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C020F808()
{
  unint64_t result = qword_1EA198240;
  if (!qword_1EA198240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198240);
  }
  return result;
}

unint64_t sub_1C020F85C()
{
  unint64_t result = qword_1EA198248;
  if (!qword_1EA198248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198248);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DebugInspectionScoreProfile.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD6) {
    goto LABEL_17;
  }
  if (a2 + 42 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 42) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 42;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 42;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 42;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x2B;
  int v8 = v6 - 43;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionScoreProfile.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 42 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 42) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD5)
  {
    unsigned int v6 = ((a2 - 214) >> 8) + 1;
    *unint64_t result = a2 + 42;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C020FA0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 42;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile.CodingKeys()
{
  return &type metadata for DebugInspectionScoreProfile.CodingKeys;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile.Coefficients()
{
  return &type metadata for DebugInspectionScoreProfile.Coefficients;
}

uint64_t initializeWithCopy for DebugInspectionScoreProfile.Cohort(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DebugInspectionScoreProfile.Cohort(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for DebugInspectionScoreProfile.Cohort(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile.Cohort()
{
  return &type metadata for DebugInspectionScoreProfile.Cohort;
}

unint64_t sub_1C020FB58()
{
  unint64_t result = qword_1EA198250;
  if (!qword_1EA198250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198250);
  }
  return result;
}

unint64_t sub_1C020FBB0()
{
  unint64_t result = qword_1EA198258;
  if (!qword_1EA198258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198258);
  }
  return result;
}

unint64_t sub_1C020FC08()
{
  unint64_t result = qword_1EA198260;
  if (!qword_1EA198260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198260);
  }
  return result;
}

unint64_t sub_1C020FC5C()
{
  unint64_t result = qword_1EA198270;
  if (!qword_1EA198270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198270);
  }
  return result;
}

unint64_t sub_1C020FCB0()
{
  unint64_t result = qword_1EA198280;
  if (!qword_1EA198280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198280);
  }
  return result;
}

void sub_1C020FD04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionScoreProfile.Coefficients.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C020FE38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile.Coefficients.CodingKeys()
{
  return &type metadata for DebugInspectionScoreProfile.Coefficients.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DebugInspectionScoreProfile.Cohort.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C020FF3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionScoreProfile.Cohort.CodingKeys()
{
  return &type metadata for DebugInspectionScoreProfile.Cohort.CodingKeys;
}

unint64_t sub_1C020FF78()
{
  unint64_t result = qword_1EA198298;
  if (!qword_1EA198298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198298);
  }
  return result;
}

unint64_t sub_1C020FFD0()
{
  unint64_t result = qword_1EA1982A0;
  if (!qword_1EA1982A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1982A0);
  }
  return result;
}

unint64_t sub_1C0210028()
{
  unint64_t result = qword_1EA1982A8;
  if (!qword_1EA1982A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1982A8);
  }
  return result;
}

unint64_t sub_1C0210080()
{
  unint64_t result = qword_1EA1982B0;
  if (!qword_1EA1982B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1982B0);
  }
  return result;
}

unint64_t sub_1C02100D8()
{
  unint64_t result = qword_1EA1982B8;
  if (!qword_1EA1982B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1982B8);
  }
  return result;
}

unint64_t sub_1C0210130()
{
  unint64_t result = qword_1EA1982C0;
  if (!qword_1EA1982C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1982C0);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterLastPrecededBy.type.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FormatContentSubgroupFilterLastPrecededBy.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C02101E8()
{
  return 1701869940;
}

uint64_t sub_1C02101F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C0210280(uint64_t a1)
{
  unint64_t v2 = sub_1C0210444();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C02102BC(uint64_t a1)
{
  unint64_t v2 = sub_1C0210444();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatContentSubgroupFilterLastPrecededBy.encode(to:)(void *a1)
{
  sub_1C021061C(0, &qword_1EA1982C8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0210444();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C0210444()
{
  unint64_t result = qword_1EA1982D0;
  if (!qword_1EA1982D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1982D0);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterLastPrecededBy.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C021061C(0, &qword_1EA1982D8, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0210444();
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v10 = sub_1C152069C();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1C021061C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0210444();
    unint64_t v7 = a3(a1, &type metadata for FormatContentSubgroupFilterLastPrecededBy.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C0210680(void *a1)
{
  a1[1] = sub_1C02106B8();
  a1[2] = sub_1C021070C();
  unint64_t result = sub_1C0210760();
  a1[3] = result;
  return result;
}

unint64_t sub_1C02106B8()
{
  unint64_t result = qword_1EA1982E0;
  if (!qword_1EA1982E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1982E0);
  }
  return result;
}

unint64_t sub_1C021070C()
{
  unint64_t result = qword_1EA1982E8;
  if (!qword_1EA1982E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1982E8);
  }
  return result;
}

unint64_t sub_1C0210760()
{
  unint64_t result = qword_1EA1982F0;
  if (!qword_1EA1982F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1982F0);
  }
  return result;
}

uint64_t sub_1C02107B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroupFilterLastPrecededBy.init(from:)(a1, a2);
}

uint64_t sub_1C02107CC(void *a1)
{
  sub_1C021061C(0, &qword_1EA1982C8, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0210444();
  sub_1C1520F0C();
  sub_1C15207CC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterLastPrecededBy()
{
  return &type metadata for FormatContentSubgroupFilterLastPrecededBy;
}

unsigned char *storeEnumTagSinglePayload for FormatContentSubgroupFilterLastPrecededBy.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C02109C4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterLastPrecededBy.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterLastPrecededBy.CodingKeys;
}

unint64_t sub_1C0210A00()
{
  unint64_t result = qword_1EA1982F8;
  if (!qword_1EA1982F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1982F8);
  }
  return result;
}

unint64_t sub_1C0210A58()
{
  unint64_t result = qword_1EA198300;
  if (!qword_1EA198300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198300);
  }
  return result;
}

unint64_t sub_1C0210AB0()
{
  unint64_t result = qword_1EA198308;
  if (!qword_1EA198308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198308);
  }
  return result;
}

uint64_t FormatVideoPlayerOverlayData.logoImage.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

double FormatVideoPlayerOverlayData.logoHeight.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t FormatVideoPlayerOverlayData.logoStyle.getter()
{
  return swift_retain();
}

uint64_t FormatVideoPlayerOverlayData.logoResizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_retain();
}

uint64_t FormatVideoPlayerOverlayData.showDuration.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t FormatVideoPlayerOverlayData.duration.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t destroy for FormatVideoPlayerOverlayData()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatVideoPlayerOverlayData(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatVideoPlayerOverlayData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatVideoPlayerOverlayData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoPlayerOverlayData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatVideoPlayerOverlayData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerOverlayData()
{
  return &type metadata for FormatVideoPlayerOverlayData;
}

uint64_t sub_1C0210E18(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0211F9C(0, &qword_1EA198338, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0211AF8();
  sub_1C1520F0C();
  LOBYTE(v12) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    long long v12 = *(_OWORD *)(v3 + 16);
    v11[15] = 1;
    sub_1C01D8810();
    sub_1C152080C();
    LOBYTE(v12) = 2;
    sub_1C15207CC();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C0210FCC()
{
  uint64_t v1 = 1635017060;
  if (*v0 != 1) {
    uint64_t v1 = 0x54746E65746E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656D616E656C6966;
  }
}

uint64_t sub_1C0211028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0211B4C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C0211050(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1C021105C(uint64_t a1)
{
  unint64_t v2 = sub_1C0211AF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0211098(uint64_t a1)
{
  unint64_t v2 = sub_1C0211AF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1C02110D4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C0211CAC(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    double result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_1C0211118(void *a1)
{
  return sub_1C0210E18(a1);
}

uint64_t sub_1C0211130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v35 = a3;
  uint64_t v37 = type metadata accessor for FormatVersioningMode(0);
  MEMORY[0x1F4188790](v37);
  uint64_t v38 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC04EC(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v45 = (uint64_t)&v34 - v6;
  uint64_t v7 = sub_1C151928C();
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1C151531C();
  uint64_t v9 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v11 = (uint64_t *)((char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_1C15152DC();
  uint64_t v41 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v46 = 0;
  unint64_t v47 = 0xE000000000000000;
  sub_1C15200FC();
  uint64_t v40 = a1;
  uint64_t v13 = FormatFile.identifier.getter();
  unint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v46 = v13;
  unint64_t v47 = v15;
  sub_1C151E80C();
  unint64_t v16 = v47;
  uint64_t v34 = v46;
  sub_1C151536C();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1C151535C();
  uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F26CD0];
  sub_1BFEC04EC(0, &qword_1EA198310, MEMORY[0x1E4F26CD0], MEMORY[0x1E4FBBE00]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1529AE0;
  sub_1C15152AC();
  uint64_t v46 = v18;
  sub_1C02118BC(&qword_1EA198318, MEMORY[0x1E4F26CD0]);
  sub_1BFEC04EC(0, &qword_1EA198320, v17, MEMORY[0x1E4FBB320]);
  sub_1C0211834();
  uint64_t v19 = v42;
  uint64_t v20 = v48;
  sub_1C151FFBC();
  uint64_t v21 = v43;
  sub_1C15152EC();
  *uint64_t v11 = 0x7974696E69666E69;
  v11[1] = 0xE800000000000000;
  _OWORD v11[2] = 0x74696E69666E692DLL;
  v11[3] = 0xE900000000000079;
  v11[4] = 7233902;
  v11[5] = 0xE300000000000000;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F26D30], v44);
  sub_1C151532C();
  uint64_t v22 = v45;
  sub_1BFEC03F4(v20, v45);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v22, 1, v21) == 1)
  {
    sub_1BFEC001C(v22);
  }
  else
  {
    uint64_t v23 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(v36, v22, v21);
    uint64_t v24 = (uint64_t)v38;
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v38, v23, v21);
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = (void (*)(uint64_t *, void))sub_1C151534C();
    Dictionary<>.seedFormatCodingVersion(mode:)(v24);
    sub_1C0211904(v24, type metadata accessor for FormatVersioningMode);
    v25(&v46, 0);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v21);
  }
  uint64_t v26 = v39;
  uint64_t v27 = v40;
  type metadata accessor for FormatFile();
  sub_1C02118BC(&qword_1EA198330, (void (*)(uint64_t))type metadata accessor for FormatFile);
  uint64_t v28 = sub_1C151533C();
  if (v26)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFEC001C(v20);
    sub_1C0211904(v27, (uint64_t (*)(void))type metadata accessor for FormatFile);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v31 = v28;
    unint64_t v32 = v29;
    swift_release();
    sub_1BFEC001C(v20);
    sub_1C0211904(v27, (uint64_t (*)(void))type metadata accessor for FormatFile);
    swift_bridgeObjectRetain();
    sub_1BFE95820(v31, v32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    sub_1BFE95664(v31, v32);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v33 = v35;
    *uint64_t v35 = v34;
    v33[1] = v16;
    v33[2] = v31;
    v33[3] = v32;
    v33[4] = 0xD000000000000010;
    v33[5] = 0x80000001C1607BF0;
  }
  return result;
}

unint64_t sub_1C0211834()
{
  unint64_t result = qword_1EA198328;
  if (!qword_1EA198328)
  {
    sub_1BFEC04EC(255, &qword_1EA198320, MEMORY[0x1E4F26CD0], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198328);
  }
  return result;
}

uint64_t sub_1C02118BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0211904(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for DebugFormatUploadFile(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1BFE95664(*(void *)(a1 + 16), *(void *)(a1 + 24));
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DebugFormatUploadFile(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[2];
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_1BFE95820(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DebugFormatUploadFile(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  sub_1BFE95820(v4, v5);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_1BFE95664(v6, v7);
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DebugFormatUploadFile(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1BFE95664(v5, v6);
  uint64_t v7 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatUploadFile()
{
  return &type metadata for DebugFormatUploadFile;
}

unint64_t sub_1C0211AF8()
{
  unint64_t result = qword_1EA198340;
  if (!qword_1EA198340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198340);
  }
  return result;
}

uint64_t sub_1C0211B4C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C0211CAC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C0211F9C(0, &qword_1EA198348, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0211AF8();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v25) = 0;
  uint64_t v10 = sub_1C152069C();
  uint64_t v12 = v11;
  uint64_t v24 = v10;
  char v27 = 1;
  sub_1C01D8CB4();
  swift_bridgeObjectRetain();
  sub_1C15206EC();
  uint64_t v13 = v25;
  LOBYTE(v25) = 2;
  unint64_t v22 = v26;
  uint64_t v23 = v13;
  sub_1BFE95820(v13, v26);
  uint64_t v14 = sub_1C152069C();
  uint64_t v16 = v15;
  uint64_t v17 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  unint64_t v19 = v22;
  uint64_t v18 = v23;
  sub_1BFE95820(v23, v22);
  swift_bridgeObjectRetain();
  sub_1BFE95664(v18, v19);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_1BFE95664(v18, v19);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v12;
  a2[2] = v18;
  a2[3] = v19;
  a2[4] = v17;
  a2[5] = v16;
  return result;
}

void sub_1C0211F9C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C0211AF8();
    unint64_t v7 = a3(a1, &type metadata for DebugFormatUploadFile.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for DebugFormatUploadFile.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C02120CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadFile.CodingKeys()
{
  return &type metadata for DebugFormatUploadFile.CodingKeys;
}

unint64_t sub_1C0212108()
{
  unint64_t result = qword_1EA198350;
  if (!qword_1EA198350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198350);
  }
  return result;
}

unint64_t sub_1C0212160()
{
  unint64_t result = qword_1EA198358;
  if (!qword_1EA198358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198358);
  }
  return result;
}

unint64_t sub_1C02121B8()
{
  unint64_t result = qword_1EA198360;
  if (!qword_1EA198360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198360);
  }
  return result;
}

uint64_t sub_1C021220C()
{
  sub_1C0212354(v0 + OBJC_IVAR____TtC8NewsFeed17FormatDataManager_pluginData);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0212270()
{
  return type metadata accessor for FormatDataManager();
}

uint64_t type metadata accessor for FormatDataManager()
{
  uint64_t result = qword_1EB865E08;
  if (!qword_1EB865E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C02122C4()
{
  uint64_t result = type metadata accessor for FormatPluginData();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C0212354(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatPluginData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id HeadlineFontBook.titleFont.getter()
{
  return *v0;
}

id HeadlineFontBook.excerptFont.getter()
{
  return *(id *)(v0 + 8);
}

id HeadlineFontBook.accessoryFont.getter()
{
  return *(id *)(v0 + 16);
}

id HeadlineFontBook.publisherFont.getter()
{
  return *(id *)(v0 + 24);
}

id HeadlineFontBook.adBadgeFont.getter()
{
  return *(id *)(v0 + 32);
}

void __swiftcall HeadlineFontBook.init(titleFont:excerptFont:accessoryFont:publisherFont:adBadgeFont:)(NewsFeed::HeadlineFontBook *__return_ptr retstr, UIFont titleFont, UIFont excerptFont, UIFont accessoryFont, UIFont publisherFont, UIFont adBadgeFont)
{
  retstr->titleFont = titleFont;
  retstr->excerptFont = excerptFont;
  retstr->accessoryFont = accessoryFont;
  retstr->publisherFont = publisherFont;
  retstr->adBadgeFont = adBadgeFont;
}

void destroy for HeadlineFontBook(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for HeadlineFontBook(void *a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  unsigned int v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  unint64_t v7 = *(void **)(a2 + 32);
  a1[4] = v7;
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  id v11 = v6;
  id v12 = v7;
  return a1;
}

uint64_t assignWithCopy for HeadlineFontBook(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  unint64_t v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  uint64_t v13 = *(void **)(a2 + 24);
  uint64_t v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  uint64_t v16 = *(void **)(a2 + 32);
  uint64_t v17 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v16;
  id v18 = v16;

  return a1;
}

uint64_t assignWithTake for HeadlineFontBook(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  id v6 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for HeadlineFontBook()
{
  return &type metadata for HeadlineFontBook;
}

id sub_1C02125A8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_resizing] = *a1;
  swift_release();
  return objc_msgSend(v1, sel_setNeedsLayout);
}

uint64_t sub_1C02125F0()
{
  sub_1BFE4DBE0();
  uint64_t v1 = swift_allocObject();
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_widthLayer);
  int v3 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_heightLayer);
  *(_OWORD *)(v1 + 16) = xmmword_1C1534A50;
  unsigned int v4 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_leftMarginLayer);
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_rightMarginLayer);
  *(void *)(v1 + 48) = v4;
  *(void *)(v1 + 56) = v5;
  id v6 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_topMarginLayer);
  unint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_bottomMarginLayer);
  *(void *)(v1 + 64) = v6;
  *(void *)(v1 + 72) = v7;
  uint64_t v15 = v1;
  sub_1C151EBEC();
  id v8 = v2;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  id v13 = v7;
  return v15;
}

unint64_t sub_1C02126CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_resizing] = 0;
  uint64_t v8 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_frameLayer;
  id v9 = objc_allocWithZone(MEMORY[0x1E4F39C88]);
  id v10 = v4;
  *(void *)&v4[v8] = objc_msgSend(v9, sel_init);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_widthLayer;
  *(void *)&v10[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_heightLayer;
  *(void *)&v10[v12] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v13 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_leftMarginLayer;
  *(void *)&v10[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_rightMarginLayer;
  *(void *)&v10[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_topMarginLayer;
  *(void *)&v10[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v16 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_bottomMarginLayer;
  *(void *)&v10[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);

  if (a3)
  {
    uint64_t v17 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = 0;
  }
  v51.receiver = v10;
  v51.super_class = ObjectType;
  id v18 = (char *)objc_msgSendSuper2(&v51, sel_initWithStyle_reuseIdentifier_, a1, v17);

  uint64_t v19 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_frameLayer;
  uint64_t v20 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_frameLayer];
  uint64_t v21 = v18;
  objc_msgSend(v20, sel_setLineWidth_, 1.0);
  sub_1BFE4DBE0();
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1C15320E0;
  sub_1BFFBE2BC();
  id v23 = v20;
  *(void *)(v22 + 32) = sub_1C151FB4C();
  sub_1C151EBEC();
  uint64_t v24 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setLineDashPattern_, v24);

  uint64_t v25 = *(void **)&v18[v19];
  unint64_t v26 = self;
  id v27 = v25;
  id v28 = objc_msgSend(v26, sel_lightGrayColor);
  id v29 = objc_msgSend(v28, sel_CGColor);

  objc_msgSend(v27, sel_setStrokeColor_, v29);
  id v30 = *(id *)&v18[v19];
  id v31 = objc_msgSend(v26, sel_clearColor);
  id v32 = objc_msgSend(v31, sel_CGColor);

  objc_msgSend(v30, sel_setFillColor_, v32);
  id v33 = objc_msgSend(v21, sel_contentView);
  id v34 = objc_msgSend(v33, sel_layer);

  objc_msgSend(v34, sel_addSublayer_, *(void *)&v18[v19]);
  uint64_t v50 = v21;
  unint64_t result = sub_1C02125F0();
  unint64_t v36 = result;
  if (!(result >> 62))
  {
    uint64_t v37 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v37) {
      goto LABEL_6;
    }
LABEL_13:

    swift_bridgeObjectRelease();
    return (unint64_t)v50;
  }
  unint64_t result = sub_1C15204BC();
  uint64_t v37 = result;
  if (!result) {
    goto LABEL_13;
  }
LABEL_6:
  if (v37 >= 1)
  {
    uint64_t v38 = 0;
    uint64_t v39 = *MEMORY[0x1E4F3A478];
    uint64_t v40 = *MEMORY[0x1E4F3A458];
    do
    {
      if ((v36 & 0xC000000000000001) != 0) {
        id v41 = (id)MEMORY[0x1C18C7CB0](v38, v36);
      }
      else {
        id v41 = *(id *)(v36 + 8 * v38 + 32);
      }
      uint64_t v42 = v41;
      ++v38;
      objc_msgSend(v41, sel_setLineWidth_, 2.0);
      id v43 = objc_msgSend(v26, sel_clearColor);
      id v44 = objc_msgSend(v43, sel_CGColor);

      objc_msgSend(v42, sel_setFillColor_, v44);
      objc_msgSend(v42, sel_setLineJoin_, v39);
      objc_msgSend(v42, sel_setLineCap_, v40);
      id v45 = objc_msgSend(v26, sel_systemBlueColor);
      id v46 = objc_msgSend(v45, sel_colorWithAlphaComponent_, 0.15);

      id v47 = objc_msgSend(v46, sel_CGColor);
      objc_msgSend(v42, sel_setStrokeColor_, v47);

      id v48 = objc_msgSend(v50, sel_contentView);
      id v49 = objc_msgSend(v48, sel_layer);

      objc_msgSend(v49, sel_addSublayer_, v42);
    }
    while (v37 != v38);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_1C0212CAC()
{
  v119.receiver = v0;
  v119.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v119, sel_layoutSubviews);
  objc_msgSend(v0, sel_bounds);
  CGFloat v1 = CGRectGetWidth(v120) * 0.5;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_frameLayer];
  objc_msgSend(v0, sel_bounds);
  CGFloat v3 = CGRectGetWidth(v121) * 0.5 - v1 * 0.5;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_, v3, CGRectGetHeight(v122) * 0.5 + -40.0, v1, 80.0);
  objc_msgSend(v2, sel_bounds);
  id v8 = objc_msgSend(self, sel_bezierPathWithRect_, v4, v5, v6, v7);
  id v9 = objc_msgSend(v8, sel_CGPath);

  objc_msgSend(v2, sel_setPath_, v9);
  unint64_t v10 = sub_1C02125F0();
  unint64_t v11 = v10;
  if (v10 >> 62)
  {
    uint64_t v12 = sub_1C15204BC();
    if (v12) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12)
    {
LABEL_3:
      uint64_t v13 = self;
      if (v12 < 1)
      {
        __break(1u);
        JUMPOUT(0x1C0214070);
      }
      uint64_t v14 = (void *)v13;
      uint64_t v15 = 0;
      do
      {
        if ((v11 & 0xC000000000000001) != 0) {
          id v16 = (id)MEMORY[0x1C18C7CB0](v15, v11);
        }
        else {
          id v16 = *(id *)(v11 + 8 * v15 + 32);
        }
        uint64_t v17 = v16;
        ++v15;
        id v18 = objc_msgSend(v14, sel_systemBlueColor);
        id v19 = objc_msgSend(v18, sel_colorWithAlphaComponent_, 0.15);

        id v20 = objc_msgSend(v19, sel_CGColor);
        objc_msgSend(v17, sel_setStrokeColor_, v20);
      }
      while (v12 != v15);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_heightLayer];
  objc_msgSend(v0, sel_bounds);
  double v22 = CGRectGetWidth(v123) * 0.5;
  objc_msgSend(v2, sel_frame);
  double v23 = CGRectGetMinY(v124) + 8.0;
  objc_msgSend(v0, sel_bounds);
  double v24 = CGRectGetWidth(v125) * 0.5;
  objc_msgSend(v2, sel_frame);
  double v25 = CGRectGetMaxY(v126) + -8.0;
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  objc_msgSend(v26, sel_moveToPoint_, v22, v23);
  objc_msgSend(v26, sel_addLineToPoint_, v24, v25);
  sub_1C035C60C(v26, v22, v23, v24, v25);
  sub_1C035C60C(v26, v24, v25, v22, v23);
  id v27 = objc_msgSend(v26, sel_CGPath);

  id v116 = v21;
  objc_msgSend(v21, sel_setPath_, v27);

  id v28 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_widthLayer];
  objc_msgSend(v2, sel_frame);
  double v29 = CGRectGetMinX(v127) + 8.0;
  objc_msgSend(v0, sel_bounds);
  double v30 = CGRectGetHeight(v128) * 0.5;
  objc_msgSend(v2, sel_frame);
  double v31 = CGRectGetMaxX(v129) + -8.0;
  objc_msgSend(v0, sel_bounds);
  double v32 = CGRectGetHeight(v130) * 0.5;
  id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14C0]), sel_init);
  objc_msgSend(v33, sel_moveToPoint_, v29, v30);
  objc_msgSend(v33, sel_addLineToPoint_, v31, v32);
  sub_1C035C60C(v33, v29, v30, v31, v32);
  sub_1C035C60C(v33, v31, v32, v29, v30);
  id v34 = objc_msgSend(v33, sel_CGPath);

  objc_msgSend(v28, sel_setPath_, v34);
  uint64_t v35 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_topMarginLayer];
  objc_msgSend(v0, sel_bounds);
  double v36 = CGRectGetWidth(v131) * 0.5;
  objc_msgSend(v0, sel_bounds);
  double v37 = CGRectGetWidth(v132) * 0.5;
  objc_msgSend(v2, sel_frame);
  CGFloat MinY = CGRectGetMinY(v133);
  id v39 = sub_1C035C728(v36, 8.0, v37, MinY + -8.0);
  id v40 = objc_msgSend(v39, sel_CGPath);

  id v117 = v35;
  objc_msgSend(v35, (SEL)&selRef_topViewController, v40);

  id v41 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_bottomMarginLayer];
  objc_msgSend(v0, sel_bounds);
  double v42 = CGRectGetWidth(v134) * 0.5;
  objc_msgSend(v2, sel_frame);
  double v43 = CGRectGetMaxY(v135) + 8.0;
  objc_msgSend(v0, sel_bounds);
  double v44 = CGRectGetWidth(v136) * 0.5;
  objc_msgSend(v0, sel_bounds);
  CGFloat Height = CGRectGetHeight(v137);
  id v46 = sub_1C035C728(v42, v43, v44, Height + -8.0);
  id v47 = objc_msgSend(v46, (SEL)&selRef_rootViewController);

  objc_msgSend(v41, (SEL)&selRef_topViewController, v47);
  objc_msgSend(v2, sel_frame);
  CGFloat v48 = CGRectGetMinY(v138) + -16.0;
  id v49 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_leftMarginLayer];
  objc_msgSend(v2, sel_frame);
  double v50 = CGRectGetMinX(v139) + -8.0;
  objc_msgSend(v0, sel_bounds);
  double v51 = CGRectGetHeight(v140) * 0.5;
  objc_msgSend(v2, sel_frame);
  double v52 = CGRectGetMinX(v141) + -8.0 - v48;
  objc_msgSend(v0, sel_bounds);
  CGFloat v53 = CGRectGetHeight(v142);
  id v54 = sub_1C035C728(v50, v51, v52, v53 * 0.5);
  id v55 = objc_msgSend(v54, (SEL)&selRef_rootViewController);

  id v114 = v49;
  objc_msgSend(v49, (SEL)&selRef_topViewController, v55);

  uint64_t v56 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_rightMarginLayer];
  objc_msgSend(v2, sel_frame);
  double v57 = CGRectGetMaxX(v143) + 8.0;
  objc_msgSend(v0, sel_bounds);
  double v58 = CGRectGetHeight(v144) * 0.5;
  objc_msgSend(v2, sel_frame);
  double v59 = v48 + CGRectGetMaxX(v145) + 8.0;
  objc_msgSend(v0, sel_bounds);
  CGFloat v60 = CGRectGetHeight(v146);
  id v61 = sub_1C035C728(v57, v58, v59, v60 * 0.5);
  id v62 = objc_msgSend(v61, (SEL)&selRef_rootViewController);

  id v115 = v56;
  objc_msgSend(v56, (SEL)&selRef_topViewController, v62);

  uint64_t v63 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_resizing];
  if (!v63) {
    return;
  }
  uint64_t v64 = (uint64_t *)(v63 + 16);
  swift_beginAccess();
  uint64_t v65 = *(void *)(v63 + 16);
  uint64_t v118 = (uint64_t *)(v63 + 16);
  id v113 = v41;
  if (!*(void *)(v65 + 16))
  {
    swift_retain();
    goto LABEL_23;
  }
  sub_1C1520DBC();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  uint64_t v66 = sub_1C1520E0C();
  uint64_t v67 = -1 << *(unsigned char *)(v65 + 32);
  unint64_t v68 = v66 & ~v67;
  if (((*(void *)(v65 + 56 + ((v68 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v68) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v69 = ~v67;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v65 + 48) + v68))
    {
      case 1:
        swift_bridgeObjectRelease();
        goto LABEL_21;
      default:
        char v70 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v70 & 1) == 0)
        {
          unint64_t v68 = (v68 + 1) & v69;
          if (((*(void *)(v65 + 56 + ((v68 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v68) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_22;
          }
          continue;
        }
LABEL_21:
        swift_bridgeObjectRelease();
        id v71 = objc_msgSend(self, sel_systemBlueColor);
        id v72 = objc_msgSend(v71, sel_CGColor);

        objc_msgSend(v28, sel_setStrokeColor_, v72);
LABEL_22:
        uint64_t v64 = v118;
LABEL_23:
        uint64_t v73 = *v64;
        if (!*(void *)(*v64 + 16)) {
          goto LABEL_34;
        }
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v74 = sub_1C1520E0C();
        uint64_t v75 = -1 << *(unsigned char *)(v73 + 32);
        unint64_t v76 = v74 & ~v75;
        if (((*(void *)(v73 + 56 + ((v76 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v76) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_34;
        }
        uint64_t v77 = ~v75;
        while (2)
        {
          switch(*(unsigned char *)(*(void *)(v73 + 48) + v76))
          {
            case 4:
              swift_bridgeObjectRelease();
              goto LABEL_32;
            default:
              char v78 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              if ((v78 & 1) == 0)
              {
                unint64_t v76 = (v76 + 1) & v77;
                if (((*(void *)(v73 + 56 + ((v76 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v76) & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_33;
                }
                continue;
              }
LABEL_32:
              swift_bridgeObjectRelease();
              id v79 = objc_msgSend(self, sel_systemBlueColor);
              id v80 = objc_msgSend(v79, sel_CGColor);

              objc_msgSend(v116, sel_setStrokeColor_, v80);
LABEL_33:
              uint64_t v64 = v118;
LABEL_34:
              uint64_t v81 = *v64;
              if (*(void *)(*v64 + 16))
              {
                sub_1C1520DBC();
                swift_bridgeObjectRetain();
                sub_1C151E77C();
                uint64_t v82 = sub_1C1520E0C();
                uint64_t v83 = -1 << *(unsigned char *)(v81 + 32);
                unint64_t v84 = v82 & ~v83;
                if ((*(void *)(v81 + 56 + ((v84 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v84))
                {
                  uint64_t v85 = ~v83;
                  while (2)
                  {
                    switch(*(unsigned char *)(*(void *)(v81 + 48) + v84))
                    {
                      case 1:
                      case 2:
                      case 3:
                      case 4:
                      case 5:
                        char v86 = sub_1C1520A9C();
                        swift_bridgeObjectRelease();
                        if (v86) {
                          goto LABEL_43;
                        }
                        unint64_t v84 = (v84 + 1) & v85;
                        if ((*(void *)(v81 + 56 + ((v84 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v84)) {
                          continue;
                        }
                        swift_bridgeObjectRelease();
                        break;
                      default:
                        swift_bridgeObjectRelease();
LABEL_43:
                        swift_bridgeObjectRelease();
                        id v87 = objc_msgSend(self, sel_systemBlueColor);
                        id v88 = objc_msgSend(v87, sel_CGColor);

                        objc_msgSend(v114, sel_setStrokeColor_, v88);
                        break;
                    }
                    break;
                  }
                  uint64_t v64 = v118;
                }
                else
                {
                  swift_bridgeObjectRelease();
                }
              }
              uint64_t v89 = *v64;
              if (!*(void *)(*v64 + 16)) {
                goto LABEL_56;
              }
              sub_1C1520DBC();
              swift_bridgeObjectRetain();
              sub_1C151E77C();
              uint64_t v90 = sub_1C1520E0C();
              uint64_t v91 = -1 << *(unsigned char *)(v89 + 32);
              unint64_t v92 = v90 & ~v91;
              if (((*(void *)(v89 + 56 + ((v92 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v92) & 1) == 0)
              {
                swift_bridgeObjectRelease();
                goto LABEL_56;
              }
              uint64_t v93 = ~v91;
              while (2)
              {
                switch(*(unsigned char *)(*(void *)(v89 + 48) + v92))
                {
                  case 2:
                    swift_bridgeObjectRelease();
                    goto LABEL_54;
                  default:
                    char v94 = sub_1C1520A9C();
                    swift_bridgeObjectRelease();
                    if ((v94 & 1) == 0)
                    {
                      unint64_t v92 = (v92 + 1) & v93;
                      if (((*(void *)(v89 + 56 + ((v92 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v92) & 1) == 0)
                      {
                        swift_bridgeObjectRelease();
                        goto LABEL_55;
                      }
                      continue;
                    }
LABEL_54:
                    swift_bridgeObjectRelease();
                    id v95 = objc_msgSend(self, sel_systemBlueColor);
                    id v96 = objc_msgSend(v95, sel_CGColor);

                    objc_msgSend(v115, sel_setStrokeColor_, v96);
LABEL_55:
                    uint64_t v64 = v118;
LABEL_56:
                    uint64_t v97 = *v64;
                    if (!*(void *)(*v64 + 16)) {
                      goto LABEL_67;
                    }
                    sub_1C1520DBC();
                    swift_bridgeObjectRetain();
                    sub_1C151E77C();
                    uint64_t v98 = sub_1C1520E0C();
                    uint64_t v99 = -1 << *(unsigned char *)(v97 + 32);
                    unint64_t v100 = v98 & ~v99;
                    if (((*(void *)(v97 + 56 + ((v100 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v100) & 1) == 0)
                    {
                      swift_bridgeObjectRelease();
                      goto LABEL_67;
                    }
                    uint64_t v101 = ~v99;
                    while (2)
                    {
                      switch(*(unsigned char *)(*(void *)(v97 + 48) + v100))
                      {
                        case 3:
                          swift_bridgeObjectRelease();
                          goto LABEL_65;
                        default:
                          char v102 = sub_1C1520A9C();
                          swift_bridgeObjectRelease();
                          if ((v102 & 1) == 0)
                          {
                            unint64_t v100 = (v100 + 1) & v101;
                            if (((*(void *)(v97 + 56 + ((v100 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v100) & 1) == 0)
                            {
                              swift_bridgeObjectRelease();
                              goto LABEL_66;
                            }
                            continue;
                          }
LABEL_65:
                          swift_bridgeObjectRelease();
                          id v103 = objc_msgSend(self, sel_systemBlueColor);
                          id v104 = objc_msgSend(v103, sel_CGColor);

                          objc_msgSend(v117, sel_setStrokeColor_, v104);
LABEL_66:
                          uint64_t v64 = v118;
LABEL_67:
                          uint64_t v105 = *v64;
                          if (!*(void *)(*v64 + 16))
                          {
                            swift_release();
                            return;
                          }
                          sub_1C1520DBC();
                          swift_bridgeObjectRetain();
                          sub_1C151E77C();
                          uint64_t v106 = sub_1C1520E0C();
                          uint64_t v107 = -1 << *(unsigned char *)(v105 + 32);
                          unint64_t v108 = v106 & ~v107;
                          if (((*(void *)(v105 + 56 + ((v108 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v108) & 1) == 0)
                          {
LABEL_73:
                            swift_release();
                            swift_bridgeObjectRelease();
                            return;
                          }
                          uint64_t v109 = ~v107;
                          while (2)
                          {
                            switch(*(unsigned char *)(*(void *)(v105 + 48) + v108))
                            {
                              case 5:
                                swift_bridgeObjectRelease();
                                goto LABEL_76;
                              default:
                                char v110 = sub_1C1520A9C();
                                swift_bridgeObjectRelease();
                                if ((v110 & 1) == 0)
                                {
                                  unint64_t v108 = (v108 + 1) & v109;
                                  if (((*(void *)(v105 + 56 + ((v108 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v108) & 1) == 0) {
                                    goto LABEL_73;
                                  }
                                  continue;
                                }
LABEL_76:
                                swift_bridgeObjectRelease();
                                id v111 = objc_msgSend(self, sel_systemBlueColor);
                                id v112 = objc_msgSend(v111, sel_CGColor);

                                objc_msgSend(v113, sel_setStrokeColor_, v112);
                                swift_release();

                                return;
                            }
                          }
                      }
                    }
                }
              }
          }
        }
    }
  }
}

uint64_t type metadata accessor for DebugFormatInspectorResizingCell()
{
  return self;
}

void sub_1C0214218()
{
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_resizing] = 0;
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_frameLayer;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_widthLayer;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v3 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_heightLayer;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_leftMarginLayer;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_rightMarginLayer;
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v6 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_topMarginLayer;
  *(void *)&v0[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed32DebugFormatInspectorResizingCell_bottomMarginLayer;
  *(void *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);

  sub_1C152040C();
  __break(1u);
}

uint64_t sub_1C0214358(char a1)
{
  return sub_1C0216B48(a1, (uint64_t)&type metadata for FormatPuzzleStatisticBinding.Image);
}

uint64_t sub_1C0214364(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatPuzzleStatisticBinding.Float);
}

uint64_t sub_1C0214370(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatPuzzleStatisticBinding.Text);
}

uint64_t sub_1C021437C(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatPuzzleStatisticBinding.Bool);
}

uint64_t sub_1C0214388(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = sub_1C1520E5C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v56[0] + 1) = &type metadata for FormatLiveActivityBinding.Command;
  uint64_t v18 = swift_allocObject();
  *(void *)&long long v55 = v18;
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(unsigned char *)(v18 + 40) = a4 & 1;
  sub_1BFDEB94C(a1, a2, a3, a4 & 1);
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v19 = sub_1C1520E2C();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v10, v19) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v36 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v52);
  swift_release();
  if (!v54)
  {
    id v34 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v35 = &v52;
LABEL_10:
    sub_1C003E100((uint64_t)v35, v34);
    goto LABEL_11;
  }
  unsigned long long v21 = v52;
  long long v55 = v52;
  sub_1BFF993A8(&v53, v56);
  long long v52 = v21;
  sub_1BFF6A008((uint64_t)v56, (uint64_t)&v53);
  if (!*((void *)&v21 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    id v34 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v35 = &v55;
    goto LABEL_10;
  }
  id v45 = v56;
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_1BFE7E4D4(v21, *((unint64_t *)&v21 + 1));
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    uint64_t v48 = v22;
    uint64_t v49 = v24;
    sub_1BFF27ECC();
    uint64_t v44 = sub_1C151FE5C();
    uint64_t v43 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_1C029748C(1uLL, v21, *((unint64_t *)&v21 + 1));
    uint64_t v28 = v27;
    uint64_t v42 = v29;
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v42 = MEMORY[0x1C18C6220](v26, v28, v42, v31);
    swift_bridgeObjectRelease();
    uint64_t v48 = v44;
    uint64_t v49 = v43;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = v48;
    uint64_t v33 = v49;
  }
  else
  {
    uint64_t v33 = v21 >> 64;
    uint64_t v32 = v21;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  long long v52 = v21;
  sub_1BFF6A008((uint64_t)v45, (uint64_t)&v53);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v46, (uint64_t)&v48);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C1529AE0;
    *(void *)(v38 + 32) = v32;
    *(void *)(v38 + 40) = v33;
    uint64_t v39 = v50;
    uint64_t v40 = v51;
    __swift_project_boxed_opaque_existential_1(&v48, v50);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    *(void *)&long long v52 = v38;
    sub_1BFEF95B8(v41);
    uint64_t v36 = v52;
    sub_1C003E100((uint64_t)&v55, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  }
  else
  {
    uint64_t v47 = 0;
    memset(v46, 0, sizeof(v46));
    sub_1C0223948((uint64_t)v46);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C1529AE0;
    *(void *)(v36 + 32) = v32;
    *(void *)(v36 + 40) = v33;
    sub_1C003E100((uint64_t)&v55, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v13, (uint64_t (*)(void))sub_1C0223848);
  return v36;
}

uint64_t sub_1C02149BC()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatSportsEventBinding.DateTime);
}

uint64_t sub_1C02149C8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = sub_1C1520E5C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v56[0] + 1) = &type metadata for FormatSportsEventBinding.Command;
  uint64_t v18 = swift_allocObject();
  *(void *)&long long v55 = v18;
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(unsigned char *)(v18 + 40) = a4;
  sub_1C0223EF4(a1, a2, a3, a4, (uint64_t (*)(void))sub_1C00AB56C);
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v19 = sub_1C1520E2C();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v10, v19) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v36 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v52);
  swift_release();
  if (!v54)
  {
    id v34 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v35 = &v52;
LABEL_10:
    sub_1C003E100((uint64_t)v35, v34);
    goto LABEL_11;
  }
  unsigned long long v21 = v52;
  long long v55 = v52;
  sub_1BFF993A8(&v53, v56);
  long long v52 = v21;
  sub_1BFF6A008((uint64_t)v56, (uint64_t)&v53);
  if (!*((void *)&v21 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    id v34 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v35 = &v55;
    goto LABEL_10;
  }
  id v45 = v56;
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_1BFE7E4D4(v21, *((unint64_t *)&v21 + 1));
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    uint64_t v48 = v22;
    uint64_t v49 = v24;
    sub_1BFF27ECC();
    uint64_t v44 = sub_1C151FE5C();
    uint64_t v43 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_1C029748C(1uLL, v21, *((unint64_t *)&v21 + 1));
    uint64_t v28 = v27;
    uint64_t v42 = v29;
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v42 = MEMORY[0x1C18C6220](v26, v28, v42, v31);
    swift_bridgeObjectRelease();
    uint64_t v48 = v44;
    uint64_t v49 = v43;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = v48;
    uint64_t v33 = v49;
  }
  else
  {
    uint64_t v33 = v21 >> 64;
    uint64_t v32 = v21;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  long long v52 = v21;
  sub_1BFF6A008((uint64_t)v45, (uint64_t)&v53);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v46, (uint64_t)&v48);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C1529AE0;
    *(void *)(v38 + 32) = v32;
    *(void *)(v38 + 40) = v33;
    uint64_t v39 = v50;
    uint64_t v40 = v51;
    __swift_project_boxed_opaque_existential_1(&v48, v50);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    *(void *)&long long v52 = v38;
    sub_1BFEF95B8(v41);
    uint64_t v36 = v52;
    sub_1C003E100((uint64_t)&v55, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  }
  else
  {
    uint64_t v47 = 0;
    memset(v46, 0, sizeof(v46));
    sub_1C0223948((uint64_t)v46);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C1529AE0;
    *(void *)(v36 + 32) = v32;
    *(void *)(v36 + 40) = v33;
    sub_1C003E100((uint64_t)&v55, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v13, (uint64_t (*)(void))sub_1C0223848);
  return v36;
}

uint64_t sub_1C0215010()
{
  return sub_1C0217E24((uint64_t)&type metadata for FormatSportsEventBinding.Image, (uint64_t)&unk_1F1B940E0, (void (*)(uint64_t, void))sub_1C0223D44, (void (*)(uint64_t))sub_1C0223DA0);
}

uint64_t sub_1C021504C(uint64_t a1, char a2)
{
  return sub_1C0215088(a1, a2, (uint64_t)&type metadata for FormatSportsEventBinding.Color);
}

uint64_t sub_1C0215058(uint64_t a1, char a2)
{
  return sub_1C0215088(a1, a2, (uint64_t)&type metadata for FormatSportsEventBinding.Text);
}

uint64_t sub_1C0215064(uint64_t a1, char a2)
{
  return sub_1C0215088(a1, a2, (uint64_t)&type metadata for FormatSportsEventBinding.Bool);
}

uint64_t sub_1C0215070()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatPuzzleTypeBinding.Image);
}

uint64_t sub_1C021507C(uint64_t a1, char a2)
{
  return sub_1C0215088(a1, a2, (uint64_t)&type metadata for FormatPuzzleTypeBinding.Color);
}

uint64_t sub_1C0215088(uint64_t a1, char a2, uint64_t a3)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_1C1520E5C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v53[0] + 1) = a3;
  *(void *)&long long v52 = a1;
  BYTE8(v52) = a2;
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v16 = sub_1C1520E2C();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v8, v16) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v33 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v49);
  swift_release();
  if (!v51)
  {
    uint64_t v31 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v32 = &v49;
LABEL_10:
    sub_1C003E100((uint64_t)v32, v31);
    goto LABEL_11;
  }
  unsigned long long v18 = v49;
  long long v52 = v49;
  sub_1BFF993A8(&v50, v53);
  long long v49 = v18;
  sub_1BFF6A008((uint64_t)v53, (uint64_t)&v50);
  if (!*((void *)&v18 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
    uint64_t v31 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v32 = &v52;
    goto LABEL_10;
  }
  uint64_t v42 = v53;
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1BFE7E4D4(v18, *((unint64_t *)&v18 + 1));
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    uint64_t v45 = v19;
    uint64_t v46 = v21;
    sub_1BFF27ECC();
    uint64_t v41 = sub_1C151FE5C();
    uint64_t v40 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1C029748C(1uLL, v18, *((unint64_t *)&v18 + 1));
    uint64_t v25 = v24;
    uint64_t v39 = v26;
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v39 = MEMORY[0x1C18C6220](v23, v25, v39, v28);
    swift_bridgeObjectRelease();
    uint64_t v45 = v41;
    uint64_t v46 = v40;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v45;
    uint64_t v30 = v46;
  }
  else
  {
    uint64_t v30 = v18 >> 64;
    uint64_t v29 = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  long long v49 = v18;
  sub_1BFF6A008((uint64_t)v42, (uint64_t)&v50);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v43, (uint64_t)&v45);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C1529AE0;
    *(void *)(v35 + 32) = v29;
    *(void *)(v35 + 40) = v30;
    uint64_t v36 = v47;
    uint64_t v37 = v48;
    __swift_project_boxed_opaque_existential_1(&v45, v47);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
    *(void *)&long long v49 = v35;
    sub_1BFEF95B8(v38);
    uint64_t v33 = v49;
    sub_1C003E100((uint64_t)&v52, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  }
  else
  {
    uint64_t v44 = 0;
    memset(v43, 0, sizeof(v43));
    sub_1C0223948((uint64_t)v43);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
    *(void *)(v33 + 32) = v29;
    *(void *)(v33 + 40) = v30;
    sub_1C003E100((uint64_t)&v52, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v11, (uint64_t (*)(void))sub_1C0223848);
  return v33;
}

uint64_t sub_1C0215680(uint64_t a1, char a2)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = sub_1C1520E5C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v51[0] + 1) = &type metadata for FormatPuzzleTypeBinding.Text;
  *(void *)&long long v50 = a1;
  BYTE8(v50) = a2 & 1;
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v14 = sub_1C1520E2C();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v6, v14) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v31 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v47);
  swift_release();
  if (!v49)
  {
    uint64_t v29 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v30 = &v47;
LABEL_10:
    sub_1C003E100((uint64_t)v30, v29);
    goto LABEL_11;
  }
  unsigned long long v16 = v47;
  long long v50 = v47;
  sub_1BFF993A8(&v48, v51);
  long long v47 = v16;
  sub_1BFF6A008((uint64_t)v51, (uint64_t)&v48);
  if (!*((void *)&v16 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
    uint64_t v29 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v30 = &v50;
    goto LABEL_10;
  }
  uint64_t v40 = v51;
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1BFE7E4D4(v16, *((unint64_t *)&v16 + 1));
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    uint64_t v43 = v17;
    uint64_t v44 = v19;
    sub_1BFF27ECC();
    uint64_t v39 = sub_1C151FE5C();
    uint64_t v38 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1C029748C(1uLL, v16, *((unint64_t *)&v16 + 1));
    uint64_t v23 = v22;
    uint64_t v37 = v24;
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v37 = MEMORY[0x1C18C6220](v21, v23, v37, v26);
    swift_bridgeObjectRelease();
    uint64_t v43 = v39;
    uint64_t v44 = v38;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = v43;
    uint64_t v28 = v44;
  }
  else
  {
    uint64_t v28 = v16 >> 64;
    uint64_t v27 = v16;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  long long v47 = v16;
  sub_1BFF6A008((uint64_t)v40, (uint64_t)&v48);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v41, (uint64_t)&v43);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
    *(void *)(v33 + 32) = v27;
    *(void *)(v33 + 40) = v28;
    uint64_t v34 = v45;
    uint64_t v35 = v46;
    __swift_project_boxed_opaque_existential_1(&v43, v45);
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
    *(void *)&long long v47 = v33;
    sub_1BFEF95B8(v36);
    uint64_t v31 = v47;
    sub_1C003E100((uint64_t)&v50, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }
  else
  {
    uint64_t v42 = 0;
    memset(v41, 0, sizeof(v41));
    sub_1C0223948((uint64_t)v41);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
    *(void *)(v31 + 32) = v27;
    *(void *)(v31 + 40) = v28;
    sub_1C003E100((uint64_t)&v50, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v9, (uint64_t (*)(void))sub_1C0223848);
  return v31;
}

uint64_t sub_1C0215C80(char a1)
{
  return sub_1C0216B48(a1, (uint64_t)&type metadata for FormatCustomItemBinding.Text);
}

uint64_t sub_1C0215C8C()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatCustomItemBinding.URL);
}

uint64_t sub_1C0215C98(char a1)
{
  return sub_1C0216B48(a1, (uint64_t)&type metadata for FormatAudioTrackBinding.Command);
}

uint64_t sub_1C0215CA4(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatAudioTrackBinding.Text);
}

uint64_t sub_1C0215CB0()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatWebEmbedBinding.Action);
}

uint64_t sub_1C0215CBC(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatWebEmbedBinding.Text);
}

uint64_t sub_1C0215CC8(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatWebEmbedBinding.Bool);
}

uint64_t sub_1C0215CD4(char a1)
{
  return sub_1C0216B48(a1, (uint64_t)&type metadata for FormatWebEmbedBinding.URL);
}

uint64_t sub_1C0215CE0(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Command);
}

uint64_t sub_1C0215CEC(char a1)
{
  return sub_1C0216B48(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Action);
}

uint64_t sub_1C0215CF8(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Image);
}

uint64_t sub_1C0215D04(char a1)
{
  return sub_1C0216B48(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Float);
}

uint64_t sub_1C0215D10(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Color);
}

uint64_t sub_1C0215D1C()
{
  return sub_1C02164E8((uint64_t)&type metadata for FormatHeadlineBinding.Text, (uint64_t)&unk_1F1B94130, (void (*)(uint64_t, void))sub_1C0223E44, (void (*)(void, void, void, void, void, void, void))sub_1BFF2B138);
}

uint64_t sub_1C0215D58(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return sub_1C021B5F4(a1, a2, a3, (uint64_t)&type metadata for FormatHeadlineBinding.Font);
}

uint64_t sub_1C0215D64(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatHeadlineBinding.Bool);
}

uint64_t sub_1C0215D70(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatHeadlineBinding.URL);
}

uint64_t sub_1C0215D7C()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatHeadlineBinding.ActivityItemsConfiguration);
}

uint64_t sub_1C0215D88(char a1)
{
  return sub_1C0216B48(a1, (uint64_t)&type metadata for FormatHeadlineBinding.SharedMenuItem);
}

uint64_t sub_1C0215D94()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatHeadlineBinding.LayeredMedia);
}

uint64_t sub_1C0215DA0()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatHeadlineBinding.SharedItem);
}

uint64_t sub_1C0215DAC()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatWeatherBinding.Command);
}

uint64_t sub_1C0215DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0215DF8(a1, a2, a3, (uint64_t)&type metadata for FormatWeatherBinding.Image, (uint64_t)sub_1BFF61744);
}

uint64_t sub_1C0215DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0215DF8(a1, a2, a3, (uint64_t)&type metadata for FormatWeatherBinding.Text, (uint64_t)sub_1C02240D4);
}

uint64_t sub_1C0215DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v49 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))a5;
  uint64_t v9 = BYTE1(a3);
  unsigned int v10 = a3 >> 8;
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unsigned long long v16 = (char *)&v46 - v15;
  uint64_t v17 = sub_1C1520E5C();
  uint64_t v18 = *(void *)(v17 - 8);
  __n128 v19 = MEMORY[0x1F4188790](v17);
  *((void *)&v60[0] + 1) = a4;
  unint64_t v21 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v59 = a1;
  *((void *)&v59 + 1) = a2;
  LOBYTE(v60[0]) = a3;
  BYTE1(v60[0]) = v10;
  v49(a1, a2, a3, v9, v19);
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v22 = sub_1C1520E2C();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v16, 1, v22) == 1) {
    goto LABEL_8;
  }
  sub_1C003E258((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v23 + 88))(v13, v22) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v22);
LABEL_8:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
LABEL_9:
    uint64_t v38 = MEMORY[0x1E4FBC860];
    goto LABEL_10;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v56);
  swift_release();
  if (!v58)
  {
    uint64_t v40 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v41 = &v56;
LABEL_13:
    sub_1C003E100((uint64_t)v41, v40);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    goto LABEL_9;
  }
  unsigned long long v24 = v56;
  long long v59 = v56;
  sub_1BFF993A8(&v57, v60);
  long long v56 = v24;
  sub_1BFF6A008((uint64_t)v60, (uint64_t)&v57);
  if (!*((void *)&v24 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
    uint64_t v40 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v41 = &v59;
    goto LABEL_13;
  }
  uint64_t v49 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v60;
  swift_bridgeObjectRetain_n();
  uint64_t v25 = sub_1BFE7E4D4(v24, *((unint64_t *)&v24 + 1));
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  if (v27)
  {
    uint64_t v52 = v25;
    uint64_t v53 = v27;
    sub_1BFF27ECC();
    uint64_t v47 = sub_1C151FE5C();
    uint64_t v46 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_1C029748C(1uLL, v24, *((unint64_t *)&v24 + 1));
    uint64_t v31 = v30;
    long long v48 = v21;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C6220](v29, v31, v33, v35);
    swift_bridgeObjectRelease();
    uint64_t v52 = v47;
    uint64_t v53 = v46;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v21 = v48;
    swift_bridgeObjectRelease();
    uint64_t v36 = v52;
    uint64_t v37 = v53;
  }
  else
  {
    uint64_t v37 = v24 >> 64;
    uint64_t v36 = v24;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
  long long v56 = v24;
  sub_1BFF6A008((uint64_t)v49, (uint64_t)&v57);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v50, (uint64_t)&v52);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1C1529AE0;
    *(void *)(v42 + 32) = v36;
    *(void *)(v42 + 40) = v37;
    uint64_t v43 = v54;
    uint64_t v44 = v55;
    __swift_project_boxed_opaque_existential_1(&v52, v54);
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
    *(void *)&long long v56 = v42;
    sub_1BFEF95B8(v45);
    uint64_t v38 = v56;
    sub_1C003E100((uint64_t)&v59, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  }
  else
  {
    uint64_t v51 = 0;
    memset(v50, 0, sizeof(v50));
    sub_1C0223948((uint64_t)v50);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C1529AE0;
    *(void *)(v38 + 32) = v36;
    *(void *)(v38 + 40) = v37;
    sub_1C003E100((uint64_t)&v59, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  }
LABEL_10:
  sub_1C003E100((uint64_t)v16, (uint64_t (*)(void))sub_1C0223848);
  return v38;
}

uint64_t sub_1C0216438(char a1)
{
  return sub_1C0216B48(a1, (uint64_t)&type metadata for FormatWeatherBinding.Bool);
}

uint64_t sub_1C0216444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C021A98C(a1, a2, a3, (uint64_t)&type metadata for FormatWeatherBinding.Temperature, (void (*)(uint64_t, uint64_t, uint64_t, __n128))sub_1C0223F6C);
}

uint64_t sub_1C0216464(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatPaywallBinding.Text);
}

uint64_t sub_1C0216470(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatPaywallBinding.Bool);
}

uint64_t sub_1C021647C()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatPuzzleBinding.DateTime);
}

uint64_t sub_1C0216488(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatPuzzleBinding.Command);
}

uint64_t sub_1C0216494()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatPuzzleBinding.Action);
}

uint64_t sub_1C02164A0(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatPuzzleBinding.Image);
}

uint64_t sub_1C02164AC()
{
  return sub_1C02164E8((uint64_t)&type metadata for FormatPuzzleBinding.Text, (uint64_t)&unk_1F1B941A8, (void (*)(uint64_t, void))sub_1C0224024, (void (*)(void, void, void, void, void, void, void))sub_1C02240C4);
}

uint64_t sub_1C02164E8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void), void (*a4)(void, void, void, void, void, void, void))
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v8 - 8);
  unsigned int v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = sub_1C1520E5C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v55[0] + 1) = a1;
  *(void *)&long long v54 = swift_allocObject();
  a3(v4, v54 + 16);
  sub_1C0224080(v4, a4);
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v18 = sub_1C1520E2C();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v10, v18) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v18);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v35 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v51);
  swift_release();
  if (!v53)
  {
    uint64_t v33 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v34 = &v51;
LABEL_10:
    sub_1C003E100((uint64_t)v34, v33);
    goto LABEL_11;
  }
  unsigned long long v20 = v51;
  long long v54 = v51;
  sub_1BFF993A8(&v52, v55);
  long long v51 = v20;
  sub_1BFF6A008((uint64_t)v55, (uint64_t)&v52);
  if (!*((void *)&v20 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
    uint64_t v33 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v34 = &v54;
    goto LABEL_10;
  }
  uint64_t v44 = v55;
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_1BFE7E4D4(v20, *((unint64_t *)&v20 + 1));
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (v23)
  {
    uint64_t v47 = v21;
    uint64_t v48 = v23;
    sub_1BFF27ECC();
    uint64_t v43 = sub_1C151FE5C();
    uint64_t v42 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_1C029748C(1uLL, v20, *((unint64_t *)&v20 + 1));
    uint64_t v27 = v26;
    uint64_t v41 = v28;
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v41 = MEMORY[0x1C18C6220](v25, v27, v41, v30);
    swift_bridgeObjectRelease();
    uint64_t v47 = v43;
    uint64_t v48 = v42;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v47;
    uint64_t v32 = v48;
  }
  else
  {
    uint64_t v32 = v20 >> 64;
    uint64_t v31 = v20;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  long long v51 = v20;
  sub_1BFF6A008((uint64_t)v44, (uint64_t)&v52);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v45, (uint64_t)&v47);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1C1529AE0;
    *(void *)(v37 + 32) = v31;
    *(void *)(v37 + 40) = v32;
    uint64_t v38 = v49;
    uint64_t v39 = v50;
    __swift_project_boxed_opaque_existential_1(&v47, v49);
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
    *(void *)&long long v51 = v37;
    sub_1BFEF95B8(v40);
    uint64_t v35 = v51;
    sub_1C003E100((uint64_t)&v54, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
  }
  else
  {
    uint64_t v46 = 0;
    memset(v45, 0, sizeof(v45));
    sub_1C0223948((uint64_t)v45);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C1529AE0;
    *(void *)(v35 + 32) = v31;
    *(void *)(v35 + 40) = v32;
    sub_1C003E100((uint64_t)&v54, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v13, (uint64_t (*)(void))sub_1C0223848);
  return v35;
}

uint64_t sub_1C0216B0C(char a1)
{
  return sub_1C0216B48(a1, (uint64_t)&type metadata for FormatPuzzleBinding.Bool);
}

uint64_t sub_1C0216B18(char a1)
{
  return sub_1C0216B48(a1, (uint64_t)&type metadata for FormatIssueBinding.DateTime);
}

uint64_t sub_1C0216B24(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatIssueBinding.Command);
}

uint64_t sub_1C0216B30()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatIssueBinding.Action);
}

uint64_t sub_1C0216B3C(char a1)
{
  return sub_1C0216B48(a1, (uint64_t)&type metadata for FormatIssueBinding.Image);
}

uint64_t sub_1C0216B48(char a1, uint64_t a2)
{
  char v3 = a1 & 1;
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = sub_1C1520E5C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v51[0] + 1) = a2;
  LOBYTE(v50) = v3;
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v14 = sub_1C1520E2C();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v6, v14) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v31 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v47);
  swift_release();
  if (!v49)
  {
    uint64_t v29 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v30 = &v47;
LABEL_10:
    sub_1C003E100((uint64_t)v30, v29);
    goto LABEL_11;
  }
  unsigned long long v16 = v47;
  long long v50 = v47;
  sub_1BFF993A8(&v48, v51);
  long long v47 = v16;
  sub_1BFF6A008((uint64_t)v51, (uint64_t)&v48);
  if (!*((void *)&v16 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
    uint64_t v29 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v30 = &v50;
    goto LABEL_10;
  }
  uint64_t v40 = v51;
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1BFE7E4D4(v16, *((unint64_t *)&v16 + 1));
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    uint64_t v43 = v17;
    uint64_t v44 = v19;
    sub_1BFF27ECC();
    uint64_t v39 = sub_1C151FE5C();
    uint64_t v38 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1C029748C(1uLL, v16, *((unint64_t *)&v16 + 1));
    uint64_t v23 = v22;
    uint64_t v37 = v24;
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v37 = MEMORY[0x1C18C6220](v21, v23, v37, v26);
    swift_bridgeObjectRelease();
    uint64_t v43 = v39;
    uint64_t v44 = v38;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = v43;
    uint64_t v28 = v44;
  }
  else
  {
    uint64_t v28 = v16 >> 64;
    uint64_t v27 = v16;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  long long v47 = v16;
  sub_1BFF6A008((uint64_t)v40, (uint64_t)&v48);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v41, (uint64_t)&v43);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
    *(void *)(v33 + 32) = v27;
    *(void *)(v33 + 40) = v28;
    uint64_t v34 = v45;
    uint64_t v35 = v46;
    __swift_project_boxed_opaque_existential_1(&v43, v45);
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
    *(void *)&long long v47 = v33;
    sub_1BFEF95B8(v36);
    uint64_t v31 = v47;
    sub_1C003E100((uint64_t)&v50, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }
  else
  {
    uint64_t v42 = 0;
    memset(v41, 0, sizeof(v41));
    sub_1C0223948((uint64_t)v41);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
    *(void *)(v31 + 32) = v27;
    *(void *)(v31 + 40) = v28;
    sub_1C003E100((uint64_t)&v50, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v9, (uint64_t (*)(void))sub_1C0223848);
  return v31;
}

uint64_t sub_1C0217138(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatIssueBinding.Color);
}

uint64_t sub_1C0217144(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatIssueBinding.Text);
}

uint64_t sub_1C0217150(uint64_t a1, __int16 a2, double a3)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_1C1520E5C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v53[0] + 1) = &type metadata for FormatIssueBinding.Font;
  *(double *)&long long v52 = a3;
  *((void *)&v52 + 1) = a1;
  LOWORD(v53[0]) = a2;
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v16 = sub_1C1520E2C();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v8, v16) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v33 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v49);
  swift_release();
  if (!v51)
  {
    uint64_t v31 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v32 = &v49;
LABEL_10:
    sub_1C003E100((uint64_t)v32, v31);
    goto LABEL_11;
  }
  unsigned long long v18 = v49;
  long long v52 = v49;
  sub_1BFF993A8(&v50, v53);
  long long v49 = v18;
  sub_1BFF6A008((uint64_t)v53, (uint64_t)&v50);
  if (!*((void *)&v18 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
    uint64_t v31 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v32 = &v52;
    goto LABEL_10;
  }
  uint64_t v42 = v53;
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1BFE7E4D4(v18, *((unint64_t *)&v18 + 1));
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    uint64_t v45 = v19;
    uint64_t v46 = v21;
    sub_1BFF27ECC();
    uint64_t v41 = sub_1C151FE5C();
    uint64_t v40 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1C029748C(1uLL, v18, *((unint64_t *)&v18 + 1));
    uint64_t v25 = v24;
    uint64_t v39 = v26;
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v39 = MEMORY[0x1C18C6220](v23, v25, v39, v28);
    swift_bridgeObjectRelease();
    uint64_t v45 = v41;
    uint64_t v46 = v40;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v45;
    uint64_t v30 = v46;
  }
  else
  {
    uint64_t v30 = v18 >> 64;
    uint64_t v29 = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  long long v49 = v18;
  sub_1BFF6A008((uint64_t)v42, (uint64_t)&v50);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v43, (uint64_t)&v45);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C1529AE0;
    *(void *)(v35 + 32) = v29;
    *(void *)(v35 + 40) = v30;
    uint64_t v36 = v47;
    uint64_t v37 = v48;
    __swift_project_boxed_opaque_existential_1(&v45, v47);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
    *(void *)&long long v49 = v35;
    sub_1BFEF95B8(v38);
    uint64_t v33 = v49;
    sub_1C003E100((uint64_t)&v52, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  }
  else
  {
    uint64_t v44 = 0;
    memset(v43, 0, sizeof(v43));
    sub_1C0223948((uint64_t)v43);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
    *(void *)(v33 + 32) = v29;
    *(void *)(v33 + 40) = v30;
    sub_1C003E100((uint64_t)&v52, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v11, (uint64_t (*)(void))sub_1C0223848);
  return v33;
}

uint64_t sub_1C0217760(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatIssueBinding.Bool);
}

uint64_t sub_1C021776C()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatIssueBinding.ActivityItemsConfiguration);
}

uint64_t sub_1C0217778()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatIssueBinding.LayeredMedia);
}

uint64_t sub_1C0217784()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatIssueBinding.IssueCover);
}

uint64_t sub_1C0217790(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatGroupBinding.DateTime);
}

uint64_t sub_1C021779C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = sub_1C1520E5C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v56[0] + 1) = &type metadata for FormatGroupBinding.Command;
  uint64_t v18 = swift_allocObject();
  *(void *)&long long v55 = v18;
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(unsigned char *)(v18 + 40) = a4;
  sub_1C0224154(a1, a2, a3, a4, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C);
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v19 = sub_1C1520E2C();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v10, v19) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v36 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v52);
  swift_release();
  if (!v54)
  {
    uint64_t v34 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v35 = &v52;
LABEL_10:
    sub_1C003E100((uint64_t)v35, v34);
    goto LABEL_11;
  }
  unsigned long long v21 = v52;
  long long v55 = v52;
  sub_1BFF993A8(&v53, v56);
  long long v52 = v21;
  sub_1BFF6A008((uint64_t)v56, (uint64_t)&v53);
  if (!*((void *)&v21 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    uint64_t v34 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v35 = &v55;
    goto LABEL_10;
  }
  uint64_t v45 = v56;
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_1BFE7E4D4(v21, *((unint64_t *)&v21 + 1));
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    uint64_t v48 = v22;
    uint64_t v49 = v24;
    sub_1BFF27ECC();
    uint64_t v44 = sub_1C151FE5C();
    uint64_t v43 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_1C029748C(1uLL, v21, *((unint64_t *)&v21 + 1));
    uint64_t v28 = v27;
    uint64_t v42 = v29;
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v42 = MEMORY[0x1C18C6220](v26, v28, v42, v31);
    swift_bridgeObjectRelease();
    uint64_t v48 = v44;
    uint64_t v49 = v43;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = v48;
    uint64_t v33 = v49;
  }
  else
  {
    uint64_t v33 = v21 >> 64;
    uint64_t v32 = v21;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  long long v52 = v21;
  sub_1BFF6A008((uint64_t)v45, (uint64_t)&v53);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v46, (uint64_t)&v48);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C1529AE0;
    *(void *)(v38 + 32) = v32;
    *(void *)(v38 + 40) = v33;
    uint64_t v39 = v50;
    uint64_t v40 = v51;
    __swift_project_boxed_opaque_existential_1(&v48, v50);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    *(void *)&long long v52 = v38;
    sub_1BFEF95B8(v41);
    uint64_t v36 = v52;
    sub_1C003E100((uint64_t)&v55, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  }
  else
  {
    uint64_t v47 = 0;
    memset(v46, 0, sizeof(v46));
    sub_1C0223948((uint64_t)v46);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C1529AE0;
    *(void *)(v36 + 32) = v32;
    *(void *)(v36 + 40) = v33;
    sub_1C003E100((uint64_t)&v55, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v13, (uint64_t (*)(void))sub_1C0223848);
  return v36;
}

uint64_t sub_1C0217DE8()
{
  return sub_1C0217E24((uint64_t)&type metadata for FormatGroupBinding.Image, (uint64_t)&unk_1F1B940B8, (void (*)(uint64_t, void))sub_1C0223ACC, (void (*)(uint64_t))sub_1C0223B28);
}

uint64_t sub_1C0217E24(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void), void (*a4)(uint64_t))
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = sub_1C1520E5C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v55[0] + 1) = a1;
  *(void *)&long long v54 = swift_allocObject();
  a3(v4, v54 + 16);
  a4(v4);
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v18 = sub_1C1520E2C();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v10, v18) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v18);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v35 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v51);
  swift_release();
  if (!v53)
  {
    uint64_t v33 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v34 = &v51;
LABEL_10:
    sub_1C003E100((uint64_t)v34, v33);
    goto LABEL_11;
  }
  unsigned long long v20 = v51;
  long long v54 = v51;
  sub_1BFF993A8(&v52, v55);
  long long v51 = v20;
  sub_1BFF6A008((uint64_t)v55, (uint64_t)&v52);
  if (!*((void *)&v20 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
    uint64_t v33 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v34 = &v54;
    goto LABEL_10;
  }
  uint64_t v44 = v55;
  swift_bridgeObjectRetain_n();
  uint64_t v21 = sub_1BFE7E4D4(v20, *((unint64_t *)&v20 + 1));
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (v23)
  {
    uint64_t v47 = v21;
    uint64_t v48 = v23;
    sub_1BFF27ECC();
    uint64_t v43 = sub_1C151FE5C();
    uint64_t v42 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v25 = sub_1C029748C(1uLL, v20, *((unint64_t *)&v20 + 1));
    uint64_t v27 = v26;
    uint64_t v41 = v28;
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v41 = MEMORY[0x1C18C6220](v25, v27, v41, v30);
    swift_bridgeObjectRelease();
    uint64_t v47 = v43;
    uint64_t v48 = v42;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v47;
    uint64_t v32 = v48;
  }
  else
  {
    uint64_t v32 = v20 >> 64;
    uint64_t v31 = v20;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  long long v51 = v20;
  sub_1BFF6A008((uint64_t)v44, (uint64_t)&v52);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v45, (uint64_t)&v47);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1C1529AE0;
    *(void *)(v37 + 32) = v31;
    *(void *)(v37 + 40) = v32;
    uint64_t v38 = v49;
    uint64_t v39 = v50;
    __swift_project_boxed_opaque_existential_1(&v47, v49);
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
    *(void *)&long long v51 = v37;
    sub_1BFEF95B8(v40);
    uint64_t v35 = v51;
    sub_1C003E100((uint64_t)&v54, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
  }
  else
  {
    uint64_t v46 = 0;
    memset(v45, 0, sizeof(v45));
    sub_1C0223948((uint64_t)v45);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C1529AE0;
    *(void *)(v35 + 32) = v31;
    *(void *)(v35 + 40) = v32;
    sub_1C003E100((uint64_t)&v54, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v13, (uint64_t (*)(void))sub_1C0223848);
  return v35;
}

uint64_t sub_1C0218448(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatGroupBinding.Float);
}

uint64_t sub_1C0218454(uint64_t a1, unsigned int a2)
{
  return sub_1C021908C(a1, a2, (uint64_t)&type metadata for FormatGroupBinding.Color);
}

uint64_t sub_1C0218460()
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v1 - 8);
  char v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v34 - v5;
  uint64_t v7 = sub_1C1520E5C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v48[0] + 1) = &type metadata for FormatGroupBinding.Text;
  *(void *)&long long v47 = swift_allocObject();
  sub_1C022425C(v0, v47 + 16);
  sub_1C02242B8(v0);
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v11 = sub_1C1520E2C();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v3, v11) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v11);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v28 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v44);
  swift_release();
  if (!v46)
  {
    uint64_t v26 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v27 = &v44;
LABEL_10:
    sub_1C003E100((uint64_t)v27, v26);
    goto LABEL_11;
  }
  unsigned long long v13 = v44;
  long long v47 = v44;
  sub_1BFF993A8(&v45, v48);
  long long v44 = v13;
  sub_1BFF6A008((uint64_t)v48, (uint64_t)&v45);
  if (!*((void *)&v13 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
    uint64_t v26 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v27 = &v47;
    goto LABEL_10;
  }
  uint64_t v37 = v48;
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_1BFE7E4D4(v13, *((unint64_t *)&v13 + 1));
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    uint64_t v40 = v14;
    uint64_t v41 = v16;
    sub_1BFF27ECC();
    uint64_t v36 = sub_1C151FE5C();
    uint64_t v35 = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1C029748C(1uLL, v13, *((unint64_t *)&v13 + 1));
    uint64_t v20 = v19;
    uint64_t v34 = v21;
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x1C18C6220](v18, v20, v34, v23);
    swift_bridgeObjectRelease();
    uint64_t v40 = v36;
    uint64_t v41 = v35;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v40;
    uint64_t v25 = v41;
  }
  else
  {
    uint64_t v25 = v13 >> 64;
    uint64_t v24 = v13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  long long v44 = v13;
  sub_1BFF6A008((uint64_t)v37, (uint64_t)&v45);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v38, (uint64_t)&v40);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1C1529AE0;
    *(void *)(v30 + 32) = v24;
    *(void *)(v30 + 40) = v25;
    uint64_t v31 = v42;
    uint64_t v32 = v43;
    __swift_project_boxed_opaque_existential_1(&v40, v42);
    uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
    *(void *)&long long v44 = v30;
    sub_1BFEF95B8(v33);
    uint64_t v28 = v44;
    sub_1C003E100((uint64_t)&v47, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  }
  else
  {
    uint64_t v39 = 0;
    memset(v38, 0, sizeof(v38));
    sub_1C0223948((uint64_t)v38);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1C1529AE0;
    *(void *)(v28 + 32) = v24;
    *(void *)(v28 + 40) = v25;
    sub_1C003E100((uint64_t)&v47, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v6, (uint64_t (*)(void))sub_1C0223848);
  return v28;
}

uint64_t sub_1C0218A78(uint64_t a1, uint64_t a2, int a3)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = sub_1C1520E5C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v53[0] + 1) = &type metadata for FormatGroupBinding.Font;
  *(void *)&long long v52 = a1;
  *((void *)&v52 + 1) = a2;
  BYTE2(v53[0]) = BYTE2(a3);
  LOWORD(v53[0]) = a3;
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v16 = sub_1C1520E2C();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v17 + 88))(v8, v16) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v33 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v49);
  swift_release();
  if (!v51)
  {
    uint64_t v31 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v32 = &v49;
LABEL_10:
    sub_1C003E100((uint64_t)v32, v31);
    goto LABEL_11;
  }
  unsigned long long v18 = v49;
  long long v52 = v49;
  sub_1BFF993A8(&v50, v53);
  long long v49 = v18;
  sub_1BFF6A008((uint64_t)v53, (uint64_t)&v50);
  if (!*((void *)&v18 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
    uint64_t v31 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v32 = &v52;
    goto LABEL_10;
  }
  uint64_t v42 = v53;
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1BFE7E4D4(v18, *((unint64_t *)&v18 + 1));
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    uint64_t v45 = v19;
    uint64_t v46 = v21;
    sub_1BFF27ECC();
    uint64_t v41 = sub_1C151FE5C();
    uint64_t v40 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1C029748C(1uLL, v18, *((unint64_t *)&v18 + 1));
    uint64_t v25 = v24;
    uint64_t v39 = v26;
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v39 = MEMORY[0x1C18C6220](v23, v25, v39, v28);
    swift_bridgeObjectRelease();
    uint64_t v45 = v41;
    uint64_t v46 = v40;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v45;
    uint64_t v30 = v46;
  }
  else
  {
    uint64_t v30 = v18 >> 64;
    uint64_t v29 = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  long long v49 = v18;
  sub_1BFF6A008((uint64_t)v42, (uint64_t)&v50);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v43, (uint64_t)&v45);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1C1529AE0;
    *(void *)(v35 + 32) = v29;
    *(void *)(v35 + 40) = v30;
    uint64_t v36 = v47;
    uint64_t v37 = v48;
    __swift_project_boxed_opaque_existential_1(&v45, v47);
    uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
    *(void *)&long long v49 = v35;
    sub_1BFEF95B8(v38);
    uint64_t v33 = v49;
    sub_1C003E100((uint64_t)&v52, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  }
  else
  {
    uint64_t v44 = 0;
    memset(v43, 0, sizeof(v43));
    sub_1C0223948((uint64_t)v43);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
    *(void *)(v33 + 32) = v29;
    *(void *)(v33 + 40) = v30;
    sub_1C003E100((uint64_t)&v52, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v11, (uint64_t (*)(void))sub_1C0223848);
  return v33;
}

uint64_t sub_1C0219080(uint64_t a1, unsigned int a2)
{
  return sub_1C021908C(a1, a2, (uint64_t)&type metadata for FormatGroupBinding.Bool);
}

uint64_t sub_1C021908C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  char v4 = a2;
  unsigned int v6 = a2 >> 8;
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = sub_1C1520E5C();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v54[0] + 1) = a3;
  *(void *)&long long v53 = a1;
  BYTE8(v53) = v4;
  BYTE9(v53) = v6;
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v17 = sub_1C1520E2C();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v18 + 88))(v9, v17) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v34 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v50);
  swift_release();
  if (!v52)
  {
    uint64_t v32 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v33 = &v50;
LABEL_10:
    sub_1C003E100((uint64_t)v33, v32);
    goto LABEL_11;
  }
  unsigned long long v19 = v50;
  long long v53 = v50;
  sub_1BFF993A8(&v51, v54);
  long long v50 = v19;
  sub_1BFF6A008((uint64_t)v54, (uint64_t)&v51);
  if (!*((void *)&v19 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
    uint64_t v32 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v33 = &v53;
    goto LABEL_10;
  }
  uint64_t v43 = v54;
  swift_bridgeObjectRetain_n();
  uint64_t v20 = sub_1BFE7E4D4(v19, *((unint64_t *)&v19 + 1));
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  if (v22)
  {
    uint64_t v46 = v20;
    uint64_t v47 = v22;
    sub_1BFF27ECC();
    uint64_t v42 = sub_1C151FE5C();
    uint64_t v41 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v24 = sub_1C029748C(1uLL, v19, *((unint64_t *)&v19 + 1));
    uint64_t v26 = v25;
    uint64_t v40 = v27;
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t v40 = MEMORY[0x1C18C6220](v24, v26, v40, v29);
    swift_bridgeObjectRelease();
    uint64_t v46 = v42;
    uint64_t v47 = v41;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = v46;
    uint64_t v31 = v47;
  }
  else
  {
    uint64_t v31 = v19 >> 64;
    uint64_t v30 = v19;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  long long v50 = v19;
  sub_1BFF6A008((uint64_t)v43, (uint64_t)&v51);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v44, (uint64_t)&v46);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C1529AE0;
    *(void *)(v36 + 32) = v30;
    *(void *)(v36 + 40) = v31;
    uint64_t v37 = v48;
    uint64_t v38 = v49;
    __swift_project_boxed_opaque_existential_1(&v46, v48);
    uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
    *(void *)&long long v50 = v36;
    sub_1BFEF95B8(v39);
    uint64_t v34 = v50;
    sub_1C003E100((uint64_t)&v53, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  }
  else
  {
    uint64_t v45 = 0;
    memset(v44, 0, sizeof(v44));
    sub_1C0223948((uint64_t)v44);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1C1529AE0;
    *(void *)(v34 + 32) = v30;
    *(void *)(v34 + 40) = v31;
    sub_1C003E100((uint64_t)&v53, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v12, (uint64_t (*)(void))sub_1C0223848);
  return v34;
}

uint64_t sub_1C021968C(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatGroupBinding.URL);
}

uint64_t sub_1C0219698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C021A98C(a1, a2, a3, (uint64_t)&type metadata for FormatGroupBinding.Temperature, (void (*)(uint64_t, uint64_t, uint64_t, __n128))sub_1C0223F6C);
}

uint64_t sub_1C02196B8()
{
  return sub_1C02196C4((uint64_t)&type metadata for FormatGroupBinding.IssueCover);
}

uint64_t sub_1C02196C4(uint64_t a1)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v2 - 8);
  char v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_1C1520E5C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v49[0] + 1) = a1;
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v12 = sub_1C1520E2C();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v4, v12) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v29 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v45);
  swift_release();
  if (!v47)
  {
    uint64_t v27 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v28 = &v45;
LABEL_10:
    sub_1C003E100((uint64_t)v28, v27);
    goto LABEL_11;
  }
  unsigned long long v14 = v45;
  long long v48 = v45;
  sub_1BFF993A8(&v46, v49);
  long long v45 = v14;
  sub_1BFF6A008((uint64_t)v49, (uint64_t)&v46);
  if (!*((void *)&v14 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    uint64_t v27 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v28 = &v48;
    goto LABEL_10;
  }
  uint64_t v38 = v49;
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1BFE7E4D4(v14, *((unint64_t *)&v14 + 1));
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v41 = v15;
    uint64_t v42 = v17;
    sub_1BFF27ECC();
    uint64_t v37 = sub_1C151FE5C();
    uint64_t v36 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1C029748C(1uLL, v14, *((unint64_t *)&v14 + 1));
    uint64_t v21 = v20;
    uint64_t v35 = v22;
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x1C18C6220](v19, v21, v35, v24);
    swift_bridgeObjectRelease();
    uint64_t v41 = v37;
    uint64_t v42 = v36;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v41;
    uint64_t v26 = v42;
  }
  else
  {
    uint64_t v26 = v14 >> 64;
    uint64_t v25 = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  long long v45 = v14;
  sub_1BFF6A008((uint64_t)v38, (uint64_t)&v46);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v39, (uint64_t)&v41);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
    *(void *)(v31 + 32) = v25;
    *(void *)(v31 + 40) = v26;
    uint64_t v32 = v43;
    uint64_t v33 = v44;
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
    *(void *)&long long v45 = v31;
    sub_1BFEF95B8(v34);
    uint64_t v29 = v45;
    sub_1C003E100((uint64_t)&v48, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
  }
  else
  {
    uint64_t v40 = 0;
    memset(v39, 0, sizeof(v39));
    sub_1C0223948((uint64_t)v39);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
    *(void *)(v29 + 32) = v25;
    *(void *)(v29 + 40) = v26;
    sub_1C003E100((uint64_t)&v48, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v7, (uint64_t (*)(void))sub_1C0223848);
  return v29;
}

uint64_t sub_1C0219CAC(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatFloatBinding);
}

uint64_t sub_1C0219CB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C0219CCC(a1, a2, a3, a4, (uint64_t)&type metadata for FormatColorBinding);
}

uint64_t sub_1C0219CCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = sub_1C1520E5C();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  *((void *)&v60[0] + 1) = a5;
  unint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_allocObject();
  *(void *)&long long v59 = v20;
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  *(void *)(v20 + 32) = a3;
  *(unsigned char *)(v20 + 40) = a4;
  sub_1BFF67F78(a1, a2, a3, a4);
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v21 = sub_1C1520E2C();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v21) == 1) {
    goto LABEL_8;
  }
  uint64_t v48 = v17;
  uint64_t v49 = v16;
  sub_1C003E258((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v22 + 88))(v12, v21) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
    uint64_t v16 = v49;
    uint64_t v17 = v48;
LABEL_8:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
LABEL_9:
    uint64_t v38 = MEMORY[0x1E4FBC860];
    goto LABEL_10;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v56);
  swift_release();
  if (!v58)
  {
    uint64_t v40 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v41 = &v56;
LABEL_13:
    sub_1C003E100((uint64_t)v41, v40);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v49);
    goto LABEL_9;
  }
  unsigned long long v23 = v56;
  long long v59 = v56;
  sub_1BFF993A8(&v57, v60);
  long long v56 = v23;
  sub_1BFF6A008((uint64_t)v60, (uint64_t)&v57);
  if (!*((void *)&v23 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
    uint64_t v40 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v41 = &v59;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v24 = sub_1BFE7E4D4(v23, *((unint64_t *)&v23 + 1));
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  if (v26)
  {
    uint64_t v52 = v24;
    uint64_t v53 = v26;
    sub_1BFF27ECC();
    uint64_t v46 = sub_1C151FE5C();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_1C029748C(1uLL, v23, *((unint64_t *)&v23 + 1));
    uint64_t v31 = v30;
    uint64_t v47 = v15;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C6220](v29, v31, v33, v35);
    swift_bridgeObjectRelease();
    uint64_t v52 = v46;
    uint64_t v53 = v28;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v47;
    swift_bridgeObjectRelease();
    uint64_t v36 = v52;
    uint64_t v37 = v53;
  }
  else
  {
    uint64_t v37 = v23 >> 64;
    uint64_t v36 = v23;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
  long long v56 = v23;
  sub_1BFF6A008((uint64_t)v60, (uint64_t)&v57);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v50, (uint64_t)&v52);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1C1529AE0;
    *(void *)(v42 + 32) = v36;
    *(void *)(v42 + 40) = v37;
    uint64_t v43 = v54;
    uint64_t v44 = v55;
    __swift_project_boxed_opaque_existential_1(&v52, v54);
    uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 8))(v43, v44);
    *(void *)&long long v56 = v42;
    sub_1BFEF95B8(v45);
    uint64_t v38 = v56;
    sub_1C003E100((uint64_t)&v59, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v49);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  }
  else
  {
    uint64_t v51 = 0;
    memset(v50, 0, sizeof(v50));
    sub_1C0223948((uint64_t)v50);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C1529AE0;
    *(void *)(v38 + 32) = v36;
    *(void *)(v38 + 40) = v37;
    sub_1C003E100((uint64_t)&v59, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v49);
  }
LABEL_10:
  sub_1C003E100((uint64_t)v15, (uint64_t (*)(void))sub_1C0223848);
  return v38;
}

uint64_t sub_1C021A344(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatUserBinding.Command);
}

uint64_t sub_1C021A350(uint64_t a1, __int16 a2)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = sub_1C1520E5C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v51[0] + 1) = &type metadata for FormatBoolBinding;
  *(void *)&long long v50 = a1;
  WORD4(v50) = a2;
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v14 = sub_1C1520E2C();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v6, v14) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v31 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v47);
  swift_release();
  if (!v49)
  {
    unint64_t v29 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v30 = &v47;
LABEL_10:
    sub_1C003E100((uint64_t)v30, v29);
    goto LABEL_11;
  }
  unsigned long long v16 = v47;
  long long v50 = v47;
  sub_1BFF993A8(&v48, v51);
  long long v47 = v16;
  sub_1BFF6A008((uint64_t)v51, (uint64_t)&v48);
  if (!*((void *)&v16 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
    unint64_t v29 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v30 = &v50;
    goto LABEL_10;
  }
  uint64_t v40 = v51;
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1BFE7E4D4(v16, *((unint64_t *)&v16 + 1));
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    uint64_t v43 = v17;
    uint64_t v44 = v19;
    sub_1BFF27ECC();
    uint64_t v39 = sub_1C151FE5C();
    uint64_t v38 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1C029748C(1uLL, v16, *((unint64_t *)&v16 + 1));
    uint64_t v23 = v22;
    uint64_t v37 = v24;
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v37 = MEMORY[0x1C18C6220](v21, v23, v37, v26);
    swift_bridgeObjectRelease();
    uint64_t v43 = v39;
    uint64_t v44 = v38;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = v43;
    uint64_t v28 = v44;
  }
  else
  {
    uint64_t v28 = v16 >> 64;
    uint64_t v27 = v16;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  long long v47 = v16;
  sub_1BFF6A008((uint64_t)v40, (uint64_t)&v48);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v41, (uint64_t)&v43);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
    *(void *)(v33 + 32) = v27;
    *(void *)(v33 + 40) = v28;
    uint64_t v34 = v45;
    uint64_t v35 = v46;
    __swift_project_boxed_opaque_existential_1(&v43, v45);
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
    *(void *)&long long v47 = v33;
    sub_1BFEF95B8(v36);
    uint64_t v31 = v47;
    sub_1C003E100((uint64_t)&v50, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }
  else
  {
    uint64_t v42 = 0;
    memset(v41, 0, sizeof(v41));
    sub_1C0223948((uint64_t)v41);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
    *(void *)(v31 + 32) = v27;
    *(void *)(v31 + 40) = v28;
    sub_1C003E100((uint64_t)&v50, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v9, (uint64_t (*)(void))sub_1C0223848);
  return v31;
}

uint64_t sub_1C021A94C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C0219CCC(a1, a2, a3, a4, (uint64_t)&type metadata for FormatBindingFont);
}

uint64_t sub_1C021A960(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatTagBinding.DateTime);
}

uint64_t sub_1C021A96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C021A98C(a1, a2, a3, (uint64_t)&type metadata for FormatTagBinding.Command, (void (*)(uint64_t, uint64_t, uint64_t, __n128))sub_1C00AB56C);
}

uint64_t sub_1C021A98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, __n128))
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = sub_1C1520E5C();
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v58[0] + 1) = a4;
  *(void *)&long long v57 = a1;
  *((void *)&v57 + 1) = a2;
  LOBYTE(v58[0]) = a3;
  a5(a1, a2, a3, v18);
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v21 = sub_1C1520E2C();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v15, 1, v21) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v22 + 88))(v12, v21) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    uint64_t v38 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v54);
  swift_release();
  if (!v56)
  {
    uint64_t v36 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v37 = &v54;
LABEL_10:
    sub_1C003E100((uint64_t)v37, v36);
    goto LABEL_11;
  }
  unsigned long long v23 = v54;
  long long v57 = v54;
  sub_1BFF993A8(&v55, v58);
  long long v54 = v23;
  sub_1BFF6A008((uint64_t)v58, (uint64_t)&v55);
  if (!*((void *)&v23 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
    uint64_t v36 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v37 = &v57;
    goto LABEL_10;
  }
  long long v47 = v58;
  swift_bridgeObjectRetain_n();
  uint64_t v24 = sub_1BFE7E4D4(v23, *((unint64_t *)&v23 + 1));
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  if (v26)
  {
    uint64_t v50 = v24;
    uint64_t v51 = v26;
    sub_1BFF27ECC();
    uint64_t v46 = sub_1C151FE5C();
    uint64_t v45 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_1C029748C(1uLL, v23, *((unint64_t *)&v23 + 1));
    uint64_t v30 = v29;
    uint64_t v44 = v31;
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v44 = MEMORY[0x1C18C6220](v28, v30, v44, v33);
    swift_bridgeObjectRelease();
    uint64_t v50 = v46;
    uint64_t v51 = v45;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v34 = v50;
    uint64_t v35 = v51;
  }
  else
  {
    uint64_t v35 = v23 >> 64;
    uint64_t v34 = v23;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55);
  long long v54 = v23;
  sub_1BFF6A008((uint64_t)v47, (uint64_t)&v55);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v48, (uint64_t)&v50);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1C1529AE0;
    *(void *)(v40 + 32) = v34;
    *(void *)(v40 + 40) = v35;
    uint64_t v41 = v52;
    uint64_t v42 = v53;
    __swift_project_boxed_opaque_existential_1(&v50, v52);
    uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
    *(void *)&long long v54 = v40;
    sub_1BFEF95B8(v43);
    uint64_t v38 = v54;
    sub_1C003E100((uint64_t)&v57, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
  }
  else
  {
    uint64_t v49 = 0;
    memset(v48, 0, sizeof(v48));
    sub_1C0223948((uint64_t)v48);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C1529AE0;
    *(void *)(v38 + 32) = v34;
    *(void *)(v38 + 40) = v35;
    sub_1C003E100((uint64_t)&v57, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v15, (uint64_t (*)(void))sub_1C0223848);
  return v38;
}

uint64_t sub_1C021AFA0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = sub_1C1520E5C();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v56[0] + 1) = &type metadata for FormatTagBinding.Image;
  __n128 v18 = (void *)swift_allocObject();
  *(void *)&long long v55 = v18;
  void v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  v18[5] = a4;
  sub_1C0223C2C(a1, a2);
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v19 = sub_1C1520E2C();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v10, v19) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    uint64_t v36 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v52);
  swift_release();
  if (!v54)
  {
    uint64_t v34 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v35 = &v52;
LABEL_10:
    sub_1C003E100((uint64_t)v35, v34);
    goto LABEL_11;
  }
  unsigned long long v21 = v52;
  long long v55 = v52;
  sub_1BFF993A8(&v53, v56);
  long long v52 = v21;
  sub_1BFF6A008((uint64_t)v56, (uint64_t)&v53);
  if (!*((void *)&v21 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    uint64_t v34 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v35 = &v55;
    goto LABEL_10;
  }
  uint64_t v45 = v56;
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_1BFE7E4D4(v21, *((unint64_t *)&v21 + 1));
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    uint64_t v48 = v22;
    uint64_t v49 = v24;
    sub_1BFF27ECC();
    uint64_t v44 = sub_1C151FE5C();
    uint64_t v43 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_1C029748C(1uLL, v21, *((unint64_t *)&v21 + 1));
    uint64_t v28 = v27;
    uint64_t v42 = v29;
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v42 = MEMORY[0x1C18C6220](v26, v28, v42, v31);
    swift_bridgeObjectRelease();
    uint64_t v48 = v44;
    uint64_t v49 = v43;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = v48;
    uint64_t v33 = v49;
  }
  else
  {
    uint64_t v33 = v21 >> 64;
    uint64_t v32 = v21;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  long long v52 = v21;
  sub_1BFF6A008((uint64_t)v45, (uint64_t)&v53);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v46, (uint64_t)&v48);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C1529AE0;
    *(void *)(v38 + 32) = v32;
    *(void *)(v38 + 40) = v33;
    uint64_t v39 = v50;
    uint64_t v40 = v51;
    __swift_project_boxed_opaque_existential_1(&v48, v50);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    *(void *)&long long v52 = v38;
    sub_1BFEF95B8(v41);
    uint64_t v36 = v52;
    sub_1C003E100((uint64_t)&v55, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  }
  else
  {
    uint64_t v47 = 0;
    memset(v46, 0, sizeof(v46));
    sub_1C0223948((uint64_t)v46);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C1529AE0;
    *(void *)(v36 + 32) = v32;
    *(void *)(v36 + 40) = v33;
    sub_1C003E100((uint64_t)&v55, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v13, (uint64_t (*)(void))sub_1C0223848);
  return v36;
}

uint64_t sub_1C021B5D0(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatTagBinding.Color);
}

uint64_t sub_1C021B5DC(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatTagBinding.Text);
}

uint64_t sub_1C021B5E8(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return sub_1C021B5F4(a1, a2, a3, (uint64_t)&type metadata for FormatTagBinding.Font);
}

uint64_t sub_1C021B5F4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  __int16 v5 = a3;
  unsigned int v8 = HIWORD(a3);
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = sub_1C1520E5C();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  __n128 v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v56[0] + 1) = a4;
  *(void *)&long long v55 = a1;
  *((void *)&v55 + 1) = a2;
  LOWORD(v56[0]) = v5;
  BYTE2(v56[0]) = v8;
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v19 = sub_1C1520E2C();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v14, 1, v19) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v20 + 88))(v11, v19) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    uint64_t v36 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v52);
  swift_release();
  if (!v54)
  {
    uint64_t v34 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v35 = &v52;
LABEL_10:
    sub_1C003E100((uint64_t)v35, v34);
    goto LABEL_11;
  }
  unsigned long long v21 = v52;
  long long v55 = v52;
  sub_1BFF993A8(&v53, v56);
  long long v52 = v21;
  sub_1BFF6A008((uint64_t)v56, (uint64_t)&v53);
  if (!*((void *)&v21 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
    uint64_t v34 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v35 = &v55;
    goto LABEL_10;
  }
  uint64_t v45 = v56;
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_1BFE7E4D4(v21, *((unint64_t *)&v21 + 1));
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (v24)
  {
    uint64_t v48 = v22;
    uint64_t v49 = v24;
    sub_1BFF27ECC();
    uint64_t v44 = sub_1C151FE5C();
    uint64_t v43 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v26 = sub_1C029748C(1uLL, v21, *((unint64_t *)&v21 + 1));
    uint64_t v28 = v27;
    uint64_t v42 = v29;
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v42 = MEMORY[0x1C18C6220](v26, v28, v42, v31);
    swift_bridgeObjectRelease();
    uint64_t v48 = v44;
    uint64_t v49 = v43;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = v48;
    uint64_t v33 = v49;
  }
  else
  {
    uint64_t v33 = v21 >> 64;
    uint64_t v32 = v21;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
  long long v52 = v21;
  sub_1BFF6A008((uint64_t)v45, (uint64_t)&v53);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v46, (uint64_t)&v48);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C1529AE0;
    *(void *)(v38 + 32) = v32;
    *(void *)(v38 + 40) = v33;
    uint64_t v39 = v50;
    uint64_t v40 = v51;
    __swift_project_boxed_opaque_existential_1(&v48, v50);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
    *(void *)&long long v52 = v38;
    sub_1BFEF95B8(v41);
    uint64_t v36 = v52;
    sub_1C003E100((uint64_t)&v55, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  }
  else
  {
    uint64_t v47 = 0;
    memset(v46, 0, sizeof(v46));
    sub_1C0223948((uint64_t)v46);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C1529AE0;
    *(void *)(v36 + 32) = v32;
    *(void *)(v36 + 40) = v33;
    sub_1C003E100((uint64_t)&v55, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v14, (uint64_t (*)(void))sub_1C0223848);
  return v36;
}

uint64_t sub_1C021BBF8(char a1)
{
  return sub_1C021BC04(a1, (uint64_t)&type metadata for FormatTagBinding.Bool);
}

uint64_t sub_1C021BC04(char a1, uint64_t a2)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = sub_1C1520E5C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v51[0] + 1) = a2;
  LOBYTE(v50) = a1;
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v14 = sub_1C1520E2C();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v6, v14) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v31 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v47);
  swift_release();
  if (!v49)
  {
    uint64_t v29 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v30 = &v47;
LABEL_10:
    sub_1C003E100((uint64_t)v30, v29);
    goto LABEL_11;
  }
  unsigned long long v16 = v47;
  long long v50 = v47;
  sub_1BFF993A8(&v48, v51);
  long long v47 = v16;
  sub_1BFF6A008((uint64_t)v51, (uint64_t)&v48);
  if (!*((void *)&v16 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
    uint64_t v29 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v30 = &v50;
    goto LABEL_10;
  }
  uint64_t v40 = v51;
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_1BFE7E4D4(v16, *((unint64_t *)&v16 + 1));
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    uint64_t v43 = v17;
    uint64_t v44 = v19;
    sub_1BFF27ECC();
    uint64_t v39 = sub_1C151FE5C();
    uint64_t v38 = v20;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1C029748C(1uLL, v16, *((unint64_t *)&v16 + 1));
    uint64_t v23 = v22;
    uint64_t v37 = v24;
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v37 = MEMORY[0x1C18C6220](v21, v23, v37, v26);
    swift_bridgeObjectRelease();
    uint64_t v43 = v39;
    uint64_t v44 = v38;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = v43;
    uint64_t v28 = v44;
  }
  else
  {
    uint64_t v28 = v16 >> 64;
    uint64_t v27 = v16;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  long long v47 = v16;
  sub_1BFF6A008((uint64_t)v40, (uint64_t)&v48);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v41, (uint64_t)&v43);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1C1529AE0;
    *(void *)(v33 + 32) = v27;
    *(void *)(v33 + 40) = v28;
    uint64_t v34 = v45;
    uint64_t v35 = v46;
    __swift_project_boxed_opaque_existential_1(&v43, v45);
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v34, v35);
    *(void *)&long long v47 = v33;
    sub_1BFEF95B8(v36);
    uint64_t v31 = v47;
    sub_1C003E100((uint64_t)&v50, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v43);
  }
  else
  {
    uint64_t v42 = 0;
    memset(v41, 0, sizeof(v41));
    sub_1C0223948((uint64_t)v41);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
    *(void *)(v31 + 32) = v27;
    *(void *)(v31 + 40) = v28;
    sub_1C003E100((uint64_t)&v50, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v9, (uint64_t (*)(void))sub_1C0223848);
  return v31;
}

uint64_t sub_1C021C1F4(char a1)
{
  sub_1C0223848(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = sub_1C1520E5C();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v49[0] + 1) = &type metadata for FormatHeadlineBinding.DateTime;
  LOBYTE(v48) = a1;
  sub_1C1520E1C();
  sub_1C1520E3C();
  uint64_t v12 = sub_1C1520E2C();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) == 1) {
    goto LABEL_11;
  }
  sub_1C003E258((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))sub_1C0223848);
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v4, v12) != *MEMORY[0x1E4FBC400])
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v29 = MEMORY[0x1E4FBC860];
    goto LABEL_12;
  }
  sub_1C1520E4C();
  sub_1C02956BC(&v45);
  swift_release();
  if (!v47)
  {
    uint64_t v27 = (uint64_t (*)(void))sub_1C0223880;
    uint64_t v28 = &v45;
LABEL_10:
    sub_1C003E100((uint64_t)v28, v27);
    goto LABEL_11;
  }
  unsigned long long v14 = v45;
  long long v48 = v45;
  sub_1BFF993A8(&v46, v49);
  long long v45 = v14;
  sub_1BFF6A008((uint64_t)v49, (uint64_t)&v46);
  if (!*((void *)&v14 + 1))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    uint64_t v27 = (uint64_t (*)(void))sub_1C02238B4;
    uint64_t v28 = &v48;
    goto LABEL_10;
  }
  uint64_t v38 = v49;
  swift_bridgeObjectRetain_n();
  uint64_t v15 = sub_1BFE7E4D4(v14, *((unint64_t *)&v14 + 1));
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v41 = v15;
    uint64_t v42 = v17;
    sub_1BFF27ECC();
    uint64_t v37 = sub_1C151FE5C();
    uint64_t v36 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1C029748C(1uLL, v14, *((unint64_t *)&v14 + 1));
    uint64_t v21 = v20;
    uint64_t v35 = v22;
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v35 = MEMORY[0x1C18C6220](v19, v21, v35, v24);
    swift_bridgeObjectRelease();
    uint64_t v41 = v37;
    uint64_t v42 = v36;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v41;
    uint64_t v26 = v42;
  }
  else
  {
    uint64_t v26 = v14 >> 64;
    uint64_t v25 = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  long long v45 = v14;
  sub_1BFF6A008((uint64_t)v38, (uint64_t)&v46);
  swift_bridgeObjectRelease();
  sub_1BFC845BC(0, &qword_1EA1983C8);
  if (swift_dynamicCast())
  {
    sub_1BFC773DC(v39, (uint64_t)&v41);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
    *(void *)(v31 + 32) = v25;
    *(void *)(v31 + 40) = v26;
    uint64_t v32 = v43;
    uint64_t v33 = v44;
    __swift_project_boxed_opaque_existential_1(&v41, v43);
    uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
    *(void *)&long long v45 = v31;
    sub_1BFEF95B8(v34);
    uint64_t v29 = v45;
    sub_1C003E100((uint64_t)&v48, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
  }
  else
  {
    uint64_t v40 = 0;
    memset(v39, 0, sizeof(v39));
    sub_1C0223948((uint64_t)v39);
    sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
    *(void *)(v29 + 32) = v25;
    *(void *)(v29 + 40) = v26;
    sub_1C003E100((uint64_t)&v48, (uint64_t (*)(void))sub_1C02238B4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
LABEL_12:
  sub_1C003E100((uint64_t)v7, (uint64_t (*)(void))sub_1C0223848);
  return v29;
}

uint64_t static FormatFont.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = (int *)type metadata accessor for FormatRemoteFont();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v56 - v8);
  uint64_t v10 = *a1;
  unint64_t v11 = *a2;
  switch((unint64_t)*a1 >> 61)
  {
    case 1uLL:
      if (v11 >> 61 != 1) {
        goto LABEL_34;
      }
      double v26 = *(double *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v27 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
      __int16 v28 = *(_WORD *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      double v29 = *(double *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v30 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
      __int16 v31 = *(_WORD *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      BOOL v32 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10)
         && *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x18) == *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      if (!v32 && (sub_1C1520A9C() & 1) == 0) {
        goto LABEL_34;
      }
      if (v26 != v29) {
        goto LABEL_34;
      }
      swift_retain();
      swift_retain();
      char v33 = sub_1C149693C(v27, v28, v30, v31);
      swift_release();
      swift_release();
      if ((v33 & 1) == 0) {
        goto LABEL_34;
      }
      goto LABEL_29;
    case 2uLL:
      if (v11 >> 61 != 2) {
        goto LABEL_34;
      }
      uint64_t v34 = swift_projectBox();
      uint64_t v35 = swift_projectBox();
      sub_1C003E258(v34, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      sub_1C003E258(v35, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      BOOL v36 = *v9 == *v6 && v9[1] == v6[1];
      if (v36 || (sub_1C1520A9C() & 1) != 0)
      {
        uint64_t v37 = v4[5];
        uint64_t v38 = (uint64_t)v9 + v37;
        uint64_t v39 = (uint64_t)v6 + v37;
        swift_retain();
        swift_retain();
        if ((_s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0(v38, v39) & 1) != 0
          && *(double *)((char *)v9 + v4[6]) == *(double *)((char *)v6 + v4[6])
          && (sub_1C149693C(*(void *)((char *)v9 + v4[7]), *(_WORD *)((char *)v9 + v4[7] + 8), *(void *)((char *)v6 + v4[7]), *(_WORD *)((char *)v6 + v4[7] + 8)) & 1) != 0)
        {
          sub_1C003E100((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
          sub_1C003E100((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
          swift_release();
          swift_release();
          char v25 = 1;
          return v25 & 1;
        }
      }
      else
      {
        swift_retain();
        swift_retain();
      }
      sub_1C003E100((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      sub_1C003E100((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      swift_release();
      goto LABEL_33;
    case 3uLL:
      if (v11 >> 61 != 3) {
        goto LABEL_34;
      }
      uint64_t v40 = v10 & 0x1FFFFFFFFFFFFFFFLL;
      char v41 = *(unsigned char *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v42 = *(void *)(v40 + 32);
      uint64_t v43 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      char v44 = *(unsigned char *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
      long long v67 = *(_OWORD *)(v40 + 16);
      uint64_t v68 = v42;
      LOBYTE(v69) = v41;
      long long v62 = *(_OWORD *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v63 = v43;
      LOBYTE(v64) = v44;
      swift_retain();
      swift_retain();
      char v25 = _s8NewsFeed17FormatBindingFontO2eeoiySbAC_ACtFZ_0((uint64_t)&v67, (uint64_t)&v62);
      goto LABEL_25;
    case 4uLL:
      if (v11 >> 61 != 4) {
        goto LABEL_34;
      }
      uint64_t v46 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v45 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v47 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      int v48 = *(unsigned __int8 *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v56 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v49 = v11 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v51 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v50 = *(void *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v52 = *(void *)(v49 + 32);
      char v53 = *(unsigned char *)(v49 + 40);
      uint64_t v57 = *(void *)(v49 + 48);
      *(void *)&long long v67 = v46;
      *((void *)&v67 + 1) = v45;
      uint64_t v68 = v47;
      LOBYTE(v69) = v48;
      *(void *)&v70[0] = v56;
      *(void *)&long long v62 = v51;
      *((void *)&v62 + 1) = v50;
      uint64_t v63 = v52;
      LOBYTE(v64) = v53;
      *(void *)&v65[0] = v57;
      swift_retain();
      swift_retain();
      uint64_t v58 = v46;
      uint64_t v59 = v45;
      uint64_t v60 = v47;
      int v61 = v48;
      sub_1BFF67F78(v46, v45, v47, v48);
      swift_retain();
      sub_1BFF67F78(v51, v50, v52, v53);
      swift_retain();
      if (_s8NewsFeed17FormatBindingFontO2eeoiySbAC_ACtFZ_0((uint64_t)&v67, (uint64_t)&v62))
      {
        char v54 = static FormatFont.== infix(_:_:)(v70, v65);
        sub_1BFF05CCC(v51, v50, v52, v53);
        swift_release();
        sub_1BFF05CCC(v58, v59, v60, v61);
        swift_release();
        swift_release();
        swift_release();
        if (v54)
        {
LABEL_29:
          char v25 = 1;
          return v25 & 1;
        }
      }
      else
      {
        sub_1BFF05CCC(v51, v50, v52, v53);
        swift_release();
        sub_1BFF05CCC(v58, v59, v60, v61);
        swift_release();
        swift_release();
LABEL_33:
        swift_release();
      }
LABEL_34:
      char v25 = 0;
      return v25 & 1;
    default:
      if (v11 >> 61) {
        goto LABEL_34;
      }
      __int16 v12 = *(_WORD *)(v10 + 80);
      uint64_t v13 = *(void *)(v10 + 40);
      char v14 = *(unsigned char *)(v10 + 34);
      __int16 v15 = *(_WORD *)(v10 + 32);
      uint64_t v16 = *(void *)(v10 + 24);
      uint64_t v17 = *(void *)(v11 + 16);
      uint64_t v18 = *(void *)(v11 + 24);
      __int16 v19 = *(_WORD *)(v11 + 32);
      char v20 = *(unsigned char *)(v11 + 34);
      uint64_t v21 = *(void *)(v11 + 40);
      __int16 v22 = *(_WORD *)(v11 + 80);
      *(void *)&long long v67 = *(void *)(v10 + 16);
      *((void *)&v67 + 1) = v16;
      LOWORD(v68) = v15;
      BYTE2(v68) = v14;
      uint64_t v69 = v13;
      long long v23 = *(_OWORD *)(v10 + 64);
      v70[0] = *(_OWORD *)(v10 + 48);
      v70[1] = v23;
      __int16 v71 = v12;
      *(void *)&long long v62 = v17;
      *((void *)&v62 + 1) = v18;
      LOWORD(v63) = v19;
      BYTE2(v63) = v20;
      uint64_t v64 = v21;
      long long v24 = *(_OWORD *)(v11 + 64);
      v65[0] = *(_OWORD *)(v11 + 48);
      v65[1] = v24;
      __int16 v66 = v22;
      swift_retain();
      swift_retain();
      char v25 = _s8NewsFeed16FormatSystemFontV2eeoiySbAC_ACtFZ_0((uint64_t)&v67, (uint64_t)&v62);
LABEL_25:
      swift_release();
      swift_release();
      return v25 & 1;
  }
}

void sub_1C021CDF8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v33 = a4;
  uint64_t v52 = a3;
  uint64_t v34 = a6;
  uint64_t v35 = a2;
  uint64_t v32 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v32);
  uint64_t v9 = (uint64_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v10 - 8);
  __int16 v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FormatOption();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v17 - 8);
  __int16 v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a5)
  {
    case 1:
      uint64_t v23 = v36;
      sub_1BFFB5F74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v44);
      if (!v23)
      {
        v42[6] = v50;
        v43[0] = v51[0];
        *(_OWORD *)((char *)v43 + 9) = *(_OWORD *)((char *)v51 + 9);
        v42[2] = v46;
        v42[3] = v47;
        v42[4] = v48;
        v42[5] = v49;
        v42[0] = v44;
        v42[1] = v45;
        v37[6] = v50;
        v38[0] = v51[0];
        *(_OWORD *)((char *)v38 + 9) = *(_OWORD *)((char *)v51 + 9);
        v37[2] = v46;
        v37[3] = v47;
        v37[4] = v48;
        v37[5] = v49;
        uint64_t v39 = v35;
        uint64_t v40 = v52;
        __int16 v41 = v33;
        v37[0] = v44;
        v37[1] = v45;
        sub_1C14092B4((id *)v37, v34);
        sub_1C01880A4((uint64_t)v42);
      }
      break;
    case 2:
      sub_1C0220278(a1, v35, v52, v33 & 0xFFFFFF, &OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack, v34);
      break;
    case 3:
      uint64_t v24 = v35;
      FormatOptionCollection.subscript.getter(v35, v52, (uint64_t)v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        sub_1C003E100((uint64_t)v12, (uint64_t (*)(void))sub_1C00AB000);
        uint64_t v25 = v52;
        *uint64_t v9 = v24;
        v9[1] = v25;
        swift_storeEnumTagMultiPayload();
        sub_1BFFBA724((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        sub_1C003E258((uint64_t)v9, v26, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        swift_bridgeObjectRetain();
        swift_willThrow();
        uint64_t v21 = (uint64_t (*)(void))type metadata accessor for FormatLayoutError;
        uint64_t v22 = (uint64_t)v9;
      }
      else
      {
        uint64_t v27 = v52;
        sub_1C0223730((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v28 = *((void *)v16 + 2);
        swift_retain();
        uint64_t v29 = v28;
        uint64_t v30 = v36;
        sub_1BFF28A20(&v44, a1, v29);
        swift_release();
        if (!v30)
        {
          sub_1C0E49A88(v44, v35, v27, v33, a1, v34);
          swift_release();
        }
        uint64_t v21 = (uint64_t (*)(void))type metadata accessor for FormatOption;
        uint64_t v22 = (uint64_t)v16;
      }
      goto LABEL_12;
    default:
      uint64_t v20 = v36;
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
      if (!v20)
      {
        *(void *)&long long v44 = v35;
        *((void *)&v44 + 1) = v52;
        LOWORD(v45) = v33;
        BYTE2(v45) = BYTE2(v33);
        sub_1C1392FA8((uint64_t)v19, v34);
        uint64_t v21 = type metadata accessor for FeedHeadline;
        uint64_t v22 = (uint64_t)v19;
LABEL_12:
        sub_1C003E100(v22, v21);
      }
      break;
  }
}

uint64_t sub_1C021D2D8@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  uint64_t v29 = a4;
  uint64_t v31 = a3;
  uint64_t v28 = a6;
  uint64_t v9 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FormatOption();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a5)
  {
    case 2:
      uint64_t result = sub_1C0220198();
      break;
    case 3:
      sub_1C003DFA4((uint64_t)a1);
      sub_1C1517EFC();
      sub_1C003DF0C((uint64_t)a1);
      swift_retain();
      swift_release();
      FormatOptionCollection.subscript.getter(a2, v31, (uint64_t)v14);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        sub_1C003E100((uint64_t)v14, (uint64_t (*)(void))sub_1C00AB000);
        uint64_t v21 = v31;
        *uint64_t v11 = a2;
        v11[1] = v21;
        swift_storeEnumTagMultiPayload();
        sub_1BFFBA724((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        sub_1C003E258((uint64_t)v11, v22, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        swift_bridgeObjectRetain();
        swift_willThrow();
        uint64_t v23 = type metadata accessor for FormatLayoutError;
        uint64_t v24 = (uint64_t)v11;
      }
      else
      {
        sub_1C0223730((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v25 = *((void *)v18 + 2);
        swift_retain();
        uint64_t v26 = v25;
        uint64_t v27 = v30;
        sub_1C0E44D88(&v32, a1, v26);
        swift_release();
        if (!v27)
        {
          sub_1C0E4B218(v32, a2, v31, v29, a1, v28);
          swift_release();
        }
        uint64_t v23 = type metadata accessor for FormatOption;
        uint64_t v24 = (uint64_t)v18;
      }
      uint64_t result = sub_1C003E100(v24, (uint64_t (*)(void))v23);
      break;
    default:
      sub_1BFFBA724((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *__int16 v19 = 0xD00000000000006ELL;
      v19[1] = 0x80000001C1607E00;
      swift_storeEnumTagMultiPayload();
      uint64_t result = swift_willThrow();
      break;
  }
  return result;
}

void sub_1C021D6F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v33 = a4;
  uint64_t v52 = a3;
  uint64_t v34 = a6;
  uint64_t v35 = a2;
  uint64_t v32 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v32);
  uint64_t v9 = (uint64_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FormatOption();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v17 - 8);
  __int16 v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a5)
  {
    case 1:
      uint64_t v23 = v36;
      sub_1BFFB5F74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)&v44);
      if (!v23)
      {
        v42[6] = v50;
        v43[0] = v51[0];
        *(_OWORD *)((char *)v43 + 9) = *(_OWORD *)((char *)v51 + 9);
        v42[2] = v46;
        v42[3] = v47;
        v42[4] = v48;
        v42[5] = v49;
        v42[0] = v44;
        v42[1] = v45;
        v37[6] = v50;
        v38[0] = v51[0];
        *(_OWORD *)((char *)v38 + 9) = *(_OWORD *)((char *)v51 + 9);
        v37[2] = v46;
        v37[3] = v47;
        v37[4] = v48;
        v37[5] = v49;
        uint64_t v39 = v35;
        uint64_t v40 = v52;
        __int16 v41 = v33;
        v37[0] = v44;
        v37[1] = v45;
        sub_1C14092B4((id *)v37, v34);
        sub_1C01880A4((uint64_t)v42);
      }
      break;
    case 2:
      sub_1C0220278(a1, v35, v52, v33 & 0xFFFFFF, &OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack, v34);
      break;
    case 3:
      uint64_t v24 = v35;
      FormatOptionCollection.subscript.getter(v35, v52, (uint64_t)v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        sub_1C003E100((uint64_t)v12, (uint64_t (*)(void))sub_1C00AB000);
        uint64_t v25 = v52;
        *uint64_t v9 = v24;
        v9[1] = v25;
        swift_storeEnumTagMultiPayload();
        sub_1BFFBA724((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        sub_1C003E258((uint64_t)v9, v26, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        swift_bridgeObjectRetain();
        swift_willThrow();
        uint64_t v21 = (uint64_t (*)(void))type metadata accessor for FormatLayoutError;
        uint64_t v22 = (uint64_t)v9;
      }
      else
      {
        uint64_t v27 = v52;
        sub_1C0223730((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v28 = *((void *)v16 + 2);
        swift_retain();
        uint64_t v29 = v28;
        uint64_t v30 = v36;
        sub_1BFF27FB0(&v44, a1, v29);
        swift_release();
        if (!v30)
        {
          sub_1C0E49A88(v44, v35, v27, v33, a1, v34);
          swift_release();
        }
        uint64_t v21 = (uint64_t (*)(void))type metadata accessor for FormatOption;
        uint64_t v22 = (uint64_t)v16;
      }
      goto LABEL_12;
    default:
      uint64_t v20 = v36;
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
      if (!v20)
      {
        *(void *)&long long v44 = v35;
        *((void *)&v44 + 1) = v52;
        LOWORD(v45) = v33;
        BYTE2(v45) = BYTE2(v33);
        sub_1C1392FA8((uint64_t)v19, v34);
        uint64_t v21 = type metadata accessor for FeedHeadline;
        uint64_t v22 = (uint64_t)v19;
LABEL_12:
        sub_1C003E100(v22, v21);
      }
      break;
  }
}

void sub_1C021DBD0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v13 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a5)
  {
    case 1:
      sub_1C027E3E0();
      if (!v6)
      {
        v21[6] = v29;
        v22[0] = v30[0];
        *(_OWORD *)((char *)v22 + 9) = *(_OWORD *)((char *)v30 + 9);
        v21[2] = v25;
        v21[3] = v26;
        v21[4] = v27;
        _OWORD v21[5] = v28;
        v21[0] = v23;
        v21[1] = v24;
        v16[6] = v29;
        v17[0] = v30[0];
        *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v30 + 9);
        v16[2] = v25;
        v16[3] = v26;
        v16[4] = v27;
        v16[5] = v28;
        uint64_t v18 = a2;
        uint64_t v19 = a3;
        __int16 v20 = a4;
        v16[0] = v23;
        v16[1] = v24;
        sub_1C14092B4((id *)v16, a6);
        sub_1C01880A4((uint64_t)v21);
      }
      break;
    case 2:
      sub_1C0220500(a2, a3, a4 & 0xFFFFFF, (void (*)(__n128))sub_1C027EB38, (void (*)(long long *__return_ptr, __n128))sub_1C027E9C8, (void (*)(long long *__return_ptr, __n128))sub_1C027E820, (void (*)(long long *__return_ptr, __n128))sub_1C027E6B0, a6);
      break;
    case 3:
      sub_1C124D234(a1, a2, a3, a4, a6);
      break;
    default:
      sub_1BFF835C4();
      if (!v6)
      {
        *(void *)&long long v23 = a2;
        *((void *)&v23 + 1) = a3;
        LOWORD(v24) = a4;
        BYTE2(v24) = BYTE2(a4);
        sub_1C1392FA8((uint64_t)v15, a6);
        sub_1C003E100((uint64_t)v15, type metadata accessor for FeedHeadline);
      }
      break;
  }
}

void sub_1C021DE24(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v27 = a4;
  long long v28 = a6;
  uint64_t v9 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FormatOption();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a5)
  {
    case 2:
      sub_1C0220500(a2, v30, v27 & 0xFFFFFF, (void (*)(__n128))sub_1C0220B00, (void (*)(long long *__return_ptr, __n128))sub_1C0221110, (void (*)(long long *__return_ptr, __n128))sub_1C0220F48, (void (*)(long long *__return_ptr, __n128))sub_1C0220D90, v28);
      break;
    case 3:
      type metadata accessor for FormatDecorationContext();
      sub_1C1517EFC();
      swift_retain();
      swift_release();
      FormatOptionCollection.subscript.getter(a2, v30, (uint64_t)v14);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        sub_1C003E100((uint64_t)v14, (uint64_t (*)(void))sub_1C00AB000);
        uint64_t v20 = v30;
        *uint64_t v11 = a2;
        v11[1] = v20;
        swift_storeEnumTagMultiPayload();
        sub_1BFFBA724((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        sub_1C003E258((uint64_t)v11, v21, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        swift_bridgeObjectRetain();
        swift_willThrow();
        uint64_t v22 = type metadata accessor for FormatLayoutError;
        uint64_t v23 = (uint64_t)v11;
      }
      else
      {
        sub_1C0223730((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v24 = *((void *)v18 + 2);
        swift_retain();
        uint64_t v25 = v24;
        uint64_t v26 = v29;
        sub_1BFFE7DB4(&v31, a1, v25);
        swift_release();
        if (!v26)
        {
          sub_1C0E4E0D0(v31, a2, v30, v27, a1, v28);
          swift_release();
        }
        uint64_t v22 = type metadata accessor for FormatOption;
        uint64_t v23 = (uint64_t)v18;
      }
      sub_1C003E100(v23, (uint64_t (*)(void))v22);
      break;
    default:
      sub_1BFFBA724((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *uint64_t v19 = 0xD000000000000066;
      v19[1] = 0x80000001C1607D90;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      break;
  }
}

uint64_t sub_1C021E284@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  uint64_t v29 = a4;
  uint64_t v31 = a3;
  long long v28 = a6;
  uint64_t v9 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FormatOption();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a5)
  {
    case 2:
      uint64_t result = sub_1C0220790();
      break;
    case 3:
      FormatOptionCollection.subscript.getter(a2, v31, (uint64_t)v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        sub_1C003E100((uint64_t)v14, (uint64_t (*)(void))sub_1C00AB000);
        uint64_t v21 = v31;
        *uint64_t v11 = a2;
        v11[1] = v21;
        swift_storeEnumTagMultiPayload();
        sub_1BFFBA724((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        sub_1C003E258((uint64_t)v11, v22, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        swift_bridgeObjectRetain();
        swift_willThrow();
        uint64_t v23 = type metadata accessor for FormatLayoutError;
        uint64_t v24 = (uint64_t)v11;
      }
      else
      {
        sub_1C0223730((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v25 = *((void *)v18 + 2);
        swift_retain();
        uint64_t v26 = v25;
        uint64_t v27 = v30;
        sub_1C0E455CC(&v32, a1, v26);
        swift_release();
        if (!v27)
        {
          sub_1C0E54CD8(v32, a2, v31, v29, a1, v28);
          swift_release();
        }
        uint64_t v23 = type metadata accessor for FormatOption;
        uint64_t v24 = (uint64_t)v18;
      }
      uint64_t result = sub_1C003E100(v24, (uint64_t (*)(void))v23);
      break;
    default:
      sub_1BFFBA724((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *uint64_t v19 = 0xD000000000000048;
      v19[1] = 0x80000001C1607D30;
      swift_storeEnumTagMultiPayload();
      uint64_t result = swift_willThrow();
      break;
  }
  return result;
}

void *sub_1C021E668(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v170 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v7 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
  {
    switch(v7 >> 61)
    {
      case 1uLL:
        uint64_t v135 = v7 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v137 = *(void *)(v135 + 16);
        uint64_t v136 = *(void *)(v135 + 24);
        uint64_t v138 = *(void *)(v135 + 32);
        uint64_t v188 = *(void *)(v135 + 40);
        LODWORD(v189) = *(unsigned __int16 *)(v135 + 48);
        sub_1C01B2D70();
        uint64_t v186 = swift_allocObject();
        *(_OWORD *)(v186 + 16) = xmmword_1C1527210;
        sub_1C02243D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        uint64_t v187 = v139;
        uint64_t v140 = *(void *)(*(void *)(v139 - 8) + 72);
        unint64_t v141 = (*(unsigned __int8 *)(*(void *)(v139 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v139 - 8) + 80);
        *(void *)&long long v184 = 4 * v140;
        uint64_t v142 = swift_allocObject();
        uint64_t v185 = v142;
        *(_OWORD *)(v142 + 16) = xmmword_1C152C7E0;
        unint64_t v143 = v142 + v141;
        sub_1C0433600(1701869908, 0xE400000000000000, 0x6D6F74737543, 0xE600000000000000, (void *)(v142 + v141));
        uint64_t v144 = type metadata accessor for FormatInspectionItem(0);
        CGRect v145 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56);
        v145(v143, 0, 1, v144);
        swift_bridgeObjectRetain();
        uint64_t v181 = v137;
        uint64_t v182 = v136;
        sub_1C0433600(1701667150, 0xE400000000000000, v137, v136, (void *)(v143 + v140));
        v145(v143 + v140, 0, 1, v144);
        sub_1C042F1BC(1702521171, 0xE400000000000000, v138, 0, (void *)(v143 + 2 * v140));
        v145(v143 + 2 * v140, 0, 1, v144);
        char v146 = v189;
        LODWORD(v183) = v189 & 0xFF00;
        BOOL v147 = v183 == 3072;
        if (v183 == 3072) {
          uint64_t v148 = 0;
        }
        else {
          uint64_t v148 = v188;
        }
        LODWORD(v180) = v189 >> 8;
        if ((v189 & 0xFF00) == 0xC00) {
          unsigned __int8 v149 = 12;
        }
        else {
          unsigned __int8 v149 = BYTE1(v189);
        }
        uint64_t v150 = (void *)(v143 + 3 * v140);
        sub_1C0435BE8(0x656C797453, 0xE500000000000000, v149, v150);
        v145((unint64_t)v150, 0, 1, v144);
        char v151 = v147 | v146;
        uint64_t v152 = (void *)v186;
        unint64_t v153 = v143 + v184;
        sub_1C042F1BC(0x657A69532078614DLL, 0xE800000000000000, v148, v151 & 1, (void *)(v143 + v184));
        v145(v153, 0, 1, v144);
        sub_1C09BCFA4(1953394502, 0xE400000000000000, 0, 0, v185, &v190);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v152[7] = &type metadata for FormatInspectionGroup;
        v152[8] = &off_1F1BDEC90;
        uint64_t v154 = swift_allocObject();
        v152[4] = v154;
        long long v155 = v191;
        *(_OWORD *)(v154 + 16) = v190;
        *(_OWORD *)(v154 + 32) = v155;
        *(void *)(v154 + 48) = v192;
        if (v183 == 3072)
        {
          sub_1BFF63CD0();
          uint64_t v156 = (void *)sub_1C151F89C();
        }
        else
        {
          char v166 = v180;
          sub_1BFF63CD0();
          LOBYTE(v199[0]) = v166;
          id v167 = sub_1BFF68690();
          uint64_t v156 = (void *)sub_1C151F85C();
        }
        uint64_t v168 = sub_1C0222A44(v156);

        v152[12] = &type metadata for FormatInspection;
        v152[13] = &off_1F1C29D30;
        v152[9] = v168;
        char v169 = sub_1C131B79C((uint64_t)v152);
        swift_setDeallocating();
        sub_1C0222994(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t result = v169;
        break;
      case 2uLL:
        uint64_t v68 = swift_projectBox();
        sub_1C003E258(v68, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
        sub_1C01B2D70();
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1C1527210;
        uint64_t v187 = inited;
        uint64_t v188 = inited + 32;
        sub_1C02243D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        uint64_t v186 = v70;
        unint64_t v71 = (*(unsigned __int8 *)(*(void *)(v70 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v70 - 8) + 80);
        *(void *)&long long v189 = *(void *)(*(void *)(v70 - 8) + 72);
        uint64_t v72 = v189;
        uint64_t v73 = swift_allocObject();
        *(_OWORD *)(v73 + 16) = xmmword_1C152C7E0;
        uint64_t v185 = v73;
        unint64_t v74 = v73 + v71;
        sub_1C0433600(1701869908, 0xE400000000000000, 0x65746F6D6552, 0xE600000000000000, (void *)(v73 + v71));
        uint64_t v75 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v76 = *(void *)(v75 - 8);
        uint64_t v77 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v76 + 56);
        uint64_t v78 = v76 + 56;
        v77(v74, 0, 1, v75);
        id v79 = (void *)(v74 + v72);
        uint64_t v80 = *v6;
        uint64_t v81 = v6[1];
        swift_bridgeObjectRetain();
        sub_1C0433600(1701667150, 0xE400000000000000, v80, v81, v79);
        v77((unint64_t)v79, 0, 1, v75);
        uint64_t v182 = v74;
        uint64_t v82 = (void *)(v74 + 2 * v189);
        sub_1C042F1BC(1702521171, 0xE400000000000000, *(uint64_t *)((char *)v6 + *(int *)(v4 + 24)), 0, v82);
        uint64_t v181 = v75;
        uint64_t v183 = v78;
        *(void *)&long long v184 = v77;
        v77((unint64_t)v82, 0, 1, v75);
        uint64_t v83 = (char *)v6 + *(int *)(v4 + 28);
        unsigned int v84 = *((unsigned __int16 *)v83 + 4);
        if ((v84 & 0xFF00) == 0xC00)
        {
          uint64_t v180 = 0;
          LOBYTE(v85) = 12;
        }
        else
        {
          uint64_t v180 = *(void *)v83;
          unsigned int v85 = v84 >> 8;
        }
        uint64_t v157 = v189;
        uint64_t v158 = v182;
        sub_1C0435BE8(0x656C797453, 0xE500000000000000, v85, (void *)(v182 + 3 * v189));
        uint64_t v159 = v181;
        uint64_t v160 = (void (*)(uint64_t, void, uint64_t, uint64_t))v184;
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v184)(v158 + 3 * v157, 0, 1, v181);
        sub_1C042F1BC(0x657A69532078614DLL, 0xE800000000000000, v180, ((v84 & 0xFF00) == 3072) | v84 & 1, (void *)(v158 + 4 * v157));
        v160(v158 + 4 * v157, 0, 1, v159);
        sub_1C09BCFA4(1953394502, 0xE400000000000000, 0, 0, v185, &v190);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v161 = (void *)v187;
        *(void *)(v187 + 56) = &type metadata for FormatInspectionGroup;
        v161[8] = &off_1F1BDEC90;
        uint64_t v162 = swift_allocObject();
        v161[4] = v162;
        *(void *)(v162 + 48) = v192;
        long long v163 = v191;
        *(_OWORD *)(v162 + 16) = v190;
        *(_OWORD *)(v162 + 32) = v163;
        uint64_t v164 = (void *)sub_1C02A4A28();
        uint64_t v165 = sub_1C0222A44(v164);

        v161[12] = &type metadata for FormatInspection;
        v161[13] = &off_1F1C29D30;
        v161[9] = v165;
        uint64_t v16 = sub_1C131B79C((uint64_t)v161);
        swift_setDeallocating();
        sub_1C0222994(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        sub_1C003E100((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
        return v16;
      case 3uLL:
        uint64_t v86 = v7 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v87 = *(void *)(v86 + 16);
        uint64_t v88 = *(void *)(v86 + 24);
        uint64_t v89 = *(void *)(v86 + 32);
        int v90 = *(unsigned __int8 *)(v86 + 40);
        sub_1C01B2D70();
        uint64_t v188 = swift_initStackObject();
        *(_OWORD *)(v188 + 16) = xmmword_1C1529AE0;
        sub_1C02243D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        *(void *)&long long v189 = v91;
        uint64_t v92 = *(void *)(*(void *)(v91 - 8) + 72);
        unint64_t v93 = (*(unsigned __int8 *)(*(void *)(v91 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v91 - 8) + 80);
        uint64_t v94 = swift_allocObject();
        uint64_t v187 = v94;
        *(_OWORD *)(v94 + 16) = xmmword_1C1527210;
        id v95 = (void *)(v94 + v93);
        uint64_t v96 = v87;
        uint64_t v97 = v87;
        uint64_t v98 = v89;
        uint64_t v185 = v89;
        LODWORD(v184) = v90;
        sub_1BFF67F78(v97, v88, v89, v90);
        sub_1C0433600(1701869908, 0xE400000000000000, 0x676E69646E6942, 0xE700000000000000, v95);
        uint64_t v99 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v186 = *(void *)(*(void *)(v99 - 8) + 56);
        ((void (*)(void *, void, uint64_t, uint64_t))v186)(v95, 0, 1, v99);
        unint64_t v100 = (void *)((char *)v95 + v92);
        uint64_t v101 = v96;
        *(void *)&long long v190 = sub_1C0219CCC(v96, v88, v98, v90, (uint64_t)&type metadata for FormatBindingFont);
        sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        sub_1BFE99E40();
        uint64_t v102 = sub_1C151E55C();
        uint64_t v104 = v103;
        swift_bridgeObjectRelease();
        sub_1BFF05CCC(v101, v88, v185, v184);
        sub_1C0433600(1752457552, 0xE400000000000000, v102, v104, v100);
        ((void (*)(void *, void, uint64_t, uint64_t))v186)(v100, 0, 1, v99);
        sub_1C09BCFA4(1953394502, 0xE400000000000000, 0, 0, v187, &v190);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v105 = v188;
        *(void *)(v188 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v105 + 64) = &off_1F1BDEC90;
        uint64_t v106 = swift_allocObject();
        *(void *)(v105 + 32) = v106;
        *(void *)(v106 + 48) = v192;
        long long v107 = v191;
        *(_OWORD *)(v106 + 16) = v190;
        *(_OWORD *)(v106 + 32) = v107;
        uint64_t v16 = sub_1C131B79C(v105);
        swift_setDeallocating();
        sub_1C0222994(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBB718]);
        goto LABEL_3;
      case 4uLL:
        uint64_t v108 = v7 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v109 = *(void *)(v108 + 16);
        uint64_t v110 = *(void *)(v108 + 24);
        *(void *)&long long v189 = *(void *)(v108 + 32);
        uint64_t v178 = *(void **)(v108 + 48);
        unint64_t v111 = (unint64_t)v178;
        char v112 = *(unsigned char *)(v108 + 40);
        sub_1C01B2D70();
        uint64_t v187 = swift_initStackObject();
        long long v184 = xmmword_1C1529AE0;
        *(_OWORD *)(v187 + 16) = xmmword_1C1529AE0;
        sub_1C02243D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        sub_1C0181BEC(0);
        uint64_t v188 = v113;
        uint64_t v114 = *(void *)(*(void *)(v113 - 8) + 72);
        unint64_t v115 = (*(unsigned __int8 *)(*(void *)(v113 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v113 - 8) + 80);
        uint64_t v116 = swift_allocObject();
        *(_OWORD *)(v116 + 16) = xmmword_1C1527210;
        id v117 = (void *)(v116 + v115);
        uint64_t v185 = (uint64_t)v117;
        uint64_t v118 = v109;
        uint64_t v119 = v109;
        uint64_t v120 = v110;
        uint64_t v121 = v110;
        uint64_t v122 = v189;
        sub_1BFF67F78(v119, v120, v189, v112);
        uint64_t v177 = v111 & 0x1FFFFFFFFFFFFFFFLL;
        swift_retain();
        sub_1C0433600(1701869908, 0xE400000000000000, 0x676E69646E6942, 0xE700000000000000, v117);
        uint64_t v181 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v123 = *(void *)(v181 - 8);
        uint64_t v180 = *(void *)(v123 + 56);
        uint64_t v182 = v123 + 56;
        ((void (*)(void *, void, uint64_t, uint64_t))v180)(v117, 0, 1, v181);
        uint64_t v179 = (void *)((char *)v117 + v114);
        uint64_t v124 = v121;
        sub_1BFF67F78(v118, v121, v122, v112);
        uint64_t v186 = v118;
        uint64_t v183 = v121;
        *(void *)&long long v190 = sub_1C0219CCC(v118, v121, v122, v112, (uint64_t)&type metadata for FormatBindingFont);
        sub_1BFE9DDD8(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
        sub_1BFE99E40();
        uint64_t v176 = sub_1C151E55C();
        uint64_t v126 = v125;
        swift_bridgeObjectRelease();
        sub_1BFF05CCC(v118, v124, v122, v112);
        sub_1C0222994(0, (unint64_t *)&qword_1EA1974C0, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBBE00]);
        uint64_t v127 = swift_initStackObject();
        *(_OWORD *)(v127 + 16) = v184;
        *(void *)&long long v190 = v178;
        swift_retain();
        uint64_t v128 = sub_1C021E668(a1, &v190);
        swift_release();
        *(void *)(v127 + 56) = &type metadata for FormatInspection;
        *(void *)(v127 + 64) = &off_1F1C29D30;
        *(void *)(v127 + 32) = v128;
        uint64_t v129 = sub_1C0233FC8(v127);
        swift_setDeallocating();
        sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
        swift_arrayDestroy();
        CGRect v130 = sub_1C131B79C(v129);
        swift_bridgeObjectRelease();
        CGRect v131 = v179;
        sub_1C042F458(0x676E69646E6942, 0xE700000000000000, (uint64_t)v130, v176, v126, v179);
        ((void (*)(void *, void, uint64_t, uint64_t))v180)(v131, 0, 1, v181);
        sub_1C09BCFA4(1953394502, 0xE400000000000000, 0, 0, v116, &v190);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v132 = v187;
        *(void *)(v187 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v132 + 64) = &off_1F1BDEC90;
        uint64_t v133 = swift_allocObject();
        *(void *)(v132 + 32) = v133;
        *(void *)(v133 + 48) = v192;
        long long v134 = v191;
        *(_OWORD *)(v133 + 16) = v190;
        *(_OWORD *)(v133 + 32) = v134;
        uint64_t v16 = sub_1C131B79C(v132);
        swift_setDeallocating();
        sub_1C0222994(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        sub_1BFF05CCC(v186, v183, v189, v112);
        swift_release();
        return v16;
      default:
        uint64_t v18 = *(void *)(v7 + 16);
        uint64_t v19 = *(void *)(v7 + 24);
        unsigned __int16 v20 = *(_WORD *)(v7 + 32);
        LODWORD(v180) = v20;
        *(void *)&long long v184 = *(void *)(v7 + 40);
        uint64_t v187 = *(void *)(v7 + 48);
        uint64_t v188 = v19;
        uint64_t v186 = *(void *)(v7 + 56);
        uint64_t v182 = *(void *)(v7 + 64);
        *(void *)&long long v189 = *(void *)(v7 + 72);
        LODWORD(v185) = *(unsigned __int16 *)(v7 + 80);
        int v21 = *(unsigned __int8 *)(v7 + 34);
        sub_1C01B2D70();
        uint64_t v181 = swift_initStackObject();
        *(_OWORD *)(v181 + 16) = xmmword_1C152C7F0;
        sub_1C02243D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
        uint64_t v176 = v22;
        sub_1C0181BEC(0);
        uint64_t v183 = v23;
        uint64_t v25 = *(unsigned __int8 *)(*(void *)(v23 - 8) + 80);
        uint64_t v26 = (v25 + 32) & ~v25;
        uint64_t v179 = *(void **)(*(void *)(v23 - 8) + 72);
        uint64_t v24 = v179;
        uint64_t v174 = v26;
        uint64_t v175 = v25 | 7;
        uint64_t v27 = swift_allocObject();
        uint64_t v172 = v27;
        *(_OWORD *)(v27 + 16) = xmmword_1C152FC70;
        uint64_t v28 = v27 + v26;
        sub_1C0433600(1701869908, 0xE400000000000000, 0x6D6574737953, 0xE600000000000000, (void *)(v27 + v26));
        uint64_t v29 = type metadata accessor for FormatInspectionItem(0);
        uint64_t v30 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
        v30(v28, 0, 1, v29);
        uint64_t v31 = (void *)((char *)v24 + v28);
        *(void *)&long long v190 = v18;
        *((void *)&v190 + 1) = v188;
        LOWORD(v191) = v20;
        LODWORD(v177) = v21;
        BYTE2(v191) = v21;
        *((void *)&v191 + 1) = v184;
        uint64_t v192 = v187;
        uint64_t v193 = v186;
        uint64_t v194 = v182;
        uint64_t v195 = v189;
        __int16 v196 = v185;
        uint64_t v178 = *(void **)(a1 + 56);
        id v32 = sub_1C0EC88BC(v178);
        id v33 = objc_msgSend(v32, sel_fontName);

        uint64_t v34 = sub_1C151E62C();
        uint64_t v36 = v35;

        sub_1C0433600(1701667150, 0xE400000000000000, v34, v36, v31);
        v30((uint64_t)v31, 0, 1, v29);
        uint64_t v37 = v179;
        uint64_t v171 = 2 * (void)v179;
        sub_1C042F1BC(1702521171, 0xE400000000000000, v18, 0, (void *)(v28 + 2 * (void)v179));
        v30(v28 + 2 * (void)v37, 0, 1, v29);
        uint64_t v173 = 3 * (void)v37;
        sub_1C0435E78(0x746867696557, 0xE600000000000000, v21, (void *)(v28 + 3 * (void)v37));
        v30(v28 + 3 * (void)v37, 0, 1, v29);
        uint64_t v170 = 4 * (void)v37;
        uint64_t v38 = v184;
        swift_bridgeObjectRetain();
        sub_1C04361A8(0x737469617254, 0xE600000000000000, v38, (void *)(v28 + 4 * (void)v37));
        v30(v28 + 4 * (void)v37, 0, 1, v29);
        BOOL v39 = (v180 & 0xFF00) == 3072;
        char v40 = v180;
        if ((v180 & 0xFF00) == 0xC00) {
          uint64_t v41 = 0;
        }
        else {
          uint64_t v41 = v188;
        }
        if ((v180 & 0xFF00) == 0xC00) {
          unsigned __int8 v42 = 12;
        }
        else {
          unsigned __int8 v42 = BYTE1(v180);
        }
        uint64_t v43 = v37;
        long long v44 = (void *)(v28 + 5 * (void)v37);
        sub_1C0435BE8(0x656C797453, 0xE500000000000000, v42, v44);
        v30((uint64_t)v44, 0, 1, v29);
        sub_1C042F1BC(0x657A69532078614DLL, 0xE800000000000000, v41, (v39 | v40) & 1, (void *)(v28 + 6 * (void)v43));
        v30(v28 + 6 * (void)v43, 0, 1, v29);
        sub_1C09BCFA4(1953394502, 0xE400000000000000, 0, 0, v172, v197);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v45 = v181;
        *(void *)(v181 + 56) = &type metadata for FormatInspectionGroup;
        *(void *)(v45 + 64) = &off_1F1BDEC90;
        uint64_t v46 = v45;
        uint64_t v47 = swift_allocObject();
        *(void *)(v46 + 32) = v47;
        uint64_t v172 = v46 + 32;
        *(void *)(v47 + 48) = v198;
        long long v48 = v197[1];
        *(_OWORD *)(v47 + 16) = v197[0];
        *(_OWORD *)(v47 + 32) = v48;
        uint64_t v49 = v174;
        uint64_t v50 = swift_allocObject();
        *(_OWORD *)(v50 + 16) = xmmword_1C152A660;
        uint64_t v51 = (void *)(v50 + v49);
        char v52 = v185;
        BOOL v53 = (v185 & 0xFF00) == 1280;
        if ((v185 & 0xFF00) == 0x500) {
          uint64_t v54 = 0;
        }
        else {
          uint64_t v54 = v186;
        }
        if ((v185 & 0xFF00) == 0x500) {
          uint64_t v55 = 0;
        }
        else {
          uint64_t v55 = v189;
        }
        if ((v185 & 0xFF00) == 0x500) {
          unsigned __int8 v56 = 4;
        }
        else {
          unsigned __int8 v56 = BYTE1(v185);
        }
        if ((v185 & 0xFF00) == 0x500) {
          int v57 = 10;
        }
        else {
          int v57 = v187;
        }
        LODWORD(v176) = v57;
        sub_1C04364E8(0x6E6769736544, 0xE600000000000000, v56, v51);
        v30((uint64_t)v51, 0, 1, v29);
        char v58 = v53 | v52;
        uint64_t v59 = (char *)v179 + (void)v51;
        sub_1C04364F4(0x6564617247, 0xE500000000000000, v55, v58 & 1, (void *)((char *)v179 + (void)v51));
        v30((uint64_t)v59, 0, 1, v29);
        uint64_t v60 = v182;
        int v61 = (char *)v51 + v171;
        sub_1C042F1BC(0x746E616C53, 0xE500000000000000, v54, (v53 | v182) & 1, (void *)((char *)v51 + v171));
        v30((uint64_t)v61, 0, 1, v29);
        long long v62 = (char *)v51 + v173;
        sub_1C0436508(0x6874646957, 0xE500000000000000, v176, (void *)((char *)v51 + v173));
        v30((uint64_t)v62, 0, 1, v29);
        sub_1C09BCFA4(0x74744120746E6F46, 0xEF73657475626972, 0, 0, v50, v199);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v63 = (void *)v181;
        *(void *)(v181 + 96) = &type metadata for FormatInspectionGroup;
        v63[13] = &off_1F1BDEC90;
        uint64_t v64 = swift_allocObject();
        v63[9] = v64;
        *(void *)(v64 + 48) = v200;
        long long v65 = v199[1];
        *(_OWORD *)(v64 + 16) = v199[0];
        *(_OWORD *)(v64 + 32) = v65;
        *(void *)&long long v190 = v18;
        *((void *)&v190 + 1) = v188;
        LOWORD(v191) = v180;
        BYTE2(v191) = v177;
        *((void *)&v191 + 1) = v184;
        uint64_t v192 = v187;
        uint64_t v193 = v186;
        uint64_t v194 = v60;
        uint64_t v195 = v189;
        __int16 v196 = v185;
        id v66 = sub_1C0EC88BC(v178);
        long long v67 = sub_1C0222A44(v66);

        v63[17] = &type metadata for FormatInspection;
        v63[18] = &off_1F1C29D30;
        v63[14] = v67;
        uint64_t v16 = sub_1C131B79C((uint64_t)v63);
        swift_setDeallocating();
        sub_1C0222994(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBB718]);
        goto LABEL_3;
    }
  }
  else
  {
    sub_1C01B2D70();
    uint64_t v8 = swift_initStackObject();
    long long v189 = xmmword_1C1529AE0;
    *(_OWORD *)(v8 + 16) = xmmword_1C1529AE0;
    sub_1C02243D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
    sub_1C0181BEC(0);
    unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = v189;
    uint64_t v12 = (void *)(v11 + v10);
    sub_1C0433600(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v12);
    uint64_t v13 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
    sub_1C09BCFA4(1953394502, 0xE400000000000000, 0, 0, v11, &v190);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)(v8 + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v8 + 64) = &off_1F1BDEC90;
    uint64_t v14 = swift_allocObject();
    *(void *)(v8 + 32) = v14;
    *(void *)(v14 + 48) = v192;
    long long v15 = v191;
    *(_OWORD *)(v14 + 16) = v190;
    *(_OWORD *)(v14 + 32) = v15;
    uint64_t v16 = sub_1C131B79C(v8);
    swift_setDeallocating();
    sub_1C0222994(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBB718]);
LABEL_3:
    swift_arrayDestroy();
    return v16;
  }
  return result;
}

uint64_t sub_1C0220198()
{
  type metadata accessor for FormatLayoutError();
  sub_1BFFBA724((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  swift_allocError();
  void *v0 = 0xD00000000000007ALL;
  v0[1] = 0x80000001C1607E70;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

void sub_1C0220278(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v13 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v13 - 8);
  long long v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a4 >> 22) & 3)
  {
    case 1u:
      sub_1BFFDAD48(*(void *)(a1 + *a5 + 8), (uint64_t)&v26);
      if (!v6)
      {
        long long v16 = v26;
        *(void *)&long long v26 = a2;
        *((void *)&v26 + 1) = a3;
        LOWORD(v27) = a4;
        BYTE2(v27) = BYTE2(a4) & 0x3F;
        sub_1C016688C((void *)v16, a6);
        swift_unknownObjectRelease();
      }
      break;
    case 2u:
      sub_1C098D32C(*(void *)(a1 + *a5 + 8), (uint64_t)&v26);
      if (!v6)
      {
        v24[6] = v32;
        v25[0] = v33[0];
        *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v33 + 9);
        v24[2] = v28;
        v24[3] = v29;
        v24[4] = v30;
        v24[5] = v31;
        v24[0] = v26;
        v24[1] = v27;
        v19[6] = v32;
        v20[0] = v33[0];
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v33 + 9);
        v19[2] = v28;
        v19[3] = v29;
        v19[4] = v30;
        v19[5] = v31;
        uint64_t v21 = a2;
        uint64_t v22 = a3;
        __int16 v23 = a4;
        v19[0] = v26;
        v19[1] = v27;
        sub_1C14092B4((id *)v19, a6);
        sub_1C01880A4((uint64_t)v24);
      }
      break;
    case 3u:
      sub_1C098CEE0(*(void *)(a1 + *a5 + 8), &v26);
      if (!v6)
      {
        uint64_t v17 = (void *)v26;
        *(void *)&long long v26 = a2;
        *((void *)&v26 + 1) = a3;
        LOWORD(v27) = a4;
        BYTE2(v27) = BYTE2(a4) & 0x3F;
        id v18 = FCFeedDescriptor.feedTag.getter();
        sub_1C016688C(v18, a6);

        swift_unknownObjectRelease();
      }
      break;
    default:
      sub_1BFC4BD94(*(void *)(a1 + *a5 + 8), (uint64_t)v15);
      if (!v6)
      {
        *(void *)&long long v26 = a2;
        *((void *)&v26 + 1) = a3;
        LOWORD(v27) = a4;
        BYTE2(v27) = BYTE2(a4);
        sub_1C1392FA8((uint64_t)v15, a6);
        sub_1C003E100((uint64_t)v15, type metadata accessor for FeedHeadline);
      }
      break;
  }
}

void sub_1C0220500(uint64_t a1@<X1>, uint64_t a2@<X2>, unsigned int a3@<W3>, void (*a4)(__n128)@<X4>, void (*a5)(long long *__return_ptr, __n128)@<X5>, void (*a6)(long long *__return_ptr, __n128)@<X6>, void (*a7)(long long *__return_ptr, __n128)@<X7>, uint64_t *a8@<X8>)
{
  *(void *)&long long v21 = a1;
  *((void *)&v21 + 1) = a2;
  uint64_t v35 = a8;
  uint64_t v14 = type metadata accessor for FeedHeadline(0);
  __n128 v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v22[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a3 >> 22) & 3)
  {
    case 1u:
      a5(&v27, v15);
      if (!v8)
      {
        long long v18 = v27;
        long long v27 = v21;
        LOWORD(v28) = a3;
        BYTE2(v28) = BYTE2(a3) & 0x3F;
        sub_1C016688C((void *)v18, v35);
        swift_unknownObjectRelease();
      }
      break;
    case 2u:
      a6(&v27, v15);
      if (!v8)
      {
        v25[6] = v33;
        v26[0] = v34[0];
        *(_OWORD *)((char *)v26 + 9) = *(_OWORD *)((char *)v34 + 9);
        _OWORD v25[2] = v29;
        v25[3] = v30;
        v25[4] = v31;
        v25[5] = v32;
        v25[0] = v27;
        v25[1] = v28;
        v22[6] = v33;
        *(_OWORD *)__int16 v23 = v34[0];
        *(_OWORD *)((char *)&v23[1] + 1) = *(_OWORD *)((char *)v34 + 9);
        _OWORD v22[2] = v29;
        v22[3] = v30;
        v22[4] = v31;
        v22[5] = v32;
        *(_OWORD *)&v23[5] = v21;
        __int16 v24 = a3;
        v22[0] = v27;
        v22[1] = v28;
        sub_1C14092B4((id *)v22, v35);
        sub_1C01880A4((uint64_t)v25);
      }
      break;
    case 3u:
      a7(&v27, v15);
      if (!v8)
      {
        uint64_t v19 = (void *)v27;
        long long v27 = v21;
        LOWORD(v28) = a3;
        BYTE2(v28) = BYTE2(a3) & 0x3F;
        id v20 = FCFeedDescriptor.feedTag.getter();
        sub_1C016688C(v20, v35);

        swift_unknownObjectRelease();
      }
      break;
    default:
      a4(v15);
      if (!v8)
      {
        long long v27 = v21;
        LOWORD(v28) = a3;
        BYTE2(v28) = BYTE2(a3);
        sub_1C1392FA8((uint64_t)v17, v35);
        sub_1C003E100((uint64_t)v17, type metadata accessor for FeedHeadline);
      }
      break;
  }
}

uint64_t sub_1C0220790()
{
  type metadata accessor for FormatLayoutError();
  sub_1BFFBA724((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  swift_allocError();
  void *v0 = 0xD000000000000048;
  v0[1] = 0x80000001C1607D30;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C0220870@<X0>(uint64_t a1@<X8>)
{
  sub_1C01F08F0(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1BFEF2D8C(0x4562655764656546, 0xEC0000006465626DLL), (v8 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v6 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BFC773DC(v19, (uint64_t)v20);
    sub_1BFC66384((uint64_t)v20, (uint64_t)v19);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB872200);
    uint64_t v9 = type metadata accessor for FeedWebEmbed();
    int v10 = swift_dynamicCast();
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v5, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1C0223730((uint64_t)v5, a1, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
    }
    else
    {
      v11(v5, 1, 1, v9);
      sub_1C003E100((uint64_t)v5, (uint64_t (*)(void))sub_1C01F08F0);
      sub_1C022437C();
      swift_allocError();
      uint64_t v18 = v17;
      strcpy((char *)v17, "FeedWebEmbed");
      *(unsigned char *)(v17 + 13) = 0;
      *(_WORD *)(v17 + 14) = -5120;
      sub_1BFC66384((uint64_t)v20, v17 + 16);
      *(unsigned char *)(v18 + 56) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1C022437C();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C00B152C(v15);
    swift_bridgeObjectRelease();
    strcpy((char *)v14, "FeedWebEmbed");
    *(unsigned char *)(v14 + 13) = 0;
    *(_WORD *)(v14 + 14) = -5120;
    *(void *)(v14 + 16) = v16;
    *(unsigned char *)(v14 + 56) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1C0220B00@<X0>(uint64_t a1@<X8>)
{
  sub_1BFFFCF8C(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_1BFEF2D8C(0x6461654864656546, 0xEC000000656E696CLL), (v8 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v6 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BFC773DC(v19, (uint64_t)v20);
    sub_1BFC66384((uint64_t)v20, (uint64_t)v19);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB872200);
    uint64_t v9 = type metadata accessor for FeedHeadline(0);
    int v10 = swift_dynamicCast();
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v5, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1C0223730((uint64_t)v5, a1, type metadata accessor for FeedHeadline);
    }
    else
    {
      v11(v5, 1, 1, v9);
      sub_1C003E100((uint64_t)v5, (uint64_t (*)(void))sub_1BFFFCF8C);
      sub_1C022437C();
      swift_allocError();
      uint64_t v18 = v17;
      strcpy((char *)v17, "FeedHeadline");
      *(unsigned char *)(v17 + 13) = 0;
      *(_WORD *)(v17 + 14) = -5120;
      sub_1BFC66384((uint64_t)v20, v17 + 16);
      *(unsigned char *)(v18 + 56) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1C022437C();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C00B152C(v15);
    swift_bridgeObjectRelease();
    strcpy((char *)v14, "FeedHeadline");
    *(unsigned char *)(v14 + 13) = 0;
    *(_WORD *)(v14 + 14) = -5120;
    *(void *)(v14 + 16) = v16;
    *(unsigned char *)(v14 + 56) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1C0220D90@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x6373654464656546, 0xEE00726F74706972), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v14);
    sub_1BFC773DC(v14, (uint64_t)v15);
    sub_1BFC66384((uint64_t)v15, (uint64_t)v14);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB872200);
    if (swift_dynamicCast())
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      *a1 = v13;
    }
    else
    {
      sub_1C022437C();
      swift_allocError();
      uint64_t v12 = v11;
      strcpy(v11, "FeedDescriptor");
      v11[15] = -18;
      sub_1BFC66384((uint64_t)v15, (uint64_t)(v11 + 16));
      v12[56] = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    }
  }
  else
  {
    sub_1C022437C();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C00B152C(v9);
    swift_bridgeObjectRelease();
    strcpy((char *)v8, "FeedDescriptor");
    *(unsigned char *)(v8 + 15) = -18;
    *(void *)(v8 + 16) = v10;
    *(unsigned char *)(v8 + 56) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0220F48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x7573734964656546, 0xE900000000000065), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v14);
    sub_1BFC773DC(v14, (uint64_t)v16);
    sub_1BFC66384((uint64_t)v16, (uint64_t)v15);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB872200);
    if (swift_dynamicCast())
    {
      nullsub_1(v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      sub_1C0181C7C((uint64_t)v14, (uint64_t)v13);
      return sub_1C0181C7C((uint64_t)v13, a1);
    }
    else
    {
      sub_1C022437C();
      swift_allocError();
      uint64_t v12 = v11;
      *uint64_t v11 = 0x7573734964656546;
      v11[1] = 0xE900000000000065;
      sub_1BFC66384((uint64_t)v16, (uint64_t)(v11 + 2));
      *((unsigned char *)v12 + 56) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    }
  }
  else
  {
    sub_1C022437C();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C00B152C(v9);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v8 = 0x7573734964656546;
    *(void *)(v8 + 8) = 0xE900000000000065;
    *(void *)(v8 + 16) = v10;
    *(unsigned char *)(v8 + 56) = 0;
    return swift_willThrow();
  }
}

uint64_t sub_1C0221110@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x756F724764656546, 0xEC00000067615470), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v16);
    sub_1BFC773DC(v16, (uint64_t)v17);
    sub_1BFC66384((uint64_t)v17, (uint64_t)v16);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB872200);
    if (swift_dynamicCast())
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      *(unsigned char *)(a1 + 16) = v15;
    }
    else
    {
      sub_1C022437C();
      swift_allocError();
      uint64_t v12 = v11;
      strcpy((char *)v11, "FeedGroupTag");
      *(unsigned char *)(v11 + 13) = 0;
      *(_WORD *)(v11 + 14) = -5120;
      sub_1BFC66384((uint64_t)v17, v11 + 16);
      *(unsigned char *)(v12 + 56) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
  }
  else
  {
    sub_1C022437C();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C00B152C(v9);
    swift_bridgeObjectRelease();
    strcpy((char *)v8, "FeedGroupTag");
    *(unsigned char *)(v8 + 13) = 0;
    *(_WORD *)(v8 + 14) = -5120;
    *(void *)(v8 + 16) = v10;
    *(unsigned char *)(v8 + 56) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C02212C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x7A7A755064656546, 0xEE0065707954656CLL), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v3 + 56) + 40 * v4, (uint64_t)&v15);
    sub_1BFC773DC(&v15, (uint64_t)v21);
    sub_1BFC66384((uint64_t)v21, (uint64_t)v20);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB872200);
    if (swift_dynamicCast())
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      char v7 = v16;
      uint64_t v8 = v18;
      *(_OWORD *)a1 = v15;
      *(unsigned char *)(a1 + 16) = v7 & 1;
      *(_OWORD *)(a1 + 24) = v17;
      *(void *)(a1 + 40) = v8;
      *(_OWORD *)(a1 + 48) = v19;
    }
    else
    {
      sub_1C022437C();
      swift_allocError();
      uint64_t v14 = v13;
      strcpy(v13, "FeedPuzzleType");
      v13[15] = -18;
      sub_1BFC66384((uint64_t)v21, (uint64_t)(v13 + 16));
      v14[56] = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
  }
  else
  {
    sub_1C022437C();
    swift_allocError();
    uint64_t v10 = v9;
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_1C00B152C(v11);
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "FeedPuzzleType");
    *(unsigned char *)(v10 + 15) = -18;
    *(void *)(v10 + 16) = v12;
    *(unsigned char *)(v10 + 56) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C02214A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for FormatDecorationContext() + 44));
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_1BFEF2D8C(0x726F705364656546, 0xEF746E6576457374), (v5 & 1) != 0))
  {
    sub_1BFC66384(*(void *)(v3 + 56) + 40 * v4, (uint64_t)v17);
    sub_1BFC773DC(v17, (uint64_t)v18);
    sub_1BFC66384((uint64_t)v18, (uint64_t)v17);
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB872200);
    if (swift_dynamicCast())
    {
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      *(void *)a1 = v13;
      *(_OWORD *)(a1 + 8) = v14;
      *(void *)(a1 + 24) = v15;
      *(unsigned char *)(a1 + 32) = v16 & 1;
    }
    else
    {
      sub_1C022437C();
      swift_allocError();
      uint64_t v12 = v11;
      *uint64_t v11 = 0x726F705364656546;
      v11[1] = 0xEF746E6576457374;
      sub_1BFC66384((uint64_t)v18, (uint64_t)(v11 + 2));
      *((unsigned char *)v12 + 56) = 1;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
  }
  else
  {
    sub_1C022437C();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C00B152C(v9);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v8 = 0x726F705364656546;
    *(void *)(v8 + 8) = 0xEF746E6576457374;
    *(void *)(v8 + 16) = v10;
    *(unsigned char *)(v8 + 56) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C0221678(void **a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_1C063648C(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  uint64_t result = sub_1C02216E4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C02216E4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_150;
    }
    if (v4) {
      return sub_1C0222154(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_158;
  }
  uint64_t v120 = result;
  if (v4 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v4 != 1)
    {
      unint64_t v14 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v10 = a1;
LABEL_115:
      uint64_t v119 = v9;
      if (v14 >= 2)
      {
        uint64_t v111 = *v10;
        do
        {
          unint64_t v112 = v14 - 2;
          if (v14 < 2) {
            goto LABEL_145;
          }
          if (!v111) {
            goto LABEL_157;
          }
          uint64_t v113 = v13;
          uint64_t v114 = v13 + 32;
          uint64_t v115 = *(void *)&v13[16 * v112 + 32];
          uint64_t v116 = *(void *)&v13[16 * v14 + 24];
          sub_1C0222394((char *)(v111 + 40 * v115), (char *)(v111 + 40 * *(void *)&v114[16 * v14 - 16]), v111 + 40 * v116, __dst);
          if (v2) {
            break;
          }
          if (v116 < v115) {
            goto LABEL_146;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v113 = sub_1C063604C((uint64_t)v113);
          }
          if (v112 >= *((void *)v113 + 2)) {
            goto LABEL_147;
          }
          id v117 = &v113[16 * v112 + 32];
          *(void *)id v117 = v115;
          *((void *)v117 + 1) = v116;
          unint64_t v118 = *((void *)v113 + 2);
          if (v14 > v118) {
            goto LABEL_148;
          }
          uint64_t v13 = v113;
          memmove(&v113[16 * v14 + 16], &v113[16 * v14 + 32], 16 * (v118 - v14));
          *((void *)v113 + 2) = v118 - 1;
          unint64_t v14 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_126:
      swift_bridgeObjectRelease();
      *(void *)(v119 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v119 = MEMORY[0x1E4FBC860];
    uint64_t v128 = v1;
  }
  else
  {
    uint64_t v128 = v1;
    uint64_t v7 = v6 >> 1;
    sub_1C00BB3B4();
    uint64_t v8 = sub_1C151ECCC();
    *(void *)(v8 + 16) = v7;
    uint64_t v119 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = a1;
  uint64_t v11 = 0;
  uint64_t v12 = v130;
  uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v137 = v130;
  uint64_t v129 = a1;
  while (1)
  {
    uint64_t v15 = v11;
    uint64_t v16 = v11 + 1;
    if (v11 + 1 < v4)
    {
      uint64_t v17 = *v10;
      sub_1C003E258(*v10 + 40 * v16, (uint64_t)&v135, (uint64_t (*)(void))sub_1C00BB3B4);
      uint64_t v121 = v17;
      sub_1C003E258(v17 + 40 * v15, (uint64_t)&v133, (uint64_t (*)(void))sub_1C00BB3B4);
      uint64_t v131 = v135;
      sub_1BFF6A008((uint64_t)v136, (uint64_t)v132);
      uint64_t v18 = sub_1C151E62C();
      uint64_t v20 = v19;
      sub_1BFF6A008((uint64_t)v134, (uint64_t)v12);
      if (v18 == sub_1C151E62C() && v20 == v21) {
        int v124 = 0;
      }
      else {
        int v124 = sub_1C1520A9C();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v132);
      sub_1C003E100((uint64_t)&v133, (uint64_t (*)(void))sub_1C00BB3B4);
      sub_1C003E100((uint64_t)&v135, (uint64_t (*)(void))sub_1C00BB3B4);
      uint64_t v16 = v15 + 2;
      if (v15 + 2 < v4)
      {
        uint64_t v22 = v121 + 40 * v15 + 40;
        while (1)
        {
          uint64_t v23 = v4;
          uint64_t v24 = v16;
          sub_1C003E258(v22 + 40, (uint64_t)&v135, (uint64_t (*)(void))sub_1C00BB3B4);
          sub_1C003E258(v22, (uint64_t)&v133, (uint64_t (*)(void))sub_1C00BB3B4);
          uint64_t v131 = v135;
          sub_1BFF6A008((uint64_t)v136, (uint64_t)v132);
          uint64_t v25 = sub_1C151E62C();
          uint64_t v27 = v26;
          sub_1BFF6A008((uint64_t)v134, (uint64_t)v137);
          BOOL v29 = v25 == sub_1C151E62C() && v27 == v28;
          int v30 = v29 ? 0 : sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v137);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v132);
          sub_1C003E100((uint64_t)&v133, (uint64_t (*)(void))sub_1C00BB3B4);
          sub_1C003E100((uint64_t)&v135, (uint64_t (*)(void))sub_1C00BB3B4);
          if ((v124 ^ v30)) {
            break;
          }
          uint64_t v16 = v24 + 1;
          v22 += 40;
          uint64_t v4 = v23;
          if (v23 == v24 + 1)
          {
            uint64_t v16 = v23;
            goto LABEL_33;
          }
        }
        uint64_t v16 = v24;
        uint64_t v4 = v23;
LABEL_33:
        uint64_t v12 = v137;
      }
      uint64_t v10 = v129;
      if (v124)
      {
        if (v16 < v15) {
          goto LABEL_151;
        }
        if (v15 < v16)
        {
          uint64_t v31 = v121 + 40 * v16 - 40;
          long long v32 = (long long *)(v121 + 40 * v15);
          uint64_t v33 = v16;
          uint64_t v34 = v15;
          do
          {
            if (v34 != --v33)
            {
              if (!v121) {
                goto LABEL_156;
              }
              long long v35 = *v32;
              long long v36 = v32[1];
              uint64_t v37 = *((void *)v32 + 4);
              uint64_t v38 = *(void *)(v31 + 32);
              long long v39 = *(_OWORD *)(v31 + 16);
              *long long v32 = *(_OWORD *)v31;
              v32[1] = v39;
              *((void *)v32 + 4) = v38;
              *(void *)(v31 + 32) = v37;
              *(_OWORD *)uint64_t v31 = v35;
              *(_OWORD *)(v31 + 16) = v36;
            }
            ++v34;
            v31 -= 40;
            long long v32 = (long long *)((char *)v32 + 40);
          }
          while (v34 < v33);
        }
      }
    }
    if (v16 >= v4) {
      goto LABEL_66;
    }
    if (__OFSUB__(v16, v15)) {
      goto LABEL_149;
    }
    if (v16 - v15 >= v120) {
      goto LABEL_66;
    }
    if (__OFADD__(v15, v120)) {
      goto LABEL_152;
    }
    uint64_t v40 = v15 + v120 >= v4 ? v4 : v15 + v120;
    if (v40 < v15) {
      break;
    }
    if (v16 != v40)
    {
      uint64_t v122 = v13;
      uint64_t v123 = v15;
      uint64_t v41 = 40 * v16;
      uint64_t v125 = v40;
      do
      {
        uint64_t v42 = v15;
        uint64_t v43 = v41;
        while (1)
        {
          uint64_t v44 = v16;
          uint64_t v45 = *v10 + v43;
          sub_1C003E258(v45, (uint64_t)&v135, (uint64_t (*)(void))sub_1C00BB3B4);
          sub_1C003E258(v45 - 40, (uint64_t)&v133, (uint64_t (*)(void))sub_1C00BB3B4);
          uint64_t v131 = v135;
          sub_1BFF6A008((uint64_t)v136, (uint64_t)v132);
          uint64_t v46 = sub_1C151E62C();
          uint64_t v48 = v47;
          uint64_t v49 = (uint64_t)v137;
          sub_1BFF6A008((uint64_t)v134, (uint64_t)v137);
          if (v46 == sub_1C151E62C() && v48 == v50) {
            break;
          }
          char v52 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1(v49);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v132);
          sub_1C003E100((uint64_t)&v133, (uint64_t (*)(void))sub_1C00BB3B4);
          sub_1C003E100((uint64_t)&v135, (uint64_t (*)(void))sub_1C00BB3B4);
          if ((v52 & 1) == 0) {
            goto LABEL_54;
          }
          uint64_t v10 = v129;
          if (!*v129) {
            goto LABEL_154;
          }
          uint64_t v16 = v44;
          uint64_t v53 = *v129 + v43;
          uint64_t v54 = *(void *)(v53 + 32);
          long long v56 = *(_OWORD *)v53;
          long long v55 = *(_OWORD *)(v53 + 16);
          long long v57 = *(_OWORD *)(v53 - 24);
          *(_OWORD *)uint64_t v53 = *(_OWORD *)(v53 - 40);
          *(_OWORD *)(v53 + 16) = v57;
          *(void *)(v53 + 32) = *(void *)(v53 - 8);
          *(_OWORD *)(v53 - 40) = v56;
          *(_OWORD *)(v53 - 24) = v55;
          *(void *)(v53 - 8) = v54;
          v43 -= 40;
          if (v44 == ++v42) {
            goto LABEL_55;
          }
        }
        swift_bridgeObjectRelease_n();
        __swift_destroy_boxed_opaque_existential_1(v49);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v132);
        sub_1C003E100((uint64_t)&v133, (uint64_t (*)(void))sub_1C00BB3B4);
        sub_1C003E100((uint64_t)&v135, (uint64_t (*)(void))sub_1C00BB3B4);
LABEL_54:
        uint64_t v16 = v44;
        uint64_t v10 = v129;
LABEL_55:
        ++v16;
        v41 += 40;
        uint64_t v15 = v123;
      }
      while (v16 != v125);
      uint64_t v16 = v125;
      uint64_t v12 = v137;
      uint64_t v13 = v122;
    }
LABEL_66:
    if (v16 < v15) {
      goto LABEL_144;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_1C0634CC8(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v59 = *((void *)v13 + 2);
    unint64_t v58 = *((void *)v13 + 3);
    unint64_t v14 = v59 + 1;
    uint64_t v10 = v129;
    if (v59 >= v58 >> 1)
    {
      uint64_t v13 = sub_1C0634CC8((char *)(v58 > 1), v59 + 1, 1, v13);
      uint64_t v10 = v129;
    }
    *((void *)v13 + 2) = v14;
    uint64_t v60 = v13 + 32;
    int v61 = &v13[16 * v59 + 32];
    *(void *)int v61 = v15;
    *((void *)v61 + 1) = v16;
    uint64_t v126 = v16;
    if (v59)
    {
      while (1)
      {
        unint64_t v62 = v14 - 1;
        if (v14 >= 4)
        {
          long long v67 = &v60[16 * v14];
          uint64_t v68 = *((void *)v67 - 8);
          uint64_t v69 = *((void *)v67 - 7);
          BOOL v73 = __OFSUB__(v69, v68);
          uint64_t v70 = v69 - v68;
          if (v73) {
            goto LABEL_133;
          }
          uint64_t v72 = *((void *)v67 - 6);
          uint64_t v71 = *((void *)v67 - 5);
          BOOL v73 = __OFSUB__(v71, v72);
          uint64_t v65 = v71 - v72;
          char v66 = v73;
          if (v73) {
            goto LABEL_134;
          }
          unint64_t v74 = v14 - 2;
          uint64_t v75 = &v60[16 * v14 - 32];
          uint64_t v77 = *(void *)v75;
          uint64_t v76 = *((void *)v75 + 1);
          BOOL v73 = __OFSUB__(v76, v77);
          uint64_t v78 = v76 - v77;
          if (v73) {
            goto LABEL_136;
          }
          BOOL v73 = __OFADD__(v65, v78);
          uint64_t v79 = v65 + v78;
          if (v73) {
            goto LABEL_139;
          }
          if (v79 >= v70)
          {
            uint64_t v97 = &v60[16 * v62];
            uint64_t v99 = *(void *)v97;
            uint64_t v98 = *((void *)v97 + 1);
            BOOL v73 = __OFSUB__(v98, v99);
            uint64_t v100 = v98 - v99;
            if (v73) {
              goto LABEL_143;
            }
            BOOL v90 = v65 < v100;
            goto LABEL_103;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v91 = *((void *)v13 + 4);
            uint64_t v92 = *((void *)v13 + 5);
            BOOL v73 = __OFSUB__(v92, v91);
            uint64_t v84 = v92 - v91;
            char v85 = v73;
            goto LABEL_97;
          }
          uint64_t v64 = *((void *)v13 + 4);
          uint64_t v63 = *((void *)v13 + 5);
          BOOL v73 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          char v66 = v73;
        }
        if (v66) {
          goto LABEL_135;
        }
        unint64_t v74 = v14 - 2;
        uint64_t v80 = &v60[16 * v14 - 32];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v83 = __OFSUB__(v81, v82);
        uint64_t v84 = v81 - v82;
        char v85 = v83;
        if (v83) {
          goto LABEL_138;
        }
        uint64_t v86 = &v60[16 * v62];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v73 = __OFSUB__(v87, v88);
        uint64_t v89 = v87 - v88;
        if (v73) {
          goto LABEL_141;
        }
        if (__OFADD__(v84, v89)) {
          goto LABEL_142;
        }
        if (v84 + v89 >= v65)
        {
          BOOL v90 = v65 < v89;
LABEL_103:
          if (v90) {
            unint64_t v62 = v74;
          }
          goto LABEL_105;
        }
LABEL_97:
        if (v85) {
          goto LABEL_137;
        }
        unint64_t v93 = &v60[16 * v62];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v73 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v73) {
          goto LABEL_140;
        }
        if (v96 < v84) {
          goto LABEL_15;
        }
LABEL_105:
        unint64_t v101 = v62 - 1;
        if (v62 - 1 >= v14)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!*v10) {
          goto LABEL_155;
        }
        uint64_t v102 = v13;
        uint64_t v103 = v10;
        uint64_t v104 = &v60[16 * v101];
        uint64_t v105 = *(void *)v104;
        uint64_t v106 = v60;
        unint64_t v107 = v62;
        uint64_t v108 = &v60[16 * v62];
        uint64_t v109 = *((void *)v108 + 1);
        sub_1C0222394((char *)(*v10 + 40 * *(void *)v104), (char *)(*v10 + 40 * *(void *)v108), *v10 + 40 * v109, __dst);
        if (v128) {
          goto LABEL_126;
        }
        if (v109 < v105) {
          goto LABEL_130;
        }
        if (v107 > *((void *)v102 + 2)) {
          goto LABEL_131;
        }
        *(void *)uint64_t v104 = v105;
        *(void *)&v106[16 * v101 + 8] = v109;
        unint64_t v110 = *((void *)v102 + 2);
        if (v107 >= v110) {
          goto LABEL_132;
        }
        uint64_t v13 = v102;
        unint64_t v14 = v110 - 1;
        memmove(v108, v108 + 16, 16 * (v110 - 1 - v107));
        uint64_t v60 = v106;
        *((void *)v102 + 2) = v110 - 1;
        uint64_t v10 = v103;
        uint64_t v12 = v137;
        if (v110 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_15:
    uint64_t v4 = v10[1];
    uint64_t v11 = v126;
    if (v126 >= v4)
    {
      uint64_t v2 = v128;
      uint64_t v9 = v119;
      goto LABEL_115;
    }
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C0222154(uint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v21 = result;
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    BOOL v29 = &v28;
    uint64_t v6 = 40 * a3;
LABEL_6:
    uint64_t v7 = v21;
    uint64_t v22 = v6;
    while (1)
    {
      uint64_t v8 = *a4 + v6;
      sub_1C003E258(v8, (uint64_t)&v27, (uint64_t (*)(void))sub_1C00BB3B4);
      sub_1C003E258(v8 - 40, (uint64_t)&v25, (uint64_t (*)(void))sub_1C00BB3B4);
      v23[4] = v27;
      sub_1BFF6A008((uint64_t)v29, (uint64_t)v24);
      uint64_t v9 = sub_1C151E62C();
      uint64_t v11 = v10;
      sub_1BFF6A008((uint64_t)&v26, (uint64_t)v23);
      if (v9 == sub_1C151E62C() && v11 == v12)
      {
        swift_bridgeObjectRelease_n();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        sub_1C003E100((uint64_t)&v25, (uint64_t (*)(void))sub_1C00BB3B4);
        uint64_t result = sub_1C003E100((uint64_t)&v27, (uint64_t (*)(void))sub_1C00BB3B4);
LABEL_5:
        ++v5;
        uint64_t v6 = v22 + 40;
        if (v5 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v14 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      sub_1C003E100((uint64_t)&v25, (uint64_t (*)(void))sub_1C00BB3B4);
      uint64_t result = sub_1C003E100((uint64_t)&v27, (uint64_t (*)(void))sub_1C00BB3B4);
      if ((v14 & 1) == 0) {
        goto LABEL_5;
      }
      if (!*a4) {
        break;
      }
      uint64_t v15 = *a4 + v6;
      uint64_t v16 = *(void *)(v15 + 32);
      long long v18 = *(_OWORD *)v15;
      long long v17 = *(_OWORD *)(v15 + 16);
      long long v19 = *(_OWORD *)(v15 - 24);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)(v15 - 40);
      *(_OWORD *)(v15 + 16) = v19;
      *(void *)(v15 + 32) = *(void *)(v15 - 8);
      *(_OWORD *)(v15 - 40) = v18;
      *(_OWORD *)(v15 - 24) = v17;
      *(void *)(v15 - 8) = v16;
      v6 -= 40;
      if (v5 == ++v7) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0222394(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  int64_t v7 = a2 - __src;
  int64_t v8 = (a2 - __src) / 40;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 40;
  long long v57 = __src;
  long long v56 = __dst;
  if (v8 >= v10)
  {
    if (v9 < -39) {
      goto LABEL_53;
    }
    if (__dst != a2 || &a2[40 * v10] <= __dst) {
      memmove(__dst, a2, 40 * v10);
    }
    uint64_t v25 = &v4[40 * v10];
    long long v55 = v25;
    long long v57 = v5;
    if (__src >= v5 || v9 < 40)
    {
LABEL_52:
      sub_1C0635248((void **)&v57, (const void **)&v56, &v55);
      return 1;
    }
    uint64_t v26 = v50;
    unint64_t v27 = a3 - 40;
    uint64_t v46 = __src;
    while (1)
    {
      sub_1C003E258((uint64_t)(v25 - 40), (uint64_t)&v53, (uint64_t (*)(void))sub_1C00BB3B4);
      int v30 = v5 - 40;
      sub_1C003E258((uint64_t)(v5 - 40), (uint64_t)&v51, (uint64_t (*)(void))sub_1C00BB3B4);
      uint64_t v49 = v53;
      uint64_t v32 = (uint64_t)v26;
      sub_1BFF6A008((uint64_t)v54, (uint64_t)v26);
      uint64_t v33 = sub_1C151E62C();
      uint64_t v35 = v34;
      sub_1BFF6A008((uint64_t)v52, (uint64_t)v48);
      BOOL v37 = v33 == sub_1C151E62C() && v35 == v36;
      char v38 = v37 ? 0 : sub_1C1520A9C();
      long long v39 = (char *)(v27 + 40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      uint64_t v26 = (unsigned char *)v32;
      __swift_destroy_boxed_opaque_existential_1(v32);
      sub_1C003E100((uint64_t)&v51, (uint64_t (*)(void))sub_1C00BB3B4);
      sub_1C003E100((uint64_t)&v53, (uint64_t (*)(void))sub_1C00BB3B4);
      if (v38) {
        break;
      }
      uint64_t v42 = v55;
      uint64_t v25 = v55 - 40;
      v55 -= 40;
      if (v39 < v42 || v27 >= (unint64_t)v42)
      {
        long long v28 = *(_OWORD *)v25;
        long long v29 = *(_OWORD *)(v42 - 24);
        *(void *)(v27 + 32) = *((void *)v42 - 1);
        *(_OWORD *)unint64_t v27 = v28;
        *(_OWORD *)(v27 + 16) = v29;
        int v30 = v5;
        goto LABEL_34;
      }
      uint64_t v31 = v46;
      if (v39 != v42)
      {
        long long v43 = *(_OWORD *)v25;
        long long v44 = *(_OWORD *)(v42 - 24);
        *(void *)(v27 + 32) = *((void *)v42 - 1);
        *(_OWORD *)unint64_t v27 = v43;
        *(_OWORD *)(v27 + 16) = v44;
      }
      int v30 = v5;
      if (v25 <= v4) {
        goto LABEL_52;
      }
LABEL_35:
      v27 -= 40;
      uint64_t v5 = v30;
      if (v30 <= v31) {
        goto LABEL_52;
      }
    }
    if (v39 != v5 || v27 >= (unint64_t)v5)
    {
      long long v40 = *(_OWORD *)v30;
      long long v41 = *(_OWORD *)(v5 - 24);
      *(void *)(v27 + 32) = *((void *)v5 - 1);
      *(_OWORD *)unint64_t v27 = v40;
      *(_OWORD *)(v27 + 16) = v41;
    }
    v57 -= 40;
    uint64_t v25 = v55;
LABEL_34:
    uint64_t v31 = v46;
    if (v25 <= v4) {
      goto LABEL_52;
    }
    goto LABEL_35;
  }
  if (v7 >= -39)
  {
    if (__dst != __src || &__src[40 * v8] <= __dst) {
      memmove(__dst, __src, 40 * v8);
    }
    unint64_t v11 = (unint64_t)&v4[40 * v8];
    long long v55 = (char *)v11;
    if ((unint64_t)v5 < a3 && v7 >= 40)
    {
      while (1)
      {
        sub_1C003E258((uint64_t)v5, (uint64_t)&v53, (uint64_t (*)(void))sub_1C00BB3B4);
        sub_1C003E258((uint64_t)v4, (uint64_t)&v51, (uint64_t (*)(void))sub_1C00BB3B4);
        uint64_t v49 = v53;
        sub_1BFF6A008((uint64_t)v54, (uint64_t)v50);
        uint64_t v12 = sub_1C151E62C();
        uint64_t v14 = v13;
        sub_1BFF6A008((uint64_t)v52, (uint64_t)v48);
        if (v12 == sub_1C151E62C() && v14 == v15) {
          break;
        }
        char v17 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
        sub_1C003E100((uint64_t)&v51, (uint64_t (*)(void))sub_1C00BB3B4);
        sub_1C003E100((uint64_t)&v53, (uint64_t (*)(void))sub_1C00BB3B4);
        if ((v17 & 1) == 0) {
          goto LABEL_18;
        }
        long long v18 = v57;
        unint64_t v19 = (unint64_t)(v5 + 40);
        if (v57 >= v5 && (unint64_t)v57 < v19 && v57 == v5)
        {
          long long v18 = v5;
        }
        else
        {
          long long v20 = *(_OWORD *)v5;
          long long v21 = *((_OWORD *)v5 + 1);
          *((void *)v57 + 4) = *((void *)v5 + 4);
          *long long v18 = v20;
          v18[1] = v21;
        }
LABEL_22:
        long long v57 = (char *)v18 + 40;
        uint64_t v4 = v56;
        if ((unint64_t)v56 < v11)
        {
          uint64_t v5 = (char *)v19;
          if (v19 < a3) {
            continue;
          }
        }
        goto LABEL_52;
      }
      swift_bridgeObjectRelease_n();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      sub_1C003E100((uint64_t)&v51, (uint64_t (*)(void))sub_1C00BB3B4);
      sub_1C003E100((uint64_t)&v53, (uint64_t (*)(void))sub_1C00BB3B4);
LABEL_18:
      long long v18 = v57;
      uint64_t v22 = v56 + 40;
      if (v57 != v56 || v57 >= v22)
      {
        long long v23 = *(_OWORD *)v56;
        long long v24 = *((_OWORD *)v56 + 1);
        *((void *)v57 + 4) = *((void *)v56 + 4);
        *long long v18 = v23;
        v18[1] = v24;
      }
      long long v56 = v22;
      unint64_t v19 = (unint64_t)v5;
      goto LABEL_22;
    }
    goto LABEL_52;
  }
LABEL_53:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

unint64_t sub_1C0222908(uint64_t a1)
{
  unint64_t result = sub_1C0084C58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0222930()
{
  unint64_t result = qword_1EB890EC0;
  if (!qword_1EB890EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890EC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFont()
{
  return &type metadata for FormatFont;
}

void sub_1C0222994(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C02229FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void *sub_1C0222A44(void *a1)
{
  uint64_t v2 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v95 = *(void *)(v2 - 8);
  uint64_t v96 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&double v6 = MEMORY[0x1F4188790](v5).n128_u64[0];
  uint64_t v8 = (char *)&v88 - v7;
  id v9 = objc_msgSend(a1, sel_fontDescriptor, v6);
  id v10 = objc_msgSend(v9, sel_fontAttributes);

  type metadata accessor for AttributeName(0);
  sub_1BFFBA724((unint64_t *)&qword_1EB880D80, type metadata accessor for AttributeName);
  sub_1C151E33C();

  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C00B2164(v11);
  swift_bridgeObjectRelease();
  *(void *)&v105[0] = v12;
  sub_1C0221678((void **)v105);
  id v91 = a1;
  swift_bridgeObjectRelease();
  unint64_t v13 = *(void *)&v105[0];
  int64_t v14 = *(void *)(*(void *)&v105[0] + 16);
  if (v14)
  {
    uint64_t v102 = MEMORY[0x1E4FBC860];
    sub_1C05F6874(0, v14, 0);
    unint64_t v90 = v13;
    uint64_t v15 = v13 + 32;
    uint64_t inited = (uint64_t)v103 + 8;
    unint64_t v93 = v100;
    uint64_t v94 = (uint64_t)v105 + 8;
    *(void *)&long long v92 = v4 + 2;
    do
    {
      uint64_t v16 = (uint64_t)v8;
      sub_1C003E258(v15, (uint64_t)v105, (uint64_t (*)(void))sub_1C00BB3B4);
      *(void *)&v103[0] = *(void *)&v105[0];
      uint64_t v17 = v94;
      sub_1BFF6A008(v94, inited);
      uint64_t v18 = sub_1C151E62C();
      uint64_t v20 = v19;
      uint64_t v21 = v17;
      uint64_t v22 = v93;
      sub_1BFF6A008(v21, (uint64_t)v93);
      sub_1BFF993A8(v22, v101);
      sub_1C0223628((uint64_t)v101, (uint64_t)v99);
      if (v100[2])
      {
        sub_1C0223798((uint64_t)v99, (uint64_t)v98);
        sub_1C02236B0((uint64_t)v101);
        uint64_t v23 = v96;
        long long v24 = (_OWORD *)((char *)v4 + *(int *)(v96 + 24));
        long long v25 = v98[1];
        *long long v24 = v98[0];
        v24[1] = v25;
        uint64_t v26 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v24, 0, 1, v26);
        *uint64_t v4 = v18;
        v4[1] = v20;
        uint64_t v27 = v92;
        *(void *)long long v92 = 0;
        *(void *)(v27 + 8) = 0;
        long long v28 = (char *)v4 + *(int *)(v23 + 28);
        *(void *)long long v28 = 0;
        *((void *)v28 + 1) = 0;
        v28[16] = -1;
        sub_1C02237F4((uint64_t)v99);
      }
      else
      {
        sub_1C02236B0((uint64_t)v101);
        uint64_t v29 = v96;
        int v30 = (char *)v4 + *(int *)(v96 + 24);
        uint64_t v31 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
        *uint64_t v4 = v18;
        v4[1] = v20;
        uint64_t v32 = v92;
        *(void *)long long v92 = 0;
        *(void *)(v32 + 8) = 0;
        uint64_t v33 = (char *)v4 + *(int *)(v29 + 28);
        *(void *)uint64_t v33 = 0;
        *((void *)v33 + 1) = 0;
        v33[16] = -1;
      }
      uint64_t v8 = (char *)v16;
      sub_1C0223730((uint64_t)v4, v16, type metadata accessor for FormatInspectionItem);
      __swift_destroy_boxed_opaque_existential_1(inited);
      sub_1C003E100((uint64_t)v105, (uint64_t (*)(void))sub_1C00BB3B4);
      uint64_t v34 = v102;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F6874(0, *(void *)(v34 + 16) + 1, 1);
        uint64_t v34 = v102;
      }
      unint64_t v36 = *(void *)(v34 + 16);
      unint64_t v35 = *(void *)(v34 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_1C05F6874(v35 > 1, v36 + 1, 1);
        uint64_t v34 = v102;
      }
      *(void *)(v34 + 16) = v36 + 1;
      sub_1C0223730(v16, v34+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(void *)(v95 + 72) * v36, type metadata accessor for FormatInspectionItem);
      v15 += 40;
      --v14;
    }
    while (v14);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  sub_1C01B2D70();
  uint64_t inited = swift_initStackObject();
  long long v92 = xmmword_1C1529AE0;
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1C02243D0(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
  sub_1C0181BEC(0);
  uint64_t v94 = v37;
  unint64_t v38 = (*(unsigned __int8 *)(*(void *)(v37 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v37 - 8) + 80);
  uint64_t v39 = *(void *)(*(void *)(v37 - 8) + 72);
  uint64_t v40 = swift_allocObject();
  unint64_t v93 = (void *)v40;
  *(_OWORD *)(v40 + 16) = xmmword_1C152C610;
  long long v41 = (void *)(v40 + v38);
  unint64_t v90 = v40 + v38;
  id v42 = v91;
  id v43 = objc_msgSend(v91, sel_familyName);
  uint64_t v44 = sub_1C151E62C();
  uint64_t v46 = v45;

  sub_1C0433600(0x4E20796C696D6146, 0xEB00000000656D61, v44, v46, v41);
  uint64_t v47 = v95 + 56;
  uint64_t v48 = *(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56);
  v48(v41, 0, 1, v96);
  uint64_t v49 = (void *)((char *)v41 + v39);
  id v50 = objc_msgSend(v42, sel_fontName);
  uint64_t v51 = sub_1C151E62C();
  uint64_t v53 = v52;

  sub_1C0433600(0x6D614E20746E6F46, 0xE900000000000065, v51, v53, v49);
  uint64_t v54 = v96;
  v48(v49, 0, 1, v96);
  uint64_t v95 = v47;
  unint64_t v55 = v90;
  objc_msgSend(v42, sel_pointSize);
  sub_1C042F1BC(0x695320746E696F50, 0xEA0000000000657ALL, v56, 0, (void *)(v55 + 2 * v39));
  v48((void *)(v55 + 2 * v39), 0, 1, v54);
  uint64_t v57 = v39;
  unint64_t v58 = (void *)(v55 + 3 * v39);
  unint64_t v59 = v55;
  objc_msgSend(v42, sel_lineHeight);
  sub_1C042F1BC(0x69654820656E694CLL, 0xEB00000000746867, v60, 0, v58);
  uint64_t v61 = v54;
  v48(v58, 0, 1, v54);
  uint64_t v62 = 4 * v57;
  uint64_t v63 = v57;
  uint64_t v64 = (void *)(v59 + 4 * v57);
  id v65 = v91;
  objc_msgSend(v91, sel_ascender);
  sub_1C042F1BC(0x7265646E65637341, 0xE800000000000000, v66, 0, v64);
  v48(v64, 0, 1, v61);
  long long v67 = (void *)(v59 + v62 + v63);
  objc_msgSend(v65, sel_descender);
  sub_1C042F1BC(0x65646E6563736544, 0xE900000000000072, v68, 0, v67);
  v48(v67, 0, 1, v61);
  uint64_t v69 = v48;
  uint64_t v89 = (void (*)(unint64_t, void, uint64_t, uint64_t))v48;
  uint64_t v70 = (void *)(v59 + 6 * v63);
  id v71 = v91;
  objc_msgSend(v91, sel_capHeight);
  sub_1C042F1BC(0x6769654820706143, 0xEA00000000007468, v72, 0, v70);
  v69(v70, 0, 1, v61);
  objc_msgSend(v71, sel_leading);
  sub_1C042F1BC(0x676E696461654CLL, 0xE700000000000000, v73, 0, (void *)(v59 + 7 * v63));
  unint64_t v74 = v89;
  v89(v59 + 7 * v63, 0, 1, v61);
  objc_msgSend(v71, sel_xHeight);
  sub_1C042F1BC(0x74686769654878, 0xE700000000000000, v75, 0, (void *)(v59 + 8 * v63));
  v74(v59 + 8 * v63, 0, 1, v61);
  uint64_t v76 = (void *)(v59 + 9 * v63);
  sub_1C0222994(0, (unint64_t *)&qword_1EA1974C0, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBBE00]);
  uint64_t v77 = swift_initStackObject();
  *(_OWORD *)(v77 + 16) = v92;
  uint64_t v78 = sub_1C0233D40(v34);
  swift_bridgeObjectRelease();
  sub_1C09BCFA4(0x7475626972747441, 0xEA00000000007365, 0, 0, v78, v103);
  swift_bridgeObjectRelease();
  *(void *)(v77 + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v77 + 64) = &off_1F1BDEC90;
  uint64_t v79 = swift_allocObject();
  *(void *)(v77 + 32) = v79;
  *(void *)(v79 + 48) = v104;
  long long v80 = v103[1];
  *(_OWORD *)(v79 + 16) = v103[0];
  *(_OWORD *)(v79 + 32) = v80;
  uint64_t v81 = sub_1C0233FC8(v77);
  swift_setDeallocating();
  sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
  swift_arrayDestroy();
  uint64_t v82 = sub_1C131B79C(v81);
  swift_bridgeObjectRelease();
  sub_1C042F458(0x7475626972747441, 0xEA00000000007365, (uint64_t)v82, 0, 0, v76);
  v74((unint64_t)v76, 0, 1, v96);
  sub_1C09BCFA4(0x74654D20746E6F46, 0xEC00000073636972, 0, 0, (uint64_t)v93, v105);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v83 = inited;
  *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(void *)(v83 + 64) = &off_1F1BDEC90;
  uint64_t v84 = swift_allocObject();
  *(void *)(v83 + 32) = v84;
  *(void *)(v84 + 48) = v106;
  long long v85 = v105[1];
  *(_OWORD *)(v84 + 16) = v105[0];
  *(_OWORD *)(v84 + 32) = v85;
  uint64_t v86 = sub_1C131B79C(v83);
  swift_setDeallocating();
  sub_1C0222994(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0, (uint64_t)&protocol descriptor for FormatInspectionGroupable, MEMORY[0x1E4FBB718]);
  swift_arrayDestroy();
  return v86;
}

uint64_t sub_1C0223628(uint64_t a1, uint64_t a2)
{
  sub_1BFE9DDD8(0, (unint64_t *)&qword_1EA1983A8, (uint64_t)&type metadata for FormatInspectionBinding, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02236B0(uint64_t a1)
{
  sub_1BFE9DDD8(0, (unint64_t *)&qword_1EA1983A8, (uint64_t)&type metadata for FormatInspectionBinding, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C0223730(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C0223798(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C02237F4(uint64_t a1)
{
  return a1;
}

void sub_1C0223848(uint64_t a1)
{
}

void sub_1C0223880(uint64_t a1)
{
}

void sub_1C02238B4()
{
  if (!qword_1EA1983C0)
  {
    sub_1BFE9DDD8(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1983C0);
    }
  }
}

uint64_t sub_1C0223948(uint64_t a1)
{
  sub_1C0222994(0, &qword_1EA1983D0, &qword_1EA1983C8, (uint64_t)&protocol descriptor for FormatBindingType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C02239D4()
{
  sub_1C0223B94(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56), (uint64_t (*)(void))sub_1C0223A4C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BFF61770, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0223A4C);
  return swift_deallocObject();
}

uint64_t sub_1C0223A4C(uint64_t a1, unint64_t a2)
{
  if (((a2 >> 59) & 2 | (a2 >> 2) & 1) != 3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C0223ACC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0223B28(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0223B94(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t, unint64_t, unint64_t), uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  switch(a6 >> 5)
  {
    case 1:
    case 4:
      uint64_t result = a7();
      break;
    case 3:
      uint64_t result = a8(result, a2, a3, a3 >> 8);
      break;
    case 5:
      uint64_t result = sub_1C0223C98(result, a2, a3, a4, a5, a6 & 1, a9);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0223C2C(uint64_t a1, unint64_t a2)
{
  if (((a2 >> 59) & 2 | (a2 >> 2) & 1) != 3)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0223C98(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (a6) {
    int v7 = 2;
  }
  else {
    int v7 = 0;
  }
  unsigned int v8 = v7 & 0xFFFFFFFE | (a2 >> 1) & 1;
  switch(v8)
  {
    case 2u:
      return a7(a2, a3, a4, a5);
    case 1u:
      return ((uint64_t (*)(uint64_t, unint64_t))a7)(result, a2 & 0xFFFFFFFFFFFFFFFDLL);
    case 0u:
      return ((uint64_t (*)(void))a7)();
  }
  return result;
}

uint64_t sub_1C0223CEC()
{
  sub_1C0223C98(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0223A4C);
  return swift_deallocObject();
}

uint64_t sub_1C0223D44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0223DA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0223DEC()
{
  sub_1BFDEB9E0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1C0223E2C()
{
  return objectdestroy_29Tm((void (*)(void, void, void, void, void, void, void))sub_1BFF01064);
}

uint64_t sub_1C0223E44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0223EA0()
{
  sub_1C0223EF4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), (uint64_t (*)(void))sub_1C002B840);
  return swift_deallocObject();
}

uint64_t sub_1C0223EF4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t (*a5)(void))
{
  unsigned int v5 = a4 >> 6;
  if (v5 == 2) {
    return ((uint64_t (*)(uint64_t, uint64_t, void))a5)(a2, a3, a4 & 0x3F);
  }
  if (v5 <= 1) {
    return a5();
  }
  return result;
}

uint64_t sub_1C0223F30()
{
  sub_1C0223A4C(*(void *)(v0 + 16), *(void *)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1C0223F6C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  switch((a3 >> 4) & 3)
  {
    case 1u:
    case 2u:
    case 3u:
      LOBYTE(a3) = a3 & 0xCF;
      break;
    default:
      return sub_1C0223FA8(a1, a2, a3);
  }
  return sub_1C0223FA8(a1, a2, a3);
}

uint64_t sub_1C0223FA8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BFE94AB4(a1, a2, a3 & 1);
}

uint64_t sub_1C0223FB0()
{
  return objectdestroy_29Tm((void (*)(void, void, void, void, void, void, void))sub_1C0224014);
}

uint64_t objectdestroy_29Tm(void (*a1)(void, void, void, void, void, void, void))
{
  a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64));
  return swift_deallocObject();
}

uint64_t sub_1C0224014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (!a7) {
    return sub_1BFF51C94(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1C0224024(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C0224080(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1C02240C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (!a7) {
    return sub_1BFF523A4(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1C02240D4(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4)
{
  if (a4 <= 3u) {
    return sub_1C02240E8(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1C02240E8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFDu) {
    return sub_1C0223FA8(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1C02240FC()
{
  sub_1C0224154(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
  return swift_deallocObject();
}

uint64_t sub_1C0224154(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  int v7 = (a4 >> 4) & 3;
  if (v7 == 3) {
    return sub_1C0223EF4(result, a2, a3, a4 & 0xCF, a6);
  }
  if (v7 == 2 || !v7)
  {
    return a5();
  }
  return result;
}

uint64_t sub_1C02241A4()
{
  sub_1C0224338(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64), (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
  return swift_deallocObject();
}

uint64_t sub_1C022422C(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4)
{
  if (a4 <= 3u) {
    return sub_1C0224240(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1C0224240(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFDu) {
    return sub_1C0224254(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1C0224254(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BFE94AD4(a1, a2, a3 & 1);
}

uint64_t sub_1C022425C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C02242B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0224338(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t (*a8)(void), uint64_t (*a9)(uint64_t, uint64_t, unint64_t, unint64_t), uint64_t (*a10)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))
{
  int v10 = a7 >> 4;
  if (v10 == 8) {
    return a10(result, a2, a3, a4, a5, a6, a7 & 0xF);
  }
  if (v10 == 3) {
    return a9(result, a2, a3, a3 >> 8);
  }
  if (!(a7 >> 4)) {
    return a8();
  }
  return result;
}

unint64_t sub_1C022437C()
{
  unint64_t result = qword_1EA1983D8;
  if (!qword_1EA1983D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1983D8);
  }
  return result;
}

void sub_1C02243D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C0224434()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = v0;
    sub_1BFE4DBE0();
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_1C1534B90;
    uint64_t v3 = self;
    *(void *)(v1 + 32) = objc_msgSend(v3, sel_systemBlueColor);
    *(void *)(v1 + 40) = objc_msgSend(v3, sel_systemRedColor);
    *(void *)(v1 + 48) = objc_msgSend(v3, sel_systemGreenColor);
    *(void *)(v1 + 56) = objc_msgSend(v3, sel_systemCyanColor);
    *(void *)(v1 + 64) = objc_msgSend(v3, sel_systemGrayColor);
    *(void *)(v1 + 72) = objc_msgSend(v3, sel_systemPinkColor);
    *(void *)(v1 + 80) = objc_msgSend(v3, sel_systemPurpleColor);
    *(void *)(v1 + 88) = objc_msgSend(v3, sel_systemMintColor);
    *(void *)(v1 + 96) = objc_msgSend(v3, sel_systemIndigoColor);
    *(void *)(v1 + 104) = objc_msgSend(v3, sel_systemOrangeColor);
    *(void *)(v1 + 112) = objc_msgSend(v3, sel_systemBrownColor);
    *(void *)(v1 + 120) = objc_msgSend(v3, sel_systemTealColor);
    sub_1C151EBEC();
    *(void *)(v2 + 24) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C0224624(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = swift_retain();
  unsigned int v5 = sub_1C13EC9B4(v4, v3);
  swift_endAccess();
  swift_release();
  if (v5) {
    goto LABEL_9;
  }
  unint64_t v6 = sub_1C0224434();
  if (v6 >> 62)
  {
    unint64_t v7 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if ((v7 & 0x8000000000000000) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    unint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  if (!HIDWORD(v7))
  {
    unint64_t v8 = arc4random_uniform(v7);
    uint64_t v9 = sub_1C0224434();
    if ((v9 & 0xC000000000000001) != 0)
    {
      id v10 = (id)MEMORY[0x1C18C7CB0](v8, v9);
    }
    else
    {
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) <= v8)
      {
        __break(1u);
LABEL_15:
        __break(1u);
        goto LABEL_16;
      }
      id v10 = *(id *)(v9 + 8 * v8 + 32);
    }
    unsigned int v5 = v10;
    swift_bridgeObjectRelease();
LABEL_9:
    swift_beginAccess();
    swift_retain();
    sub_1C0224888((uint64_t)v5, a1);
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    uint64_t v11 = *(void *)(v1 + 16);
    uint64_t v12 = swift_retain();
    unint64_t v13 = sub_1C13EC9B4(v12, v11);
    swift_endAccess();
    swift_release();
    if (v13) {
      return (uint64_t)v13;
    }
    goto LABEL_15;
  }
LABEL_16:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1C0224848()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0224888(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_1C151FFFC();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t *v3 = sub_1C0224B8C(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  sub_1C1066940(a1, a2, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C022493C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C0224EF0();
    uint64_t v2 = sub_1C15204FC();
    uint64_t v18 = v2;
    sub_1C15203BC();
    uint64_t v3 = sub_1C15203EC();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
      do
      {
        swift_dynamicCast();
        sub_1BFC39268(0, (unint64_t *)&qword_1EB87A300);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1C10579AC(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1C151FB5C();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1C15203EC();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1C0224B8C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C0224E0C();
    uint64_t v2 = sub_1C15204FC();
    uint64_t v17 = v2;
    sub_1C15203BC();
    if (sub_1C15203EC())
    {
      type metadata accessor for GroupLayoutKey();
      do
      {
        swift_dynamicCast();
        sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2F0);
        swift_dynamicCast();
        uint64_t v2 = v17;
        unint64_t v10 = *(void *)(v17 + 16);
        if (*(void *)(v17 + 24) <= v10)
        {
          sub_1C1058088(v10 + 1, 1);
          uint64_t v2 = v17;
        }
        sub_1C1520DBC();
        sub_1C151E77C();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
        uint64_t result = sub_1C1520E0C();
        uint64_t v4 = v2 + 64;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 64 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 64 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v11 = 0;
          unint64_t v12 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v12 && (v11 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v13 = v7 == v12;
            if (v7 == v12) {
              unint64_t v7 = 0;
            }
            v11 |= v13;
            uint64_t v14 = *(void *)(v4 + 8 * v7);
          }
          while (v14 == -1);
          unint64_t v8 = __clz(__rbit64(~v14)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        uint64_t v9 = 8 * v8;
        *(void *)(*(void *)(v2 + 48) + v9) = v16;
        *(void *)(*(void *)(v2 + 56) + v9) = v15;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C15203EC());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

void sub_1C0224E0C()
{
  if (!qword_1EA1983E0)
  {
    type metadata accessor for GroupLayoutKey();
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A2F0);
    sub_1C0224E98();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1983E0);
    }
  }
}

unint64_t sub_1C0224E98()
{
  unint64_t result = qword_1EA1983E8;
  if (!qword_1EA1983E8)
  {
    type metadata accessor for GroupLayoutKey();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1983E8);
  }
  return result;
}

void sub_1C0224EF0()
{
  if (!qword_1EB85EFB0)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A2F0);
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A300);
    sub_1C0224F8C();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85EFB0);
    }
  }
}

unint64_t sub_1C0224F8C()
{
  unint64_t result = qword_1EB85EF80;
  if (!qword_1EB85EF80)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A2F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EF80);
  }
  return result;
}

uint64_t sub_1C0224FF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C15168DC();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, v2, v4, v6);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (result == *MEMORY[0x1E4F46038])
  {
    *a1 = 40;
    return result;
  }
  if (result == *MEMORY[0x1E4F45F60])
  {
    *a1 = 20;
    return result;
  }
  if (result == *MEMORY[0x1E4F45F68])
  {
    *a1 = 16;
    return result;
  }
  if (result == *MEMORY[0x1E4F46018]) {
    goto LABEL_8;
  }
  if (result == *MEMORY[0x1E4F45FF0])
  {
    *a1 = 30;
  }
  else if (result == *MEMORY[0x1E4F46020])
  {
    *a1 = 27;
  }
  else if (result == *MEMORY[0x1E4F46030])
  {
    *a1 = 10;
  }
  else if (result == *MEMORY[0x1E4F46040])
  {
    *a1 = 14;
  }
  else if (result == *MEMORY[0x1E4F45FF8])
  {
    *a1 = 21;
  }
  else if (result == *MEMORY[0x1E4F45FB0])
  {
    *a1 = 9;
  }
  else if (result == *MEMORY[0x1E4F45F80])
  {
    *a1 = 11;
  }
  else if (result == *MEMORY[0x1E4F46028])
  {
    *a1 = 26;
  }
  else if (result == *MEMORY[0x1E4F45FD0])
  {
    *a1 = 18;
  }
  else if (result == *MEMORY[0x1E4F45FD8])
  {
    *a1 = 22;
  }
  else if (result == *MEMORY[0x1E4F46068])
  {
    *a1 = 37;
  }
  else if (result == *MEMORY[0x1E4F46070])
  {
    *a1 = 39;
  }
  else if (result == *MEMORY[0x1E4F45FC8])
  {
    *a1 = 33;
  }
  else if (result == *MEMORY[0x1E4F46078])
  {
    *a1 = 3;
  }
  else if (result == *MEMORY[0x1E4F45FB8])
  {
    *a1 = 34;
  }
  else if (result == *MEMORY[0x1E4F45F70])
  {
    *a1 = 31;
  }
  else if (result == *MEMORY[0x1E4F45F88])
  {
    *a1 = 28;
  }
  else if (result == *MEMORY[0x1E4F45F90])
  {
    *a1 = 29;
  }
  else if (result == *MEMORY[0x1E4F45FE0])
  {
    *a1 = 13;
  }
  else if (result == *MEMORY[0x1E4F45FC0])
  {
    *a1 = 35;
  }
  else if (result == *MEMORY[0x1E4F46000])
  {
    *a1 = 19;
  }
  else if (result == *MEMORY[0x1E4F46008])
  {
    *a1 = 23;
  }
  else if (result == *MEMORY[0x1E4F45FE8])
  {
    *a1 = 17;
  }
  else if (result == *MEMORY[0x1E4F45F98])
  {
    *a1 = 42;
  }
  else if (result == *MEMORY[0x1E4F45F78])
  {
    *a1 = 43;
  }
  else if (result == *MEMORY[0x1E4F45F58])
  {
    *a1 = 44;
  }
  else if (result == *MEMORY[0x1E4F45FA0])
  {
    *a1 = 5;
  }
  else if (result == *MEMORY[0x1E4F45FA8])
  {
    *a1 = 2;
  }
  else
  {
    if (result == *MEMORY[0x1E4F46010])
    {
LABEL_8:
      *a1 = 25;
      return result;
    }
    if (result == *MEMORY[0x1E4F46080])
    {
      *a1 = 45;
    }
    else
    {
      *a1 = 0;
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  return result;
}

uint64_t sub_1C0225534()
{
  sub_1C151811C();
  sub_1BFF27ECC();
  uint64_t v0 = sub_1C151FEBC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t dispatch thunk of GroupLayoutFactoryType.groupLayoutRequirements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of GroupLayoutFactoryType.groupLayoutPriority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of GroupLayoutFactoryType.groupLayoutContentSizeCategory.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of GroupLayoutFactoryType.bind(from:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of BoundGroupLayoutFactoryType.boundItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BoundGroupLayoutFactoryType.creator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of BoundGroupLayoutFactoryType.layout()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1C0225674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_1BFFFBA44(a2, a3);
  uint64_t v9 = *(void **)(v3 + 24);
  unsigned __int8 v10 = *(unsigned char *)(v3 + 32);
  sub_1BFFFC7A0(v9, v10);
  uint64_t v4 = (void *)sub_1C15176CC();
  char v5 = sub_1BFFFB824();

  sub_1BFFFC630(v9, v10);
  if ((v5 & 1) == 0)
  {
    sub_1C0020AF0();
    swift_allocError();
    uint64_t v7 = v6;
    *__n128 v6 = sub_1C15176CC();
    *((unsigned char *)v7 + 40) = 1;
    swift_willThrow();
  }
  return swift_release();
}

void sub_1C022575C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a1;
  char v6 = *((unsigned char *)a1 + 8);
  sub_1BFFFBA44(a3, a4);
  uint64_t v9 = v5;
  LOBYTE(v10) = v6;
  uint64_t v7 = a2 + *(int *)(type metadata accessor for GroupLayoutContext() + 20);
  id v8 = objc_msgSend(self, sel_mainBundle, v9, v10);
  sub_1C0EF7D50((uint64_t)&v9, a2, v7, v8);
  swift_release();
}

id sub_1C0225818(uint64_t a1, void *a2, void *a3)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_editor] = a1;
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_uploadNavigationController] = a2;
  *(void *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_uploadDiffNavigationController] = a3;
  v19.receiver = v3;
  v19.super_class = ObjectType;
  swift_retain();
  id v8 = a2;
  id v9 = a3;
  id v10 = objc_msgSendSuper2(&v19, sel_initWithNibName_bundle_, 0, 0);
  sub_1BFE4DBE0();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C15320F0;
  *(void *)(v11 + 32) = v8;
  *(void *)(v11 + 40) = v9;
  sub_1C151EBEC();
  sub_1C0225E48();
  id v12 = v10;
  id v13 = v8;
  id v14 = v9;
  id v15 = v12;
  uint64_t v16 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setViewControllers_, v16);

  id v17 = v15;
  objc_msgSend(v17, sel_setDelegate_, v17);

  swift_release();
  return v17;
}

void sub_1C02259EC(void *a1, unsigned char *a2)
{
  if ((*a2 & 1) == 0)
  {
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    void v5[4] = sub_1C0225F74;
    v5[5] = v3;
    v5[0] = MEMORY[0x1E4F143A8];
    v5[1] = 1107296256;
    void v5[2] = sub_1BFC9FC68;
    v5[3] = &block_descriptor_8;
    uint64_t v4 = _Block_copy(v5);
    swift_release();
    objc_msgSend(a1, sel_dismissViewControllerAnimated_completion_, 1, v4);
    _Block_release(v4);
  }
}

uint64_t sub_1C0225C10(uint64_t a1)
{
  LOBYTE(v6) = 0;
  *((void *)&v6 + 1) = 0xD000000000000010;
  unint64_t v7 = 0x80000001C1608090;
  unint64_t v8 = 0xD000000000000036;
  unint64_t v9 = 0x80000001C16080B0;
  uint64_t v1 = a1 + 16;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C18C9C60](v1);
  if (result)
  {
    uint64_t v3 = (void *)result;
    uint64_t v4 = *(void *)(result + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_editor);
    swift_retain();

    uint64_t v5 = (void *)(v4 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
    swift_beginAccess();
    if (*v5)
    {
      swift_retain();
      swift_release();
      sub_1C0D6A240(&v6);
    }
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatUploadMainViewController()
{
  return self;
}

unint64_t sub_1C0225E48()
{
  unint64_t result = qword_1EB880D40;
  if (!qword_1EB880D40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB880D40);
  }
  return result;
}

void *sub_1C0225E88()
{
  id v1 = objc_msgSend(v0, sel_presentedViewController);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_uploadNavigationController];
  if (v1)
  {
    uint64_t v3 = v1;
    sub_1C0225E48();
    id v4 = v2;
    id v5 = v3;
    LOBYTE(v3) = sub_1C151FB6C();

    if (v3) {
      objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 0, 0);
    }
  }
  return v2;
}

uint64_t sub_1C0225F3C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0225F74()
{
  return sub_1C0225C10(v0);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for FormatPurchaseData(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v18 = type metadata accessor for FormatPurchaseLandingPageData();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
        {
          sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          uint64_t v23 = a2[1];
          *a1 = *a2;
          a1[1] = v23;
          uint64_t v24 = *(int *)(v18 + 20);
          __dst = (char *)a1 + v24;
          uint64_t v35 = v19;
          long long v25 = (char *)a2 + v24;
          uint64_t v26 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v27 = *(void *)(v26 - 8);
          long long v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
          swift_bridgeObjectRetain();
          uint64_t v29 = v25;
          if (v28(v25, 1, v26))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(__dst, v25, *(void *)(*(void *)(v30 - 8) + 64));
          }
          else
          {
            uint64_t v31 = sub_1C1515FDC();
            uint64_t v32 = *(void *)(v31 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v29, 2, v31))
            {
              memcpy(__dst, v29, *(void *)(v27 + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(v32 + 16))(__dst, v29, v31);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 2, v31);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
          }
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v18);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_25:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        uint64_t v10 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        uint64_t v11 = (char *)a1 + v10;
        id v12 = (char *)a2 + v10;
        uint64_t v13 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v14 = *(void *)(v13 - 8);
        id v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        if (v15(v12, 1, v13))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          uint64_t v21 = sub_1C1515FDC();
          uint64_t v22 = *(void *)(v21 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 2, v21))
          {
            memcpy(v11, v12, *(void *)(v14 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v11, v12, v21);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v11, 0, 2, v21);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_25;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t destroy for FeedAction(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    type metadata accessor for FormatPurchaseData(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      uint64_t v4 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(v4 + 20);
    }
    else
    {
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v3 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
    }
    uint64_t v5 = a1 + v3;
    uint64_t v6 = type metadata accessor for FormatPostPurchaseData();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
    if (!result)
    {
      uint64_t v7 = sub_1C1515FDC();
      uint64_t v9 = *(void *)(v7 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 2, v7);
      if (!result)
      {
        unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
        return v8(v5, v7);
      }
    }
  }
  return result;
}

void *initializeWithCopy for FeedAction(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        uint64_t v22 = *(int *)(v16 + 20);
        __dst = (char *)a1 + v22;
        uint64_t v33 = v17;
        uint64_t v23 = (char *)a2 + v22;
        uint64_t v24 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        uint64_t v27 = v23;
        if (v26(v23, 1, v24))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dst, v23, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          uint64_t v29 = sub_1C1515FDC();
          uint64_t v30 = *(void *)(v29 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48))(v27, 2, v29))
          {
            memcpy(__dst, v27, *(void *)(v25 + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v30 + 16))(__dst, v27, v29);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 2, v29);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(a1, 0, 1, v16);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v19 = sub_1C1515FDC();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 2, v19))
        {
          memcpy(v10, v11, *(void *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v10, v11, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v10, 0, 2, v19);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for FeedAction(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFE68A60((uint64_t)a1, type metadata accessor for FeedAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for FormatPurchaseData(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v15 = type metadata accessor for FormatPurchaseLandingPageData();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v20 = *(int *)(v15 + 20);
          __dst = (char *)a1 + v20;
          uint64_t v31 = v16;
          uint64_t v21 = (char *)a2 + v20;
          uint64_t v22 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v23 = *(void *)(v22 - 8);
          uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
          swift_bridgeObjectRetain();
          uint64_t v25 = v21;
          if (v24(v21, 1, v22))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(__dst, v21, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            uint64_t v27 = sub_1C1515FDC();
            uint64_t v28 = *(void *)(v27 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v25, 2, v27))
            {
              memcpy(__dst, v25, *(void *)(v23 + 64));
            }
            else
            {
              (*(void (**)(char *, const void *, uint64_t))(v28 + 16))(__dst, v25, v27);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 2, v27);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(a1, 0, 1, v15);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_24:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v12 = *(void *)(v11 - 8);
        uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
        swift_bridgeObjectRetain();
        if (v13(v10, 1, v11))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          uint64_t v18 = sub_1C1515FDC();
          uint64_t v19 = *(void *)(v18 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 2, v18))
          {
            memcpy(v9, v10, *(void *)(v12 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v9, v10, v18);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v9, 0, 2, v18);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for FeedAction(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA198468);
}

_OWORD *initializeWithTake for FeedAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v19 = *(int *)(v14 + 20);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v23 = *(void *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          uint64_t v25 = sub_1C1515FDC();
          uint64_t v27 = *(void *)(v25 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v21, 2, v25))
          {
            memcpy(v20, v21, *(void *)(v23 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v20, v21, v25);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v20, 0, 2, v25);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      *a1 = *a2;
      uint64_t v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v17 = sub_1C1515FDC();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 2, v17))
        {
          memcpy(v9, v10, *(void *)(v12 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v9, v10, v17);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 2, v17);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FeedAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFE68A60((uint64_t)a1, type metadata accessor for FeedAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for FormatPurchaseData(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v14 = type metadata accessor for FormatPurchaseLandingPageData();
        uint64_t v15 = *(void *)(v14 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
        {
          sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v19 = *(int *)(v14 + 20);
          uint64_t v20 = (char *)a1 + v19;
          uint64_t v21 = (char *)a2 + v19;
          uint64_t v22 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v23 = *(void *)(v22 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
          {
            sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
          }
          else
          {
            uint64_t v25 = sub_1C1515FDC();
            uint64_t v27 = *(void *)(v25 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v21, 2, v25))
            {
              memcpy(v20, v21, *(void *)(v23 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v20, v21, v25);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v20, 0, 2, v25);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
          }
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_24:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        *a1 = *a2;
        uint64_t v8 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v12 = *(void *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
        }
        else
        {
          uint64_t v17 = sub_1C1515FDC();
          uint64_t v18 = *(void *)(v17 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 2, v17))
          {
            memcpy(v9, v10, *(void *)(v12 + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v9, v10, v17);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 2, v17);
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C0227BDC()
{
  uint64_t result = type metadata accessor for FormatPurchaseData(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0227C70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v8 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_28:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v9 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v19 = *(void **)(v18 - 8);
      if ((*((unsigned int (**)(uint64_t *, uint64_t, uint64_t))v19 + 6))(a2, 1, v18))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v36 = v18;
        __dsta = v19;
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        uint64_t v24 = *(int *)(v18 + 20);
        uint64_t v35 = (char *)a1 + v24;
        uint64_t v25 = (char *)a2 + v24;
        uint64_t v26 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v27 = *(void *)(v26 - 8);
        uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
        swift_bridgeObjectRetain();
        uint64_t v29 = v25;
        if (v28(v25, 1, v26))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v35, v25, *(void *)(*(void *)(v30 - 8) + 64));
          uint64_t v31 = v36;
        }
        else
        {
          uint64_t v32 = sub_1C1515FDC();
          uint64_t v33 = *(void *)(v32 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v29, 2, v32))
          {
            memcpy(v35, v29, *(void *)(v27 + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v33 + 16))(v35, v29, v32);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v35, 0, 2, v32);
          }
          uint64_t v31 = v36;
          uint64_t v19 = __dsta;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v35, 0, 1, v26);
        }
        (*((void (**)(uint64_t *, void, uint64_t, uint64_t))v19 + 7))(a1, 0, 1, v31);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_27:
        swift_storeEnumTagMultiPayload();
        goto LABEL_28;
      }
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      __dst = (char *)a1 + v12;
      uint64_t v13 = (char *)a2 + v12;
      uint64_t v14 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      if (v16(v13, 1, v14))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v21 = sub_1C1515FDC();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v13, 2, v21))
        {
          memcpy(__dst, v13, *(void *)(v15 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__dst, v13, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 2, v21);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_27;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

uint64_t sub_1C0228250(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    type metadata accessor for FeedAction(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      type metadata accessor for FormatPurchaseData(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 1)
      {
        uint64_t v4 = type metadata accessor for FormatPurchaseLandingPageData();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
        if (result) {
          return result;
        }
        swift_bridgeObjectRelease();
        uint64_t v3 = *(int *)(v4 + 20);
      }
      else
      {
        if (result) {
          return result;
        }
        swift_bridgeObjectRelease();
        uint64_t v3 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      }
      uint64_t v5 = a1 + v3;
      uint64_t v6 = type metadata accessor for FormatPostPurchaseData();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
      if (!result)
      {
        uint64_t v7 = sub_1C1515FDC();
        uint64_t v9 = *(void *)(v7 - 8);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 2, v7);
        if (!result)
        {
          uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
          return v8(v5, v7);
        }
      }
    }
  }
  return result;
}

void *sub_1C0228410(void *a1, void *a2, uint64_t a3)
{
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v6 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_26:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v7 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v33 = v16;
        uint64_t v34 = v17;
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        uint64_t v22 = *(int *)(v16 + 20);
        __dsta = (char *)a1 + v22;
        uint64_t v23 = (char *)a2 + v22;
        uint64_t v24 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v25 = *(void *)(v24 - 8);
        uint64_t v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        swift_bridgeObjectRetain();
        uint64_t v27 = v23;
        if (v26(v23, 1, v24))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dsta, v23, *(void *)(*(void *)(v28 - 8) + 64));
          uint64_t v29 = v33;
        }
        else
        {
          uint64_t v30 = sub_1C1515FDC();
          uint64_t v31 = *(void *)(v30 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v27, 2, v30))
          {
            memcpy(__dsta, v27, *(void *)(v25 + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v31 + 16))(__dsta, v27, v30);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dsta, 0, 2, v30);
          }
          uint64_t v29 = v33;
          uint64_t v17 = v34;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dsta, 0, 1, v24);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v29);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_25:
        swift_storeEnumTagMultiPayload();
        goto LABEL_26;
      }
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      __dst = (char *)a1 + v10;
      uint64_t v11 = (char *)a2 + v10;
      uint64_t v12 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      swift_bridgeObjectRetain();
      if (v14(v11, 1, v12))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v19 = sub_1C1515FDC();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 2, v19))
        {
          memcpy(__dst, v11, *(void *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v11, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 2, v19);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_1C02289AC(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFE68A60((uint64_t)a1, type metadata accessor for FeedActionInternal);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v6 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_27:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v7 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v16 = *(void **)(v15 - 8);
      if ((*((unsigned int (**)(void *, uint64_t, uint64_t))v16 + 6))(a2, 1, v15))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v32 = v15;
        __dsta = v16;
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v20 = *(int *)(v15 + 20);
        uint64_t v31 = (char *)a1 + v20;
        uint64_t v21 = (char *)a2 + v20;
        uint64_t v22 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        swift_bridgeObjectRetain();
        uint64_t v25 = v21;
        if (v24(v21, 1, v22))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v31, v21, *(void *)(*(void *)(v26 - 8) + 64));
          uint64_t v27 = v32;
        }
        else
        {
          uint64_t v28 = sub_1C1515FDC();
          uint64_t v29 = *(void *)(v28 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v25, 2, v28))
          {
            memcpy(v31, v25, *(void *)(v23 + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v29 + 16))(v31, v25, v28);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v31, 0, 2, v28);
          }
          uint64_t v27 = v32;
          uint64_t v16 = __dsta;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v31, 0, 1, v22);
        }
        (*((void (**)(void *, void, uint64_t, uint64_t))v16 + 7))(a1, 0, 1, v27);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_26:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      __dst = (char *)a1 + v9;
      uint64_t v10 = (char *)a2 + v9;
      uint64_t v11 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      if (v13(v10, 1, v11))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_1C1515FDC();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 2, v18))
        {
          memcpy(__dst, v10, *(void *)(v12 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__dst, v10, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 2, v18);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  return a1;
}

uint64_t type metadata accessor for FeedActionInternal(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA198478);
}

_OWORD *sub_1C0228F9C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v6 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_26:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v7 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v20 = *(int *)(v15 + 20);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          __dst = v21;
          uint64_t v26 = sub_1C1515FDC();
          uint64_t v29 = *(void *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v22, 2, v26))
          {
            uint64_t v27 = __dst;
            memcpy(__dst, v22, *(void *)(v24 + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v29 + 32))(__dst, v22, v26);
            uint64_t v27 = __dst;
            (*(void (**)(void))(v29 + 56))();
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v27, 0, 1, v23);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_25:
        swift_storeEnumTagMultiPayload();
        goto LABEL_26;
      }
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_1C1515FDC();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 2, v18))
        {
          memcpy(v10, v11, *(void *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v10, v11, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v10, 0, 2, v18);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1C0229510(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFE68A60((uint64_t)a1, type metadata accessor for FeedActionInternal);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v6 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_27:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v7 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v20 = *(int *)(v15 + 20);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          __dst = v21;
          uint64_t v26 = sub_1C1515FDC();
          uint64_t v29 = *(void *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v22, 2, v26))
          {
            uint64_t v27 = __dst;
            memcpy(__dst, v22, *(void *)(v24 + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v29 + 32))(__dst, v22, v26);
            uint64_t v27 = __dst;
            (*(void (**)(void))(v29 + 56))();
          }
          (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v27, 0, 1, v23);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_26:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v18 = sub_1C1515FDC();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 2, v18))
        {
          memcpy(v10, v11, *(void *)(v13 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v10, v11, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v10, 0, 2, v18);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  return a1;
}

uint64_t sub_1C0229AA8()
{
  uint64_t result = type metadata accessor for FeedAction(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1C0229B38(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for FeedActionInternal(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_28:
      uint64_t v35 = *(int *)(a3 + 20);
      uint64_t v36 = *(void **)((char *)a2 + v35);
      *(void *)((char *)a1 + v35) = v36;
      id v37 = v36;
      return a1;
    }
    uint64_t v9 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_27:
      swift_storeEnumTagMultiPayload();
      goto LABEL_28;
    }
    uint64_t v10 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v18 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v46 = v19;
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        uint64_t v24 = *(int *)(v18 + 20);
        __dsta = (char *)a1 + v24;
        uint64_t v43 = v18;
        uint64_t v25 = (char *)a2 + v24;
        uint64_t v26 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v27 = *(void *)(v26 - 8);
        uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
        uint64_t v29 = v26;
        swift_bridgeObjectRetain();
        __srca = v25;
        if (v28(v25, 1, v29))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dsta, v25, *(void *)(*(void *)(v30 - 8) + 64));
          uint64_t v31 = v46;
          uint64_t v32 = v43;
        }
        else
        {
          uint64_t v39 = v29;
          uint64_t v33 = sub_1C1515FDC();
          uint64_t v34 = *(void *)(v33 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v34 + 48))(__srca, 2, v33))
          {
            memcpy(__dsta, __srca, *(void *)(v27 + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(v34 + 16))(__dsta, __srca, v33);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(__dsta, 0, 2, v33);
          }
          uint64_t v31 = v46;
          uint64_t v32 = v43;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dsta, 0, 1, v39);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(a1, 0, 1, v32);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_26:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      uint64_t v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      uint64_t v13 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      __src = (char *)a1 + v13;
      uint64_t v14 = (char *)a2 + v13;
      uint64_t v15 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v42 = *(void *)(v15 - 8);
      uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
      swift_bridgeObjectRetain();
      if (v16(v14, 1, v15))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(__src, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        __dst = (void *)v15;
        uint64_t v21 = sub_1C1515FDC();
        uint64_t v22 = *(void *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 2, v21))
        {
          memcpy(__src, v14, *(void *)(v42 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(__src, v14, v21);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(__src, 0, 2, v21);
        }
        (*(void (**)(char *, void, uint64_t, void *))(v42 + 56))(__src, 0, 1, __dst);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
  uint64_t v8 = *a2;
  *a1 = *a2;
  a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

void sub_1C022A160(uint64_t a1, uint64_t a2)
{
  type metadata accessor for FeedActionInternal(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for FormatPurchaseData(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v6 = type metadata accessor for FormatPurchaseLandingPageData();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 1, v6)) {
          goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(v6 + 20);
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        uint64_t v5 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      }
      uint64_t v7 = a1 + v5;
      uint64_t v8 = type metadata accessor for FormatPostPurchaseData();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
      {
        uint64_t v9 = sub_1C1515FDC();
        uint64_t v10 = *(void *)(v9 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 2, v9)) {
          (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
        }
      }
    }
  }
LABEL_11:
  uint64_t v11 = *(void **)(a1 + *(int *)(a2 + 20));
}

void *sub_1C022A334(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedActionInternal(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v7 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_25:
      swift_storeEnumTagMultiPayload();
      goto LABEL_26;
    }
    uint64_t v8 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v41 = v16;
        uint64_t v43 = v17;
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        uint64_t v22 = *(int *)(v16 + 20);
        __dst = (char *)a1 + v22;
        uint64_t v23 = (char *)a2 + v22;
        uint64_t v24 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v39 = *(void *)(v24 - 8);
        uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
        swift_bridgeObjectRetain();
        uint64_t v26 = v23;
        if (v25(v23, 1, v24))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dst, v23, *(void *)(*(void *)(v27 - 8) + 64));
          uint64_t v29 = v41;
          uint64_t v28 = v43;
        }
        else
        {
          uint64_t v30 = sub_1C1515FDC();
          uint64_t v31 = *(void *)(v30 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v26, 2, v30))
          {
            uint64_t v32 = v39;
            memcpy(__dst, v26, *(void *)(v39 + 64));
            uint64_t v33 = v24;
            uint64_t v28 = v43;
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v31 + 16))(__dst, v26, v30);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 2, v30);
            uint64_t v33 = v24;
            uint64_t v28 = v43;
            uint64_t v32 = v39;
          }
          uint64_t v29 = v41;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v33);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(a1, 0, 1, v29);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_24:
        swift_storeEnumTagMultiPayload();
        goto LABEL_25;
      }
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v42 = (char *)a1 + v11;
      uint64_t v12 = (char *)a2 + v11;
      uint64_t v13 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v40 = *(void *)(v13 - 8);
      uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
      swift_bridgeObjectRetain();
      if (v14(v12, 1, v13))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v42, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v38 = v13;
        uint64_t v19 = sub_1C1515FDC();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v12, 2, v19))
        {
          memcpy(v42, v12, *(void *)(v40 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v42, v12, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v42, 0, 2, v19);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v42, 0, 1, v38);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_24;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_26:
  uint64_t v34 = *(int *)(a3 + 20);
  uint64_t v35 = *(void **)((char *)a2 + v34);
  *(void *)((char *)a1 + v34) = v35;
  id v36 = v35;
  return a1;
}

void *sub_1C022A918(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFE68A60((uint64_t)a1, type metadata accessor for FeedActionInternal);
    uint64_t v6 = type metadata accessor for FeedActionInternal(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_27;
    }
    uint64_t v7 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_26:
      swift_storeEnumTagMultiPayload();
      goto LABEL_27;
    }
    uint64_t v8 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v43 = v16;
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v20 = *(int *)(v15 + 20);
        __dsta = (char *)a1 + v20;
        uint64_t v40 = v15;
        uint64_t v21 = (char *)a2 + v20;
        uint64_t v22 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v23 = *(void *)(v22 - 8);
        uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        uint64_t v25 = v22;
        swift_bridgeObjectRetain();
        __srca = v21;
        if (v24(v21, 1, v25))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dsta, v21, *(void *)(*(void *)(v26 - 8) + 64));
          uint64_t v27 = v43;
          uint64_t v28 = v40;
        }
        else
        {
          uint64_t v36 = v25;
          uint64_t v29 = sub_1C1515FDC();
          uint64_t v30 = *(void *)(v29 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48))(__srca, 2, v29))
          {
            memcpy(__dsta, __srca, *(void *)(v23 + 64));
          }
          else
          {
            (*(void (**)(char *, void *, uint64_t))(v30 + 16))(__dsta, __srca, v29);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(__dsta, 0, 2, v29);
          }
          uint64_t v27 = v43;
          uint64_t v28 = v40;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dsta, 0, 1, v36);
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v28);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_25:
        swift_storeEnumTagMultiPayload();
        goto LABEL_26;
      }
      *a1 = *a2;
      a1[1] = a2[1];
      uint64_t v10 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      __src = (char *)a1 + v10;
      uint64_t v11 = (char *)a2 + v10;
      uint64_t v12 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v39 = *(void *)(v12 - 8);
      uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
      swift_bridgeObjectRetain();
      if (v13(v11, 1, v12))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(__src, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        __dst = (void *)v12;
        uint64_t v18 = sub_1C1515FDC();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 2, v18))
        {
          memcpy(__src, v11, *(void *)(v39 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(__src, v11, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__src, 0, 2, v18);
        }
        (*(void (**)(char *, void, uint64_t, void *))(v39 + 56))(__src, 0, 1, __dst);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
LABEL_27:
  uint64_t v31 = *(int *)(a3 + 20);
  uint64_t v32 = *(void **)((char *)a2 + v31);
  uint64_t v33 = *(void **)((char *)a1 + v31);
  *(void *)((char *)a1 + v31) = v32;
  id v34 = v32;

  return a1;
}

_OWORD *sub_1C022AF2C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedActionInternal(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v7 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_26:
      swift_storeEnumTagMultiPayload();
      goto LABEL_27;
    }
    uint64_t v8 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v21 = *(int *)(v16 + 20);
        uint64_t v35 = v17;
        id v37 = (char *)a1 + v21;
        uint64_t v22 = (char *)a2 + v21;
        uint64_t v23 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v24 = *(void *)(v23 - 8);
        __dsta = v22;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v37, v22, *(void *)(*(void *)(v25 - 8) + 64));
          uint64_t v26 = v35;
        }
        else
        {
          uint64_t v33 = v23;
          uint64_t v34 = v24;
          uint64_t v27 = sub_1C1515FDC();
          uint64_t v28 = *(void *)(v27 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(__dsta, 2, v27))
          {
            uint64_t v29 = v34;
            uint64_t v30 = v37;
            memcpy(v37, __dsta, *(void *)(v34 + 64));
            uint64_t v31 = v33;
          }
          else
          {
            uint64_t v30 = v37;
            (*(void (**)(void))(v28 + 32))();
            (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v37, 0, 2, v27);
            uint64_t v31 = v33;
            uint64_t v29 = v34;
          }
          uint64_t v26 = v35;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v31);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v16);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_25:
        swift_storeEnumTagMultiPayload();
        goto LABEL_26;
      }
      *a1 = *a2;
      uint64_t v10 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        __dst = v11;
        uint64_t v19 = sub_1C1515FDC();
        uint64_t v36 = *(void (***)(void *, const void *, uint64_t))(v19 - 8);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v36[6])(v12, 2, v19))
        {
          uint64_t v20 = __dst;
          memcpy(__dst, v12, *(void *)(v14 + 64));
        }
        else
        {
          v36[4](__dst, v12, v19);
          uint64_t v20 = __dst;
          ((void (*)(void))v36[7])();
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_25;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_27:
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *sub_1C022B4DC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFE68A60((uint64_t)a1, type metadata accessor for FeedActionInternal);
    uint64_t v6 = type metadata accessor for FeedActionInternal(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_28;
    }
    uint64_t v7 = type metadata accessor for FeedAction(0);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_27:
      swift_storeEnumTagMultiPayload();
      goto LABEL_28;
    }
    uint64_t v8 = type metadata accessor for FormatPurchaseData(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = type metadata accessor for FormatPurchaseLandingPageData();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BFFEBB9C(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v36 = v17;
        *a1 = *a2;
        uint64_t v21 = *(int *)(v16 + 20);
        __dsta = (char *)a1 + v21;
        uint64_t v22 = (char *)a2 + v21;
        uint64_t v23 = type metadata accessor for FormatPostPurchaseData();
        uint64_t v24 = *(void *)(v23 - 8);
        uint64_t v38 = v22;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dsta, v22, *(void *)(*(void *)(v25 - 8) + 64));
          uint64_t v26 = v36;
        }
        else
        {
          uint64_t v34 = v24;
          uint64_t v35 = v23;
          uint64_t v27 = sub_1C1515FDC();
          uint64_t v28 = *(void *)(v27 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v38, 2, v27))
          {
            uint64_t v29 = v24;
            uint64_t v30 = __dsta;
            memcpy(__dsta, v38, *(void *)(v34 + 64));
          }
          else
          {
            uint64_t v30 = __dsta;
            (*(void (**)(void))(v28 + 32))();
            (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dsta, 0, 2, v27);
            uint64_t v29 = v34;
          }
          uint64_t v26 = v36;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v30, 0, 1, v35);
        }
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v16);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_26:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      *a1 = *a2;
      uint64_t v10 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for FormatPostPurchaseData();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_1BFFEBB9C(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        __dst = v11;
        uint64_t v19 = sub_1C1515FDC();
        uint64_t v37 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v12, 2, v19))
        {
          uint64_t v20 = __dst;
          memcpy(__dst, v12, *(void *)(v14 + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v37 + 32))(__dst, v12, v19);
          uint64_t v20 = __dst;
          (*(void (**)(void))(v37 + 56))();
        }
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_26;
  }
LABEL_28:
  uint64_t v31 = *(int *)(a3 + 20);
  uint64_t v32 = *(void **)((char *)a1 + v31);
  *(void *)((char *)a1 + v31) = *(void *)((char *)a2 + v31);

  return a1;
}

uint64_t sub_1C022BAB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C022BACC);
}

uint64_t sub_1C022BACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedActionInternal(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C022BB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C022BBA0);
}

uint64_t sub_1C022BBA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FeedActionInternal(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for FeedActionSenderInternal(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EA198488);
}

uint64_t sub_1C022BC7C()
{
  uint64_t result = type metadata accessor for FeedActionInternal(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double FormatPoint.x.getter()
{
  return *(double *)v0;
}

double FormatPoint.y.getter()
{
  return *(double *)(v0 + 8);
}

BOOL static FormatPoint.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_1C022BD50(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t FormatPoint.description.getter()
{
  return 40;
}

unint64_t sub_1C022BE10(uint64_t a1)
{
  unint64_t result = sub_1C022BE38();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C022BE38()
{
  unint64_t result = qword_1EA198498;
  if (!qword_1EA198498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198498);
  }
  return result;
}

unint64_t sub_1C022BE8C(void *a1)
{
  a1[1] = sub_1BFD476F4();
  a1[2] = sub_1BFD88EB8();
  unint64_t result = sub_1C022BEC4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C022BEC4()
{
  unint64_t result = qword_1EA1984A0;
  if (!qword_1EA1984A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1984A0);
  }
  return result;
}

uint64_t sub_1C022BF18()
{
  return 40;
}

ValueMetadata *type metadata accessor for FormatPoint()
{
  return &type metadata for FormatPoint;
}

void sub_1C022BFBC(uint64_t a1)
{
  uint64_t v62 = a1;
  uint64_t v2 = sub_1C151E16C();
  uint64_t v60 = *(void *)(v2 - 8);
  uint64_t v61 = v2;
  MEMORY[0x1F4188790](v2);
  unint64_t v58 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1C151E1DC();
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v56 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1C151E17C();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v53 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0550(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  *(void *)&double v7 = MEMORY[0x1F4188790](v6 - 8).n128_u64[0];
  uint64_t v9 = (char *)&v52 - v8;
  unint64_t v10 = *(char **)(v1 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView);
  id v11 = objc_msgSend(v10, sel_subviews, v7);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2C0);
  unint64_t v12 = sub_1C151EBCC();

  uint64_t v63 = v1;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v13) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v13) {
      goto LABEL_10;
    }
  }
  if (v13 < 1)
  {
    __break(1u);
    goto LABEL_23;
  }
  for (uint64_t i = 0; i != v13; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0) {
      id v15 = (id)MEMORY[0x1C18C7CB0](i, v12);
    }
    else {
      id v15 = *(id *)(v12 + 8 * i + 32);
    }
    uint64_t v16 = v15;
    objc_msgSend(v15, sel_removeFromSuperview);
  }
LABEL_10:
  swift_bridgeObjectRelease();
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_changedHunkRanges] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_numberOfLines] = 0;
  uint64_t v17 = *(char **)(v63 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView);
  id v18 = objc_msgSend(v17, sel_subviews);
  unint64_t v19 = sub_1C151EBCC();

  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v20)
    {
LABEL_12:
      if (v20 >= 1)
      {
        for (uint64_t j = 0; j != v20; ++j)
        {
          if ((v19 & 0xC000000000000001) != 0) {
            id v22 = (id)MEMORY[0x1C18C7CB0](j, v19);
          }
          else {
            id v22 = *(id *)(v19 + 8 * j + 32);
          }
          uint64_t v23 = v22;
          objc_msgSend(v22, sel_removeFromSuperview);
        }
        goto LABEL_19;
      }
LABEL_23:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v20) {
      goto LABEL_12;
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  uint64_t v24 = MEMORY[0x1E4FBC860];
  *(void *)&v17[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_changedHunkRanges] = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  *(void *)&v17[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_numberOfLines] = 0;
  uint64_t v25 = v63;
  uint64_t v26 = *(void *)(v63 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView);
  uint64_t v27 = *(void **)(v26 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel);
  uint64_t v28 = sub_1C151928C();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  v29(v9, 1, 1, v28);
  id v30 = sub_1C0E879B4((uint64_t)v9);
  sub_1BFEC001C((uint64_t)v9);
  objc_msgSend(v27, sel_setAttributedText_, v30);

  uint64_t v31 = (void *)(v26 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet);
  swift_beginAccess();
  void *v31 = v24;
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v26 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView), sel_reloadData);
  uint64_t v32 = *(void *)(v25 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView);
  uint64_t v33 = *(void **)(v32 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel);
  v29(v9, 1, 1, v28);
  id v34 = sub_1C0E879B4((uint64_t)v9);
  uint64_t v35 = (uint64_t)v9;
  uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1BFEC001C(v35);
  objc_msgSend(v33, sel_setAttributedText_, v34);

  uint64_t v37 = (void *)(v32 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet);
  swift_beginAccess();
  *uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v32 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView), sel_reloadData);
  uint64_t v38 = *(void **)(v25 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_changeSetLabel);
  objc_msgSend(v38, sel_setAttributedText_, 0);
  uint64_t v39 = v62;
  if (v62)
  {
    swift_retain();
    sub_1C00C0D5C(17.0);
    uint64_t v41 = v40;
    objc_msgSend(v38, (SEL)&_OBJC_LABEL_PROTOCOL___SVVideoMetadata, v40);

    objc_msgSend(v38, sel_sizeToFit);
    *(unsigned char *)(v26 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading) = 1;
    objc_msgSend(*(id *)(v26 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView), sel_startAnimating);
    *(unsigned char *)(v32 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading) = 1;
    objc_msgSend(*(id *)(v32 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView), sel_startAnimating);
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
    uint64_t v42 = v54;
    uint64_t v43 = v53;
    uint64_t v44 = v55;
    (*(void (**)(char *, void, uint64_t))(v54 + 104))(v53, *MEMORY[0x1E4FBCB28], v55);
    uint64_t v45 = (void *)sub_1C151F5BC();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    uint64_t v46 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = v39;
    *(void *)(v47 + 24) = v46;
    aBlock[4] = sub_1C022F3B8;
    aBlock[5] = v47;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFC9FC68;
    aBlock[3] = &block_descriptor_9;
    uint64_t v48 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    uint64_t v49 = v56;
    sub_1C151E19C();
    uint64_t v64 = v36;
    sub_1BFD32B60();
    sub_1BFEC0550(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1BFD32AD8();
    id v50 = v58;
    uint64_t v51 = v61;
    sub_1C151FFBC();
    MEMORY[0x1C18C70C0](0, v49, v50, v48);
    _Block_release(v48);
    swift_release();

    (*(void (**)(char *, uint64_t))(v60 + 8))(v50, v51);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v49, v59);
    swift_release();
    swift_release();
  }
}

id sub_1C022C868()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController____lazy_storage___chaneSetBarButtonItem;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController____lazy_storage___chaneSetBarButtonItem);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController____lazy_storage___chaneSetBarButtonItem);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB14A8]), sel_initWithCustomView_, *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_changeSetLabel));
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1C022C914()
{
  v38.receiver = v0;
  v38.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v38, sel_viewDidLoad);
  id v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  id v3 = self;
  id v4 = objc_msgSend(v3, sel_systemBackgroundColor);
  objc_msgSend(v2, sel_setBackgroundColor_, v4);

  id v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v6 = v5;
  objc_msgSend(v5, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView]);

  id v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v8 = v7;
  objc_msgSend(v7, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView]);

  id v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v10 = v9;
  objc_msgSend(v9, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView]);

  id v11 = objc_msgSend(v0, sel_view);
  if (!v11)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v12 = v11;
  id v37 = v3;
  objc_msgSend(v11, sel_addSubview_, *(void *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView]);

  id v13 = objc_msgSend(v0, sel_navigationItem);
  uint64_t v36 = *(void *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_statusView];
  objc_msgSend(v13, sel_setTitleView_);

  id v14 = objc_msgSend(v0, sel_navigationItem);
  sub_1BFE4DBE0();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1C15320F0;
  uint64_t v16 = (void *)sub_1C151E5EC();
  uint64_t v17 = self;
  id v18 = objc_msgSend(v17, sel_systemImageNamed_, v16);

  if (!v18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v19 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
  uint64_t v20 = v0;
  id v21 = objc_msgSend(v19, sel_initWithImage_style_target_action_, v18, 0, v20, sel_doToggleSidebar);

  *(void *)(v15 + 32) = v21;
  *(void *)(v15 + 40) = sub_1C022C868();
  sub_1C151EBEC();
  sub_1BFC39268(0, (unint64_t *)&qword_1EA19AFD0);
  id v22 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setLeftBarButtonItems_, v22);

  id v23 = objc_msgSend(v20, sel_navigationItem);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C15320E0;
  uint64_t v25 = (void *)sub_1C151E5EC();
  id v26 = objc_msgSend(v17, sel_systemImageNamed_, v25);

  if (v26)
  {
    id v27 = objc_allocWithZone(MEMORY[0x1E4FB14A8]);
    uint64_t v28 = v20;
    id v29 = objc_msgSend(v27, sel_initWithImage_style_target_action_, v26, 0, v28, sel_doDismiss);

    *(void *)(v24 + 32) = v29;
    sub_1C151EBEC();
    id v30 = (void *)sub_1C151EBAC();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_setRightBarButtonItems_, v30);

    id v31 = objc_msgSend(v28, sel_navigationItem);
    id v32 = objc_msgSend(v37, sel_secondarySystemBackgroundColor);
    sub_1C149EA4C(v31, (uint64_t)v32);

    uint64_t v33 = *(void **)(v36 + OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffStatusView_onTargetTap);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v34 = v33;

    swift_release();
    uint64_t v35 = (void *)sub_1C151A49C();
    swift_allocObject();
    swift_unknownObjectWeakInit();

    swift_release();
    return;
  }
LABEL_15:
  __break(1u);
}

void sub_1C022CE8C(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    id v3 = (void *)v2;
    sub_1C022CEE0();
  }
}

void sub_1C022CEE0()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FAB398];
  sub_1C022F754(0, (unint64_t *)&unk_1EA1A52F0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB468], MEMORY[0x1E4FAB398]);
  uint64_t v60 = *(void *)(v1 - 8);
  uint64_t v61 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v62 = (char *)v52 - v2;
  uint64_t v66 = sub_1C151707C();
  uint64_t v58 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v59 = (char *)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C022F754(0, &qword_1EA1984F8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB458], v0);
  uint64_t v56 = v4;
  uint64_t v64 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v57 = (char *)v52 - v5;
  sub_1C022F624(0, &qword_1EA198500, (uint64_t (*)(void))sub_1C022F57C, (uint64_t)&type metadata for DebugFormatBackendEnvironment, v0);
  uint64_t v53 = v6;
  uint64_t v7 = *((void *)v6 - 1);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v52 - v8;
  sub_1C022F624(0, &qword_1EA198508, (uint64_t (*)(void))sub_1C022F5D0, (uint64_t)&type metadata for DebugFormatUploadTarget, v0);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)v52 - v13;
  sub_1BFEC0550(0, (unint64_t *)&unk_1EA1A5340, MEMORY[0x1E4FAB3E8], MEMORY[0x1E4FBBE00]);
  uint64_t v15 = *(void *)(sub_1C151717C() - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v55 = *(void *)(v15 + 72);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_1C1527210;
  sub_1BFEE7CC4(0, (unint64_t *)&qword_1EA19C8C0, (unint64_t *)&qword_1EA1A5350);
  uint64_t v54 = v17;
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C152A660;
  sub_1C022F624(0, (unint64_t *)&unk_1EA1A53B0, (uint64_t (*)(void))sub_1C022F5D0, (uint64_t)&type metadata for DebugFormatUploadTarget, MEMORY[0x1E4FAB3C0]);
  uint64_t v20 = v19;
  if (qword_1EA194610 != -1) {
    swift_once();
  }
  uint64_t v21 = *MEMORY[0x1E4FAB390];
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v14, v21, v11);
  sub_1C00FB6D4();
  swift_retain();
  uint64_t v22 = sub_1C151712C();
  *(void *)(v18 + 56) = v20;
  *(void *)(v18 + 64) = sub_1C022F68C((unint64_t *)&qword_1EA1A53C0, (unint64_t *)&unk_1EA1A53B0, (uint64_t (*)(void))sub_1C022F5D0, (uint64_t)&type metadata for DebugFormatUploadTarget);
  *(void *)(v18 + 32) = v22;
  sub_1C022F624(0, &qword_1EA198510, (uint64_t (*)(void))sub_1C022F57C, (uint64_t)&type metadata for DebugFormatBackendEnvironment, MEMORY[0x1E4FAB3C0]);
  uint64_t v24 = v23;
  if (qword_1EA194620 != -1) {
    swift_once();
  }
  v52[1] = v65 + v16;
  (*(void (**)(char *, uint64_t, void))(v7 + 104))(v9, v21, v53);
  sub_1C00FC074();
  swift_retain();
  uint64_t v25 = sub_1C151712C();
  *(void *)(v18 + 96) = v24;
  *(void *)(v18 + 104) = sub_1C022F68C((unint64_t *)&qword_1EA198518, &qword_1EA198510, (uint64_t (*)(void))sub_1C022F57C, (uint64_t)&type metadata for DebugFormatBackendEnvironment);
  *(void *)(v18 + 72) = v25;
  sub_1C022F754(0, &qword_1EA198520, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB458], MEMORY[0x1E4FAB3C0]);
  uint64_t v27 = v26;
  uint64_t v29 = v56;
  uint64_t v28 = v57;
  uint64_t v30 = v64;
  if (qword_1EA194628 != -1) {
    swift_once();
  }
  id v31 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
  v31(v28, v21, v29);
  swift_retain();
  uint64_t v32 = sub_1C151710C();
  *(void *)(v18 + 136) = v27;
  uint64_t v33 = sub_1C022F6F0((unint64_t *)&qword_1EA1A5360, &qword_1EA198520, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FAB458]);
  *(void *)(v18 + 144) = v33;
  *(void *)(v18 + 112) = v32;
  LODWORD(v64) = v21;
  uint64_t v34 = v58;
  if (qword_1EA194630 != -1) {
    swift_once();
  }
  uint64_t v35 = *(void (**)(void))(v34 + 104);
  uint64_t v36 = v59;
  LODWORD(v58) = *MEMORY[0x1E4FAB2F0];
  uint64_t v53 = (void (*)(char *, void, uint64_t))v35;
  v35(v59);
  v31(v28, v64, v29);
  swift_retain();
  uint64_t v37 = sub_1C151711C();
  *(void *)(v18 + 176) = v27;
  *(void *)(v18 + 184) = v33;
  *(void *)(v18 + 152) = v37;
  sub_1C151716C();
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1C1529AE0;
  sub_1C022F754(0, (unint64_t *)&unk_1EA1A53E0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB468], MEMORY[0x1E4FAB3C0]);
  uint64_t v40 = v39;
  if (qword_1EA194618 != -1) {
    swift_once();
  }
  v53(v36, v58, v66);
  (*(void (**)(char *, void, uint64_t))(v60 + 104))(v62, v64, v61);
  swift_retain();
  uint64_t v41 = sub_1C151713C();
  *(void *)(v38 + 56) = v40;
  *(void *)(v38 + 64) = sub_1C022F6F0((unint64_t *)&qword_1EA1A94D0, (unint64_t *)&unk_1EA1A53E0, MEMORY[0x1E4FBB390], MEMORY[0x1E4FAB468]);
  *(void *)(v38 + 32) = v41;
  sub_1C151716C();
  uint64_t v42 = sub_1C151B38C();
  swift_allocObject();
  uint64_t v43 = sub_1C151B37C();
  uint64_t v68 = v42;
  uint64_t v69 = MEMORY[0x1E4FAC6C0];
  uint64_t v67 = v43;
  id v44 = objc_allocWithZone((Class)sub_1C151B81C());
  uint64_t v45 = (void *)sub_1C151B80C();
  id v46 = objc_msgSend(objc_allocWithZone((Class)sub_1C151C02C()), sel_initWithRootViewController_, v45);

  objc_msgSend(v46, sel_setModalPresentationStyle_, 7);
  id v47 = objc_msgSend(v46, sel_popoverPresentationController);
  uint64_t v48 = v63;
  if (v47)
  {
    uint64_t v49 = v47;
    objc_msgSend(v47, sel_setSourceView_, *(void *)(*(void *)&v63[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_statusView]+ OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffStatusView_targetButton));
  }
  id v50 = objc_msgSend(v46, sel_popoverPresentationController);
  if (v50)
  {
    uint64_t v51 = v50;
    objc_msgSend(v50, sel_setPermittedArrowDirections_, 1);
  }
  objc_msgSend(v48, sel_presentViewController_animated_completion_, v46, 1, 0);
}

void sub_1C022D9B4(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C18C9C60](v1);
  if (v2)
  {
    uint64_t v3 = (char *)v2;
    uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff);
    if (v4)
    {
      uint64_t v5 = *(void **)(v4 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteError);
      if (v5)
      {
        id v6 = v5;
        uint64_t v7 = sub_1C01A95D4(v5);
        uint64_t v8 = sub_1C01ACCE8(v7);
        uint64_t v10 = v9;
        uint64_t v11 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_editor];
        id v12 = objc_allocWithZone((Class)type metadata accessor for DebugFormatErrorViewController());
        swift_retain();
        id v13 = v8;
        swift_bridgeObjectRetain();
        id v14 = sub_1C11E2324(v11, v8, v10);

        swift_release();
        swift_bridgeObjectRelease();
        id v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v14);
        objc_msgSend(v15, sel_setModalPresentationStyle_, 7);
        id v16 = objc_msgSend(v15, sel_popoverPresentationController);
        if (v16)
        {
          uint64_t v17 = v16;
          id v18 = sub_1C022C868();
          objc_msgSend(v17, sel_setBarButtonItem_, v18);
        }
        objc_msgSend(v15, sel_setPreferredContentSize_, 540.0, 620.0);
        objc_msgSend(v3, sel_presentViewController_animated_completion_, v15, 1, 0);

        swift_bridgeObjectRelease();
      }
    }
  }
}

id sub_1C022DBE0()
{
  v69.receiver = v0;
  v69.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v69, sel_viewWillLayoutSubviews);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = result;
  objc_msgSend(result, sel_safeAreaInsets);
  double v4 = v3;

  uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView];
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v6 = result;
  objc_msgSend(result, sel_bounds);
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;

  v70.origin.x = v8;
  v70.origin.y = v10;
  v70.size.width = v12;
  v70.size.height = v14;
  double Width = CGRectGetWidth(v70);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v16 = result;
  objc_msgSend(result, sel_bounds);
  CGFloat v18 = v17;
  CGFloat v20 = v19;
  CGFloat v22 = v21;
  CGFloat v24 = v23;

  v71.origin.x = v18;
  v71.origin.y = v20;
  v71.size.width = v22;
  v71.size.height = v24;
  objc_msgSend(v5, sel_setFrame_, 0.0, 0.0, Width * 0.5 + -4.0, CGRectGetHeight(v71));
  uint64_t v25 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView];
  objc_msgSend(v5, sel_frame);
  double MaxX = CGRectGetMaxX(v72);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v27 = result;
  double v28 = v4 + 32.0;
  objc_msgSend(result, sel_bounds);
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;
  CGFloat v36 = v35;

  v73.origin.x = v30;
  v73.origin.y = v32;
  v73.size.width = v34;
  v73.size.height = v36;
  objc_msgSend(v25, sel_setFrame_, MaxX, v28, 4.0, CGRectGetHeight(v73) - v28);
  uint64_t v37 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView];
  objc_msgSend(v25, sel_frame);
  double v38 = CGRectGetMaxX(v74);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v39 = result;
  objc_msgSend(result, sel_bounds);
  CGFloat v41 = v40;
  CGFloat v43 = v42;
  CGFloat v45 = v44;
  CGFloat v47 = v46;

  v75.origin.x = v41;
  v75.origin.y = v43;
  v75.size.width = v45;
  v75.size.height = v47;
  objc_msgSend(v37, sel_setFrame_, v38, v28, 4.0, CGRectGetHeight(v75) - v28);
  uint64_t v48 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView];
  objc_msgSend(v37, sel_frame);
  double v49 = CGRectGetMaxX(v76);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v50 = result;
  objc_msgSend(result, sel_bounds);
  CGFloat v52 = v51;
  CGFloat v54 = v53;
  CGFloat v56 = v55;
  CGFloat v58 = v57;

  v77.origin.x = v52;
  v77.origin.y = v54;
  v77.size.width = v56;
  v77.size.height = v58;
  double v59 = CGRectGetWidth(v77);
  id result = objc_msgSend(v0, sel_view);
  if (result)
  {
    uint64_t v60 = result;
    objc_msgSend(result, sel_bounds);
    CGFloat v62 = v61;
    CGFloat v64 = v63;
    CGFloat v66 = v65;
    CGFloat v68 = v67;

    v78.origin.x = v62;
    v78.origin.y = v64;
    v78.size.width = v66;
    v78.size.height = v68;
    return objc_msgSend(v48, sel_setFrame_, v49, 0.0, v59 * 0.5 + -4.0, CGRectGetHeight(v78));
  }
LABEL_15:
  __break(1u);
  return result;
}

void sub_1C022DFE0()
{
  id v1 = objc_msgSend(v0, sel_splitViewController);
  if (!v1
    || ((uint64_t v2 = v1,
         id v3 = objc_msgSend(v1, sel_traitCollection),
         v2,
         id v4 = objc_msgSend(v3, sel_horizontalSizeClass),
         v3,
         v4)
      ? (BOOL v5 = v4 == (id)2)
      : (BOOL v5 = 1),
        v5))
  {
    id v6 = objc_msgSend(v0, sel_splitViewController);
    if (!v6) {
      return;
    }
    id v13 = v6;
    objc_msgSend(v6, sel_togglePrimaryViewVisibilityAnimated_, 1);
  }
  else
  {
    if (v4 != (id)1) {
      return;
    }
    id v7 = objc_msgSend(v0, sel_splitViewController);
    if (!v7) {
      return;
    }
    id v13 = v7;
    type metadata accessor for DebugFormatUploadMainViewController();
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v0, sel_splitViewController);
      if (v10)
      {
        double v11 = v10;
        id v12 = objc_retain(*(id *)(v9
                                + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadMainViewController_uploadNavigationController));
        objc_msgSend(v11, sel_presentViewController_animated_completion_, v12, 1, 0);
      }
    }
  }
}

uint64_t sub_1C022E1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151E16C();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C151E1DC();
  uint64_t v7 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB87BF18 != -1) {
    swift_once();
  }
  id v10 = (void *)qword_1EB93C748;
  sub_1BFEE7CC4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C1529AE0;
  id v12 = v10;
  uint64_t v13 = sub_1C00C2734();
  uint64_t v15 = v14;
  *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v11 + 64) = sub_1BFE9C558();
  *(void *)(v11 + 32) = v13;
  *(void *)(v11 + 40) = v15;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  type metadata accessor for DebugFormatUploadDiffChangeSet();
  swift_allocObject();
  uint64_t v16 = swift_retain();
  double v17 = sub_1C0FA93A0(v16);
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1B0);
  CGFloat v18 = (void *)sub_1C151F56C();
  double v19 = (void *)swift_allocObject();
  long long v19[2] = a1;
  v19[3] = a2;
  v19[4] = v17;
  aBlock[4] = sub_1C022F408;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_11;
  CGFloat v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  sub_1C151E19C();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1BFD32B60();
  sub_1BFEC0550(0, (unint64_t *)&qword_1EB879C70, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1BFD32AD8();
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v9, v6, v20);
  _Block_release(v20);
  swift_release();

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v22);
}

void sub_1C022E588(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = a2 + 16;
  if (qword_1EB87BF18 != -1) {
    swift_once();
  }
  id v6 = (void *)qword_1EB93C748;
  sub_1BFEE7CC4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C1529AE0;
  id v8 = v6;
  uint64_t v9 = sub_1C00C2734();
  uint64_t v11 = v10;
  uint64_t v12 = MEMORY[0x1E4FBB1A0];
  *(void *)(v7 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v13 = sub_1BFE9C558();
  *(void *)(v7 + 64) = v13;
  *(void *)(v7 + 32) = v9;
  *(void *)(v7 + 40) = v11;
  sub_1C151F38C();
  sub_1C15197BC();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x1C18C9C60](v5);
  if (!v14) {
    return;
  }
  uint64_t v15 = (char *)v14;
  if (!*(void *)(v14 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff))
  {
    sub_1C00C2734();
    goto LABEL_10;
  }
  swift_retain();
  uint64_t v16 = sub_1C00C2734();
  uint64_t v18 = v17;
  swift_release();
  uint64_t v19 = sub_1C00C2734();
  if (!v18)
  {
LABEL_10:

    swift_bridgeObjectRelease();
    return;
  }
  if (v16 == v19 && v18 == v20)
  {
    swift_bridgeObjectRelease_n();
LABEL_12:
    uint64_t v22 = *(void *)&v15[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView];
    *(unsigned char *)(v22 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading) = 0;
    objc_msgSend(*(id *)(v22 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView), sel_stopAnimating, 1, 2);
    uint64_t v23 = *(void *)&v15[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView];
    *(unsigned char *)(v23 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_isLoading) = 0;
    objc_msgSend(*(id *)(v23 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_activityIndicatorView), sel_stopAnimating);
    sub_1C022E874(a1, a3);
    CGFloat v24 = (void *)qword_1EB93C748;
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = v29;
    id v26 = v24;
    uint64_t v27 = sub_1C00C2734();
    *(void *)(v25 + 56) = v12;
    *(void *)(v25 + 64) = v13;
    *(void *)(v25 + 32) = v27;
    *(void *)(v25 + 40) = v28;
    sub_1C151F38C();
    sub_1C15197BC();

    swift_bridgeObjectRelease();
    return;
  }
  char v21 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_12;
  }
}

void sub_1C022E874(uint64_t a1, void *a2)
{
  id v3 = v2;
  uint64_t v56 = a1;
  sub_1BFEC0550(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v55 - v6;
  uint64_t v8 = *(void *)&v2[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView];
  uint64_t v10 = a2[2];
  unint64_t v9 = a2[3];
  uint64_t v11 = v10 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localVersion;
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v7, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  uint64_t v14 = *(void **)(v8 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel);
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  id v15 = sub_1C0E879B4((uint64_t)v7);
  objc_msgSend(v14, sel_setAttributedText_, v15);

  uint64_t v16 = (unint64_t *)(v8 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet);
  swift_beginAccess();
  *uint64_t v16 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView;
  uint64_t v18 = *(void **)(v8 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView);
  objc_msgSend(v18, sel_setContentOffset_, 0.0, 0.0);
  objc_msgSend(v18, sel_setScrollEnabled_, 0);
  objc_msgSend(v18, sel_setScrollEnabled_, 1);
  objc_msgSend(v18, sel_reloadData);
  sub_1BFEC001C((uint64_t)v7);
  uint64_t v19 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView];
  unint64_t v20 = a2[4];
  uint64_t v21 = v10 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteVersion;
  uint64_t v22 = *(void **)(v19 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_titleLabel);
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  id v23 = sub_1C0E879B4(v21);
  objc_msgSend(v22, sel_setAttributedText_, v23);

  CGFloat v24 = (unint64_t *)(v19 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_changeSet);
  swift_beginAccess();
  *CGFloat v24 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView;
  id v26 = *(void **)(v19 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_tableView);
  objc_msgSend(v26, sel_setContentOffset_, 0.0, 0.0);
  objc_msgSend(v26, sel_setScrollEnabled_, 0);
  objc_msgSend(v26, sel_setScrollEnabled_, 1);
  objc_msgSend(v26, sel_reloadData);
  *(void *)(v19 + OBJC_IVAR____TtC8NewsFeed25DebugFormatUploadDiffView_delegate + 8) = &off_1F1B94310;
  swift_unknownObjectWeakAssign();
  uint64_t v27 = *(char **)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView];
  uint64_t v28 = v56;
  *(void *)&v27[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_numberOfLines] = *(void *)(v56 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localNumberOfLines);
  *(void *)&v27[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_changedHunkRanges] = *(void *)(v28 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localHunkRanges);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v29 = *(void **)(v8 + v17);
  objc_msgSend(v29, sel_contentSize);
  CGFloat v30 = &v27[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_contentSize];
  *(void *)CGFloat v30 = v31;
  *((void *)v30 + 1) = v32;
  objc_msgSend(v27, sel_setNeedsLayout);
  objc_msgSend(v29, sel_adjustedContentInset);
  double v33 = &v27[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_contentInsets];
  *(void *)double v33 = v34;
  *((void *)v33 + 1) = v35;
  *((void *)v33 + 2) = v36;
  *((void *)v33 + 3) = v37;
  objc_msgSend(v27, sel_setNeedsLayout);
  double v38 = *(char **)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView];
  *(void *)&v38[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_numberOfLines] = *(void *)(v28 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteNumberOfLines);
  *(void *)&v38[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_changedHunkRanges] = *(void *)(v28 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteHunkRanges);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void **)(v19 + v25);
  objc_msgSend(v39, sel_contentSize);
  double v40 = &v38[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_contentSize];
  *(void *)double v40 = v41;
  *((void *)v40 + 1) = v42;
  objc_msgSend(v38, sel_setNeedsLayout);
  objc_msgSend(v39, sel_adjustedContentInset);
  CGFloat v43 = &v38[OBJC_IVAR____TtC8NewsFeed31DebugFormatUploadDiffGutterView_contentInsets];
  *(void *)CGFloat v43 = v44;
  *((void *)v43 + 1) = v45;
  *((void *)v43 + 2) = v46;
  *((void *)v43 + 3) = v47;
  objc_msgSend(v38, sel_setNeedsLayout);
  id v48 = objc_msgSend(v3, sel_navigationController);
  if (v48)
  {
    double v49 = v48;
    id v50 = objc_msgSend(v48, sel_navigationBar);

    objc_msgSend(v50, sel_setNeedsLayout);
  }
  id v51 = objc_msgSend(v3, sel_view);
  if (v51)
  {
    CGFloat v52 = v51;
    objc_msgSend(v51, sel_setNeedsLayout);

    id v53 = objc_msgSend(v3, sel_view);
    if (v53)
    {
      CGFloat v54 = v53;
      objc_msgSend(v53, sel_layoutIfNeeded);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t type metadata accessor for DebugFormatUploadDiffViewController()
{
  return self;
}

void sub_1C022EF40(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0550(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v20 - v11;
  if (*(void *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView] == a1)
  {
    uint64_t v13 = *(void *)&v3[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff];
    if (v13)
    {
      uint64_t v14 = *(void **)(v13 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteVersions);
      sub_1BFEC03F4(v13 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_remoteVersion, (uint64_t)v12);
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13 + OBJC_IVAR____TtC8NewsFeed21DebugFormatUploadDiff_localVersion, v6);
      id v15 = objc_allocWithZone((Class)type metadata accessor for DebugFormatUploadDiffVersionsViewController());
      swift_bridgeObjectRetain();
      swift_retain();
      id v16 = sub_1C0C1B2B0(v14, (uint64_t)v12, (uint64_t)v9);
      id v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v16);
      objc_msgSend(v17, sel_setModalPresentationStyle_, 7);
      id v18 = objc_msgSend(v17, sel_popoverPresentationController);
      if (v18)
      {
        uint64_t v19 = v18;
        objc_msgSend(v18, sel_setSourceItem_, a2);
      }
      objc_msgSend(v3, sel_presentViewController_animated_completion_, v17, 1, 0);
      swift_release();
    }
  }
}

id sub_1C022F1A8(uint64_t a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff] = 0;
  uint64_t v5 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)&v2[v5] = v6;
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView;
  uint64_t v8 = (objc_class *)type metadata accessor for DebugFormatUploadDiffView();
  id v9 = objc_allocWithZone(v8);
  uint64_t v10 = v2;
  *(void *)&v2[v7] = sub_1C0E86C78(0);
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView;
  uint64_t v12 = (objc_class *)type metadata accessor for DebugFormatUploadDiffGutterView();
  id v13 = objc_allocWithZone(v12);
  *(void *)&v10[v11] = sub_1C1504A00(0);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView;
  id v15 = objc_allocWithZone(v8);
  *(void *)&v10[v14] = sub_1C0E86C78(1);
  uint64_t v16 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView;
  id v17 = objc_allocWithZone(v12);
  *(void *)&v10[v16] = sub_1C1504A00(1);
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_changeSetLabel;
  sub_1C151A4AC();
  *(void *)&v10[v18] = sub_1C151A47C();
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController____lazy_storage___chaneSetBarButtonItem] = 0;
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_editor] = a1;
  id v19 = objc_allocWithZone((Class)type metadata accessor for DebugFormatUploadDiffStatusView());
  uint64_t v20 = swift_retain_n();
  *(void *)&v10[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_statusView] = sub_1C00962EC(v20);

  v22.receiver = v10;
  v22.super_class = ObjectType;
  return objc_msgSendSuper2(&v22, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1C022F340()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C022F378()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C022F3B8()
{
  return sub_1C022E1A4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C022F3C0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C022F408()
{
  sub_1C022E588(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1C022F414()
{
  id v1 = v0;
  *(void *)&v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_diff] = 0;
  uint64_t v2 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_styler;
  type metadata accessor for DebugFormatStyler();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = 0;
  *(void *)&v1[v2] = v3;
  uint64_t v4 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffView;
  uint64_t v5 = (objc_class *)type metadata accessor for DebugFormatUploadDiffView();
  id v6 = objc_allocWithZone(v5);
  *(void *)&v1[v4] = sub_1C0E86C78(0);
  uint64_t v7 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_remoteDiffGutterView;
  uint64_t v8 = (objc_class *)type metadata accessor for DebugFormatUploadDiffGutterView();
  id v9 = objc_allocWithZone(v8);
  *(void *)&v1[v7] = sub_1C1504A00(0);
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffView;
  id v11 = objc_allocWithZone(v5);
  *(void *)&v1[v10] = sub_1C0E86C78(1);
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_localDiffGutterView;
  id v13 = objc_allocWithZone(v8);
  *(void *)&v1[v12] = sub_1C1504A00(1);
  uint64_t v14 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController_changeSetLabel;
  sub_1C151A4AC();
  *(void *)&v1[v14] = sub_1C151A47C();
  *(void *)&v1[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadDiffViewController____lazy_storage___chaneSetBarButtonItem] = 0;

  sub_1C152040C();
  __break(1u);
}

void sub_1C022F56C()
{
  sub_1C022CE8C(v0);
}

void sub_1C022F574()
{
  sub_1C022D9B4(v0);
}

unint64_t sub_1C022F57C()
{
  unint64_t result = qword_1EA1A5300;
  if (!qword_1EA1A5300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5300);
  }
  return result;
}

unint64_t sub_1C022F5D0()
{
  unint64_t result = qword_1EA1A5310;
  if (!qword_1EA1A5310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1A5310);
  }
  return result;
}

void sub_1C022F624(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C022F68C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C022F624(255, a2, a3, a4, MEMORY[0x1E4FAB3C0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C022F6F0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C022F754(255, a2, a3, a4, MEMORY[0x1E4FAB3C0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C022F754(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C022F7AC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C022F7E4()
{
  return sub_1C022F808();
}

uint64_t sub_1C022F808()
{
  uint64_t v1 = sub_1C151829C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00913E8(0, &qword_1EB86EFF8, (uint64_t (*)(uint64_t))sub_1C022FAEC, MEMORY[0x1E4FAB160]);
  MEMORY[0x1F4188790](v5 - 8);
  sub_1C00913E8(0, (unint64_t *)&unk_1EB85C6D0, MEMORY[0x1E4FAA920], MEMORY[0x1E4FBBE00]);
  sub_1C151808C();
  unint64_t v6 = (_OWORD *)swift_allocObject();
  v6[1] = xmmword_1C1529AE0;
  id v12 = *(id *)(v0 + 16);
  uint64_t v7 = qword_1EB863D20;
  id v8 = v12;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = __swift_project_value_buffer(v1, (uint64_t)qword_1EB863D00);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v9, v1);
  sub_1C022FAEC();
  sub_1C151945C();

  sub_1C151807C();
  id v12 = v6;
  sub_1C00913E8(0, &qword_1EB85AB60, (uint64_t (*)(uint64_t))sub_1C0064EB4, MEMORY[0x1E4FAB088]);
  swift_allocObject();
  return sub_1C151908C();
}

unint64_t sub_1C022FAEC()
{
  unint64_t result = qword_1EB87B080;
  if (!qword_1EB87B080)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87B080);
  }
  return result;
}

NewsFeed::Fonts::Font __swiftcall Fonts.Font.init(name:)(NewsFeed::Fonts::Font name)
{
  NewsFeed::Fonts::Font *v1 = name;
  return name;
}

id Fonts.Font.font(size:)(double a1)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v3 = self;
  id v4 = objc_msgSend(v3, sel_fontWithName_size_, v2, a1);

  if (v4) {
    return v4;
  }
  id v6 = objc_msgSend(v3, sel_systemFontOfSize_, a1);
  return v6;
}

id Fonts.Font.scaledFont(size:style:)(uint64_t a1, double a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, a1);
  swift_bridgeObjectRetain();
  id v4 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_fontWithName_size_, v4, a2);

  if (!v6) {
    id v6 = objc_msgSend(v5, sel_systemFontOfSize_, a2);
  }
  id v7 = objc_msgSend(v3, sel_scaledFontForFont_, v6);

  return v7;
}

uint64_t static Fonts.DrukText.bold.getter@<X0>(void *a1@<X8>)
{
  return sub_1C022FD84(aDruktextBold, (uint64_t *)&aDruktextBold[8], a1);
}

uint64_t static Fonts.DrukText.bold.setter(uint64_t *a1)
{
  return sub_1C022FDEC(a1, aDruktextBold, &aDruktextBold[1]);
}

uint64_t (*static Fonts.DrukText.bold.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t static Fonts.SFUIDisplay.black.getter@<X0>(void *a1@<X8>)
{
  return sub_1C022FD84(qword_1EA198538, &qword_1EA198538[1], a1);
}

uint64_t sub_1C022FD84@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  swift_beginAccess();
  uint64_t v6 = *a2;
  *a3 = *a1;
  a3[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t static Fonts.SFUIDisplay.black.setter(uint64_t *a1)
{
  return sub_1C022FDEC(a1, qword_1EA198538, &qword_1EA198538[1]);
}

uint64_t sub_1C022FDEC(uint64_t *a1, void *a2, void *a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_beginAccess();
  *a2 = v5;
  *a3 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Fonts.SFUIDisplay.black.modify())()
{
  return j__swift_endAccess;
}

ValueMetadata *type metadata accessor for Fonts()
{
  return &type metadata for Fonts;
}

ValueMetadata *type metadata accessor for Fonts.Font()
{
  return &type metadata for Fonts.Font;
}

ValueMetadata *type metadata accessor for Fonts.DrukText()
{
  return &type metadata for Fonts.DrukText;
}

ValueMetadata *type metadata accessor for Fonts.SFUIDisplay()
{
  return &type metadata for Fonts.SFUIDisplay;
}

uint64_t FormatTextNodeAlternative.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatTextNodeAlternative.content.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

uint64_t FormatTextNodeAlternative.logic.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_retain();
}

BOOL _s8NewsFeed25FormatTextNodeAlternativeV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  unint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_1C1520A9C(), v8 = 0, (v7 & 1) != 0))
  {
    unint64_t v10 = v5;
    uint64_t v11 = v2;
    if (static FormatTextContent.== infix(_:_:)(&v11, &v10))
    {
      unint64_t v10 = v4;
      uint64_t v11 = v3;
      return static FormatTextNodeAlternativeLogic.== infix(_:_:)((unint64_t *)&v11, &v10);
    }
    else
    {
      return 0;
    }
  }
  return v8;
}

unint64_t sub_1C022FFD0(uint64_t a1)
{
  unint64_t result = sub_1C022FFF8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C022FFF8()
{
  unint64_t result = qword_1EA198548;
  if (!qword_1EA198548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198548);
  }
  return result;
}

unint64_t sub_1C023004C(void *a1)
{
  a1[1] = sub_1C006ECBC();
  a1[2] = sub_1C006ED10();
  unint64_t result = sub_1C0230084();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0230084()
{
  unint64_t result = qword_1EA198550;
  if (!qword_1EA198550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198550);
  }
  return result;
}

void *assignWithCopy for FormatTextNodeAlternative(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatTextNodeAlternative(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextNodeAlternative()
{
  return &type metadata for FormatTextNodeAlternative;
}

uint64_t sub_1C02301D0()
{
  type metadata accessor for DebugFormatLogger();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_1C0230280();
  qword_1EA2B4EF0 = v0;
  return result;
}

uint64_t sub_1C023020C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatLogger()
{
  return self;
}

uint64_t sub_1C0230280()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C151F55C();
  uint64_t v12 = *(void *)(v2 - 8);
  uint64_t v13 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v11 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C151F52C();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1C151E1DC();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v6);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1BFDE8EA4(0, &qword_1EA198558, (uint64_t (*)(uint64_t))sub_1C0231878, MEMORY[0x1E4FAAC80]);
  swift_allocObject();
  uint64_t v7 = sub_1C151892C();
  uint64_t v8 = MEMORY[0x1E4FBC868];
  *(void *)(v0 + 16) = v7;
  *(void *)(v0 + 24) = v8;
  sub_1BFDE8EA4(0, (unint64_t *)&unk_1EB8903A0, MEMORY[0x1E4FAA868], MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C1529AE0;
  sub_1C1517E9C();
  uint64_t v14 = v9;
  sub_1BFDE8CAC((unint64_t *)&qword_1EB87C6F0, MEMORY[0x1E4FAA868]);
  sub_1C02318AC(0);
  sub_1BFDE8CAC((unint64_t *)&qword_1EB880C70, sub_1C02318AC);
  sub_1C151FFBC();
  sub_1C1517ECC();
  swift_allocObject();
  *(void *)(v1 + 32) = sub_1C1517EBC();
  sub_1BFE4597C();
  sub_1C151E19C();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  sub_1BFDE8CAC((unint64_t *)&unk_1EB87A1A0, MEMORY[0x1E4FBCC10]);
  sub_1C006480C(0);
  sub_1BFDE8CAC((unint64_t *)&qword_1EB879FC0, sub_1C006480C);
  sub_1C151FFBC();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v11, *MEMORY[0x1E4FBCC58], v13);
  *(void *)(v1 + 40) = sub_1C151F5AC();
  return v1;
}

uint64_t sub_1C02306F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v38 = a1;
  uint64_t v41 = sub_1C151E16C();
  uint64_t v44 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  double v40 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C151E1DC();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v36 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C151631C();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  id v19 = (char *)&v34 - v18;
  uint64_t v39 = (char *)&v34 - v18;
  sub_1C151630C();
  uint64_t v35 = sub_1C0230D0C(a2, a3, a4, a5, v5);
  uint64_t v21 = v20;
  uint64_t v37 = *(void *)(v5 + 40);
  uint64_t v22 = v13;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v24 = (v15 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v26 + v23, v16, v22);
  uint64_t v27 = (uint64_t *)(v26 + v24);
  uint64_t *v27 = v35;
  v27[1] = v21;
  uint64_t v28 = v38;
  *(void *)(v26 + v25) = v38;
  *(void *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8)) = v5;
  aBlock[4] = sub_1C02313C8;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_10;
  long long v29 = _Block_copy(aBlock);
  sub_1C0231470(v28);
  swift_retain();
  CGFloat v30 = v36;
  sub_1C151E19C();
  uint64_t v45 = MEMORY[0x1E4FBC860];
  sub_1BFDE8CAC((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  sub_1BFDE826C();
  sub_1BFDE8CAC((unint64_t *)&qword_1EB879C80, (void (*)(uint64_t))sub_1BFDE826C);
  uint64_t v32 = v40;
  uint64_t v31 = v41;
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v30, v32, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v31);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v43);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v39, v22);
  return swift_release();
}

uint64_t sub_1C0230B48()
{
  return swift_release();
}

uint64_t sub_1C0230B94(uint64_t a1, uint64_t a2)
{
  return sub_1C02306F8((void *)1, 0, 0, a1, a2);
}

uint64_t sub_1C0230BCC(uint64_t a1, uint64_t a2)
{
  return sub_1C02306F8((void *)2, 0, 0, a1, a2);
}

uint64_t sub_1C0230C04(uint64_t a1, uint64_t a2)
{
  return sub_1C02306F8((void *)3, 0, 0, a1, a2);
}

uint64_t sub_1C0230C3C(uint64_t a1, uint64_t a2)
{
  return sub_1C02306F8((void *)4, 0, 0, a1, a2);
}

uint64_t sub_1C0230C74(uint64_t a1, uint64_t a2)
{
  return sub_1C02306F8(0, 0, 0, a1, a2);
}

uint64_t sub_1C0230CAC()
{
  swift_retain();
  sub_1C151950C();
  return swift_release();
}

uint64_t sub_1C0230D04()
{
  return sub_1C0230B48();
}

uint64_t sub_1C0230D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a2) {
    goto LABEL_8;
  }
  double v10 = CACurrentMediaTime();
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v11 = *(void *)(a5 + 24);
  if (*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1BFEF2D8C(a1, a2);
    double v14 = 0.0;
    if (v13) {
      double v14 = *(double *)(*(void *)(v11 + 56) + 8 * v12);
    }
    char v15 = v13 ^ 1;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = 1;
    double v14 = 0.0;
  }
  swift_endAccess();
  swift_beginAccess();
  sub_1C0353938(a1, a2);
  swift_endAccess();
  sub_1C1517E8C();
  if ((v15 & 1) == 0)
  {
    sub_1BFDE8EA4(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C1527210;
    uint64_t v17 = MEMORY[0x1E4FBB460];
    *(void *)(v16 + 56) = MEMORY[0x1E4FBB3D0];
    *(void *)(v16 + 64) = v17;
    *(double *)(v16 + 32) = (v10 - v14) * 1000.0;
    *(void *)(v16 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v16 + 104) = sub_1BFE9C558();
    *(void *)(v16 + 72) = a3;
    *(void *)(v16 + 80) = a4;
    swift_bridgeObjectRetain();
    return sub_1C151E66C();
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRetain();
  }
  return a3;
}

uint64_t sub_1C0230EFC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_1C151E16C();
  uint64_t v26 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  double v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1C151E1DC();
  uint64_t v11 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  char v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151631C();
  __n128 v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v18 + 16))(v17, a1, v15);
  type metadata accessor for DebugFormatLogEntry();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1C0231470(a4);
  uint64_t v19 = sub_1C0446040((uint64_t)v17, a2, a3, a4);
  sub_1C02317E4(a4);
  sub_1BFE4597C();
  uint64_t v20 = (void *)sub_1C151F56C();
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = v19;
  aBlock[4] = sub_1C0231870;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BFC9FC68;
  aBlock[3] = &block_descriptor_10;
  unint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_1C151E19C();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1BFDE8CAC((unint64_t *)&qword_1EB871800, MEMORY[0x1E4FBCB00]);
  sub_1BFDE826C();
  sub_1BFDE8CAC((unint64_t *)&qword_1EB879C80, (void (*)(uint64_t))sub_1BFDE826C);
  sub_1C151FFBC();
  MEMORY[0x1C18C70C0](0, v13, v10, v23);
  _Block_release(v23);
  swift_release();

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v25);
}

uint64_t sub_1C02312F4()
{
  uint64_t v1 = sub_1C151631C();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(char **)(v0 + v4);
  if ((unint64_t)(v5 - 1) >= 4) {

  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C02313C8()
{
  uint64_t v1 = *(void *)(sub_1C151631C() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = *(void **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = *(void *)(v0 + v3 + 8);
  return sub_1C0230EFC(v0 + v2, v5, v6, v4);
}

id sub_1C0231470(id result)
{
  if ((char *)result - 1 >= (char *)4) {
    return result;
  }
  return result;
}

uint64_t sub_1C0231484()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_retain();
    uint64_t v1 = (void (*)(unsigned char *, void))sub_1C151893C();
    unint64_t v3 = v2;
    uint64_t v4 = swift_retain();
    MEMORY[0x1C18C66D0](v4);
    if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C151EC8C();
    }
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_release();
    v1(v5, 0);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C023158C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_1C151635C();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v10 = a2;
  }
  else
  {
    sub_1C151634C();
    a1 = sub_1C151633C();
    uint64_t v10 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_bridgeObjectRetain();
  double v12 = CACurrentMediaTime();
  if (qword_1EA1943D0 != -1) {
    swift_once();
  }
  swift_retain();
  sub_1C1517E7C();
  swift_release();
  uint64_t v13 = qword_1EA2B4EF0;
  swift_beginAccess();
  if (!*(void *)(*(void *)(v13 + 24) + 16))
  {
    swift_endAccess();
LABEL_11:
    uint64_t v16 = qword_1EA2B4EF0;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *(void *)(v16 + 24);
    *(void *)(v16 + 24) = 0x8000000000000000;
    sub_1C1066AA4(a1, v10, isUniquelyReferenced_nonNull_native, v12);
    *(void *)(v16 + 24) = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  sub_1BFEF2D8C(a1, v10);
  char v15 = v14;
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (v15 & 1) == 0 || (a3) {
    goto LABEL_11;
  }
LABEL_12:
  swift_retain();
  sub_1C1517E8C();
  swift_release();
  return a1;
}

void sub_1C02317E4(id a1)
{
  if ((char *)a1 - 1 >= (char *)4) {
}
  }

uint64_t sub_1C02317F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C0231830()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0231870()
{
  return sub_1C0231484();
}

void sub_1C0231878(uint64_t a1)
{
}

void sub_1C02318AC(uint64_t a1)
{
}

unint64_t sub_1C02318E8(char a1)
{
  unint64_t result = 0xD000000000000010;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD00000000000001CLL;
    }
    else {
      return 0xD000000000000028;
    }
  }
  return result;
}

uint64_t sub_1C0231948@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C0231D74();
  *a1 = result;
  return result;
}

unint64_t sub_1C0231978@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C02318E8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C02319A4()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C0231A04()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C0231A54(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C1478E0C(*a1, *a2);
}

uint64_t sub_1C0231A60()
{
  return sub_1C015C750();
}

uint64_t sub_1C0231A68()
{
  return sub_1C0447144();
}

uint64_t sub_1C0231A70()
{
  return sub_1C044BEAC();
}

void sub_1C0231A78(void *a1@<X8>)
{
  *a1 = &unk_1F1B68BF0;
}

unint64_t sub_1C0231A88(char a1)
{
  unint64_t result = 0xD000000000000017;
  if (a1)
  {
    if (a1 == 1) {
      return 0xD000000000000024;
    }
    else {
      return 0xD000000000000028;
    }
  }
  return result;
}

unint64_t sub_1C0231AE8()
{
  return sub_1C0231A88(*v0);
}

uint64_t sub_1C0231AF0(uint64_t a1)
{
  return sub_1C0231BBC(a1, 0xD000000000000038, 0x80000001C1608500, &qword_1EA198568);
}

void sub_1C0231B14()
{
  if (!qword_1EB8979E8)
  {
    unint64_t v0 = sub_1C151720C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8979E8);
    }
  }
}

uint64_t sub_1C0231B74(uint64_t a1)
{
  return sub_1C0231BBC(a1, 0xD000000000000045, 0x80000001C1608540, &qword_1EA198570);
}

uint64_t sub_1C0231B98(uint64_t a1)
{
  return sub_1C0231BBC(a1, 0xD000000000000054, 0x80000001C1608590, &qword_1EA198578);
}

uint64_t sub_1C0231BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = sub_1C151718C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1C151719C();
  __n128 v10 = MEMORY[0x1F4188790](v9);
  (*(void (**)(unsigned char *, void, __n128))(v12 + 104))(&v14[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4FAB410], v10);
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FAB3F8], v5);
  v14[15] = 0;
  sub_1C0231B14();
  swift_allocObject();
  uint64_t result = sub_1C151721C();
  *a4 = result;
  return result;
}

uint64_t sub_1C0231D74()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C0231DC0()
{
  sub_1C151706C();
  uint64_t v0 = 0;
  uint64_t v1 = MEMORY[0x1E4FBC860];
  do
  {
    int v4 = byte_1F1B68C18[v0 + 32];
    sub_1C151704C();
    if (v4)
    {
      if (v4 == 1)
      {
        if (qword_1EA1943E0 == -1) {
          goto LABEL_13;
        }
LABEL_9:
        swift_once();
        goto LABEL_13;
      }
      if (qword_1EA1943E8 != -1) {
        goto LABEL_9;
      }
    }
    else if (qword_1EA1943D8 != -1)
    {
      goto LABEL_9;
    }
LABEL_13:
    swift_retain();
    sub_1C151703C();
    swift_release();
    swift_release();
    if (v7 == 1)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1C05F6CC8(0, *(void *)(v1 + 16) + 1, 1);
      }
      unint64_t v3 = *(void *)(v1 + 16);
      unint64_t v2 = *(void *)(v1 + 24);
      if (v3 >= v2 >> 1) {
        sub_1C05F6CC8(v2 > 1, v3 + 1, 1);
      }
      *(void *)(v1 + 16) = v3 + 1;
      *(unsigned char *)(v1 + v3 + 32) = v4;
    }
    ++v0;
  }
  while (v0 != 3);
  uint64_t v5 = sub_1C0605944(v1);
  swift_release();
  return v5;
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataCompilerMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0232094);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataCompilerMode()
{
  return &type metadata for FormatDerivedDataCompilerMode;
}

unint64_t sub_1C02320D0()
{
  unint64_t result = qword_1EA198580;
  if (!qword_1EA198580)
  {
    sub_1C0232128();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198580);
  }
  return result;
}

void sub_1C0232128()
{
  if (!qword_1EA198588)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA198588);
    }
  }
}

unint64_t sub_1C0232184()
{
  unint64_t result = qword_1EA198590;
  if (!qword_1EA198590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198590);
  }
  return result;
}

unint64_t sub_1C02321D8()
{
  unint64_t result = qword_1EA198598;
  if (!qword_1EA198598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198598);
  }
  return result;
}

uint64_t dispatch thunk of FormatTypeProviderType.types.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C0232240(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1C02322C8(a1, a2, a3, &qword_1EA1985B8, (uint64_t (*)(void))sub_1C0233BCC, (uint64_t)&type metadata for FormatStandingDataVisualization.CodingKeys, (unint64_t *)&qword_1EA1985C8);
}

uint64_t sub_1C0232284(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_1C02322C8(a1, a2, a3, &qword_1EA1985D0, (uint64_t (*)(void))sub_1C0233CEC, (uint64_t)&type metadata for FormatBracketDataVisualization.CodingKeys, (unint64_t *)&qword_1EA1985E0);
}

uint64_t sub_1C02322C8(uint64_t result, unint64_t a2, uint64_t a3, unint64_t *a4, uint64_t (*a5)(void), uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v7 = result & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    sub_1C0233C84(0, a4, a5, a6, MEMORY[0x1E4FBBDE0]);
    sub_1C0233C20(a7, a4, a5, a6);
    return sub_1C1520BAC();
  }
  return result;
}

uint64_t FormatScoreDataVisualization.tagIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatScoreDataVisualization.umcIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatScoreDataVisualization.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatScoreDataVisualization.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatScoreDataVisualization.selectors.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatScoreDataVisualization.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatScoreDataVisualization.properties.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatScoreDataVisualization.properties.modify())()
{
  return j__swift_endAccess;
}

uint64_t FormatScoreDataVisualization.query.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C02325F0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = *a2;
  swift_beginAccess();
  *(void *)(v4 + 64) = v3;
  *(void *)(v4 + 72) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatScoreDataVisualization.query.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatScoreDataVisualization.query.modify())()
{
  return j_j__swift_endAccess;
}

void *FormatScoreDataVisualization.__allocating_init(tagIdentifier:umcIdentifier:selectors:properties:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)swift_allocObject();
  long long v16[2] = a1;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a4;
  swift_beginAccess();
  v16[6] = a5;
  swift_beginAccess();
  _OWORD v16[7] = a6;
  swift_beginAccess();
  v16[8] = a7;
  v16[9] = a8;
  return v16;
}

void *FormatScoreDataVisualization.init(tagIdentifier:umcIdentifier:selectors:properties:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_beginAccess();
  v8[6] = a5;
  swift_beginAccess();
  v8[7] = a6;
  swift_beginAccess();
  v8[8] = a7;
  v8[9] = a8;
  return v8;
}

uint64_t sub_1C023285C()
{
  uint64_t result = 0x746E656449676174;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E656449636D75;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    case 4:
      uint64_t result = 0x7972657571;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C0232914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C023395C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C023293C(uint64_t a1)
{
  unint64_t v2 = sub_1C0232E2C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0232978(uint64_t a1)
{
  unint64_t v2 = sub_1C0232E2C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatScoreDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatScoreDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatScoreDataVisualization.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0233C84(0, &qword_1EB86BED8, (uint64_t (*)(void))sub_1C0232E2C, (uint64_t)&type metadata for FormatScoreDataVisualization.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17[-1] - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0232E2C();
  sub_1C1520F0C();
  char v18 = 0;
  sub_1C15207CC();
  if (!v2)
  {
    char v18 = 1;
    sub_1C15207CC();
    swift_beginAccess();
    uint64_t v11 = v3[6];
    if (*(void *)(v11 + 16))
    {
      char v19 = 2;
      swift_bridgeObjectRetain_n();
      uint64_t v12 = sub_1BFE71F8C(v11);
      swift_bridgeObjectRelease();
      v17[0] = (uint64_t)v12;
      swift_retain();
      sub_1BFD8BB48(v17);
      swift_release();
      v17[3] = v17[0];
      sub_1C0233C20(&qword_1EA1985A0, &qword_1EB86BED8, (uint64_t (*)(void))sub_1C0232E2C, (uint64_t)&type metadata for FormatScoreDataVisualization.CodingKeys);
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    uint64_t v13 = v3[7];
    if (*(void *)(v13 + 16))
    {
      char v19 = 3;
      v17[0] = v13;
      sub_1C0233C20(&qword_1EA1985A0, &qword_1EB86BED8, (uint64_t (*)(void))sub_1C0232E2C, (uint64_t)&type metadata for FormatScoreDataVisualization.CodingKeys);
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
      sub_1C00FCE94();
      sub_1C1520BAC();
    }
    swift_beginAccess();
    uint64_t v14 = v3[8];
    unint64_t v15 = v3[9];
    swift_bridgeObjectRetain();
    sub_1C02322C8(v14, v15, 4, &qword_1EB86BED8, (uint64_t (*)(void))sub_1C0232E2C, (uint64_t)&type metadata for FormatScoreDataVisualization.CodingKeys, &qword_1EA1985A0);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C0232E2C()
{
  unint64_t result = qword_1EB86BD78;
  if (!qword_1EB86BD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BD78);
  }
  return result;
}

uint64_t FormatScoreDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatScoreDataVisualization.init(from:)(a1);
  return v2;
}

void *FormatScoreDataVisualization.init(from:)(void *a1)
{
  uint64_t v4 = *v1;
  uint64_t v36 = v2;
  uint64_t v37 = v4;
  sub_1C00FC8DC();
  uint64_t v33 = v5;
  uint64_t v30 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v32 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v35 = v7;
  uint64_t v31 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0233C84(0, &qword_1EB86BEC8, (uint64_t (*)(void))sub_1C0232E2C, (uint64_t)&type metadata for FormatScoreDataVisualization.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v10;
  uint64_t v34 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0232E2C();
  uint64_t v14 = v36;
  unint64_t v15 = v1;
  uint64_t v16 = (uint64_t)a1;
  sub_1C1520EBC();
  if (v14)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v17 = v9;
    uint64_t v18 = v35;
    LOBYTE(v38) = 0;
    uint64_t v19 = v11;
    v1[2] = sub_1C152069C();
    v1[3] = v20;
    LOBYTE(v38) = 1;
    v1[4] = sub_1C152069C();
    v1[5] = v22;
    LOBYTE(v38) = 2;
    char v23 = sub_1C152071C();
    if (v23)
    {
      char v41 = 2;
      sub_1C02334F4(&qword_1EB87C6E0, 255, (void (*)(uint64_t))sub_1BFE89214);
      sub_1C15206EC();
      uint64_t v24 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v18);
    }
    else
    {
      uint64_t v24 = MEMORY[0x1E4FBC870];
    }
    v15[6] = v24;
    LOBYTE(v38) = 3;
    if (sub_1C152071C())
    {
      char v41 = 3;
      sub_1C02334F4(&qword_1EB85F2C8, 255, (void (*)(uint64_t))sub_1C00FC8DC);
      uint64_t v26 = v32;
      uint64_t v25 = v33;
      sub_1C15206EC();
      uint64_t v27 = sub_1C1517E5C();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v25);
    }
    else
    {
      uint64_t v27 = MEMORY[0x1E4FBC860];
    }
    v15[7] = v27;
    char v41 = 4;
    if (sub_1C152071C())
    {
      char v40 = 4;
      sub_1C15206EC();
      uint64_t v29 = v38;
      unint64_t v28 = v39;
    }
    else
    {
      uint64_t v29 = 0;
      unint64_t v28 = 0xE000000000000000;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v19);
    v15[8] = v29;
    v15[9] = v28;
  }
  __swift_destroy_boxed_opaque_existential_1(v16);
  return v15;
}

void *sub_1C023346C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  unint64_t result = FormatScoreDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C02334C4(void *a1)
{
  return FormatScoreDataVisualization.encode(to:)(a1);
}

uint64_t sub_1C02334E8(void *a1, void *a2)
{
  return static FormatScoreDataVisualization.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1C02334F4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C023353C(void *a1, uint64_t a2)
{
  a1[1] = sub_1C02334F4(&qword_1EB86BD98, a2, (void (*)(uint64_t))type metadata accessor for FormatScoreDataVisualization);
  a1[2] = sub_1C02334F4(&qword_1EB86BD90, v3, (void (*)(uint64_t))type metadata accessor for FormatScoreDataVisualization);
  uint64_t result = sub_1C02334F4(&qword_1EA1985A8, v4, (void (*)(uint64_t))type metadata accessor for FormatScoreDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatScoreDataVisualization()
{
  return self;
}

uint64_t sub_1C023360C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C023365C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02336AC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 72);
  *a2 = *(void *)(v3 + 64);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatScoreDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatScoreDataVisualization);
}

uint64_t dispatch thunk of FormatScoreDataVisualization.__allocating_init(tagIdentifier:umcIdentifier:selectors:properties:query:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of FormatScoreDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

unsigned char *storeEnumTagSinglePayload for FormatScoreDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C023381CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatScoreDataVisualization.CodingKeys()
{
  return &type metadata for FormatScoreDataVisualization.CodingKeys;
}

unint64_t sub_1C0233858()
{
  unint64_t result = qword_1EA1985B0;
  if (!qword_1EA1985B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1985B0);
  }
  return result;
}

unint64_t sub_1C02338B0()
{
  unint64_t result = qword_1EB86BD88;
  if (!qword_1EB86BD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BD88);
  }
  return result;
}

unint64_t sub_1C0233908()
{
  unint64_t result = qword_1EB86BD80;
  if (!qword_1EB86BD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86BD80);
  }
  return result;
}

uint64_t sub_1C023395C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E656449676174 && a2 == 0xED00007265696669;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E656449636D75 && a2 == 0xED00007265696669 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7972657571 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_1C0233BCC()
{
  unint64_t result = qword_1EA1985C0;
  if (!qword_1EA1985C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1985C0);
  }
  return result;
}

uint64_t sub_1C0233C20(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0233C84(255, a2, a3, a4, MEMORY[0x1E4FBBDE0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C0233C84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0233CEC()
{
  unint64_t result = qword_1EA1985D8;
  if (!qword_1EA1985D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1985D8);
  }
  return result;
}

uint64_t sub_1C0233D40(uint64_t a1)
{
  uint64_t v16 = type metadata accessor for FormatInspectionItem(0);
  uint64_t v2 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  unsigned int v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E4B8(0, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem, MEMORY[0x1E4FBB718]);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - v7;
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C05F62D0(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    do
    {
      sub_1BFDF8BA4(v11, (uint64_t)v4, type metadata accessor for FormatInspectionItem);
      swift_dynamicCast();
      uint64_t v10 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F62D0(0, *(void *)(v10 + 16) + 1, 1);
        uint64_t v10 = v17;
      }
      unint64_t v14 = *(void *)(v10 + 16);
      unint64_t v13 = *(void *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1C05F62D0(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v17;
      }
      *(void *)(v10 + 16) = v14 + 1;
      sub_1BFF882CC((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, &qword_1EA1974F0, type metadata accessor for FormatInspectionItem);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1C0233FC8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    sub_1C05F6350(0, v1, 0);
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1BFC66384(v4, (uint64_t)v8);
      sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
      sub_1BFE4D1E4(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
      swift_dynamicCast();
      uint64_t v2 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F6350(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v10;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C05F6350(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v10;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1C024AD78((uint64_t)v9, v2 + 40 * v6 + 32, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0234134(uint64_t a1)
{
  return sub_1C0234224(a1, (unint64_t *)&qword_1EB874220, (void (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(void))sub_1C024B0C0);
}

uint64_t sub_1C0234170(uint64_t a1)
{
  return sub_1C0234224(a1, (unint64_t *)&qword_1EB874200, (void (*)(void))sub_1C00F6D64, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(void))sub_1C024B034);
}

uint64_t sub_1C02341AC(uint64_t a1)
{
  return sub_1C0234224(a1, (unint64_t *)&qword_1EB8741D0, (void (*)(void))sub_1C00F6CB0, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(void))sub_1C024AFA8);
}

uint64_t sub_1C02341E8(uint64_t a1)
{
  return sub_1C0234224(a1, (unint64_t *)&qword_1EB8741B0, (void (*)(void))sub_1C00F6B74, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(void))sub_1C024AEC0);
}

uint64_t sub_1C0234224(uint64_t a1, unint64_t *a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v21 = a5;
  sub_1BFFF5978(0, a2, a3);
  uint64_t v20 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - v10;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (v12)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C05F65F8(0, v12, 0);
    uint64_t v13 = v25;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v15 = *(void *)(v9 + 72);
    do
    {
      sub_1C024AE50(v14, (uint64_t)v11, a2, a3);
      uint64_t v25 = v13;
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C05F65F8(v16 > 1, v17 + 1, 1);
        uint64_t v13 = v25;
      }
      uint64_t v23 = v20;
      uint64_t v24 = v21();
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v22);
      sub_1C024AE50((uint64_t)v11, (uint64_t)boxed_opaque_existential_0, a2, a3);
      *(void *)(v13 + 16) = v17 + 1;
      sub_1BFC773DC(&v22, v13 + 40 * v17 + 32);
      sub_1C024AF4C((uint64_t)v11, a2, a3);
      v14 += v15;
      --v12;
    }
    while (v12);
  }
  return v13;
}

uint64_t sub_1C02343F4(uint64_t a1)
{
  sub_1BFF1D9F4(0);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (v7)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C05F65F8(0, v7, 0);
    uint64_t v8 = v18;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_1BFDF8BA4(v9, (uint64_t)v6, (uint64_t (*)(void))sub_1BFF1D9F4);
      uint64_t v18 = v8;
      unint64_t v12 = *(void *)(v8 + 16);
      unint64_t v11 = *(void *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1C05F65F8(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v18;
      }
      uint64_t v16 = v3;
      unint64_t v17 = sub_1C024ADE8();
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v15);
      sub_1BFDF8BA4((uint64_t)v6, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))sub_1BFF1D9F4);
      *(void *)(v8 + 16) = v12 + 1;
      sub_1BFC773DC(&v15, v8 + 40 * v12 + 32);
      sub_1C0247540((uint64_t)v6, (uint64_t (*)(void))sub_1BFF1D9F4);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_1C02345C4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1BFF01960(0, v1, 0);
    uint64_t v2 = v28;
    uint64_t v4 = (long long *)(a1 + 32);
    do
    {
      long long v5 = v4[7];
      long long v26 = v4[6];
      v27[0] = v5;
      *(_OWORD *)((char *)v27 + 9) = *(long long *)((char *)v4 + 121);
      long long v6 = v4[3];
      long long v22 = v4[2];
      long long v23 = v6;
      long long v7 = v4[5];
      long long v24 = v4[4];
      long long v25 = v7;
      long long v8 = v4[1];
      long long v20 = *v4;
      long long v21 = v8;
      sub_1C0187FB0((uint64_t)&v20);
      uint64_t v28 = v2;
      unint64_t v10 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1BFF01960(v9 > 1, v10 + 1, 1);
        uint64_t v2 = v28;
      }
      uint64_t v18 = &type metadata for FeedIssue;
      unint64_t v19 = sub_1BFEB031C();
      unint64_t v11 = (_OWORD *)swift_allocObject();
      *(void *)&long long v17 = v11;
      long long v12 = v27[0];
      v11[7] = v26;
      v11[8] = v12;
      *(_OWORD *)((char *)v11 + 137) = *(_OWORD *)((char *)v27 + 9);
      long long v13 = v23;
      v11[3] = v22;
      v11[4] = v13;
      long long v14 = v25;
      v11[5] = v24;
      v11[6] = v14;
      long long v15 = v21;
      v11[1] = v20;
      _OWORD v11[2] = v15;
      *(void *)(v2 + 16) = v10 + 1;
      sub_1BFC773DC(&v17, v2 + 40 * v10 + 32);
      v4 += 9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0234728(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BFF01960(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = v16;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = 0;
      do
      {
        uint64_t v6 = MEMORY[0x1C18C7CB0](v5, a1);
        uint64_t v16 = v3;
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1BFF01960(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v16;
        }
        ++v5;
        uint64_t v14 = sub_1C151A0CC();
        uint64_t v15 = sub_1BFDF8CDC(&qword_1EB864120, 255, MEMORY[0x1E4FABC38]);
        *(void *)&long long v13 = v6;
        *(void *)(v3 + 16) = v8 + 1;
        sub_1BFC773DC(&v13, v3 + 40 * v8 + 32);
      }
      while (v2 != v5);
    }
    else
    {
      unint64_t v9 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v10 = *v9;
        uint64_t v16 = v3;
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v12 = *(void *)(v3 + 24);
        swift_retain();
        if (v11 >= v12 >> 1)
        {
          sub_1BFF01960(v12 > 1, v11 + 1, 1);
          uint64_t v3 = v16;
        }
        uint64_t v14 = sub_1C151A0CC();
        uint64_t v15 = sub_1BFDF8CDC(&qword_1EB864120, 255, MEMORY[0x1E4FABC38]);
        *(void *)&long long v13 = v10;
        *(void *)(v3 + 16) = v11 + 1;
        sub_1BFC773DC(&v13, v3 + 40 * v11 + 32);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0234964(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1BFF01960(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1C024A070(v4, (uint64_t)v11);
      uint64_t v12 = v2;
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BFF01960(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v12;
      }
      unint64_t v9 = &type metadata for FeedCatalogItem;
      unint64_t v10 = sub_1C024A0CC();
      *(void *)&long long v8 = swift_allocObject();
      sub_1C024A070((uint64_t)v11, v8 + 16);
      *(void *)(v2 + 16) = v6 + 1;
      sub_1BFC773DC(&v8, v2 + 40 * v6 + 32);
      sub_1C024A288((uint64_t)v11);
      v4 += 288;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0234A8C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1BFF01960(0, v1, 0);
    uint64_t v2 = v12;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_1C0249E84(v4, (uint64_t)v11);
      uint64_t v12 = v2;
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BFF01960(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v12;
      }
      unint64_t v9 = &type metadata for FeedCategory;
      unint64_t v10 = sub_1C0249EE0();
      *(void *)&long long v8 = swift_allocObject();
      sub_1C0249E84((uint64_t)v11, v8 + 16);
      *(void *)(v2 + 16) = v6 + 1;
      sub_1BFC773DC(&v8, v2 + 40 * v6 + 32);
      sub_1C0249FA4((uint64_t)v11);
      v4 += 152;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0234BB4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1C05F6350(0, v1, 0);
    sub_1BFE4D1E4(0, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
    uint64_t v4 = a1 + 64;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      uint64_t v2 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F6350(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C05F6350(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1C024AD78((uint64_t)v8, v2 + 40 * v6 + 32, (unint64_t *)&unk_1EA198870, (unint64_t *)&qword_1EA1974E0);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0234D38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedItemSupplementaryAttributes();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C05F73C8(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1BFDF8BA4(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      uint64_t v17 = v7;
      unint64_t v11 = *(void *)(v7 + 16);
      unint64_t v10 = *(void *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1C05F73C8(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = sub_1BFDF8CDC((unint64_t *)&unk_1EB85CD60, 255, (void (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v14);
      sub_1BFDF8BA4((uint64_t)v5, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      *(void *)(v7 + 16) = v11 + 1;
      sub_1BFC773DC(&v14, v7 + 40 * v11 + 32);
      sub_1C0247540((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1C0234F40(uint64_t a1)
{
  return sub_1C0234FC0(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1C05F74EC, (void (*)(void))sub_1C024ABEC, (void (*)(void))sub_1C024AC58);
}

uint64_t sub_1C0234F80(uint64_t a1)
{
  return sub_1C0234FC0(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_1C05F74A4, (void (*)(void))sub_1C024AAB8, (void (*)(void))sub_1C024AB54);
}

uint64_t sub_1C0234FC0(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), void (*a3)(void), void (*a4)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    a2(0, v4, 0);
    a3(0);
    a4(0);
    uint64_t v10 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v5 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        a2(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v5 = v17;
      }
      unint64_t v12 = *(void *)(v5 + 16);
      unint64_t v11 = *(void *)(v5 + 24);
      if (v12 >= v11 >> 1)
      {
        a2(v11 > 1, v12 + 1, 1);
        uint64_t v5 = v17;
      }
      *(void *)(v5 + 16) = v12 + 1;
      uint64_t v13 = v5 + 24 * v12;
      *(void *)(v13 + 32) = v15;
      *(_OWORD *)(v13 + 40) = v16;
      v10 += 24;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_1C0235150(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x1E4FBC860];
    sub_1C05F7484(0, v1, 0);
    sub_1C024A9E4();
    sub_1C024AA50();
    uint64_t v4 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      uint64_t v2 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7484(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v2 = v16;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C05F7484(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v16;
      }
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = v2 + (v6 << 6);
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      *(void *)(v7 + 48) = v11;
      *(_OWORD *)(v7 + 56) = v12;
      *(void *)(v7 + 72) = v13;
      *(void *)(v7 + 80) = v14;
      v4 += 64;
      *(void *)(v7 + 88) = v15;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C02352E4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C05F7534(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x1C18C7CB0](i, a1);
        sub_1C151A81C();
        sub_1BFE4D1E4(0, (unint64_t *)&qword_1EB8945F0, (unint64_t *)&qword_1EB8945E0);
        swift_dynamicCast();
        uint64_t v3 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F7534(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1C05F7534(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v12;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_1C024AD78((uint64_t)v11, v3 + 40 * v7 + 32, (unint64_t *)&qword_1EB8945F0, (unint64_t *)&qword_1EB8945E0);
      }
    }
    else
    {
      unint64_t v8 = a1 + 32;
      sub_1C151A81C();
      sub_1BFE4D1E4(0, (unint64_t *)&qword_1EB8945F0, (unint64_t *)&qword_1EB8945E0);
      do
      {
        swift_retain();
        swift_dynamicCast();
        uint64_t v3 = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F7534(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v12;
        }
        unint64_t v10 = *(void *)(v3 + 16);
        unint64_t v9 = *(void *)(v3 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_1C05F7534(v9 > 1, v10 + 1, 1);
          uint64_t v3 = v12;
        }
        *(void *)(v3 + 16) = v10 + 1;
        sub_1C024AD78((uint64_t)v11, v3 + 40 * v10 + 32, (unint64_t *)&qword_1EB8945F0, (unint64_t *)&qword_1EB8945E0);
        v8 += 8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0235588(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    sub_1C05F7534(0, v1, 0);
    uint64_t v4 = a1 + 32;
    sub_1BFF2E4B8(0, &qword_1EB893820, MEMORY[0x1E4FAC038], MEMORY[0x1E4FBB718]);
    sub_1BFE4D1E4(0, (unint64_t *)&qword_1EB8945F0, (unint64_t *)&qword_1EB8945E0);
    do
    {
      v4 += 8;
      swift_retain();
      swift_dynamicCast();
      uint64_t v2 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F7534(0, *(void *)(v2 + 16) + 1, 1);
        uint64_t v2 = v9;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C05F7534(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v9;
      }
      *(void *)(v2 + 16) = v6 + 1;
      sub_1C024AD78((uint64_t)v8, v2 + 40 * v6 + 32, (unint64_t *)&qword_1EB8945F0, (unint64_t *)&qword_1EB8945E0);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C023571C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BFD431D4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x1C18C7CB0](i, a1);
        type metadata accessor for CGColor(0);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFD431D4(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1BFD431D4(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_1BFF993A8(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      unint64_t v8 = (id *)(a1 + 32);
      type metadata accessor for CGColor(0);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFD431D4(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1BFD431D4(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_1BFF993A8(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0235950(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1C05F6B44(0, v1, 0);
    uint64_t v2 = v17;
    uint64_t v4 = (uint64_t *)(a1 + 64);
    do
    {
      uint64_t v6 = *(v4 - 4);
      uint64_t v5 = *(v4 - 3);
      uint64_t v7 = *(v4 - 1);
      uint64_t v13 = *(v4 - 2);
      uint64_t v8 = *v4;
      uint64_t v17 = v2;
      unint64_t v10 = *(void *)(v2 + 16);
      unint64_t v9 = *(void *)(v2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1)
      {
        sub_1C05F6B44(v9 > 1, v10 + 1, 1);
        uint64_t v2 = v17;
      }
      uint64_t v15 = &type metadata for FormatInspectionGroup;
      uint64_t v16 = &off_1F1BDEC90;
      unint64_t v11 = (void *)swift_allocObject();
      *(void *)&long long v14 = v11;
      _OWORD v11[2] = v6;
      v11[3] = v5;
      v11[4] = v13;
      v11[5] = v7;
      v11[6] = v8;
      *(void *)(v2 + 16) = v10 + 1;
      sub_1BFC773DC(&v14, v2 + 40 * v10 + 32);
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C0235A90(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C05F7AC0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        uint64_t v13 = (void *)MEMORY[0x1C18C7CB0](i, a1);
        type metadata accessor for DebugFormatUploadHiddenViewController();
        sub_1C024AD08();
        id v6 = v13;
        swift_dynamicCast();
        swift_unknownObjectRelease();
        uint64_t v3 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F7AC0(0, *(void *)(v15 + 16) + 1, 1);
          uint64_t v3 = v15;
        }
        unint64_t v8 = *(void *)(v3 + 16);
        unint64_t v7 = *(void *)(v3 + 24);
        if (v8 >= v7 >> 1)
        {
          sub_1C05F7AC0(v7 > 1, v8 + 1, 1);
          uint64_t v3 = v15;
        }
        *(void *)(v3 + 16) = v8 + 1;
        *(_OWORD *)(v3 + 16 * v8 + 32) = v14;
      }
    }
    else
    {
      unint64_t v9 = (id *)(a1 + 32);
      type metadata accessor for DebugFormatUploadHiddenViewController();
      sub_1C024AD08();
      do
      {
        id v10 = *v9;
        swift_dynamicCast();

        uint64_t v3 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C05F7AC0(0, *(void *)(v15 + 16) + 1, 1);
          uint64_t v3 = v15;
        }
        unint64_t v12 = *(void *)(v3 + 16);
        unint64_t v11 = *(void *)(v3 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1C05F7AC0(v11 > 1, v12 + 1, 1);
          uint64_t v3 = v15;
        }
        *(void *)(v3 + 16) = v12 + 1;
        *(_OWORD *)(v3 + 16 * v12 + 32) = v14;
        ++v9;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0235CF0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BFD431D4(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x1C18C7CB0](i, a1);
        sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFD431D4(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1BFD431D4(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_1BFF993A8(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      unint64_t v8 = (id *)(a1 + 32);
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFD431D4(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1BFD431D4(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_1BFF993A8(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C0235F54(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C05F845C(0, v1, 0);
    sub_1BFE99D0C(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    uint64_t v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      uint64_t v2 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C05F845C(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v2 = v11;
      }
      unint64_t v6 = *(void *)(v2 + 16);
      unint64_t v5 = *(void *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C05F845C(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v11;
      }
      v4 += 16;
      *(void *)(v2 + 16) = v6 + 1;
      uint64_t v7 = v2 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

BOOL sub_1C02360B0(uint64_t a1)
{
  return *(void *)(a1 + 16) == 0;
}

uint64_t sub_1C02360C0(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1BFEF9B68(0, v5[2] + 1, 1, v5);
    unint64_t v5 = (void *)result;
  }
  unint64_t v8 = v5[2];
  unint64_t v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    uint64_t result = (uint64_t)sub_1BFEF9B68((void *)(v7 > 1), v8 + 1, 1, v5);
    unint64_t v5 = (void *)result;
  }
  void v5[2] = v8 + 1;
  uint64_t v9 = &v5[2 * v8];
  v9[4] = a1;
  v9[5] = a2;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C0236164(uint64_t a1)
{
  unint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1BFDA800C(0, *(void *)(v3 + 16) + 1, 1, v3);
  }
  unint64_t v5 = *(void *)(v3 + 16);
  unint64_t v4 = *(void *)(v3 + 24);
  if (v5 >= v4 >> 1) {
    unint64_t v3 = sub_1BFDA800C(v4 > 1, v5 + 1, 1, v3);
  }
  *(void *)(v3 + 16) = v5 + 1;
  uint64_t v6 = sub_1C151631C();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v3+ ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80))+ *(void *)(*(void *)(v6 - 8) + 72) * v5, a1, v6);
  unint64_t *v1 = v3;
  return result;
}

uint64_t sub_1C023624C()
{
  MEMORY[0x1C18C66D0]();
  if (*(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C151EC8C();
  }
  sub_1C151ECEC();
  return sub_1C151EBEC();
}

id PuzzleResourceSource.identifier.getter()
{
  sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PuzzleResourceSource();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (id *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFDF8BA4(v0, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return *v13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    id v15 = objc_msgSend(*v13, sel_identifier);
    uint64_t v16 = sub_1C151E62C();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1C023675C();
    uint64_t v18 = (uint64_t)v13 + *(int *)(v17 + 64);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, (char *)v13 + *(int *)(v17 + 48), v7);
    uint64_t v19 = MEMORY[0x1E4F276F0];
    sub_1BFF882CC(v18, (uint64_t)v6, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    uint64_t v24 = 0x752D656C7A7A7570;
    unint64_t v25 = 0xEB000000002D6C72;
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    uint64_t v23 = sub_1C1515FCC();
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C0236808((uint64_t)v6, (uint64_t)v3, (uint64_t)&qword_1EB8948A0, v19, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF2E4B8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
    {
      sub_1BFF50FC4((uint64_t)v3, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v20 = 0;
    }
    else
    {
      uint64_t v20 = sub_1C1515FCC();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v3, v7);
    }
    uint64_t v23 = v20;
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v16 = v24;
    sub_1BFF50FC4((uint64_t)v6, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return (id)v16;
}

uint64_t type metadata accessor for PuzzleResourceSource()
{
  uint64_t result = qword_1EA198850;
  if (!qword_1EA198850) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C023675C()
{
  if (!qword_1EA199040)
  {
    sub_1C1515FDC();
    sub_1BFF2E4B8(255, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, &qword_1EA199040);
    }
  }
}

uint64_t sub_1C0236808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

BOOL static PuzzleServiceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PuzzleServiceError.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t PuzzleServiceError.hashValue.getter()
{
  return sub_1C1520E0C();
}

void *sub_1C0236904(uint64_t a1, uint64_t a2, long long *a3, long long *a4, uint64_t a5)
{
  uint64_t v9 = sub_1C1517EAC();
  MEMORY[0x1F4188790](v9);
  void v5[2] = 0x73656C7A7A7570;
  v5[3] = 0xE700000000000000;
  void v5[4] = 3421794;
  v5[5] = 0xE300000000000000;
  void v5[6] = 0x726F7773736F7263;
  v5[7] = 0xE900000000000064;
  uint64_t v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA868];
  sub_1BFF2E4B8(0, (unint64_t *)&unk_1EB8903A0, MEMORY[0x1E4FAA868], MEMORY[0x1E4FBBE00]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1529AE0;
  sub_1C1517E9C();
  sub_1BFDF8CDC((unint64_t *)&qword_1EB87C6F0, 255, MEMORY[0x1E4FAA868]);
  sub_1BFF2E4B8(0, (unint64_t *)&unk_1EB880C60, v10, MEMORY[0x1E4FBB320]);
  sub_1BFD656C0();
  sub_1C151FFBC();
  sub_1C1517ECC();
  swift_allocObject();
  uint64_t v11 = sub_1C1517EBC();
  uint64_t v12 = MEMORY[0x1E4FBC868];
  v5[21] = v11;
  v5[22] = v12;
  v5[23] = v12;
  v5[8] = a1;
  v5[9] = a2;
  sub_1BFC773DC(a3, (uint64_t)(v5 + 10));
  sub_1BFC773DC(a4, (uint64_t)(v5 + 15));
  v5[20] = a5;
  return v5;
}

uint64_t PuzzleService.puzzle(for:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0236BA4, 0, 0);
}

uint64_t sub_1C0236BA4()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  sub_1BFE99D0C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v3 = swift_allocObject();
  v0[5] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_1C1529AE0;
  *(void *)(v3 + 32) = v2;
  *(void *)(v3 + 40) = v1;
  swift_bridgeObjectRetain();
  FCCurrentQoSOrUtilityIfMain();
  id v4 = (id)FCDispatchQueueForQualityOfService();
  v0[6] = v4;
  uint64_t v5 = swift_task_alloc();
  v0[7] = v5;
  *(void *)uint64_t v5 = v0;
  *(void *)(v5 + 8) = sub_1C0236D00;
  uint64_t v6 = (void *)v0[4];
  *(void *)(v5 + 1624) = v6;
  *(void *)(v5 + 1576) = v4;
  *(unsigned char *)(v5 + 1784) = 0;
  *(void *)(v5 + 1528) = v3;
  *(void *)(v5 + 1672) = *v6;
  return MEMORY[0x1F4188298](sub_1BFCE2154, 0, 0);
}

uint64_t sub_1C0236D00(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_1C0236F80;
  }
  else
  {

    swift_bridgeObjectRelease();
    id v4 = sub_1C0236E24;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

void sub_1C0236E24()
{
  unint64_t v1 = *(void *)(v0 + 64);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1C02474EC();
    swift_allocError();
    *uint64_t v5 = 0;
    swift_willThrow();
    uint64_t v6 = *(void (**)(void))(v0 + 8);
    v6();
    return;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = MEMORY[0x1C18C7CB0](0, *(void *)(v0 + 64));
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    uint64_t v2 = *(void *)(*(void *)(v0 + 64) + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void (**)(uint64_t))(v0 + 8);
  v3(v2);
}

uint64_t sub_1C0236F80()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PuzzleService.puzzles(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x1F4188298](sub_1C023700C, 0, 0);
}

uint64_t sub_1C023700C()
{
  FCCurrentQoSOrUtilityIfMain();
  id v1 = (id)FCDispatchQueueForQualityOfService();
  v0[4] = v1;
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_1C0237104;
  uint64_t v4 = v0[2];
  uint64_t v3 = (void *)v0[3];
  *(void *)(v2 + 1624) = v3;
  *(void *)(v2 + 1576) = v1;
  *(unsigned char *)(v2 + 1784) = 0;
  *(void *)(v2 + 1528) = v4;
  *(void *)(v2 + 1672) = *v3;
  return MEMORY[0x1F4188298](sub_1BFCE2154, 0, 0);
}

uint64_t sub_1C0237104(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1C023725C, 0, 0);
  }
  else
  {

    uint64_t v6 = *(uint64_t (**)(uint64_t))(v5 + 8);
    return v6(a1);
  }
}

uint64_t sub_1C023725C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id PuzzleService.puzzle(for:puzzleType:puzzleMetadata:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = (int *)type metadata accessor for PuzzleMetadata();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)sub_1C151631C();
  uint64_t v119 = (void *)*(v11 - 1);
  id v120 = v11;
  MEMORY[0x1F4188790](v11);
  unint64_t v118 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v113 = (char *)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v16 = MEMORY[0x1F4188790](v15).n128_u64[0];
  uint64_t v18 = (char *)&v93 - v17;
  id v114 = a3;
  id v19 = objc_msgSend(a3, sel_identifier, v16);
  uint64_t v20 = sub_1C151E62C();
  uint64_t v22 = v21;

  uint64_t v121 = v8;
  uint64_t v23 = (void *)(a4 + v8[18]);
  if (v20 == *v23 && v22 == v23[1])
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  char v25 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  if (v25)
  {
LABEL_11:
    uint64_t v39 = *(void *)(a4 + v121[20]);
    if (v39
      && *(void *)(v39 + 16)
      && (unint64_t v40 = sub_1BFEF2D8C(0x7463617265746E69, 0xEF65756C43657669), (v41 & 1) != 0))
    {
      unint64_t v42 = *(void *)(*(void *)(v39 + 56) + 8 * v40);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v42 = sub_1C018D9F4(MEMORY[0x1E4FBC860]);
    }
    uint64_t v43 = v119;
    id v44 = objc_msgSend(objc_msgSend(*(id *)(v5 + 160), sel_appConfiguration), sel_puzzlesConfig);
    swift_unknownObjectRelease();
    id v110 = *(id *)(v5 + 64);
    uint64_t v111 = sub_1C151E5EC();
    uint64_t v45 = v121;
    if (*(void *)(a4 + v121[22] + 8)) {
      uint64_t v109 = sub_1C151E5EC();
    }
    else {
      uint64_t v109 = 0;
    }
    id v46 = v120;
    if (*(void *)(a4 + v45[19] + 8))
    {
      uint64_t v108 = sub_1C151E5EC();
      if (*(void *)(a4 + 56)) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v108 = 0;
      if (*(void *)(a4 + 56))
      {
LABEL_21:
        uint64_t v107 = sub_1C151E5EC();
        if (*(void *)(a4 + 40)) {
          goto LABEL_22;
        }
        goto LABEL_26;
      }
    }
    uint64_t v107 = 0;
    if (*(void *)(a4 + 40))
    {
LABEL_22:
      uint64_t v106 = sub_1C151E5EC();
      if (*(void *)(a4 + 8))
      {
LABEL_23:
        uint64_t v105 = sub_1C151EBAC();
        goto LABEL_28;
      }
LABEL_27:
      uint64_t v105 = 0;
LABEL_28:
      uint64_t v103 = *(void *)(a4 + 16);
      sub_1C0236808(a4 + v45[17], (uint64_t)v18, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF2E4B8);
      uint64_t v100 = (unsigned int (*)(char *, uint64_t, id))v43[6];
      if (v100(v18, 1, v46) == 1)
      {
        uint64_t v104 = 0;
      }
      else
      {
        uint64_t v104 = sub_1C151621C();
        ((void (*)(char *, id))v43[1])(v18, v46);
      }
      int v102 = *(unsigned __int8 *)(a4 + 81);
      uint64_t v47 = *(void *)(a4 + 64);
      id v48 = objc_msgSend(v44, sel_difficultyDescriptions);
      sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
      sub_1C02475A0();
      uint64_t v49 = sub_1C151E33C();

      uint64_t v101 = v47;
      uint64_t v50 = sub_1C1520D8C();
      id v51 = (void *)v50;
      uint64_t v52 = *(void *)(v49 + 16);
      id v112 = v44;
      if (v52)
      {
        sub_1C105232C(v50);
        if (v53) {
          swift_bridgeObjectRetain();
        }
      }

      swift_bridgeObjectRelease();
      uint64_t v99 = sub_1C151E5EC();
      swift_bridgeObjectRelease();
      if (*(void *)(a4 + 72)) {
        uint64_t v98 = sub_1C151EBAC();
      }
      else {
        uint64_t v98 = 0;
      }
      CGFloat v54 = v119;
      if (*(void *)(a4 + v45[21] + 8)) {
        uint64_t v97 = sub_1C151E5EC();
      }
      else {
        uint64_t v97 = 0;
      }
      uint64_t v55 = v118;
      sub_1C151630C();
      uint64_t v119 = (void *)sub_1C151621C();
      uint64_t v94 = (void (*)(char *, id))v54[1];
      v94(v55, v46);
      if (!*(void *)(v42 + 16))
      {
        id v115 = 0;
        id v116 = 0;
        unint64_t v118 = 0;
        goto LABEL_55;
      }
      sub_1BFEF2D8C(1702194275, 0xE400000000000000);
      if (v56)
      {
        swift_bridgeObjectRetain();
        unint64_t v118 = (char *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        if (*(void *)(v42 + 16))
        {
LABEL_43:
          sub_1BFEF2D8C(0x726577736E61, 0xE600000000000000);
          if (v57)
          {
            swift_bridgeObjectRetain();
            id v116 = (id)sub_1C151E5EC();
            swift_bridgeObjectRelease();
            if (*(void *)(v42 + 16)) {
              goto LABEL_45;
            }
          }
          else
          {
            id v116 = 0;
            if (*(void *)(v42 + 16))
            {
LABEL_45:
              sub_1BFEF2D8C(1953393000, 0xE400000000000000);
              if (v58)
              {
                swift_bridgeObjectRetain();
                id v117 = (id)sub_1C151E5EC();
                swift_bridgeObjectRelease();
                if (*(void *)(v42 + 16)) {
                  goto LABEL_47;
                }
              }
              else
              {
                id v117 = 0;
                if (*(void *)(v42 + 16))
                {
LABEL_47:
                  sub_1BFEF2D8C(0x6F69746365726964, 0xE90000000000006ELL);
                  if (v59)
                  {
                    swift_bridgeObjectRetain();
                    id v115 = (id)sub_1C151E5EC();
                    swift_bridgeObjectRelease();
                    if (!*(void *)(v42 + 16)) {
                      goto LABEL_56;
                    }
                  }
                  else
                  {
                    id v115 = 0;
                    if (!*(void *)(v42 + 16)) {
                      goto LABEL_56;
                    }
                  }
                  sub_1BFEF2D8C(0x7265626D756ELL, 0xE600000000000000);
                  if (v63)
                  {
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    uint64_t v60 = (void *)sub_1C151E5EC();
                    swift_bridgeObjectRelease();
                    if (*(void *)(a4 + 96)) {
                      goto LABEL_57;
                    }
                    goto LABEL_65;
                  }
LABEL_56:
                  swift_bridgeObjectRelease();
                  uint64_t v60 = 0;
                  if (*(void *)(a4 + 96))
                  {
LABEL_57:
                    double v61 = (void *)sub_1C151E5EC();
                    goto LABEL_66;
                  }
LABEL_65:
                  double v61 = 0;
LABEL_66:
                  uint64_t v64 = *(void *)(a4 + 24);
                  if (v64)
                  {
                    sub_1BFD430AC(v64);
                    double v65 = (char *)sub_1C151EBAC();
                    swift_bridgeObjectRelease();
                    uint64_t v66 = *(void *)a4;
                    if (*(void *)a4)
                    {
LABEL_68:
                      sub_1BFD430AC(v66);
                      double v67 = (void *)sub_1C151EBAC();
                      swift_bridgeObjectRelease();
LABEL_71:
                      CGFloat v68 = (void *)sub_1C151E5EC();
                      char v69 = *(unsigned char *)(a4 + 80);
                      CGRect v70 = v113;
                      sub_1C0236808(a4 + v121[16], (uint64_t)v113, (uint64_t)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF2E4B8);
                      id v71 = v120;
                      if (v100(v70, 1, v120) == 1)
                      {
                        CGRect v72 = 0;
                      }
                      else
                      {
                        CGRect v73 = v70;
                        CGRect v72 = (int *)sub_1C151621C();
                        v94(v73, v71);
                      }
                      uint64_t v121 = v72;
                      long long v92 = v72;
                      BYTE1(v91) = v69;
                      LOBYTE(v91) = 0;
                      id v96 = v68;
                      uint64_t v89 = v67;
                      unint64_t v90 = v68;
                      uint64_t v88 = v65;
                      id v95 = v61;
                      uint64_t v86 = v60;
                      uint64_t v87 = v61;
                      CGRect v74 = (void *)v97;
                      CGRect v75 = (void *)v98;
                      id v120 = v67;
                      CGRect v76 = (void *)v99;
                      LOBYTE(v85) = v102;
                      CGRect v77 = (void *)v104;
                      uint64_t v113 = v65;
                      CGRect v78 = (void *)v105;
                      id v79 = v110;
                      long long v80 = (void *)v111;
                      uint64_t v82 = (void *)v108;
                      uint64_t v81 = (void *)v109;
                      id v110 = v60;
                      uint64_t v84 = (void *)v106;
                      uint64_t v83 = (void *)v107;
                      id v114 = objc_retainAutoreleasedReturnValue(objc_msgSend(v79, sel_createPuzzleForPuzzleType_identifier_title_subtitle_puzzleDescription_dataResourceID_authors_behaviorFlags_publishDate_isPaid_difficulty_difficultyDescription_relatedPuzzleIDs_thumbnailLargeURL_loadDate_teaserClue_teaserAnswer_teaserInfo_teaserDirection_teaserNumber_language_blockedStorefrontIDs_allowedStorefrontIDs_minimumNewsVersion_isDeprecated_isDraft_lastModifiedDate_, v114, v111, v109, v108, v107, v106, v105, v103, v104, v85, v101, v99, v98, v97, v119, v118,
                                 v116,
                                 v117,
                                 v115,
                                 v86,
                                 v87,
                                 v88,
                                 v89,
                                 v90,
                                 v91,
                                 v92));

                      return v114;
                    }
                  }
                  else
                  {
                    double v65 = 0;
                    uint64_t v66 = *(void *)a4;
                    if (*(void *)a4) {
                      goto LABEL_68;
                    }
                  }
                  double v67 = 0;
                  goto LABEL_71;
                }
              }
              id v115 = 0;
              goto LABEL_56;
            }
          }
          id v115 = 0;
LABEL_55:
          id v117 = 0;
          goto LABEL_56;
        }
      }
      else
      {
        unint64_t v118 = 0;
        if (*(void *)(v42 + 16)) {
          goto LABEL_43;
        }
      }
      id v115 = 0;
      id v116 = 0;
      goto LABEL_55;
    }
LABEL_26:
    uint64_t v106 = 0;
    if (*(void *)(a4 + 8)) {
      goto LABEL_23;
    }
    goto LABEL_27;
  }
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C15198DC();
  __swift_project_value_buffer(v26, (uint64_t)qword_1EB93C7A8);
  sub_1BFDF8BA4(a4, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleMetadata);
  uint64_t v27 = v114;
  swift_unknownObjectRetain_n();
  uint64_t v28 = sub_1C15198AC();
  os_log_type_t v29 = sub_1C151F36C();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v123[0] = v31;
    *(_DWORD *)uint64_t v30 = 136315394;
    id v32 = objc_msgSend(v27, sel_identifier);
    uint64_t v33 = sub_1C151E62C();
    unint64_t v35 = v34;

    uint64_t v122 = sub_1BFDA76EC(v33, v35, v123);
    sub_1C151FE1C();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v36 = (uint64_t *)&v10[v121[18]];
    uint64_t v37 = *v36;
    unint64_t v38 = v36[1];
    swift_bridgeObjectRetain();
    uint64_t v122 = sub_1BFDA76EC(v37, v38, v123);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    sub_1C0247540((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleMetadata);
    _os_log_impl(&dword_1BFC31000, v28, v29, "Puzzle Service mismatch between provided puzzleTypeID %s and puzzle metadata type ID: %s!  Puzzle will not be created", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v31, -1, -1);
    MEMORY[0x1C18C9B00](v30, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
    sub_1C0247540((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PuzzleMetadata);
  }

  return 0;
}

uint64_t sub_1C0237F9C()
{
  *(void *)(*(void *)v1 + 1704) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0238124;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C02380B8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02380B8()
{
  uint64_t v1 = *(void *)(v0 + 1480);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C0238124()
{
  uint64_t v1 = *(void **)(v0 + 1680);
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0238190()
{
  return MEMORY[0x1F4188298](sub_1C02381AC, 0, 0);
}

uint64_t sub_1C02381AC()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1336, sub_1C023822C, v0 + 1488);
}

uint64_t sub_1C023822C()
{
  return MEMORY[0x1F4188298](sub_1C0238248, 0, 0);
}

uint64_t sub_1C0238248()
{
  uint64_t v1 = *(void **)(v0 + 1728);
  uint64_t v2 = *(void **)(v0 + 1712);

  swift_release_n();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C02382E0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1384, sub_1C0238360, v0 + 1584);
}

uint64_t sub_1C0238360()
{
  return MEMORY[0x1F4188298](sub_1C023837C, 0, 0);
}

uint64_t sub_1C023837C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1336, sub_1C02383FC, v0 + 1632);
}

uint64_t sub_1C02383FC()
{
  return MEMORY[0x1F4188298](sub_1C0238418, 0, 0);
}

uint64_t sub_1C0238418()
{
  uint64_t v1 = *(void **)(v0 + 1728);
  uint64_t v2 = *(void **)(v0 + 1712);

  swift_release_n();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t PuzzleService.puzzles(for:excludeDrafts:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  return MEMORY[0x1F4188298](sub_1C02384D4, 0, 0);
}

uint64_t sub_1C02384D4()
{
  FCCurrentQoSOrUtilityIfMain();
  id v1 = (id)FCDispatchQueueForQualityOfService();
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *(void *)uint64_t v2 = v0;
  *(void *)(v2 + 8) = sub_1C0237104;
  char v3 = *(unsigned char *)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);
  *(void *)(v2 + 1624) = v4;
  *(void *)(v2 + 1576) = v1;
  *(unsigned char *)(v2 + 1784) = v3;
  *(void *)(v2 + 1528) = v5;
  *(void *)(v2 + 1672) = *v4;
  return MEMORY[0x1F4188298](sub_1BFCE2154, 0, 0);
}

uint64_t PuzzleService.puzzles(for:cachePolicy:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1C02385F4, 0, 0);
}

uint64_t sub_1C02385F4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  long long v7 = *(_OWORD *)(v0 + 24);
  FCCurrentQoSOrUtilityIfMain();
  id v2 = (id)FCDispatchQueueForQualityOfService();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v2;
  *(unsigned char *)(v3 + 48) = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  sub_1BFCE25D8(0, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
  *uint64_t v4 = v0;
  v4[1] = sub_1C0238744;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000035, 0x80000001C1608680, sub_1C0247610, v3, v5);
}

uint64_t sub_1C0238744()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1C024B6E8;
  }
  else
  {
    swift_task_dealloc();
    id v2 = sub_1C024B728;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t PuzzleService.puzzles(for:excludeDrafts:cachePolicy:callbackQueue:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = v4;
  *(unsigned char *)(v5 + 80) = a2;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a3;
  return MEMORY[0x1F4188298](sub_1C0238888, 0, 0);
}

uint64_t sub_1C0238888()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  char v3 = *(unsigned char *)(v0 + 80);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  long long v5 = *(_OWORD *)(v0 + 24);
  *(void *)(v4 + 16) = v1;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 40) = v2;
  *(unsigned char *)(v4 + 48) = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v6;
  sub_1BFCE25D8(0, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
  *uint64_t v6 = v0;
  v6[1] = sub_1C02389BC;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000035, 0x80000001C1608680, sub_1C0247610, v4, v7);
}

uint64_t sub_1C02389BC()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0238AD8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C0121EC4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0238AD8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PuzzleService.puzzles(for:excludeDrafts:cachePolicy:)(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 40) = v3;
  *(unsigned char *)(v4 + 80) = a2;
  *(void *)(v4 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1C0238B64, 0, 0);
}

uint64_t sub_1C0238B64()
{
  uint64_t v1 = *(void *)(v0 + 40);
  char v2 = *(unsigned char *)(v0 + 80);
  long long v8 = *(_OWORD *)(v0 + 24);
  FCCurrentQoSOrUtilityIfMain();
  id v3 = (id)FCDispatchQueueForQualityOfService();
  *(void *)(v0 + 48) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *(void *)(v4 + 16) = v1;
  *(_OWORD *)(v4 + 24) = v8;
  *(void *)(v4 + 40) = v3;
  *(unsigned char *)(v4 + 48) = v2;
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  sub_1BFCE25D8(0, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
  *long long v5 = v0;
  v5[1] = sub_1C0238CB8;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000035, 0x80000001C1608680, sub_1C0247610, v4, v6);
}

uint64_t sub_1C0238CB8()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v2 = sub_1C0238E3C;
  }
  else
  {
    swift_task_dealloc();
    char v2 = sub_1C0238DD4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0238DD4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C0238E3C()
{
  uint64_t v1 = *(void **)(v0 + 48);
  swift_task_dealloc();

  char v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t PuzzleService.puzzles(for:cachePolicy:callbackQueue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1C0238EC8, 0, 0);
}

uint64_t sub_1C0238EC8()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  long long v4 = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(void *)(v3 + 40) = v2;
  *(unsigned char *)(v3 + 48) = 0;
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  sub_1BFCE25D8(0, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
  *long long v5 = v0;
  v5[1] = sub_1C0238FF0;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000035, 0x80000001C1608680, sub_1C0247610, v3, v6);
}

uint64_t sub_1C0238FF0()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C024B6F0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C024B704;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C023910C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C0239170(uint64_t *a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  if (!a2 || !*(void *)(a2 + 16)) {
    goto LABEL_15;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_1BFEF2D8C(v9, v10);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v13 = 0;
    goto LABEL_16;
  }
  uint64_t v13 = *(void **)(*(void *)(a2 + 56) + 8 * v11);
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  if ((objc_msgSend(v13, sel_isDeprecated) & 1) == 0) {
    goto LABEL_26;
  }
  if (qword_1EA194B70 != -1) {
    swift_once();
  }
  if ((sub_1C151701C() & 1) == 0)
  {
    if (qword_1EB8814A0 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_1C15198DC();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EB93C7A8);
    swift_unknownObjectRetain_n();
    uint64_t v23 = sub_1C15198AC();
    os_log_type_t v24 = sub_1C151F38C();
    if (os_log_type_enabled(v23, v24))
    {
      os_log_type_t typea = v24;
      char v25 = (uint8_t *)swift_slowAlloc();
      bufa = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = (uint64_t)bufa;
      *(_DWORD *)char v25 = 136315138;
      uint64_t v30 = v25;
      id v26 = objc_msgSend(v13, sel_identifier);
      uint64_t v27 = sub_1C151E62C();
      unint64_t v29 = v28;

      sub_1BFDA76EC(v27, v29, &v35);
      sub_1C151FE1C();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BFC31000, v23, typea, "PuzzleService encountered deprecated puzzle %s during a batched fetch. This puzzle will be excluded from the fetch result.", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C18C9B00](bufa, -1, -1);
      MEMORY[0x1C18C9B00](v30, -1, -1);
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    uint64_t v13 = 0;
    *a3 = 1;
  }
  else
  {
LABEL_26:
    if ((a4 & 1) != 0 && objc_msgSend(v13, sel_isDraft))
    {
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v14 = sub_1C15198DC();
      __swift_project_value_buffer(v14, (uint64_t)qword_1EB93C7A8);
      swift_unknownObjectRetain_n();
      uint64_t v15 = sub_1C15198AC();
      os_log_type_t v16 = sub_1C151F38C();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t type = swift_slowAlloc();
        uint64_t v35 = type;
        *(_DWORD *)uint64_t v17 = 136315138;
        buf = v17;
        id v18 = objc_msgSend(v13, sel_identifier);
        uint64_t v19 = sub_1C151E62C();
        unint64_t v21 = v20;

        sub_1BFDA76EC(v19, v21, &v35);
        sub_1C151FE1C();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BFC31000, v15, v16, "PuzzleService encountered draft puzzle %s during a batched fetch. This puzzle will be excluded from the fetch result.", buf, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](type, -1, -1);
        MEMORY[0x1C18C9B00](buf, -1, -1);
        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      goto LABEL_15;
    }
  }
LABEL_16:
  *a5 = v13;
}

uint64_t PuzzleService.puzzleTypes(for:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1C0239608, 0, 0);
}

uint64_t sub_1C0239608()
{
  int8x16_t v6 = *(int8x16_t *)(v0 + 24);
  id v1 = objc_msgSend(self, sel_defaultCachePolicy);
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  v2[1] = vextq_s8(v6, v6, 8uLL);
  v2[2].i64[0] = (uint64_t)v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  sub_1BFCE25D8(0, &qword_1EB86B340, (unint64_t *)&qword_1EB890220);
  void *v3 = v0;
  v3[1] = sub_1C0239758;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD00000000000001DLL, 0x80000001C16086C0, sub_1C0247614, v2, v4);
}

uint64_t sub_1C0239758()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C02398DC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C0239874;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0239874()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1C02398DC()
{
  uint64_t v1 = *(void **)(v0 + 40);
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t PuzzleService.puzzleTypes(for:cachePolicy:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1C0239968, 0, 0);
}

uint64_t sub_1C0239968()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  long long v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  sub_1BFCE25D8(0, &qword_1EB86B340, (unint64_t *)&qword_1EB890220);
  *long long v5 = v0;
  v5[1] = sub_1C0239A90;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD00000000000001DLL, 0x80000001C16086C0, sub_1C024B6F4, v4, v6);
}

uint64_t sub_1C0239A90()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0239BAC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C0121EC4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0239BAC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PuzzleService.puzzleTypes(for:qos:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1C0239C34, 0, 0);
}

uint64_t sub_1C0239C34()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  id v4 = objc_msgSend(self, sel_defaultCachePolicy);
  v0[6] = v4;
  long long v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  void v5[2] = v1;
  v5[3] = v3;
  void v5[4] = v4;
  v5[5] = v2;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  sub_1BFCE25D8(0, &qword_1EB86B340, (unint64_t *)&qword_1EB890220);
  *uint64_t v6 = v0;
  v6[1] = sub_1C0238CB8;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000021, 0x80000001C16086E0, sub_1C0247620, v5, v7);
}

uint64_t PuzzleService.puzzleTypes(for:cachePolicy:qos:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  return MEMORY[0x1F4188298](sub_1C0239DA8, 0, 0);
}

uint64_t sub_1C0239DA8()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  long long v7 = *(_OWORD *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(void *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v2;
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  sub_1BFCE25D8(0, &qword_1EB86B340, (unint64_t *)&qword_1EB890220);
  *id v4 = v0;
  v4[1] = sub_1C02389BC;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000021, 0x80000001C16086E0, sub_1C024B700, v3, v5);
}

void sub_1C0239EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a4;
  sub_1BFF0A4E0(0, (unint64_t *)&unk_1EB86B388, &qword_1EB86B340, (unint64_t *)&qword_1EB890220);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v19 - v10;
  char v12 = *(void **)(a2 + 72);
  sub_1BFD430AC(a3);
  uint64_t v13 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  uint64_t v14 = FCCurrentQoSOrUtilityIfMain();
  FCCurrentQoSOrUtilityIfMain();
  id v15 = (id)FCDispatchQueueForQualityOfService();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, v11, v8);
  aBlock[4] = sub_1C024B574;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C023A110;
  aBlock[3] = &block_descriptor_198;
  id v18 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v12, sel_fetchPuzzleTypesForPuzzleTypeIDs_cachePolicy_qualityOfService_callbackQueue_completionHandler_, v13, v20, v14, v15, v18);
  _Block_release(v18);
}

uint64_t sub_1C023A110(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1BFCC56F0(a1, a2, a3, (unint64_t *)&qword_1EB890220);
}

void sub_1C023A124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a4;
  sub_1BFF0A4E0(0, (unint64_t *)&unk_1EB86B388, &qword_1EB86B340, (unint64_t *)&qword_1EB890220);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - v12;
  uint64_t v14 = *(void **)(a2 + 72);
  sub_1BFD430AC(a3);
  id v15 = (void *)sub_1C151EBAC();
  swift_bridgeObjectRelease();
  id v16 = (id)FCDispatchQueueForQualityOfService();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  unint64_t v17 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v17, v13, v10);
  aBlock[4] = sub_1C024B574;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C023A110;
  aBlock[3] = &block_descriptor_192;
  uint64_t v19 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v14, sel_fetchPuzzleTypesForPuzzleTypeIDs_cachePolicy_qualityOfService_callbackQueue_completionHandler_, v15, v21, a5, v16, v19);
  _Block_release(v19);
}

uint64_t sub_1C023A354(uint64_t a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
LABEL_3:
    sub_1BFF0A4E0(0, (unint64_t *)&unk_1EB86B388, &qword_1EB86B340, (unint64_t *)&qword_1EB890220);
    return sub_1C151EDCC();
  }
  if (!a1)
  {
    sub_1C02474EC();
    swift_allocError();
    *uint64_t v5 = 2;
    goto LABEL_3;
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_1BFD35AC0(v4);
  swift_bridgeObjectRelease();
  sub_1BFF0A4E0(0, (unint64_t *)&unk_1EB86B388, &qword_1EB86B340, (unint64_t *)&qword_1EB890220);
  return sub_1C151EDDC();
}

uint64_t PuzzleService.puzzleResource(from:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  v3[5] = swift_task_alloc();
  uint64_t v4 = sub_1C1515FDC();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v3[9] = type metadata accessor for PuzzleResourceSource();
  v3[10] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C023A5A0, 0, 0);
}

uint64_t sub_1C023A5A0()
{
  sub_1BFDF8BA4(v0[3], v0[10], (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v2 = *(void *)v0[10];
      v0[17] = v2;
      uint64_t v3 = (void *)swift_task_alloc();
      v0[18] = v3;
      void *v3 = v0;
      v3[1] = sub_1C023AC5C;
      uint64_t v4 = v0[2];
      return PuzzleService.puzzleResource(puzzle:)(v4, v2);
    }
    else
    {
      uint64_t v11 = (uint64_t *)v0[10];
      uint64_t v13 = v0[7];
      uint64_t v12 = v0[8];
      uint64_t v15 = v0[5];
      uint64_t v14 = v0[6];
      uint64_t v16 = *v11;
      uint64_t v17 = v11[1];
      v0[20] = v17;
      sub_1C023675C();
      uint64_t v19 = (char *)v11 + *(int *)(v18 + 48);
      uint64_t v20 = (uint64_t)v11 + *(int *)(v18 + 64);
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v19, v14);
      sub_1BFF882CC(v20, v15, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      uint64_t v21 = (void *)swift_task_alloc();
      v0[21] = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_1C023ADF4;
      uint64_t v22 = v0[8];
      uint64_t v23 = v0[5];
      uint64_t v24 = v0[2];
      return PuzzleService.puzzleResource(puzzleID:indexFileURL:puzzleDataStoreURL:)(v24, v16, v17, v22, v23);
    }
  }
  else
  {
    uint64_t v6 = (uint64_t *)v0[10];
    uint64_t v8 = *v6;
    uint64_t v7 = v6[1];
    v0[11] = v7;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[12] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1C023A830;
    uint64_t v10 = v0[4];
    v9[3] = v7;
    v9[4] = v10;
    v9[2] = v8;
    return MEMORY[0x1F4188298](sub_1C0236BA4, 0, 0);
  }
}

uint64_t sub_1C023A830(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 104) = a1;
  swift_task_dealloc();
  if (v1)
  {
    v4[16] = v1;
    return MEMORY[0x1F4188298](sub_1C023ABD0, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v4[14] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_1C023A9BC;
    uint64_t v7 = v4[2];
    return PuzzleService.puzzleResource(puzzle:)(v7, a1);
  }
}

uint64_t sub_1C023A9BC()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C023AB60;
  }
  else {
    uint64_t v2 = sub_1C023AAD0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C023AAD0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C023AB60()
{
  swift_unknownObjectRelease();
  *(void *)(v0 + 128) = *(void *)(v0 + 120);
  return MEMORY[0x1F4188298](sub_1C023ABD0, 0, 0);
}

uint64_t sub_1C023ABD0()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C023AC5C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C023AFE8;
  }
  else {
    uint64_t v2 = sub_1C023AD70;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C023AD70()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C023ADF4()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_1C023B074;
  }
  else {
    uint64_t v2 = sub_1C023AF24;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C023AF24()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  sub_1BFF50FC4(v0[5], (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C023AFE8()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C023B074()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  sub_1BFF50FC4(v0[5], (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t PuzzleService.puzzleResource(puzzleID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a1;
  v4[3] = v3;
  uint64_t v7 = (void *)swift_task_alloc();
  v4[4] = v7;
  *uint64_t v7 = v4;
  v7[3] = a3;
  v7[4] = v3;
  v7[1] = sub_1C023B1F4;
  _OWORD v7[2] = a2;
  return MEMORY[0x1F4188298](sub_1C0236BA4, 0, 0);
}

uint64_t sub_1C023B1F4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 40) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v4 + 48) = v8;
    *uint64_t v8 = v5;
    v8[1] = sub_1C023B370;
    uint64_t v9 = *(void *)(v4 + 16);
    return PuzzleService.puzzleResource(puzzle:)(v9, a1);
  }
}

uint64_t sub_1C023B370()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C023B4E8;
  }
  else {
    uint64_t v2 = sub_1C023B484;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C023B484()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C023B4E8()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PuzzleService.puzzleResource(puzzle:)(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v3[10] = type metadata accessor for PuzzleResource();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  v3[13] = swift_task_alloc();
  uint64_t v4 = sub_1C1515FDC();
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  v3[18] = type metadata accessor for WebArchive();
  v3[19] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C023B6EC, 0, 0);
}

uint64_t sub_1C023B6EC()
{
  uint64_t v29 = v0;
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C15198DC();
  *(void *)(v0 + 160) = __swift_project_value_buffer(v1, (uint64_t)qword_1EB93C7A8);
  swift_unknownObjectRetain_n();
  uint64_t v2 = sub_1C15198AC();
  os_log_type_t v3 = sub_1C151F38C();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void **)(v0 + 64);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 136315138;
    id v8 = objc_msgSend(v5, sel_identifier);
    uint64_t v9 = sub_1C151E62C();
    unint64_t v11 = v10;

    *(void *)(v0 + 48) = sub_1BFDA76EC(v9, v11, &v28);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_1BFC31000, v2, v3, "PuzzleService start fetching puzzle resources for puzzle=%s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v7, -1, -1);
    MEMORY[0x1C18C9B00](v6, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
  }

  id v12 = objc_msgSend(*(id *)(v0 + 64), sel_dataResourceID);
  if (!v12)
  {
    sub_1C02474EC();
    swift_allocError();
    char v24 = 2;
    goto LABEL_12;
  }
  uint64_t v13 = v12;
  uint64_t v14 = *(void **)(v0 + 64);
  uint64_t v15 = sub_1C151E62C();
  uint64_t v17 = v16;

  id v18 = objc_msgSend(objc_msgSend(v14, sel_puzzleType), sel_engineResourceID);
  swift_unknownObjectRelease();
  if (!v18)
  {
    swift_bridgeObjectRelease();
    sub_1C02474EC();
    swift_allocError();
    char v24 = 1;
    goto LABEL_12;
  }
  uint64_t v19 = *(void **)(v0 + 64);
  uint64_t v20 = sub_1C151E62C();
  uint64_t v22 = v21;

  *(void *)(v0 + 168) = v20;
  *(void *)(v0 + 176) = v22;
  if (objc_msgSend(v19, sel_isDeprecated))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C02474EC();
    swift_allocError();
    char v24 = 5;
LABEL_12:
    *uint64_t v23 = v24;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)(v0 + 72) + 80), *(void *)(*(void *)(v0 + 72) + 104));
  *(void *)(v0 + 184) = ResourceServiceType.fetchResource(identifier:)(v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v27;
  void *v27 = v0;
  v27[1] = sub_1C023BB40;
  return MEMORY[0x1F415EBC8](v0 + 16);
}

uint64_t sub_1C023BB40()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C023C4D0;
  }
  else
  {
    uint64_t v2 = sub_1C023BC84;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C023BC84()
{
  unint64_t v10 = v0;
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  os_log_type_t v3 = (void *)v0[9];
  v0[26] = v0[2];
  uint64_t v4 = v3[18];
  uint64_t v5 = v3[19];
  __swift_project_boxed_opaque_existential_1(v3 + 15, v4);
  v9[0] = v2;
  v9[1] = v1;
  v9[2] = 0;
  v9[3] = 0;
  v0[27] = WebArchiveServiceType.resolve(webArchive:)((uint64_t)v9, v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[28] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1C023BD84;
  uint64_t v7 = v0[19];
  return MEMORY[0x1F415EBC8](v7);
}

uint64_t sub_1C023BD84()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C023C578;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C023BEA0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C023BEA0()
{
  uint64_t v51 = v0;
  id v1 = objc_msgSend(*(id *)(v0 + 208), sel_fileURL);
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v4 = *(void *)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v6 = *(void *)(v0 + 104);
    uint64_t v5 = *(void *)(v0 + 112);
    sub_1C1515F1C();

    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v7(v6, v3, v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) != 1)
    {
      uint64_t v8 = *(void *)(v0 + 152);
      uint64_t v9 = *(void *)(v0 + 136);
      uint64_t v10 = *(void *)(v0 + 144);
      uint64_t v11 = *(void *)(v0 + 112);
      uint64_t v12 = *(void *)(v0 + 120);
      uint64_t v13 = *(void *)(v0 + 80);
      uint64_t v48 = *(void *)(v0 + 88);
      uint64_t v14 = *(char **)(v0 + 56);
      uint64_t v44 = *(void *)(v0 + 64);
      uint64_t v46 = *(void *)(v0 + 96);
      v7(v9, *(void *)(v0 + 104), v11);
      uint64_t v15 = v8 + *(int *)(v10 + 28);
      uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
      v16(&v14[*(int *)(v13 + 20)], v15, v11);
      v16(&v14[*(int *)(v13 + 24)], v9, v11);
      *(void *)uint64_t v14 = v44;
      sub_1BFDF8BA4((uint64_t)v14, v46, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
      sub_1BFDF8BA4((uint64_t)v14, v48, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
      swift_unknownObjectRetain_n();
      uint64_t v17 = sub_1C15198AC();
      os_log_type_t v18 = sub_1C151F38C();
      BOOL v19 = os_log_type_enabled(v17, v18);
      uint64_t v20 = *(void *)(v0 + 152);
      uint64_t v21 = *(void *)(v0 + 136);
      uint64_t v23 = *(void *)(v0 + 112);
      uint64_t v22 = *(void *)(v0 + 120);
      uint64_t v25 = *(void *)(v0 + 88);
      uint64_t v24 = *(void *)(v0 + 96);
      id v26 = *(void **)(v0 + 64);
      if (v19)
      {
        uint64_t v49 = *(void **)(v0 + 208);
        uint64_t v41 = *(void *)(v0 + 112);
        uint64_t v27 = swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        v50[0] = v45;
        *(_DWORD *)uint64_t v27 = 136315650;
        os_log_type_t type = v18;
        id v28 = objc_msgSend(v26, sel_identifier);
        uint64_t v47 = v21;
        uint64_t v29 = sub_1C151E62C();
        uint64_t v42 = v25;
        unint64_t v31 = v30;

        *(void *)(v0 + 24) = sub_1BFDA76EC(v29, v31, v50);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
        *(_WORD *)(v27 + 12) = 2080;
        sub_1BFDF8CDC((unint64_t *)&qword_1EB861120, 255, MEMORY[0x1E4F276F0]);
        uint64_t v32 = sub_1C152088C();
        *(void *)(v0 + 32) = sub_1BFDA76EC(v32, v33, v50);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        sub_1C0247540(v24, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
        *(_WORD *)(v27 + 22) = 2080;
        uint64_t v34 = sub_1C152088C();
        *(void *)(v0 + 40) = sub_1BFDA76EC(v34, v35, v50);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        sub_1C0247540(v42, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
        _os_log_impl(&dword_1BFC31000, v17, type, "PuzzleService finished fetching puzzle resources for puzzle=%s with indexFileURL=%s \n dataFileURL=%s", (uint8_t *)v27, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v45, -1, -1);
        MEMORY[0x1C18C9B00](v27, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v47, v41);
      }
      else
      {

        sub_1C0247540(v25, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
        sub_1C0247540(v24, (uint64_t (*)(void))type metadata accessor for PuzzleResource);
        swift_unknownObjectRelease_n();
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      }
      sub_1C0247540(v20, (uint64_t (*)(void))type metadata accessor for WebArchive);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_9;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 120) + 56))(*(void *)(v0 + 104), 1, 1, *(void *)(v0 + 112));
  }
  uint64_t v36 = *(void **)(v0 + 208);
  uint64_t v37 = *(void *)(v0 + 152);
  sub_1BFF50FC4(*(void *)(v0 + 104), (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  sub_1C02474EC();
  swift_allocError();
  unsigned char *v38 = 4;
  swift_willThrow();

  sub_1C0247540(v37, (uint64_t (*)(void))type metadata accessor for WebArchive);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
LABEL_9:
  return v39();
}

uint64_t sub_1C023C4D0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C023C578()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PuzzleService.puzzleResource(puzzleID:indexFileURL:puzzleDataStoreURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[235] = v5;
  v6[229] = a5;
  v6[223] = a4;
  v6[217] = a1;
  uint64_t v9 = sub_1C1515E1C();
  v6[241] = v9;
  v6[247] = *(void *)(v9 - 8);
  v6[253] = swift_task_alloc();
  sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  v6[259] = swift_task_alloc();
  v6[265] = swift_task_alloc();
  v6[271] = swift_task_alloc();
  v6[277] = swift_task_alloc();
  v6[278] = swift_task_alloc();
  uint64_t v10 = sub_1C1515FDC();
  v6[279] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v6[280] = v11;
  v6[281] = *(void *)(v11 + 64);
  v6[282] = swift_task_alloc();
  v6[283] = swift_task_alloc();
  v6[284] = swift_task_alloc();
  v6[285] = swift_task_alloc();
  v6[286] = swift_task_alloc();
  v6[287] = swift_task_alloc();
  v6[288] = swift_task_alloc();
  v6[289] = swift_task_alloc();
  v6[290] = swift_task_alloc();
  v6[291] = swift_task_alloc();
  v6[292] = swift_task_alloc();
  v6[293] = swift_task_alloc();
  v6[294] = swift_task_alloc();
  sub_1C024762C();
  v6[295] = v12;
  v6[296] = swift_task_alloc();
  v6[297] = swift_task_alloc();
  uint64_t v13 = (void *)swift_task_alloc();
  v6[298] = v13;
  *uint64_t v13 = v6;
  v13[3] = a3;
  v13[4] = v5;
  v13[1] = sub_1C023C950;
  v13[2] = a2;
  return MEMORY[0x1F4188298](sub_1C0236BA4, 0, 0);
}

uint64_t sub_1C023C950(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2392) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C023CC10, 0, 0);
  }
}

uint64_t sub_1C023CC10()
{
  uint64_t v1 = *(void *)(v0 + 2352);
  uint64_t v2 = *(void *)(v0 + 2240);
  uint64_t v3 = *(void *)(v0 + 2232);
  uint64_t v4 = *(void *)(v0 + 1784);
  id v5 = objc_msgSend(self, sel_sharedSession);
  *(void *)(v0 + 2400) = v5;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  *(void *)(v0 + 2408) = v6;
  *(void *)(v0 + 2416) = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v4, v3);
  int v7 = *(_DWORD *)(v2 + 80);
  *(_DWORD *)(v0 + 2656) = v7;
  unint64_t v8 = (v7 + 24) & ~(unint64_t)v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 2424) = v9;
  *(void *)(v9 + 16) = v5;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
  *(void *)(v0 + 2432) = v10;
  *(void *)(v0 + 2440) = (v2 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v10(v9 + v8, v1, v3);
  id v11 = v5;
  swift_retain();
  swift_asyncLet_begin();
  uint64_t v12 = *(void *)(v0 + 2376);
  return MEMORY[0x1F41881E0](v0 + 16, v12, sub_1C023CDD4, v0 + 1888);
}

uint64_t sub_1C023CDD4()
{
  *(void *)(v1 + 2448) = v0;
  if (v0) {
    uint64_t v2 = sub_1C0240D60;
  }
  else {
    uint64_t v2 = sub_1C023CE78;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C023CE78()
{
  uint64_t v199 = v0;
  v198[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = v0[280];
  uint64_t v2 = v0[279];
  uint64_t v3 = v0[278];
  uint64_t v4 = v0[277];
  uint64_t v5 = v0[229];
  ((void (*)(void, void, uint64_t))v0[301])(v0[293], v0[297], v2);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  v0[307] = v6;
  v0[308] = (v1 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v6(v3, 1, 1, v2);
  sub_1C0236808(v5, v4, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF2E4B8);
  int v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  v0[309] = v7;
  v0[310] = (v1 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v7(v4, 1, v2) == 1)
  {
    unint64_t v8 = v0 + 2;
    sub_1BFF50FC4(v0[277], (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    *(_OWORD *)(v0 + 313) = 0u;
    uint64_t v9 = self;
    id v10 = objc_msgSend(v9, sel_defaultManager);
    v0[315] = v10;
    sub_1C1515F3C();
    id v11 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_contentsAtPath_, v11);

    if (v12)
    {
      uint64_t v13 = sub_1C151606C();
      unint64_t v15 = v14;

      v0[316] = v13;
      v0[317] = v15;
      uint64_t v197 = v13;
      if ((sub_1C0242C00((uint64_t)&unk_1F1B68C40, v13, v15) & 1) == 0)
      {
        uint64_t v58 = v0[288];
        uint64_t v59 = v0[280];
        uint64_t v60 = v0[279];
        sub_1C1515EAC();
        sub_1C1515EEC();
        double v61 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
        v61(v58, v60);
        sub_1C1515F3C();
        CGFloat v62 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        unsigned int v63 = objc_msgSend(v10, sel_fileExistsAtPath_, v62);

        if (v63)
        {
          uint64_t v64 = (void *)sub_1C1515E9C();
          v0[193] = 0;
          unsigned int v65 = objc_msgSend(v10, sel_removeItemAtURL_error_, v64, v0 + 193);

          uint64_t v66 = (void *)v0[193];
          if (!v65)
          {
            uint64_t v195 = v0[293];
            uint64_t v131 = v0[284];
            uint64_t v132 = v10;
            uint64_t v133 = v0[279];
            uint64_t v188 = v0[278];
            id v134 = v66;
            v0[330] = sub_1C1515D3C();

            swift_willThrow();
            sub_1BFE95664(v197, v15);

            v61(v131, v133);
            sub_1BFF50FC4(v188, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            v61(v195, v133);
            uint64_t v54 = v0[297];
            char v57 = sub_1C0241F04;
            uint64_t v55 = v0 + 230;
            char v56 = v0 + 2;
            goto LABEL_43;
          }
          id v67 = v66;
        }
        CGFloat v68 = (void *)sub_1C1515E9C();
        char v69 = (void *)sub_1C1515E9C();
        v0[205] = 0;
        unsigned int v70 = objc_msgSend(v10, sel_moveItemAtURL_toURL_error_, v68, v69, v0 + 205);

        id v71 = (void *)v0[205];
        if (v70)
        {
          ((void (*)(void, void, void))v0[304])(v0[290], v0[284], v0[279]);
          id v72 = v71;
          goto LABEL_18;
        }
        uint64_t v194 = v0[293];
        uint64_t v121 = v0[284];
        uint64_t v122 = v10;
        uint64_t v123 = v0[279];
        uint64_t v187 = v0[278];
        id v124 = v71;
        v0[331] = sub_1C1515D3C();

        swift_willThrow();
        sub_1BFE95664(v197, v15);

        v61(v121, v123);
        sub_1BFF50FC4(v187, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        v61(v194, v123);
        uint64_t v54 = v0[297];
        char v57 = sub_1C0242184;
        uint64_t v55 = v0 + 182;
        char v56 = v0 + 2;
LABEL_43:
        return MEMORY[0x1F41881D0](v56, v54, v57, v55);
      }
      id v178 = v9;
      id v184 = v10;
      long long v190 = v0 + 2;
      unint64_t v191 = v15;
      uint64_t v16 = v0[288];
      uint64_t v17 = v0[280];
      uint64_t v18 = v0[279];
      BOOL v19 = v0;
      uint64_t v20 = v0[253];
      uint64_t v21 = v0[247];
      uint64_t v22 = v19[241];
      sub_1C1515EFC();
      v19[167] = 0xD000000000000010;
      v19[168] = 0x80000001C1608710;
      (*(void (**)(uint64_t, void, uint64_t))(v21 + 104))(v20, *MEMORY[0x1E4F276A8], v22);
      sub_1BFF27ECC();
      sub_1C1515FAC();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
      uint64_t v193 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v193(v16, v18);
      sub_1C1515EDC();
      if (qword_1EB8814A0 != -1) {
        swift_once();
      }
      uint64_t v23 = (void (*)(uint64_t, uint64_t, uint64_t))v19[301];
      uint64_t v24 = v19[289];
      uint64_t v25 = v19[286];
      uint64_t v26 = v19[279];
      uint64_t v27 = sub_1C15198DC();
      __swift_project_value_buffer(v27, (uint64_t)qword_1EB93C7A8);
      v23(v25, v24, v26);
      id v28 = sub_1C15198AC();
      os_log_type_t v29 = sub_1C151F38C();
      BOOL v30 = os_log_type_enabled(v28, v29);
      uint64_t v31 = v19[286];
      uint64_t v32 = v19[279];
      if (v30)
      {
        unint64_t v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        v198[0] = v34;
        *(_DWORD *)unint64_t v33 = 136315138;
        sub_1BFDF8CDC((unint64_t *)&qword_1EB861120, 255, MEMORY[0x1E4F276F0]);
        uint64_t v35 = sub_1C152088C();
        v19[181] = sub_1BFDA76EC(v35, v36, v198);
        sub_1C151FE1C();
        swift_bridgeObjectRelease();
        v193(v31, v32);
        uint64_t v37 = v193;
        _os_log_impl(&dword_1BFC31000, v28, v29, "Unarchiving puzzle [%s]", v33, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C18C9B00](v34, -1, -1);
        MEMORY[0x1C18C9B00](v33, -1, -1);
      }
      else
      {
        uint64_t v37 = v193;
        v193(v31, v19[279]);
      }

      unint64_t v15 = v191;
      uint64_t v84 = v19[288];
      uint64_t v85 = v19[279];
      sub_1C1515EAC();
      sub_1C1515EEC();
      v37(v84, v85);
      sub_1C1515F3C();
      uint64_t v86 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      unsigned int v87 = objc_msgSend(v184, sel_fileExistsAtPath_, v86);

      uint64_t v0 = v19;
      if (v87)
      {
        uint64_t v88 = (void *)sub_1C1515E9C();
        v19[169] = 0;
        unsigned int v89 = objc_msgSend(v184, sel_removeItemAtURL_error_, v88, v19 + 169);

        unint64_t v90 = (void *)v19[169];
        if (!v89)
        {
          id v180 = (id)v19[293];
          uint64_t v135 = v19[289];
          uint64_t v136 = v19[287];
          uint64_t v137 = v19[285];
          uint64_t v138 = v19[279];
          uint64_t v139 = v0[278];
          id v140 = v90;
          v0[326] = sub_1C1515D3C();

          swift_willThrow();
          sub_1BFE95664(v197, v191);

          v193(v137, v138);
          v193(v136, v138);
          v193(v135, v138);
          sub_1BFF50FC4(v139, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          v193((uint64_t)v180, v138);
          uint64_t v54 = v0[297];
          char v56 = v190;
          char v57 = sub_1C0241504;
          uint64_t v55 = v0 + 254;
          goto LABEL_43;
        }
        id v91 = v90;
      }
      long long v92 = (void *)sub_1C1515E9C();
      v19[211] = 0;
      unsigned int v93 = objc_msgSend(v184, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v92, 0, 0, v19 + 211);

      uint64_t v94 = (void *)v19[211];
      if (!v93)
      {
        id v179 = (id)v19[293];
        uint64_t v125 = v19[289];
        uint64_t v126 = v19[287];
        uint64_t v127 = v19[285];
        uint64_t v128 = v19[279];
        uint64_t v129 = v0[278];
        id v130 = v94;
        v0[327] = sub_1C1515D3C();

        swift_willThrow();
        sub_1BFE95664(v197, v191);

        v193(v127, v128);
        v193(v126, v128);
        v193(v125, v128);
        sub_1BFF50FC4(v129, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        v193((uint64_t)v179, v128);
        uint64_t v54 = v0[297];
        char v56 = v190;
        char v57 = sub_1C0241784;
        uint64_t v55 = v0 + 248;
        goto LABEL_43;
      }
      id v95 = v94;
      sub_1C1515F3C();
      id v96 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      unsigned int v97 = objc_msgSend(v184, sel_fileExistsAtPath_, v96);

      if (v97)
      {
        uint64_t v98 = (void *)sub_1C1515E9C();
        v19[187] = 0;
        unsigned int v99 = objc_msgSend(v184, sel_removeItemAtURL_error_, v98, v19 + 187);

        uint64_t v100 = (void *)v19[187];
        if (!v99)
        {
          id v183 = (id)v19[293];
          uint64_t v155 = v19[289];
          uint64_t v156 = v19[287];
          uint64_t v157 = v19[285];
          uint64_t v158 = v19[279];
          uint64_t v159 = v0[278];
          id v160 = v100;
          v0[328] = sub_1C1515D3C();

          swift_willThrow();
          sub_1BFE95664(v197, v191);

          v193(v157, v158);
          v193(v156, v158);
          v193(v155, v158);
          sub_1BFF50FC4(v159, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          v193((uint64_t)v183, v158);
          uint64_t v54 = v0[297];
          char v56 = v190;
          char v57 = sub_1C0241A04;
          uint64_t v55 = v0 + 272;
          goto LABEL_43;
        }
        id v101 = v100;
      }
      int v102 = (void *)sub_1C1515E9C();
      uint64_t v103 = (void *)sub_1C1515E9C();
      v19[175] = 0;
      unsigned int v104 = objc_msgSend(v184, sel_moveItemAtURL_toURL_error_, v102, v103, v19 + 175);

      uint64_t v105 = (void *)v19[175];
      if (!v104)
      {
        id v182 = (id)v19[293];
        uint64_t v149 = v19[289];
        uint64_t v150 = v19[287];
        uint64_t v151 = v19[285];
        uint64_t v152 = v19[279];
        uint64_t v153 = v0[278];
        id v154 = v105;
        v0[329] = sub_1C1515D3C();

        swift_willThrow();
        sub_1BFE95664(v197, v191);

        v193(v151, v152);
        v193(v150, v152);
        v193(v149, v152);
        sub_1BFF50FC4(v153, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        v193((uint64_t)v182, v152);
        uint64_t v54 = v0[297];
        char v56 = v190;
        char v57 = sub_1C0241C84;
        uint64_t v55 = v0 + 260;
        goto LABEL_43;
      }
      id v106 = objc_allocWithZone(MEMORY[0x1E4F81BC8]);
      id v107 = v105;
      id v108 = objc_msgSend(v106, sel_init);
      uint64_t v109 = (void *)sub_1C1515E9C();
      id v110 = (void *)sub_1C1515E9C();
      unsigned int v111 = objc_msgSend(v108, sel_unarchive_toLocation_, v109, v110);

      id v112 = objc_msgSend(v178, sel_defaultManager);
      sub_1C1515E0C();
      uint64_t v113 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      unsigned int v114 = objc_msgSend(v112, sel_fileExistsAtPath_, v113);

      if (v111 && v114)
      {
        id v115 = (void (*)(uint64_t, uint64_t, uint64_t))v19[304];
        uint64_t v116 = v19[290];
        uint64_t v117 = v19[289];
        uint64_t v118 = v19[287];
        uint64_t v119 = v19[285];
        uint64_t v120 = v19[279];

        v193(v119, v120);
        v193(v117, v120);
        v115(v116, v118, v120);
        double v61 = v193;
        unint64_t v8 = v190;
        id v10 = v184;
LABEL_18:
        unint64_t v192 = v15;
        v0[319] = v61;
        CGRect v73 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[309];
        uint64_t v74 = v0[279];
        uint64_t v75 = v0[265];
        sub_1C0236808(v0[278], v75, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF2E4B8);
        if (v73(v75, 1, v74) == 1)
        {
          CGRect v76 = (void *)v0[299];
          sub_1BFF50FC4(v0[265], (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          id v77 = objc_msgSend(v76, sel_dataResourceID);
          if (v77)
          {
            CGRect v78 = v77;
            uint64_t v79 = v0[235];
            uint64_t v80 = sub_1C151E62C();
            uint64_t v82 = v81;

            __swift_project_boxed_opaque_existential_1((void *)(v79 + 80), *(void *)(v79 + 104));
            v0[320] = ResourceServiceType.fetchResource(identifier:)(v80, v82);
            swift_bridgeObjectRelease();
            uint64_t v83 = (void *)swift_task_alloc();
            v0[321] = v83;
            *uint64_t v83 = v0;
            v83[1] = sub_1C02400A4;
            return MEMORY[0x1F415EBC8](v0 + 199);
          }
          uint64_t v161 = v0[293];
          uint64_t v162 = v0[290];
          uint64_t v163 = v0[279];
          uint64_t v164 = v10;
          uint64_t v165 = v0[278];
          sub_1C02474EC();
          v0[324] = swift_allocError();
          *char v166 = 2;
          swift_willThrow();
          sub_1BFE95664(v197, v15);

          v61(v162, v163);
          sub_1BFF50FC4(v165, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          v61(v161, v163);
          uint64_t v54 = v0[297];
          char v56 = v8;
          char v57 = sub_1C0240860;
          uint64_t v55 = v0 + 188;
        }
        else
        {
          __int16 v196 = (void (*)(id, uint64_t))v61;
          unint64_t v141 = (void (*)(uint64_t, uint64_t, uint64_t))v0[304];
          id v181 = (id)v0[293];
          id v185 = (id)v0[290];
          uint64_t v189 = v0[299];
          uint64_t v142 = v0[283];
          unint64_t v143 = v10;
          uint64_t v144 = v0[279];
          uint64_t v145 = v0[278];
          uint64_t v146 = v0[265];
          BOOL v147 = (void *)v0[217];
          sub_1BFE95664(v197, v192);

          sub_1BFF50FC4(v145, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          v196(v181, v144);
          v141(v142, v146, v144);
          uint64_t v148 = type metadata accessor for PuzzleResource();
          v141((uint64_t)v147 + *(int *)(v148 + 20), (uint64_t)v185, v144);
          v141((uint64_t)v147 + *(int *)(v148 + 24), v142, v144);
          *BOOL v147 = v189;
          swift_unknownObjectRetain();
          uint64_t v54 = v0[297];
          char v56 = v8;
          char v57 = sub_1C023FE1C;
          uint64_t v55 = v0 + 218;
        }
        goto LABEL_43;
      }
      id v167 = sub_1C15198AC();
      os_log_type_t v168 = sub_1C151F36C();
      if (os_log_type_enabled(v167, v168))
      {
        char v169 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v169 = 0;
        _os_log_impl(&dword_1BFC31000, v167, v168, "Failed to decompress archive file", v169, 2u);
        MEMORY[0x1C18C9B00](v169, -1, -1);
      }
      uint64_t v170 = v19[293];
      uint64_t v171 = v19[289];
      uint64_t v172 = v19[287];
      uint64_t v173 = v19[285];
      uint64_t v174 = v0[279];
      uint64_t v175 = v0[278];

      sub_1C02474EC();
      v0[318] = swift_allocError();
      unsigned char *v176 = 3;
      swift_willThrow();

      sub_1BFE95664(v197, v191);
      v193(v173, v174);
      v193(v172, v174);
      v193(v171, v174);
      sub_1BFF50FC4(v175, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      v193(v170, v174);
      char v53 = sub_1C023FB9C;
      uint64_t v54 = v0[297];
      char v56 = v190;
      uint64_t v55 = v0 + 266;
    }
    else
    {
      uint64_t v47 = v0[293];
      uint64_t v48 = v10;
      uint64_t v49 = v0[280];
      uint64_t v50 = v0[279];
      uint64_t v51 = v0[278];
      sub_1C02474EC();
      v0[325] = swift_allocError();
      *uint64_t v52 = 3;
      swift_willThrow();

      sub_1BFF50FC4(v51, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v50);
      char v53 = sub_1C0240AE0;
      uint64_t v54 = v0[297];
      uint64_t v55 = v0 + 170;
      char v56 = v0 + 2;
    }
    char v57 = v53;
    goto LABEL_43;
  }
  unint64_t v38 = (void (*)(uint64_t, uint64_t, uint64_t))v0[304];
  uint64_t v186 = (void (*)(uint64_t, uint64_t, uint64_t))v0[301];
  uint64_t v39 = (void *)v0[300];
  uint64_t v40 = v0[292];
  uint64_t v41 = v0[291];
  uint64_t v42 = v0[279];
  unint64_t v43 = (*((unsigned __int8 *)v0 + 2656) + 24) & ~(unint64_t)*((unsigned __int8 *)v0 + 2656);
  v38(v40, v0[277], v42);
  v186(v41, v40, v42);
  uint64_t v44 = swift_allocObject();
  v0[311] = v44;
  *(void *)(v44 + 16) = v39;
  v38(v44 + v43, v41, v42);
  id v45 = v39;
  swift_retain();
  swift_asyncLet_begin();
  uint64_t v46 = v0[296];
  return MEMORY[0x1F41881E0](v0 + 82, v46, sub_1C023E4E4, v0 + 224);
}

uint64_t sub_1C023E4E4()
{
  *(void *)(v1 + 2496) = v0;
  if (v0) {
    uint64_t v2 = sub_1C024105C;
  }
  else {
    uint64_t v2 = sub_1C023E588;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C023E588()
{
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[307];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[301];
  uint64_t v3 = v0[296];
  uint64_t v4 = v0[279];
  uint64_t v5 = v0[278];
  uint64_t v6 = v0[271];
  int v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1BFF50FC4(v5, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  v2(v6, v3, v4);
  v1(v6, 0, 1, v4);
  sub_1BFF882CC(v6, v5, (unint64_t *)&qword_1EB8948A0, v7);
  uint64_t v8 = v0[296];
  return MEMORY[0x1F41881D0](v0 + 82, v8, sub_1C023E6BC, v0 + 242);
}

uint64_t sub_1C023E6BC()
{
  return MEMORY[0x1F4188298](sub_1C023E748, 0, 0);
}

uint64_t sub_1C023E748()
{
  uint64_t v181 = v0;
  v180[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = v0 + 16;
  (*(void (**)(void, void))(*(void *)(v0 + 2240) + 8))(*(void *)(v0 + 2336), *(void *)(v0 + 2232));
  swift_release();
  *(void *)(v0 + 2512) = *(void *)(v0 + 2488);
  *(void *)(v0 + 2504) = &unk_1EA1986E8;
  uint64_t v2 = self;
  id v3 = objc_msgSend(v2, sel_defaultManager);
  *(void *)(v0 + 2520) = v3;
  sub_1C1515F3C();
  uint64_t v4 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v3, sel_contentsAtPath_, v4);

  if (!v5)
  {
    uint64_t v30 = *(void *)(v0 + 2344);
    uint64_t v31 = v3;
    uint64_t v32 = *(void *)(v0 + 2240);
    uint64_t v33 = *(void *)(v0 + 2232);
    uint64_t v34 = *(void *)(v0 + 2224);
    sub_1C02474EC();
    *(void *)(v0 + 2600) = swift_allocError();
    *uint64_t v35 = 3;
    swift_willThrow();

    sub_1BFF50FC4(v34, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v33);
    unint64_t v36 = sub_1C0240AE0;
    uint64_t v37 = *(void *)(v0 + 2376);
    uint64_t v38 = v0 + 1360;
    uint64_t v39 = v0 + 16;
LABEL_8:
    uint64_t v40 = v36;
    goto LABEL_39;
  }
  uint64_t v6 = sub_1C151606C();
  unint64_t v8 = v7;

  *(void *)(v0 + 2528) = v6;
  *(void *)(v0 + 2536) = v8;
  uint64_t v179 = v6;
  if ((sub_1C0242C00((uint64_t)&unk_1F1B68C40, v6, v8) & 1) == 0)
  {
    uint64_t v41 = *(void *)(v0 + 2304);
    uint64_t v42 = *(void *)(v0 + 2240);
    uint64_t v43 = *(void *)(v0 + 2232);
    sub_1C1515EAC();
    sub_1C1515EEC();
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
    v44(v41, v43);
    sub_1C1515F3C();
    id v45 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    unsigned int v46 = objc_msgSend(v3, sel_fileExistsAtPath_, v45);

    if (v46)
    {
      uint64_t v47 = (void *)sub_1C1515E9C();
      *(void *)(v0 + 1544) = 0;
      unsigned int v48 = objc_msgSend(v3, sel_removeItemAtURL_error_, v47, v0 + 1544);

      uint64_t v49 = *(void **)(v0 + 1544);
      if (!v48)
      {
        uint64_t v177 = *(void *)(v0 + 2344);
        uint64_t v114 = *(void *)(v0 + 2272);
        id v115 = v3;
        uint64_t v116 = *(void *)(v0 + 2232);
        id v171 = *(id *)(v0 + 2224);
        id v117 = v49;
        *(void *)(v0 + 2640) = sub_1C1515D3C();

        swift_willThrow();
        sub_1BFE95664(v179, v8);

        v44(v114, v116);
        sub_1BFF50FC4((uint64_t)v171, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        v44(v177, v116);
        uint64_t v37 = *(void *)(v0 + 2376);
        uint64_t v40 = sub_1C0241F04;
        uint64_t v38 = v0 + 1840;
        uint64_t v39 = v0 + 16;
        goto LABEL_39;
      }
      id v50 = v49;
    }
    uint64_t v51 = (void *)sub_1C1515E9C();
    uint64_t v52 = (void *)sub_1C1515E9C();
    *(void *)(v0 + 1640) = 0;
    unsigned int v53 = objc_msgSend(v3, sel_moveItemAtURL_toURL_error_, v51, v52, v0 + 1640);

    uint64_t v54 = *(void **)(v0 + 1640);
    if (!v53)
    {
      uint64_t v176 = *(void *)(v0 + 2344);
      uint64_t v105 = *(void *)(v0 + 2272);
      id v106 = v3;
      uint64_t v107 = *(void *)(v0 + 2232);
      id v170 = *(id *)(v0 + 2224);
      id v108 = v54;
      *(void *)(v0 + 2648) = sub_1C1515D3C();

      swift_willThrow();
      sub_1BFE95664(v179, v8);

      v44(v105, v107);
      sub_1BFF50FC4((uint64_t)v170, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      v44(v176, v107);
      uint64_t v37 = *(void *)(v0 + 2376);
      uint64_t v40 = sub_1C0242184;
      uint64_t v38 = v0 + 1456;
      uint64_t v39 = v0 + 16;
      goto LABEL_39;
    }
    (*(void (**)(void, void, void))(v0 + 2432))(*(void *)(v0 + 2320), *(void *)(v0 + 2272), *(void *)(v0 + 2232));
    id v55 = v54;
    goto LABEL_14;
  }
  unint64_t v173 = v8;
  id v169 = v3;
  uint64_t v9 = *(void *)(v0 + 2304);
  id v158 = v2;
  uint64_t v10 = *(void *)(v0 + 2240);
  uint64_t v11 = *(void *)(v0 + 2232);
  uint64_t v12 = *(void *)(v0 + 2024);
  uint64_t v13 = *(void *)(v0 + 1976);
  uint64_t v14 = *(void *)(v0 + 1928);
  sub_1C1515EFC();
  *(void *)(v0 + 1336) = 0xD000000000000010;
  *(void *)(v0 + 1344) = 0x80000001C1608710;
  (*(void (**)(uint64_t, void, uint64_t))(v13 + 104))(v12, *MEMORY[0x1E4F276A8], v14);
  sub_1BFF27ECC();
  sub_1C1515FAC();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  uint64_t v175 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v175(v9, v11);
  sub_1C1515EDC();
  if (qword_1EB8814A0 != -1) {
    swift_once();
  }
  unint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2408);
  uint64_t v16 = *(void *)(v0 + 2312);
  uint64_t v17 = *(void *)(v0 + 2288);
  uint64_t v18 = *(void *)(v0 + 2232);
  uint64_t v19 = sub_1C15198DC();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EB93C7A8);
  v15(v17, v16, v18);
  uint64_t v20 = sub_1C15198AC();
  os_log_type_t v21 = sub_1C151F38C();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v23 = *(void *)(v0 + 2288);
  uint64_t v24 = *(void *)(v0 + 2232);
  if (v22)
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    v180[0] = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    sub_1BFDF8CDC((unint64_t *)&qword_1EB861120, 255, MEMORY[0x1E4F276F0]);
    uint64_t v27 = sub_1C152088C();
    *(void *)(v0 + 1448) = sub_1BFDA76EC(v27, v28, v180);
    sub_1C151FE1C();
    swift_bridgeObjectRelease();
    v175(v23, v24);
    os_log_type_t v29 = v175;
    _os_log_impl(&dword_1BFC31000, v20, v21, "Unarchiving puzzle [%s]", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C18C9B00](v26, -1, -1);
    MEMORY[0x1C18C9B00](v25, -1, -1);
  }
  else
  {
    os_log_type_t v29 = v175;
    v175(*(void *)(v0 + 2288), *(void *)(v0 + 2232));
  }

  unint64_t v8 = v173;
  uint64_t v67 = *(void *)(v0 + 2304);
  uint64_t v68 = *(void *)(v0 + 2232);
  sub_1C1515EAC();
  sub_1C1515EEC();
  v29(v67, v68);
  sub_1C1515F3C();
  char v69 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  unsigned int v70 = objc_msgSend(v169, sel_fileExistsAtPath_, v69);

  if (v70)
  {
    id v71 = (void *)sub_1C1515E9C();
    *(void *)(v0 + 1352) = 0;
    unsigned int v72 = objc_msgSend(v169, sel_removeItemAtURL_error_, v71, v0 + 1352);

    CGRect v73 = *(void **)(v0 + 1352);
    if (!v72)
    {
      uint64_t v118 = *(void *)(v0 + 2312);
      uint64_t v119 = *(void *)(v0 + 2296);
      uint64_t v120 = *(void *)(v0 + 2280);
      uint64_t v121 = *(void *)(v0 + 2232);
      uint64_t v160 = *(void *)(v0 + 2224);
      uint64_t v165 = *(void *)(v0 + 2344);
      id v122 = v73;
      *(void *)(v0 + 2608) = sub_1C1515D3C();

      swift_willThrow();
      sub_1BFE95664(v179, v173);

      v175(v120, v121);
      v175(v119, v121);
      v175(v118, v121);
      sub_1BFF50FC4(v160, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      v175(v165, v121);
      uint64_t v37 = *(void *)(v0 + 2376);
      uint64_t v39 = v0 + 16;
      uint64_t v40 = sub_1C0241504;
      uint64_t v38 = v0 + 2032;
      goto LABEL_39;
    }
    id v74 = v73;
  }
  uint64_t v75 = (void *)sub_1C1515E9C();
  *(void *)(v0 + 1688) = 0;
  unsigned int v76 = objc_msgSend(v169, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v75, 0, 0, v0 + 1688);

  id v77 = *(void **)(v0 + 1688);
  if (!v76)
  {
    uint64_t v109 = *(void *)(v0 + 2312);
    uint64_t v110 = *(void *)(v0 + 2296);
    uint64_t v111 = *(void *)(v0 + 2280);
    uint64_t v112 = *(void *)(v0 + 2232);
    uint64_t v159 = *(void *)(v0 + 2224);
    uint64_t v164 = *(void *)(v0 + 2344);
    id v113 = v77;
    *(void *)(v0 + 2616) = sub_1C1515D3C();

    swift_willThrow();
    sub_1BFE95664(v179, v173);

    v175(v111, v112);
    v175(v110, v112);
    v175(v109, v112);
    sub_1BFF50FC4(v159, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    v175(v164, v112);
    uint64_t v37 = *(void *)(v0 + 2376);
    uint64_t v39 = v0 + 16;
    uint64_t v40 = sub_1C0241784;
    uint64_t v38 = v0 + 1984;
    goto LABEL_39;
  }
  id v78 = v77;
  sub_1C1515F3C();
  uint64_t v79 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  unsigned int v80 = objc_msgSend(v169, sel_fileExistsAtPath_, v79);

  if (v80)
  {
    uint64_t v81 = (void *)sub_1C1515E9C();
    *(void *)(v0 + 1496) = 0;
    unsigned int v82 = objc_msgSend(v169, sel_removeItemAtURL_error_, v81, v0 + 1496);

    uint64_t v83 = *(void **)(v0 + 1496);
    if (!v82)
    {
      uint64_t v136 = *(void *)(v0 + 2312);
      uint64_t v137 = *(void *)(v0 + 2296);
      uint64_t v138 = *(void *)(v0 + 2280);
      uint64_t v139 = *(void *)(v0 + 2232);
      uint64_t v163 = *(void *)(v0 + 2224);
      uint64_t v168 = *(void *)(v0 + 2344);
      id v140 = v83;
      *(void *)(v0 + 2624) = sub_1C1515D3C();

      swift_willThrow();
      sub_1BFE95664(v179, v173);

      v175(v138, v139);
      v175(v137, v139);
      v175(v136, v139);
      sub_1BFF50FC4(v163, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      v175(v168, v139);
      uint64_t v37 = *(void *)(v0 + 2376);
      uint64_t v39 = v0 + 16;
      uint64_t v40 = sub_1C0241A04;
      uint64_t v38 = v0 + 2176;
      goto LABEL_39;
    }
    id v84 = v83;
  }
  uint64_t v85 = (void *)sub_1C1515E9C();
  uint64_t v86 = (void *)sub_1C1515E9C();
  *(void *)(v0 + 1400) = 0;
  unsigned int v87 = objc_msgSend(v169, sel_moveItemAtURL_toURL_error_, v85, v86, v0 + 1400);

  uint64_t v88 = *(void **)(v0 + 1400);
  if (!v87)
  {
    uint64_t v131 = *(void *)(v0 + 2312);
    uint64_t v132 = *(void *)(v0 + 2296);
    uint64_t v133 = *(void *)(v0 + 2280);
    uint64_t v134 = *(void *)(v0 + 2232);
    uint64_t v162 = *(void *)(v0 + 2224);
    uint64_t v167 = *(void *)(v0 + 2344);
    id v135 = v88;
    *(void *)(v0 + 2632) = sub_1C1515D3C();

    swift_willThrow();
    sub_1BFE95664(v179, v173);

    v175(v133, v134);
    v175(v132, v134);
    v175(v131, v134);
    sub_1BFF50FC4(v162, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    v175(v167, v134);
    uint64_t v37 = *(void *)(v0 + 2376);
    uint64_t v39 = v0 + 16;
    uint64_t v40 = sub_1C0241C84;
    uint64_t v38 = v0 + 2080;
    goto LABEL_39;
  }
  id v89 = objc_allocWithZone(MEMORY[0x1E4F81BC8]);
  id v90 = v88;
  id v91 = objc_msgSend(v89, sel_init);
  long long v92 = (void *)sub_1C1515E9C();
  unsigned int v93 = (void *)sub_1C1515E9C();
  unsigned int v94 = objc_msgSend(v91, sel_unarchive_toLocation_, v92, v93);

  id v95 = objc_msgSend(v158, sel_defaultManager);
  sub_1C1515E0C();
  id v96 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  unsigned int v97 = objc_msgSend(v95, sel_fileExistsAtPath_, v96);

  if (!v94 || !v97)
  {
    BOOL v147 = sub_1C15198AC();
    os_log_type_t v148 = sub_1C151F36C();
    if (os_log_type_enabled(v147, v148))
    {
      uint64_t v149 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v149 = 0;
      _os_log_impl(&dword_1BFC31000, v147, v148, "Failed to decompress archive file", v149, 2u);
      MEMORY[0x1C18C9B00](v149, -1, -1);
    }
    uint64_t v150 = *(void *)(v0 + 2344);
    uint64_t v151 = *(void *)(v0 + 2312);
    uint64_t v152 = *(void *)(v0 + 2296);
    uint64_t v153 = *(void *)(v0 + 2280);
    uint64_t v154 = *(void *)(v0 + 2232);
    uint64_t v155 = *(void *)(v0 + 2224);

    sub_1C02474EC();
    *(void *)(v0 + 2544) = swift_allocError();
    *uint64_t v156 = 3;
    swift_willThrow();

    sub_1BFE95664(v179, v173);
    v175(v153, v154);
    v175(v152, v154);
    v175(v151, v154);
    sub_1BFF50FC4(v155, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    v175(v150, v154);
    unint64_t v36 = sub_1C023FB9C;
    uint64_t v37 = *(void *)(v0 + 2376);
    uint64_t v39 = v0 + 16;
    uint64_t v38 = v0 + 2128;
    goto LABEL_8;
  }
  uint64_t v98 = v91;
  unsigned int v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 2432);
  uint64_t v100 = *(void *)(v0 + 2320);
  uint64_t v101 = *(void *)(v0 + 2312);
  uint64_t v102 = *(void *)(v0 + 2296);
  uint64_t v103 = *(void *)(v0 + 2280);
  uint64_t v104 = *(void *)(v0 + 2232);

  v175(v103, v104);
  v175(v101, v104);
  v99(v100, v102, v104);
  uint64_t v44 = v175;
  id v3 = v169;
  uint64_t v1 = v0 + 16;
LABEL_14:
  unint64_t v174 = v8;
  *(void *)(v0 + 2552) = v44;
  char v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2472);
  uint64_t v57 = *(void *)(v0 + 2232);
  uint64_t v58 = *(void *)(v0 + 2120);
  sub_1C0236808(*(void *)(v0 + 2224), v58, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF2E4B8);
  if (v56(v58, 1, v57) == 1)
  {
    uint64_t v59 = *(void **)(v0 + 2392);
    sub_1BFF50FC4(*(void *)(v0 + 2120), (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    id v60 = objc_msgSend(v59, sel_dataResourceID);
    if (v60)
    {
      double v61 = v60;
      uint64_t v62 = *(void *)(v0 + 1880);
      uint64_t v63 = sub_1C151E62C();
      uint64_t v65 = v64;

      __swift_project_boxed_opaque_existential_1((void *)(v62 + 80), *(void *)(v62 + 104));
      *(void *)(v0 + 2560) = ResourceServiceType.fetchResource(identifier:)(v63, v65);
      swift_bridgeObjectRelease();
      uint64_t v66 = (void *)swift_task_alloc();
      *(void *)(v0 + 2568) = v66;
      void *v66 = v0;
      v66[1] = sub_1C02400A4;
      return MEMORY[0x1F415EBC8](v0 + 1592);
    }
    uint64_t v141 = *(void *)(v0 + 2344);
    uint64_t v142 = *(void *)(v0 + 2320);
    uint64_t v143 = *(void *)(v0 + 2232);
    uint64_t v144 = v3;
    uint64_t v145 = *(void *)(v0 + 2224);
    sub_1C02474EC();
    *(void *)(v0 + 2592) = swift_allocError();
    *uint64_t v146 = 2;
    swift_willThrow();
    sub_1BFE95664(v179, v8);

    v44(v142, v143);
    sub_1BFF50FC4(v145, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    v44(v141, v143);
    uint64_t v37 = *(void *)(v0 + 2376);
    uint64_t v39 = v1;
    uint64_t v40 = sub_1C0240860;
    uint64_t v38 = v0 + 1504;
  }
  else
  {
    id v178 = v44;
    uint64_t v123 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 2432);
    uint64_t v161 = *(void *)(v0 + 2344);
    uint64_t v166 = *(void *)(v0 + 2320);
    id v172 = *(id *)(v0 + 2392);
    id v124 = *(char **)(v0 + 2264);
    uint64_t v125 = v3;
    uint64_t v126 = *(void *)(v0 + 2232);
    uint64_t v127 = *(void *)(v0 + 2224);
    uint64_t v128 = *(void *)(v0 + 2120);
    uint64_t v129 = *(char **)(v0 + 1736);
    sub_1BFE95664(v179, v174);

    sub_1BFF50FC4(v127, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    v178(v161, v126);
    v123(v124, v128, v126);
    uint64_t v130 = type metadata accessor for PuzzleResource();
    v123(&v129[*(int *)(v130 + 20)], v166, v126);
    v123(&v129[*(int *)(v130 + 24)], (uint64_t)v124, v126);
    *(void *)uint64_t v129 = v172;
    swift_unknownObjectRetain();
    uint64_t v37 = *(void *)(v0 + 2376);
    uint64_t v39 = v1;
    uint64_t v40 = sub_1C023FE1C;
    uint64_t v38 = v0 + 1744;
  }
LABEL_39:
  return MEMORY[0x1F41881D0](v39, v37, v40, v38);
}

uint64_t sub_1C023FB9C()
{
  return MEMORY[0x1F4188298](sub_1C023FC28, 0, 0);
}

uint64_t sub_1C023FC28()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C023FE1C()
{
  return MEMORY[0x1F4188298](sub_1C023FEA8, 0, 0);
}

uint64_t sub_1C023FEA8()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C02400A4()
{
  *(void *)(*(void *)v1 + 2576) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1C0242404;
  }
  else {
    uint64_t v2 = sub_1C0240204;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C0240204()
{
  uint64_t v35 = (void *)v0[199];
  id v1 = objc_msgSend(v35, sel_fileURL);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[309];
    uint64_t v4 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[307];
    id v5 = (void (*)(uint64_t, uint64_t, uint64_t))v0[304];
    uint64_t v6 = v0[288];
    uint64_t v7 = v0[279];
    uint64_t v8 = v0[259];
    sub_1C1515F1C();

    v5(v8, v6, v7);
    v4(v8, 0, 1, v7);
    if (v3(v8, 1, v7) != 1)
    {
      uint64_t v9 = (void *)v0[315];
      uint64_t v10 = (void (*)(char *, uint64_t, uint64_t))v0[304];
      uint64_t v29 = v0[293];
      uint64_t v30 = (void (*)(uint64_t, uint64_t))v0[319];
      uint64_t v31 = v0[290];
      uint64_t v33 = v0[299];
      uint64_t v11 = (char *)v0[282];
      uint64_t v12 = v0[279];
      uint64_t v13 = v0[278];
      uint64_t v14 = v0[259];
      unint64_t v15 = (char *)v0[217];
      sub_1BFE95664(v0[316], v0[317]);

      sub_1BFF50FC4(v13, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      v30(v29, v12);
      v10(v11, v14, v12);
      uint64_t v16 = type metadata accessor for PuzzleResource();
      v10(&v15[*(int *)(v16 + 20)], v31, v12);
      v10(&v15[*(int *)(v16 + 24)], (uint64_t)v11, v12);
      *(void *)unint64_t v15 = v33;
      swift_unknownObjectRetain();
      uint64_t v17 = sub_1C0240554;
      uint64_t v18 = v0[297];
      uint64_t v19 = v0 + 212;
      goto LABEL_6;
    }
  }
  else
  {
    ((void (*)(void, uint64_t, uint64_t, void))v0[307])(v0[259], 1, 1, v0[279]);
  }
  uint64_t v20 = (void (*)(uint64_t, uint64_t))v0[319];
  unint64_t v21 = v0[317];
  uint64_t v22 = v0[316];
  uint64_t v23 = (void *)v0[315];
  uint64_t v24 = v0[290];
  uint64_t v25 = v0[279];
  uint64_t v32 = v0[278];
  uint64_t v34 = v0[293];
  uint64_t v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F276F0];
  sub_1BFF50FC4(v0[259], (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  sub_1C02474EC();
  v0[323] = swift_allocError();
  unsigned char *v27 = 4;
  swift_willThrow();
  sub_1BFE95664(v22, v21);

  v20(v24, v25);
  sub_1BFF50FC4(v32, (unint64_t *)&qword_1EB8948A0, v26);
  v20(v34, v25);
  uint64_t v17 = sub_1C02405E0;
  uint64_t v18 = v0[297];
  uint64_t v19 = v0 + 206;
LABEL_6:
  return MEMORY[0x1F41881D0](v0 + 2, v18, v17, v19);
}

uint64_t sub_1C0240554()
{
  return MEMORY[0x1F4188298](sub_1C024B73C, 0, 0);
}

uint64_t sub_1C02405E0()
{
  return MEMORY[0x1F4188298](sub_1C024066C, 0, 0);
}

uint64_t sub_1C024066C()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0240860()
{
  return MEMORY[0x1F4188298](sub_1C02408EC, 0, 0);
}

uint64_t sub_1C02408EC()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0240AE0()
{
  return MEMORY[0x1F4188298](sub_1C0240B6C, 0, 0);
}

uint64_t sub_1C0240B6C()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0240D60()
{
  uint64_t v1 = *(void *)(v0 + 2376);
  return MEMORY[0x1F41881D0](v0 + 16, v1, sub_1C0240DF0, v0 + 1296);
}

uint64_t sub_1C0240DF0()
{
  return MEMORY[0x1F4188298](sub_1C0240E7C, 0, 0);
}

uint64_t sub_1C0240E7C()
{
  swift_unknownObjectRelease();
  swift_release_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C024105C()
{
  uint64_t v1 = *(void *)(v0 + 2368);
  return MEMORY[0x1F41881D0](v0 + 656, v1, sub_1C02410EC, v0 + 1552);
}

uint64_t sub_1C02410EC()
{
  return MEMORY[0x1F4188298](sub_1C0241178, 0, 0);
}

uint64_t sub_1C0241178()
{
  uint64_t v1 = v0[293];
  uint64_t v2 = v0[279];
  uint64_t v3 = v0[278];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v0[280] + 8);
  v4(v0[292], v2);
  sub_1BFF50FC4(v3, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  v4(v1, v2);
  swift_release();
  uint64_t v5 = v0[297];
  return MEMORY[0x1F41881D0](v0 + 2, v5, sub_1C024128C, v0 + 176);
}

uint64_t sub_1C024128C()
{
  return MEMORY[0x1F4188298](sub_1C0241318, 0, 0);
}

uint64_t sub_1C0241318()
{
  swift_unknownObjectRelease();
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C0241504()
{
  return MEMORY[0x1F4188298](sub_1C0241590, 0, 0);
}

uint64_t sub_1C0241590()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0241784()
{
  return MEMORY[0x1F4188298](sub_1C0241810, 0, 0);
}

uint64_t sub_1C0241810()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0241A04()
{
  return MEMORY[0x1F4188298](sub_1C0241A90, 0, 0);
}

uint64_t sub_1C0241A90()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0241C84()
{
  return MEMORY[0x1F4188298](sub_1C0241D10, 0, 0);
}

uint64_t sub_1C0241D10()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0241F04()
{
  return MEMORY[0x1F4188298](sub_1C0241F90, 0, 0);
}

uint64_t sub_1C0241F90()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0242184()
{
  return MEMORY[0x1F4188298](sub_1C0242210, 0, 0);
}

uint64_t sub_1C0242210()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C0242404()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[319];
  uint64_t v2 = (void *)v0[315];
  uint64_t v3 = v0[293];
  uint64_t v4 = v0[290];
  uint64_t v5 = v0[279];
  uint64_t v6 = v0[278];
  sub_1BFE95664(v0[316], v0[317]);

  v1(v4, v5);
  sub_1BFF50FC4(v6, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  v1(v3, v5);
  uint64_t v7 = v0[297];
  return MEMORY[0x1F41881D0](v0 + 2, v7, sub_1C0242528, v0 + 200);
}

uint64_t sub_1C0242528()
{
  return MEMORY[0x1F4188298](sub_1C02425B4, 0, 0);
}

uint64_t sub_1C02425B4()
{
  uint64_t v1 = *(void *)(v0 + 2504);

  swift_unknownObjectRelease();
  swift_release_n();
  sub_1BFC3E5C0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C02427A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C0242864;
  return MEMORY[0x1F40E6618](a1, a3, 0);
}

uint64_t sub_1C0242864(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    sub_1C024762C();
    *(_DWORD *)(v4 + 40) = *(_DWORD *)(v8 + 48);
    return MEMORY[0x1F4188298](sub_1C024B6F8, 0, 0);
  }
}

uint64_t sub_1C02429C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C0242A7C;
  return MEMORY[0x1F40E6618](a1, a3, 0);
}

uint64_t sub_1C0242A7C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    sub_1C024762C();
    *(_DWORD *)(v4 + 40) = *(_DWORD *)(v8 + 48);
    return MEMORY[0x1F4188298](sub_1C0242BD8, 0, 0);
  }
}

uint64_t sub_1C0242BD8()
{
  *(void *)(*(void *)(v0 + 16) + *(int *)(v0 + 40)) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0242C00(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_1C15160AC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  switch(a3 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_1BFE95820(a2, a3);
      sub_1BFE95820(a2, a3);
      break;
    default:
      break;
  }
  swift_bridgeObjectRetain();
  sub_1C15160BC();
  sub_1BFE95664(a2, a3);
  sub_1BFDF8CDC(&qword_1EA1988C0, 255, MEMORY[0x1E4F27788]);
  unint64_t v10 = 0;
  while (1)
  {
    sub_1C151FE0C();
    if (v15[15]) {
      break;
    }
    unint64_t v11 = *(void *)(a1 + 16);
    if (v10 == v11)
    {
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      return 1;
    }
    if (v10 >= v11)
    {
      __break(1u);
      goto LABEL_16;
    }
    uint64_t v12 = a1 + v10++;
    if (v15[14] != *(unsigned __int8 *)(v12 + 32))
    {
      (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  unint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRelease();
  if (v13 == v10) {
    return 1;
  }
  if (v10 >= v13)
  {
LABEL_16:
    __break(1u);
    JUMPOUT(0x1C0242E40);
  }
  return 0;
}

uint64_t PuzzleService.prewarmPuzzleTypeResource(for:cachePolicy:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1C0242E74, 0, 0);
}

uint64_t sub_1C0242E74()
{
  unint64_t v1 = v0[3];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    uint64_t v2 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v3 = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    return MEMORY[0x1F415EBC8](v3);
  }
  uint64_t v4 = 0;
  unint64_t v5 = v1 & 0xC000000000000001;
  uint64_t v23 = v0[3] + 32;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (v5)
    {
      uint64_t v7 = (void *)MEMORY[0x1C18C7CB0](v4, v0[3]);
    }
    else
    {
      uint64_t v7 = *(void **)(v23 + 8 * v4);
      swift_unknownObjectRetain();
    }
    id v8 = objc_msgSend(v7, sel_engineResourceID, v23);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_1C151E62C();
      uint64_t v12 = v11;

      swift_unknownObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1BFEF9B68(0, v6[2] + 1, 1, v6);
      }
      unint64_t v14 = v6[2];
      unint64_t v13 = v6[3];
      if (v14 >= v13 >> 1) {
        uint64_t v6 = sub_1BFEF9B68((void *)(v13 > 1), v14 + 1, 1, v6);
      }
      _OWORD v6[2] = v14 + 1;
      unint64_t v15 = &v6[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
    }
    else
    {
      swift_unknownObjectRelease();
    }
    ++v4;
  }
  while (v2 != v4);
LABEL_18:
  uint64_t v16 = v0[4];
  uint64_t v17 = (void *)v0[5];
  swift_bridgeObjectRelease();
  uint64_t v18 = v17 + 10;
  uint64_t v19 = v17[13];
  uint64_t v20 = v17[14];
  __swift_project_boxed_opaque_existential_1(v18, v19);
  v0[6] = ResourceServiceType.fetchResources(identifiers:cachePolicy:)((uint64_t)v6, v16, v19, v20);
  swift_bridgeObjectRelease();
  unint64_t v21 = (void *)swift_task_alloc();
  v0[7] = v21;
  *unint64_t v21 = v0;
  v21[1] = sub_1C02430D0;
  uint64_t v3 = (uint64_t)(v0 + 2);
  return MEMORY[0x1F415EBC8](v3);
}

uint64_t sub_1C02430D0()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0243210;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1C02431F8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02431F8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C0243210()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t PuzzleService.thumbnailSmallUrl(for:)(uint64_t a1)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v1;
  return MEMORY[0x1F4188298](sub_1C0243294, 0, 0);
}

uint64_t sub_1C0243294()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[3].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[2], v0[2], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v2;
  sub_1BFE99D0C(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  *uint64_t v2 = v0;
  v2[1] = sub_1C02433BC;
  return MEMORY[0x1F4188160](&v0[1], 0, 0, 0xD000000000000017, 0x80000001C1608730, sub_1C0247950, v1, v3);
}

uint64_t sub_1C02433BC()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0239BAC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C02434D8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02434D8()
{
  return (*(uint64_t (**)(void, void))(v0 + 8))(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1C02434F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C024B2E4();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __n128 v10 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = *(void **)(a2 + 72);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7, v10);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = sub_1C024B438;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0A8ED08;
  aBlock[3] = &block_descriptor_182;
  unint64_t v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v11, sel_fetchThumbnailUrlForPuzzle_completionHandler_, a3, v14);
  _Block_release(v14);
}

uint64_t sub_1C02436A4(int a1, uint64_t a2, id a3)
{
  if (a3)
  {
    id v3 = a3;
LABEL_3:
    sub_1C024B2E4();
    return sub_1C151EDCC();
  }
  if (!a2)
  {
    sub_1C02474EC();
    swift_allocError();
    *uint64_t v5 = 2;
    goto LABEL_3;
  }
  sub_1C024B2E4();
  swift_bridgeObjectRetain();
  return sub_1C151EDDC();
}

uint64_t PuzzleService.thumbnailSmallJSON(for:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1C0243774, 0, 0);
}

uint64_t sub_1C0243774()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = sub_1BFC39268(0, &qword_1EB86C060);
  *uint64_t v2 = v0;
  v2[1] = sub_1C0243888;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000018, 0x80000001C1608750, sub_1C0247958, v1, v3);
}

uint64_t sub_1C0243888()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C02439A4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C0121EC4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02439A4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C0243A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C024B1BC();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __n128 v10 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = *(void **)(a2 + 72);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7, v10);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  aBlock[4] = sub_1C024B264;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C0243C70;
  aBlock[3] = &block_descriptor_11;
  unint64_t v14 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v11, sel_fetchThumbnailJSONForPuzzleType_completionHandler_, a3, v14);
  _Block_release(v14);
}

uint64_t sub_1C0243BB8(uint64_t a1, id a2)
{
  if (a2)
  {
    id v2 = a2;
LABEL_3:
    sub_1C024B1BC();
    return sub_1C151EDCC();
  }
  if (!a1)
  {
    sub_1C02474EC();
    swift_allocError();
    *uint64_t v4 = 2;
    goto LABEL_3;
  }
  sub_1C151E32C();
  sub_1C024B1BC();
  return sub_1C151EDDC();
}

uint64_t sub_1C0243C70(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = sub_1C151E33C();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t PuzzleService.prewarmPuzzleResource(for:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x1F4188298](sub_1C0243D3C, 0, 0);
}

uint64_t sub_1C0243D3C()
{
  unint64_t v1 = v0[3];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C15204BC();
    uint64_t v2 = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_17:
    id v6 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v3 = swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_17;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
    return MEMORY[0x1F415EBC8](v3);
  }
  uint64_t v4 = 0;
  unint64_t v5 = v1 & 0xC000000000000001;
  uint64_t v22 = v0[3] + 32;
  id v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    if (v5)
    {
      uint64_t v7 = (void *)MEMORY[0x1C18C7CB0](v4, v0[3]);
    }
    else
    {
      uint64_t v7 = *(void **)(v22 + 8 * v4);
      swift_unknownObjectRetain();
    }
    id v8 = objc_msgSend(v7, sel_dataResourceID, v22);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_1C151E62C();
      uint64_t v12 = v11;

      swift_unknownObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v6 = sub_1BFEF9B68(0, v6[2] + 1, 1, v6);
      }
      unint64_t v14 = v6[2];
      unint64_t v13 = v6[3];
      if (v14 >= v13 >> 1) {
        id v6 = sub_1BFEF9B68((void *)(v13 > 1), v14 + 1, 1, v6);
      }
      _OWORD v6[2] = v14 + 1;
      unint64_t v15 = &v6[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
    }
    else
    {
      swift_unknownObjectRelease();
    }
    ++v4;
  }
  while (v2 != v4);
LABEL_18:
  uint64_t v16 = (void *)v0[4];
  swift_bridgeObjectRelease();
  uint64_t v17 = v16 + 10;
  uint64_t v18 = v16[13];
  uint64_t v19 = v16[14];
  __swift_project_boxed_opaque_existential_1(v17, v18);
  v0[5] = ResourceServiceType.fetchResources(identifiers:)((uint64_t)v6, v18, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)swift_task_alloc();
  v0[6] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1C0243F90;
  uint64_t v3 = (uint64_t)(v0 + 2);
  return MEMORY[0x1F415EBC8](v3);
}

uint64_t sub_1C0243F90()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0121EE0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = sub_1C02431F8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t PuzzleService.latestPublishedPuzzleIDs(for:)(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  uint64_t v3 = sub_1C151661C();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  uint64_t v4 = sub_1C151631C();
  v2[27] = v4;
  v2[28] = *(void *)(v4 - 8);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C02442BC, 0, 0);
}

uint64_t sub_1C02442BC()
{
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  id v3 = objc_msgSend(objc_msgSend(*(id *)(v2 + 160), sel_appConfiguration), sel_puzzlesConfig);
  *(void *)(v0 + 280) = v3;
  swift_unknownObjectRelease();
  objc_msgSend(v3, sel_recentPuzzlesCacheLifetime);
  id v4 = objc_msgSend(v1, sel_identifier);
  uint64_t v5 = sub_1C151E62C();
  uint64_t v7 = v6;

  *(void *)(v0 + 288) = v5;
  *(void *)(v0 + 296) = v7;
  *(void *)(v0 + 304) = *(void *)(v2 + 168);
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 176);
  uint64_t v64 = v3;
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1BFEF2D8C(v5, v7);
    if (v10)
    {
      uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v11 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v12 = *(void *)(v0 + 128);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v13 = *(void *)(v12 + 184);
  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1BFEF2D8C(v5, v7);
    uint64_t v16 = *(void *)(v0 + 216);
    uint64_t v15 = *(void *)(v0 + 224);
    uint64_t v17 = *(void *)(v0 + 208);
    if (v18)
    {
      (*(void (**)(void, unint64_t, void))(v15 + 16))(*(void *)(v0 + 208), *(void *)(v13 + 56) + *(void *)(v15 + 72) * v14, *(void *)(v0 + 216));
      uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v19(v17, 0, 1, v16);
    }
    else
    {
      uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      v19(*(void *)(v0 + 208), 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 224) + 56);
    v19(*(void *)(v0 + 208), 1, 1, *(void *)(v0 + 216));
  }
  *(void *)(v0 + 312) = v19;
  uint64_t v21 = *(void *)(v0 + 216);
  uint64_t v20 = *(void *)(v0 + 224);
  uint64_t v22 = *(void *)(v0 + 208);
  swift_endAccess();
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  *(void *)(v0 + 320) = v23;
  *(void *)(v0 + 328) = (v20 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v23(v22, 1, v21) == 1)
  {
    uint64_t v24 = *(void *)(v0 + 208);
    sub_1C15161BC();
    sub_1BFF50FC4(v24, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 224) + 32))(*(void *)(v0 + 272), *(void *)(v0 + 208), *(void *)(v0 + 216));
  }
  sub_1C1517E8C();
  if (v11)
  {
    uint64_t v25 = *(void *)(v0 + 264);
    uint64_t v26 = *(void *)(v0 + 256);
    uint64_t v28 = *(void *)(v0 + 216);
    uint64_t v27 = *(void *)(v0 + 224);
    sub_1C151620C();
    sub_1C15162CC();
    char v29 = sub_1C151622C();
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v30(v26, v28);
    v30(v25, v28);
    if (v29)
    {
      v30(*(void *)(v0 + 272), *(void *)(v0 + 216));

      swift_bridgeObjectRelease();
      uint64_t v60 = v11;
LABEL_27:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v54 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v54(v60);
    }
    swift_bridgeObjectRelease();
  }
  id v31 = objc_msgSend(*(id *)(v0 + 120), sel_latestPuzzleIDs);
  if (!v31)
  {
    uint64_t v44 = *(void *)(v0 + 272);
    uint64_t v45 = *(void *)(v0 + 216);
    uint64_t v46 = *(void *)(v0 + 224);
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    uint64_t v60 = MEMORY[0x1E4FBC860];
    goto LABEL_27;
  }
  uint64_t v32 = v31;
  uint64_t v33 = *(void *)(v0 + 216);
  uint64_t v34 = *(void *)(v0 + 224);
  uint64_t v35 = *(void *)(v0 + 200);
  uint64_t v36 = sub_1C151EBCC();

  *(void *)(v0 + 112) = v36;
  *(void *)(v0 + 336) = (v34 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v19(v35, 1, 1, v33);
  sub_1C15165BC();
  uint64_t v37 = *(void **)(v0 + 112);
  if (!v37[2])
  {
    uint64_t v57 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 312);
    uint64_t v48 = *(void *)(v0 + 288);
    uint64_t v47 = *(void *)(v0 + 296);
    uint64_t v65 = *(void *)(v0 + 272);
    uint64_t v56 = *(void *)(v0 + 216);
    uint64_t v62 = *(void **)(v0 + 280);
    uint64_t v63 = *(void *)(v0 + 200);
    uint64_t v49 = *(void *)(v0 + 160);
    uint64_t v61 = *(void *)(v0 + 152);
    uint64_t v50 = *(void *)(v0 + 144);
    uint64_t v58 = *(void *)(v0 + 224);
    uint64_t v59 = *(void *)(v0 + 136);
    uint64_t v51 = *(void *)(v0 + 128);
    swift_bridgeObjectRelease();
    sub_1C1517E7C();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v52 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = *(void *)(v51 + 176);
    *(void *)(v51 + 176) = 0x8000000000000000;
    uint64_t v60 = v52;
    sub_1C1065D84(v52, v48, v47, isUniquelyReferenced_nonNull_native);
    *(void *)(v51 + 176) = v66;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1C15162CC();
    v57(v49, 0, 1, v56);
    swift_beginAccess();
    sub_1C02E7B1C(v49, v48, v47);
    swift_endAccess();
    sub_1C1517E8C();

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v61, v59);
    sub_1BFF50FC4(v63, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v65, v56);
    goto LABEL_27;
  }
  *(void *)(v0 + 344) = MEMORY[0x1E4FBC860];
  uint64_t v39 = v37[4];
  uint64_t v38 = v37[5];
  sub_1BFE99D0C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v40 = swift_allocObject();
  *(void *)(v0 + 352) = v40;
  *(_OWORD *)(v40 + 16) = xmmword_1C1529AE0;
  *(void *)(v40 + 32) = v39;
  *(void *)(v40 + 40) = v38;
  swift_bridgeObjectRetain();
  FCCurrentQoSOrUtilityIfMain();
  id v41 = (id)FCDispatchQueueForQualityOfService();
  *(void *)(v0 + 360) = v41;
  uint64_t v42 = swift_task_alloc();
  *(void *)(v0 + 368) = v42;
  *(void *)uint64_t v42 = v0;
  *(void *)(v42 + 8) = sub_1C0244A9C;
  uint64_t v43 = *(void **)(v0 + 128);
  *(void *)(v42 + 1624) = v43;
  *(void *)(v42 + 1576) = v41;
  *(unsigned char *)(v42 + 1784) = 0;
  *(void *)(v42 + 1528) = v40;
  *(void *)(v42 + 1672) = *v43;
  return MEMORY[0x1F4188298](sub_1BFCE2154, 0, 0);
}

uint64_t sub_1C0244A9C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 376) = a1;
  *(void *)(v3 + 384) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v4 = sub_1C02454D0;
  }
  else
  {

    swift_bridgeObjectRelease();
    id v4 = sub_1C0244BC0;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C0244BC0()
{
  unint64_t v4 = *(void *)(v1 + 376);
  if (!(v4 >> 62))
  {
    if (*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v63) {
    goto LABEL_27;
  }
LABEL_3:
  if ((v4 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = (void *)MEMORY[0x1C18C7CB0](0, *(void *)(v1 + 376));
  }
  else
  {
    if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_34:
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1BFEF9B68(0, v3[2] + 1, 1, v3);
      uint64_t v3 = (void *)isUniquelyReferenced_nonNull_native;
      goto LABEL_17;
    }
    uint64_t v5 = *(void **)(*(void *)(v1 + 376) + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v5, sel_publishDate);
  if (!v6)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v1 + 312))(*(void *)(v1 + 192), 1, 1, *(void *)(v1 + 216));
    goto LABEL_11;
  }
  uint64_t v7 = v6;
  unsigned int v80 = v5;
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 320);
  unint64_t v9 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 312);
  uint64_t v10 = *(void *)(v1 + 264);
  uint64_t v11 = *(void *)(v1 + 216);
  uint64_t v12 = *(void *)(v1 + 224);
  uint64_t v13 = *(void *)(v1 + 192);
  sub_1C15162BC();

  unint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
  v14(v13, v10, v11);
  v9(v13, 0, 1, v11);
  if (v8(v13, 1, v11) == 1)
  {
LABEL_11:
    uint64_t v26 = *(void *)(v1 + 192);
    swift_unknownObjectRelease();
    sub_1BFF50FC4(v26, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
LABEL_28:
    uint64_t v62 = *(void *)(v1 + 344);
    goto LABEL_29;
  }
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 320);
  uint64_t v16 = v14;
  uint64_t v18 = *(void *)(v1 + 240);
  uint64_t v17 = *(void *)(v1 + 248);
  uint64_t v19 = *(void *)(v1 + 216);
  uint64_t v20 = *(void *)(v1 + 224);
  uint64_t v21 = *(void *)(v1 + 200);
  uint64_t v22 = *(void *)(v1 + 176);
  v16(v17, *(void *)(v1 + 192), v19);
  sub_1BFF882CC(v21, v22, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, v17, v19);
  int v23 = v15(v22, 1, v19);
  uint64_t v24 = *(void *)(v1 + 240);
  if (v23 == 1)
  {
    uint64_t v25 = *(void *)(v1 + 176);
    v16(*(void *)(v1 + 184), v24, *(void *)(v1 + 216));
    sub_1BFF50FC4(v25, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  }
  else
  {
    uint64_t v27 = *(void *)(v1 + 216);
    uint64_t v29 = *(void *)(v1 + 176);
    uint64_t v28 = *(void *)(v1 + 184);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 + 224) + 8))(v24, v27);
    v16(v28, v29, v27);
  }
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 320);
  uint64_t v31 = *(void *)(v1 + 216);
  uint64_t v32 = *(void *)(v1 + 200);
  uint64_t v33 = *(void *)(v1 + 184);
  uint64_t v34 = *(void *)(v1 + 168);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 312))(v33, 0, 1, v31);
  uint64_t v35 = MEMORY[0x1E4F27928];
  sub_1BFF882CC(v33, v32, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  sub_1C0236808(v32, v34, (uint64_t)&qword_1EB871180, v35, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFF2E4B8);
  if (v30(v34, 1, v31) == 1)
  {
    uint64_t v36 = *(void *)(v1 + 168);
    (*(void (**)(void, void))(*(void *)(v1 + 224) + 8))(*(void *)(v1 + 248), *(void *)(v1 + 216));
    swift_unknownObjectRelease();
    sub_1BFF50FC4(v36, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
    goto LABEL_28;
  }
  v16(*(void *)(v1 + 232), *(void *)(v1 + 168), *(void *)(v1 + 216));
  if ((sub_1C15165AC() & 1) == 0)
  {
    uint64_t v57 = *(void *)(v1 + 248);
    uint64_t v58 = *(void *)(v1 + 224);
    uint64_t v59 = *(void *)(v1 + 232);
    uint64_t v60 = *(void *)(v1 + 216);
    swift_unknownObjectRelease();
    uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v61(v59, v60);
    v61(v57, v60);
    goto LABEL_28;
  }
  id v37 = objc_msgSend(v80, sel_identifier);
  uint64_t v2 = sub_1C151E62C();
  uint64_t v0 = v38;

  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v3 = *(void **)(v1 + 344);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_34;
  }
LABEL_17:
  unint64_t v43 = v3[2];
  unint64_t v42 = v3[3];
  if (v43 >= v42 >> 1)
  {
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1BFEF9B68((void *)(v42 > 1), v43 + 1, 1, v3);
    uint64_t v3 = (void *)isUniquelyReferenced_nonNull_native;
  }
  v3[2] = v43 + 1;
  uint64_t v44 = &v3[2 * v43];
  v44[4] = v2;
  v44[5] = v0;
  if (!*(void *)(*(void *)(v1 + 112) + 16))
  {
    __break(1u);
    return MEMORY[0x1F4188298](isUniquelyReferenced_nonNull_native, v40, v41);
  }
  uint64_t v45 = *(void *)(v1 + 248);
  uint64_t v46 = *(void *)(v1 + 224);
  uint64_t v47 = *(void *)(v1 + 232);
  uint64_t v48 = *(void *)(v1 + 216);
  swift_bridgeObjectRetain();
  sub_1C0247ACC(0, 1);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
  v49(v47, v48);
  v49(v45, v48);
  uint64_t v50 = *(void **)(v1 + 112);
  if (v50[2])
  {
    *(void *)(v1 + 344) = v3;
    uint64_t v52 = v50[4];
    uint64_t v51 = v50[5];
    sub_1BFE99D0C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v53 = swift_allocObject();
    *(void *)(v1 + 352) = v53;
    *(_OWORD *)(v53 + 16) = xmmword_1C1529AE0;
    *(void *)(v53 + 32) = v52;
    *(void *)(v53 + 40) = v51;
    swift_bridgeObjectRetain();
    FCCurrentQoSOrUtilityIfMain();
    id v54 = (id)FCDispatchQueueForQualityOfService();
    *(void *)(v1 + 360) = v54;
    uint64_t v55 = swift_task_alloc();
    *(void *)(v1 + 368) = v55;
    *(void *)uint64_t v55 = v1;
    *(void *)(v55 + 8) = sub_1C0244A9C;
    uint64_t v56 = *(void **)(v1 + 128);
    *(void *)(v55 + 1624) = v56;
    *(void *)(v55 + 1576) = v54;
    *(unsigned char *)(v55 + 1784) = 0;
    *(void *)(v55 + 1528) = v53;
    *(void *)(v55 + 1672) = *v56;
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1BFCE2154;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    return MEMORY[0x1F4188298](isUniquelyReferenced_nonNull_native, v40, v41);
  }
  uint64_t v62 = (uint64_t)v3;
LABEL_29:
  CGRect v73 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 312);
  uint64_t v64 = *(void *)(v1 + 296);
  uint64_t v78 = *(void *)(v1 + 224);
  uint64_t v79 = *(void *)(v1 + 272);
  uint64_t v71 = *(void *)(v1 + 288);
  uint64_t v72 = *(void *)(v1 + 216);
  unsigned int v76 = *(void **)(v1 + 280);
  uint64_t v77 = *(void *)(v1 + 200);
  uint64_t v65 = *(void *)(v1 + 160);
  uint64_t v66 = *(void *)(v1 + 144);
  uint64_t v74 = *(void *)(v1 + 136);
  uint64_t v75 = *(void *)(v1 + 152);
  uint64_t v67 = *(void *)(v1 + 128);
  swift_bridgeObjectRelease();
  sub_1C1517E7C();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v68 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v81 = *(void *)(v67 + 176);
  *(void *)(v67 + 176) = 0x8000000000000000;
  sub_1C1065D84(v62, v71, v64, v68);
  *(void *)(v67 + 176) = v81;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1C15162CC();
  v73(v65, 0, 1, v72);
  swift_beginAccess();
  sub_1C02E7B1C(v65, v71, v64);
  swift_endAccess();
  sub_1C1517E8C();

  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v75, v74);
  sub_1BFF50FC4(v77, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v79, v72);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v69 = *(uint64_t (**)(uint64_t))(v1 + 8);
  return v69(v62);
}

uint64_t sub_1C02454D0()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void **)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 224);
  uint64_t v9 = *(void *)(v0 + 200);
  uint64_t v10 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 144);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_1BFF50FC4(v9, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t PuzzleService.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t PuzzleService.__deallocating_deinit()
{
  PuzzleService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C0245744(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C005E7F4;
  v7[4] = a2;
  v7[5] = v6;
  v7[3] = a1;
  return MEMORY[0x1F4188298](sub_1C0242E74, 0, 0);
}

uint64_t sub_1C0245804(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1BFC542F4;
  v5[3] = a1;
  void v5[4] = v4;
  return MEMORY[0x1F4188298](sub_1C0243D3C, 0, 0);
}

uint64_t sub_1C02458B4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C005E7F4;
  return PuzzleService.puzzleResource(from:)(a1, a2);
}

uint64_t sub_1C0245960(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_1C024B6FC;
  _OWORD v7[2] = a1;
  return MEMORY[0x1F4188298](sub_1C0236BA4, 0, 0);
}

id sub_1C0245A1C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return PuzzleService.puzzle(for:puzzleType:puzzleMetadata:)(a1, a2, a3, a4);
}

uint64_t sub_1C0245A40(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x1F4188298](sub_1BFC7318C, 0, 0);
}

uint64_t sub_1C0245A64(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 56) = a2;
  uint64_t v4 = *v2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v4;
  return MEMORY[0x1F4188298](sub_1C02384D4, 0, 0);
}

uint64_t sub_1C0245A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C024B6FC;
  v7[4] = a2;
  v7[5] = v6;
  v7[3] = a1;
  return MEMORY[0x1F4188298](sub_1C02385F4, 0, 0);
}

uint64_t sub_1C0245B4C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *(void *)uint64_t v9 = v4;
  *(void *)(v9 + 8) = sub_1C024B6FC;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = v8;
  *(unsigned char *)(v9 + 80) = a2;
  *(void *)(v9 + 24) = a1;
  return MEMORY[0x1F4188298](sub_1C0238B64, 0, 0);
}

uint64_t sub_1C0245C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *v3;
  v4[5] = a3;
  v4[6] = v5;
  return MEMORY[0x1F4188298](sub_1C0238EC8, 0, 0);
}

uint64_t sub_1C0245C3C(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v8 = *v3;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *(void *)uint64_t v9 = v4;
  *(void *)(v9 + 8) = sub_1C024B6FC;
  *(void *)(v9 + 1624) = v8;
  *(void *)(v9 + 1576) = a3;
  *(unsigned char *)(v9 + 1784) = a2;
  *(void *)(v9 + 1528) = a1;
  *(void *)(v9 + 1672) = *v8;
  return MEMORY[0x1F4188298](sub_1BFCE2154, 0, 0);
}

uint64_t sub_1C0245D30(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(v5 + 80) = a2;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a3;
  uint64_t v6 = *v4;
  *(void *)(v5 + 40) = a4;
  *(void *)(v5 + 48) = v6;
  return MEMORY[0x1F4188298](sub_1C0245D5C, 0, 0);
}

uint64_t sub_1C0245D5C()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v1 = *(void *)(v0 + 48);
  char v3 = *(unsigned char *)(v0 + 80);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  long long v5 = *(_OWORD *)(v0 + 24);
  *(void *)(v4 + 16) = v1;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 40) = v2;
  *(unsigned char *)(v4 + 48) = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v6;
  sub_1BFCE25D8(0, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
  *uint64_t v6 = v0;
  v6[1] = sub_1C0238FF0;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000035, 0x80000001C1608680, sub_1C0247610, v4, v7);
}

uint64_t sub_1C0245E90(uint64_t a1)
{
  uint64_t v4 = *v1;
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *long long v5 = v2;
  v5[1] = sub_1C024B6FC;
  v5[3] = a1;
  void v5[4] = v4;
  return MEMORY[0x1F4188298](sub_1C0239608, 0, 0);
}

uint64_t sub_1C0245F40(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C024B6FC;
  v7[4] = a2;
  v7[5] = v6;
  v7[3] = a1;
  return MEMORY[0x1F4188298](sub_1C0239C34, 0, 0);
}

uint64_t sub_1C0246000(uint64_t a1, uint64_t a2)
{
  v3[3] = a1;
  v3[4] = a2;
  v3[5] = *v2;
  return MEMORY[0x1F4188298](sub_1C0246028, 0, 0);
}

uint64_t sub_1C0246028()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  long long v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  sub_1BFCE25D8(0, &qword_1EB86B340, (unint64_t *)&qword_1EB890220);
  *long long v5 = v0;
  v5[1] = sub_1C0246150;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD00000000000001DLL, 0x80000001C16086C0, sub_1C024B6F4, v4, v6);
}

uint64_t sub_1C0246150()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C0239BAC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C024B704;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C024626C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = *v3;
  v4[5] = a3;
  v4[6] = v5;
  return MEMORY[0x1F4188298](sub_1C0239DA8, 0, 0);
}

uint64_t sub_1C0246294(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return MEMORY[0x1F4188298](sub_1C02462B8, 0, 0);
}

uint64_t sub_1C02462B8()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = sub_1BFC39268(0, &qword_1EB86C060);
  *uint64_t v2 = v0;
  v2[1] = sub_1C02463CC;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD000000000000018, 0x80000001C1608750, sub_1C024B734, v1, v3);
}

uint64_t sub_1C02463CC()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C02439A4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C024B704;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C02464E8(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = v3;
  return MEMORY[0x1F4188298](sub_1C024650C, 0, 0);
}

uint64_t sub_1C024650C()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[3].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[2], v0[2], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v2;
  sub_1BFE99D0C(0, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  *uint64_t v2 = v0;
  v2[1] = sub_1C02433BC;
  return MEMORY[0x1F4188160](&v0[1], 0, 0, 0xD000000000000017, 0x80000001C1608730, sub_1C024B730, v1, v3);
}

uint64_t sub_1C0246634(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C0125AF8;
  return PuzzleService.latestPublishedPuzzleIDs(for:)(a1);
}

uint64_t sub_1C02466CC()
{
  return sub_1C02467A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFEF9B68);
}

uint64_t sub_1C02466E4()
{
  return sub_1C02467A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFED9EFC);
}

uint64_t sub_1C02466FC()
{
  return sub_1C02467A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0EE069C);
}

uint64_t sub_1C0246714()
{
  return sub_1C02467A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0EE0874);
}

uint64_t sub_1C024672C()
{
  return sub_1C02467A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0EE22CC);
}

uint64_t sub_1C0246744()
{
  return sub_1C02467A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0EE23FC);
}

uint64_t sub_1C024675C()
{
  return sub_1C02467A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0EE41A0);
}

uint64_t sub_1C0246774()
{
  return sub_1C02467A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0EE5C20);
}

uint64_t sub_1C024678C()
{
  return sub_1C02467A4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0EE872C);
}

uint64_t sub_1C02467A4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t *v1 = v3;
  if (!result)
  {
    uint64_t result = a1(result, *(void *)(v3 + 16) + 1, 1, v3);
    uint64_t *v1 = result;
  }
  return result;
}

uint64_t sub_1C0246800(uint64_t a1)
{
  return sub_1C0246938(a1, (uint64_t (*)(BOOL))sub_1BFEF9B68);
}

uint64_t sub_1C0246818(uint64_t a1)
{
  return sub_1C0246938(a1, (uint64_t (*)(BOOL))sub_1BFED9EFC);
}

uint64_t sub_1C0246830(uint64_t a1)
{
  return sub_1C0246938(a1, (uint64_t (*)(BOOL))sub_1C0EE069C);
}

uint64_t sub_1C0246848(uint64_t a1)
{
  return sub_1C0246938(a1, (uint64_t (*)(BOOL))sub_1C0EE0874);
}

uint64_t sub_1C0246860(uint64_t a1)
{
  return sub_1C0246938(a1, (uint64_t (*)(BOOL))sub_1C0EE22CC);
}

uint64_t sub_1C0246878(uint64_t a1)
{
  return sub_1C0246938(a1, (uint64_t (*)(BOOL))sub_1C0EE23FC);
}

uint64_t sub_1C0246890(uint64_t a1)
{
  return sub_1C0246938(a1, (uint64_t (*)(BOOL))sub_1C0EE41A0);
}

uint64_t sub_1C02468A8(uint64_t a1)
{
  return sub_1C0246938(a1, (uint64_t (*)(BOOL))sub_1BFE66EEC);
}

uint64_t sub_1C02468C4(uint64_t a1)
{
  return sub_1C0246938(a1, (uint64_t (*)(BOOL))sub_1C0EE5C20);
}

uint64_t sub_1C02468DC(uint64_t a1)
{
  return sub_1C0246938(a1, (uint64_t (*)(BOOL))sub_1BFE68B80);
}

uint64_t sub_1C02468F4(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return sub_1C151EC8C();
  }
  return result;
}

uint64_t sub_1C0246920(uint64_t a1)
{
  return sub_1C0246938(a1, (uint64_t (*)(BOOL))sub_1C0EE872C);
}

uint64_t sub_1C0246938(uint64_t result, uint64_t (*a2)(BOOL))
{
  unint64_t v3 = *(void *)(*(void *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    uint64_t result = a2(v3 > 1);
    *(void *)uint64_t v2 = result;
  }
  return result;
}

uint64_t sub_1C0246984(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

uint64_t sub_1C024699C(uint64_t a1, uint64_t a2)
{
  return sub_1C0246A60(a1, a2, type metadata accessor for FormatResource, type metadata accessor for FormatResource);
}

uint64_t sub_1C02469C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *v5;
  *(void *)(v6 + 16) = result + 1;
  uint64_t v7 = (void *)(v6 + 32 * result);
  v7[4] = a2;
  v7[5] = a3;
  v7[6] = a4;
  v7[7] = a5;
  return result;
}

uint64_t sub_1C02469E4(uint64_t result, int a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = result + 1;
  *(_DWORD *)(v3 + 4 * result + 32) = a2;
  return result;
}

uint64_t sub_1C02469FC(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = result + 1;
  *(void *)(v3 + 8 * result + 32) = a2;
  return result;
}

_OWORD *sub_1C0246A14(uint64_t a1, _OWORD *a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = a1 + 1;
  return sub_1BFF993A8(a2, (_OWORD *)(v3 + 32 * a1 + 32));
}

uint64_t sub_1C0246A34(uint64_t a1, uint64_t a2)
{
  return sub_1C0246A60(a1, a2, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile, (uint64_t (*)(void))type metadata accessor for DebugFormatCacheFile);
}

uint64_t sub_1C0246A60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v8 = *v4;
  *(void *)(v8 + 16) = a1 + 1;
  uint64_t v9 = *(void *)(a3(0) - 8);
  return sub_1C024A2DC(a2, v8+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * a1, a4);
}

char *sub_1C0246B08(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_1BFEF9B68(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    uint64_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      _OWORD v6[2] = v23;
LABEL_20:
      *uint64_t v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1C152052C();
  __break(1u);
  return result;
}

char *sub_1C0246C8C(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  int64_t v7 = *(void **)v5;
  int64_t v8 = *(void *)(*(void *)v5 + 16);
  if (v8 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v11 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v12 = v8 + v11;
  if (__OFADD__(v8, v11))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v12 > v7[3] >> 1)
  {
    if (v8 <= v12) {
      int64_t v16 = v8 + v11;
    }
    else {
      int64_t v16 = v8;
    }
    int64_t v7 = sub_1C0EE44DC(isUniquelyReferenced_nonNull_native, v16, 1, v7);
  }
  uint64_t v17 = v7 + 4;
  uint64_t v18 = &v7[3 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v11) {
    goto LABEL_20;
  }
  uint64_t v20 = v7[2];
  BOOL v21 = __OFSUB__(v20, a2);
  uint64_t v22 = v20 - a2;
  if (v21) {
    goto LABEL_26;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v18 + 3);
    uint64_t v23 = (char *)&v17[3 * a2];
    if (v18 + 3 != (void *)v23 || result >= &v23[24 * v22]) {
      uint64_t result = (char *)memmove(result, v23, 24 * v22);
    }
    uint64_t v24 = v7[2];
    BOOL v21 = __OFADD__(v24, v11);
    uint64_t v25 = v24 + v11;
    if (!v21)
    {
      _OWORD v7[2] = v25;
LABEL_20:
      *uint64_t v18 = a3;
      uint64_t v26 = &v17[3 * a1];
      v26[1] = a4;
      _OWORD v26[2] = a5;
      *(void *)uint64_t v5 = v7;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0246E30(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_1C0EE5C48(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *(void *)uint64_t v3 = v5;
  }
  uint64_t v14 = (uint64_t)&v5[5 * a1 + 4];
  sub_1BFE4D1E4(0, (unint64_t *)&qword_1EB8945F0, (unint64_t *)&qword_1EB8945E0);
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v15 = v5[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = (char *)(v14 + 40);
    BOOL v19 = (char *)&v5[5 * a2 + 4];
    if ((char *)(v14 + 40) != v19 || v18 >= &v19[40 * v17]) {
      memmove(v18, v19, 40 * v17);
    }
    uint64_t v20 = v5[2];
    BOOL v16 = __OFADD__(v20, v9);
    uint64_t v21 = v20 + v9;
    if (!v16)
    {
      void v5[2] = v21;
LABEL_20:
      sub_1C0236808(a3, v14, (uint64_t)&qword_1EB8945F0, (uint64_t)&qword_1EB8945E0, MEMORY[0x1E4FAC628], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFE4D1E4);
      return sub_1C0247540(a3, (uint64_t (*)(void))sub_1C024B14C);
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

char *sub_1C024702C(uint64_t a1, int64_t a2, _OWORD *a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    uint64_t v5 = sub_1C0EE6090(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  uint64_t v14 = &v5[6 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v9) {
    goto LABEL_20;
  }
  uint64_t v16 = v5[2];
  BOOL v17 = __OFSUB__(v16, a2);
  uint64_t v18 = v16 - a2;
  if (v17) {
    goto LABEL_26;
  }
  if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v14 + 3);
    BOOL v19 = (char *)&v5[6 * a2 + 4];
    size_t v20 = 48 * v18;
    if (v14 + 3 != (_OWORD *)v19 || result >= &v19[v20]) {
      uint64_t result = (char *)memmove(result, v19, v20);
    }
    uint64_t v21 = v5[2];
    BOOL v17 = __OFADD__(v21, v9);
    uint64_t v22 = v21 + v9;
    if (!v17)
    {
      void v5[2] = v22;
LABEL_20:
      long long v23 = a3[1];
      *uint64_t v14 = *a3;
      v14[1] = v23;
      *(_OWORD *)((char *)v14 + 25) = *(_OWORD *)((char *)a3 + 25);
      *(void *)uint64_t v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1C152052C();
  __break(1u);
  return result;
}

char *sub_1C02471C4(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v8 = *(void **)v6;
  int64_t v9 = *(void *)(*(void *)v6 + 16);
  if (v9 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13) {
      int64_t v17 = v9 + v12;
    }
    else {
      int64_t v17 = v9;
    }
    uint64_t v8 = sub_1C0EE63E0(isUniquelyReferenced_nonNull_native, v17, 1, v8);
  }
  uint64_t v18 = &v8[4 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v12) {
    goto LABEL_20;
  }
  uint64_t v20 = v8[2];
  BOOL v21 = __OFSUB__(v20, a2);
  uint64_t v22 = v20 - a2;
  if (v21) {
    goto LABEL_26;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v18 + 4);
    long long v23 = &v8[4 * a2 + 4];
    if (v18 + 4 != v23 || result >= (char *)&v23[4 * v22]) {
      uint64_t result = (char *)memmove(result, v23, 32 * v22);
    }
    uint64_t v24 = v8[2];
    BOOL v21 = __OFADD__(v24, v12);
    uint64_t v25 = v24 + v12;
    if (!v21)
    {
      v8[2] = v25;
LABEL_20:
      *uint64_t v18 = a3;
      v18[1] = a4;
      void v18[2] = a5;
      v18[3] = a6;
      *(void *)uint64_t v6 = v8;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1C152052C();
  __break(1u);
  return result;
}

char *sub_1C0247358(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v8 = *(void **)v6;
  int64_t v9 = *(void *)(*(void *)v6 + 16);
  if (v9 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13) {
      int64_t v17 = v9 + v12;
    }
    else {
      int64_t v17 = v9;
    }
    uint64_t v8 = sub_1C0EE2410(isUniquelyReferenced_nonNull_native, v17, 1, v8);
  }
  uint64_t v18 = &v8[4 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v12) {
    goto LABEL_20;
  }
  uint64_t v20 = v8[2];
  BOOL v21 = __OFSUB__(v20, a2);
  uint64_t v22 = v20 - a2;
  if (v21) {
    goto LABEL_26;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v18 + 4);
    long long v23 = &v8[4 * a2 + 4];
    if (v18 + 4 != v23 || result >= (char *)&v23[4 * v22]) {
      uint64_t result = (char *)memmove(result, v23, 32 * v22);
    }
    uint64_t v24 = v8[2];
    BOOL v21 = __OFADD__(v24, v12);
    uint64_t v25 = v24 + v12;
    if (!v21)
    {
      v8[2] = v25;
LABEL_20:
      *uint64_t v18 = a3;
      v18[1] = a4;
      void v18[2] = a5;
      v18[3] = a6;
      *(void *)uint64_t v6 = v8;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)sub_1C152052C();
  __break(1u);
  return result;
}

unint64_t sub_1C02474EC()
{
  unint64_t result = qword_1EA198608;
  if (!qword_1EA198608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198608);
  }
  return result;
}

uint64_t sub_1C0247540(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C02475A0()
{
  unint64_t result = qword_1EA19BF40;
  if (!qword_1EA19BF40)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA19BF40);
  }
  return result;
}

void sub_1C0247614(uint64_t a1)
{
  sub_1C0239EDC(a1, v1[2], v1[3], v1[4]);
}

void sub_1C0247620(uint64_t a1)
{
  sub_1C023A124(a1, v1[2], v1[3], v1[4], v1[5]);
}

void sub_1C024762C()
{
  if (!qword_1EA1986B8)
  {
    sub_1C1515FDC();
    sub_1BFC39268(255, &qword_1EA1986C0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1986B8);
    }
  }
}

uint64_t sub_1C02476B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1C1515FDC() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *int64_t v7 = v2;
  v7[1] = sub_1C005E7F4;
  return sub_1C02427A8(a1, v5, v6);
}

uint64_t objectdestroy_57Tm()
{
  uint64_t v1 = sub_1C1515FDC();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C0247868(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1C1515FDC() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *int64_t v7 = v2;
  v7[1] = sub_1BFC542F4;
  return sub_1C02429C0(a1, v5, v6);
}

void sub_1C0247950(uint64_t a1)
{
  sub_1C02434F4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C0247958(uint64_t a1)
{
  sub_1C0243A08(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C0247960(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1C0EDFFB0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[a2 + 4];
    if (a1 != a2 || &v4[a1 + 4] >= (void *)&v16[8 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[a1 + 4], v16, 8 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0247ACC(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1BFEF9B68(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (void *)&v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

unint64_t sub_1C0247C3C()
{
  unint64_t result = qword_1EA198728;
  if (!qword_1EA198728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198728);
  }
  return result;
}

uint64_t dispatch thunk of PuzzleServiceType.prewarmPuzzleTypeResource(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *int64_t v9 = v4;
  v9[1] = sub_1C005E7F4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.prewarmPuzzleResource(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C005E7F4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzleResource(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 24) + **(int **)(a4 + 24));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *int64_t v9 = v4;
  v9[1] = sub_1C005E7F4;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzle(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *int64_t v9 = v4;
  v9[1] = sub_1C024B738;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzle(for:puzzleType:puzzleMetadata:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 48) + **(int **)(a3 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C024B738;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:excludeDrafts:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 56) + **(int **)(a4 + 56));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *int64_t v9 = v4;
  v9[1] = sub_1C024B738;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 64) + **(int **)(a4 + 64));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *int64_t v9 = v4;
  v9[1] = sub_1C024B738;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:excludeDrafts:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 72) + **(int **)(a5 + 72));
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *int64_t v11 = v5;
  v11[1] = sub_1C024B738;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:cachePolicy:callbackQueue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 80) + **(int **)(a5 + 80));
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *int64_t v11 = v5;
  v11[1] = sub_1C024B738;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:excludeDrafts:callbackQueue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 88) + **(int **)(a5 + 88));
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *int64_t v11 = v5;
  v11[1] = sub_1C024B738;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzles(for:excludeDrafts:cachePolicy:callbackQueue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 96)
                                                                                     + **(int **)(a6 + 96));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_1C024B738;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzleTypes(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 104) + **(int **)(a3 + 104));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C024B738;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzleTypes(for:qos:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 112) + **(int **)(a4 + 112));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *int64_t v9 = v4;
  v9[1] = sub_1C024B738;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzleTypes(for:cachePolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 120) + **(int **)(a4 + 120));
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *int64_t v9 = v4;
  v9[1] = sub_1C024B738;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of PuzzleServiceType.puzzleTypes(for:cachePolicy:qos:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 128)
                                                                            + **(int **)(a5 + 128));
  int64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *int64_t v11 = v5;
  v11[1] = sub_1C024B738;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of PuzzleServiceType.thumbnailSmallJSON(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 136) + **(int **)(a3 + 136));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C024B738;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of PuzzleServiceType.thumbnailSmallUrl(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 144) + **(int **)(a3 + 144));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C0248EA4;
  return v9(a1, a2, a3);
}

uint64_t sub_1C0248EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of PuzzleServiceType.latestPublishedPuzzleIDs(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 152) + **(int **)(a3 + 152));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C014AF5C;
  return v9(a1, a2, a3);
}

uint64_t *initializeBufferWithCopyOfBuffer for PuzzleResourceSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      sub_1C023675C();
      uint64_t v10 = v9;
      uint64_t v11 = *(int *)(v9 + 48);
      uint64_t v22 = (char *)a1 + v11;
      uint64_t v12 = (char *)a2 + v11;
      uint64_t v13 = sub_1C1515FDC();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      swift_bridgeObjectRetain();
      v15(v22, v12, v13);
      uint64_t v16 = *(int *)(v10 + 64);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v18, 1, v13))
      {
        sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        v15(v17, v18, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PuzzleResourceSource(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      swift_bridgeObjectRelease();
      sub_1C023675C();
      uint64_t v4 = v3;
      uint64_t v5 = a1 + *(int *)(v3 + 48);
      uint64_t v6 = sub_1C1515FDC();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v9(v5, v6);
      uint64_t v8 = a1 + *(int *)(v4 + 64);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6);
      if (!result)
      {
        return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v6);
      }
      break;
    case 1:
      return swift_unknownObjectRelease();
    case 0:
      return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for PuzzleResourceSource(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    sub_1C023675C();
    uint64_t v7 = v6;
    uint64_t v8 = *(int *)(v6 + 48);
    uint64_t v18 = (char *)a2 + v8;
    uint64_t v19 = (char *)a1 + v8;
    uint64_t v9 = sub_1C1515FDC();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    v11(v19, v18, v9);
    uint64_t v12 = *(int *)(v7 + 64);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
    {
      sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      v11(v13, v14, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v16 = a2[1];
    *a1 = *a2;
    a1[1] = v16;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for PuzzleResourceSource(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C0247540((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1C023675C();
      uint64_t v6 = v5;
      uint64_t v7 = *(int *)(v5 + 48);
      uint64_t v16 = (char *)a2 + v7;
      uint64_t v17 = (char *)a1 + v7;
      uint64_t v8 = sub_1C1515FDC();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      v10(v17, v16, v8);
      uint64_t v11 = *(int *)(v6 + 64);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
      {
        sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v10(v12, v13, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      }
    }
    else
    {
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        swift_unknownObjectRetain();
      }
      else
      {
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PuzzleResourceSource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    sub_1C023675C();
    uint64_t v7 = v6;
    uint64_t v8 = *(int *)(v6 + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v13(v9, v10, v11);
    uint64_t v14 = *(int *)(v7 + 64);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    {
      sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for PuzzleResourceSource(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C0247540((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for PuzzleResourceSource);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      sub_1C023675C();
      uint64_t v7 = v6;
      uint64_t v8 = *(int *)(v6 + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C1515FDC();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v13(v9, v10, v11);
      uint64_t v14 = *(int *)(v7 + 64);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
      {
        sub_1BFF2E4B8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        v13(v15, v16, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1C0249C4C()
{
  uint64_t v3 = &unk_1C15354E8;
  uint64_t v4 = &unk_1C1535500;
  sub_1C1515FDC();
  if (v0 <= 0x3F)
  {
    sub_1BFF2E4B8(319, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      uint64_t v5 = &v2;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for PuzzleServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0249E34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleServiceError()
{
  return &type metadata for PuzzleServiceError;
}

uint64_t method lookup function for PuzzleService(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PuzzleService);
}

uint64_t sub_1C0249E84(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1C0249EE0()
{
  unint64_t result = qword_1EB85EA68;
  if (!qword_1EB85EA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85EA68);
  }
  return result;
}

uint64_t sub_1C0249F34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[9]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 6));
  }
  if (v0[14]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 11));
  }
  if (v0[19]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 16));
  }
  return swift_deallocObject();
}

uint64_t sub_1C0249FA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0249FF8()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 144) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_1C024A070(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1C024A0CC()
{
  unint64_t result = qword_1EA198860;
  if (!qword_1EA198860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198860);
  }
  return result;
}

uint64_t sub_1C024A120()
{
  int v1 = *(unsigned __int8 *)(v0 + 297);
  if (v1 == 2)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 104) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 136)) {
        __swift_destroy_boxed_opaque_existential_1(v0 + 112);
      }
    }
  }
  else
  {
    if (v1 != 1)
    {
      if (*(unsigned char *)(v0 + 297)) {
        goto LABEL_20;
      }

      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 96) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v0 + 144) < 0x11uLL) {
        goto LABEL_20;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }

    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 96) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(void *)(v0 + 144) >= 0x11uLL) {
      swift_bridgeObjectRelease();
    }
    char v2 = *(void **)(v0 + 160);
    if (v2)
    {

      swift_bridgeObjectRelease();
      if (*(void *)(v0 + 240) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v0 + 288) >= 0x11uLL) {
        goto LABEL_19;
      }
    }
  }
LABEL_20:
  return swift_deallocObject();
}

uint64_t sub_1C024A288(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C024A2DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C024A344(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unsigned int v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unsigned int v4 = sub_1C0EE3270(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[7 * a2 + 4];
    if (a1 != a2 || &v4[7 * a1 + 4] >= (void *)&v16[56 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[7 * a1 + 4], v16, 56 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C024A4BC(uint64_t a1, uint64_t a2)
{
  return sub_1C024A6FC(a1, a2, (void (*)(void))type metadata accessor for WeakSharedItemManagerObserver);
}

unint64_t sub_1C024A4D4(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = v9 - v8;
  if (__OFSUB__(v9, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v11 = v6 + v10;
  if (__OFADD__(v6, v10))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v26 = v9 - v8;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v11) {
      int64_t v13 = v11;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_1BFEDB2CC(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  uint64_t v14 = *(void *)(type metadata accessor for FormatContentSubgroup() - 8);
  unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = *(void *)(v14 + 72);
  unint64_t v17 = v5 + v15 + v16 * a1;
  unint64_t result = swift_arrayDestroy();
  if (!v26) {
    goto LABEL_25;
  }
  uint64_t v19 = *(void *)(v5 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_33;
  }
  if (v20 < 0)
  {
LABEL_35:
    unint64_t result = sub_1C152052C();
    __break(1u);
    return result;
  }
  unint64_t result = v17 + v16 * v9;
  unint64_t v21 = v5 + v15 + v16 * a2;
  if (result < v21 || result >= v21 + v20 * v16)
  {
    unint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (result != v21)
  {
    unint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v26);
  uint64_t v25 = v23 + v26;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v9) {
    unint64_t result = swift_arrayInitWithCopy();
  }
  unint64_t *v3 = v5;
  return result;
}

uint64_t sub_1C024A6E4(uint64_t a1, uint64_t a2)
{
  return sub_1C024A6FC(a1, a2, (void (*)(void))type metadata accessor for LiveActivityWebEmbedDatastoreManagerObserverProxy);
}

uint64_t sub_1C024A6FC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    int64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    unint64_t v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (v21 < v3) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v9 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v8 = v5 - v3;
  if (__OFSUB__(0, v9))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10 + v8;
    if (!__OFADD__(v10, v8)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_36;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 - v9;
  if (__OFADD__(v10, v8)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v7 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *unsigned int v4 = v7;
  uint64_t v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v10 = 1;
  }
  if (v7 >> 62) {
    goto LABEL_39;
  }
  uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11) {
    uint64_t v14 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = MEMORY[0x1C18C7CC0](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *unsigned int v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v6(0);
  swift_arrayDestroy();
  if (v8)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v3;
      if (!__OFSUB__(v22, v3))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_1C152052C();
          __break(1u);
          return result;
        }
        unint64_t v17 = (const void *)(v13 + 32 + 8 * v3);
        if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v17 + 8 * v16) {
          memmove((void *)(v13 + 32 + 8 * v5), v17, 8 * v16);
        }
        if (!(v7 >> 62))
        {
          uint64_t v18 = *(void *)(v13 + 16);
          uint64_t v19 = v18 + v8;
          if (!__OFADD__(v18, v8))
          {
LABEL_27:
            *(void *)(v13 + 16) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_1C15204BC();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v8;
        if (!__OFADD__(v23, v8)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v3;
      if (!__OFSUB__(v15, v3)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:
  return sub_1C151EBEC();
}

void sub_1C024A9E4()
{
  if (!qword_1EA1A8810)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A8810);
    }
  }
}

void sub_1C024AA50()
{
  if (!qword_1EA198880)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA198880);
    }
  }
}

void sub_1C024AAB8()
{
  if (!qword_1EA1A8820)
  {
    sub_1BFF2E4B8(255, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1A8820);
    }
  }
}

void sub_1C024AB54()
{
  if (!qword_1EA19C6B0)
  {
    sub_1BFF2E4B8(255, (unint64_t *)&unk_1EB879D90, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA19C6B0);
    }
  }
}

void sub_1C024ABEC()
{
  if (!qword_1EA198890)
  {
    sub_1BFEBC4B4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA198890);
    }
  }
}

void sub_1C024AC58()
{
  if (!qword_1EA1988A0)
  {
    sub_1BFEBC4B4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA1988A0);
    }
  }
}

uint64_t sub_1C024ACC0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C024AD08()
{
  unint64_t result = qword_1EA19C8F0;
  if (!qword_1EA19C8F0)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB880D40);
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA19C8F0);
  }
  return result;
}

uint64_t sub_1C024AD78(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_1BFE4D1E4(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C024ADE8()
{
  unint64_t result = qword_1EB87D5E8;
  if (!qword_1EB87D5E8)
  {
    sub_1BFF1D9F4(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87D5E8);
  }
  return result;
}

uint64_t sub_1C024AE50(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(void))
{
  sub_1BFFF5978(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1C024AEC0()
{
  unint64_t result = qword_1EB8741A0;
  if (!qword_1EB8741A0)
  {
    sub_1BFFF5978(255, (unint64_t *)&qword_1EB8741B0, (void (*)(void))sub_1C00F6B74);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8741A0);
  }
  return result;
}

uint64_t sub_1C024AF4C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  sub_1BFFF5978(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C024AFA8()
{
  unint64_t result = qword_1EB8741C8;
  if (!qword_1EB8741C8)
  {
    sub_1BFFF5978(255, (unint64_t *)&qword_1EB8741D0, (void (*)(void))sub_1C00F6CB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8741C8);
  }
  return result;
}

unint64_t sub_1C024B034()
{
  unint64_t result = qword_1EB8741F0;
  if (!qword_1EB8741F0)
  {
    sub_1BFFF5978(255, (unint64_t *)&qword_1EB874200, (void (*)(void))sub_1C00F6D64);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8741F0);
  }
  return result;
}

unint64_t sub_1C024B0C0()
{
  unint64_t result = qword_1EB874218;
  if (!qword_1EB874218)
  {
    sub_1BFFF5978(255, (unint64_t *)&qword_1EB874220, (void (*)(void))sub_1C00F6C5C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874218);
  }
  return result;
}

void sub_1C024B14C()
{
  if (!qword_1EA1988B0)
  {
    sub_1BFE4D1E4(255, (unint64_t *)&qword_1EB8945F0, (unint64_t *)&qword_1EB8945E0);
    unint64_t v0 = sub_1C152024C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA1988B0);
    }
  }
}

void sub_1C024B1BC()
{
  if (!qword_1EB86DE28)
  {
    sub_1BFC39268(255, &qword_1EB86C060);
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB87A930);
    unint64_t v0 = sub_1C151EDEC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DE28);
    }
  }
}

uint64_t sub_1C024B24C()
{
  return objectdestroy_175Tm((uint64_t (*)(void))sub_1C024B1BC);
}

uint64_t sub_1C024B264(uint64_t a1, void *a2)
{
  sub_1C024B1BC();
  return sub_1C0243BB8(a1, a2);
}

void sub_1C024B2E4()
{
  if (!qword_1EB86DE18)
  {
    sub_1BFE99D0C(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB87A930);
    unint64_t v0 = sub_1C151EDEC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86DE18);
    }
  }
}

uint64_t sub_1C024B388()
{
  return objectdestroy_175Tm((uint64_t (*)(void))sub_1C024B2E4);
}

uint64_t objectdestroy_175Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_1C024B438(int a1, uint64_t a2, void *a3)
{
  sub_1C024B2E4();
  return sub_1C02436A4(a1, a2, a3);
}

uint64_t objectdestroy_194Tm()
{
  sub_1BFF0A4E0(0, (unint64_t *)&unk_1EB86B388, &qword_1EB86B340, (unint64_t *)&qword_1EB890220);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1C024B578(uint64_t a1, void *a2)
{
  return sub_1C023A354(a1, a2);
}

uint64_t sub_1C024B610()
{
  sub_1BFF0A4E0(0, qword_1EB86B370, (unint64_t *)&unk_1EB86B300, (unint64_t *)&qword_1EB8901B0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C024B6D4(uint64_t a1)
{
  sub_1BFD42E74(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
}

uint64_t sub_1C024B73C()
{
  return sub_1C023FEA8();
}

uint64_t FeedRefreshEvent.fromState.getter(char a1)
{
  return sub_1C00B96EC((uint64_t)*(&off_1E6415EE8 + a1));
}

uint64_t FeedRefreshEvent.toState.getter(char a1)
{
  return 0x30202u >> (8 * a1);
}

BOOL static FeedRefreshEvent.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1C024B7F4()
{
  return FeedRefreshEvent.fromState.getter(*v0);
}

void sub_1C024B7FC(unsigned char *a1@<X8>)
{
  *a1 = 0x30202u >> (8 * *v1);
}

unint64_t sub_1C024B81C()
{
  unint64_t result = qword_1EA1988C8;
  if (!qword_1EA1988C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1988C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedRefreshState()
{
  return &type metadata for FeedRefreshState;
}

ValueMetadata *type metadata accessor for FeedRefreshEvent()
{
  return &type metadata for FeedRefreshEvent;
}

uint64_t FeedCursorManifest.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + qword_1EB93C2C8;
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FeedCursorManifest.groupEntries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursorManifest.groupEntriesMap.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedCursorManifest.consumedGroupIdentifiers(excludingCursorIdentifier:)()
{
  type metadata accessor for FeedCursorManifestGroupEntry();
  sub_1C151ED5C();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v0 = sub_1C151E97C();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1BFEF4060(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C024BA54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = *(void *)(a2 + qword_1EB93C2D8);
  uint64_t v10 = *(void *)(*a1 + 24);
  v16[0] = *(void *)(*a1 + 16);
  v16[1] = v10;
  type metadata accessor for FeedCursorManifestGroupEntry();
  uint64_t v11 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  MEMORY[0x1C18C5F70](&v17, v16, v9, MEMORY[0x1E4FBB1A0], v11, MEMORY[0x1E4FBB1B0]);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_7;
  }
  v16[0] = v17;
  MEMORY[0x1F4188790](result);
  swift_getWitnessTable();
  uint64_t v13 = sub_1C151E9FC();
  swift_bridgeObjectRelease();
  uint64_t v17 = v13;
  swift_getWitnessTable();
  sub_1C151F12C();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v16[0]) {
    goto LABEL_7;
  }
  if (*(void *)(v16[0] + 32) == a3 && *(void *)(v16[0] + 40) == a4 || (sub_1C1520A9C() & 1) != 0)
  {
    uint64_t result = swift_release();
LABEL_7:
    *a5 = 0;
    a5[1] = 0;
    return result;
  }
  swift_retain();
  sub_1C1519A4C();
  if (v5)
  {

    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t result = swift_release();
    if ((v16[0] & 0xFE) != 2) {
      goto LABEL_7;
    }
  }
  uint64_t v14 = *(void *)(v8 + 24);
  *a5 = *(void *)(v8 + 16);
  a5[1] = v14;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C024BCD0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C024BA54(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t FeedCursorManifest.deinit()
{
  uint64_t v1 = v0 + qword_1EB93C2C8;
  uint64_t v2 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedCursorManifest.__deallocating_deinit()
{
  return sub_1C024C1CC((void (*)(void))FeedCursorManifest.deinit);
}

uint64_t FeedCursorManifestGroupEntry.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCursorManifestGroupEntry.cursorIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCursorManifestGroupEntry.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 112);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v5(a1, v3, AssociatedTypeWitness);
}

uint64_t FeedCursorManifestGroupEntry.createdDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 120);
  uint64_t v4 = sub_1C151631C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t FeedCursorManifestGroupEntry.repoolingLoader.getter()
{
  return swift_retain();
}

uint64_t FeedCursorManifestGroupEntry.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 120);
  uint64_t v4 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  return v0;
}

uint64_t FeedCursorManifestGroupEntry.__deallocating_deinit()
{
  return sub_1C024C1CC((void (*)(void))FeedCursorManifestGroupEntry.deinit);
}

uint64_t sub_1C024C1CC(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedCursorManifest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedCursorManifest);
}

uint64_t method lookup function for FeedCursorManifestGroupEntry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedCursorManifestGroupEntry);
}

uint64_t sub_1C024C258()
{
  return sub_1C151622C() & 1;
}

uint64_t sub_1C024C2BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v6 = MEMORY[0x1E4FBC860];
    uint64_t v4 = sub_1C152028C();
    uint64_t v5 = a1 + 32;
    do
    {
      v5 += 8;
      FormatColor.color.getter(v4);
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      uint64_t v4 = sub_1C152026C();
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_1C024C374@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C151B0DC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00F5BA4(v3, (uint64_t)v40);
  sub_1C00F5BA4((uint64_t)v40, (uint64_t)v41);
  int v10 = sub_1C00F5C00((uint64_t)v41);
  if (v10)
  {
    if (v10 == 1)
    {
      uint64_t v11 = sub_1C00F5EAC((uint64_t)v41);
      sub_1BFCF2D74(v11, (uint64_t)v38);
      sub_1C00F5BA4((uint64_t)v40, (uint64_t)v39);
      uint64_t v12 = sub_1C00F5EAC((uint64_t)v39);
      sub_1C00F5EBC(v12);
      sub_1C0A6FB40(a1, (uint64_t)a2);
      sub_1C00F5E3C((uint64_t)v40, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      uint64_t v13 = (unsigned int *)MEMORY[0x1E4FAD030];
    }
    else
    {
      uint64_t v22 = sub_1C00F5EAC((uint64_t)v41);
      uint64_t v23 = *(void *)v22;
      if (*(unsigned char *)(v22 + 8) == 1)
      {
        switch(v23)
        {
          case 1:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACD08];
            break;
          case 2:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACD10];
            break;
          case 3:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCA0];
            break;
          case 4:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCA8];
            break;
          case 5:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCD0];
            break;
          case 6:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCD8];
            break;
          case 7:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCE8];
            break;
          case 8:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCB8];
            break;
          case 9:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCF0];
            break;
          case 10:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCC0];
            break;
          case 11:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCC8];
            break;
          case 12:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCF8];
            break;
          case 13:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCE0];
            break;
          case 14:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACD00];
            break;
          case 15:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACD20];
            break;
          default:
            BOOL v24 = (unsigned int *)MEMORY[0x1E4FACD18];
            break;
        }
      }
      else
      {
        *a2 = v23;
        BOOL v24 = (unsigned int *)MEMORY[0x1E4FACCB0];
      }
      uint64_t v32 = *v24;
      uint64_t v33 = sub_1C151BD2C();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(a2, v32, v33);
      uint64_t v13 = (unsigned int *)MEMORY[0x1E4FAD020];
    }
  }
  else
  {
    uint64_t v14 = sub_1C00F5EAC((uint64_t)v41);
    sub_1C00F61EC(v14, (uint64_t)v38);
    sub_1C00F6034((uint64_t)v38, (uint64_t)v39);
    int v15 = sub_1C00F6090((uint64_t)v39);
    uint64_t v16 = sub_1C00F609C((uint64_t)v39);
    if (v15 == 1)
    {
      long long v17 = *(_OWORD *)(v16 + 80);
      v37[6] = *(_OWORD *)(v16 + 64);
      _OWORD v37[7] = v17;
      long long v18 = *(_OWORD *)(v16 + 112);
      v37[8] = *(_OWORD *)(v16 + 96);
      v37[9] = v18;
      long long v19 = *(_OWORD *)(v16 + 16);
      v37[2] = *(_OWORD *)v16;
      v37[3] = v19;
      long long v20 = *(_OWORD *)(v16 + 48);
      v37[4] = *(_OWORD *)(v16 + 32);
      v37[5] = v20;
      sub_1C00F5E3C((uint64_t)v40, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C0CC330C((uint64_t)a2);
      uint64_t v21 = (unsigned int *)MEMORY[0x1E4FAD7D0];
    }
    else
    {
      v37[0] = *(_OWORD *)(v16 + 16);
      uint64_t v25 = *(void *)(v16 + 32);
      uint64_t v26 = *(void *)(v16 + 40);
      sub_1C00F5E3C((uint64_t)v40, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v40, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      uint64_t v27 = swift_bridgeObjectRetain();
      sub_1C024C2BC(v27);
      swift_bridgeObjectRelease();
      *(_OWORD *)uint64_t v9 = v37[0];
      *((void *)v9 + 2) = v25;
      *((void *)v9 + 3) = v26;
      (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FAC408], v6);
      swift_bridgeObjectRetain();
      sub_1C151B09C();
      sub_1C00F5E3C((uint64_t)v40, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      uint64_t v21 = (unsigned int *)MEMORY[0x1E4FAD7C8];
    }
    uint64_t v28 = *v21;
    uint64_t v29 = sub_1C151CA6C();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(a2, v28, v29);
    uint64_t v30 = *MEMORY[0x1E4FAD048];
    uint64_t v31 = sub_1C151BF1C();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(a2, v30, v31);
    sub_1C00F5E3C((uint64_t)v40, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
    uint64_t v13 = (unsigned int *)MEMORY[0x1E4FAD028];
  }
  uint64_t v34 = *v13;
  uint64_t v35 = sub_1C151BEFC();
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(a2, v34, v35);
}

BOOL _s8NewsFeed21FormatImageAdjustmentO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1C00F5BA4(a1, (uint64_t)v26);
  sub_1C00F5BA4(a2, (uint64_t)v27);
  sub_1C00F5BA4((uint64_t)v26, (uint64_t)v28);
  sub_1C00F5BA4((uint64_t)v27, (uint64_t)&v29);
  sub_1C00F5BA4((uint64_t)v26, (uint64_t)v30);
  int v3 = sub_1C00F5C00((uint64_t)v30);
  if (!v3)
  {
    uint64_t v7 = sub_1C00F5EAC((uint64_t)v30);
    sub_1C00F5BA4((uint64_t)v27, (uint64_t)v25);
    if (!sub_1C00F5C00((uint64_t)v25))
    {
      uint64_t v17 = sub_1C00F5EAC((uint64_t)v25);
      sub_1C00F61EC(v7, (uint64_t)&v21);
      sub_1C00F61EC(v17, (uint64_t)&v23);
      sub_1C00F6034((uint64_t)&v21, (uint64_t)v20);
      sub_1C00F6034((uint64_t)&v23, (uint64_t)v19);
      sub_1C00F5E3C((uint64_t)v27, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v26, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v26, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v27, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      char v6 = _s8NewsFeed25FormatDirectionalGradientO2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v19);
      goto LABEL_12;
    }
    sub_1C00F5BA4((uint64_t)v26, (uint64_t)&v23);
    uint64_t v8 = (uint64_t *)sub_1C00F5EAC((uint64_t)&v23);
    sub_1C00F6190(v8);
    goto LABEL_10;
  }
  if (v3 == 1)
  {
    uint64_t v4 = sub_1C00F5EAC((uint64_t)v30);
    sub_1C00F5BA4((uint64_t)v27, (uint64_t)v25);
    if (sub_1C00F5C00((uint64_t)v25) == 1)
    {
      uint64_t v5 = sub_1C00F5EAC((uint64_t)v25);
      sub_1BFCF2D74(v4, (uint64_t)&v23);
      sub_1BFCF2D74(v5, (uint64_t)&v21);
      sub_1C00F5E3C((uint64_t)v27, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v26, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v26, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      sub_1C00F5E3C((uint64_t)v27, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
      char v6 = _s8NewsFeed26FormatImageAdjustmentBlendO2eeoiySbAC_ACtFZ_0((uint64_t)&v23, (uint64_t)&v21);
LABEL_12:
      BOOL v15 = v6;
      sub_1C00F5C8C((uint64_t)v28);
      sub_1C00F5E3C((uint64_t)v27, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      sub_1C00F5E3C((uint64_t)v26, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
      return v15;
    }
    sub_1C00F5BA4((uint64_t)v26, (uint64_t)&v23);
    uint64_t v16 = sub_1C00F5EAC((uint64_t)&v23);
    sub_1C00F5EBC(v16);
    goto LABEL_10;
  }
  uint64_t v9 = sub_1C00F5EAC((uint64_t)v30);
  uint64_t v10 = *(void *)v9;
  char v11 = *(unsigned char *)(v9 + 8);
  sub_1C00F5BA4((uint64_t)v27, (uint64_t)v25);
  if (sub_1C00F5C00((uint64_t)v25) != 2)
  {
LABEL_10:
    sub_1C00F5E3C((uint64_t)v27, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
    sub_1C00F5C8C((uint64_t)v28);
    return 0;
  }
  uint64_t v12 = sub_1C00F5EAC((uint64_t)v25);
  uint64_t v13 = *(void *)v12;
  char v14 = *(unsigned char *)(v12 + 8);
  sub_1C00F5C8C((uint64_t)v28);
  uint64_t v23 = v10;
  char v24 = v11;
  uint64_t v21 = v13;
  char v22 = v14;
  return _s8NewsFeed27FormatImageAdjustmentFilterO2eeoiySbAC_ACtFZ_0((uint64_t)&v23, (uint64_t)&v21);
}

unint64_t sub_1C024CC7C(uint64_t a1)
{
  unint64_t result = sub_1C024CCA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C024CCA4()
{
  unint64_t result = qword_1EA1988D0;
  if (!qword_1EA1988D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1988D0);
  }
  return result;
}

unint64_t sub_1C024CCF8(void *a1)
{
  a1[1] = sub_1C0075168();
  a1[2] = sub_1C00751BC();
  unint64_t result = sub_1C024CD30();
  a1[3] = result;
  return result;
}

unint64_t sub_1C024CD30()
{
  unint64_t result = qword_1EA1988D8;
  if (!qword_1EA1988D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1988D8);
  }
  return result;
}

uint64_t assignWithCopy for FormatImageAdjustment(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v27 = *(void *)(a2 + 72);
  uint64_t v28 = *(void *)(a2 + 80);
  uint64_t v29 = *(void *)(a2 + 88);
  uint64_t v30 = *(void *)(a2 + 96);
  uint64_t v31 = *(void *)(a2 + 104);
  uint64_t v32 = *(void *)(a2 + 112);
  uint64_t v33 = *(void *)(a2 + 120);
  unsigned __int8 v34 = *(unsigned char *)(a2 + 128);
  sub_1BFF91120(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v27, v28, v29, v30, v31, v32, v33, v34, (uint64_t (*)(void))sub_1C00F5C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF926DC);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 112);
  uint64_t v24 = *(void *)(a1 + 120);
  unsigned __int8 v25 = *(unsigned char *)(a1 + 128);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v27;
  *(void *)(a1 + 80) = v28;
  *(void *)(a1 + 88) = v29;
  *(void *)(a1 + 96) = v30;
  *(void *)(a1 + 104) = v31;
  *(void *)(a1 + 112) = v32;
  *(void *)(a1 + 120) = v33;
  *(unsigned char *)(a1 + 128) = v34;
  sub_1BFF91120(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, v24, v25, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
  return a1;
}

uint64_t assignWithTake for FormatImageAdjustment(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 128);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v16 = *(void *)(a1 + 120);
  unsigned __int8 v17 = *(unsigned char *)(a1 + 128);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  long long v20 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v20;
  long long v21 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v21;
  *(unsigned char *)(a1 + 128) = v3;
  sub_1BFF91120(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16, v17, (uint64_t (*)(void))sub_1C00F5DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF92710);
  return a1;
}

uint64_t sub_1C024CFCC(uint64_t result, char a2)
{
  char v2 = *(unsigned char *)(result + 128) & 0x8F | (32 * (a2 & 3));
  *(void *)(result + 104) &= 0x8000000000000001;
  *(unsigned char *)(result + 128) = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatImageAdjustment()
{
  return &type metadata for FormatImageAdjustment;
}

uint64_t sub_1C024D000()
{
  long long v1 = *(_OWORD *)(v0 + 128);
  v13[6] = *(_OWORD *)(v0 + 112);
  v13[7] = v1;
  v13[8] = *(_OWORD *)(v0 + 144);
  long long v2 = *(_OWORD *)(v0 + 64);
  v13[2] = *(_OWORD *)(v0 + 48);
  v13[3] = v2;
  long long v3 = *(_OWORD *)(v0 + 96);
  v13[4] = *(_OWORD *)(v0 + 80);
  v13[5] = v3;
  long long v4 = *(_OWORD *)(v0 + 32);
  v13[0] = *(_OWORD *)(v0 + 16);
  v13[1] = v4;
  sub_1C0187DF4((uint64_t)v13);
  swift_release();
  uint64_t v5 = *(void **)(v0 + 240);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1BFF19FBC(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_groupLayoutContext);
  long long v6 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 176);
  v14[10] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 160);
  v14[11] = v6;
  uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 192);
  long long v7 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 112);
  v14[6] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 96);
  v14[7] = v7;
  long long v8 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 144);
  v14[8] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 128);
  long long v14[9] = v8;
  long long v9 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 48);
  long long v14[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 32);
  void v14[3] = v9;
  long long v10 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 80);
  void v14[4] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 64);
  v14[5] = v10;
  long long v11 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history + 16);
  v14[0] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatCanvasLayoutResult_history);
  v14[1] = v11;
  sub_1C024D250((uint64_t)v14);
  return swift_deallocClassInstance();
}

uint64_t sub_1C024D134()
{
  return type metadata accessor for DebugFormatCanvasLayoutResult();
}

uint64_t type metadata accessor for DebugFormatCanvasLayoutResult()
{
  uint64_t result = qword_1EA1988E0;
  if (!qword_1EA1988E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C024D188()
{
  uint64_t result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C024D250(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  unint64_t v3 = *(void *)(a1 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFFD0438(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

id GapFontBook.titleFont.getter()
{
  return *v0;
}

id GapFontBook.descriptionFont.getter()
{
  return *(id *)(v0 + 8);
}

NewsFeed::GapFontBook __swiftcall GapFontBook.init(titleFont:descriptionFont:)(UIFont titleFont, UIFont descriptionFont)
{
  v2->super.isa = titleFont.super.isa;
  v2[1].super.isa = descriptionFont.super.isa;
  result.descriptionFont = descriptionFont;
  result.titleFont = titleFont;
  return result;
}

void *initializeBufferWithCopyOfBuffer for LoadedFont(void *a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  long long v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for GapFontBook(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  long long v7 = *(void **)(a2 + 8);
  long long v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for LoadedFont(uint64_t a1, _OWORD *a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for GapFontBook()
{
  return &type metadata for GapFontBook;
}

uint64_t sub_1C024D44C()
{
  return swift_initClassMetadata2();
}

char *sub_1C024D4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    uint64_t v4 = sub_1C151E62C();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  return sub_1C024D7C0(v4, v5);
}

void sub_1C024D4E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1C024D940();
}

void sub_1C024D50C()
{
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_layoutSubviews);
  unint64_t v1 = *(void **)&v0[qword_1EA1988F0];
  id v2 = objc_msgSend(v1, sel_layer);
  id v3 = objc_msgSend(*(id *)&v0[qword_1EA198900], sel_CGColor);
  objc_msgSend(v2, sel_setBorderColor_, v3);

  id v4 = objc_msgSend(v1, sel_layer);
  double v5 = 0.0;
  if (v0[qword_1EA1988F8] == 1)
  {
    id v6 = objc_msgSend(v0, sel_traitCollection, 0.0);
    objc_msgSend(v6, sel_displayScale);
    double v8 = v7;

    double v5 = 1.0 / v8;
  }
  objc_msgSend(v4, sel_setBorderWidth_, v5);
}

void sub_1C024D648(void *a1)
{
  id v1 = a1;
  sub_1C024D50C();
}

void sub_1C024D690()
{
  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_prepareForReuse);
  v0[qword_1EA1988F8] = 1;
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FBA8A8]), sel_init);
  id v2 = *(void **)&v0[qword_1EA198908];
  *(void *)&v0[qword_1EA198908] = v1;
}

void sub_1C024D704(void *a1)
{
  id v1 = a1;
  sub_1C024D690();
}

void sub_1C024D74C(uint64_t a1)
{
  id v2 = *(void **)(a1 + qword_1EA198908);
}

uint64_t type metadata accessor for DebugFormatInspectorAccessoryCell()
{
  return __swift_instantiateGenericMetadata();
}

char *sub_1C024D7C0(uint64_t a1, uint64_t a2)
{
  objc_super v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = qword_1EA1988F0;
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  double v8 = v3;
  *(void *)&v3[v6] = objc_msgSend(v7, sel_initWithFrame_, 0.0, 0.0, 22.0, 22.0);
  v8[qword_1EA1988F8] = 1;
  uint64_t v9 = qword_1EA198900;
  *(void *)&v8[v9] = objc_msgSend(self, sel_lightGrayColor);
  uint64_t v10 = qword_1EA198908;
  *(void *)&v8[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FBA8A8]), sel_init);

  if (a2)
  {
    long long v11 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    long long v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = ObjectType;
  long long v12 = (char *)objc_msgSendSuper2(&v14, sel_initWithStyle_reuseIdentifier_, 3, v11);

  objc_msgSend(v12, sel_setAccessoryView_, *(void *)&v12[qword_1EA1988F0]);
  return v12;
}

void sub_1C024D940()
{
  uint64_t v1 = qword_1EA1988F0;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, 0.0, 0.0, 22.0, 22.0);
  v0[qword_1EA1988F8] = 1;
  uint64_t v2 = qword_1EA198900;
  *(void *)&v0[v2] = objc_msgSend(self, sel_lightGrayColor);
  uint64_t v3 = qword_1EA198908;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FBA8A8]), sel_init);

  sub_1C152040C();
  __break(1u);
}

uint64_t FormatIssueCoverNode.identifier.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssueCoverNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNode.identifier.modify())()
{
  return j__swift_endAccess;
}

unint64_t FormatIssueCoverNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 32);
  *a1 = v2;
  return sub_1BFF35EA4(v2);
}

uint64_t FormatIssueCoverNode.resize.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatIssueCoverNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNode.adjustments.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNode.adjustments.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatIssueCoverNode.style.getter()
{
  return swift_retain();
}

uint64_t FormatIssueCoverNode.animation.getter()
{
  return swift_retain();
}

uint64_t FormatIssueCoverNode.content.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatIssueCoverNode.zIndex.getter()
{
  swift_beginAccess();
  return *(void *)(v0 + 80);
}

uint64_t FormatIssueCoverNode.zIndex.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatIssueCoverNode.zIndex.modify())()
{
  return j_j__swift_endAccess;
}

unint64_t FormatIssueCoverNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 88);
  *a1 = v3;
  return sub_1BFE6FA30(v3);
}

unint64_t sub_1C024DD68(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 88);
  *(void *)(v3 + 88) = v2;
  sub_1BFE6FA30(v2);
  return sub_1BFF0056C(v4);
}

unint64_t FormatIssueCoverNode.visibility.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 88);
  *(void *)(v1 + 88) = v2;
  return sub_1BFF0056C(v3);
}

uint64_t (*FormatIssueCoverNode.visibility.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t FormatIssueCoverNode.isUserInteractionEnabled.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t FormatIssueCoverNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatIssueCoverNode.isUserInteractionEnabled.modify())()
{
  return j_j__swift_endAccess;
}

void FormatIssueCoverNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 112);
  *(void *)a1 = *(void *)(v1 + 104);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatIssueCoverNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C024DF78(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 120) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatIssueCoverNode.selectors.setter(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNode.selectors.modify())()
{
  return j_j__swift_endAccess;
}

void FormatIssueCoverNode.sizeConstraint.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 128);
}

uint64_t FormatIssueCoverNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:sizeConstraint:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t *a10, char a11, uint64_t *a12, uint64_t a13, char *a14)
{
  uint64_t v19 = swift_allocObject();
  FormatIssueCoverNode.init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:sizeConstraint:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return v19;
}

uint64_t FormatIssueCoverNode.deinit()
{
  swift_bridgeObjectRelease();
  sub_1BFF322A8(*(void *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 88));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatIssueCoverNode.__deallocating_deinit()
{
  FormatIssueCoverNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C024E1D8(uint64_t a1)
{
  uint64_t result = sub_1C024E2F8(&qword_1EA198990);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C024E21C(void *a1)
{
  a1[1] = sub_1C024E2F8(&qword_1EB8603C8);
  a1[2] = sub_1C024E2F8(&qword_1EB8603C0);
  uint64_t result = sub_1C024E2F8(&qword_1EA198998);
  a1[3] = result;
  return result;
}

uint64_t sub_1C024E2A8(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed20FormatIssueCoverNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1C024E2B4(uint64_t a1)
{
  uint64_t result = sub_1C024E2F8(&qword_1EA1989A0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C024E2F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatIssueCoverNode();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C024E338@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  unint64_t v11 = *a1;
  unint64_t v12 = a1[1];
  unint64_t v13 = a1[2];
  unint64_t v14 = a1[3];
  unint64_t v15 = a1[4];
  unint64_t v16 = a1[5];
  unint64_t v32 = a1[6];
  unint64_t v17 = a1[7];
  uint64_t v18 = *(void *)(a4 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  uint64_t v20 = *(void *)(a5 + 16);
  uint64_t v19 = *(void *)(a5 + 24);
  uint64_t v21 = *(void *)(v18 + 40);
  if (!v21)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = v19;
    uint64_t v31 = v20;
    uint64_t v22 = *(void *)(a5 + 40);
    if (v22) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v23 = 0;
    goto LABEL_6;
  }
  unint64_t v35 = *(void *)(v18 + 32);
  uint64_t v36 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v30 = v21;
  uint64_t v31 = v35;
  uint64_t v20 = *(void *)(a5 + 16);
  uint64_t v19 = *(void *)(a5 + 24);
  uint64_t v22 = *(void *)(a5 + 40);
  if (!v22) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v23 = *(void *)(v22 + 16);
  swift_retain();
LABEL_6:
  uint64_t v24 = swift_allocObject();
  uint64_t v46 = v23;
  swift_beginAccess();
  uint64_t v25 = *(void *)(a5 + 80);
  swift_beginAccess();
  unint64_t v35 = *(void *)(a5 + 88);
  swift_bridgeObjectRetain();
  sub_1BFE6FA30(v35);
  sub_1BFE6EF70(a4, &v45);
  sub_1BFF0056C(v35);
  swift_beginAccess();
  char v26 = *(unsigned char *)(a5 + 96);
  char v27 = *(unsigned char *)(a5 + 112);
  uint64_t v43 = *(void *)(a5 + 104);
  char v44 = v27;
  sub_1C1517EFC();
  uint64_t v28 = v35;
  unint64_t v35 = v11;
  uint64_t v36 = v12;
  unint64_t v37 = v13;
  unint64_t v38 = v14;
  unint64_t v39 = v15;
  unint64_t v40 = v16;
  unint64_t v41 = v32;
  unint64_t v42 = v17;
  type metadata accessor for FormatIssueCoverNodeLayoutAttributes();
  swift_allocObject();
  *(void *)(v24 + 16) = sub_1C025FC10(a2, a3, v31, v30, v20, v19, &v46, v25, &v45, v26, &v43, v28, a6, (uint64_t *)&v35);
  *a7 = v24 | 0x7000000000000004;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C024E5C4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C024E614@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C024E664@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 80);
  return result;
}

uint64_t sub_1C024E6AC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 80) = v2;
  return result;
}

unint64_t sub_1C024E6F0@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  unint64_t v4 = *(void *)(v3 + 88);
  *a2 = v4;
  return sub_1BFE6FA30(v4);
}

uint64_t sub_1C024E740@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 96);
  return result;
}

uint64_t sub_1C024E788(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 96) = v2;
  return result;
}

uint64_t sub_1C024E7CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 120);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatIssueCoverNode(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatIssueCoverNode);
}

uint64_t dispatch thunk of FormatIssueCoverNode.__allocating_init(identifier:size:resize:adjustments:style:animation:content:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:selectors:sizeConstraint:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_1C024E868()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t FormatDerivedDataFileKey.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEFF31C(0, &qword_1EB87A530, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (!v2)
  {
    sub_1C024EAF4();
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    sub_1C15206EC();
    char v10 = v13;
    sub_1BFE2F6D8();
    long long v13 = xmmword_1C152C800;
    sub_1BFEB6C70((unint64_t *)&qword_1EB873EF0);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v12 = v15;
    *(void *)a2 = v14;
    *(void *)(a2 + 8) = v12;
    *(unsigned char *)(a2 + 16) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1C024EAF4()
{
  unint64_t result = qword_1EA1989A8;
  if (!qword_1EA1989A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1989A8);
  }
  return result;
}

uint64_t FormatDerivedDataFileKey.encode(to:)(void *a1)
{
  sub_1BFEFF31C(0, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v35 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v31 = *(void *)v1;
  uint64_t v9 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520F0C();
  switch(v9)
  {
    case 1:
      LOBYTE(v32) = 1;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      sub_1C024F448();
      uint64_t v12 = v8;
      swift_bridgeObjectRetain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v23 = v31;
        uint64_t v33 = v31;
        uint64_t v34 = v12;
        long long v32 = xmmword_1C152C800;
        sub_1BFE2F6D8();
        sub_1BFEB6C70((unint64_t *)&qword_1EB85CF10);
        sub_1C152080C();
        uint64_t v20 = v23;
        uint64_t v21 = v12;
        unsigned __int8 v22 = 1;
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
      uint64_t result = sub_1C024F49C(v31, v8, 1u);
      break;
    case 2:
      LOBYTE(v32) = 2;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      sub_1C024F448();
      uint64_t v13 = v8;
      swift_bridgeObjectRetain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v24 = v31;
        uint64_t v33 = v31;
        uint64_t v34 = v13;
        long long v32 = xmmword_1C152C800;
        sub_1BFE2F6D8();
        sub_1BFEB6C70((unint64_t *)&qword_1EB85CF10);
        sub_1C152080C();
        uint64_t v20 = v24;
        uint64_t v21 = v13;
        unsigned __int8 v22 = 2;
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
      uint64_t result = sub_1C024F49C(v31, v8, 2u);
      break;
    case 3:
      LOBYTE(v32) = 3;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      sub_1C024F448();
      uint64_t v14 = v8;
      swift_bridgeObjectRetain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v25 = v31;
        uint64_t v33 = v31;
        uint64_t v34 = v14;
        long long v32 = xmmword_1C152C800;
        sub_1BFE2F6D8();
        sub_1BFEB6C70((unint64_t *)&qword_1EB85CF10);
        sub_1C152080C();
        uint64_t v20 = v25;
        uint64_t v21 = v14;
        unsigned __int8 v22 = 3;
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
      uint64_t result = sub_1C024F49C(v31, v8, 3u);
      break;
    case 4:
      LOBYTE(v32) = 4;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      sub_1C024F448();
      uint64_t v15 = v8;
      swift_bridgeObjectRetain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v26 = v31;
        uint64_t v33 = v31;
        uint64_t v34 = v15;
        long long v32 = xmmword_1C152C800;
        sub_1BFE2F6D8();
        sub_1BFEB6C70((unint64_t *)&qword_1EB85CF10);
        sub_1C152080C();
        uint64_t v20 = v26;
        uint64_t v21 = v15;
        unsigned __int8 v22 = 4;
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
      uint64_t result = sub_1C024F49C(v31, v8, 4u);
      break;
    case 5:
      LOBYTE(v32) = 5;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      sub_1C024F448();
      uint64_t v16 = v8;
      swift_bridgeObjectRetain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v27 = v31;
        uint64_t v33 = v31;
        uint64_t v34 = v16;
        long long v32 = xmmword_1C152C800;
        sub_1BFE2F6D8();
        sub_1BFEB6C70((unint64_t *)&qword_1EB85CF10);
        sub_1C152080C();
        uint64_t v20 = v27;
        uint64_t v21 = v16;
        unsigned __int8 v22 = 5;
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
      uint64_t result = sub_1C024F49C(v31, v8, 5u);
      break;
    case 6:
      LOBYTE(v32) = 6;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      sub_1C024F448();
      uint64_t v17 = v8;
      swift_bridgeObjectRetain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v28 = v31;
        uint64_t v33 = v31;
        uint64_t v34 = v17;
        long long v32 = xmmword_1C152C800;
        sub_1BFE2F6D8();
        sub_1BFEB6C70((unint64_t *)&qword_1EB85CF10);
        sub_1C152080C();
        uint64_t v20 = v28;
        uint64_t v21 = v17;
        unsigned __int8 v22 = 6;
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
      uint64_t result = sub_1C024F49C(v31, v8, 6u);
      break;
    case 7:
      LOBYTE(v32) = 7;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      sub_1C024F448();
      uint64_t v18 = v8;
      swift_bridgeObjectRetain();
      sub_1C152080C();
      if (!v2)
      {
        uint64_t v29 = v31;
        uint64_t v33 = v31;
        uint64_t v34 = v18;
        long long v32 = xmmword_1C152C800;
        sub_1BFE2F6D8();
        sub_1BFEB6C70((unint64_t *)&qword_1EB85CF10);
        sub_1C152080C();
        uint64_t v20 = v29;
        uint64_t v21 = v18;
        unsigned __int8 v22 = 7;
        goto LABEL_26;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
      uint64_t result = sub_1C024F49C(v31, v8, 7u);
      break;
    default:
      LOBYTE(v32) = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      sub_1C024F448();
      uint64_t v10 = v8;
      swift_bridgeObjectRetain();
      sub_1C152080C();
      if (v2)
      {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
        uint64_t result = sub_1C024F49C(v31, v8, 0);
      }
      else
      {
        uint64_t v19 = v31;
        uint64_t v33 = v31;
        uint64_t v34 = v10;
        long long v32 = xmmword_1C152C800;
        sub_1BFE2F6D8();
        sub_1BFEB6C70((unint64_t *)&qword_1EB85CF10);
        sub_1C152080C();
        uint64_t v20 = v19;
        uint64_t v21 = v10;
        unsigned __int8 v22 = 0;
LABEL_26:
        sub_1C024F49C(v20, v21, v22);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v5);
      }
      break;
  }
  return result;
}

unint64_t sub_1C024F448()
{
  unint64_t result = qword_1EA1989B0;
  if (!qword_1EA1989B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1989B0);
  }
  return result;
}

uint64_t sub_1C024F49C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 7u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C024F4B4(unsigned __int8 *a1, char *a2)
{
  return sub_1C14815B0(*a1, *a2);
}

uint64_t sub_1C024F4C0()
{
  return sub_1C044DB48();
}

uint64_t sub_1C024F4CC()
{
  return sub_1C0448C20();
}

uint64_t sub_1C024F4D4()
{
  return sub_1C044DB48();
}

uint64_t sub_1C024F4DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C024FE20();
  *a1 = result;
  return result;
}

void sub_1C024F50C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x70756F7267;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1835365481;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x74657070696E73;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      *(void *)a1 = 0x656C797473;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 4:
      strcpy((char *)a1, "supplementary");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 5:
      *(void *)a1 = 1701869940;
      *(void *)(a1 + 8) = 0xE400000000000000;
      break;
    case 6:
      *(void *)a1 = 0x697461726F636564;
      *(void *)(a1 + 8) = 0xEA00000000006E6FLL;
      break;
    case 7:
      *(void *)a1 = 0x6567616B636170;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1C024F61C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C024F67C()
{
  return sub_1C151EAEC();
}

uint64_t FormatDerivedDataFileKey.hash(into:)()
{
  sub_1C1520DCC();
  return sub_1C151E77C();
}

uint64_t FormatDerivedDataFileKey.hashValue.getter()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C024F778@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatDerivedDataFileKey.init(from:)(a1, a2);
}

uint64_t sub_1C024F790(void *a1)
{
  return FormatDerivedDataFileKey.encode(to:)(a1);
}

uint64_t sub_1C024F7A8()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C024F800()
{
  return sub_1C1520E0C();
}

uint64_t _s8NewsFeed24FormatDerivedDataFileKeyO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1u:
      if (v7 != 1) {
        goto LABEL_57;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_56;
      }
      LOBYTE(v7) = 1;
      unsigned __int8 v4 = 1;
      char v9 = 1;
      break;
    case 2u:
      if (v7 != 2) {
        goto LABEL_57;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_56;
      }
      char v9 = 1;
      LOBYTE(v7) = 2;
      unsigned __int8 v4 = 2;
      break;
    case 3u:
      if (v7 != 3) {
        goto LABEL_57;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_56;
      }
      char v9 = 1;
      LOBYTE(v7) = 3;
      unsigned __int8 v4 = 3;
      break;
    case 4u:
      if (v7 != 4) {
        goto LABEL_57;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_56;
      }
      char v9 = 1;
      LOBYTE(v7) = 4;
      unsigned __int8 v4 = 4;
      break;
    case 5u:
      if (v7 != 5) {
        goto LABEL_57;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_56;
      }
      char v9 = 1;
      LOBYTE(v7) = 5;
      unsigned __int8 v4 = 5;
      break;
    case 6u:
      if (v7 != 6) {
        goto LABEL_57;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_56;
      }
      char v9 = 1;
      LOBYTE(v7) = 6;
      unsigned __int8 v4 = 6;
      break;
    case 7u:
      if (v7 != 7) {
        goto LABEL_57;
      }
      if (v2 != v5 || v3 != v6) {
        goto LABEL_56;
      }
      char v9 = 1;
      LOBYTE(v7) = 7;
      unsigned __int8 v4 = 7;
      break;
    default:
      if (*(unsigned char *)(a2 + 16))
      {
LABEL_57:
        char v9 = 0;
      }
      else if (v2 == v5 && v3 == v6)
      {
        LOBYTE(v7) = 0;
        unsigned __int8 v4 = 0;
        char v9 = 1;
      }
      else
      {
LABEL_56:
        char v9 = sub_1C1520A9C();
        LOBYTE(v7) = v4;
      }
      break;
  }
  sub_1C024FAC0(v5, v6, v7);
  sub_1C024FAC0(v2, v3, v4);
  sub_1C024F49C(v2, v3, v4);
  sub_1C024F49C(v5, v6, v7);
  return v9 & 1;
}

unint64_t sub_1C024FA68()
{
  unint64_t result = qword_1EA1989B8;
  if (!qword_1EA1989B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1989B8);
  }
  return result;
}

uint64_t sub_1C024FAC0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 7u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for FormatDerivedDataFileKey(uint64_t a1)
{
  return sub_1C024F49C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s8NewsFeed24FormatDerivedDataFileKeyOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C024FAC0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataFileKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C024FAC0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C024F49C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataFileKey(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C024F49C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDerivedDataFileKey(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 7) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataFileKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 249;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataFileKey()
{
  return &type metadata for FormatDerivedDataFileKey;
}

unsigned char *storeEnumTagSinglePayload for FormatDerivedDataFileKey.CodingType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C024FD3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataFileKey.CodingType()
{
  return &type metadata for FormatDerivedDataFileKey.CodingType;
}

unint64_t sub_1C024FD78()
{
  unint64_t result = qword_1EA1989C0;
  if (!qword_1EA1989C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1989C0);
  }
  return result;
}

unint64_t sub_1C024FDCC()
{
  unint64_t result = qword_1EA1989C8;
  if (!qword_1EA1989C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1989C8);
  }
  return result;
}

uint64_t sub_1C024FE20()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C024FE6C()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F38C();
  sub_1C15197BC();

  sub_1C151932C();
  uint64_t v1 = (void *)sub_1C1518E7C();
  sub_1C02509F8();
  sub_1C151900C();
  swift_release();

  uint64_t v2 = (void *)sub_1C1518E7C();
  type metadata accessor for SportsDataConfiguration();
  sub_1C151900C();
  swift_release();

  int v3 = (void *)sub_1C1518E7C();
  uint64_t v4 = sub_1C151903C();
  swift_release();

  return v4;
}

uint64_t sub_1C0250034(uint64_t a1)
{
  id v1 = objc_msgSend(*(id *)(a1 + 16), sel_appConfiguration);
  if (objc_msgSend(v1, sel_respondsToSelector_, sel_sportsConfigurationResourceId))
  {
    id v2 = objc_msgSend(v1, sel_sportsConfigurationResourceId);
    swift_unknownObjectRelease();
    if (v2)
    {
      sub_1C151E62C();

      sub_1C01D7424();
      swift_allocObject();
      return sub_1C151908C();
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
  sub_1C0250BA4();
  swift_allocError();
  return swift_willThrow();
}

uint64_t sub_1C025012C(uint64_t *a1, void *a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAA8C8];
  sub_1BFEE7D1C(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (void *)((char *)v16 - v6);
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v10 = a2[6];
  v16[1] = a2[7];
  __swift_project_boxed_opaque_existential_1(a2 + 3, v10);
  *uint64_t v7 = 0x404E000000000000;
  uint64_t v11 = *MEMORY[0x1E4FAA8C0];
  uint64_t v12 = sub_1C1517F3C();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v13 + 104))(v7, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
  uint64_t v14 = ResourceServiceType.fetchResource(identifier:qualityOfService:cachePolicy:purpose:)(v9, v8);
  sub_1BFF51034((uint64_t)v7, (unint64_t *)&qword_1EB882B40, v4);
  return v14;
}

id *sub_1C02502E4(id *a1, uint64_t a2)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_1C151E68C();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = type metadata accessor for SportsDataConfiguration();
  MEMORY[0x1F4188790](v4);
  uint64_t v39 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v37 - v7;
  sub_1BFEE7D1C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = sub_1C1515FDC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v17 = MEMORY[0x1F4188790](v16).n128_u64[0];
  uint64_t v19 = (char *)&v37 - v18;
  id v20 = objc_msgSend(*a1, sel_fileURL, v17);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_6;
  }
  uint64_t v21 = v20;
  unint64_t v38 = v8;
  sub_1C1515F1C();

  a1 = (id *)(v13 + 32);
  unsigned __int8 v22 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v22(v11, v15, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
LABEL_6:
    sub_1BFF51034((uint64_t)v11, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    sub_1C0250A38();
    swift_allocError();
    swift_willThrow();
    return a1;
  }
  v22(v19, v11, v12);
  unint64_t v23 = v41;
  uint64_t v24 = sub_1C1515FFC();
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
  else
  {
    uint64_t v27 = v24;
    unint64_t v28 = v25;
    sub_1C0250A8C();
    sub_1C1517D9C();
    sub_1C151E67C();
    unint64_t v41 = v28;
    uint64_t v29 = sub_1C151E64C();
    if (v30)
    {
      uint64_t v31 = v29;
      uint64_t v32 = v30;
      if (qword_1EB86AE58 != -1) {
        swift_once();
      }
      uint64_t v33 = (void *)qword_1EB93C5E8;
      sub_1BFEE7D1C(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1C1529AE0;
      *(void *)(v34 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v34 + 64) = sub_1BFE9C558();
      *(void *)(v34 + 32) = v31;
      *(void *)(v34 + 40) = v32;
      id v35 = v33;
      sub_1C151F38C();
      sub_1C15197BC();

      swift_bridgeObjectRelease();
    }
    uint64_t v36 = (uint64_t)v38;
    sub_1C0250AE4((uint64_t)v38, v39);
    sub_1BFEE7D1C(0, &qword_1EB863E58, (uint64_t (*)(uint64_t))type metadata accessor for SportsDataConfiguration, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    a1 = (id *)sub_1C151908C();
    sub_1BFE95664(v27, v41);
    sub_1C0250B48(v36);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
  }
  return a1;
}

uint64_t sub_1C0250850()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F36C();
  sub_1BFEE7D1C(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1529AE0;
  swift_getErrorValue();
  uint64_t v2 = sub_1C1520D3C();
  uint64_t v4 = v3;
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 64) = sub_1BFE9C558();
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v4;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0250994()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C02509DC()
{
  return sub_1C0250034(v0);
}

unint64_t sub_1C02509F8()
{
  unint64_t result = qword_1EB87A0B0;
  if (!qword_1EB87A0B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A0B0);
  }
  return result;
}

unint64_t sub_1C0250A38()
{
  unint64_t result = qword_1EA1989D8;
  if (!qword_1EA1989D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1989D8);
  }
  return result;
}

unint64_t sub_1C0250A8C()
{
  unint64_t result = qword_1EB867570;
  if (!qword_1EB867570)
  {
    type metadata accessor for SportsDataConfiguration();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867570);
  }
  return result;
}

uint64_t sub_1C0250AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDataConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0250B48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SportsDataConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C0250BA4()
{
  unint64_t result = qword_1EA1989E8;
  if (!qword_1EA1989E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1989E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SportsDataConfigurationService.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C0250C94);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsDataConfigurationService.Errors()
{
  return &type metadata for SportsDataConfigurationService.Errors;
}

unint64_t sub_1C0250CD0()
{
  unint64_t result = qword_1EA1989F8;
  if (!qword_1EA1989F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA1989F8);
  }
  return result;
}

uint64_t sub_1C0250D24(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v33 = (uint64_t)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  int v13 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v14 = *__swift_project_boxed_opaque_existential_1((void *)(v3 + 16), *(void *)(v3 + 40));
  sub_1C0B34DC8((uint64_t)v9);
  if (!v2)
  {
    int v28 = v13;
    uint64_t v31 = v10;
    uint64_t v32 = v5;
    uint64_t v29 = v12;
    uint64_t v30 = v11;
    uint64_t v15 = v33;
    uint64_t v16 = sub_1C0252ED4(0x656A626F2F31762FLL, 0xEB00000000737463, v33);
    v27[1] = v27;
    MEMORY[0x1F4188790](v16);
    v27[-8] = v9;
    v27[-7] = v3;
    uint64_t v19 = v30;
    uint64_t v18 = v31;
    v27[-6] = v31;
    v27[-5] = v19;
    uint64_t v20 = v29;
    v27[-4] = v29;
    char v21 = v28;
    LOBYTE(v27[-3]) = v28;
    v27[-2] = v15;
    type metadata accessor for SportsDataServiceBatchRequest(0);
    sub_1C151932C();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v18;
    *(void *)(v22 + 24) = v19;
    *(void *)(v22 + 32) = v20;
    *(unsigned char *)(v22 + 40) = v21;
    sub_1C0254D40(v18, v19, v20, v21);
    unint64_t v23 = (void *)sub_1C1518E7C();
    uint64_t v14 = sub_1C151903C();
    swift_release();
    swift_release();

    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    uint64_t v25 = v15;
    uint64_t v26 = v32;
    v24(v25, v32);
    v24((uint64_t)v9, v26);
  }
  return v14;
}

uint64_t sub_1C0250FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v28 = a7;
  int v27 = a6;
  uint64_t v26 = a5;
  uint64_t v10 = sub_1C1515FDC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SportsDataServiceBatchRequest(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v25 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 16))(v13, a1, v10, v18);
  v29[0] = a3;
  v29[1] = a4;
  v29[2] = v26;
  char v30 = v27;
  uint64_t v21 = v31;
  uint64_t v22 = sub_1C0255084(v29, a1, v28);
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v23 = v22;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v13, v10);
    *(void *)&v20[*(int *)(v14 + 20)] = v23;
    sub_1C0255258((uint64_t)v20, (uint64_t)v16, type metadata accessor for SportsDataServiceBatchRequest);
    sub_1BFEE7D80(0, &qword_1EB863E88, type metadata accessor for SportsDataServiceBatchRequest, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v10 = sub_1C151908C();
    sub_1C02552C0((uint64_t)v20, type metadata accessor for SportsDataServiceBatchRequest);
  }
  return v10;
}

uint64_t sub_1C0251240()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F36C();
  sub_1BFEE7D80(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1527210;
  sub_1C152036C();
  uint64_t v2 = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v3 = sub_1BFE9C558();
  *(void *)(v1 + 64) = v3;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  swift_getErrorValue();
  uint64_t v4 = sub_1C1520D3C();
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 104) = v3;
  *(void *)(v1 + 72) = v4;
  *(void *)(v1 + 80) = v5;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C02513DC(char a1, uint64_t a2)
{
  uint64_t v82 = a2;
  uint64_t v83 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1F4188790](v83);
  uint64_t v77 = (char *)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEE7D80(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  unsigned int v76 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v75 = (char *)&v69 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v74 = (char *)&v69 - v10;
  MEMORY[0x1F4188790](v11);
  CGRect v73 = (char *)&v69 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v69 - v14;
  MEMORY[0x1F4188790](v16);
  __n128 v18 = (char *)&v69 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v69 - v20;
  uint64_t v22 = sub_1C1515FDC();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v78 = v22;
  uint64_t v79 = v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v72 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v71 = (char *)&v69 - v26;
  MEMORY[0x1F4188790](v27);
  unsigned int v70 = (char *)&v69 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v69 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v69 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v69 - v36;
  MEMORY[0x1F4188790](v38);
  uint64_t v40 = (char *)&v69 - v39;
  sub_1BFEE7D80(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], v4);
  uint64_t v80 = *(void *)(v41 - 8);
  uint64_t v81 = *(void *)(v80 + 64);
  MEMORY[0x1F4188790](v41 - 8);
  uint64_t v43 = (char *)&v69 - v42;
  switch(a1)
  {
    case 1:
      if (qword_1EB863998 != -1) {
        swift_once();
      }
      if ((sub_1C151701C() & 1) == 0) {
        goto LABEL_57;
      }
      sub_1C151706C();
      sub_1C151704C();
      if (qword_1EA194930 != -1) {
        swift_once();
      }
      sub_1C151703C();
      swift_release();
      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      uint64_t v45 = v78;
      uint64_t v44 = v79;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v21, 1, v78) == 1)
      {
        sub_1C02549A0((uint64_t)v21, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        goto LABEL_57;
      }
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v40, v21, v45);
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v77, v40, v45);
      swift_storeEnumTagMultiPayload();
      sub_1BFEE7D80(0, &qword_1EB863E60, type metadata accessor for SportsDataServiceRequest, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v65 = v44;
      uint64_t v63 = sub_1C151908C();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v40, v45);
      return v63;
    case 2:
      if (qword_1EA194980 != -1) {
        swift_once();
      }
      char v46 = sub_1C151701C();
      uint64_t v47 = (uint64_t)v74;
      if ((v46 & 1) == 0) {
        goto LABEL_57;
      }
      sub_1C151706C();
      sub_1C151704C();
      if (qword_1EA194978 != -1) {
        swift_once();
      }
      sub_1C151703C();
      swift_release();
      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      uint64_t v49 = v78;
      uint64_t v48 = v79;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v47, 1, v78) == 1)
      {
        sub_1C02549A0(v47, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        goto LABEL_57;
      }
      uint64_t v37 = v70;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v70, v47, v49);
      goto LABEL_66;
    case 3:
      if (qword_1EA194950 != -1) {
        swift_once();
      }
      if ((sub_1C151701C() & 1) == 0) {
        goto LABEL_57;
      }
      sub_1C151706C();
      sub_1C151704C();
      if (qword_1EA194948 != -1) {
        swift_once();
      }
      sub_1C151703C();
      swift_release();
      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      uint64_t v49 = v78;
      uint64_t v48 = v79;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v18, 1, v78) == 1)
      {
        sub_1C02549A0((uint64_t)v18, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        goto LABEL_57;
      }
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v37, v18, v49);
      goto LABEL_66;
    case 4:
      if (qword_1EB8638B0 != -1) {
        swift_once();
      }
      if ((sub_1C151701C() & 1) == 0) {
        goto LABEL_57;
      }
      sub_1C151706C();
      sub_1C151704C();
      if (qword_1EA194958 != -1) {
        swift_once();
      }
      sub_1C151703C();
      swift_release();
      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      uint64_t v51 = v78;
      uint64_t v50 = v79;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v15, 1, v78) == 1)
      {
        sub_1C02549A0((uint64_t)v15, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        goto LABEL_57;
      }
      (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v34, v15, v51);
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v77, v34, v51);
      swift_storeEnumTagMultiPayload();
      sub_1BFEE7D80(0, &qword_1EB863E60, type metadata accessor for SportsDataServiceRequest, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v66 = v50;
      uint64_t v63 = sub_1C151908C();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v34, v51);
      return v63;
    case 5:
      if (qword_1EA194970 != -1) {
        swift_once();
      }
      char v52 = sub_1C151701C();
      uint64_t v53 = (uint64_t)v73;
      if ((v52 & 1) == 0) {
        goto LABEL_57;
      }
      sub_1C151706C();
      sub_1C151704C();
      if (qword_1EA194968 != -1) {
        swift_once();
      }
      sub_1C151703C();
      swift_release();
      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      uint64_t v55 = v78;
      uint64_t v54 = v79;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v53, 1, v78) == 1)
      {
        sub_1C02549A0(v53, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        goto LABEL_57;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v31, v53, v55);
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v77, v31, v55);
      swift_storeEnumTagMultiPayload();
      sub_1BFEE7D80(0, &qword_1EB863E60, type metadata accessor for SportsDataServiceRequest, MEMORY[0x1E4FAB088]);
      swift_allocObject();
      uint64_t v67 = v54;
      uint64_t v63 = sub_1C151908C();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v31, v55);
      return v63;
    case 6:
      if (qword_1EA194990 != -1) {
        swift_once();
      }
      char v56 = sub_1C151701C();
      uint64_t v57 = (uint64_t)v75;
      if ((v56 & 1) == 0) {
        goto LABEL_57;
      }
      sub_1C151706C();
      sub_1C151704C();
      if (qword_1EA194988 != -1) {
        swift_once();
      }
      sub_1C151703C();
      swift_release();
      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      uint64_t v49 = v78;
      uint64_t v48 = v79;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v57, 1, v78) == 1)
      {
        sub_1C02549A0(v57, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        goto LABEL_57;
      }
      uint64_t v37 = v71;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v71, v57, v49);
      goto LABEL_66;
    case 7:
      if (qword_1EB862920 != -1) {
        swift_once();
      }
      char v58 = sub_1C151701C();
      uint64_t v59 = (uint64_t)v76;
      if ((v58 & 1) == 0) {
        goto LABEL_57;
      }
      sub_1C151706C();
      sub_1C151704C();
      if (qword_1EA194998 != -1) {
        swift_once();
      }
      sub_1C151703C();
      swift_release();
      sub_1C1515F7C();
      swift_bridgeObjectRelease();
      uint64_t v49 = v78;
      uint64_t v48 = v79;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v59, 1, v78) == 1)
      {
        sub_1C02549A0(v59, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
LABEL_57:
        sub_1C151932C();
        sub_1C0255390(v82, (uint64_t)v43);
        unint64_t v60 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
        uint64_t v61 = swift_allocObject();
        sub_1C0255424((uint64_t)v43, v61 + v60);
        uint64_t v62 = (void *)sub_1C1518E7C();
        uint64_t v63 = sub_1C1518FFC();
        swift_release();
        swift_release();
      }
      else
      {
        uint64_t v37 = v72;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v72, v59, v49);
LABEL_66:
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v77, v37, v49);
        swift_storeEnumTagMultiPayload();
        sub_1BFEE7D80(0, &qword_1EB863E60, type metadata accessor for SportsDataServiceRequest, MEMORY[0x1E4FAB088]);
        swift_allocObject();
        uint64_t v68 = v48;
        uint64_t v63 = sub_1C151908C();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v49);
      }
      return v63;
    default:
      goto LABEL_57;
  }
}

uint64_t sub_1C0252850(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 56), *(void *)(a1 + 80));
  uint64_t v1 = off_1F1C0CFF8[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C02528C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C0252A54(a1, a2, a3, 120.0);
}

uint64_t sub_1C02528E0(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 56), *(void *)(a1 + 80));
  uint64_t v1 = off_1F1C0D038[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C0252950@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C0252A54(a1, a2, a3, 600.0);
}

uint64_t sub_1C0252974(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 56), *(void *)(a1 + 80));
  uint64_t v1 = off_1F1C0D040[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C02529E4(uint64_t a1)
{
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 56), *(void *)(a1 + 80));
  uint64_t v1 = off_1F1C0D048;
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C0252A54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>, double a4@<D0>)
{
  sub_1BFEE7D80(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (double *)((char *)v20 - v12);
  uint64_t v15 = *a1;
  uint64_t v14 = a1[1];
  sub_1C0255390(a2, (uint64_t)v10);
  uint64_t v16 = sub_1C1517F3C();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16) == 1)
  {
    *uint64_t v13 = a4;
    (*(void (**)(double *, void, uint64_t))(v17 + 104))(v13, *MEMORY[0x1E4FAA8C0], v16);
    swift_bridgeObjectRetain();
    sub_1C02549A0((uint64_t)v10, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8]);
  }
  else
  {
    (*(void (**)(double *, char *, uint64_t))(v17 + 32))(v13, v10, v16);
    swift_bridgeObjectRetain();
  }
  (*(void (**)(double *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  *a3 = v15;
  a3[1] = v14;
  uint64_t v18 = type metadata accessor for SportsDataServiceResourceRequest(0);
  sub_1C0255424((uint64_t)v13, (uint64_t)a3 + *(int *)(v18 + 20));
  type metadata accessor for SportsDataServiceRequest(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0252C88(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v12 = *__swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  sub_1C0B34DC8((uint64_t)v11);
  if (!v2)
  {
    uint64_t v13 = sub_1C0252ED4(0xD000000000000012, 0x80000001C1608C20, (uint64_t)v8);
    MEMORY[0x1F4188790](v13);
    v17[-4] = v3;
    v17[-3] = a1;
    v17[-2] = v11;
    v17[-1] = v8;
    type metadata accessor for SportsDataServiceRequest(0);
    sub_1C151932C();
    *(void *)(swift_allocObject() + 16) = a1;
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)sub_1C1518E7C();
    uint64_t v12 = sub_1C151903C();
    swift_release();
    swift_release();

    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    v16(v8, v5);
    v16(v11, v5);
  }
  return v12;
}

uint64_t sub_1C0252ED4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v27 = a2;
  v25[1] = a1;
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEE7D80(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v25 - v6;
  sub_1BFEE7D80(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], v4);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v25 - v9;
  uint64_t v11 = sub_1C15156FC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v25 - v16;
  sub_1C151564C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1C02549A0((uint64_t)v10, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
    sub_1C0254A10();
    swift_allocError();
    *uint64_t v18 = 3;
    return swift_willThrow();
  }
  else
  {
    v25[0] = a3;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    uint64_t v20 = (void (*)(unsigned char *, void))sub_1C151567C();
    sub_1C151E80C();
    v20(v26, 0);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
    sub_1C151565C();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
    v21(v14, v11);
    uint64_t v22 = sub_1C1515FDC();
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v7, 1, v22) == 1)
    {
      sub_1C02549A0((uint64_t)v7, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      sub_1C0254A10();
      swift_allocError();
      *uint64_t v24 = 2;
      swift_willThrow();
      return ((uint64_t (*)(char *, uint64_t))v21)(v17, v11);
    }
    else
    {
      v21(v17, v11);
      return (*(uint64_t (**)(void, char *, uint64_t))(v23 + 32))(v25[0], v7, v22);
    }
  }
}

uint64_t sub_1C02532C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for SportsDataServiceRequest(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v18 - v13;
  uint64_t v15 = a4;
  uint64_t v16 = a1;
  sub_1C025342C(a2, a3, v15, (uint64_t)v18 - v13);
  if (!v4)
  {
    sub_1C0255258((uint64_t)v14, (uint64_t)v11, type metadata accessor for SportsDataServiceRequest);
    sub_1BFEE7D80(0, &qword_1EB863E60, type metadata accessor for SportsDataServiceRequest, MEMORY[0x1E4FAB088]);
    swift_allocObject();
    uint64_t v16 = sub_1C151908C();
    sub_1C02552C0((uint64_t)v14, type metadata accessor for SportsDataServiceRequest);
  }
  return v16;
}

uint64_t sub_1C025342C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v80 = a2;
  uint64_t v84 = sub_1C151635C();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v82 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1F4188790](v86);
  uint64_t v85 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEE7D80(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  id v90 = (char *)&v76 - v11;
  id v95 = (void (*)(void))sub_1C1515FDC();
  uint64_t v97 = *((void *)v95 - 1);
  MEMORY[0x1F4188790](v95);
  unsigned int v93 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  long long v92 = (char *)&v76 - v14;
  MEMORY[0x1F4188790](v15);
  id v91 = (char *)&v76 - v16;
  MEMORY[0x1F4188790](v17);
  unsigned int v94 = (char *)&v76 - v18;
  uint64_t v88 = sub_1C15155DC();
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  id v96 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C1517E2C();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE7D80(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], v9);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v76 - v25;
  uint64_t v27 = sub_1C15156FC();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  id v89 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v76 - v31;
  uint64_t v81 = a3;
  uint64_t v34 = v33;
  sub_1C151564C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v34) == 1)
  {
    sub_1C02549A0((uint64_t)v26, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
    sub_1C0254A10();
    swift_allocError();
    *uint64_t v35 = 3;
    return swift_willThrow();
  }
  else
  {
    uint64_t v78 = a4;
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    uint64_t v79 = v34;
    v37(v32, v26, v34);
    sub_1C151562C();
    sub_1C151563C();
    sub_1C15155FC();
    sub_1C151560C();
    v98[0] = a1;
    swift_bridgeObjectRetain_n();
    unint64_t v38 = v99;
    sub_1BFD8BB48(v98);
    if (v38)
    {
      uint64_t result = swift_release();
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v39 = v98[0];
      sub_1BFEE7D80(0, (unint64_t *)&unk_1EB86BBE0, (uint64_t (*)(uint64_t))sub_1C0254A64, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      *(void *)(inited + 32) = 7562345;
      *(void *)(inited + 40) = 0xE300000000000000;
      *(void *)(inited + 48) = v39;
      unint64_t v41 = sub_1C018DD38(inited);
      sub_1C151536C();
      swift_allocObject();
      sub_1C151535C();
      v98[0] = v41;
      sub_1C0254ACC();
      sub_1C0254B34();
      uint64_t v42 = sub_1C151533C();
      unint64_t v44 = v43;
      uint64_t v76 = 0;
      uint64_t v45 = v42;
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C1518EFC();
      (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E4FAA810], v20);
      uint64_t v77 = v45;
      unint64_t v99 = v44;
      MEMORY[0x1C18C0A20](v45, v44, v23);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      uint64_t v47 = (void (*)(uint64_t *, void))sub_1C15155EC();
      if (*v46)
      {
        uint64_t v48 = v46;
        sub_1C15155AC();
        swift_bridgeObjectRelease();
        unint64_t v49 = *v48;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t *v48 = v49;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v49 = sub_1BFFB4568(0, *(void *)(v49 + 16) + 1, 1, v49);
          unint64_t *v48 = v49;
        }
        unint64_t v52 = *(void *)(v49 + 16);
        unint64_t v51 = *(void *)(v49 + 24);
        if (v52 >= v51 >> 1)
        {
          unint64_t v49 = sub_1BFFB4568(v51 > 1, v52 + 1, 1, v49);
          unint64_t *v48 = v49;
        }
        uint64_t v54 = v95;
        uint64_t v53 = v96;
        *(void *)(v49 + 16) = v52 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v87 + 32))(v49+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v52, v53, v88);
        v47(v98, 0);
      }
      else
      {
        swift_bridgeObjectRelease();
        v47(v98, 0);
        uint64_t v54 = v95;
      }
      uint64_t v55 = v89;
      uint64_t v56 = v79;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v89, v32, v79);
      uint64_t v57 = (uint64_t)v90;
      sub_1C151565C();
      char v58 = *(void (**)(char *, uint64_t))(v28 + 8);
      v58(v55, v56);
      uint64_t v59 = v97;
      if ((*(unsigned int (**)(uint64_t, uint64_t, void (*)(void)))(v97 + 48))(v57, 1, v54) == 1)
      {
        sub_1C02549A0(v57, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        sub_1C0254A10();
        swift_allocError();
        *unint64_t v60 = 4;
        swift_willThrow();
        sub_1BFE95664(v77, v99);
        return ((uint64_t (*)(char *, uint64_t))v58)(v32, v56);
      }
      else
      {
        id v96 = (char *)v58;
        id v95 = *(void (**)(void))(v59 + 32);
        uint64_t v61 = v94;
        v95();
        uint64_t v62 = v54;
        uint64_t v63 = *(void (**)(char *, uint64_t, void (*)(void)))(v59 + 16);
        v63(v91, v80, v62);
        v63(v92, v81, v62);
        v63(v93, (uint64_t)v61, v62);
        uint64_t v64 = (int *)v86;
        uint64_t v65 = (uint64_t)v85;
        uint64_t v66 = &v85[*(int *)(v86 + 32)];
        sub_1BFE95820(v77, v99);
        uint64_t v67 = v82;
        sub_1C151634C();
        uint64_t v68 = sub_1C151633C();
        id v89 = v69;
        id v90 = (char *)v68;
        (*(void (**)(char *, uint64_t))(v83 + 8))(v67, v84);
        unsigned int v70 = v91;
        uint64_t v71 = v89;
        *(void *)uint64_t v66 = v90;
        *((void *)v66 + 1) = v71;
        uint64_t v72 = v95;
        ((void (*)(uint64_t, char *, void (*)(void)))v95)(v65, v70, v62);
        ((void (*)(uint64_t, char *, void (*)(void)))v72)(v65 + v64[5], v92, v62);
        ((void (*)(uint64_t, char *, void (*)(void)))v72)(v65 + v64[6], v93, v62);
        CGRect v73 = (void *)(v65 + v64[7]);
        uint64_t v74 = v77;
        unint64_t v75 = v99;
        *CGRect v73 = v77;
        v73[1] = v75;
        v73[2] = 0xD000000000000010;
        v73[3] = 0x80000001C1607BF0;
        sub_1C0254BAC(v65, v78);
        sub_1BFE95664(v74, v75);
        (*(void (**)(char *, void (*)(void)))(v97 + 8))(v94, v62);
        ((void (*)(char *, uint64_t))v96)(v32, v79);
        type metadata accessor for SportsDataServiceRequest(0);
        return swift_storeEnumTagMultiPayload();
      }
    }
  }
  return result;
}

uint64_t sub_1C0253F84()
{
  if (qword_1EB86AE58 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EB93C5E8;
  sub_1C151F36C();
  sub_1BFEE7D80(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C1527210;
  sub_1C152036C();
  uint64_t v2 = MEMORY[0x1E4FBB1A0];
  *(void *)(v1 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v3 = sub_1BFE9C558();
  *(void *)(v1 + 64) = v3;
  *(void *)(v1 + 32) = 0;
  *(void *)(v1 + 40) = 0xE000000000000000;
  swift_getErrorValue();
  uint64_t v4 = sub_1C1520D3C();
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 104) = v3;
  *(void *)(v1 + 72) = v4;
  *(void *)(v1 + 80) = v5;
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C025410C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, uint64_t a4@<X6>, void (*a5)(char *, uint64_t, uint64_t)@<X7>, uint64_t a6@<X8>)
{
  uint64_t v70 = a4;
  uint64_t v71 = a5;
  uint64_t v65 = a6;
  int v67 = a3;
  uint64_t v72 = a1;
  uint64_t v7 = sub_1C151635C();
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v61 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for SportsDataServiceURLRequest(0);
  MEMORY[0x1F4188790](v64);
  unint64_t v60 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEE7D80(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v68 = (char *)&v53 - v12;
  uint64_t v66 = sub_1C1515FDC();
  uint64_t v69 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v53 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v53 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v53 - v22;
  sub_1BFEE7D80(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], v10);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v53 - v25;
  uint64_t v27 = sub_1C15156FC();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = *(char **)v72;
  sub_1C151564C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_1C02549A0((uint64_t)v26, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
    sub_1C0254A10();
    uint64_t v31 = swift_allocError();
    *uint64_t v32 = 3;
    uint64_t result = swift_willThrow();
LABEL_5:
    *(void *)uint64_t v71 = v31;
    return result;
  }
  uint64_t v54 = v20;
  uint64_t v55 = v17;
  uint64_t v58 = v27;
  uint64_t v59 = v23;
  uint64_t v56 = v14;
  uint64_t v57 = v28;
  uint64_t v34 = v66;
  uint64_t v35 = v30;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v30, v26, v27);
  sub_1BFEE7D80(0, &qword_1EB87A570, MEMORY[0x1E4F26EA0], MEMORY[0x1E4FBBE00]);
  sub_1C15155DC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C1527210;
  CGRect v73 = v72;
  sub_1BFED9C20();
  sub_1C025534C((unint64_t *)&qword_1EB879F30);
  sub_1C151E55C();
  sub_1C15155AC();
  swift_bridgeObjectRelease();
  uint64_t v36 = v59;
  sub_1C15155AC();
  swift_bridgeObjectRelease();
  uint64_t v37 = v35;
  sub_1C151560C();
  uint64_t v38 = (uint64_t)v68;
  sub_1C151565C();
  uint64_t v39 = v69;
  int v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v38, 1, v34);
  uint64_t v41 = v70;
  if (v40 == 1)
  {
    sub_1C02549A0(v38, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    sub_1C0254A10();
    uint64_t v31 = swift_allocError();
    unsigned char *v42 = 4;
    swift_willThrow();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v37, v58);
    goto LABEL_5;
  }
  uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 32);
  uint64_t v72 = v37;
  v71(v36, v38, v34);
  unint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
  v43(v54, v41, v34);
  v43(v55, a2, v34);
  v43(v56, (uint64_t)v36, v34);
  unint64_t v44 = (int *)v64;
  uint64_t v46 = (uint64_t)v60;
  uint64_t v45 = v61;
  uint64_t v47 = (uint64_t *)&v60[*(int *)(v64 + 32)];
  sub_1C151634C();
  uint64_t v48 = sub_1C151633C();
  uint64_t v50 = v49;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v63);
  *uint64_t v47 = v48;
  v47[1] = v50;
  unint64_t v51 = (void (*)(uint64_t, char *, uint64_t))v71;
  v71((char *)v46, (uint64_t)v54, v34);
  v51(v46 + v44[5], v55, v34);
  v51(v46 + v44[6], v56, v34);
  unint64_t v52 = (_OWORD *)(v46 + v44[7]);
  *unint64_t v52 = 0u;
  v52[1] = 0u;
  sub_1C0254BAC(v46, v65);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v59, v34);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v72, v58);
  type metadata accessor for SportsDataServiceRequest(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C0254900()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t sub_1C0254940()
{
  return sub_1C02532C8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1C0254960()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C0254998()
{
  return sub_1C0253F84();
}

uint64_t sub_1C02549A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEE7D80(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C0254A10()
{
  unint64_t result = qword_1EA198A00;
  if (!qword_1EA198A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A00);
  }
  return result;
}

void sub_1C0254A64()
{
  if (!qword_1EB86AF80)
  {
    sub_1BFED9C20();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB86AF80);
    }
  }
}

void sub_1C0254ACC()
{
  if (!qword_1EB860BF0)
  {
    sub_1BFED9C20();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB860BF0);
    }
  }
}

unint64_t sub_1C0254B34()
{
  unint64_t result = qword_1EB860BF8;
  if (!qword_1EB860BF8)
  {
    sub_1C0254ACC();
    sub_1BFD8BA00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860BF8);
  }
  return result;
}

uint64_t sub_1C0254BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SportsDataServiceURLRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0254C10()
{
  return sub_1C0250FD8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1C0254C3C()
{
  sub_1C0254C7C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1C0254C7C(uint64_t result, uint64_t a2, char a3, char a4)
{
  switch(a4)
  {
    case 2:
      char v4 = a3 & 1;
      return sub_1C0254D20(result, a2, v4);
    case 1:
      return swift_release();
    case 0:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C0254D20(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1C0254D30()
{
  return sub_1C0251240();
}

uint64_t sub_1C0254D40(uint64_t result, uint64_t a2, char a3, char a4)
{
  switch(a4)
  {
    case 2:
      char v4 = a3 & 1;
      return sub_1C0254DD8(result, a2, v4);
    case 1:
      return swift_retain();
    case 0:
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C0254DD8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1C0254DE8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        uint64_t v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1C1520A9C() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            uint64_t v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1C1520A9C() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1C0634DF8((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1C0255084(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v7 = a1[2];
  char v8 = *((unsigned char *)a1 + 24);
  v17[1] = v6;
  void v17[2] = v7;
  char v18 = v8;
  SportsDataVisualizationRequest.tagIds.getter();
  sub_1BFED9C20();
  sub_1C025534C((unint64_t *)&unk_1EB879F40);
  uint64_t v9 = sub_1C151E92C();
  swift_bridgeObjectRelease();
  v17[0] = v9;
  swift_bridgeObjectRetain();
  sub_1BFFCDDC4(v17);
  if (v3)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C025534C(&qword_1EB8900F0);
    uint64_t v10 = sub_1C151F0BC();
    uint64_t v11 = swift_release();
    MEMORY[0x1F4188790](v11);
    long long v14[2] = a3;
    void v14[3] = v5;
    void v14[4] = v6;
    v14[5] = v7;
    char v15 = v8;
    uint64_t v16 = v19;
    uint64_t v12 = sub_1C0183900((uint64_t)sub_1C0255320, (uint64_t)v14, v10);
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_1C0255258(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C02552C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C0255320@<X0>(char *a1@<X0>, void (*a2)(char *, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  return sub_1C025410C(a1, *(void *)(v3 + 16), *(unsigned __int8 *)(v3 + 48), *(void *)(v3 + 56), a2, a3);
}

uint64_t sub_1C025534C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFED9C20();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0255390(uint64_t a1, uint64_t a2)
{
  sub_1BFEE7D80(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C0255424(uint64_t a1, uint64_t a2)
{
  sub_1BFEE7D80(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C02554B8()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = off_1F1C0D048;
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C0255528@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C02555BC(a1, a2, 600.0);
}

uint64_t sub_1C025554C()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = off_1F1C0D040[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C02555BC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>, double a3@<D0>)
{
  sub_1BFEE7D80(0, (unint64_t *)&qword_1EB882B40, MEMORY[0x1E4FAA8C8], MEMORY[0x1E4FBB718]);
  return sub_1C0252A54(a1, v3+ ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80)), a2, a3);
}

uint64_t sub_1C0255678()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = off_1F1C0D038[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C02556E8()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = off_1F1C0D030[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C0255758()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = off_1F1C0D028[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C02557C8()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = off_1F1C0D020[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C0255838()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = off_1F1C0D018[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C02558A8()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = off_1F1C0D010[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C0255918()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = off_1F1C0D008[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C0255988()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = off_1F1C0D000[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C02559F8()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v1 = off_1F1C0CFF8[0];
  type metadata accessor for SportsDataServiceResource();
  return v1();
}

uint64_t sub_1C0255A68@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C02555BC(a1, a2, 120.0);
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.state.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 48);
  return swift_retain();
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FormatStateViewNodeStateDataLayoutAttributes.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatStateViewNodeStateDataLayoutAttributes()
{
  return self;
}

uint64_t method lookup function for FormatStateViewNodeStateDataLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatStateViewNodeStateDataLayoutAttributes);
}

uint64_t sub_1C0255B9C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for FormatOptionConverterContext(uint64_t a1)
{
  return sub_1C0255BC4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1C0255BC4(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8NewsFeed28FormatOptionConverterContextOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C0255B9C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatOptionConverterContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1C0255B9C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C0255BC4(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatOptionConverterContext(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C0255BC4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatOptionConverterContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatOptionConverterContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C0255D54(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1C0255D6C(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatOptionConverterContext()
{
  return &type metadata for FormatOptionConverterContext;
}

uint64_t FormatStateMachineInlineInput.initialState.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FormatStateMachineInlineInput.scope.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *FormatStateMachineInlineInput.scope.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*FormatStateMachineInlineInput.scope.modify())(void)
{
  return nullsub_1;
}

NewsFeed::FormatStateMachineInlineInput::Scope_optional __swiftcall FormatStateMachineInlineInput.Scope.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FormatStateMachineInlineInput.Scope.rawValue.getter()
{
  if (*v0) {
    return 0x6F74656C676E6973;
  }
  else {
    return 0x65636E6174736E69;
  }
}

uint64_t sub_1C0255EA0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0255F28()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0255F9C()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatStateMachineInlineInput::Scope_optional sub_1C0256020(Swift::String *a1)
{
  return FormatStateMachineInlineInput.Scope.init(rawValue:)(*a1);
}

void sub_1C025602C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x65636E6174736E69;
  if (*v1) {
    uint64_t v2 = 0x6F74656C676E6973;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xE90000000000006ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C0256070(char *a1, char *a2)
{
  return sub_1C147BEE0(*a1, *a2);
}

uint64_t sub_1C025607C()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C02560DC(void *a1)
{
  return FormatStateMachineInlineInput.Scope.encode(to:)(a1);
}

uint64_t sub_1C02560F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatStateMachineInlineInput.init(from:)(a1, a2);
}

uint64_t sub_1C0256110(void *a1)
{
  return FormatStateMachineInlineInput.encode(to:)(a1);
}

uint64_t _s8NewsFeed29FormatStateMachineInlineInputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = 0, (sub_1C1520A9C() & 1) != 0))
  {
    if (v2) {
      uint64_t v6 = 0x6F74656C676E6973;
    }
    else {
      uint64_t v6 = 0x65636E6174736E69;
    }
    if (v2) {
      unint64_t v7 = 0xE90000000000006ELL;
    }
    else {
      unint64_t v7 = 0xE800000000000000;
    }
    if (v3) {
      uint64_t v8 = 0x6F74656C676E6973;
    }
    else {
      uint64_t v8 = 0x65636E6174736E69;
    }
    if (v3) {
      unint64_t v9 = 0xE90000000000006ELL;
    }
    else {
      unint64_t v9 = 0xE800000000000000;
    }
    if (v6 == v8 && v7 == v9) {
      char v5 = 1;
    }
    else {
      char v5 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

unint64_t sub_1C0256210()
{
  unint64_t result = qword_1EA198A08;
  if (!qword_1EA198A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A08);
  }
  return result;
}

unint64_t sub_1C0256264(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C0256294();
  unint64_t result = sub_1C02562E8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C0256294()
{
  unint64_t result = qword_1EA198A10;
  if (!qword_1EA198A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A10);
  }
  return result;
}

unint64_t sub_1C02562E8()
{
  unint64_t result = qword_1EB85F090;
  if (!qword_1EB85F090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F090);
  }
  return result;
}

unint64_t sub_1C025633C(uint64_t a1)
{
  unint64_t result = sub_1C0256364();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0256364()
{
  unint64_t result = qword_1EA198A18;
  if (!qword_1EA198A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A18);
  }
  return result;
}

uint64_t sub_1C02563B8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C025655C(a1, a2, a3, (uint64_t (*)(void))sub_1C02563F8, (uint64_t (*)(void))sub_1C025644C, (uint64_t (*)(void))sub_1C0256210);
}

unint64_t sub_1C02563F8()
{
  unint64_t result = qword_1EB85F098;
  if (!qword_1EB85F098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F098);
  }
  return result;
}

unint64_t sub_1C025644C()
{
  unint64_t result = qword_1EB85ED60;
  if (!qword_1EB85ED60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85ED60);
  }
  return result;
}

unint64_t sub_1C02564A0(uint64_t a1)
{
  unint64_t result = sub_1C02564C8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C02564C8()
{
  unint64_t result = qword_1EA198A20;
  if (!qword_1EA198A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A20);
  }
  return result;
}

uint64_t sub_1C025651C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C025655C(a1, a2, a3, (uint64_t (*)(void))sub_1C02565B0, (uint64_t (*)(void))sub_1C0256604, (uint64_t (*)(void))sub_1C0256658);
}

uint64_t sub_1C025655C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C02565B0()
{
  unint64_t result = qword_1EB85F0A0;
  if (!qword_1EB85F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85F0A0);
  }
  return result;
}

unint64_t sub_1C0256604()
{
  unint64_t result = qword_1EB85E6F0;
  if (!qword_1EB85E6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E6F0);
  }
  return result;
}

unint64_t sub_1C0256658()
{
  unint64_t result = qword_1EA198A28;
  if (!qword_1EA198A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A28);
  }
  return result;
}

uint64_t sub_1C02566AC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 16);
  return result;
}

unsigned char *sub_1C02566B8(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 16) = *result;
  return result;
}

uint64_t assignWithCopy for FormatPlaceholder(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FormatPlaceholder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatStateMachineInlineInput()
{
  return &type metadata for FormatStateMachineInlineInput;
}

unsigned char *storeEnumTagSinglePayload for FormatStateMachineInlineInput.Scope(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0256838);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatStateMachineInlineInput.Scope()
{
  return &type metadata for FormatStateMachineInlineInput.Scope;
}

ValueMetadata *type metadata accessor for DebugFormatUploadEntryTarget()
{
  return &type metadata for DebugFormatUploadEntryTarget;
}

BOOL static IssueCoverTraits.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t IssueCoverTraits.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t IssueCoverTraits.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C0256910()
{
  unint64_t result = qword_1EA198A30;
  if (!qword_1EA198A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A30);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IssueCoverTraits(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C0256A30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IssueCoverTraits()
{
  return &type metadata for IssueCoverTraits;
}

uint64_t sub_1C0256A68(uint64_t a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  type metadata accessor for FormatPuzzleEmbedViewController();
  uint64_t result = sub_1C151818C();
  if (result)
  {
    uint64_t v6 = result;
    unint64_t v7 = *(char **)(result + OBJC_IVAR____TtC8NewsFeed31FormatPuzzleEmbedViewController_puzzleEmbedViewController);
    uint64_t v8 = &v7[OBJC_IVAR____TtC8NewsFeed25PuzzleEmbedViewController_reuseIdentifier];
    swift_beginAccess();
    *(void *)uint64_t v8 = a1;
    *((void *)v8 + 1) = a2;
    unint64_t v9 = v7;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();

    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0256B38()
{
  return sub_1C0256BA0(&qword_1EA198A38);
}

uint64_t sub_1C0256B6C()
{
  return sub_1C0256BA0(&qword_1EA198A40);
}

uint64_t sub_1C0256BA0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatPuzzleEmbedViewController();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0256BE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1C0256A68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C0256C10(unsigned __int8 *a1, char *a2)
{
  return sub_1C14883B0(*a1, *a2);
}

uint64_t sub_1C0256C1C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0256D04()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0256DD4()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0256ED0(uint64_t a1)
{
  return sub_1BFC5F60C(a1);
}

uint64_t sub_1C0256EEC()
{
  uint64_t v2 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (uint64_t *)((char *)&v13[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF81B18(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return sub_1BFEFE8C8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v8 = *v4;
    uint64_t v7 = v4[1];
    uint64_t v9 = v4[2];
    v13[0] = v8;
    v13[1] = v7;
    v13[2] = v9;
    HIBYTE(v12) = 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C12ECBDC(v13, (char *)&v12 + 7);
    if (!v1)
    {
      uint64_t v11 = v10;
      swift_bridgeObjectRelease();
      sub_1C0F49260(v8, v7, v11, 0);
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0257064()
{
  return sub_1C0256EEC();
}

uint64_t FormatCommandOpenURL.bind(binder:context:)()
{
  return sub_1C02575E0();
}

uint64_t sub_1C0257098()
{
  return sub_1C02575E0();
}

unint64_t sub_1C02570B4()
{
  unint64_t result = qword_1EB87AFF0;
  if (!qword_1EB87AFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87AFF0);
  }
  return result;
}

uint64_t sub_1C0257108(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8NewsFeed20FormatCommandOpenURLO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatAbsoluteURL();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (uint64_t *)((char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v38 - v11);
  MEMORY[0x1F4188790](v13);
  char v15 = (char *)&v38 - v14;
  sub_1C0257E78();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v19 = (uint64_t *)((char *)&v38 + *(int *)(v18 + 56) - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = a1;
  uint64_t v21 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF81B18(v20, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
  sub_1BFF81B18(a2, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1BFF81B18((uint64_t)v21, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1BFEFE8C8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
LABEL_22:
      uint64_t v36 = 0;
      uint64_t v29 = (uint64_t (*)(void))sub_1C0257E78;
      goto LABEL_30;
    }
    sub_1BFCCD550((uint64_t)v19, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
    if ((MEMORY[0x1C18BDA40](v15, v6) & 1) != 0
      && (sub_1BFD81AE8(*(void *)&v15[*(int *)(v4 + 20)], *(void *)&v6[*(int *)(v4 + 20)]) & 1) != 0)
    {
      sub_1BFEFE8C8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
      sub_1BFEFE8C8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
      uint64_t v36 = 1;
LABEL_29:
      uint64_t v29 = (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL;
      goto LABEL_30;
    }
    sub_1BFEFE8C8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
    sub_1BFEFE8C8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatAbsoluteURL);
    goto LABEL_28;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81B18((uint64_t)v21, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
    uint64_t v24 = *v12;
    uint64_t v23 = v12[1];
    uint64_t v25 = v12[2];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = v19[2];
      BOOL v27 = v24 == *v19 && v23 == v19[1];
      if (v27 || (sub_1C1520A9C() & 1) != 0)
      {
        char v28 = sub_1BFD81AE8(v25, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v29 = (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL;
        if (v28) {
          goto LABEL_20;
        }
        goto LABEL_28;
      }
      goto LABEL_27;
    }
    goto LABEL_21;
  }
  sub_1BFF81B18((uint64_t)v21, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
  uint64_t v31 = *v9;
  uint64_t v30 = v9[1];
  uint64_t v32 = v9[2];
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v33 = v19[2];
  BOOL v34 = v31 == *v19 && v30 == v19[1];
  if (!v34 && (sub_1C1520A9C() & 1) == 0)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v35 = sub_1C00E3FD8(v32, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t v29 = (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL;
  if ((v35 & 1) == 0)
  {
LABEL_28:
    uint64_t v36 = 0;
    goto LABEL_29;
  }
LABEL_20:
  uint64_t v36 = 1;
LABEL_30:
  sub_1BFEFE8C8((uint64_t)v21, v29);
  return v36;
}

uint64_t sub_1C02575E0()
{
  sub_1C0257DAC(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v15[-1] - v3;
  uint64_t v5 = type metadata accessor for FormatCommandOpenURL();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF81B18(v0, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return sub_1BFEFE8C8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
  }
  if (EnumCaseMultiPayload == 1) {
    goto LABEL_6;
  }
  uint64_t v11 = *v7;
  uint64_t v10 = v7[1];
  uint64_t v12 = v7[2];
  v15[0] = v11;
  v15[1] = v10;
  v15[2] = v12;
  char v16 = 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C12ECBDC(v15, &v16);
  if (v1)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0EC63F8(v11, v10, v13, 1, (uint64_t)v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1C0257E00((uint64_t)v4);
  }
}

uint64_t sub_1C02577D8(void *a1)
{
  a1[1] = sub_1C0257884(&qword_1EB876B30, (void (*)(uint64_t))type metadata accessor for FormatCommandOpenURL);
  a1[2] = sub_1C0257884(&qword_1EB85BB90, (void (*)(uint64_t))type metadata accessor for FormatCommandOpenURL);
  uint64_t result = sub_1C0257884(&qword_1EA198A48, (void (*)(uint64_t))type metadata accessor for FormatCommandOpenURL);
  a1[3] = result;
  return result;
}

uint64_t sub_1C0257884(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatCommandOpenURL(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v10 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v11 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for FormatCommandOpenURL(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1BFEFE8C8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v5 = sub_1C1515FDC();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        uint64_t v6 = type metadata accessor for FormatAbsoluteURL();
        *(void *)((char *)a1 + *(int *)(v6 + 20)) = *(void *)((char *)a2 + *(int *)(v6 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for FormatURL(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_1C1515FDC();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for FormatAbsoluteURL();
    *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for FormatCommandOpenURL(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFEFE8C8((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for FormatCommandOpenURL);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_1C1515FDC();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for FormatAbsoluteURL();
      *(void *)&a1[*(int *)(v7 + 20)] = *(void *)&a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for FormatCommandOpenURL.CodingType()
{
  return &type metadata for FormatCommandOpenURL.CodingType;
}

unint64_t sub_1C0257D58()
{
  unint64_t result = qword_1EA198A50;
  if (!qword_1EA198A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A50);
  }
  return result;
}

void sub_1C0257DAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C0257E00(uint64_t a1)
{
  sub_1C0257DAC(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C0257E78()
{
  if (!qword_1EA198A58)
  {
    type metadata accessor for FormatCommandOpenURL();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA198A58);
    }
  }
}

id FormatSportsEventMatchupColorProvider.leftColor.getter()
{
  return *(id *)(v0 + 16);
}

id FormatSportsEventMatchupColorProvider.rightColor.getter()
{
  return *(id *)(v0 + 24);
}

void *sub_1C0257EEC()
{
  unint64_t result = _s8NewsFeed37FormatSportsEventMatchupColorProviderC14competitorTagsACSaySo17FCSportsProviding_pG_tcfC_0(MEMORY[0x1E4FBC860]);
  qword_1EA2B4F08 = (uint64_t)result;
  return result;
}

UIColor sub_1C0257F18()
{
  sub_1BFF6B690();
  v0._countAndFlagsBits = 0x333945384538;
  v0._object = (void *)0xE600000000000000;
  result.super.isa = UIColor.init(hex:)(v0).super.isa;
  qword_1EB93C630 = (uint64_t)result.super.isa;
  return result;
}

void *FormatSportsEventMatchupColorProvider.__allocating_init(sportsEvent:)(void *a1)
{
  id v1 = objc_msgSend(a1, sel_eventCompetitorTags);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1C017E704();
    uint64_t v3 = (void *)sub_1C151EBCC();
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v4 = _s8NewsFeed37FormatSportsEventMatchupColorProviderC14competitorTagsACSaySo17FCSportsProviding_pG_tcfC_0(v3);
  swift_unknownObjectRelease();
  return v4;
}

void *FormatSportsEventMatchupColorProvider.subscript.getter(void *a1)
{
  swift_getObjectType();
  return sub_1C02583B4(a1, v1);
}

void *sub_1C0258020(id a1, void *a2)
{
  uint64_t v3 = v2;
  if (a1
    && (id v6 = objc_msgSend(a1, sel_sportsTheme)) != 0
    && (id v7 = objc_msgSend(v6, sel_sportsPrimaryColor),
        swift_unknownObjectRelease(),
        v7))
  {
    id v8 = objc_msgSend(v7, sel_ne_color);

    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    if (qword_1EB870538 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EB93C630;
    if (!a2) {
      goto LABEL_12;
    }
  }
  id v9 = objc_msgSend(a2, sel_sportsTheme);
  if (v9)
  {
    id v10 = objc_msgSend(v9, sel_sportsPrimaryColor);
    swift_unknownObjectRelease();
    if (v10)
    {
      id v11 = objc_msgSend(v10, sel_ne_color);

      goto LABEL_15;
    }
  }
LABEL_12:
  if (qword_1EB870538 != -1) {
    swift_once();
  }
  id v11 = (id)qword_1EB93C630;
LABEL_15:
  if (objc_msgSend(v8, sel__isSimilarToColor_withinPercentage_, v11, 0.12))
  {
    id v12 = objc_msgSend(self, sel_whiteColor);
    uint64_t v13 = sub_1C151FA2C();

    if (v13)
    {

      id v11 = (id)v13;
    }
  }
  uint64_t v14 = MEMORY[0x1E4FBC868];
  if (a1)
  {
    id v15 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    uint64_t v16 = sub_1C151E62C();
    uint64_t v18 = v17;

    id v19 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C106543C((uint64_t)v19, v16, v18, isUniquelyReferenced_nonNull_native);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a2)
  {
    id v21 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    uint64_t v22 = sub_1C151E62C();
    uint64_t v24 = v23;

    id v25 = v11;
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    sub_1C106543C((uint64_t)v25, v22, v24, v26);
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  v3[2] = v8;
  v3[3] = v11;
  v3[4] = v14;
  return v3;
}

uint64_t FormatSportsEventMatchupColorProvider.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSportsEventMatchupColorProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void *sub_1C02583B4(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 32);
  id v3 = objc_msgSend(a1, sel_identifier);
  uint64_t v4 = sub_1C151E62C();
  uint64_t v6 = v5;

  if (*(void *)(v2 + 16) && (unint64_t v7 = sub_1BFEF2D8C(v4, v6), (v8 & 1) != 0))
  {
    id v9 = *(void **)(*(void *)(v2 + 56) + 8 * v7);
    id v10 = v9;
  }
  else
  {
    id v9 = 0;
  }
  swift_bridgeObjectRelease();
  return v9;
}

void *_s8NewsFeed37FormatSportsEventMatchupColorProviderC14competitorTagsACSaySo17FCSportsProviding_pG_tcfC_0(void *a1)
{
  sub_1C02585CC();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1;
  sub_1C0258630();
  sub_1C00BC084();
  sub_1C151843C();
  id v12 = 0;
  sub_1C151842C();
  unint64_t v7 = v13;
  v11[1] = 1;
  sub_1C151842C();
  char v8 = v12;
  type metadata accessor for FormatSportsEventMatchupColorProvider();
  swift_allocObject();
  id v9 = sub_1C0258020(v7, v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t type metadata accessor for FormatSportsEventMatchupColorProvider()
{
  return self;
}

uint64_t method lookup function for FormatSportsEventMatchupColorProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatSportsEventMatchupColorProvider);
}

void sub_1C02585CC()
{
  if (!qword_1EB863D48)
  {
    sub_1C0258630();
    sub_1C00BC084();
    unint64_t v0 = sub_1C151841C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863D48);
    }
  }
}

void sub_1C0258630()
{
  if (!qword_1EB86B310)
  {
    sub_1C017E704();
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB86B310);
    }
  }
}

uint64_t FCAssetHandle.loadData(cachePolicy:)()
{
  sub_1C0259634();
  sub_1C151932C();
  *(void *)(swift_allocObject() + 16) = v0;
  id v1 = v0;
  uint64_t v2 = (void *)sub_1C1518E7C();
  uint64_t v3 = sub_1C1518FFC();
  swift_release();
  swift_release();

  return v3;
}

uint64_t FCAssetHandle.load()()
{
  id v1 = objc_msgSend(v0, sel_filePath);
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1C151E62C();

    sub_1C01D7424();
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    MEMORY[0x1F4188790](0);
    sub_1C01D7424();
    swift_allocObject();
    return sub_1C151911C();
  }
}

uint64_t FCAssetHandle.loadAsset()()
{
  id v1 = objc_msgSend(v0, sel_filePath);
  if (v1)
  {

    sub_1C025987C(0, (unint64_t *)&qword_1EB86C280, (void (*)(uint64_t))sub_1BFF6C3A8);
    swift_allocObject();
    id v2 = v0;
    return sub_1C151908C();
  }
  else
  {
    MEMORY[0x1F4188790](0);
    sub_1C025987C(v4, (unint64_t *)&qword_1EB86C280, (void (*)(uint64_t))sub_1BFF6C3A8);
    swift_allocObject();
    return sub_1C151911C();
  }
}

uint64_t sub_1C025894C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  id v11 = (void *)swift_allocObject();
  void v11[2] = a5;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = sub_1C025A26C;
  v11[6] = v10;
  v16[4] = sub_1C025A2A8;
  v16[5] = v11;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  void v16[2] = sub_1BFC9FC68;
  v16[3] = &block_descriptor_25;
  id v12 = _Block_copy(v16);
  swift_retain();
  id v13 = a5;
  swift_retain();
  swift_release();
  id v14 = objc_msgSend(v13, sel_downloadIfNeededWithCompletion_, v12);
  _Block_release(v12);
  return swift_unknownObjectRelease();
}

void sub_1C0258A98(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = MEMORY[0x1F4188790](v7).n128_u64[0];
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a1, sel_filePath, v9);
  if (v12)
  {
    id v13 = v12;
    uint64_t v14 = sub_1C151E62C();
    uint64_t v16 = v15;

    a4(v14, v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    _s6ErrorsOMa_0();
    sub_1BFC91AC4(&qword_1EA198A60, (void (*)(uint64_t))_s6ErrorsOMa_0);
    uint64_t v17 = (void *)swift_allocError();
    uint64_t v19 = v18;
    id v20 = objc_msgSend(a1, sel_remoteURL);
    sub_1C1515F1C();

    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v19, v11, v7);
    swift_storeEnumTagMultiPayload();
    a2(v17);
  }
}

uint64_t sub_1C0258C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  id v11 = (void *)swift_allocObject();
  void v11[2] = a5;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = sub_1BFD35658;
  v11[6] = v10;
  v16[4] = sub_1C025A21C;
  v16[5] = v11;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  void v16[2] = sub_1BFC9FC68;
  v16[3] = &block_descriptor_16;
  id v12 = _Block_copy(v16);
  swift_retain();
  id v13 = a5;
  swift_retain();
  swift_release();
  id v14 = objc_msgSend(v13, sel_downloadIfNeededWithCompletion_, v12);
  _Block_release(v12);
  return swift_unknownObjectRelease();
}

void sub_1C0258DE8(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void *))
{
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = MEMORY[0x1F4188790](v7).n128_u64[0];
  id v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_dataProvider, v9))
  {
    a4(a1);
    swift_unknownObjectRelease();
  }
  else
  {
    _s6ErrorsOMa_0();
    sub_1BFC91AC4(&qword_1EA198A60, (void (*)(uint64_t))_s6ErrorsOMa_0);
    id v12 = (void *)swift_allocError();
    uint64_t v14 = v13;
    id v15 = objc_msgSend(a1, sel_remoteURL);
    sub_1C1515F1C();

    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14, v11, v7);
    swift_storeEnumTagMultiPayload();
    a2(v12);
  }
}

uint64_t FCAssetHandle.loadDataProvider(cachePolicy:)(uint64_t *a1)
{
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = MEMORY[0x1F4188790](v3).n128_u64[0];
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  char v9 = *((unsigned char *)a1 + 8);
  id v10 = objc_msgSend(v1, sel_dataProvider, v5);
  if (v10)
  {
    v16[1] = v10;
    sub_1C025987C(0, (unint64_t *)&unk_1EB885070, (void (*)(uint64_t))sub_1C0259634);
    swift_allocObject();
    return sub_1C151908C();
  }
  else
  {
    if (v8) {
      char v12 = v9;
    }
    else {
      char v12 = 0;
    }
    if (v12)
    {
      _s6ErrorsOMa_0();
      sub_1BFC91AC4(&qword_1EA198A60, (void (*)(uint64_t))_s6ErrorsOMa_0);
      swift_allocError();
      uint64_t v14 = v13;
      id v15 = objc_msgSend(v1, sel_remoteURL);
      sub_1C1515F1C();

      (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v14, v7, v3);
      swift_storeEnumTagMultiPayload();
      sub_1C025987C(0, (unint64_t *)&unk_1EB885070, (void (*)(uint64_t))sub_1C0259634);
      swift_allocObject();
      return sub_1C151906C();
    }
    else
    {
      MEMORY[0x1F4188790](0);
      v16[-2] = v1;
      sub_1C025987C(0, (unint64_t *)&unk_1EB885070, (void (*)(uint64_t))sub_1C0259634);
      swift_allocObject();
      return sub_1C151911C();
    }
  }
}

uint64_t sub_1C0259270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  id v11 = (void *)swift_allocObject();
  void v11[2] = a5;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = sub_1BFD35658;
  v11[6] = v10;
  v16[4] = sub_1C025A200;
  v16[5] = v11;
  v16[0] = MEMORY[0x1E4F143A8];
  v16[1] = 1107296256;
  void v16[2] = sub_1BFC9FC68;
  v16[3] = &block_descriptor_12;
  char v12 = _Block_copy(v16);
  swift_retain();
  id v13 = a5;
  swift_retain();
  swift_release();
  id v14 = objc_msgSend(v13, sel_downloadIfNeededWithCompletion_, v12);
  _Block_release(v12);
  return swift_unknownObjectRelease();
}

void sub_1C02593BC(void *a1, void (*a2)(void *), uint64_t a3, void (*a4)(void))
{
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v8 = *(void *)(v7 - 8);
  *(void *)&double v9 = MEMORY[0x1F4188790](v7).n128_u64[0];
  id v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_dataProvider, v9))
  {
    a4();
    swift_unknownObjectRelease();
  }
  else
  {
    _s6ErrorsOMa_0();
    sub_1BFC91AC4(&qword_1EA198A60, (void (*)(uint64_t))_s6ErrorsOMa_0);
    char v12 = (void *)swift_allocError();
    uint64_t v14 = v13;
    id v15 = objc_msgSend(a1, sel_remoteURL);
    sub_1C1515F1C();

    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14, v11, v7);
    swift_storeEnumTagMultiPayload();
    a2(v12);
  }
}

uint64_t sub_1C02595A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = a2;
  char v5 = a3 & 1;
  return FCAssetHandle.loadDataProvider(cachePolicy:)(&v4);
}

uint64_t sub_1C02595EC()
{
  char v1 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = v1;
  return FCAssetHandle.loadDataProvider(cachePolicy:)(&v3);
}

unint64_t sub_1C0259634()
{
  unint64_t result = qword_1EB8901F8;
  if (!qword_1EB8901F8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB8901F8);
  }
  return result;
}

void sub_1C025968C(id *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C1515FDC();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = MEMORY[0x1F4188790](v6).n128_u64[0];
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(*a1, sel_data, v8);
  if (v11)
  {
    char v12 = v11;
    uint64_t v13 = sub_1C151606C();
    uint64_t v15 = v14;

    *a3 = v13;
    a3[1] = v15;
  }
  else
  {
    _s6ErrorsOMa_0();
    sub_1BFC91AC4(&qword_1EA198A60, (void (*)(uint64_t))_s6ErrorsOMa_0);
    swift_allocError();
    uint64_t v17 = v16;
    id v18 = objc_msgSend(a2, sel_remoteURL);
    sub_1C1515F1C();

    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v17, v10, v6);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
}

uint64_t sub_1C025983C()
{
  return swift_deallocObject();
}

uint64_t sub_1C0259874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C0259270(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_1C025987C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151917C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t _s6ErrorsOMa_0()
{
  uint64_t result = qword_1EA198A68;
  if (!qword_1EA198A68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FCAssetHandle.remoteURLAbsoluteString.getter()
{
  uint64_t v1 = sub_1C1515FDC();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = MEMORY[0x1F4188790](v1).n128_u64[0];
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(v0, sel_remoteURL, v3);
  sub_1C1515F1C();

  uint64_t v7 = sub_1C1515E2C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v7;
}

uint64_t FCAssetHandle.fallbackImage.getter()
{
  return 0;
}

uint64_t FCAssetHandle.download(withGroup:)(uint64_t a1)
{
  id v2 = objc_msgSend(v1, sel_downloadIfNeededWithGroup_, a1);
  return swift_unknownObjectRelease();
}

id FCAssetHandle.assetDataProvider.getter@<X0>(void *a1@<X8>)
{
  a1[3] = sub_1BFF6C3A8();
  a1[4] = sub_1BFC91AC4((unint64_t *)&unk_1EB883210, (void (*)(uint64_t))sub_1BFF6C3A8);
  *a1 = v3;
  return v3;
}

uint64_t sub_1C0259AEC(uint64_t a1)
{
  id v2 = objc_msgSend(*v1, sel_downloadIfNeededWithGroup_, a1);
  return swift_unknownObjectRelease();
}

uint64_t FCAssetHandle.data.getter()
{
  id v1 = objc_msgSend(v0, sel_dataProvider);
  uint64_t v2 = (uint64_t)v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_data);
    swift_unknownObjectRelease();
    if (v3)
    {
      uint64_t v2 = sub_1C151606C();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

id FCAssetHandle.isRawFileConsumable.getter()
{
  id v1 = objc_msgSend(v0, sel_dataProvider);
  if (!v1) {
    return 0;
  }
  id v2 = objc_msgSend(v1, sel_isRawFileConsumable);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1C0259C20()
{
  id v1 = objc_msgSend(*v0, sel_dataProvider);
  uint64_t v2 = (uint64_t)v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_data);
    swift_unknownObjectRelease();
    if (v3)
    {
      uint64_t v2 = sub_1C151606C();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t *sub_1C0259CB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = sub_1C1515FDC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0259E38(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    uint64_t v3 = sub_1C1515FDC();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

uint64_t sub_1C0259EB4(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C0259F44(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C0259FE4(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C0259FE4(uint64_t a1)
{
  uint64_t v2 = _s6ErrorsOMa_0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C025A040(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1C025A0D0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C0259FE4(a1);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C025A170()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1C025A200()
{
  return sub_1C025A2C0((uint64_t (*)(void, void, void, void, void))sub_1C02593BC);
}

uint64_t sub_1C025A21C()
{
  return sub_1C025A2C0((uint64_t (*)(void, void, void, void, void))sub_1C0258DE8);
}

uint64_t sub_1C025A234()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C025A26C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(void *))(v2 + 16);
  v5[0] = a1;
  v5[1] = a2;
  return v3(v5);
}

uint64_t sub_1C025A2A8()
{
  return sub_1C025A2C0((uint64_t (*)(void, void, void, void, void))sub_1C0258A98);
}

uint64_t sub_1C025A2C0(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

NewsFeed::FormatPatternDirection_optional __swiftcall FormatPatternDirection.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C15205AC();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t FormatPatternDirection.rawValue.getter()
{
  if (*v0) {
    return 0x6F546D6F74746F62;
  }
  else {
    return 0x746F426F54706F74;
  }
}

uint64_t sub_1C025A398(char *a1, char *a2)
{
  return sub_1C1483E18(*a1, *a2);
}

unint64_t sub_1C025A3A8()
{
  unint64_t result = qword_1EA198A78;
  if (!qword_1EA198A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A78);
  }
  return result;
}

uint64_t sub_1C025A3FC()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C025A490()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C025A510()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatPatternDirection_optional sub_1C025A5A0(Swift::String *a1)
{
  return FormatPatternDirection.init(rawValue:)(*a1);
}

void sub_1C025A5AC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746F426F54706F74;
  if (*v1) {
    uint64_t v2 = 0x6F546D6F74746F62;
  }
  unint64_t v3 = 0xEB000000006D6F74;
  if (*v1) {
    unint64_t v3 = 0xEB00000000706F54;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1C025A5FC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C025A62C();
  unint64_t result = sub_1C025A680();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C025A62C()
{
  unint64_t result = qword_1EA198A80;
  if (!qword_1EA198A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A80);
  }
  return result;
}

unint64_t sub_1C025A680()
{
  unint64_t result = qword_1EB860650;
  if (!qword_1EB860650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860650);
  }
  return result;
}

unint64_t sub_1C025A6D4(uint64_t a1)
{
  unint64_t result = sub_1C025A6FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C025A6FC()
{
  unint64_t result = qword_1EA198A88;
  if (!qword_1EA198A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A88);
  }
  return result;
}

unint64_t sub_1C025A750(void *a1)
{
  a1[1] = sub_1C025A788();
  a1[2] = sub_1C025A7DC();
  unint64_t result = sub_1C025A3A8();
  a1[3] = result;
  return result;
}

unint64_t sub_1C025A788()
{
  unint64_t result = qword_1EB860658;
  if (!qword_1EB860658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860658);
  }
  return result;
}

unint64_t sub_1C025A7DC()
{
  unint64_t result = qword_1EB860648;
  if (!qword_1EB860648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860648);
  }
  return result;
}

uint64_t sub_1C025A830()
{
  return sub_1C151EB5C();
}

uint64_t sub_1C025A890(void *a1)
{
  return FormatPatternDirection.encode(to:)(a1);
}

unsigned char *storeEnumTagSinglePayload for FormatPatternDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C025A974);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPatternDirection()
{
  return &type metadata for FormatPatternDirection;
}

uint64_t dispatch thunk of ResourceBackedType.backingResource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t FormatItemCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(v3 + 8);
  if (*(void *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1BFEF2D8C(a1, a2);
    if (v9)
    {
      unint64_t v10 = v8;
      uint64_t v11 = *(void *)(v5 + 56);
      sub_1C0037C88();
      uint64_t v13 = v12;
      uint64_t v14 = *(void *)(v12 - 8);
      sub_1C0037450(v11 + *(void *)(v14 + 72) * v10, a3);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
    }
    else
    {
      sub_1C0037C88();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a3, 1, 1, v18);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C0037C88();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    return v16(a3, 1, 1, v15);
  }
}

uint64_t FormatItemCollection.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1C0038168(0, (unint64_t *)&qword_1EB879D68, MEMORY[0x1E4FBB320]);
  sub_1BFC95D10(&qword_1EB85C380, &qword_1EB85B690);
  sub_1C1520B2C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatItemCollection.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

NewsFeed::FormatItemCollection __swiftcall FormatItemCollection.init()()
{
  unint64_t v1 = v0;
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = (void *)sub_1BFD8BB88(MEMORY[0x1E4FBC860]);
  void *v1 = v2;
  v1[1] = v3;
  result.itemsByIdentifier._rawValue = v4;
  result.items._rawValue = v3;
  return result;
}

BOOL sub_1C025ACA4()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

unint64_t sub_1C025ACB8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  unint64_t result = sub_1BFD8BB88(MEMORY[0x1E4FBC860]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

__n128 sub_1C025ACEC(unint64_t *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v7[4] = *(_OWORD *)(a2 + 64);
  v7[5] = v3;
  uint64_t v8 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  _OWORD v7[2] = *(_OWORD *)(a2 + 32);
  v7[3] = v5;
  sub_1C0037518(a1, (uint64_t)v7, *v2);
  return result;
}

void *assignWithCopy for FormatSizeEquation(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for FormatSizeEquation(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatItemCollection()
{
  return &type metadata for FormatItemCollection;
}

uint64_t sub_1C025ADE4(uint64_t a1, uint64_t a2)
{
  sub_1C0037C88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C025AE48(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  unint64_t v3 = *(void *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFE74E64(v2, v3);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t FormatPuzzleStatistic.identifier.getter()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  return v2;
}

uint64_t FormatPuzzleStatistic.puzzleType.getter()
{
  return swift_retain();
}

uint64_t FormatPuzzleStatistic.statistic.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleStatistic.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPuzzleStatistic.selectors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*FormatPuzzleStatistic.selectors.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPuzzleStatistic.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatPuzzleStatistic.properties.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatPuzzleStatistic.properties.modify())(void)
{
  return nullsub_1;
}

uint64_t FormatPuzzleStatistic.init(puzzleType:statistic:selectors:properties:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1C025B058()
{
  uint64_t result = 0x7954656C7A7A7570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6974736974617473;
      break;
    case 2:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 3:
      uint64_t result = 0x69747265706F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C025B0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C025C32C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C025B120(uint64_t a1)
{
  unint64_t v2 = sub_1C025BC1C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C025B15C(uint64_t a1)
{
  unint64_t v2 = sub_1C025BC1C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatPuzzleStatistic.encode(to:)(void *a1)
{
  sub_1C025BCE4(0, &qword_1EB86EDD8, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v18 = v1[2];
  uint64_t v19 = v9;
  uint64_t v11 = v1[3];
  uint64_t v16 = v1[4];
  uint64_t v17 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C025BC1C();
  sub_1C1520F0C();
  uint64_t v22 = v10;
  LOBYTE(v20) = 0;
  type metadata accessor for FormatPuzzleType(0);
  sub_1C025BD48(&qword_1EB86C5B8, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType);
  sub_1C152080C();
  if (!v2)
  {
    uint64_t v14 = v16;
    uint64_t v13 = v17;
    LOBYTE(v22) = 1;
    sub_1C15207CC();
    if (*(void *)(v13 + 16))
    {
      char v21 = 2;
      swift_bridgeObjectRetain_n();
      uint64_t v15 = sub_1BFE71F8C(v13);
      swift_bridgeObjectRelease();
      id v20 = v15;
      swift_retain();
      sub_1BFD8BB48((uint64_t *)&v20);
      swift_release();
      uint64_t v22 = (uint64_t)v20;
      sub_1C025BC70();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
      sub_1BFD8BA00();
      sub_1C1520BAC();
      swift_bridgeObjectRelease();
      swift_release();
    }
    if (*(void *)(v14 + 16))
    {
      LOBYTE(v20) = 3;
      uint64_t v22 = v14;
      sub_1C025BC70();
      sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879DC0);
      sub_1C00FCE94();
      sub_1C1520BAC();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t FormatPuzzleStatistic.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t v44 = a2;
  sub_1C00FC8DC();
  uint64_t v43 = v3;
  uint64_t v41 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v7 = v6;
  uint64_t v42 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C025BCE4(0, &qword_1EB86E080, MEMORY[0x1E4FBBDC0]);
  uint64_t v11 = v10;
  uint64_t v45 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v36 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C025BC1C();
  uint64_t v14 = v46;
  sub_1C1520EBC();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v15 = v9;
  uint64_t v16 = v7;
  uint64_t v17 = v45;
  type metadata accessor for FormatPuzzleType(0);
  char v52 = 0;
  sub_1C025BD48(&qword_1EB86C5C0, (void (*)(uint64_t))type metadata accessor for FormatPuzzleType);
  sub_1C15206EC();
  uint64_t v19 = v13;
  uint64_t v20 = v53;
  char v51 = 1;
  swift_retain();
  uint64_t v21 = sub_1C152069C();
  uint64_t v46 = v22;
  uint64_t v38 = v21;
  uint64_t v40 = v20;
  char v50 = 2;
  swift_bridgeObjectRetain();
  char v23 = sub_1C152071C();
  uint64_t v39 = 0;
  if (v23)
  {
    char v47 = 2;
    sub_1C025BD48(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    sub_1C15206EC();
    uint64_t v37 = v16;
    uint64_t v24 = v19;
    uint64_t v25 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v37);
  }
  else
  {
    uint64_t v24 = v19;
    uint64_t v25 = MEMORY[0x1E4FBC870];
  }
  char v49 = 3;
  swift_bridgeObjectRetain();
  uint64_t v26 = v11;
  if (sub_1C152071C())
  {
    char v48 = 3;
    sub_1C025BD48(&qword_1EB85F2C8, (void (*)(uint64_t))sub_1C00FC8DC);
    uint64_t v27 = v43;
    sub_1C15206EC();
    uint64_t v28 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v27);
  }
  else
  {
    uint64_t v28 = MEMORY[0x1E4FBC860];
  }
  uint64_t v29 = v44;
  uint64_t v30 = v26;
  uint64_t v31 = v17;
  uint64_t v32 = (uint64_t)a1;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v30);
  uint64_t v33 = v40;
  swift_retain();
  uint64_t v34 = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = v38;
  *uint64_t v29 = v33;
  v29[1] = v35;
  v29[2] = v34;
  uint64_t v29[3] = v25;
  v29[4] = v28;
  __swift_destroy_boxed_opaque_existential_1(v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1C025BADC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatPuzzleStatistic.init(from:)(a1, a2);
}

uint64_t sub_1C025BAF4(void *a1)
{
  return FormatPuzzleStatistic.encode(to:)(a1);
}

uint64_t _s8NewsFeed21FormatPuzzleStatisticV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v8 = *a2;
  uint64_t v7 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v11 = a2[4];
  type metadata accessor for FormatPuzzleType(0);
  if ((static FormatPuzzleType.== infix(_:_:)(v2, v8) & 1) == 0) {
    return 0;
  }
  BOOL v12 = v3 == v7 && v5 == v10;
  if (!v12 && (sub_1C1520A9C() & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_1BFEFAE14(v4, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v14 = sub_1C00E57C0(v6, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

unint64_t sub_1C025BC1C()
{
  unint64_t result = qword_1EB86CA68;
  if (!qword_1EB86CA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CA68);
  }
  return result;
}

unint64_t sub_1C025BC70()
{
  unint64_t result = qword_1EA198A98;
  if (!qword_1EA198A98)
  {
    sub_1C025BCE4(255, &qword_1EB86EDD8, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198A98);
  }
  return result;
}

void sub_1C025BCE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C025BC1C();
    unint64_t v7 = a3(a1, &type metadata for FormatPuzzleStatistic.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C025BD48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C025BD90(void *a1)
{
  a1[1] = sub_1C025BDC8();
  a1[2] = sub_1C025BE1C();
  unint64_t result = sub_1C025BE70();
  a1[3] = result;
  return result;
}

unint64_t sub_1C025BDC8()
{
  unint64_t result = qword_1EB86CA90;
  if (!qword_1EB86CA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CA90);
  }
  return result;
}

unint64_t sub_1C025BE1C()
{
  unint64_t result = qword_1EB86CA80;
  if (!qword_1EB86CA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CA80);
  }
  return result;
}

unint64_t sub_1C025BE70()
{
  unint64_t result = qword_1EA198AA0;
  if (!qword_1EA198AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198AA0);
  }
  return result;
}

uint64_t sub_1C025BEC4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C025BED0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1C025BF14@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C025BF20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + 32) = v3;
  return result;
}

uint64_t destroy for FormatPuzzleStatistic()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FormatPuzzleStatistic(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FormatPuzzleStatistic(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatPuzzleStatistic(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatPuzzleStatistic()
{
  return &type metadata for FormatPuzzleStatistic;
}

unsigned char *storeEnumTagSinglePayload for FormatPuzzleStatistic.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C025C1ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleStatistic.CodingKeys()
{
  return &type metadata for FormatPuzzleStatistic.CodingKeys;
}

unint64_t sub_1C025C228()
{
  unint64_t result = qword_1EA198AA8;
  if (!qword_1EA198AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198AA8);
  }
  return result;
}

unint64_t sub_1C025C280()
{
  unint64_t result = qword_1EB86CA78;
  if (!qword_1EB86CA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CA78);
  }
  return result;
}

unint64_t sub_1C025C2D8()
{
  unint64_t result = qword_1EB86CA70;
  if (!qword_1EB86CA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86CA70);
  }
  return result;
}

uint64_t sub_1C025C32C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7954656C7A7A7570 && a2 == 0xEA00000000006570;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974736974617473 && a2 == 0xE900000000000063 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

id SportsLineScoreDataVisualization.leagueTag.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventLeagueTag);
  return v1;
}

uint64_t SportsLineScoreDataVisualization.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsLineScoreDataVisualization.competitorTags.getter()
{
  id v1 = objc_msgSend(*(id *)(v0 + 48), sel_eventCompetitorTags);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  BOOL v2 = v1;
  sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB86B430);
  uint64_t v3 = sub_1C151EBCC();

  return v3;
}

uint64_t SportsLineScoreDataVisualization.umcCanonicalId.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsLineScoreDataVisualization.event.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SportsLineScoreDataVisualization.embedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl, a1);
}

uint64_t SportsLineScoreDataVisualization.urlDataSources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsLineScoreDataVisualization.roster.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_roster);
  return swift_bridgeObjectRetain();
}

uint64_t SportsLineScoreDataVisualization.config.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config);
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 8);
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 16);
  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 24);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 32);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 40);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1C025C670(v2, v3);
}

uint64_t sub_1C025C670(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t SportsLineScoreDataVisualization.configuredEmbedUrl.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C025C6EC(&OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_configuredEmbedUrl, a1);
}

uint64_t sub_1C025C6EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t SportsLineScoreDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v14 = swift_allocObject();
  SportsLineScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

void *SportsLineScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v8 = v7;
  uint64_t v37 = a5;
  uint64_t v38 = a1;
  uint64_t v42 = a4;
  uint64_t v43 = a3;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v39 = v13;
  uint64_t v40 = v14;
  __n128 v15 = MEMORY[0x1F4188790](v13);
  uint64_t v41 = (uint64_t)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a6;
  uint64_t v18 = *a7;
  uint64_t v19 = a7[1];
  uint64_t v20 = a7[2];
  uint64_t v21 = a7[3];
  uint64_t v22 = a7[4];
  uint64_t v36 = a7[5];
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v23 = v42;
  v8[6] = v43;
  (*(void (**)(uint64_t, uint64_t, __n128))(v24 + 16))((uint64_t)v8 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl, v23, v15);
  *(void *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources) = v37;
  *(void *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_roster) = v17;
  uint64_t v25 = (void *)((char *)v8 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config);
  *uint64_t v25 = v18;
  v25[1] = v19;
  void v25[2] = v20;
  v25[3] = v21;
  uint64_t v26 = v22;
  v25[4] = v22;
  uint64_t v27 = v36;
  v25[5] = v36;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1C025C670(v18, v19);
  uint64_t v44 = sub_1C1515E2C();
  uint64_t v45 = v28;
  sub_1C151E80C();
  sub_1C151E80C();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v29 = v45;
  v8[2] = v44;
  v8[3] = v29;
  uint64_t v44 = v18;
  uint64_t v45 = v19;
  uint64_t v46 = v20;
  uint64_t v47 = v21;
  uint64_t v48 = v26;
  uint64_t v49 = v27;
  uint64_t v31 = v41;
  uint64_t v30 = v42;
  sub_1C0B98938(v42, &v44, 0xD00000000000001ALL, 0x80000001C1608E00, v41);
  swift_unknownObjectRelease();
  uint64_t v32 = v40;
  uint64_t v33 = v30;
  uint64_t v34 = v39;
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v33, v39);
  sub_1C025EF94(v18, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))((uint64_t)v8 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_configuredEmbedUrl, v31, v34);
  return v8;
}

uint64_t SportsLineScoreDataVisualization.with(config:)(uint64_t *a1)
{
  uint64_t v3 = sub_1C1515FDC();
  __n128 v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[3];
  uint64_t v12 = a1[4];
  uint64_t v11 = a1[5];
  uint64_t v13 = v1[4];
  uint64_t v21 = v1[5];
  uint64_t v22 = v1[6];
  uint64_t v23 = v13;
  (*(void (**)(char *, uint64_t, __n128))(v14 + 16))(v6, (uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl, v4);
  uint64_t v15 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources);
  uint64_t v16 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_roster);
  v24[5] = v11;
  uint64_t v25 = v16;
  v24[0] = v7;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v12;
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v21;
  swift_bridgeObjectRetain();
  uint64_t v19 = v22;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  SportsLineScoreDataVisualization.init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)(v23, v18, v19, (uint64_t)v6, v15, &v25, v24);
  return v17;
}

uint64_t SportsLineScoreDataVisualization.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  SportsLineScoreDataVisualization.init(from:)(a1);
  return v2;
}

char *SportsLineScoreDataVisualization.init(from:)(void *a1)
{
  uint64_t v39 = a1;
  uint64_t v2 = v1;
  uint64_t v40 = *(void *)v2;
  uint64_t v34 = sub_1C1515FDC();
  uint64_t v32 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v31 - v7;
  sub_1C025F004();
  uint64_t v10 = v9;
  uint64_t v33 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C025F1E4(0, &qword_1EA198AB8, MEMORY[0x1E4FBBDC0]);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v35 = v13;
  uint64_t v36 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v31 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C025F06C();
  uint64_t v37 = v16;
  uint64_t v17 = v38;
  uint64_t v18 = v2;
  sub_1C1520EBC();
  if (v17)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v38 = v8;
    uint64_t v31 = v5;
    LOBYTE(v41) = 0;
    uint64_t v19 = v35;
    *((void *)v2 + 4) = sub_1C152069C();
    *((void *)v2 + 5) = v20;
    LOBYTE(v41) = 1;
    sub_1C025F0C0(&qword_1EB863FA0, (void (*)(uint64_t))sub_1C025F004);
    sub_1C15206EC();
    sub_1C151948C();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
    *((void *)v2 + 6) = v41;
    LOBYTE(v41) = 2;
    uint64_t v21 = sub_1C025F0C0((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
    uint64_t v22 = v38;
    uint64_t v23 = v34;
    sub_1C15206EC();
    uint64_t v33 = v21;
    uint64_t v24 = v22;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v25(&v18[OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl], v24, v23);
    sub_1BFF5D684(0, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
    char v44 = 3;
    sub_1C025F264(&qword_1EB86B2E0, &qword_1EB86A8C0);
    uint64_t v38 = 0;
    sub_1C15206EC();
    *(void *)&v18[OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources] = v41;
    char v44 = 4;
    sub_1C025F108();
    sub_1C15206EC();
    *(void *)&v18[OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_roster] = v41;
    char v44 = 5;
    sub_1C025F15C();
    sub_1C152065C();
    uint64_t v26 = &v18[OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config];
    long long v27 = v42;
    *(_OWORD *)uint64_t v26 = v41;
    *((_OWORD *)v26 + 1) = v27;
    *((_OWORD *)v26 + 2) = v43;
    LOBYTE(v41) = 6;
    *((void *)v18 + 2) = sub_1C152069C();
    *((void *)v18 + 3) = v28;
    LOBYTE(v41) = 7;
    uint64_t v29 = v31;
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v19);
    v25(&v18[OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_configuredEmbedUrl], v29, v23);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v18;
}

uint64_t SportsLineScoreDataVisualization.encode(to:)(void *a1)
{
  uint64_t v2 = sub_1C151829C();
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C025F1B0(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C025F1E4(0, &qword_1EA198AD8, MEMORY[0x1E4FBBDE0]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v25 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C025F06C();
  uint64_t v13 = v28;
  sub_1C1520F0C();
  LOBYTE(v29) = 0;
  uint64_t v14 = v27;
  sub_1C15207CC();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v25 = v12;
  uint64_t v27 = v9;
  uint64_t v16 = v10;
  *(void *)&long long v29 = *(void *)(v13 + 48);
  uint64_t v17 = qword_1EB863C98;
  swift_unknownObjectRetain_n();
  if (v17 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB863C78);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 16))(v4, v18, v2);
  MEMORY[0x1F4188790](v19);
  *(&v25 - 2) = (char *)sub_1BFC9DBE8(0, (unint64_t *)&qword_1EB890230);
  swift_getKeyPath();
  sub_1C151947C();
  swift_unknownObjectRelease();
  sub_1C025F004();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 0, 1, v20);
  LOBYTE(v29) = 1;
  sub_1C025F0C0((unint64_t *)&unk_1EB863F90, (void (*)(uint64_t))sub_1C025F004);
  sub_1C152078C();
  sub_1C025F8B4((uint64_t)v7, (uint64_t (*)(void))sub_1C025F1B0);
  uint64_t v21 = v28;
  LOBYTE(v29) = 2;
  sub_1C1515FDC();
  sub_1C025F0C0((unint64_t *)&unk_1EB8710F0, MEMORY[0x1E4F276F0]);
  sub_1C152080C();
  *(void *)&long long v29 = *(void *)(v21 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources);
  char v32 = 3;
  sub_1BFF5D684(0, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
  sub_1C025F264((unint64_t *)&qword_1EB86B2D0, (unint64_t *)&unk_1EB86A8B0);
  sub_1C152080C();
  *(void *)&long long v29 = *(void *)(v21 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_roster);
  char v32 = 4;
  sub_1BFC77FBC(0, &qword_1EA198AE0);
  sub_1C025F324(&qword_1EA198AE8, &qword_1EA198AE0, (uint64_t)&type metadata for SportsEventRoster, (void (*)(void))sub_1C025F39C);
  sub_1C152080C();
  long long v22 = *(_OWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 16);
  long long v29 = *(_OWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config);
  long long v30 = v22;
  long long v31 = *(_OWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 32);
  char v32 = 5;
  sub_1BFC77FBC(0, (unint64_t *)&qword_1EA1ADB80);
  uint64_t v23 = v25;
  uint64_t v24 = v27;
  sub_1C025F324((unint64_t *)&qword_1EA198B00, (unint64_t *)&qword_1EA1ADB80, (uint64_t)&type metadata for SportsDataVisualizationConfig, (void (*)(void))sub_1C025F3F0);
  sub_1C152080C();
  LOBYTE(v29) = 6;
  sub_1C15207CC();
  LOBYTE(v29) = 7;
  sub_1C152080C();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v23, v24);
}

unint64_t sub_1C025DB9C(char a1)
{
  unint64_t result = 0x6E6F6E6143636D75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E657665;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x726574736F72;
      break;
    case 5:
      unint64_t result = 0x6769666E6F63;
      break;
    case 6:
      unint64_t result = 0x696669746E656469;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C025DCB4(char a1)
{
  unint64_t result = 0x6E6F6E6143636D75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E657665;
      break;
    case 2:
      unint64_t result = 0x6C72556465626D65;
      break;
    case 3:
      unint64_t result = 0x53617461446C7275;
      break;
    case 4:
      unint64_t result = 0x726574736F72;
      break;
    case 5:
      unint64_t result = 0x6769666E6F63;
      break;
    case 6:
      unint64_t result = 0x696669746E656469;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C025DDCC(unsigned __int8 *a1, char *a2)
{
  return sub_1C14791F4(*a1, *a2);
}

uint64_t sub_1C025DDD8()
{
  return sub_1C044C4D8();
}

uint64_t sub_1C025DDE4()
{
  return sub_1C044754C();
}

uint64_t sub_1C025DDEC()
{
  return sub_1C044C4D8();
}

uint64_t sub_1C025DDF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C025F7C4();
  *a1 = result;
  return result;
}

unint64_t sub_1C025DE24@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1C025DB9C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C025DE50()
{
  return sub_1C025DCB4(*v0);
}

uint64_t sub_1C025DE58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C025F7C4();
  *a1 = result;
  return result;
}

uint64_t sub_1C025DE80(uint64_t a1)
{
  unint64_t v2 = sub_1C025F06C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C025DEBC(uint64_t a1)
{
  unint64_t v2 = sub_1C025F06C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SportsLineScoreDataVisualization.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl;
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C025EF94(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 8));
  v3(v0 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_configuredEmbedUrl, v2);
  return v0;
}

uint64_t SportsLineScoreDataVisualization.__deallocating_deinit()
{
  SportsLineScoreDataVisualization.deinit();
  return swift_deallocClassInstance();
}

char *sub_1C025E038@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = SportsLineScoreDataVisualization.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C025E090(void *a1)
{
  return SportsLineScoreDataVisualization.encode(to:)(a1);
}

uint64_t static SportsLineScoreDataVisualization.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24)) {
    return 1;
  }
  else {
    return sub_1C1520A9C();
  }
}

uint64_t sub_1C025E0E4(uint64_t a1, uint64_t a2)
{
  if (*(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16)
    && *(void *)(*(void *)a1 + 24) == *(void *)(*(void *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_1C1520A9C();
  }
}

void *sub_1C025E110(uint64_t a1)
{
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v117 = (char *)&v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF5D684(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v116 = (void *)((char *)&v109 - v6);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v7 - 8);
  MEMORY[0x1F4188790](v8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v109 - v12;
  if (a1)
  {
    uint64_t v131 = v11;
    uint64_t v132 = v10;
    sub_1C01B2D70();
    uint64_t inited = swift_initStackObject();
    long long v109 = xmmword_1C1529AE0;
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    sub_1BFF5D684(0, &qword_1EA198B30, (uint64_t (*)(uint64_t))sub_1C0181BEC, MEMORY[0x1E4FBBE00]);
    uint64_t v138 = v2;
    uint64_t v14 = v3;
    uint64_t v16 = v15;
    sub_1C0181BEC(0);
    uint64_t v137 = v17;
    uint64_t v18 = *(void *)(*(void *)(v17 - 8) + 72);
    uint64_t v19 = *(unsigned __int8 *)(*(void *)(v17 - 8) + 80);
    uint64_t v20 = (v19 + 32) & ~v19;
    uint64_t v129 = v19 | 7;
    uint64_t v130 = v16;
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C152A660;
    uint64_t v110 = v21;
    uint64_t v135 = v20;
    long long v22 = (void *)(v21 + v20);
    uint64_t v24 = *(void *)(a1 + 32);
    BOOL v147 = *(void (**)(void, void, void, void))(a1 + 40);
    uint64_t v23 = v147;
    uint64_t v25 = type metadata accessor for FormatInspectionItem(0);
    uint64_t v26 = (char *)v22 + *(int *)(v25 + 24);
    *(void *)uint64_t v26 = v24;
    *((void *)v26 + 1) = v23;
    uint64_t v27 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v144 = *(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56);
    uint64_t v145 = v27;
    uint64_t v143 = v28 + 56;
    v144(v26, 0, 1, v27);
    *long long v22 = 0xD000000000000010;
    v22[1] = 0x80000001C1608E60;
    _OWORD v22[2] = 0;
    v22[3] = 0;
    long long v29 = (char *)v22 + *(int *)(v25 + 28);
    *(void *)long long v29 = 0;
    *((void *)v29 + 1) = 0;
    v29[16] = -1;
    uint64_t v30 = *(void *)(v25 - 8);
    long long v31 = *(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56);
    uint64_t v32 = a1;
    uint64_t v33 = v30 + 56;
    v31(v22, 0, 1, v25);
    uint64_t v112 = v22;
    uint64_t v139 = v18;
    uint64_t v34 = (void *)((char *)v22 + v18);
    uint64_t v35 = v25;
    uint64_t v36 = (void (*)(void, void, void, void))v31;
    uint64_t v37 = *(char **)(v14 + 16);
    uint64_t v38 = v138;
    uint64_t v134 = v14 + 16;
    ((void (*)(char *, uint64_t, uint64_t))v37)(v13, v32 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_embedUrl, v138);
    uint64_t v142 = v14;
    uint64_t v127 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
    uint64_t v128 = v14 + 56;
    v127(v13, 0, 1, v38);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C04338EC(0x5255206465626D45, 0xE90000000000004CLL, (uint64_t)v13, v34);
    uint64_t v146 = v33;
    BOOL v147 = v36;
    v36(v34, 0, 1, v35);
    uint64_t v39 = v32;
    unint64_t v40 = *(void *)(v32 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_urlDataSources);
    if (v40 >> 62) {
      goto LABEL_30;
    }
    uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v136 = v35;
      uint64_t v111 = v39;
      if (!v41) {
        break;
      }
      uint64_t v154 = MEMORY[0x1E4FBC860];
      uint64_t result = (void *)sub_1C05F6B44(0, v41 & ~(v41 >> 63), 0);
      if (v41 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v43 = 0;
      uint64_t v44 = v154;
      uint64_t v133 = 2 * v139;
      uint64_t v123 = v135 + 3 * v139;
      unint64_t v124 = v40 & 0xC000000000000001;
      id v122 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
      uint64_t v114 = (void (**)(uint64_t, uint64_t))(v142 + 8);
      id v115 = (void (**)(char *, char *, uint64_t))(v142 + 32);
      long long v121 = xmmword_1C152C7F0;
      uint64_t v45 = MEMORY[0x1E4FBB1A0];
      long long v119 = xmmword_1C1536B40;
      long long v118 = xmmword_1C1536B50;
      uint64_t v39 = v134;
      uint64_t v125 = v41;
      uint64_t v126 = v37;
      unint64_t v120 = v40;
      while (v41 != v43)
      {
        uint64_t v141 = v44;
        uint64_t v142 = v43;
        if (v124)
        {
          uint64_t v46 = (void *)MEMORY[0x1C18C7CB0](v43, v40);
        }
        else
        {
          uint64_t v46 = *(void **)(v40 + 8 * v43 + 32);
          swift_retain();
        }
        uint64_t v47 = v133;
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = v121;
        uint64_t v140 = v48;
        uint64_t v49 = (void *)(v48 + v135);
        uint64_t v50 = v46[2];
        unint64_t v51 = v46[3];
        sub_1C025F810(v50, v51);
        sub_1C0436838(0x20746E65746E6F43, 0xEC00000065707954, v50, v51, v49);
        v147(v49, 0, 1, v35);
        char v52 = (char *)v49 + v139;
        uint64_t v53 = v46[5];
        *(void *)&long long v153 = v46[4];
        *((void *)&v153 + 1) = v53;
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB87A930);
        swift_bridgeObjectRetain_n();
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          uint64_t v54 = &v52[*(int *)(v35 + 24)];
          *(void *)uint64_t v54 = v148;
          uint64_t v55 = v145;
          swift_storeEnumTagMultiPayload();
          v144(v54, 0, 1, v55);
          *(_OWORD *)char v52 = v119;
          *((void *)v52 + 2) = 0;
          *((void *)v52 + 3) = 0;
          uint64_t v56 = &v52[*(int *)(v35 + 28)];
          *(void *)uint64_t v56 = 0;
          *((void *)v56 + 1) = 0;
          v56[16] = -1;
        }
        else
        {
          *((void *)&v149 + 1) = v45;
          uint64_t v150 = (char **)MEMORY[0x1E4FBB208];
          long long v148 = v153;
          sub_1BFC773DC(&v148, (uint64_t)v152);
          uint64_t v57 = __swift_project_boxed_opaque_existential_1(v152, v152[3]);
          uint64_t v58 = *v57;
          uint64_t v59 = v57[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v60 = (uint64_t)v116;
          *uint64_t v116 = v58;
          *(void *)(v60 + 8) = v59;
          uint64_t v35 = v136;
          uint64_t v61 = v145;
          swift_storeEnumTagMultiPayload();
          v144((char *)v60, 0, 1, v61);
          *(_OWORD *)char v52 = v119;
          *((void *)v52 + 2) = 0;
          *((void *)v52 + 3) = 0;
          sub_1C025F820(v60, (uint64_t)&v52[*(int *)(v35 + 24)]);
          uint64_t v62 = &v52[*(int *)(v35 + 28)];
          *(void *)uint64_t v62 = 0;
          *((void *)v62 + 1) = 0;
          v62[16] = -1;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v152);
        }
        swift_bridgeObjectRelease();
        v147(v52, 0, 1, v35);
        uint64_t v63 = (char *)v49 + v47;
        uint64_t v64 = v131;
        uint64_t v65 = v138;
        uint64_t v66 = v126;
        ((void (*)(uint64_t, char *, uint64_t))v126)(v131, (char *)v46 + OBJC_IVAR____TtC8NewsFeed38WebEmbedDataVisualizationURLDataSource_url, v138);
        v127((char *)v64, 0, 1, v65);
        uint64_t v67 = v132;
        sub_1C0025B10(v64, v132);
        if ((*v122)(v67, 1, v65) == 1)
        {
          sub_1C025F8B4(v64, (uint64_t (*)(void))sub_1BFF00BEC);
          v144(&v63[*(int *)(v35 + 24)], 1, 1, v145);
          *(_OWORD *)uint64_t v63 = v118;
          *((void *)v63 + 2) = 0;
          *((void *)v63 + 3) = 0;
          uint64_t v68 = &v63[*(int *)(v35 + 28)];
          *(void *)uint64_t v68 = 0;
          *((void *)v68 + 1) = 0;
          v68[16] = -1;
        }
        else
        {
          uint64_t v69 = v35;
          uint64_t v70 = v64;
          uint64_t v71 = v117;
          ((void (*)(char *, uint64_t, uint64_t))v66)(v117, v67, v65);
          sub_1C025F8B4(v70, (uint64_t (*)(void))sub_1BFF00BEC);
          uint64_t v72 = *(int *)(v69 + 24);
          uint64_t v39 = v134;
          CGRect v73 = &v63[v72];
          (*v115)(&v63[v72], v71, v65);
          uint64_t v74 = v145;
          swift_storeEnumTagMultiPayload();
          unint64_t v75 = v73;
          uint64_t v35 = v136;
          v144(v75, 0, 1, v74);
          *(_OWORD *)uint64_t v63 = v118;
          *((void *)v63 + 2) = 0;
          *((void *)v63 + 3) = 0;
          uint64_t v76 = &v63[*(int *)(v35 + 28)];
          *(void *)uint64_t v76 = 0;
          *((void *)v76 + 1) = 0;
          v76[16] = -1;
          (*v114)(v67, v65);
        }
        unint64_t v40 = v120;
        v147(v63, 0, 1, v35);
        sub_1C09BCFA4(0, 0xE000000000000000, 0, 0, v140, v155);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *((void *)&v149 + 1) = &type metadata for FormatInspectionGroup;
        uint64_t v150 = &off_1F1BDEC90;
        uint64_t v77 = swift_allocObject();
        *(void *)&long long v148 = v77;
        swift_release();
        *(void *)(v77 + 48) = v156;
        long long v78 = v155[1];
        *(_OWORD *)(v77 + 16) = v155[0];
        *(_OWORD *)(v77 + 32) = v78;
        uint64_t v79 = v142;
        uint64_t v154 = v141;
        unint64_t v81 = *(void *)(v141 + 16);
        unint64_t v80 = *(void *)(v141 + 24);
        if (v81 >= v80 >> 1) {
          sub_1C05F6B44(v80 > 1, v81 + 1, 1);
        }
        uint64_t v43 = v79 + 1;
        uint64_t v82 = *((void *)&v149 + 1);
        uint64_t v83 = (uint64_t)v150;
        uint64_t v84 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v148, *((uint64_t *)&v149 + 1));
        __n128 v85 = MEMORY[0x1F4188790](v84);
        uint64_t v37 = (char *)&v109 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v87 + 16))(v37, v85);
        sub_1BFEA7C90(v81, (uint64_t)v37, &v154, v82, v83);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
        uint64_t v44 = v154;
        uint64_t v41 = v125;
        uint64_t v45 = MEMORY[0x1E4FBB1A0];
        if (v125 == v43)
        {
          swift_bridgeObjectRelease();
          uint64_t v39 = v111;
          uint64_t v88 = v133;
          goto LABEL_25;
        }
      }
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1C15204BC();
    }
    swift_bridgeObjectRelease();
    uint64_t v88 = 2 * v139;
    uint64_t v44 = MEMORY[0x1E4FBC860];
LABEL_25:
    uint64_t v145 = inited + 32;
    id v90 = (void *)((char *)v112 + v88);
    uint64_t v91 = sub_1C0233FC8(v44);
    swift_bridgeObjectRelease();
    long long v92 = sub_1C131B79C(v91);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x756F532061746144, 0xEC00000073656372, (uint64_t)v92, 0, 0, v90);
    v147(v90, 0, 1, v35);
    unsigned int v93 = (void *)(v39 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config);
    id v95 = *(void (**)(char *, void, uint64_t, uint64_t))(v39
                                                                  + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config);
    uint64_t v94 = v93[1];
    uint64_t v96 = v93[2];
    uint64_t v97 = v93[3];
    unint64_t v99 = (char **)v93[4];
    uint64_t v98 = v93[5];
    if (v94)
    {
      swift_bridgeObjectRetain();
      uint64_t v144 = v95;
    }
    else
    {
      uint64_t v144 = 0;
    }
    uint64_t v100 = (void *)((char *)v112 + 3 * v139);
    sub_1BFE70080(0, (unint64_t *)&qword_1EA1974C0, MEMORY[0x1E4FBBE00]);
    uint64_t v101 = swift_initStackObject();
    *(_OWORD *)(v101 + 16) = v109;
    *(void *)&long long v148 = v95;
    *((void *)&v148 + 1) = v94;
    *(void *)&long long v149 = v96;
    *((void *)&v149 + 1) = v97;
    uint64_t v150 = v99;
    uint64_t v151 = v98;
    uint64_t v102 = sub_1C0B9C40C((uint64_t *)&v148);
    *(void *)(v101 + 56) = &type metadata for FormatInspection;
    *(void *)(v101 + 64) = &off_1F1C29D30;
    *(void *)(v101 + 32) = v102;
    uint64_t v103 = sub_1C0233FC8(v101);
    swift_setDeallocating();
    sub_1BFC845BC(0, (unint64_t *)&qword_1EA1974E0);
    swift_arrayDestroy();
    uint64_t v104 = sub_1C131B79C(v103);
    swift_bridgeObjectRelease();
    sub_1C042F458(0x6769666E6F43, 0xE600000000000000, (uint64_t)v104, (uint64_t)v144, v94, v100);
    v147(v100, 0, 1, v136);
    sub_1C09BCFA4(0x6F635320656E694CLL, 0xEA00000000006572, 0, 0, v110, &v148);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v105 = inited;
    *(void *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(void *)(v105 + 64) = &off_1F1BDEC90;
    uint64_t v106 = swift_allocObject();
    *(void *)(v105 + 32) = v106;
    *(void *)(v106 + 48) = v150;
    long long v107 = v149;
    *(_OWORD *)(v106 + 16) = v148;
    *(_OWORD *)(v106 + 32) = v107;
    id v108 = sub_1C131B79C(v105);
    swift_setDeallocating();
    sub_1BFE70080(0, (unint64_t *)&unk_1EA198870, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    swift_release();
    return v108;
  }
  else
  {
    uint64_t v89 = MEMORY[0x1E4FBC860];
    return sub_1C131B79C(v89);
  }
}

uint64_t sub_1C025EF94(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1C025F004()
{
  if (!qword_1EB863FA8)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB890230);
    unint64_t v0 = sub_1C15194BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863FA8);
    }
  }
}

unint64_t sub_1C025F06C()
{
  unint64_t result = qword_1EA198AC0;
  if (!qword_1EA198AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198AC0);
  }
  return result;
}

uint64_t sub_1C025F0C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C025F108()
{
  unint64_t result = qword_1EA198AD0;
  if (!qword_1EA198AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198AD0);
  }
  return result;
}

unint64_t sub_1C025F15C()
{
  unint64_t result = qword_1EB8613F0;
  if (!qword_1EB8613F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8613F0);
  }
  return result;
}

void sub_1C025F1B0(uint64_t a1)
{
}

void sub_1C025F1E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C025F06C();
    unint64_t v7 = a3(a1, &type metadata for SportsLineScoreDataVisualization.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C025F24C()
{
  return 8;
}

void *sub_1C025F258(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C025F264(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFF5D684(255, (unint64_t *)&unk_1EB86B2C0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource, MEMORY[0x1E4FBB320]);
    sub_1C025F0C0(a2, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualizationURLDataSource);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C025F324(unint64_t *a1, unint64_t *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC77FBC(255, a2);
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C025F39C()
{
  unint64_t result = qword_1EA198AF0;
  if (!qword_1EA198AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198AF0);
  }
  return result;
}

unint64_t sub_1C025F3F0()
{
  unint64_t result = qword_1EB8630D0;
  if (!qword_1EB8630D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8630D0);
  }
  return result;
}

uint64_t sub_1C025F444()
{
  return type metadata accessor for SportsLineScoreDataVisualization();
}

uint64_t type metadata accessor for SportsLineScoreDataVisualization()
{
  uint64_t result = qword_1EB869978;
  if (!qword_1EB869978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C025F498()
{
  uint64_t result = sub_1C1515FDC();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SportsLineScoreDataVisualization(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SportsLineScoreDataVisualization);
}

uint64_t dispatch thunk of SportsLineScoreDataVisualization.__allocating_init(umcCanonicalId:event:embedUrl:urlDataSources:roster:config:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of SportsLineScoreDataVisualization.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

unsigned char *storeEnumTagSinglePayload for SportsLineScoreDataVisualization.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C025F684);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsLineScoreDataVisualization.CodingKeys()
{
  return &type metadata for SportsLineScoreDataVisualization.CodingKeys;
}

unint64_t sub_1C025F6C0()
{
  unint64_t result = qword_1EA198B10;
  if (!qword_1EA198B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198B10);
  }
  return result;
}

unint64_t sub_1C025F718()
{
  unint64_t result = qword_1EA198B18;
  if (!qword_1EA198B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198B18);
  }
  return result;
}

unint64_t sub_1C025F770()
{
  unint64_t result = qword_1EA198B20;
  if (!qword_1EA198B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198B20);
  }
  return result;
}

uint64_t sub_1C025F7C4()
{
  unint64_t v0 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_1C025F810(uint64_t a1, unint64_t a2)
{
  if (a2 != 4) {
    return sub_1BFEFF7C4(a1, a2);
  }
  return a1;
}

uint64_t sub_1C025F820(uint64_t a1, uint64_t a2)
{
  sub_1BFF5D684(0, &qword_1EA1A1FC0, type metadata accessor for FormatInspectionItem.Value, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C025F8B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C025F914()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t static FormatLayoutViewRouterError.== infix(_:_:)()
{
  return 1;
}

uint64_t FormatLayoutViewRouterError.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t FormatLayoutViewRouterError.hashValue.getter()
{
  return sub_1C1520E0C();
}

unint64_t sub_1C025F9D4()
{
  unint64_t result = qword_1EA198B38;
  if (!qword_1EA198B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198B38);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatLayoutViewRouterError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C025FAC4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutViewRouterError()
{
  return &type metadata for FormatLayoutViewRouterError;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatIssueCoverNodeLayoutAttributes.frame.getter()
{
  return *(double *)(v0 + 64);
}

uint64_t FormatIssueCoverNodeLayoutAttributes.resizing.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 96);
  return swift_retain();
}

uint64_t FormatIssueCoverNodeLayoutAttributes.zIndex.getter()
{
  return *(void *)(v0 + 104);
}

unint64_t FormatIssueCoverNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 112);
  *a1 = v2;
  return sub_1BFE6FA30(v2);
}

uint64_t FormatIssueCoverNodeLayoutAttributes.isUserInteractionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

void FormatIssueCoverNodeLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 136);
  *(void *)a1 = *(void *)(v1 + 128);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatIssueCoverNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

double FormatIssueCoverNodeLayoutAttributes.issueCoverViewLayoutAttributes.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 208);
  double result = *(double *)(v1 + 216);
  long long v4 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 192);
  *(void *)(a1 + 48) = v2;
  *(double *)(a1 + 56) = result;
  return result;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C025FC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t *a9, char a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t *a14)
{
  uint64_t v15 = *a7;
  uint64_t v16 = *a9;
  uint64_t v17 = *a11;
  char v18 = *((unsigned char *)a11 + 8);
  uint64_t v19 = *a14;
  uint64_t v20 = a14[1];
  uint64_t v21 = a14[2];
  uint64_t v22 = a14[5];
  uint64_t v23 = a14[6];
  uint64_t v24 = a14[7];
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  *(void *)(v14 + 48) = a5;
  *(void *)(v14 + 56) = a6;
  *(void *)(v14 + 64) = v19;
  *(void *)(v14 + 72) = v20;
  *(void *)(v14 + 96) = v15;
  *(void *)(v14 + 104) = a8;
  *(void *)(v14 + 112) = v16;
  *(unsigned char *)(v14 + 120) = a10;
  *(void *)(v14 + 128) = v17;
  *(unsigned char *)(v14 + 136) = v18;
  *(void *)(v14 + 144) = a12;
  *(void *)(v14 + 152) = a13;
  *(void *)(v14 + 160) = v19;
  *(void *)(v14 + 168) = v20;
  *(void *)(v14 + 176) = v21;
  long long v25 = *(_OWORD *)(a14 + 3);
  *(void *)(v14 + 80) = v21;
  *(void *)(v14 + 88) = v25;
  *(_OWORD *)(v14 + 184) = v25;
  *(void *)(v14 + 200) = v22;
  *(void *)(v14 + 208) = v23;
  *(void *)(v14 + 216) = v24;
  *(void *)(v14 + 224) = MEMORY[0x1E4FBC870];
  return v14;
}

uint64_t sub_1C025FCA0()
{
  uint64_t v1 = *(void *)(v0 + 152);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 184);
  int64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v10 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1C05F6D40(0, v3, 0);
    uint64_t v5 = 0;
    uint64_t v4 = v10;
    uint64_t v6 = *(void *)(v10 + 16);
    do
    {
      char v7 = *(unsigned char *)(v2 + v5 + 32);
      unint64_t v8 = *(void *)(v10 + 24);
      if (v6 + v5 >= v8 >> 1) {
        sub_1C05F6D40(v8 > 1, v6 + v5 + 1, 1);
      }
      *(void *)(v10 + 16) = v6 + v5 + 1;
      *(unsigned char *)(v10 + v6 + v5++ + 32) = v7;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
  }
  return v4;
}

unint64_t sub_1C025FDB4(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6E65644965646F6ELL;
      break;
    case 3:
      unint64_t result = 0x656D617266;
      break;
    case 4:
      unint64_t result = 0x676E697A69736572;
      break;
    case 5:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 6:
      unint64_t result = 0x696C696269736976;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
      unint64_t result = 0x656C797473;
      break;
    case 11:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C025FF54()
{
  return sub_1C025FDB4(*v0);
}

uint64_t sub_1C025FF5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C0261538(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C025FF84(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1C025FF90(uint64_t a1)
{
  unint64_t v2 = sub_1C02605E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C025FFCC(uint64_t a1)
{
  unint64_t v2 = sub_1C02605E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FormatIssueCoverNodeLayoutAttributes.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BFF0056C(*(void *)(v0 + 112));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.__deallocating_deinit()
{
  FormatIssueCoverNodeLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatIssueCoverNodeLayoutAttributes.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C0260EC0(0, &qword_1EA198B40, (uint64_t (*)(void))sub_1C02605E8, (uint64_t)&type metadata for FormatIssueCoverNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02605E8();
  sub_1C1520F0C();
  LOBYTE(v16) = 0;
  sub_1C15207CC();
  if (!v2)
  {
    LOBYTE(v16) = 1;
    sub_1C15207CC();
    LOBYTE(v16) = 2;
    sub_1C15207CC();
    long long v10 = *(_OWORD *)(v3 + 80);
    long long v16 = *(_OWORD *)(v3 + 64);
    long long v17 = v10;
    char v21 = 3;
    type metadata accessor for CGRect(0);
    sub_1BFE4C3D0(&qword_1EA197288, 255, type metadata accessor for CGRect);
    sub_1C152080C();
    *(void *)&long long v16 = *(void *)(v3 + 96);
    char v21 = 4;
    sub_1C026063C();
    sub_1C152078C();
    LOBYTE(v16) = 5;
    sub_1C15207FC();
    *(void *)&long long v16 = *(void *)(v3 + 112);
    char v21 = 6;
    sub_1C009DA10();
    sub_1C152080C();
    LOBYTE(v16) = 7;
    sub_1C15207DC();
    char v11 = *(unsigned char *)(v3 + 136);
    *(void *)&long long v16 = *(void *)(v3 + 128);
    BYTE8(v16) = v11;
    char v21 = 8;
    sub_1BFDD5084();
    sub_1C152078C();
    *(void *)&long long v16 = *(void *)(v3 + 144);
    char v21 = 9;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BFE4C3D0(&qword_1EA198B58, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C152080C();
    *(void *)&long long v16 = *(void *)(v3 + 152);
    char v21 = 10;
    type metadata accessor for FormatIssueCoverNodeStyle();
    sub_1BFE4C3D0(&qword_1EB867930, 255, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeStyle);
    sub_1C152078C();
    uint64_t v12 = *(void *)(v3 + 208);
    uint64_t v13 = *(void *)(v3 + 216);
    long long v14 = *(_OWORD *)(v3 + 176);
    long long v16 = *(_OWORD *)(v3 + 160);
    long long v17 = v14;
    long long v18 = *(_OWORD *)(v3 + 192);
    uint64_t v19 = v12;
    uint64_t v20 = v13;
    char v21 = 11;
    sub_1C0165CBC();
    sub_1C152080C();
    *(void *)&long long v16 = *(void *)(v3 + 224);
    char v21 = 12;
    sub_1C0260EC0(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    sub_1C0260F7C(&qword_1EA198B68, (void (*)(void))sub_1C0260690);
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1C02605E8()
{
  unint64_t result = qword_1EA198B48;
  if (!qword_1EA198B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198B48);
  }
  return result;
}

unint64_t sub_1C026063C()
{
  unint64_t result = qword_1EA198B50;
  if (!qword_1EA198B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198B50);
  }
  return result;
}

unint64_t sub_1C0260690()
{
  unint64_t result = qword_1EA198B70;
  if (!qword_1EA198B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198B70);
  }
  return result;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  FormatIssueCoverNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatIssueCoverNodeLayoutAttributes.init(from:)(void *a1)
{
  sub_1C0260EC0(0, &qword_1EA198B78, (uint64_t (*)(void))sub_1C02605E8, (uint64_t)&type metadata for FormatIssueCoverNodeLayoutAttributes.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v17 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C02605E8();
  uint64_t v20 = v6;
  sub_1C1520EBC();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v7 = v18;
    LOBYTE(v21) = 0;
    *(void *)(v1 + 16) = sub_1C152069C();
    *(void *)(v1 + 24) = v8;
    LOBYTE(v21) = 1;
    *(void *)(v1 + 32) = sub_1C152069C();
    *(void *)(v1 + 40) = v10;
    LOBYTE(v21) = 2;
    *(void *)(v1 + 48) = sub_1C152069C();
    *(void *)(v1 + 56) = v11;
    type metadata accessor for CGRect(0);
    char v26 = 3;
    sub_1BFE4C3D0(&qword_1EB87A290, 255, type metadata accessor for CGRect);
    sub_1C15206EC();
    long long v12 = v22;
    *(_OWORD *)(v1 + 64) = v21;
    *(_OWORD *)(v1 + 80) = v12;
    char v26 = 4;
    sub_1C0260F28();
    sub_1C152065C();
    *(void *)(v1 + 96) = v21;
    LOBYTE(v21) = 5;
    *(void *)(v1 + 104) = sub_1C15206DC();
    char v26 = 6;
    sub_1BFE3D540();
    sub_1C15206EC();
    *(void *)(v1 + 112) = v21;
    LOBYTE(v21) = 7;
    *(unsigned char *)(v1 + 120) = sub_1C15206AC() & 1;
    char v26 = 8;
    sub_1BFE3CF9C();
    sub_1C152065C();
    char v13 = BYTE8(v21);
    *(void *)(v1 + 128) = v21;
    *(unsigned char *)(v1 + 136) = v13;
    type metadata accessor for FormatContextLayoutOptions();
    char v26 = 9;
    sub_1BFE4C3D0(&qword_1EA198B88, 255, (void (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions);
    sub_1C15206EC();
    *(void *)(v1 + 144) = v21;
    type metadata accessor for FormatIssueCoverNodeStyle();
    char v26 = 10;
    sub_1BFE4C3D0(qword_1EB867938, 255, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeStyle);
    sub_1C152065C();
    *(void *)(v1 + 152) = v21;
    char v26 = 11;
    sub_1C0165C64();
    sub_1C15206EC();
    uint64_t v14 = v24;
    uint64_t v15 = v25;
    long long v16 = v22;
    *(_OWORD *)(v1 + 160) = v21;
    *(_OWORD *)(v1 + 176) = v16;
    *(_OWORD *)(v1 + 192) = v23;
    *(void *)(v1 + 208) = v14;
    *(void *)(v1 + 216) = v15;
    sub_1C0260EC0(0, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    char v26 = 12;
    sub_1C0260F7C(&qword_1EA198B90, (void (*)(void))sub_1C0261020);
    sub_1C15206EC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v19);
    *(void *)(v1 + 224) = v21;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1C0260EC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C0260F28()
{
  unint64_t result = qword_1EA198B80;
  if (!qword_1EA198B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198B80);
  }
  return result;
}

uint64_t sub_1C0260F7C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0260EC0(255, &qword_1EA198B60, (uint64_t (*)(void))sub_1C006A604, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, MEMORY[0x1E4FBB510]);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C0261020()
{
  unint64_t result = qword_1EA198B98;
  if (!qword_1EA198B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198B98);
  }
  return result;
}

uint64_t sub_1C0261074(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C3D0(&qword_1EA198BA0, a2, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes);
}

uint64_t type metadata accessor for FormatIssueCoverNodeLayoutAttributes()
{
  return self;
}

uint64_t sub_1C02610E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C02610EC(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C3D0(&qword_1EA198BA8, a2, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes);
}

uint64_t sub_1C0261134(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C3D0(&qword_1EA198BB0, a2, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes);
}

uint64_t sub_1C026117C(uint64_t a1, uint64_t a2)
{
  return sub_1BFE4C3D0(&qword_1EA198BB8, a2, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes);
}

uint64_t sub_1C02611C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = swift_allocObject();
  uint64_t result = FormatIssueCoverNodeLayoutAttributes.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1C026121C(void *a1)
{
  return FormatIssueCoverNodeLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1C0261240(uint64_t a1, uint64_t a2)
{
  sub_1BFE4C3D0(&qword_1EA198BD8, a2, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeLayoutAttributes);
  return sub_1C151798C();
}

uint64_t method lookup function for FormatIssueCoverNodeLayoutAttributes(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatIssueCoverNodeLayoutAttributes);
}

uint64_t dispatch thunk of FormatIssueCoverNodeLayoutAttributes.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

unsigned char *storeEnumTagSinglePayload for FormatIssueCoverNodeLayoutAttributes.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C02613F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueCoverNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatIssueCoverNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1C0261434()
{
  unint64_t result = qword_1EA198BC0;
  if (!qword_1EA198BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198BC0);
  }
  return result;
}

unint64_t sub_1C026148C()
{
  unint64_t result = qword_1EA198BC8;
  if (!qword_1EA198BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198BC8);
  }
  return result;
}

unint64_t sub_1C02614E4()
{
  unint64_t result = qword_1EA198BD0;
  if (!qword_1EA198BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198BD0);
  }
  return result;
}

uint64_t sub_1C0261538(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C1605370 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001C1608ED0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C16050E0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C1608D00 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001C1608EF0 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001C1608F10)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t URLHandlerPattern.Base.init(builder:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t URLHandlerPattern.Base.buildPatterns(paths:fragment:params:conditions:)()
{
  return (*v0)();
}

void *initializeBufferWithCopyOfBuffer for LayeredMediaFilter(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for FormatTextAdjustmentMetric()
{
  return swift_release();
}

void *assignWithCopy for LayeredMediaFilter(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for LayeredMediaFilter(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for URLHandlerPattern.Base()
{
  return &type metadata for URLHandlerPattern.Base;
}

void FormatTextAdjustmentMetric.metric.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t FormatTextAdjustmentMetric.style.getter()
{
  return swift_retain();
}

void FormatTextAdjustmentMetric.adjustment.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

BOOL static FormatFontMetric.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C0261B78(void *a1)
{
  return FormatTextAdjustmentMetric.encode(to:)(a1);
}

uint64_t FormatFontMetric.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t sub_1C0261BC4(void *a1)
{
  return FormatFontMetric.encode(to:)(a1);
}

BOOL FormatFontMetricAdjustment.isAdd.getter()
{
  return (*v0 & 1) == 0;
}

uint64_t sub_1C0261BF0(void *a1)
{
  return FormatFontMetricAdjustment.encode(to:)(a1);
}

uint64_t _s8NewsFeed26FormatTextAdjustmentMetricV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  int v3 = a1[16];
  int v4 = a2[16];
  if (_s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(*((void *)a1 + 1), *((void *)a2 + 1))) {
    return v3 ^ v4 ^ 1u;
  }
  else {
    return 0;
  }
}

unint64_t sub_1C0261C60(uint64_t a1)
{
  unint64_t result = sub_1C0261C88();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0261C88()
{
  unint64_t result = qword_1EA198BE0;
  if (!qword_1EA198BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198BE0);
  }
  return result;
}

uint64_t sub_1C0261CDC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0262040(a1, a2, a3, (uint64_t (*)(void))sub_1BFE1C9C0, (uint64_t (*)(void))sub_1C0261D1C, (uint64_t (*)(void))sub_1C0261D70);
}

unint64_t sub_1C0261D1C()
{
  unint64_t result = qword_1EB860910;
  if (!qword_1EB860910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860910);
  }
  return result;
}

unint64_t sub_1C0261D70()
{
  unint64_t result = qword_1EA198BE8;
  if (!qword_1EA198BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198BE8);
  }
  return result;
}

unint64_t sub_1C0261DC8()
{
  unint64_t result = qword_1EA198BF0;
  if (!qword_1EA198BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198BF0);
  }
  return result;
}

unint64_t sub_1C0261E1C(uint64_t a1)
{
  unint64_t result = sub_1C0261E44();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0261E44()
{
  unint64_t result = qword_1EA198BF8;
  if (!qword_1EA198BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198BF8);
  }
  return result;
}

uint64_t sub_1C0261E98(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0262040(a1, a2, a3, (uint64_t (*)(void))sub_1BFCDB6BC, (uint64_t (*)(void))sub_1C0261ED8, (uint64_t (*)(void))sub_1C0261DC8);
}

unint64_t sub_1C0261ED8()
{
  unint64_t result = qword_1EB85FFF8;
  if (!qword_1EB85FFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FFF8);
  }
  return result;
}

unint64_t sub_1C0261F30()
{
  unint64_t result = qword_1EA198C00;
  if (!qword_1EA198C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198C00);
  }
  return result;
}

unint64_t sub_1C0261F84(uint64_t a1)
{
  unint64_t result = sub_1C0261FAC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0261FAC()
{
  unint64_t result = qword_1EA198C08;
  if (!qword_1EA198C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198C08);
  }
  return result;
}

uint64_t sub_1C0262000(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0262040(a1, a2, a3, (uint64_t (*)(void))sub_1BFCDB668, (uint64_t (*)(void))sub_1C0262094, (uint64_t (*)(void))sub_1C0261F30);
}

uint64_t sub_1C0262040(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0262094()
{
  unint64_t result = qword_1EB8608F0;
  if (!qword_1EB8608F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8608F0);
  }
  return result;
}

uint64_t sub_1C02620EC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatTextAdjustmentMetric(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FormatTextAdjustmentMetric(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatTextAdjustmentMetric()
{
  return &type metadata for FormatTextAdjustmentMetric;
}

ValueMetadata *type metadata accessor for FormatFontMetric()
{
  return &type metadata for FormatFontMetric;
}

ValueMetadata *type metadata accessor for FormatFontMetricAdjustment()
{
  return &type metadata for FormatFontMetricAdjustment;
}

uint64_t FormatQueryParameter.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatQueryParameter.value.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

uint64_t _s8NewsFeed20FormatQueryParameterV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a2[2];
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = sub_1C1520A9C(), result = 0, (v5 & 1) != 0))
  {
    if (*(void *)(v2 + 16) == *(void *)(v3 + 16) && *(void *)(v2 + 24) == *(void *)(v3 + 24))
    {
      return 1;
    }
    else
    {
      return sub_1C1520A9C();
    }
  }
  return result;
}

unint64_t sub_1C0262300(uint64_t a1)
{
  unint64_t result = sub_1C0262328();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0262328()
{
  unint64_t result = qword_1EA198C10;
  if (!qword_1EA198C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198C10);
  }
  return result;
}

unint64_t sub_1C026237C(void *a1)
{
  a1[1] = sub_1C00773E4();
  a1[2] = sub_1C0077438();
  unint64_t result = sub_1C02623B4();
  a1[3] = result;
  return result;
}

unint64_t sub_1C02623B4()
{
  unint64_t result = qword_1EA198C18;
  if (!qword_1EA198C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198C18);
  }
  return result;
}

void *assignWithCopy for FormatQueryParameter(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatQueryParameter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatQueryParameter()
{
  return &type metadata for FormatQueryParameter;
}

unint64_t FormatEquationOperator.rawValue.getter()
{
  return 0x29282F2A2D2BuLL >> (8 * *v0);
}

unint64_t sub_1C02624E8()
{
  unint64_t result = qword_1EA198C20;
  if (!qword_1EA198C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198C20);
  }
  return result;
}

uint64_t sub_1C026253C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0262594()
{
  return sub_1C1520DDC();
}

uint64_t sub_1C02625D4()
{
  return sub_1C1520E0C();
}

NewsFeed::FormatEquationOperator_optional sub_1C0262628(Swift::UInt8 *a1)
{
  return FormatEquationOperator.init(rawValue:)(*a1);
}

void sub_1C0262630(unsigned char *a1@<X8>)
{
  *a1 = 0x29282F2A2D2BuLL >> (8 * *v1);
}

uint64_t sub_1C0262650()
{
  return sub_1C151EB8C();
}

uint64_t sub_1C02626B0()
{
  return sub_1C151EB1C();
}

BOOL sub_1C0262700(unsigned char *a1, unsigned char *a2)
{
  return (0x29282F2A2D2BuLL >> (8 * *a1)) == (0x29282F2A2D2BuLL >> (8 * *a2));
}

ValueMetadata *type metadata accessor for FormatEquationOperator()
{
  return &type metadata for FormatEquationOperator;
}

unint64_t sub_1C0262774()
{
  unint64_t result = qword_1EA198C28[0];
  if (!qword_1EA198C28[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA198C28);
  }
  return result;
}

uint64_t static FormatCodingEmptyFileReferenceCollectionStrategy.defaultValue.getter@<X0>(void *a1@<X8>)
{
  type metadata accessor for FormatFileReference();
  uint64_t v2 = sub_1C151ECBC();
  return FormatFileReferenceCollection.init(references:)(v2, a1);
}

BOOL static FormatCodingEmptyFileReferenceCollectionStrategy.shouldEncode(wrappedValue:)()
{
  return (sub_1C151F15C() & 1) == 0;
}

uint64_t sub_1C02628A8@<X0>(void *a1@<X8>)
{
  return static FormatCodingEmptyFileReferenceCollectionStrategy.defaultValue.getter(a1);
}

BOOL sub_1C02628B4()
{
  return static FormatCodingEmptyFileReferenceCollectionStrategy.shouldEncode(wrappedValue:)();
}

uint64_t sub_1C02628C0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C02628FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C0262918()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for FormatCodingEmptyFileReferenceCollectionStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t static FormatCommandActionValue<A>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a2 + 16);
  BOOL v4 = *(void *)(v2 + 16) == *(void *)(v3 + 16) && *(void *)(v2 + 24) == *(void *)(v3 + 24);
  if (v4 || (char v5 = sub_1C1520A9C(), v6 = 0, (v5 & 1) != 0))
  {
    type metadata accessor for FormatCommandActionValue.CaseValue();
    swift_getWitnessTable();
    if (sub_1C151ED6C()) {
      char v6 = sub_1C151E5CC();
    }
    else {
      char v6 = 0;
    }
  }
  return v6 & 1;
}

uint64_t sub_1C0262A68()
{
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1C0262A90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        sub_1BFF5B7CC(*(void *)a1, v3, 1);
        sub_1BFF5B7CC(v5, v6, 1);
        if ((((v2 & 1) == 0) ^ v5)) {
          goto LABEL_19;
        }
        return 0;
      }
    }
    else if (v7 == 2)
    {
      sub_1BFF5B7CC(*(void *)a1, v3, 2);
      sub_1BFF5B7CC(v5, v6, 2);
      if (v2 == v5) {
        goto LABEL_19;
      }
      return 0;
    }
LABEL_11:
    sub_1BFF5B7E0(v5, v6, v7);
    sub_1BFF5B7CC(v2, v3, v4);
    sub_1BFF5B7CC(v5, v6, v7);
    return 0;
  }
  if (*(unsigned char *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  uint64_t v9 = *(void *)a1;
  if (v2 == v5 && v3 == v6)
  {
    sub_1BFF5B7E0(v9, v3, 0);
    sub_1BFF5B7E0(v2, v3, 0);
    sub_1BFF5B7CC(v2, v3, 0);
    sub_1BFF5B7CC(v2, v3, 0);
  }
  else
  {
    char v11 = sub_1C1520A9C();
    sub_1BFF5B7E0(v2, v3, 0);
    sub_1BFF5B7E0(v5, v6, 0);
    sub_1BFF5B7CC(v2, v3, 0);
    sub_1BFF5B7CC(v5, v6, 0);
    if ((v11 & 1) == 0) {
      return 0;
    }
  }
LABEL_19:
  type metadata accessor for FormatCommandActionValue.CaseValue();
  return sub_1C151E5CC() & 1;
}

uint64_t sub_1C0262C84(uint64_t *a1, uint64_t *a2)
{
  return static FormatCommandActionValue<A>.== infix(_:_:)(*a1, *a2);
}

uint64_t method lookup function for FormatCommandActionValue(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FormatCommandActionValue);
}

uint64_t sub_1C0262CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 17) & (unint64_t)~v7) + *(void *)(v6 + 64) > 0x18)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v11 = *(void *)a2;
    uint64_t v12 = *(void *)(a2 + 8);
    char v13 = *(unsigned char *)(a2 + 16);
    sub_1BFF5B7E0(*(void *)a2, v12, v13);
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v12;
    *(unsigned char *)(a1 + 16) = v13;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))((a1 + v7 + 17) & ~v7, (a2 + v7 + 17) & ~v7, v5);
  }
  return a1;
}

uint64_t sub_1C0262DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 16);
  sub_1BFF5B7E0(*(void *)a2, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  char v11 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v8;
  sub_1BFF5B7CC(v9, v10, v11);
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 24))((*(unsigned __int8 *)(v12 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(unsigned __int8 *)(v12 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

uint64_t sub_1C0262E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((*(unsigned __int8 *)(v4 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1C0262EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_1BFF5B7CC(v7, v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))((*(unsigned __int8 *)(v10 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(unsigned __int8 *)(v10 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_1C0262F94(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xFD) {
    unsigned int v7 = 253;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 17) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 0xFD) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 17) & ~v6);
      }
      unsigned int v15 = *((unsigned __int8 *)a1 + 16);
      if (v15 > 2) {
        return (v15 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1C0263134(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFD) {
    unsigned int v8 = 253;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 17) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1C02633A0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 0xFD)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 17] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if (a2 > 0xFD)
        {
          a1[16] = 0;
          *(void *)a1 = a2 - 254;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          a1[16] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t *sub_1C02633C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1C0263480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C02634D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C0263520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C0263570(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1C02636CC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C02638E4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unsigned int v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t sub_1C026390C(uint64_t a1, uint64_t a2)
{
  return sub_1C0262A90(a1, a2);
}

uint64_t sub_1C0263918()
{
  return sub_1C0262A68();
}

BOOL PuzzleLaunchAction.isFullScreenModal.getter()
{
  return *(void *)(v0 + 8) != 0;
}

uint64_t sub_1C0263938(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatOptionExpression.Exists(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for PuzzleFullScreenModal(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleLaunchAction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 18)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleLaunchAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 18) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t sub_1C0263AB8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_1C0263AD0(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLaunchAction()
{
  return &type metadata for PuzzleLaunchAction;
}

uint64_t FormatRange.lowerBound.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FormatRange.upperBound.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t static FormatRange.== infix(_:_:)()
{
  if (sub_1C151E5CC())
  {
    type metadata accessor for FormatRange();
    char v0 = sub_1C151E5CC();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t type metadata accessor for FormatRange()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C0263C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned int v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  v7(a4, a1);
  uint64_t v8 = type metadata accessor for FormatRange();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(a4 + *(int *)(v8 + 52), a2, a3);
}

uint64_t sub_1C0263CD8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatRange.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_1C0263CFC(void *a1, uint64_t a2)
{
  return FormatRange.encode(to:)(a1, a2);
}

uint64_t sub_1C0263D14()
{
  return static FormatRange.== infix(_:_:)();
}

uint64_t FormatRange.closedRange.getter@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v37 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  unsigned int v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unsigned int v10 = (char *)&v33 - v9;
  int v11 = *(void **)(v5 - 8);
  MEMORY[0x1F4188790](v12);
  unsigned int v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v16 = MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v33 - v17;
  uint64_t v19 = (void (*)(char *, uint64_t, uint64_t, __n128))v11[2];
  v19((char *)&v33 - v17, v3, v5, v16);
  uint64_t v20 = (char *)(v3 + *(int *)(a1 + 52));
  uint64_t v36 = (void (*)(char *, char *, uint64_t))v19;
  ((void (*)(char *, char *, uint64_t))v19)(v14, v20, v5);
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t result = sub_1C151E59C();
  if (result)
  {
    uint64_t v23 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v24 = TupleTypeMetadata2;
    uint64_t v34 = v14;
    uint64_t v35 = v21;
    uint64_t v25 = &v10[v23];
    char v26 = (void (*)(char *, char *, uint64_t))v11[4];
    v26(v10, v18, v5);
    v26(v25, v34, v5);
    uint64_t v27 = &v7[*(int *)(v24 + 48)];
    uint64_t v28 = v36;
    v36(v7, v10, v5);
    v28(v27, v25, v5);
    long long v29 = v37;
    v26(v37, v7, v5);
    uint64_t v30 = (void (*)(char *, uint64_t))v11[1];
    v30(v27, v5);
    long long v31 = &v7[*(int *)(TupleTypeMetadata2 + 48)];
    v26(v7, v10, v5);
    v26(v31, v25, v5);
    uint64_t v32 = sub_1C151E5BC();
    v26(&v29[*(int *)(v32 + 36)], v31, v5);
    return ((uint64_t (*)(char *, uint64_t))v30)(v7, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C0264028(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C0264064(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_1C02640E4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C0264174(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, v5);
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_1C0264280(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8) + 8;
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))v6;
  (*(void (**)(uint64_t, uint64_t))v6)(a1, v3);
  unint64_t v4 = (*(void *)(v6 + 56) + a1 + *(unsigned __int8 *)(v6 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 72);
  return v7(v4, v3);
}

unint64_t sub_1C026431C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), v5);
  return a1;
}

unint64_t sub_1C02643B0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  uint64_t v8 = v6 + 24;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), (*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), v5);
  return a1;
}

unint64_t sub_1C0264444(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = v6 + 32;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), v5);
  return a1;
}

unint64_t sub_1C02644D8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  uint64_t v8 = v6 + 40;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), v5);
  return a1;
}

uint64_t sub_1C026456C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v8 = ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v6;
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_1C02646D8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C0264900);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        __n128 v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

NewsFeed::SavingCommandState_optional __swiftcall SavingCommandState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1 = sub_1C15205AC();
  swift_bridgeObjectRelease();
  if (v1 == 1) {
    v2.value = NewsFeed_SavingCommandState_notSaved;
  }
  else {
    v2.value = NewsFeed_SavingCommandState_unknownDefault;
  }
  if (v1) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t SavingCommandState.rawValue.getter(char a1)
{
  if (a1) {
    return 0x6465766153746F6ELL;
  }
  else {
    return 0x6465766173;
  }
}

uint64_t sub_1C02649B0(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x6465766153746F6ELL;
  }
  else {
    uint64_t v3 = 0x6465766173;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (*a2) {
    uint64_t v5 = 0x6465766153746F6ELL;
  }
  else {
    uint64_t v5 = 0x6465766173;
  }
  if (*a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C0264A58()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0264AD8()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C0264B44()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C0264BC0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

BOOL SavingCommandState.isEligibleForTipPresentation.getter(char a1)
{
  return (a1 & 1) == 0;
}

uint64_t static Commands.Saving.clear.getter()
{
  return sub_1BFC387A8(&qword_1EB8848A8);
}

uint64_t SaveCommandContext.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SaveCommandContext.origin.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

uint64_t SaveCommandContext.origin.setter(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 28)) = result;
  return result;
}

uint64_t (*SaveCommandContext.origin.modify())(void)
{
  return nullsub_1;
}

uint64_t SaveCommandContext.init(data:origin:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(int *)(type metadata accessor for SaveCommandContext() + 28);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1, a3);
  *(unsigned char *)(a4 + v8) = a2;
  return result;
}

uint64_t static UIActivityType.save.getter()
{
  return sub_1C151E5EC();
}

uint64_t static ContextMenuItem.save(headline:commandOrigin:)()
{
  return sub_1C0265D04();
}

uint64_t sub_1C0264D68(unsigned char *a1)
{
  if (*a1)
  {
    uint64_t v1 = self;
    id v2 = objc_msgSend(v1, sel_mainBundle);
    id v3 = objc_msgSend(v2, sel_bundleIdentifier);

    if (v3)
    {
      uint64_t v4 = sub_1C151E62C();
      uint64_t v6 = v5;

      if (v4 == 0x6C7070612E6D6F63 && v6 == 0xEE007377656E2E65)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C1520A9C();
        swift_bridgeObjectRelease();
      }
    }
    type metadata accessor for Localized();
    id v9 = objc_msgSend(v1, sel_bundleForClass_, swift_getObjCClassFromMetadata());
  }
  else
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v9 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  }
  uint64_t v10 = sub_1C1515B8C();

  return v10;
}

id sub_1C0265014(unsigned char *a1)
{
  if (*a1)
  {
    if (qword_1EB87BD08 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EB870F38;
  }
  else
  {
    if (qword_1EA194A30 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EA1AA2A0;
  }
  id v2 = (void *)*v1;
  return v2;
}

uint64_t static SwipeAction.save(headline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v3 = sub_1C151A13C();
  uint64_t v15 = *(void *)(v3 - 8);
  uint64_t v16 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C151A14C();
  uint64_t v6 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0265F74();
  MEMORY[0x1F4188790](v9 - 8);
  sub_1C0266268(0, &qword_1EB8707D0, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v10 - 8);
  sub_1C0266268(0, &qword_1EB85AD08, MEMORY[0x1E4FAC358]);
  MEMORY[0x1F4188790](v11 - 8);
  if (qword_1EB87B150 != -1) {
    swift_once();
  }
  uint64_t v21 = a1;
  char v22 = 2;
  char v20 = 1;
  sub_1BFE6DCD8();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1C151AE7C();
  char v19 = 1;
  sub_1C151AE9C();
  char v18 = 1;
  sub_1C151AEDC();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4FABC60], v14);
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v5, *MEMORY[0x1E4FABC58], v16);
  return sub_1C151A16C();
}

id sub_1C0265458()
{
  id v0 = objc_msgSend(self, sel_systemOrangeColor);
  return v0;
}

uint64_t sub_1C0265498(unsigned char *a1)
{
  if (*a1)
  {
    if (qword_1EB87BD08 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_1EB870F38;
    id v2 = objc_msgSend(self, sel_whiteColor);
  }
  else
  {
    if (qword_1EA194A30 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_1EA1AA2A0;
    id v2 = objc_msgSend(self, sel_whiteColor);
  }
  id v3 = v2;
  uint64_t v4 = _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v1, v3);

  return v4;
}

uint64_t sub_1C0265590(unsigned char *a1)
{
  if (*a1)
  {
    if (qword_1EB87BD08 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EB870F38;
  }
  else
  {
    if (qword_1EA194A30 != -1) {
      swift_once();
    }
    uint64_t v1 = &qword_1EA1AA2A0;
  }
  id v2 = (id)*v1;
  return sub_1C151B39C();
}

uint64_t static KeyCommandItem.save(headline:)()
{
  sub_1C0265F74();
  MEMORY[0x1F4188790](v0 - 8);
  if (qword_1EB87B150 != -1) {
    swift_once();
  }
  sub_1BFE6DCD8();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1C151AEDC();
  return sub_1C151A5AC();
}

void sub_1C02657C0(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  if (*a1)
  {
    id v3 = self;
    id v4 = objc_msgSend(v3, sel_mainBundle);
    id v5 = objc_msgSend(v4, sel_bundleIdentifier);

    if (v5)
    {
      uint64_t v6 = sub_1C151E62C();
      uint64_t v8 = v7;

      if (v6 == 0x6C7070612E6D6F63 && v8 == 0xEE007377656E2E65)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C1520A9C();
        swift_bridgeObjectRelease();
      }
    }
    type metadata accessor for Localized();
    id v11 = objc_msgSend(v3, sel_bundleForClass_, swift_getObjCClassFromMetadata());
  }
  else
  {
    type metadata accessor for Localized();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v11 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  }
  uint64_t v12 = sub_1C1515B8C();
  uint64_t v14 = v13;

  *a2 = v12;
  a2[1] = v14;
}

BOOL static SaveCommandOrigin.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t SaveCommandOrigin.hash(into:)()
{
  return sub_1C1520DCC();
}

uint64_t SaveCommandOrigin.hashValue.getter()
{
  return sub_1C1520E0C();
}

NewsFeed::SaveCommandOrigin_optional __swiftcall SaveCommandOrigin.init(shareContext:)(NewsFeed::CommandShareContext shareContext)
{
  return (NewsFeed::SaveCommandOrigin_optional)(0x2000201u >> (8 * *(unsigned char *)shareContext));
}

uint64_t _s5TeaUI15SharingActivityC8NewsFeedE4save8headlineACSo19FCHeadlineProviding_p_tFZ_0()
{
  sub_1C02661FC();
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C0265F74();
  MEMORY[0x1F4188790](v1 - 8);
  if (qword_1EB87B150 != -1) {
    swift_once();
  }
  swift_retain();
  swift_unknownObjectRetain();
  sub_1C151E5EC();
  sub_1BFE6DCD8();
  sub_1C151AEDC();
  sub_1C151B3AC();
  sub_1C151AEDC();
  sub_1C151A9FC();
  swift_allocObject();
  return sub_1C151A9DC();
}

uint64_t sub_1C0265D04()
{
  sub_1C0266268(0, qword_1EB893840, MEMORY[0x1E4FAC5E8]);
  MEMORY[0x1F4188790](v0 - 8);
  sub_1C0266268(0, &qword_1EB8707D0, MEMORY[0x1E4FAC360]);
  MEMORY[0x1F4188790](v1 - 8);
  sub_1C0266268(0, &qword_1EB894228, MEMORY[0x1E4FAC368]);
  MEMORY[0x1F4188790](v2 - 8);
  if (qword_1EB87B150 != -1) {
    swift_once();
  }
  sub_1BFE6DCD8();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1C151AEBC();
  sub_1C151AE9C();
  sub_1C151B2DC();
  sub_1C151A81C();
  swift_allocObject();
  return sub_1C151A80C();
}

void sub_1C0265F74()
{
  if (!qword_1EB85AD10)
  {
    sub_1BFE6DCD8();
    unint64_t v0 = sub_1C151AEFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85AD10);
    }
  }
}

unint64_t sub_1C0265FE0()
{
  unint64_t result = qword_1EA198CB8;
  if (!qword_1EA198CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198CB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SavingCommandState()
{
  return &type metadata for SavingCommandState;
}

ValueMetadata *type metadata accessor for Commands.Saving()
{
  return &type metadata for Commands.Saving;
}

uint64_t sub_1C0266054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 40) + a1) = *(unsigned char *)(*(void *)(v5 + 40) + a2);
  return a1;
}

uint64_t sub_1C02660BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 32) + a1) = *(unsigned char *)(*(void *)(v5 + 32) + a2);
  return a1;
}

uint64_t sub_1C0266124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 24) + a1) = *(unsigned char *)(*(void *)(v5 + 24) + a2);
  return a1;
}

ValueMetadata *type metadata accessor for SaveCommandOrigin()
{
  return &type metadata for SaveCommandOrigin;
}

void sub_1C02661FC()
{
  if (!qword_1EA198CC8)
  {
    sub_1C151B3AC();
    sub_1BFE6DCD8();
    unint64_t v0 = sub_1C151AEFC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA198CC8);
    }
  }
}

void sub_1C0266268(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFE6DCD8();
    unint64_t v7 = a3(a1, &type metadata for SavingCommandState, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C02662CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC848] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void static FormatCodingNotificationsActionStrategy.defaultValue.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t static FormatCodingNotificationsActionStrategy.shouldEncode(wrappedValue:)(unsigned __int8 *a1)
{
  return *a1;
}

unint64_t sub_1C0266330(uint64_t a1)
{
  unint64_t result = sub_1C0266358();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0266358()
{
  unint64_t result = qword_1EA198CD0[0];
  if (!qword_1EA198CD0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA198CD0);
  }
  return result;
}

unint64_t sub_1C02663B0()
{
  unint64_t result = qword_1EB86FC90;
  if (!qword_1EB86FC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FC90);
  }
  return result;
}

unint64_t sub_1C0266408()
{
  unint64_t result = qword_1EB86FC88;
  if (!qword_1EB86FC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86FC88);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingNotificationsActionStrategy()
{
  return &type metadata for FormatCodingNotificationsActionStrategy;
}

uint64_t sub_1C026646C()
{
  unint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  sub_1C149BB3C(v0[4], v2, v1);
  if ((v1 & 0x1000000000000000) != 0)
  {
    return sub_1C15200EC();
  }
  else
  {
    if ((v1 & 0x2000000000000000) == 0)
    {
      if ((v2 & 0x1000000000000000) == 0) {
        sub_1C152020C();
      }
    }
    return sub_1C152021C();
  }
}

unint64_t sub_1C0266548(unint64_t result)
{
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_39:
    __break(1u);
    return result;
  }
  unint64_t v2 = result;
  if (result)
  {
    unint64_t v3 = v1[2];
    unint64_t v4 = v1[3];
    if ((v4 & 0x2000000000000000) != 0) {
      unint64_t v5 = HIBYTE(v4) & 0xF;
    }
    else {
      unint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v6 = (v3 >> 59) & 1;
    if ((v4 & 0x1000000000000000) == 0) {
      LOBYTE(v6) = 1;
    }
    uint64_t v7 = 4 << v6;
    while (v2)
    {
      unint64_t v8 = v1[4];
      if (4 * v5 <= v8 >> 14) {
        return result;
      }
      if ((v1[4] & 0xCLL) == v7 || (v1[4] & 1) == 0)
      {
        if ((v1[4] & 0xCLL) == v7)
        {
          unint64_t result = sub_1C149BAC0(v1[4], v3, v4);
          unint64_t v8 = result;
          if (v5 <= result >> 16) {
            goto LABEL_38;
          }
        }
        else if (v5 <= v8 >> 16)
        {
          goto LABEL_38;
        }
        if ((v8 & 1) == 0) {
          unint64_t v8 = v8 & 0xC | sub_1C149BC4C(v8, v3, v4) & 0xFFFFFFFFFFFFFFF3 | 1;
        }
      }
      else if (v5 <= v8 >> 16)
      {
        goto LABEL_37;
      }
      if ((v4 & 0x1000000000000000) != 0)
      {
        unint64_t result = sub_1C151E72C();
      }
      else
      {
        unint64_t v10 = v8 >> 16;
        if ((v4 & 0x2000000000000000) != 0)
        {
          v15[0] = v3;
          v15[1] = v4 & 0xFFFFFFFFFFFFFFLL;
          int v12 = *((unsigned __int8 *)v15 + v10);
        }
        else
        {
          uint64_t v11 = (v4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((v3 & 0x1000000000000000) == 0) {
            uint64_t v11 = sub_1C152020C();
          }
          int v12 = *(unsigned __int8 *)(v11 + v10);
        }
        int v13 = (char)v12;
        unsigned int v14 = __clz(v12 ^ 0xFF) - 24;
        if (v13 >= 0) {
          LOBYTE(v14) = 1;
        }
        unint64_t result = ((v10 + v14) << 16) | 5;
      }
      v1[4] = result;
      if (!--v2) {
        return result;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_1C0266704(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v3 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v29 = v3;
  if (!v3) {
    return 1;
  }
  unint64_t v5 = v2[2];
  unint64_t v6 = v2[3];
  uint64_t v7 = v5 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(v6) & 0xF;
  }
  unint64_t v8 = v2[4];
  uint64_t v28 = a2 & 0xFFFFFFFFFFFFFFLL;
  unint64_t v33 = v7;
  unint64_t v31 = 4 * v7;
  uint64_t v9 = (v5 >> 59) & 1;
  if ((v6 & 0x1000000000000000) == 0) {
    LOBYTE(v9) = 1;
  }
  uint64_t v10 = 4 << v9;
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v30 = v10;
  while (1)
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      int v12 = sub_1C15200EC();
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        unint64_t v34 = a1;
        uint64_t v35 = v28;
      }
      else if ((a1 & 0x1000000000000000) == 0)
      {
        sub_1C152020C();
      }
      int v12 = sub_1C152021C();
    }
    int v14 = v12;
    uint64_t v15 = v13;
    if (v31 <= v8 >> 14)
    {
LABEL_57:
      uint64_t v26 = 0;
LABEL_58:
      swift_bridgeObjectRelease();
      return v26;
    }
    unint64_t v16 = v8 & 0xC;
    BOOL v17 = (v8 & 1) == 0 || v16 == v10;
    int v18 = v17;
    if (!v17)
    {
      if (v8 >> 16 >= v33) {
        goto LABEL_62;
      }
      goto LABEL_33;
    }
    unint64_t v19 = v8;
    if (v16 == v10) {
      unint64_t v19 = sub_1C149BAC0(v8, v5, v6);
    }
    if (v19 >> 16 >= v33) {
      break;
    }
    if ((v19 & 1) == 0) {
      sub_1C149BC4C(v19, v5, v6);
    }
LABEL_33:
    if ((v6 & 0x1000000000000000) != 0)
    {
      int v20 = sub_1C15200EC();
    }
    else
    {
      if ((v6 & 0x2000000000000000) != 0)
      {
        unint64_t v34 = v5;
        uint64_t v35 = v6 & 0xFFFFFFFFFFFFFFLL;
      }
      else if ((v5 & 0x1000000000000000) == 0)
      {
        sub_1C152020C();
      }
      int v20 = sub_1C152021C();
    }
    uint64_t v10 = v30;
    if (v14 != v20) {
      goto LABEL_57;
    }
    if (v18)
    {
      if (v16 == v30) {
        unint64_t v8 = sub_1C149BAC0(v8, v5, v6);
      }
      if (v33 <= v8 >> 16) {
        goto LABEL_63;
      }
      if ((v8 & 1) == 0) {
        unint64_t v8 = v8 & 0xC | sub_1C149BC4C(v8, v5, v6) & 0xFFFFFFFFFFFFFFF3 | 1;
      }
    }
    else if (v33 <= v8 >> 16)
    {
      goto LABEL_64;
    }
    if ((v6 & 0x1000000000000000) != 0)
    {
      unint64_t v8 = sub_1C151E72C();
    }
    else
    {
      unint64_t v21 = v8 >> 16;
      if ((v6 & 0x2000000000000000) != 0)
      {
        unint64_t v34 = v5;
        uint64_t v35 = v6 & 0xFFFFFFFFFFFFFFLL;
        int v23 = *((unsigned __int8 *)&v34 + v21);
      }
      else
      {
        uint64_t v22 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v5 & 0x1000000000000000) == 0) {
          uint64_t v22 = sub_1C152020C();
        }
        int v23 = *(unsigned __int8 *)(v22 + v21);
      }
      int v24 = (char)v23;
      unsigned int v25 = __clz(v23 ^ 0xFF) - 24;
      if (v24 >= 0) {
        LOBYTE(v25) = 1;
      }
      unint64_t v8 = ((v21 + v25) << 16) | 5;
    }
    v11 += v15;
    if (v11 >= v29)
    {
      uint64_t v26 = 1;
      goto LABEL_58;
    }
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return 1;
}

uint64_t sub_1C0266A3C(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a2;
  unint64_t v5 = a1;
  unint64_t v7 = v2[2];
  unint64_t v6 = v2[3];
  uint64_t v8 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v52 = v8;
  unint64_t v9 = v2[4];
  unint64_t v45 = 4 * v8;
  if (4 * v8 > v9 >> 14)
  {
    unint64_t v10 = 0;
    if ((a2 & 0x2000000000000000) != 0) {
      uint64_t v11 = HIBYTE(a2) & 0xF;
    }
    else {
      uint64_t v11 = a1 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v12 = (v7 >> 59) & 1;
    uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
    if ((v6 & 0x1000000000000000) == 0) {
      LOBYTE(v12) = 1;
    }
    uint64_t v48 = 4 << v12;
    uint64_t v43 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    uint64_t v44 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v13 = 0xE000000000000000;
    uint64_t v46 = v7;
    uint64_t v39 = v3;
    unint64_t v49 = v6;
    while (2)
    {
      if (!v11) {
        return 0;
      }
      unint64_t v40 = v10;
      unint64_t v41 = v13;
      swift_bridgeObjectRetain();
      uint64_t v14 = 0;
      while (1)
      {
        if ((v4 & 0x1000000000000000) != 0)
        {
          int v16 = sub_1C15200EC();
        }
        else
        {
          if ((v4 & 0x2000000000000000) != 0)
          {
            unint64_t v50 = v5;
            uint64_t v51 = v42;
          }
          else if ((v5 & 0x1000000000000000) == 0)
          {
            sub_1C152020C();
          }
          int v16 = sub_1C152021C();
        }
        int v18 = v16;
        unint64_t v19 = v49;
        if (v45 <= v9 >> 14)
        {
          swift_bridgeObjectRelease();
          sub_1C009CCCC();
          swift_allocError();
          *(void *)uint64_t v37 = v5;
          *(void *)(v37 + 8) = v4;
          *(void *)(v37 + 16) = 0;
          *(unsigned char *)(v37 + 24) = 10;
          return swift_willThrow();
        }
        uint64_t v47 = v17;
        unint64_t v20 = v4;
        unint64_t v21 = v5;
        unint64_t v22 = v9 & 0xC;
        BOOL v23 = (v9 & 1) == 0 || v22 == v48;
        BOOL v24 = v23;
        if (v23)
        {
          unint64_t v25 = v9;
          if (v22 == v48)
          {
            unint64_t v25 = sub_1C149BAC0(v9, v7, v49);
            unint64_t v19 = v49;
          }
          if (v25 >> 16 >= v52)
          {
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
            return 0;
          }
          if ((v25 & 1) == 0)
          {
            sub_1C149BC4C(v25, v46, v49);
            unint64_t v19 = v49;
          }
        }
        else if (v9 >> 16 >= v52)
        {
          goto LABEL_66;
        }
        if ((v19 & 0x1000000000000000) != 0)
        {
          unint64_t v7 = v46;
          int v26 = sub_1C15200EC();
        }
        else if ((v19 & 0x2000000000000000) != 0)
        {
          unint64_t v50 = v46;
          uint64_t v51 = v44;
          unint64_t v7 = v46;
          int v26 = sub_1C152021C();
        }
        else
        {
          if ((v46 & 0x1000000000000000) == 0) {
            sub_1C152020C();
          }
          int v26 = sub_1C152021C();
          unint64_t v7 = v46;
        }
        if (v26 != v18) {
          break;
        }
        if (v24)
        {
          unint64_t v27 = v49;
          if (v22 == v48)
          {
            uint64_t v34 = sub_1C149BAC0(v9, v7, v49);
            unint64_t v27 = v49;
            unint64_t v9 = v34;
          }
          unint64_t v5 = v21;
          unint64_t v4 = v20;
          if (v52 <= v9 >> 16) {
            goto LABEL_67;
          }
          if ((v9 & 1) == 0)
          {
            unint64_t v28 = sub_1C149BC4C(v9, v7, v49);
            unint64_t v27 = v49;
            unint64_t v9 = v9 & 0xC | v28 & 0xFFFFFFFFFFFFFFF3 | 1;
          }
        }
        else
        {
          unint64_t v5 = v21;
          unint64_t v4 = v20;
          unint64_t v27 = v49;
          if (v52 <= v9 >> 16) {
            goto LABEL_68;
          }
        }
        if ((v27 & 0x1000000000000000) != 0)
        {
          unint64_t v9 = sub_1C151E72C();
          uint64_t v15 = v47;
        }
        else
        {
          unint64_t v29 = v9 >> 16;
          if ((v27 & 0x2000000000000000) != 0)
          {
            unint64_t v50 = v7;
            uint64_t v51 = v44;
            int v31 = *((unsigned __int8 *)&v50 + v29);
          }
          else
          {
            uint64_t v30 = v43;
            if ((v7 & 0x1000000000000000) == 0) {
              uint64_t v30 = sub_1C152020C();
            }
            int v31 = *(unsigned __int8 *)(v30 + v29);
          }
          uint64_t v15 = v47;
          int v32 = (char)v31;
          unsigned int v33 = __clz(v31 ^ 0xFF) - 24;
          if (v32 >= 0) {
            LOBYTE(v33) = 1;
          }
          unint64_t v9 = ((v29 + v33) << 16) | 5;
        }
        v14 += v15;
        if (v14 >= v11)
        {
          swift_bridgeObjectRelease();
          return v40;
        }
      }
      unint64_t v4 = v20;
      swift_bridgeObjectRelease();
      sub_1C026646C();
      unint64_t v50 = v40;
      uint64_t v51 = v41;
      sub_1C151E74C();
      unint64_t v10 = v50;
      unint64_t v35 = v51;
      sub_1C0266548(1uLL);
      unint64_t v9 = v39[4];
      unint64_t v13 = v35;
      unint64_t v5 = v21;
      if (v45 > v9 >> 14) {
        continue;
      }
      break;
    }
  }
  swift_bridgeObjectRelease();
  sub_1C009CCCC();
  swift_allocError();
  *(void *)uint64_t v36 = v5;
  *(void *)(v36 + 8) = v4;
  *(void *)(v36 + 16) = 0;
  *(unsigned char *)(v36 + 24) = 10;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

unint64_t sub_1C0266ECC(uint64_t a1)
{
  unint64_t v3 = v1[2];
  unint64_t v4 = v1[3];
  if ((v4 & 0x2000000000000000) != 0) {
    unint64_t v5 = HIBYTE(v4) & 0xF;
  }
  else {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t result = v1[4];
  if (4 * v5 <= result >> 14)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_1C151E87C();
    sub_1C009CCCC();
    swift_allocError();
    *(void *)uint64_t v12 = v11;
    *(void *)(v12 + 8) = a1;
    *(void *)(v12 + 16) = 0;
    *(unsigned char *)(v12 + 24) = 3;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return v2;
  }
  uint64_t v2 = 0;
  uint64_t v7 = (v3 >> 59) & 1;
  if ((v4 & 0x1000000000000000) == 0) {
    LOBYTE(v7) = 1;
  }
  uint64_t v8 = 4 << v7;
  while ((result & 0xC) != v8 && (result & 1) != 0)
  {
    if (result >> 16 >= v5) {
      goto LABEL_46;
    }
LABEL_21:
    if ((v4 & 0x1000000000000000) != 0)
    {
      int v10 = sub_1C15200EC();
    }
    else
    {
      if ((v4 & 0x2000000000000000) == 0 && (v3 & 0x1000000000000000) == 0) {
        sub_1C152020C();
      }
      int v10 = sub_1C152021C();
    }
    if (sub_1C045262C(v10, a1)) {
      return v2;
    }
    unint64_t result = v1[4];
    if (result & 0xC) != v8 && (result)
    {
      if (result >> 16 >= v5) {
        goto LABEL_47;
      }
LABEL_35:
      if ((v4 & 0x1000000000000000) == 0) {
        goto LABEL_36;
      }
      goto LABEL_8;
    }
    if ((result & 0xC) == v8) {
      unint64_t result = sub_1C149BAC0(result, v3, v4);
    }
    if (result >> 16 >= v5) {
      goto LABEL_48;
    }
    if (result) {
      goto LABEL_35;
    }
    sub_1C149BC4C(result, v3, v4);
    if ((v4 & 0x1000000000000000) == 0)
    {
LABEL_36:
      if ((v4 & 0x2000000000000000) == 0 && (v3 & 0x1000000000000000) == 0) {
        sub_1C152020C();
      }
      sub_1C152021C();
      goto LABEL_9;
    }
LABEL_8:
    sub_1C15200EC();
LABEL_9:
    sub_1C151E74C();
    sub_1C0266548(1uLL);
    unint64_t result = v1[4];
    if (4 * v5 <= result >> 14) {
      goto LABEL_43;
    }
  }
  if ((result & 0xC) == v8) {
    unint64_t result = sub_1C149BAC0(result, v3, v4);
  }
  if (result >> 16 < v5)
  {
    if ((result & 1) == 0) {
      sub_1C149BC4C(result, v3, v4);
    }
    goto LABEL_21;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

unint64_t sub_1C02671A0()
{
  unint64_t v1 = v0[2];
  unint64_t v2 = v0[3];
  if ((v2 & 0x2000000000000000) != 0) {
    unint64_t v3 = HIBYTE(v2) & 0xF;
  }
  else {
    unint64_t v3 = v1 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t result = v0[4];
  if (4 * v3 <= result >> 14) {
    return result;
  }
  uint64_t v5 = (v1 >> 59) & 1;
  if ((v2 & 0x1000000000000000) == 0) {
    LOBYTE(v5) = 1;
  }
  uint64_t v6 = 4 << v5;
  while ((result & 0xC) != v6 && (result & 1) != 0)
  {
    if (result >> 16 >= v3) {
      goto LABEL_51;
    }
LABEL_21:
    if ((v2 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1C15200EC();
      if (result != 32) {
        return result;
      }
    }
    else
    {
      if ((v2 & 0x2000000000000000) != 0)
      {
        unint64_t v14 = v1;
        uint64_t v15 = v2 & 0xFFFFFFFFFFFFFFLL;
      }
      else if ((v1 & 0x1000000000000000) == 0)
      {
        sub_1C152020C();
      }
      unint64_t result = sub_1C152021C();
      if (result != 32) {
        return result;
      }
    }
    unint64_t v8 = v0[4];
    if (v8 & 0xC) != v6 && (v8)
    {
      if (v3 <= v8 >> 16) {
        goto LABEL_52;
      }
LABEL_34:
      if ((v2 & 0x1000000000000000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_8;
    }
    if ((v8 & 0xC) == v6)
    {
      unint64_t result = sub_1C149BAC0(v0[4], v1, v2);
      unint64_t v8 = result;
      if (v3 <= result >> 16) {
        goto LABEL_53;
      }
    }
    else if (v3 <= v8 >> 16)
    {
      goto LABEL_53;
    }
    if (v8) {
      goto LABEL_34;
    }
    unint64_t v8 = v8 & 0xC | sub_1C149BC4C(v8, v1, v2) & 0xFFFFFFFFFFFFFFF3 | 1;
    if ((v2 & 0x1000000000000000) == 0)
    {
LABEL_35:
      unint64_t v9 = v8 >> 16;
      if ((v2 & 0x2000000000000000) != 0)
      {
        unint64_t v14 = v1;
        uint64_t v15 = v2 & 0xFFFFFFFFFFFFFFLL;
        int v11 = *((unsigned __int8 *)&v14 + v9);
      }
      else
      {
        uint64_t v10 = (v2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((v1 & 0x1000000000000000) == 0) {
          uint64_t v10 = sub_1C152020C();
        }
        int v11 = *(unsigned __int8 *)(v10 + v9);
      }
      int v12 = (char)v11;
      unsigned int v13 = __clz(v11 ^ 0xFF) - 24;
      if (v12 >= 0) {
        LOBYTE(v13) = 1;
      }
      unint64_t result = ((v9 + v13) << 16) | 5;
      goto LABEL_9;
    }
LABEL_8:
    unint64_t result = sub_1C151E72C();
LABEL_9:
    v0[4] = result;
    if (4 * v3 <= result >> 14) {
      return result;
    }
  }
  if ((result & 0xC) == v6) {
    unint64_t result = sub_1C149BAC0(result, v1, v2);
  }
  if (result >> 16 < v3)
  {
    if ((result & 1) == 0) {
      sub_1C149BC4C(result, v1, v2);
    }
    goto LABEL_21;
  }
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_1C02673FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDOMReader()
{
  return self;
}

uint64_t sub_1C0267464()
{
  swift_release();
  return swift_release();
}

uint64_t sub_1C02674A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1C02674E4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C0267544(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t type metadata accessor for FeedRefreshStrategyCursorFactory()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C02675A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v28 = a6;
  unint64_t v29 = a8;
  uint64_t v25 = a7;
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  uint64_t v24 = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness - 8);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void *)(a10 - 8);
  __n128 v18 = MEMORY[0x1F4188790](v17);
  unint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v20, a1, a10, v18);
  if (a2)
  {
    unint64_t v21 = *(void (**)(char *, uint64_t))(v16 + 8);
    swift_retain();
    v21(v20, a10);
  }
  else
  {
    type metadata accessor for FeedCursorTracker();
    (*(void (**)(uint64_t, uint64_t))(a11 + 48))(a10, a11);
    a2 = FeedCursorTracker.__allocating_init(context:)((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, a10);
  }
  uint64_t v22 = v29(a1, v25, a2, v24, v26, v27, v28);
  swift_release();
  return v22;
}

uint64_t sub_1C0267830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1C151FD8C();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, a1, v4);
}

id VideoLiveIcon.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

char *VideoLiveIcon.init(frame:)(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label;
  id v11 = objc_allocWithZone(MEMORY[0x1E4FB1930]);
  int v12 = v4;
  *(void *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v41.receiver = v12;
  v41.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v41, sel_initWithFrame_, a1, a2, a3, a4);
  id v14 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v14, sel_setCornerRadius_, 10.0);

  id v15 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  uint64_t v16 = (char *)v13;
  id v17 = objc_msgSend(v15, sel_initWithRed_green_blue_alpha_, 1.0, 0.31372549, 0.4, 1.0);
  objc_msgSend(v16, sel_setBackgroundColor_, v17);

  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label;
  uint64_t v19 = *(void **)&v16[OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label];
  objc_msgSend(v16, sel_addSubview_, v19);
  type metadata accessor for Localized();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  unint64_t v21 = self;
  id v22 = v19;
  id v23 = objc_msgSend(v21, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  sub_1C151E6DC();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_setText_, v24, 0x80000001C1609050);

  uint64_t v25 = *(void **)&v16[v18];
  uint64_t v26 = self;
  id v27 = v25;
  id v28 = objc_msgSend(v26, sel_whiteColor);
  objc_msgSend(v27, sel_setTextColor_, v28);

  unint64_t v29 = *(void **)&v16[v18];
  objc_msgSend(v29, sel_setTextAlignment_, 1);
  uint64_t v30 = self;
  double v31 = *MEMORY[0x1E4FB09E0];
  id v32 = v29;
  id v33 = objc_msgSend(v30, sel_systemFontOfSize_weight_, 12.0, v31);
  id v34 = objc_msgSend(v33, sel_fontDescriptor);
  id v35 = objc_msgSend(v34, sel_fontDescriptorWithDesign_, *MEMORY[0x1E4FB0938]);

  if (v35)
  {
    id v36 = objc_msgSend(v30, sel_fontWithDescriptor_size_, v35, 12.0);

    id v33 = v36;
  }
  objc_msgSend(v32, sel_setFont_, v33);

  id v37 = *(id *)&v16[v18];
  id v38 = objc_msgSend(v21, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1C1515B8C();

  uint64_t v39 = (void *)sub_1C151E5EC();
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_setAccessibilityLabel_, v39, 0x80000001C1609090);

  return v16;
}

Swift::Void __swiftcall VideoLiveIcon.layoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
}

id VideoLiveIcon.intrinsicContentSize.getter()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed13VideoLiveIcon_label);
  id result = objc_msgSend(v1, sel_font);
  if (result)
  {
    uint64_t v3 = result;
    objc_msgSend(result, sel_capHeight);

    return objc_msgSend(v1, sel_intrinsicContentSize);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id VideoLiveIcon.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for VideoLiveIcon()
{
  return self;
}

ValueMetadata *type metadata accessor for DebugFormatCreatePackageResponse()
{
  return &type metadata for DebugFormatCreatePackageResponse;
}

uint64_t sub_1C02680FC(char *a1, char *a2)
{
  return sub_1C1479C84(*a1, *a2);
}

uint64_t sub_1C0268108()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C026819C()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C026821C()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C02682AC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C026830C(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000010;
  if (*v1) {
    unint64_t v2 = 0x72635F73656C6966;
  }
  unint64_t v3 = 0x80000001C15FD0D0;
  if (*v1) {
    unint64_t v3 = 0xED00006465746165;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C026835C()
{
  if (*v0) {
    return 0x72635F73656C6966;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1C02683A8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C026840C(uint64_t a1)
{
  unint64_t v2 = sub_1C026872C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0268448(uint64_t a1)
{
  unint64_t v2 = sub_1C026872C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0268484@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C02684B4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1C02684B4(void *a1)
{
  sub_1C02686D0();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C026872C();
  sub_1C1520EBC();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v10[31] = 0;
    uint64_t v8 = sub_1C152069C();
    sub_1BFED9C20();
    v10[15] = 1;
    sub_1BFDEF88C();
    swift_bridgeObjectRetain();
    sub_1C15206EC();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

void sub_1C02686D0()
{
  if (!qword_1EA198D60)
  {
    sub_1C026872C();
    unint64_t v0 = sub_1C152072C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA198D60);
    }
  }
}

unint64_t sub_1C026872C()
{
  unint64_t result = qword_1EA198D68;
  if (!qword_1EA198D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198D68);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugFormatCreatePackageResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C026884CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCreatePackageResponse.CodingKeys()
{
  return &type metadata for DebugFormatCreatePackageResponse.CodingKeys;
}

unint64_t sub_1C0268888()
{
  unint64_t result = qword_1EA198D70;
  if (!qword_1EA198D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198D70);
  }
  return result;
}

unint64_t sub_1C02688E0()
{
  unint64_t result = qword_1EA198D78;
  if (!qword_1EA198D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198D78);
  }
  return result;
}

unint64_t sub_1C0268938()
{
  unint64_t result = qword_1EA198D80;
  if (!qword_1EA198D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198D80);
  }
  return result;
}

uint64_t WebEmbedDatastoreFailures.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WebEmbedDatastoreFailures.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WebEmbedDatastoreFailures()
{
  return self;
}

uint64_t method lookup function for WebEmbedDatastoreFailures(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for WebEmbedDatastoreFailures);
}

uint64_t ThumbnailProcessorRequest.assetHandles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ThumbnailProcessorRequest.cacheIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

double ThumbnailProcessorRequest.thumbnailFrame.getter()
{
  return *(double *)(v0 + 80);
}

double ThumbnailProcessorRequest.focalFrame.getter()
{
  return *(double *)(v0 + 112);
}

double ThumbnailProcessorRequest.scale.getter()
{
  return *(double *)(v0 + 144);
}

uint64_t ThumbnailProcessorRequest.roundedCorners.getter()
{
  return *(void *)(v0 + 152);
}

double ThumbnailProcessorRequest.cornerRadius.getter()
{
  return *(double *)(v0 + 160);
}

uint64_t ThumbnailProcessorRequest.border.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C0268A9C(v1 + OBJC_IVAR____TtC8NewsFeed25ThumbnailProcessorRequest_border, a1);
}

uint64_t sub_1C0268A9C(uint64_t a1, uint64_t a2)
{
  sub_1BFE45748(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ThumbnailProcessorRequest.__allocating_init(thumbnailAssetHandle:thumbnailFrame:focalFrame:scale:byRoundingCorners:cornerRadius:)(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  double v43 = a9;
  double v44 = a10;
  sub_1BFE45748(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v26 - 8);
  id v28 = (char *)&v42 - v27;
  sub_1BFC66384(a1, (uint64_t)v45);
  uint64_t v29 = sub_1C151A01C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v46;
  uint64_t v32 = v47;
  uint64_t v33 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v45, v46);
  __n128 v34 = MEMORY[0x1F4188790](v33);
  id v36 = (char *)&v42 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v37 + 16))(v36, v34);
  uint64_t v40 = sub_1C0268FF8((uint64_t)v36, a2, (uint64_t)v28, v30, v31, v32, a3, a4, a5, a6, a7, a8, v43, v44, v38, v39, a17, a18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v40;
}

uint64_t ThumbnailProcessorRequest.__allocating_init(thumbnailAssetHandle:thumbnailFrame:focalFrame:scale:byRoundingCorners:cornerRadius:border:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v28 = *(void *)(a1 + 24);
  uint64_t v29 = *(void *)(a1 + 32);
  uint64_t v30 = __swift_mutable_project_boxed_opaque_existential_1(a1, v28);
  uint64_t v33 = sub_1C02694B8(v30, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, v18, v28, v29, v31, v32, a17, a18);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v33;
}

uint64_t ThumbnailProcessorRequest.init(thumbnailAssetHandle:thumbnailFrame:focalFrame:scale:byRoundingCorners:cornerRadius:border:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  double v39 = a10;
  double v40 = a11;
  uint64_t v28 = *(void *)(a1 + 24);
  uint64_t v29 = *(void *)(a1 + 32);
  uint64_t v30 = __swift_mutable_project_boxed_opaque_existential_1(a1, v28);
  __n128 v31 = MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v39 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v34 + 16))(v33, v31);
  uint64_t v37 = sub_1C0268FF8((uint64_t)v33, a2, a3, v18, v28, v29, a4, a5, a6, a7, a8, a9, v39, v40, v35, v36, a17, a18);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v37;
}

uint64_t ThumbnailProcessorRequest.deinit()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  sub_1BFC7EAB0(v0 + OBJC_IVAR____TtC8NewsFeed25ThumbnailProcessorRequest_border);
  return v0;
}

uint64_t sub_1C0268FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  double v44 = a14;
  double v43 = a13;
  double v42 = a10;
  sub_1BFE45748(0, (unint64_t *)&qword_1EB871510, MEMORY[0x1E4FABC10], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v29 - 8);
  __n128 v31 = (char *)&v41 - v30;
  _OWORD v51[3] = a5;
  v51[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v51);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(boxed_opaque_existential_0, a1, a5);
  sub_1BFC66384((uint64_t)v51, a4 + 24);
  sub_1BFE45748(0, (unint64_t *)&qword_1EB87A8A0, (uint64_t (*)(uint64_t))sub_1C0065520, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 32) = 0x69616E626D756874;
  *(void *)(inited + 40) = 0xE90000000000006CLL;
  sub_1BFC66384((uint64_t)v51, inited + 48);
  *(void *)(a4 + 16) = sub_1BFF59AB8(inited);
  *(double *)(a4 + 80) = a7;
  *(double *)(a4 + 88) = a8;
  double v34 = v42;
  *(double *)(a4 + 96) = a9;
  *(double *)(a4 + 104) = v34;
  *(double *)(a4 + 112) = a11;
  *(double *)(a4 + 120) = a12;
  *(double *)(a4 + 128) = v43;
  *(double *)(a4 + 136) = v44;
  *(void *)(a4 + 144) = a17;
  *(double *)(a4 + 152) = *(double *)&a2;
  uint64_t v35 = a4 + OBJC_IVAR____TtC8NewsFeed25ThumbnailProcessorRequest_border;
  *(void *)(a4 + 160) = a18;
  sub_1C0268A9C(a3, v35);
  double v45 = 0.0;
  double v46 = -2.68156159e154;
  sub_1C15200FC();
  double v49 = v45;
  double v50 = v46;
  sub_1C151A72C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  double v45 = a7;
  double v46 = a8;
  double v47 = a9;
  double v48 = v34;
  type metadata accessor for CGRect(0);
  sub_1C152036C();
  sub_1C151E80C();
  double v45 = a11;
  double v46 = a12;
  double v47 = v43;
  double v48 = v44;
  sub_1C152036C();
  sub_1C151E80C();
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  double v45 = *(double *)&a2;
  type metadata accessor for UIRectCorner(0);
  sub_1C152036C();
  sub_1C151E80C();
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C0268A9C(a3, (uint64_t)v31);
  uint64_t v36 = sub_1C151A01C();
  uint64_t v37 = *(void *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v31, 1, v36) == 1)
  {
    sub_1BFC7EAB0((uint64_t)v31);
  }
  else
  {
    sub_1C151A00C();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v36);
  }
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  double v38 = v49;
  double v39 = v50;
  sub_1BFC7EAB0(a3);
  *(double *)(a4 + 64) = v38;
  *(double *)(a4 + 72) = v39;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return a4;
}

uint64_t sub_1C02694B8(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  double v36 = a10;
  double v37 = a11;
  uint64_t v29 = *(void *)(a13 - 8);
  MEMORY[0x1F4188790](a1);
  __n128 v31 = (char *)&v36 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v31, a1, a13);
  return sub_1C0268FF8((uint64_t)v31, a2, a3, v32, a13, a14, a4, a5, a6, a7, a8, a9, v36, v37, v33, v34, a17, a18);
}

uint64_t sub_1C0269624()
{
  return type metadata accessor for ThumbnailProcessorRequest();
}

uint64_t method lookup function for ThumbnailProcessorRequest(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ThumbnailProcessorRequest);
}

uint64_t dispatch thunk of ThumbnailProcessorRequest.__allocating_init(thumbnailAssetHandle:thumbnailFrame:focalFrame:scale:byRoundingCorners:cornerRadius:border:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

id HeadlineView.mediaView.getter()
{
  return *(id *)(v0 + qword_1EB874258);
}

id HeadlineView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id HeadlineView.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1C026971C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  _s8NewsFeed12HeadlineViewC5coderACyxGSgSo7NSCoderC_tcfc_0();
}

id HeadlineView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C026977C(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_1EB874248);
}

Swift::Void __swiftcall HeadlineView.prepareForReuse()()
{
  id v1 = *(id *)(*(void *)(v0 + qword_1EB874268) + OBJC_IVAR____TtC8NewsFeed11DebugButton_onTap);
}

void sub_1C0269890()
{
}

void sub_1C02698B8()
{
  swift_getWitnessTable();
  JUMPOUT(0x1C18C4650);
}

void sub_1C026990C()
{
  if (!qword_1EB895EB8)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB895EB8);
    }
  }
}

void _s8NewsFeed12HeadlineViewC5coderACyxGSgSo7NSCoderC_tcfc_0()
{
  uint64_t v1 = qword_1EB874258;
  *(void *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v2 = qword_1EB874260;
  *(void *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v3 = qword_1EB874270;
  *(void *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v4 = qword_1EB874280;
  *(void *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v5 = qword_1EB874250;
  unsigned int v6 = (objc_class *)sub_1C151CD7C();
  *(void *)&v0[v5] = objc_msgSend(objc_allocWithZone(v6), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v7 = qword_1EB874278;
  *(void *)&v0[v7] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1930]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v8 = qword_1EB874268;
  *(void *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugButton()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  uint64_t v9 = qword_1EB874248;
  *(void *)&v0[v9] = objc_msgSend(objc_allocWithZone(v6), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1C152040C();
  __break(1u);
}

uint64_t FeedModifierStore.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  FeedModifierStore.init()();
  return v0;
}

uint64_t FeedModifierStore.addPendingModifier(_:for:)()
{
  return swift_release();
}

uint64_t FeedModifierStore.deinit()
{
  swift_release();
  return v0;
}

uint64_t FeedModifierStore.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedModifierStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for FeedModifierStore);
}

uint64_t dispatch thunk of FeedModifierStore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unint64_t sub_1C0269C94()
{
  return 0xD000000000000016;
}

uint64_t sub_1C0269CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C026BD3C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C0269CDC(uint64_t a1)
{
  unint64_t v2 = sub_1C026BCE8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C0269D18(uint64_t a1)
{
  unint64_t v2 = sub_1C026BCE8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C0269D54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  sub_1C0062AEC(0, &qword_1EA198DA0, (uint64_t (*)(void))sub_1C026BCE8, (uint64_t)&type metadata for FeedGroupSortOptionPersonalization.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C026BCE8();
  sub_1C1520EBC();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v9 = v15;
  uint64_t v10 = sub_1C152062C();
  char v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)uint64_t v9 = v10;
  *(unsigned char *)(v9 + 8) = v12 & 1;
  return result;
}

uint64_t sub_1C0269F0C(void *a1)
{
  sub_1C0062AEC(0, &qword_1EA198DB0, (uint64_t (*)(void))sub_1C026BCE8, (uint64_t)&type metadata for FeedGroupSortOptionPersonalization.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C026BCE8();
  sub_1C1520F0C();
  sub_1C152076C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1C026A088()
{
  unint64_t result = qword_1EB86F038;
  if (!qword_1EB86F038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86F038);
  }
  return result;
}

uint64_t FeedGroupSortOption.encode(to:)(void *a1)
{
  sub_1C0062AEC(0, &qword_1EB86B838, (uint64_t (*)(void))sub_1C0089570, (uint64_t)&type metadata for FeedGroupSortOption.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  v15[0] = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = *v1;
  uint64_t v6 = *((unsigned __int8 *)v1 + 8);
  int v7 = *((unsigned __int8 *)v1 + 9);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1;
  char v11 = (char *)v15 - v10;
  __swift_project_boxed_opaque_existential_1(v9, v8);
  sub_1C0089570();
  sub_1C1520F0C();
  if (v7 == 1)
  {
    if (v5 | v6)
    {
      if (v5 ^ 1 | v6) {
        char v12 = 2;
      }
      else {
        char v12 = 1;
      }
      LOBYTE(v16) = v12;
    }
    else
    {
      LOBYTE(v16) = 0;
    }
    char v18 = 0;
    sub_1C026A30C();
    goto LABEL_12;
  }
  LOBYTE(v16) = 3;
  char v18 = 0;
  sub_1C026A30C();
  uint64_t v13 = v15[1];
  sub_1C152080C();
  if (!v13 && (v6 & 1) == 0)
  {
    uint64_t v16 = v5;
    char v17 = 0;
    char v18 = 1;
    sub_1C026A360();
LABEL_12:
    sub_1C152080C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15[0] + 8))(v11, v4);
}

unint64_t sub_1C026A30C()
{
  unint64_t result = qword_1EB864FD8;
  if (!qword_1EB864FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB864FD8);
  }
  return result;
}

unint64_t sub_1C026A360()
{
  unint64_t result = qword_1EA198D88;
  if (!qword_1EA198D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198D88);
  }
  return result;
}

uint64_t sub_1C026A3B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C147DFA4(*a1, *a2);
}

uint64_t sub_1C026A3C0()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C026A428()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C026A474()
{
  return sub_1C1520E0C();
}

uint64_t sub_1C026A4D8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1C026A538(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701869940;
  if (*v1) {
    uint64_t v2 = 1635017060;
  }
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1C026A560@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1C15205AC();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1C026A5C4(uint64_t a1)
{
  unint64_t v2 = sub_1C0089570();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C026A600(uint64_t a1)
{
  unint64_t v2 = sub_1C0089570();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C026A63C(unsigned __int8 *a1, char *a2)
{
  return sub_1C149430C(*a1, *a2);
}

uint64_t sub_1C026A648()
{
  return sub_1C015C7FC();
}

uint64_t sub_1C026A650()
{
  sub_1C151E77C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C026A728()
{
  return sub_1C0451004();
}

void sub_1C026A730(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE400000000000000;
  uint64_t v3 = 1701736302;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xED00006C61636967;
      uint64_t v3 = 0x6F6C6F6E6F726863;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000014;
      a1[1] = 0x80000001C15FD110;
      break;
    case 3:
      *a1 = 0x6C616E6F73726570;
      a1[1] = 0xEF6E6F6974617A69;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C026A7E0()
{
  return sub_1C151EAEC();
}

uint64_t sub_1C026A834(void *a1)
{
  return FeedGroupSortOption.encode(to:)(a1);
}

uint64_t (*sub_1C026A850(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  double v5 = *(double *)v2;
  uint64_t v6 = *(unsigned __int8 *)(v2 + 8);
  if (*(unsigned char *)(v2 + 9) == 1)
  {
    if (*(void *)&v5 | v6)
    {
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = a1;
      *(void *)(v7 + 24) = a2;
      *(double *)(v7 + 32) = v5;
      *(unsigned char *)(v7 + 40) = v6;
      *(unsigned char *)(v7 + 41) = 1;
      if (*(void *)&v5 ^ 1 | v6) {
        return sub_1C026BE04;
      }
      else {
        return sub_1C026BE34;
      }
    }
    else
    {
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = a1;
      *(void *)(v13 + 24) = a2;
      return sub_1C026BEA0;
    }
  }
  else if (v6)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    *(void *)(v12 + 24) = a2;
    *(double *)(v12 + 32) = v5;
    *(unsigned char *)(v12 + 40) = v6;
    *(unsigned char *)(v12 + 41) = 0;
    return sub_1C026BDD4;
  }
  else
  {
    if (v5 >= 1.0 || v5 < 0.0) {
      double v10 = 0.0;
    }
    else {
      double v10 = *(double *)v2;
    }
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a1;
    *(void *)(v11 + 24) = a2;
    *(double *)(v11 + 32) = v10;
    return (uint64_t (*)(uint64_t))sub_1C026BEF4;
  }
}

uint64_t sub_1C026A9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a4;
  *(void *)(v7 + 24) = a5;
  sub_1C151ED5C();
  swift_getWitnessTable();
  sub_1C151E9FC();
  swift_release();
  return sub_1C151EA3C();
}

uint64_t sub_1C026AACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a4;
  *(void *)(v7 + 24) = a5;
  sub_1C151ED5C();
  swift_getWitnessTable();
  uint64_t v8 = sub_1C151E9FC();
  swift_release();
  return v8;
}

uint64_t sub_1C026AB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a2;
  uint64_t v6 = sub_1C151631C();
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v34 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v33 = (char *)&v33 - v9;
  sub_1BFCD9524();
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF97C40();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v18 = MEMORY[0x1F4188790](v17);
  unint64_t v20 = (char *)&v33 - v19;
  unint64_t v21 = *(void (**)(uint64_t, uint64_t, __n128))(a4 + 32);
  v21(a3, a4, v18);
  uint64_t v22 = a3;
  uint64_t v23 = v35;
  ((void (*)(uint64_t, uint64_t))v21)(v22, a4);
  uint64_t v24 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_1BFCB311C((uint64_t)v20, (uint64_t)v13);
  sub_1BFCB311C((uint64_t)v16, v24);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  LODWORD(v20) = v25(v13, 1, v6);
  int v26 = v25((char *)v24, 1, v6);
  if (v20 == 1)
  {
    if (v26 == 1)
    {
      char v27 = 0;
    }
    else
    {
      sub_1BFF97BE4(v24);
      char v27 = 1;
    }
  }
  else if (v26 == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v6);
    char v27 = 0;
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    uint64_t v29 = v33;
    v28(v33, v13, v6);
    uint64_t v30 = v34;
    v28(v34, (char *)v24, v6);
    char v27 = sub_1C151623C();
    __n128 v31 = *(void (**)(char *, uint64_t))(v23 + 8);
    v31(v30, v6);
    v31(v29, v6);
  }
  return v27 & 1;
}

BOOL sub_1C026AE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(double (**)(uint64_t, uint64_t))(a4 + 24);
  double v7 = v6(a3, a4);
  if (v7 == v6(a3, a4))
  {
    uint64_t v8 = sub_1C151811C();
    uint64_t v10 = v9;
    if (v8 == sub_1C151811C() && v10 == v11)
    {
      swift_bridgeObjectRelease_n();
      return 0;
    }
    else
    {
      char v13 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13 & 1;
    }
  }
  else
  {
    double v15 = v6(a3, a4);
    return v6(a3, a4) < v15;
  }
}

uint64_t sub_1C026AFD0()
{
  sub_1C151ED5C();
  sub_1C151E2FC();
  sub_1C151E41C();
  swift_getWitnessTable();
  sub_1C151E9DC();
  nullsub_1();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C151E3FC();
  swift_getTupleTypeMetadata2();
  sub_1C151ED5C();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1C151EA0C();
  swift_bridgeObjectRelease();
  sub_1C026BF58();
  sub_1C151E9DC();
  swift_bridgeObjectRelease();
  uint64_t v0 = sub_1C151E9FC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C026B264(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  if (v8)
  {
    uint64_t v9 = result;
    uint64_t v10 = v8;
    uint64_t v11 = *a1;
    uint64_t v17 = result;
    uint64_t v18 = v8;
    uint64_t v12 = sub_1C151ED5C();
    swift_bridgeObjectRetain();
    MEMORY[0x1C18C5F70](&v19, &v17, v11, MEMORY[0x1E4FBB1A0], v12, MEMORY[0x1E4FBB1B0]);
    swift_bridgeObjectRelease();
    if (!v19) {
      sub_1C151ECBC();
    }
    sub_1BFE18054(a3, a3);
    uint64_t v13 = *(void *)(a3 - 8);
    swift_allocObject();
    uint64_t v14 = sub_1C151EC6C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v15, a2, a3);
    sub_1BFE94A38(v14);
    uint64_t v16 = sub_1C151ECAC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = v16;
    uint64_t v17 = v9;
    uint64_t v18 = v10;
    sub_1C151E41C();
    return sub_1C151E44C();
  }
  return result;
}

uint64_t sub_1C026B458@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  uint64_t v25 = *a1;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v9 = sub_1C151ED5C();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1C151E9FC();
  MEMORY[0x1C18C64C0](&v25, v9, WitnessTable);
  swift_bridgeObjectRelease();
  uint64_t v24 = v25;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  double v21 = a5;
  void v17[2] = a2;
  uint64_t v17[3] = a3;
  v17[4] = sub_1C026C074;
  v17[5] = &v18;
  uint64_t v11 = sub_1C152048C();
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v15 = sub_1C119B3EC((void (*)(char *, char *))sub_1C026C128, (uint64_t)v17, v11, TupleTypeMetadata2, MEMORY[0x1E4FBC248], v13, MEMORY[0x1E4FBC278], v14);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v15;
  return result;
}

void sub_1C026B610(uint64_t *a1@<X0>, double (*a2)(uint64_t, uint64_t, char *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (char *)a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v7 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  *(double *)(a3 + v7) = a2(a3, v5, v6);
}

uint64_t sub_1C026B6CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = TupleTypeMetadata2 - 8;
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v9 = (char *)&v18 - v8;
  uint64_t v10 = sub_1C151811C();
  uint64_t v12 = v11;
  uint64_t v13 = *(int *)(v7 + 56);
  uint64_t v14 = *(void *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v9, a2, a3);
  double v15 = *(double *)(a2 + v13);
  *(double *)&v9[v13] = v15;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *a1;
  *a1 = 0x8000000000000000;
  sub_1C1066AA4(v10, v12, isUniquelyReferenced_nonNull_native, v15);
  *a1 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v9, a3);
}

BOOL sub_1C026B860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1C151811C();
  double v6 = 0.0;
  double v7 = 0.0;
  if (*(void *)(a3 + 16))
  {
    unint64_t v8 = sub_1BFEF2D8C(v4, v5);
    if (v9) {
      double v7 = *(double *)(*(void *)(a3 + 56) + 8 * v8);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1C151811C();
  if (*(void *)(a3 + 16))
  {
    unint64_t v12 = sub_1BFEF2D8C(v10, v11);
    if (v13) {
      double v6 = *(double *)(*(void *)(a3 + 56) + 8 * v12);
    }
  }
  swift_bridgeObjectRelease();
  return v6 < v7;
}

uint64_t Array<A>.sorted(using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C026A850(a3, a4);
  uint64_t v4 = sub_1C151EC2C();
  swift_release();
  return v4;
}

uint64_t _s8NewsFeed0B15GroupSortOptionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  uint64_t v3 = *(unsigned __int8 *)(a1 + 8);
  double v4 = *(double *)a2;
  unint64_t v5 = *(unsigned __int8 *)(a2 + 8);
  if (*(unsigned char *)(a1 + 9) == 1)
  {
    if (*(void *)&v2 | v3)
    {
      if (*(void *)&v2 ^ 1 | *(unsigned __int8 *)(a1 + 8))
      {
        if (*(unsigned char *)(a2 + 9) && __PAIR128__(v5, *(unint64_t *)&v4) >= 2) {
          return 1;
        }
      }
      else if (*(unsigned char *)(a2 + 9) && !(*(void *)&v4 ^ 1 | v5))
      {
        return 1;
      }
    }
    else
    {
      uint64_t v6 = *(void *)&v4 | v5;
      if (*(unsigned char *)(a2 + 9)) {
        BOOL v7 = v6 == 0;
      }
      else {
        BOOL v7 = 0;
      }
      if (v7) {
        return 1;
      }
    }
  }
  else if ((*(unsigned char *)(a2 + 9) & 1) == 0)
  {
    if (v3)
    {
      if (v5) {
        return 1;
      }
    }
    else if ((v5 & 1) == 0 && v2 == v4)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t getEnumTagSinglePayload for FeedGroupSortOption(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C026BA7C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C026BA98(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    *(unsigned char *)(result + 9) = 1;
  }
  else
  {
    *(unsigned char *)(result + 9) = 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroupFilterRequirements(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupSortOptionPersonalization()
{
  return &type metadata for FeedGroupSortOptionPersonalization;
}

ValueMetadata *type metadata accessor for FeedGroupSortOption.CodingType()
{
  return &type metadata for FeedGroupSortOption.CodingType;
}

unsigned char *storeEnumTagSinglePayload for FeedGroupSortOption.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C026BC00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupSortOption.CodingKeys()
{
  return &type metadata for FeedGroupSortOption.CodingKeys;
}

unint64_t sub_1C026BC3C()
{
  unint64_t result = qword_1EA198D90;
  if (!qword_1EA198D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198D90);
  }
  return result;
}

unint64_t sub_1C026BC94()
{
  unint64_t result = qword_1EA198D98;
  if (!qword_1EA198D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198D98);
  }
  return result;
}

unint64_t sub_1C026BCE8()
{
  unint64_t result = qword_1EA198DA8;
  if (!qword_1EA198DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198DA8);
  }
  return result;
}

uint64_t sub_1C026BD3C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x80000001C1609300)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1C026BDC4()
{
  return swift_deallocObject();
}

uint64_t sub_1C026BDD4(uint64_t a1)
{
  return sub_1C026BE54(a1);
}

uint64_t sub_1C026BDF4()
{
  return swift_deallocObject();
}

uint64_t sub_1C026BE04(uint64_t a1)
{
  return sub_1C026A9F4(a1, *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40) | (*(unsigned __int8 *)(v1 + 41) << 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C026BE24()
{
  return swift_deallocObject();
}

uint64_t sub_1C026BE34(uint64_t a1)
{
  return sub_1C026BE54(a1);
}

uint64_t sub_1C026BE54(uint64_t a1)
{
  return sub_1C026AACC(a1, *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40) | (*(unsigned __int8 *)(v1 + 41) << 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C026BE90()
{
  return swift_deallocObject();
}

uint64_t sub_1C026BEA0(uint64_t a1)
{
  nullsub_1(a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C026BECC()
{
  return swift_deallocObject();
}

uint64_t sub_1C026BEDC(uint64_t a1, uint64_t a2)
{
  return sub_1C026AB78(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C026BEE4()
{
  return swift_deallocObject();
}

uint64_t sub_1C026BEF4()
{
  return sub_1C026AFD0();
}

uint64_t sub_1C026BF00(uint64_t *a1, uint64_t a2)
{
  return sub_1C026B264(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C026BF1C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C026B458(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2, *(double *)(v2 + 32));
}

uint64_t sub_1C026BF3C(uint64_t *a1, uint64_t a2)
{
  return sub_1C026B6CC(a1, a2, *(void *)(v2 + 16));
}

void sub_1C026BF58()
{
  if (!qword_1EB85DE90)
  {
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB85DE90);
    }
  }
}

BOOL sub_1C026BFC0(uint64_t a1, uint64_t a2)
{
  return sub_1C026B860(a1, a2, *(void *)(v2 + 32));
}

BOOL sub_1C026BFE4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  char v3 = *(double (**)(uint64_t, uint64_t))(v2 + 24);
  double v4 = v3(v1, v2);
  return v3(v1, v2) < v4;
}

double sub_1C026C074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 16);
  double v8 = *(double *)(v3 + 32);
  double v9 = (*(double (**)(uint64_t))(*(void *)(v3 + 24) + 24))(v7);
  double v10 = pow(1.0 - v8, (double)a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a3, v7);
  return v9 * v10;
}

void sub_1C026C128(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C026B610(a1, *(double (**)(uint64_t, uint64_t, char *))(v2 + 32), a2);
}

uint64_t sub_1C026C14C()
{
  return swift_deallocObject();
}

BOOL sub_1C026C15C(uint64_t a1, uint64_t a2)
{
  return sub_1C026AE80(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

unsigned char *storeEnumTagSinglePayload for FeedGroupSortOptionPersonalization.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C026C200);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupSortOptionPersonalization.CodingKeys()
{
  return &type metadata for FeedGroupSortOptionPersonalization.CodingKeys;
}

unint64_t sub_1C026C23C()
{
  unint64_t result = qword_1EA198DB8;
  if (!qword_1EA198DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198DB8);
  }
  return result;
}

unint64_t sub_1C026C294()
{
  unint64_t result = qword_1EA198DC0;
  if (!qword_1EA198DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198DC0);
  }
  return result;
}

unint64_t sub_1C026C2EC()
{
  unint64_t result = qword_1EA198DC8;
  if (!qword_1EA198DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198DC8);
  }
  return result;
}

uint64_t SetPuzzleStreakEligibleHandler.__allocating_init(historyService:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1BFC773DC(a1, v2 + 16);
  return v2;
}

uint64_t SetPuzzleStreakEligibleHandler.init(historyService:)(long long *a1)
{
  sub_1BFC773DC(a1, v1 + 16);
  return v1;
}

uint64_t SetPuzzleStreakEligibleHandler.handle(commandCenter:command:with:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4[5];
  uint64_t v7 = v4[6];
  __swift_project_boxed_opaque_existential_1(v4 + 2, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a4, v6, v7);
}

uint64_t SetPuzzleStreakEligibleHandler.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t SetPuzzleStreakEligibleHandler.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1C026C45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = *a4;
  uint64_t v6 = *(void *)(*(void *)v4 + 40);
  uint64_t v7 = *(void *)(*(void *)v4 + 48);
  __swift_project_boxed_opaque_existential_1((void *)(*(void *)v4 + 16), v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, v6, v7);
}

uint64_t _s8NewsFeed30SetPuzzleStreakEligibleHandlerC9canHandle13commandCenter0J04with6sourceSb5TeaUI07CommandK4Type_p_AI0P0CySo17FCPuzzleProviding_pGSoAM_pAI0P15ExecutionSourceCSgtF_0()
{
  uint64_t v0 = sub_1C151BBFC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  int v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151706C();
  sub_1C151704C();
  sub_1C1516EDC();
  sub_1C151703C();
  swift_release();
  swift_release();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == *MEMORY[0x1E4FACB98])
  {
    char v5 = 0;
  }
  else
  {
    int v6 = v4;
    int v7 = *MEMORY[0x1E4FACBA0];
    int v8 = *MEMORY[0x1E4FACBA8];
    sub_1C15180CC();
    char v5 = sub_1C151809C();
    if (v6 != v7 && v6 != v8) {
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
  }
  return v5 & 1;
}

uint64_t method lookup function for SetPuzzleStreakEligibleHandler(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SetPuzzleStreakEligibleHandler);
}

uint64_t dispatch thunk of SetPuzzleStreakEligibleHandler.__allocating_init(historyService:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1C026C660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void)@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v72 = a5;
  int v6 = a4;
  uint64_t v8 = a1;
  uint64_t v68 = a6;
  v82[3] = *MEMORY[0x1E4F143B8];
  uint64_t v71 = *(void *)(a2 + 16);
  if (v71)
  {
    uint64_t v70 = a2 + 32;
    a4(a1);
    uint64_t v67 = a2;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v79 = (void *)a3;
    uint64_t v69 = v6;
LABEL_5:
    uint64_t v76 = v8;
    uint64_t v77 = v10;
    double v15 = (uint64_t *)(v70 + 24 * v10);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = v15[2];
    swift_bridgeObjectRetain();
    uint64_t v75 = v18;
    v6(v18);
    if (qword_1EB87F148 != -1) {
      swift_once();
    }
    uint64_t v19 = qword_1EB93C770;
    uint64_t v20 = *(void *)(qword_1EB93C770 + 24);
    swift_bridgeObjectRetain();
    sub_1C1517E7C();
    double v21 = (uint64_t *)(v19 + 16);
    swift_beginAccess();
    uint64_t v22 = *(void *)(v19 + 16);
    if (*(void *)(v22 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1BFEF2D8C(v16, v17);
      if (v24)
      {
        uint64_t v25 = *(void *)(*(void *)(v22 + 56) + 24 * v23 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_22:
        swift_bridgeObjectRelease();
        sub_1C1517E8C();
        swift_bridgeObjectRelease();
        uint64_t v49 = *(void *)(v25 + 16);
        if (!v49)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          uint64_t v11 = v75;
          uint64_t v12 = v76;
          uint64_t v8 = v76;
          goto LABEL_4;
        }
        uint64_t v74 = v17;
        uint64_t v78 = v25;
        double v50 = (uint64_t *)(v25 + 64);
        while (1)
        {
          uint64_t v51 = *(v50 - 1);
          uint64_t v52 = *v50;
          char v53 = *(unsigned char *)(v51 + 32);
          unsigned int v54 = v53 & 0x3F;
          unint64_t v55 = (unint64_t)((1 << v53) + 63) >> 6;
          size_t v56 = 8 * v55;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v54 <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            bzero((char *)&v67 - ((v56 + 15) & 0x3FFFFFFFFFFFFFF0), v56);
            uint64_t v59 = v79;
            id v58 = v80;
            uint64_t v60 = sub_1BFEFB09C((uint64_t)&v67 - ((v56 + 15) & 0x3FFFFFFFFFFFFFF0), v55, v51, (uint64_t)v79);
            swift_bridgeObjectRelease();
            id v80 = v58;
            if (v58)
            {
              id v66 = v80;
              swift_willThrow();

              __break(1u);
LABEL_41:
              swift_bridgeObjectRelease();

              MEMORY[0x1C18C9B00](v59, -1, -1);
              __break(1u);
LABEL_42:
              uint64_t result = sub_1C1520CFC();
              __break(1u);
              return result;
            }
          }
          else
          {
            uint64_t v59 = (void *)swift_slowAlloc();
            bzero(v59, v56);
            id v61 = v80;
            uint64_t v62 = sub_1BFEFB09C((uint64_t)v59, v55, v51, (uint64_t)v79);
            id v80 = v61;
            if (v61) {
              goto LABEL_41;
            }
            uint64_t v60 = v62;
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v59, -1, -1);
            uint64_t v59 = v79;
          }
          char v63 = sub_1BFEFAE14(v60, v51);
          swift_release();
          if (v63)
          {
            char v64 = sub_1BFEFB810((uint64_t)v59, v52);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v64)
            {
              swift_bridgeObjectRelease();
              uint64_t v11 = v75;
              uint64_t v12 = v76;
              uint64_t v8 = v75;
LABEL_4:
              uint64_t v10 = v77 + 1;
              int v6 = v69;
              v69(v8);
              swift_bridgeObjectRelease();
              uint64_t v13 = v11;
              uint64_t v14 = v72;
              v72(v13);
              v14(v12);
              if (v10 == v71)
              {
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
              goto LABEL_5;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v50 += 5;
          if (!--v49) {
            goto LABEL_3;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    v81[0] = v16;
    v81[1] = v17;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v81, v82);
    uint64_t v26 = v82[1];
    uint64_t v74 = v82[0];
    uint64_t v27 = v82[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v78 = v27;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v81[0] = *v21;
    uint64_t v29 = v81[0];
    *double v21 = 0x8000000000000000;
    uint64_t v30 = v16;
    uint64_t v31 = v17;
    unint64_t v33 = sub_1BFEF2D8C(v16, v17);
    uint64_t v34 = *(void *)(v29 + 16);
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    char v37 = v32;
    uint64_t v38 = *(void *)(v29 + 24);
    uint64_t v73 = v20;
    if (v38 >= v36)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C106B39C();
      }
    }
    else
    {
      sub_1BFFDF158(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v39 = sub_1BFEF2D8C(v30, v31);
      if ((v37 & 1) != (v40 & 1)) {
        goto LABEL_42;
      }
      unint64_t v33 = v39;
    }
    uint64_t v41 = (void *)v81[0];
    if (v37)
    {
      double v42 = (uint64_t *)(*(void *)(v81[0] + 56) + 24 * v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t *v42 = v74;
      v42[1] = v26;
      uint64_t v43 = v78;
      v42[2] = v78;
      uint64_t v25 = v43;
    }
    else
    {
      *(void *)(v81[0] + 8 * (v33 >> 6) + 64) |= 1 << v33;
      double v44 = (uint64_t *)(v41[6] + 16 * v33);
      *double v44 = v30;
      v44[1] = v31;
      double v45 = (uint64_t *)(v41[7] + 24 * v33);
      uint64_t *v45 = v74;
      v45[1] = v26;
      uint64_t v25 = v78;
      long long v45[2] = v78;
      uint64_t v46 = v41[2];
      BOOL v47 = __OFADD__(v46, 1);
      uint64_t v48 = v46 + 1;
      if (v47) {
        goto LABEL_40;
      }
      long long v41[2] = v48;
      swift_bridgeObjectRetain();
    }
    uint64_t v17 = v31;
    *double v21 = (uint64_t)v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_22;
  }
  a4(a1);
LABEL_38:
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v68 = v8;
  return result;
}

uint64_t sub_1C026CC9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v63 = a4;
  v76[3] = *MEMORY[0x1E4F143B8];
  uint64_t v65 = *(void *)(a2 + 16);
  if (v65)
  {
    uint64_t v64 = a2 + 32;
    swift_retain();
    v62[1] = a2;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v73 = (void *)a3;
LABEL_5:
    uint64_t v69 = a1;
    uint64_t v8 = (uint64_t *)(v64 + 24 * v7);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = v8[2];
    uint64_t v12 = qword_1EB87F148;
    swift_bridgeObjectRetain();
    uint64_t v70 = v11 & 0x3FFFFFFFFFFFFFFFLL;
    swift_retain();
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_1EB93C770;
    uint64_t v14 = *(void *)(qword_1EB93C770 + 24);
    swift_bridgeObjectRetain();
    sub_1C1517E7C();
    double v15 = (uint64_t *)(v13 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)(v13 + 16);
    uint64_t v17 = *(void *)(v16 + 16);
    uint64_t v66 = v11;
    uint64_t v71 = v7;
    if (v17)
    {
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_1BFEF2D8C(v9, v10);
      if (v19)
      {
        uint64_t v20 = *(void *)(*(void *)(v16 + 56) + 24 * v18 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_22:
        swift_bridgeObjectRelease();
        sub_1C1517E8C();
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)(v20 + 16);
        if (!v44)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          a1 = v69;
          goto LABEL_4;
        }
        uint64_t v68 = v10;
        uint64_t v72 = v20;
        double v45 = (uint64_t *)(v20 + 64);
        while (1)
        {
          uint64_t v46 = *(v45 - 1);
          uint64_t v47 = *v45;
          char v48 = *(unsigned char *)(v46 + 32);
          unsigned int v49 = v48 & 0x3F;
          unint64_t v50 = (unint64_t)((1 << v48) + 63) >> 6;
          size_t v51 = 8 * v50;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v49 <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            bzero((char *)v62 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v51);
            unsigned int v54 = v73;
            id v53 = v74;
            uint64_t v55 = sub_1BFEFB09C((uint64_t)v62 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v50, v46, (uint64_t)v73);
            swift_bridgeObjectRelease();
            id v74 = v53;
            if (v53)
            {
              id v61 = v74;
              swift_willThrow();

              __break(1u);
LABEL_41:
              swift_bridgeObjectRelease();

              MEMORY[0x1C18C9B00](v54, -1, -1);
              __break(1u);
LABEL_42:
              uint64_t result = sub_1C1520CFC();
              __break(1u);
              return result;
            }
          }
          else
          {
            unsigned int v54 = (void *)swift_slowAlloc();
            bzero(v54, v51);
            id v56 = v74;
            uint64_t v57 = sub_1BFEFB09C((uint64_t)v54, v50, v46, (uint64_t)v73);
            id v74 = v56;
            if (v56) {
              goto LABEL_41;
            }
            uint64_t v55 = v57;
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v54, -1, -1);
            unsigned int v54 = v73;
          }
          char v58 = sub_1BFEFAE14(v55, v46);
          swift_release();
          if (v58)
          {
            char v59 = sub_1BFEFB810((uint64_t)v54, v47);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v59)
            {
              swift_bridgeObjectRelease();
              a1 = v66;
LABEL_4:
              uint64_t v7 = v71 + 1;
              swift_retain();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              if (v7 == v65)
              {
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
              goto LABEL_5;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v45 += 5;
          if (!--v44) {
            goto LABEL_3;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v67 = v14;
    swift_endAccess();
    v75[0] = v9;
    v75[1] = v10;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v75, v76);
    uint64_t v68 = v76[0];
    uint64_t v21 = v9;
    uint64_t v23 = v76[1];
    uint64_t v22 = v76[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v72 = v22;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v75[0] = *v15;
    uint64_t v25 = v75[0];
    *double v15 = 0x8000000000000000;
    uint64_t v26 = v21;
    uint64_t v27 = v10;
    unint64_t v29 = sub_1BFEF2D8C(v21, v10);
    uint64_t v30 = *(void *)(v25 + 16);
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    char v33 = v28;
    if (*(void *)(v25 + 24) >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C106B39C();
      }
    }
    else
    {
      sub_1BFFDF158(v32, isUniquelyReferenced_nonNull_native);
      unint64_t v34 = sub_1BFEF2D8C(v26, v27);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_42;
      }
      unint64_t v29 = v34;
    }
    uint64_t v36 = (void *)v75[0];
    if (v33)
    {
      char v37 = (uint64_t *)(*(void *)(v75[0] + 56) + 24 * v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *char v37 = v68;
      v37[1] = v23;
      uint64_t v38 = v72;
      v37[2] = v72;
      uint64_t v20 = v38;
      uint64_t v10 = v27;
    }
    else
    {
      *(void *)(v75[0] + 8 * (v29 >> 6) + 64) |= 1 << v29;
      unint64_t v39 = (uint64_t *)(v36[6] + 16 * v29);
      uint64_t *v39 = v26;
      v39[1] = v27;
      char v40 = (uint64_t *)(v36[7] + 24 * v29);
      uint64_t *v40 = v68;
      v40[1] = v23;
      uint64_t v20 = v72;
      v40[2] = v72;
      uint64_t v41 = v36[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_40;
      }
      uint64_t v10 = v27;
      void v36[2] = v43;
      swift_bridgeObjectRetain();
    }
    *double v15 = (uint64_t)v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_22;
  }
  swift_retain();
LABEL_38:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t *v63 = a1;
  return result;
}

uint64_t sub_1C026D2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v63 = a4;
  v76[3] = *MEMORY[0x1E4F143B8];
  uint64_t v65 = *(void *)(a2 + 16);
  if (v65)
  {
    uint64_t v64 = a2 + 32;
    swift_retain();
    v62[1] = a2;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v73 = (void *)a3;
LABEL_5:
    uint64_t v69 = a1;
    uint64_t v8 = (uint64_t *)(v64 + 24 * v7);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = v8[2];
    uint64_t v12 = qword_1EB87F148;
    swift_bridgeObjectRetain();
    uint64_t v70 = v11 & 0x7FFFFFFFFFFFFFFFLL;
    swift_retain();
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_1EB93C770;
    uint64_t v14 = *(void *)(qword_1EB93C770 + 24);
    swift_bridgeObjectRetain();
    sub_1C1517E7C();
    double v15 = (uint64_t *)(v13 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)(v13 + 16);
    uint64_t v17 = *(void *)(v16 + 16);
    uint64_t v66 = v11;
    uint64_t v71 = v7;
    if (v17)
    {
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_1BFEF2D8C(v9, v10);
      if (v19)
      {
        uint64_t v20 = *(void *)(*(void *)(v16 + 56) + 24 * v18 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_22:
        swift_bridgeObjectRelease();
        sub_1C1517E8C();
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)(v20 + 16);
        if (!v44)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          a1 = v69;
          goto LABEL_4;
        }
        uint64_t v68 = v10;
        uint64_t v72 = v20;
        double v45 = (uint64_t *)(v20 + 64);
        while (1)
        {
          uint64_t v46 = *(v45 - 1);
          uint64_t v47 = *v45;
          char v48 = *(unsigned char *)(v46 + 32);
          unsigned int v49 = v48 & 0x3F;
          unint64_t v50 = (unint64_t)((1 << v48) + 63) >> 6;
          size_t v51 = 8 * v50;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v49 <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            bzero((char *)v62 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v51);
            unsigned int v54 = v73;
            id v53 = v74;
            uint64_t v55 = sub_1BFEFB09C((uint64_t)v62 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v50, v46, (uint64_t)v73);
            swift_bridgeObjectRelease();
            id v74 = v53;
            if (v53)
            {
              id v61 = v74;
              swift_willThrow();

              __break(1u);
LABEL_41:
              swift_bridgeObjectRelease();

              MEMORY[0x1C18C9B00](v54, -1, -1);
              __break(1u);
LABEL_42:
              uint64_t result = sub_1C1520CFC();
              __break(1u);
              return result;
            }
          }
          else
          {
            unsigned int v54 = (void *)swift_slowAlloc();
            bzero(v54, v51);
            id v56 = v74;
            uint64_t v57 = sub_1BFEFB09C((uint64_t)v54, v50, v46, (uint64_t)v73);
            id v74 = v56;
            if (v56) {
              goto LABEL_41;
            }
            uint64_t v55 = v57;
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v54, -1, -1);
            unsigned int v54 = v73;
          }
          char v58 = sub_1BFEFAE14(v55, v46);
          swift_release();
          if (v58)
          {
            char v59 = sub_1BFEFB810((uint64_t)v54, v47);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v59)
            {
              swift_bridgeObjectRelease();
              a1 = v66;
LABEL_4:
              uint64_t v7 = v71 + 1;
              swift_retain();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              if (v7 == v65)
              {
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
              goto LABEL_5;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v45 += 5;
          if (!--v44) {
            goto LABEL_3;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v67 = v14;
    swift_endAccess();
    v75[0] = v9;
    v75[1] = v10;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v75, v76);
    uint64_t v68 = v76[0];
    uint64_t v21 = v9;
    uint64_t v23 = v76[1];
    uint64_t v22 = v76[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v72 = v22;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v75[0] = *v15;
    uint64_t v25 = v75[0];
    *double v15 = 0x8000000000000000;
    uint64_t v26 = v21;
    uint64_t v27 = v10;
    unint64_t v29 = sub_1BFEF2D8C(v21, v10);
    uint64_t v30 = *(void *)(v25 + 16);
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    char v33 = v28;
    if (*(void *)(v25 + 24) >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C106B39C();
      }
    }
    else
    {
      sub_1BFFDF158(v32, isUniquelyReferenced_nonNull_native);
      unint64_t v34 = sub_1BFEF2D8C(v26, v27);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_42;
      }
      unint64_t v29 = v34;
    }
    uint64_t v36 = (void *)v75[0];
    if (v33)
    {
      char v37 = (uint64_t *)(*(void *)(v75[0] + 56) + 24 * v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *char v37 = v68;
      v37[1] = v23;
      uint64_t v38 = v72;
      v37[2] = v72;
      uint64_t v20 = v38;
      uint64_t v10 = v27;
    }
    else
    {
      *(void *)(v75[0] + 8 * (v29 >> 6) + 64) |= 1 << v29;
      unint64_t v39 = (uint64_t *)(v36[6] + 16 * v29);
      uint64_t *v39 = v26;
      v39[1] = v27;
      char v40 = (uint64_t *)(v36[7] + 24 * v29);
      uint64_t *v40 = v68;
      v40[1] = v23;
      uint64_t v20 = v72;
      v40[2] = v72;
      uint64_t v41 = v36[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_40;
      }
      uint64_t v10 = v27;
      void v36[2] = v43;
      swift_bridgeObjectRetain();
    }
    *double v15 = (uint64_t)v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_22;
  }
  swift_retain();
LABEL_38:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t *v63 = a1;
  return result;
}

uint64_t sub_1C026D8E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  char v63 = a4;
  v76[3] = *MEMORY[0x1E4F143B8];
  uint64_t v65 = *(void *)(a2 + 16);
  if (v65)
  {
    uint64_t v64 = a2 + 32;
    swift_retain();
    v62[1] = a2;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v73 = (void *)a3;
LABEL_5:
    uint64_t v69 = a1;
    uint64_t v8 = (uint64_t *)(v64 + 24 * v7);
    uint64_t v9 = *v8;
    uint64_t v10 = v8[1];
    uint64_t v11 = v8[2];
    uint64_t v12 = qword_1EB87F148;
    swift_bridgeObjectRetain();
    uint64_t v70 = v11 & 0x1FFFFFFFFFFFFFFFLL;
    swift_retain();
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v13 = qword_1EB93C770;
    uint64_t v14 = *(void *)(qword_1EB93C770 + 24);
    swift_bridgeObjectRetain();
    sub_1C1517E7C();
    double v15 = (uint64_t *)(v13 + 16);
    swift_beginAccess();
    uint64_t v16 = *(void *)(v13 + 16);
    uint64_t v17 = *(void *)(v16 + 16);
    uint64_t v66 = v11;
    uint64_t v71 = v7;
    if (v17)
    {
      swift_bridgeObjectRetain();
      unint64_t v18 = sub_1BFEF2D8C(v9, v10);
      if (v19)
      {
        uint64_t v20 = *(void *)(*(void *)(v16 + 56) + 24 * v18 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_22:
        swift_bridgeObjectRelease();
        sub_1C1517E8C();
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)(v20 + 16);
        if (!v44)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          a1 = v69;
          goto LABEL_4;
        }
        uint64_t v68 = v10;
        uint64_t v72 = v20;
        double v45 = (uint64_t *)(v20 + 64);
        while (1)
        {
          uint64_t v46 = *(v45 - 1);
          uint64_t v47 = *v45;
          char v48 = *(unsigned char *)(v46 + 32);
          unsigned int v49 = v48 & 0x3F;
          unint64_t v50 = (unint64_t)((1 << v48) + 63) >> 6;
          size_t v51 = 8 * v50;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v49 <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            bzero((char *)v62 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v51);
            unsigned int v54 = v73;
            id v53 = v74;
            uint64_t v55 = sub_1BFEFB09C((uint64_t)v62 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v50, v46, (uint64_t)v73);
            swift_bridgeObjectRelease();
            id v74 = v53;
            if (v53)
            {
              id v61 = v74;
              swift_willThrow();

              __break(1u);
LABEL_41:
              swift_bridgeObjectRelease();

              MEMORY[0x1C18C9B00](v54, -1, -1);
              __break(1u);
LABEL_42:
              uint64_t result = sub_1C1520CFC();
              __break(1u);
              return result;
            }
          }
          else
          {
            unsigned int v54 = (void *)swift_slowAlloc();
            bzero(v54, v51);
            id v56 = v74;
            uint64_t v57 = sub_1BFEFB09C((uint64_t)v54, v50, v46, (uint64_t)v73);
            id v74 = v56;
            if (v56) {
              goto LABEL_41;
            }
            uint64_t v55 = v57;
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v54, -1, -1);
            unsigned int v54 = v73;
          }
          char v58 = sub_1BFEFAE14(v55, v46);
          swift_release();
          if (v58)
          {
            char v59 = sub_1BFEFB810((uint64_t)v54, v47);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v59)
            {
              swift_bridgeObjectRelease();
              a1 = v66;
LABEL_4:
              uint64_t v7 = v71 + 1;
              swift_retain();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              if (v7 == v65)
              {
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
              goto LABEL_5;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v45 += 5;
          if (!--v44) {
            goto LABEL_3;
          }
        }
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v67 = v14;
    swift_endAccess();
    v75[0] = v9;
    v75[1] = v10;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v75, v76);
    uint64_t v68 = v76[0];
    uint64_t v21 = v9;
    uint64_t v23 = v76[1];
    uint64_t v22 = v76[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v72 = v22;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v75[0] = *v15;
    uint64_t v25 = v75[0];
    *double v15 = 0x8000000000000000;
    uint64_t v26 = v21;
    uint64_t v27 = v10;
    unint64_t v29 = sub_1BFEF2D8C(v21, v10);
    uint64_t v30 = *(void *)(v25 + 16);
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    char v33 = v28;
    if (*(void *)(v25 + 24) >= v32)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C106B39C();
      }
    }
    else
    {
      sub_1BFFDF158(v32, isUniquelyReferenced_nonNull_native);
      unint64_t v34 = sub_1BFEF2D8C(v26, v27);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_42;
      }
      unint64_t v29 = v34;
    }
    uint64_t v36 = (void *)v75[0];
    if (v33)
    {
      char v37 = (uint64_t *)(*(void *)(v75[0] + 56) + 24 * v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *char v37 = v68;
      v37[1] = v23;
      uint64_t v38 = v72;
      v37[2] = v72;
      uint64_t v20 = v38;
      uint64_t v10 = v27;
    }
    else
    {
      *(void *)(v75[0] + 8 * (v29 >> 6) + 64) |= 1 << v29;
      unint64_t v39 = (uint64_t *)(v36[6] + 16 * v29);
      uint64_t *v39 = v26;
      v39[1] = v27;
      char v40 = (uint64_t *)(v36[7] + 24 * v29);
      uint64_t *v40 = v68;
      v40[1] = v23;
      uint64_t v20 = v72;
      v40[2] = v72;
      uint64_t v41 = v36[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_40;
      }
      uint64_t v10 = v27;
      void v36[2] = v43;
      swift_bridgeObjectRetain();
    }
    *double v15 = (uint64_t)v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_22;
  }
  swift_retain();
LABEL_38:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t *v63 = a1;
  return result;
}

uint64_t sub_1C026DF08@<X0>(char *a1@<X8>)
{
  return sub_1C0270BDC(a1);
}

void sub_1C026DF68(uint64_t a1, uint64_t a2)
{
  sub_1C02714BC(a1, a2);
}

uint64_t sub_1C026DFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BFFB53DC(a1, a2, a3);
}

uint64_t sub_1C026E02C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  uint64_t v62 = *(void *)(a3 + 16);
  if (!v62) {
    return a2 & 1;
  }
  sub_1C1517EFC();
  uint64_t v5 = *(void *)(*(void *)(v71 + 40) + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(*(void *)(v5 + 16) + 16);
  int v60 = a2;
  if (v6)
  {
    v70[0] = *(void *)(v71 + 56);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BFEF3B08(v7);
    sub_1BFEF3808(v8);
    swift_release();
    uint64_t v68 = v70[0];
  }
  else
  {
    uint64_t v68 = sub_1BFEF3784();
    swift_release();
  }
  uint64_t v61 = a3 + 32;
  v59[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
LABEL_8:
  uint64_t v10 = v61 + 24 * v9;
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *(void *)(v10 + 8);
  int v63 = *(unsigned __int8 *)(v10 + 16);
  uint64_t v13 = qword_1EB87F148;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1EB93C770;
  uint64_t v15 = *(void *)(qword_1EB93C770 + 24);
  swift_bridgeObjectRetain();
  sub_1C1517E7C();
  uint64_t v16 = (uint64_t *)(v14 + 16);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v14 + 16);
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v66 = v9;
  if (v18)
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1BFEF2D8C(v12, v11);
    if (v20)
    {
      uint64_t v21 = *(void *)(*(void *)(v17 + 56) + 24 * v19 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v45 = *(void *)(v21 + 16);
      if (!v45)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      uint64_t v65 = v11;
      uint64_t v67 = v21;
      uint64_t v46 = (uint64_t *)(v21 + 64);
      while (1)
      {
        uint64_t v47 = *(v46 - 1);
        uint64_t v48 = *v46;
        char v49 = *(unsigned char *)(v47 + 32);
        unsigned int v50 = v49 & 0x3F;
        unint64_t v51 = (unint64_t)((1 << v49) + 63) >> 6;
        size_t v52 = 8 * v51;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v50 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v52);
          uint64_t v54 = sub_1BFEFB09C((uint64_t)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v51, v47, v68);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v55 = (void *)swift_slowAlloc();
          bzero(v55, v52);
          uint64_t v54 = sub_1BFEFB09C((uint64_t)v55, v51, v47, v68);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v55, -1, -1);
        }
        char v56 = sub_1BFEFAE14(v54, v47);
        swift_release();
        if (v56)
        {
          char v57 = sub_1BFEFB810(v68, v48);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v57)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v60 = v63;
LABEL_7:
            uint64_t v9 = v66 + 1;
            if (v66 + 1 == v62)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              LOBYTE(a2) = v60;
              return a2 & 1;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 += 5;
        if (!--v45) {
          goto LABEL_6;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v64 = v15;
  swift_endAccess();
  v69[0] = v12;
  v69[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BFF04A00(v69, v70);
  uint64_t v22 = v70[1];
  uint64_t v65 = v70[0];
  uint64_t v23 = v70[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v67 = v23;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = v12;
  char v26 = isUniquelyReferenced_nonNull_native;
  v69[0] = *v16;
  uint64_t v27 = v69[0];
  *uint64_t v16 = 0x8000000000000000;
  uint64_t v28 = v25;
  uint64_t v29 = v11;
  unint64_t v31 = sub_1BFEF2D8C(v25, v11);
  uint64_t v32 = *(void *)(v27 + 16);
  BOOL v33 = (v30 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  char v35 = v30;
  if (*(void *)(v27 + 24) >= v34)
  {
    if (v26)
    {
      uint64_t v38 = (void *)v69[0];
      if (v30) {
        goto LABEL_21;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v38 = (void *)v69[0];
      if (v35) {
        goto LABEL_21;
      }
    }
LABEL_23:
    v38[(v31 >> 6) + 8] |= 1 << v31;
    char v40 = (uint64_t *)(v38[6] + 16 * v31);
    uint64_t *v40 = v28;
    v40[1] = v29;
    uint64_t v41 = (uint64_t *)(v38[7] + 24 * v31);
    uint64_t *v41 = v65;
    v41[1] = v22;
    uint64_t v21 = v67;
    long long v41[2] = v67;
    uint64_t v42 = v38[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_41;
    }
    uint64_t v11 = v29;
    _OWORD v38[2] = v44;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BFFDF158(v34, v26);
  unint64_t v36 = sub_1BFEF2D8C(v28, v29);
  if ((v35 & 1) == (v37 & 1))
  {
    unint64_t v31 = v36;
    uint64_t v38 = (void *)v69[0];
    if ((v35 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_21:
    unint64_t v39 = (uint64_t *)(v38[7] + 24 * v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t *v39 = v65;
    v39[1] = v22;
    uint64_t v21 = v67;
    long long v39[2] = v67;
    uint64_t v11 = v29;
LABEL_25:
    *uint64_t v16 = (uint64_t)v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C026E664@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v82 = *MEMORY[0x1E4F143B8];
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v55 - v5;
  uint64_t v7 = sub_1C151631C();
  uint64_t v59 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v64 = (char *)v55 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v55 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v55 - v16;
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB876930, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  uint64_t v19 = *(void *)(v2 + *(int *)(v18 + 36));
  if (*(void *)(v19 + 16))
  {
    char v57 = a1;
    sub_1C1517EFC();
    uint64_t v20 = v81;
    uint64_t v21 = *(void *)(*(void *)(v81 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v21 + 16) + 16))
    {
      v80[0] = *(void *)(v20 + 56);
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = sub_1BFEF3B08(v22);
      sub_1BFEF3808(v23);
      swift_release();
      uint64_t v79 = v80[0];
    }
    else
    {
      uint64_t v79 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v26 = v59 + 16;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
    v27(v17, v2, v7);
    uint64_t v77 = (void (*)(char *, char *, uint64_t))v27;
    uint64_t v78 = v26;
    v27(v14, (uint64_t)v17, v7);
    uint64_t v72 = *(void *)(v19 + 16);
    char v56 = v17;
    v55[1] = v19;
    if (v72)
    {
      sub_1BFF26D60(0, (unint64_t *)&qword_1EB87B1A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
      uint64_t v58 = v28;
      uint64_t v29 = *(void *)(v28 - 8);
      unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      uint64_t v31 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v32 = 0;
      uint64_t v71 = v19 + v30;
      uint64_t v70 = *(void *)(v29 + 72);
      uint64_t v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
      uint64_t v69 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
      uint64_t v66 = (void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v67 = (void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v73 = (v59 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v65 = (v59 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      BOOL v33 = v64;
      uint64_t v63 = v7;
      uint64_t v62 = v6;
      uint64_t v61 = v14;
      int v60 = v9;
      do
      {
        unint64_t v36 = (uint64_t *)(v71 + v70 * v32);
        uint64_t v37 = *v36;
        uint64_t v38 = v36[1];
        id v74 = v36;
        v80[0] = v37;
        v80[1] = v38;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1BFEF53C0(v80);
        swift_bridgeObjectRelease();
        uint64_t v40 = v39;
        uint64_t v41 = *(void *)(v39 + 16);
        if (v41)
        {
          uint64_t v75 = v40;
          uint64_t v76 = v32;
          uint64_t v42 = (uint64_t *)(v40 + 64);
          do
          {
            uint64_t v43 = *(v42 - 1);
            uint64_t v44 = *v42;
            char v45 = *(unsigned char *)(v43 + 32);
            unsigned int v46 = v45 & 0x3F;
            unint64_t v47 = (unint64_t)((1 << v45) + 63) >> 6;
            size_t v48 = 8 * v47;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v46 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              bzero((char *)v55 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v48);
              uint64_t v50 = sub_1BFEFB09C((uint64_t)v55 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v47, v43, v79);
              swift_bridgeObjectRelease();
            }
            else
            {
              unint64_t v51 = (void *)swift_slowAlloc();
              bzero(v51, v48);
              uint64_t v50 = sub_1BFEFB09C((uint64_t)v51, v47, v43, v79);
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v51, -1, -1);
            }
            char v52 = sub_1BFEFAE14(v50, v43);
            swift_release();
            if (v52)
            {
              char v53 = sub_1BFEFB810(v79, v44);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v53)
              {
                swift_bridgeObjectRelease();
                uint64_t v6 = v62;
                uint64_t v7 = v63;
                v77(v62, (char *)v74 + *(int *)(v58 + 36), v63);
                uint64_t v54 = 0;
                goto LABEL_26;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v42 += 5;
            --v41;
          }
          while (v41);
          swift_bridgeObjectRelease();
          uint64_t v54 = 1;
          uint64_t v7 = v63;
          uint64_t v6 = v62;
LABEL_26:
          uint64_t v14 = v61;
          uint64_t v9 = v60;
          BOOL v33 = v64;
          uint64_t v32 = v76;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v54 = 1;
        }
        (*v69)(v6, v54, 1, v7);
        v77(v9, v14, v7);
        if ((*v68)(v6, 1, v7) == 1)
        {
          uint64_t v34 = *v66;
          (*v66)(v33, v9, v7);
          sub_1BFE5464C((uint64_t)v6, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          char v35 = *v67;
        }
        else
        {
          char v35 = *v67;
          (*v67)(v9, v7);
          uint64_t v34 = *v66;
          (*v66)(v33, v6, v7);
        }
        ++v32;
        v35(v14, v7);
        v34(v14, v33, v7);
      }
      while (v32 != v72);
    }
    else
    {
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v73 = (v59 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      swift_bridgeObjectRetain();
    }
    v34(v57, v14, v7);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 16);
    return v24(a1, v2, v7);
  }
}

void sub_1C026EED8(uint64_t a1, uint64_t a2)
{
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  uint64_t v56 = *(void *)(a2 + 16);
  if (v56)
  {
    sub_1C1517EFC();
    uint64_t v3 = *(void *)(*(void *)(v65 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v3 + 16) + 16))
    {
      v64[0] = *(void *)(v65 + 56);
      uint64_t v4 = swift_bridgeObjectRetain();
      uint64_t v5 = sub_1BFEF3B08(v4);
      sub_1BFEF3808(v5);
      swift_release();
      uint64_t v62 = v64[0];
    }
    else
    {
      uint64_t v62 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v54 = a2;
    uint64_t v55 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = (uint64_t *)(v55 + 24 * v6);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      uint64_t v10 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v10 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_1EB93C770;
      uint64_t v12 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      uint64_t v13 = (uint64_t *)(v11 + 16);
      swift_beginAccess();
      uint64_t v14 = *(void *)(v11 + 16);
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v60 = v6;
      if (!v15) {
        goto LABEL_13;
      }
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1BFEF2D8C(v9, v8);
      if ((v17 & 1) == 0) {
        break;
      }
      uint64_t v18 = *(void *)(*(void *)(v14 + 56) + 24 * v16 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v41 = *(void *)(v18 + 16);
      if (v41)
      {
        uint64_t v59 = v8;
        uint64_t v61 = v18;
        uint64_t v42 = (uint64_t *)(v18 + 64);
        do
        {
          uint64_t v43 = *(v42 - 1);
          uint64_t v44 = *v42;
          char v45 = *(unsigned char *)(v43 + 32);
          unsigned int v46 = v45 & 0x3F;
          unint64_t v47 = (unint64_t)((1 << v45) + 63) >> 6;
          size_t v48 = 8 * v47;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v46 <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            bzero((char *)&v54 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v48);
            uint64_t v50 = sub_1BFEFB09C((uint64_t)&v54 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v47, v43, v62);
            swift_bridgeObjectRelease();
          }
          else
          {
            unint64_t v51 = (void *)swift_slowAlloc();
            bzero(v51, v48);
            uint64_t v50 = sub_1BFEFB09C((uint64_t)v51, v47, v43, v62);
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v51, -1, -1);
          }
          char v52 = sub_1BFEFAE14(v50, v43);
          swift_release();
          if (v52)
          {
            char v53 = sub_1BFEFB810(v62, v44);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v53) {
              break;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v42 += 5;
          --v41;
        }
        while (v41);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v60 + 1;
      if (v60 + 1 == v56)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v57 = v12;
    swift_endAccess();
    v63[0] = v9;
    v63[1] = v8;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v63, v64);
    uint64_t v19 = v64[1];
    uint64_t v58 = v64[0];
    uint64_t v20 = v64[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v59 = v19;
    swift_bridgeObjectRetain();
    uint64_t v61 = v20;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v63[0] = *v13;
    uint64_t v22 = v63[0];
    *uint64_t v13 = 0x8000000000000000;
    uint64_t v23 = v8;
    unint64_t v25 = sub_1BFEF2D8C(v9, v8);
    uint64_t v26 = *(void *)(v22 + 16);
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    char v29 = v24;
    if (*(void *)(v22 + 24) < v28)
    {
      sub_1BFFDF158(v28, isUniquelyReferenced_nonNull_native);
      unint64_t v30 = sub_1BFEF2D8C(v9, v23);
      if ((v29 & 1) != (v31 & 1))
      {
        sub_1C1520CFC();
        __break(1u);
        return;
      }
      unint64_t v25 = v30;
      uint64_t v32 = (void *)v63[0];
      if ((v29 & 1) == 0) {
        goto LABEL_22;
      }
LABEL_20:
      BOOL v33 = (void *)(v32[7] + 24 * v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = v59;
      *BOOL v33 = v58;
      v33[1] = v34;
      uint64_t v18 = v61;
      v33[2] = v61;
      uint64_t v8 = v23;
LABEL_24:
      *uint64_t v13 = (uint64_t)v32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_25;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v32 = (void *)v63[0];
      if (v24) {
        goto LABEL_20;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v32 = (void *)v63[0];
      if (v29) {
        goto LABEL_20;
      }
    }
LABEL_22:
    v32[(v25 >> 6) + 8] |= 1 << v25;
    char v35 = (uint64_t *)(v32[6] + 16 * v25);
    *char v35 = v9;
    v35[1] = v23;
    unint64_t v36 = (void *)(v32[7] + 24 * v25);
    uint64_t v37 = v59;
    *unint64_t v36 = v58;
    v36[1] = v37;
    uint64_t v18 = v61;
    void v36[2] = v61;
    uint64_t v38 = v32[2];
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39) {
      goto LABEL_40;
    }
    uint64_t v8 = v23;
    v32[2] = v40;
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
}

uint64_t sub_1C026F504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  uint64_t v62 = *(void *)(a3 + 16);
  if (!v62) {
    return a2;
  }
  sub_1C1517EFC();
  uint64_t v5 = *(void *)(*(void *)(v71 + 40) + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(*(void *)(v5 + 16) + 16);
  uint64_t v60 = a2;
  if (v6)
  {
    v70[0] = *(void *)(v71 + 56);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BFEF3B08(v7);
    sub_1BFEF3808(v8);
    swift_release();
    uint64_t v68 = v70[0];
  }
  else
  {
    uint64_t v68 = sub_1BFEF3784();
    swift_release();
  }
  uint64_t v61 = a3 + 32;
  v59[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
LABEL_8:
  uint64_t v10 = (uint64_t *)(v61 + 24 * v9);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v63 = v10[2];
  uint64_t v13 = qword_1EB87F148;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1EB93C770;
  uint64_t v15 = *(void *)(qword_1EB93C770 + 24);
  swift_bridgeObjectRetain();
  sub_1C1517E7C();
  unint64_t v16 = (uint64_t *)(v14 + 16);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v14 + 16);
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v66 = v9;
  if (v18)
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1BFEF2D8C(v12, v11);
    if (v20)
    {
      uint64_t v21 = *(void *)(*(void *)(v17 + 56) + 24 * v19 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v45 = *(void *)(v21 + 16);
      if (!v45)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      uint64_t v65 = v11;
      uint64_t v67 = v21;
      unsigned int v46 = (uint64_t *)(v21 + 64);
      while (1)
      {
        uint64_t v47 = *(v46 - 1);
        uint64_t v48 = *v46;
        char v49 = *(unsigned char *)(v47 + 32);
        unsigned int v50 = v49 & 0x3F;
        unint64_t v51 = (unint64_t)((1 << v49) + 63) >> 6;
        size_t v52 = 8 * v51;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v50 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v52);
          uint64_t v54 = sub_1BFEFB09C((uint64_t)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v51, v47, v68);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v55 = (void *)swift_slowAlloc();
          bzero(v55, v52);
          uint64_t v54 = sub_1BFEFB09C((uint64_t)v55, v51, v47, v68);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v55, -1, -1);
        }
        char v56 = sub_1BFEFAE14(v54, v47);
        swift_release();
        if (v56)
        {
          char v57 = sub_1BFEFB810(v68, v48);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v57)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v60 = v63;
LABEL_7:
            uint64_t v9 = v66 + 1;
            if (v66 + 1 == v62)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v60;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 += 5;
        if (!--v45) {
          goto LABEL_6;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v64 = v15;
  swift_endAccess();
  v69[0] = v12;
  v69[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BFF04A00(v69, v70);
  uint64_t v22 = v70[1];
  uint64_t v65 = v70[0];
  uint64_t v23 = v70[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v67 = v23;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = v12;
  char v26 = isUniquelyReferenced_nonNull_native;
  v69[0] = *v16;
  uint64_t v27 = v69[0];
  *unint64_t v16 = 0x8000000000000000;
  uint64_t v28 = v25;
  uint64_t v29 = v11;
  unint64_t v31 = sub_1BFEF2D8C(v25, v11);
  uint64_t v32 = *(void *)(v27 + 16);
  BOOL v33 = (v30 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  char v35 = v30;
  if (*(void *)(v27 + 24) >= v34)
  {
    if (v26)
    {
      uint64_t v38 = (void *)v69[0];
      if (v30) {
        goto LABEL_21;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v38 = (void *)v69[0];
      if (v35) {
        goto LABEL_21;
      }
    }
LABEL_23:
    v38[(v31 >> 6) + 8] |= 1 << v31;
    uint64_t v40 = (uint64_t *)(v38[6] + 16 * v31);
    uint64_t *v40 = v28;
    v40[1] = v29;
    uint64_t v41 = (uint64_t *)(v38[7] + 24 * v31);
    uint64_t *v41 = v65;
    v41[1] = v22;
    uint64_t v21 = v67;
    long long v41[2] = v67;
    uint64_t v42 = v38[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_41;
    }
    uint64_t v11 = v29;
    _OWORD v38[2] = v44;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BFFDF158(v34, v26);
  unint64_t v36 = sub_1BFEF2D8C(v28, v29);
  if ((v35 & 1) == (v37 & 1))
  {
    unint64_t v31 = v36;
    uint64_t v38 = (void *)v69[0];
    if ((v35 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_21:
    BOOL v39 = (uint64_t *)(v38[7] + 24 * v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t *v39 = v65;
    v39[1] = v22;
    uint64_t v21 = v67;
    long long v39[2] = v67;
    uint64_t v11 = v29;
LABEL_25:
    *unint64_t v16 = (uint64_t)v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C026FB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  uint64_t v65 = *(void *)(a4 + 16);
  if (v65)
  {
    sub_1C1517EFC();
    uint64_t v7 = *(void *)(*(void *)(v75 + 40) + 16);
    swift_beginAccess();
    uint64_t v8 = *(void *)(*(void *)(v7 + 16) + 16);
    uint64_t v62 = a2;
    if (v8)
    {
      v74[0] = *(void *)(v75 + 56);
      uint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v10 = sub_1BFEF3B08(v9);
      sub_1BFEF3808(v10);
      swift_release();
      uint64_t v72 = v74[0];
    }
    else
    {
      uint64_t v72 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v64 = a4 + 32;
    v61[0] = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v11 = 0;
    v61[1] = a3;
    uint64_t v63 = a3;
    while (1)
    {
      uint64_t v13 = (uint64_t *)(v64 + 32 * v11);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      uint64_t v16 = v13[3];
      uint64_t v66 = v13[2];
      uint64_t v17 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      uint64_t v69 = v16;
      swift_bridgeObjectRetain();
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v18 = qword_1EB93C770;
      uint64_t v19 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      char v20 = (uint64_t *)(v18 + 16);
      swift_beginAccess();
      uint64_t v21 = *(void *)(v18 + 16);
      uint64_t v22 = *(void *)(v21 + 16);
      uint64_t v70 = v11;
      if (!v22) {
        goto LABEL_15;
      }
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1BFEF2D8C(v15, v14);
      if ((v24 & 1) == 0) {
        break;
      }
      uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 24 * v23 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v47 = *(void *)(v25 + 16);
      if (!v47)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v70;
        goto LABEL_8;
      }
      uint64_t v68 = v14;
      uint64_t v71 = v25;
      uint64_t v48 = (uint64_t *)(v25 + 64);
      while (1)
      {
        uint64_t v49 = *(v48 - 1);
        uint64_t v50 = *v48;
        char v51 = *(unsigned char *)(v49 + 32);
        unsigned int v52 = v51 & 0x3F;
        unint64_t v53 = (unint64_t)((1 << v51) + 63) >> 6;
        size_t v54 = 8 * v53;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v52 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v54);
          uint64_t v56 = sub_1BFEFB09C((uint64_t)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v53, v49, v72);
          swift_bridgeObjectRelease();
        }
        else
        {
          char v57 = (void *)swift_slowAlloc();
          bzero(v57, v54);
          uint64_t v56 = sub_1BFEFB09C((uint64_t)v57, v53, v49, v72);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v57, -1, -1);
        }
        char v58 = sub_1BFEFAE14(v56, v49);
        swift_release();
        if (v58) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v48 += 5;
        if (!--v47) {
          goto LABEL_7;
        }
      }
      char v59 = sub_1BFEFB810(v72, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0) {
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v70;
      uint64_t v62 = v66;
      uint64_t v63 = v69;
LABEL_8:
      swift_bridgeObjectRelease();
      uint64_t v11 = v12 + 1;
      if (v11 == v65)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v62;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v67 = v19;
    swift_endAccess();
    v73[0] = v15;
    v73[1] = v14;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v73, v74);
    uint64_t v26 = v74[1];
    uint64_t v68 = v74[0];
    uint64_t v27 = v74[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v71 = v27;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *v20;
    uint64_t v29 = v73[0];
    *char v20 = 0x8000000000000000;
    uint64_t v30 = v15;
    uint64_t v31 = v14;
    unint64_t v33 = sub_1BFEF2D8C(v15, v14);
    uint64_t v34 = *(void *)(v29 + 16);
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    char v37 = v32;
    if (*(void *)(v29 + 24) < v36)
    {
      sub_1BFFDF158(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = sub_1BFEF2D8C(v30, v31);
      if ((v37 & 1) != (v39 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v33 = v38;
      uint64_t v40 = (void *)v73[0];
      if ((v37 & 1) == 0) {
        goto LABEL_24;
      }
LABEL_22:
      uint64_t v41 = (uint64_t *)(v40[7] + 24 * v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t *v41 = v68;
      v41[1] = v26;
      uint64_t v25 = v71;
      long long v41[2] = v71;
      uint64_t v14 = v31;
LABEL_26:
      *char v20 = (uint64_t)v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v40 = (void *)v73[0];
      if (v32) {
        goto LABEL_22;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v40 = (void *)v73[0];
      if (v37) {
        goto LABEL_22;
      }
    }
LABEL_24:
    v40[(v33 >> 6) + 8] |= 1 << v33;
    uint64_t v42 = (uint64_t *)(v40[6] + 16 * v33);
    uint64_t *v42 = v30;
    v42[1] = v31;
    BOOL v43 = (uint64_t *)(v40[7] + 24 * v33);
    uint64_t *v43 = v68;
    v43[1] = v26;
    uint64_t v25 = v71;
    _OWORD v43[2] = v71;
    uint64_t v44 = v40[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_42;
    }
    uint64_t v14 = v31;
    v40[2] = v46;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1C02701D0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v82 = *MEMORY[0x1E4F143B8];
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v55 - v5;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v59 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v64 = (char *)v55 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v55 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v55 - v16;
  sub_1BFF26C28(0, (unint64_t *)&qword_1EB876928, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  uint64_t v19 = *(void *)(v2 + *(int *)(v18 + 36));
  if (*(void *)(v19 + 16))
  {
    char v57 = a1;
    sub_1C1517EFC();
    uint64_t v20 = v81;
    uint64_t v21 = *(void *)(*(void *)(v81 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v21 + 16) + 16))
    {
      v80[0] = *(void *)(v20 + 56);
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = sub_1BFEF3B08(v22);
      sub_1BFEF3808(v23);
      swift_release();
      uint64_t v79 = v80[0];
    }
    else
    {
      uint64_t v79 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v26 = v59 + 16;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
    v27(v17, v2, v7);
    uint64_t v77 = (void (*)(char *, char *, uint64_t))v27;
    uint64_t v78 = v26;
    v27(v14, (uint64_t)v17, v7);
    uint64_t v72 = *(void *)(v19 + 16);
    uint64_t v56 = v17;
    v55[1] = v19;
    if (v72)
    {
      sub_1BFF26C28(0, (unint64_t *)&qword_1EB87B1A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
      uint64_t v58 = v28;
      uint64_t v29 = *(void *)(v28 - 8);
      unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      uint64_t v31 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v32 = 0;
      uint64_t v71 = v19 + v30;
      uint64_t v70 = *(void *)(v29 + 72);
      uint64_t v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
      uint64_t v69 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
      uint64_t v66 = (void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v67 = (void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v73 = (v59 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v65 = (v59 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      unint64_t v33 = v64;
      uint64_t v63 = v7;
      uint64_t v62 = v6;
      uint64_t v61 = v14;
      uint64_t v60 = v9;
      do
      {
        uint64_t v36 = (uint64_t *)(v71 + v70 * v32);
        uint64_t v37 = *v36;
        uint64_t v38 = v36[1];
        id v74 = v36;
        v80[0] = v37;
        v80[1] = v38;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1BFEF53C0(v80);
        swift_bridgeObjectRelease();
        uint64_t v40 = v39;
        uint64_t v41 = *(void *)(v39 + 16);
        if (v41)
        {
          uint64_t v75 = v40;
          uint64_t v76 = v32;
          uint64_t v42 = (uint64_t *)(v40 + 64);
          do
          {
            uint64_t v43 = *(v42 - 1);
            uint64_t v44 = *v42;
            char v45 = *(unsigned char *)(v43 + 32);
            unsigned int v46 = v45 & 0x3F;
            unint64_t v47 = (unint64_t)((1 << v45) + 63) >> 6;
            size_t v48 = 8 * v47;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v46 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              bzero((char *)v55 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v48);
              uint64_t v50 = sub_1BFEFB09C((uint64_t)v55 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v47, v43, v79);
              swift_bridgeObjectRelease();
            }
            else
            {
              char v51 = (void *)swift_slowAlloc();
              bzero(v51, v48);
              uint64_t v50 = sub_1BFEFB09C((uint64_t)v51, v47, v43, v79);
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v51, -1, -1);
            }
            char v52 = sub_1BFEFAE14(v50, v43);
            swift_release();
            if (v52)
            {
              char v53 = sub_1BFEFB810(v79, v44);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v53)
              {
                swift_bridgeObjectRelease();
                uint64_t v6 = v62;
                uint64_t v7 = v63;
                v77(v62, (char *)v74 + *(int *)(v58 + 36), v63);
                uint64_t v54 = 0;
                goto LABEL_26;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v42 += 5;
            --v41;
          }
          while (v41);
          swift_bridgeObjectRelease();
          uint64_t v54 = 1;
          uint64_t v7 = v63;
          uint64_t v6 = v62;
LABEL_26:
          uint64_t v14 = v61;
          uint64_t v9 = v60;
          unint64_t v33 = v64;
          uint64_t v32 = v76;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v54 = 1;
        }
        (*v69)(v6, v54, 1, v7);
        v77(v9, v14, v7);
        if ((*v68)(v6, 1, v7) == 1)
        {
          uint64_t v34 = *v66;
          (*v66)(v33, v9, v7);
          sub_1BFE5464C((uint64_t)v6, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          BOOL v35 = *v67;
        }
        else
        {
          BOOL v35 = *v67;
          (*v67)(v9, v7);
          uint64_t v34 = *v66;
          (*v66)(v33, v6, v7);
        }
        ++v32;
        v35(v14, v7);
        v34(v14, v33, v7);
      }
      while (v32 != v72);
    }
    else
    {
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v73 = (v59 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      swift_bridgeObjectRetain();
    }
    v34(v57, v14, v7);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 16);
    return v24(a1, v2, v7);
  }
}

uint64_t sub_1C0270A44@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C1517EFC();
    uint64_t v6 = *(void *)(*(void *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v6 + 16) + 16))
    {
      uint64_t v11 = *(void *)(v12 + 56);
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BFEF3B08(v7);
      sub_1BFEF3808(v8);
      swift_release();
      uint64_t v9 = v11;
    }
    else
    {
      uint64_t v9 = sub_1BFEF3784();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFB3F44(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1C0270B7C@<X0>(char *a1@<X8>)
{
  return sub_1C0270BDC(a1);
}

uint64_t sub_1C0270BDC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v84 = *MEMORY[0x1E4F143B8];
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v56 - v5;
  uint64_t v7 = sub_1C151631C();
  uint64_t v61 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v66 = (char *)&v56 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v56 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v56 - v16;
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB876930, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  if (*(void *)(*(void *)(v1 + *(int *)(v18 + 36)) + 16))
  {
    uint64_t v59 = *(void *)(v1 + *(int *)(v18 + 36));
    sub_1C1517EFC();
    uint64_t v19 = v83;
    uint64_t v20 = *(void *)(*(void *)(v83 + 40) + 16);
    swift_beginAccess();
    uint64_t v21 = *(void *)(*(void *)(v20 + 16) + 16);
    uint64_t v58 = a1;
    if (v21)
    {
      v82[0] = *(void *)(v19 + 56);
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = sub_1BFEF3B08(v22);
      sub_1BFEF3808(v23);
      swift_release();
      uint64_t v81 = v82[0];
    }
    else
    {
      uint64_t v81 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v26 = v61 + 16;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
    v27(v17, v2, v7);
    uint64_t v79 = (void (*)(char *, char *, uint64_t))v27;
    uint64_t v80 = v26;
    v27(v14, (uint64_t)v17, v7);
    uint64_t v28 = v59;
    uint64_t v74 = *(void *)(v59 + 16);
    char v57 = v17;
    if (v74)
    {
      sub_1BFF26D60(0, (unint64_t *)&qword_1EB87B1A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
      uint64_t v60 = v29;
      uint64_t v30 = *(void *)(v29 - 8);
      unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v32 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v32 != -1) {
        swift_once();
      }
      uint64_t v33 = 0;
      uint64_t v73 = v28 + v31;
      uint64_t v72 = *(void *)(v30 + 72);
      uint64_t v70 = (unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
      uint64_t v71 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
      uint64_t v68 = (void (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v69 = (void (**)(char *, uint64_t))(v61 + 8);
      uint64_t v75 = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v67 = (v61 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v34 = v66;
      uint64_t v65 = v7;
      uint64_t v64 = v6;
      uint64_t v63 = v14;
      uint64_t v62 = v9;
      do
      {
        uint64_t v37 = (uint64_t *)(v73 + v72 * v33);
        uint64_t v38 = *v37;
        uint64_t v39 = v37[1];
        uint64_t v76 = v37;
        v82[0] = v38;
        v82[1] = v39;
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1BFEF53C0(v82);
        swift_bridgeObjectRelease();
        uint64_t v41 = v40;
        uint64_t v42 = *(void *)(v40 + 16);
        if (v42)
        {
          uint64_t v77 = v41;
          uint64_t v78 = v33;
          uint64_t v43 = (uint64_t *)(v41 + 64);
          do
          {
            uint64_t v44 = *(v43 - 1);
            uint64_t v45 = *v43;
            char v46 = *(unsigned char *)(v44 + 32);
            unsigned int v47 = v46 & 0x3F;
            unint64_t v48 = (unint64_t)((1 << v46) + 63) >> 6;
            size_t v49 = 8 * v48;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v47 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              bzero((char *)&v56 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v49);
              uint64_t v51 = sub_1BFEFB09C((uint64_t)&v56 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v48, v44, v81);
              swift_bridgeObjectRelease();
            }
            else
            {
              char v52 = (void *)swift_slowAlloc();
              bzero(v52, v49);
              uint64_t v51 = sub_1BFEFB09C((uint64_t)v52, v48, v44, v81);
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v52, -1, -1);
            }
            char v53 = sub_1BFEFAE14(v51, v44);
            swift_release();
            if (v53)
            {
              char v54 = sub_1BFEFB810(v81, v45);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v54)
              {
                swift_bridgeObjectRelease();
                uint64_t v6 = v64;
                uint64_t v7 = v65;
                v79(v64, (char *)v76 + *(int *)(v60 + 36), v65);
                uint64_t v55 = 0;
                goto LABEL_26;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v43 += 5;
            --v42;
          }
          while (v42);
          swift_bridgeObjectRelease();
          uint64_t v55 = 1;
          uint64_t v7 = v65;
          uint64_t v6 = v64;
LABEL_26:
          uint64_t v14 = v63;
          uint64_t v9 = v62;
          uint64_t v34 = v66;
          uint64_t v33 = v78;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v55 = 1;
        }
        (*v71)(v6, v55, 1, v7);
        v79(v9, v14, v7);
        if ((*v70)(v6, 1, v7) == 1)
        {
          BOOL v35 = *v68;
          (*v68)(v34, v9, v7);
          sub_1BFE5464C((uint64_t)v6, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          uint64_t v36 = *v69;
        }
        else
        {
          uint64_t v36 = *v69;
          (*v69)(v9, v7);
          BOOL v35 = *v68;
          (*v68)(v34, v6, v7);
        }
        ++v33;
        v36(v14, v7);
        v35(v14, v34, v7);
      }
      while (v33 != v74);
    }
    else
    {
      BOOL v35 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v75 = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      swift_bridgeObjectRetain();
    }
    v35(v58, v14, v7);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v57, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 16);
    return v24(a1, v1, v7);
  }
}

void sub_1C027145C(uint64_t a1, uint64_t a2)
{
  sub_1C02714BC(a1, a2);
}

void sub_1C02714BC(uint64_t a1, uint64_t a2)
{
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  uint64_t v56 = *(void *)(a2 + 16);
  if (v56)
  {
    sub_1C1517EFC();
    uint64_t v3 = *(void *)(*(void *)(v65 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v3 + 16) + 16))
    {
      v64[0] = *(void *)(v65 + 56);
      uint64_t v4 = swift_bridgeObjectRetain();
      uint64_t v5 = sub_1BFEF3B08(v4);
      sub_1BFEF3808(v5);
      swift_release();
      uint64_t v62 = v64[0];
    }
    else
    {
      uint64_t v62 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v54 = a2;
    uint64_t v55 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = (uint64_t *)(v55 + 24 * v6);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      uint64_t v10 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v10 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_1EB93C770;
      uint64_t v12 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      uint64_t v13 = (uint64_t *)(v11 + 16);
      swift_beginAccess();
      uint64_t v14 = *(void *)(v11 + 16);
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v60 = v6;
      if (!v15) {
        goto LABEL_13;
      }
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1BFEF2D8C(v9, v8);
      if ((v17 & 1) == 0) {
        break;
      }
      uint64_t v18 = *(void *)(*(void *)(v14 + 56) + 24 * v16 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v41 = *(void *)(v18 + 16);
      if (v41)
      {
        uint64_t v59 = v8;
        uint64_t v61 = v18;
        uint64_t v42 = (uint64_t *)(v18 + 64);
        do
        {
          uint64_t v43 = *(v42 - 1);
          uint64_t v44 = *v42;
          char v45 = *(unsigned char *)(v43 + 32);
          unsigned int v46 = v45 & 0x3F;
          unint64_t v47 = (unint64_t)((1 << v45) + 63) >> 6;
          size_t v48 = 8 * v47;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v46 <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            bzero((char *)&v54 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v48);
            uint64_t v50 = sub_1BFEFB09C((uint64_t)&v54 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v47, v43, v62);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v51 = (void *)swift_slowAlloc();
            bzero(v51, v48);
            uint64_t v50 = sub_1BFEFB09C((uint64_t)v51, v47, v43, v62);
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v51, -1, -1);
          }
          char v52 = sub_1BFEFAE14(v50, v43);
          swift_release();
          if (v52)
          {
            char v53 = sub_1BFEFB810(v62, v44);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v53) {
              break;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v42 += 5;
          --v41;
        }
        while (v41);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v60 + 1;
      if (v60 + 1 == v56)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v57 = v12;
    swift_endAccess();
    v63[0] = v9;
    v63[1] = v8;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v63, v64);
    uint64_t v19 = v64[1];
    uint64_t v58 = v64[0];
    uint64_t v20 = v64[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v59 = v19;
    swift_bridgeObjectRetain();
    uint64_t v61 = v20;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v63[0] = *v13;
    uint64_t v22 = v63[0];
    *uint64_t v13 = 0x8000000000000000;
    uint64_t v23 = v8;
    unint64_t v25 = sub_1BFEF2D8C(v9, v8);
    uint64_t v26 = *(void *)(v22 + 16);
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    char v29 = v24;
    if (*(void *)(v22 + 24) < v28)
    {
      sub_1BFFDF158(v28, isUniquelyReferenced_nonNull_native);
      unint64_t v30 = sub_1BFEF2D8C(v9, v23);
      if ((v29 & 1) != (v31 & 1))
      {
        sub_1C1520CFC();
        __break(1u);
        return;
      }
      unint64_t v25 = v30;
      uint64_t v32 = (void *)v63[0];
      if ((v29 & 1) == 0) {
        goto LABEL_22;
      }
LABEL_20:
      uint64_t v33 = (void *)(v32[7] + 24 * v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = v59;
      *uint64_t v33 = v58;
      v33[1] = v34;
      uint64_t v18 = v61;
      v33[2] = v61;
      uint64_t v8 = v23;
LABEL_24:
      *uint64_t v13 = (uint64_t)v32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_25;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v32 = (void *)v63[0];
      if (v24) {
        goto LABEL_20;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v32 = (void *)v63[0];
      if (v29) {
        goto LABEL_20;
      }
    }
LABEL_22:
    v32[(v25 >> 6) + 8] |= 1 << v25;
    BOOL v35 = (uint64_t *)(v32[6] + 16 * v25);
    *BOOL v35 = v9;
    v35[1] = v23;
    uint64_t v36 = (void *)(v32[7] + 24 * v25);
    uint64_t v37 = v59;
    *uint64_t v36 = v58;
    v36[1] = v37;
    uint64_t v18 = v61;
    void v36[2] = v61;
    uint64_t v38 = v32[2];
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39) {
      goto LABEL_40;
    }
    uint64_t v8 = v23;
    v32[2] = v40;
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
}

uint64_t sub_1C0271AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v70 = *MEMORY[0x1E4F143B8];
  uint64_t v60 = *(void *)(a3 + 16);
  if (v60)
  {
    sub_1C1517EFC();
    uint64_t v5 = *(void *)(*(void *)(v69 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v5 + 16) + 16))
    {
      v68[0] = *(void *)(v69 + 56);
      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v7 = sub_1BFEF3B08(v6);
      sub_1BFEF3808(v7);
      swift_release();
      uint64_t v66 = v68[0];
    }
    else
    {
      uint64_t v66 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v59 = a3 + 32;
    v57[0] = a3;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v8 = 0;
    v57[1] = a2;
    uint64_t v58 = a2;
    while (1)
    {
      uint64_t v10 = (uint64_t *)(v59 + 24 * v8);
      uint64_t v11 = *v10;
      uint64_t v12 = v10[1];
      uint64_t v13 = v10[2];
      uint64_t v14 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      uint64_t v63 = v13;
      swift_bridgeObjectRetain();
      if (v14 != -1) {
        swift_once();
      }
      uint64_t v15 = qword_1EB93C770;
      uint64_t v16 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      char v17 = (uint64_t *)(v15 + 16);
      swift_beginAccess();
      uint64_t v18 = *(void *)(v15 + 16);
      uint64_t v19 = *(void *)(v18 + 16);
      uint64_t v64 = v8;
      if (!v19) {
        goto LABEL_15;
      }
      swift_bridgeObjectRetain();
      unint64_t v20 = sub_1BFEF2D8C(v11, v12);
      if ((v21 & 1) == 0) {
        break;
      }
      uint64_t v22 = *(void *)(*(void *)(v18 + 56) + 24 * v20 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v43 = *(void *)(v22 + 16);
      if (!v43)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v9 = v64;
        goto LABEL_8;
      }
      uint64_t v62 = v12;
      uint64_t v65 = v22;
      uint64_t v44 = (uint64_t *)(v22 + 64);
      while (1)
      {
        uint64_t v45 = *(v44 - 1);
        uint64_t v46 = *v44;
        char v47 = *(unsigned char *)(v45 + 32);
        unsigned int v48 = v47 & 0x3F;
        unint64_t v49 = (unint64_t)((1 << v47) + 63) >> 6;
        size_t v50 = 8 * v49;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v48 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v50);
          uint64_t v52 = sub_1BFEFB09C((uint64_t)v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v49, v45, v66);
          swift_bridgeObjectRelease();
        }
        else
        {
          char v53 = (void *)swift_slowAlloc();
          bzero(v53, v50);
          uint64_t v52 = sub_1BFEFB09C((uint64_t)v53, v49, v45, v66);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v53, -1, -1);
        }
        char v54 = sub_1BFEFAE14(v52, v45);
        swift_release();
        if (v54) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v44 += 5;
        if (!--v43) {
          goto LABEL_7;
        }
      }
      char v55 = sub_1BFEFB810(v66, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v55 & 1) == 0) {
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v64;
      uint64_t v58 = v63;
LABEL_8:
      swift_bridgeObjectRelease();
      uint64_t v8 = v9 + 1;
      if (v8 == v60)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v58;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v61 = v16;
    swift_endAccess();
    v67[0] = v11;
    v67[1] = v12;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v67, v68);
    uint64_t v23 = v68[1];
    uint64_t v62 = v68[0];
    uint64_t v24 = v68[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v65 = v24;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v67[0] = *v17;
    uint64_t v26 = v67[0];
    *char v17 = 0x8000000000000000;
    unint64_t v28 = sub_1BFEF2D8C(v11, v12);
    uint64_t v29 = *(void *)(v26 + 16);
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    char v32 = v27;
    if (*(void *)(v26 + 24) < v31)
    {
      sub_1BFFDF158(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_1BFEF2D8C(v11, v12);
      if ((v32 & 1) != (v34 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v28 = v33;
      BOOL v35 = (void *)v67[0];
      if ((v32 & 1) == 0) {
        goto LABEL_24;
      }
LABEL_22:
      uint64_t v36 = (uint64_t *)(v35[7] + 24 * v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v36 = v62;
      v36[1] = v23;
      uint64_t v37 = v65;
      void v36[2] = v65;
      uint64_t v22 = v37;
LABEL_26:
      *char v17 = (uint64_t)v35;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      BOOL v35 = (void *)v67[0];
      if (v27) {
        goto LABEL_22;
      }
    }
    else
    {
      sub_1C106B39C();
      BOOL v35 = (void *)v67[0];
      if (v32) {
        goto LABEL_22;
      }
    }
LABEL_24:
    v35[(v28 >> 6) + 8] |= 1 << v28;
    uint64_t v38 = (uint64_t *)(v35[6] + 16 * v28);
    uint64_t *v38 = v11;
    v38[1] = v12;
    BOOL v39 = (uint64_t *)(v35[7] + 24 * v28);
    uint64_t *v39 = v62;
    v39[1] = v23;
    uint64_t v22 = v65;
    long long v39[2] = v65;
    uint64_t v40 = v35[2];
    BOOL v41 = __OFADD__(v40, 1);
    uint64_t v42 = v40 + 1;
    if (v41) {
      goto LABEL_42;
    }
    v35[2] = v42;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1C027215C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return sub_1C0272190(a1, a2, (void (*)(uint64_t))sub_1BFE6FA30, (void (*)(void))sub_1BFE6FA30, (void (*)(uint64_t))sub_1BFF0056C, (void (*)(uint64_t))sub_1BFF0056C, a3);
}

uint64_t sub_1C0272190@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void (*a3)(uint64_t)@<X3>, void (*a4)(void)@<X4>, void (*a5)(uint64_t)@<X5>, void (*a6)(uint64_t)@<X6>, uint64_t *a7@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C1517EFC();
    uint64_t v13 = *(void *)(*(void *)(v20 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v13 + 16) + 16))
    {
      uint64_t v19 = *(void *)(v20 + 56);
      uint64_t v14 = swift_bridgeObjectRetain();
      uint64_t v15 = sub_1BFEF3B08(v14);
      sub_1BFEF3808(v15);
      swift_release();
      uint64_t v16 = v19;
    }
    else
    {
      uint64_t v16 = sub_1BFEF3784();
      swift_release();
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3(a1);
    sub_1C026C660(a1, a2, v16, a4, a5, a7);
    a6(a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    *a7 = a1;
    return ((uint64_t (*)(uint64_t))a3)(a1);
  }
}

uint64_t sub_1C027230C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C1517EFC();
    uint64_t v6 = *(void *)(*(void *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v6 + 16) + 16))
    {
      uint64_t v11 = *(void *)(v12 + 56);
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BFEF3B08(v7);
      sub_1BFEF3808(v8);
      swift_release();
      uint64_t v9 = v11;
    }
    else
    {
      uint64_t v9 = sub_1BFEF3784();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C026CC9C(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1C0272450@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C1517EFC();
    uint64_t v6 = *(void *)(*(void *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v6 + 16) + 16))
    {
      uint64_t v11 = *(void *)(v12 + 56);
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BFEF3B08(v7);
      sub_1BFEF3808(v8);
      swift_release();
      uint64_t v9 = v11;
    }
    else
    {
      uint64_t v9 = sub_1BFEF3784();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C026D2C0(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1C0272590@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return sub_1C0023B88(a1, a2, a3);
}

uint64_t sub_1C027259C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  v82[5] = *MEMORY[0x1E4F143B8];
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v56 - v5;
  uint64_t v7 = sub_1C151631C();
  uint64_t v61 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v66 = (char *)&v56 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v56 - v13;
  MEMORY[0x1F4188790](v15);
  char v17 = (char *)&v56 - v16;
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB876930, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  if (*(void *)(*(void *)(v1 + *(int *)(v18 + 36)) + 16))
  {
    uint64_t v59 = *(void *)(v1 + *(int *)(v18 + 36));
    uint64_t v19 = sub_1BFFC514C();
    uint64_t v20 = *(void *)(*(void *)(v19 + 40) + 16);
    swift_beginAccess();
    uint64_t v21 = *(void *)(*(void *)(v20 + 16) + 16);
    uint64_t v58 = a1;
    if (v21)
    {
      v82[0] = *(void *)(v19 + 56);
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = sub_1BFEF3B08(v22);
      sub_1BFEF3808(v23);
      swift_release();
      uint64_t v81 = v82[0];
    }
    else
    {
      uint64_t v81 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v26 = v61 + 16;
    char v27 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
    v27(v17, v2, v7);
    uint64_t v79 = (void (*)(char *, char *, uint64_t))v27;
    uint64_t v80 = v26;
    v27(v14, (uint64_t)v17, v7);
    uint64_t v28 = v59;
    uint64_t v74 = *(void *)(v59 + 16);
    uint64_t v57 = v17;
    if (v74)
    {
      sub_1BFF26D60(0, (unint64_t *)&qword_1EB87B1A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
      uint64_t v60 = v29;
      uint64_t v30 = *(void *)(v29 - 8);
      unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v32 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v32 != -1) {
        swift_once();
      }
      uint64_t v33 = 0;
      uint64_t v73 = v28 + v31;
      uint64_t v72 = *(void *)(v30 + 72);
      uint64_t v70 = (unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
      uint64_t v71 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
      uint64_t v68 = (void (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v69 = (void (**)(char *, uint64_t))(v61 + 8);
      uint64_t v75 = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v67 = (v61 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      char v34 = v66;
      uint64_t v65 = v7;
      uint64_t v64 = v6;
      uint64_t v63 = v14;
      uint64_t v62 = v9;
      do
      {
        uint64_t v37 = (uint64_t *)(v73 + v72 * v33);
        uint64_t v38 = *v37;
        uint64_t v39 = v37[1];
        uint64_t v76 = v37;
        v82[0] = v38;
        v82[1] = v39;
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1BFEF53C0(v82);
        swift_bridgeObjectRelease();
        uint64_t v41 = v40;
        uint64_t v42 = *(void *)(v40 + 16);
        if (v42)
        {
          uint64_t v77 = v41;
          uint64_t v78 = v33;
          uint64_t v43 = (uint64_t *)(v41 + 64);
          do
          {
            uint64_t v44 = *(v43 - 1);
            uint64_t v45 = *v43;
            char v46 = *(unsigned char *)(v44 + 32);
            unsigned int v47 = v46 & 0x3F;
            unint64_t v48 = (unint64_t)((1 << v46) + 63) >> 6;
            size_t v49 = 8 * v48;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v47 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              bzero((char *)&v56 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v49);
              uint64_t v51 = sub_1BFEFB09C((uint64_t)&v56 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v48, v44, v81);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v52 = (void *)swift_slowAlloc();
              bzero(v52, v49);
              uint64_t v51 = sub_1BFEFB09C((uint64_t)v52, v48, v44, v81);
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v52, -1, -1);
            }
            char v53 = sub_1BFEFAE14(v51, v44);
            swift_release();
            if (v53)
            {
              char v54 = sub_1BFEFB810(v81, v45);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v54)
              {
                swift_bridgeObjectRelease();
                uint64_t v6 = v64;
                uint64_t v7 = v65;
                v79(v64, (char *)v76 + *(int *)(v60 + 36), v65);
                uint64_t v55 = 0;
                goto LABEL_26;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v43 += 5;
            --v42;
          }
          while (v42);
          swift_bridgeObjectRelease();
          uint64_t v55 = 1;
          uint64_t v7 = v65;
          uint64_t v6 = v64;
LABEL_26:
          uint64_t v14 = v63;
          uint64_t v9 = v62;
          char v34 = v66;
          uint64_t v33 = v78;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v55 = 1;
        }
        (*v71)(v6, v55, 1, v7);
        v79(v9, v14, v7);
        if ((*v70)(v6, 1, v7) == 1)
        {
          BOOL v35 = *v68;
          (*v68)(v34, v9, v7);
          sub_1BFE5464C((uint64_t)v6, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          uint64_t v36 = *v69;
        }
        else
        {
          uint64_t v36 = *v69;
          (*v69)(v9, v7);
          BOOL v35 = *v68;
          (*v68)(v34, v6, v7);
        }
        ++v33;
        v36(v14, v7);
        v35(v14, v34, v7);
      }
      while (v33 != v74);
    }
    else
    {
      BOOL v35 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v75 = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      swift_bridgeObjectRetain();
    }
    v35(v58, v14, v7);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v57, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 16);
    return v24(a1, v1, v7);
  }
}

uint64_t sub_1C0272E0C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  v82[5] = *MEMORY[0x1E4F143B8];
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v56 - v5;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v61 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v66 = (char *)&v56 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v56 - v13;
  MEMORY[0x1F4188790](v15);
  char v17 = (char *)&v56 - v16;
  sub_1BFF26C28(0, (unint64_t *)&qword_1EB876928, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  if (*(void *)(*(void *)(v1 + *(int *)(v18 + 36)) + 16))
  {
    uint64_t v59 = *(void *)(v1 + *(int *)(v18 + 36));
    uint64_t v19 = sub_1BFFC514C();
    uint64_t v20 = *(void *)(*(void *)(v19 + 40) + 16);
    swift_beginAccess();
    uint64_t v21 = *(void *)(*(void *)(v20 + 16) + 16);
    uint64_t v58 = a1;
    if (v21)
    {
      v82[0] = *(void *)(v19 + 56);
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = sub_1BFEF3B08(v22);
      sub_1BFEF3808(v23);
      swift_release();
      uint64_t v81 = v82[0];
    }
    else
    {
      uint64_t v81 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v26 = v61 + 16;
    char v27 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
    v27(v17, v2, v7);
    uint64_t v79 = (void (*)(char *, char *, uint64_t))v27;
    uint64_t v80 = v26;
    v27(v14, (uint64_t)v17, v7);
    uint64_t v28 = v59;
    uint64_t v74 = *(void *)(v59 + 16);
    uint64_t v57 = v17;
    if (v74)
    {
      sub_1BFF26C28(0, (unint64_t *)&qword_1EB87B1A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
      uint64_t v60 = v29;
      uint64_t v30 = *(void *)(v29 - 8);
      unint64_t v31 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v32 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v32 != -1) {
        swift_once();
      }
      uint64_t v33 = 0;
      uint64_t v73 = v28 + v31;
      uint64_t v72 = *(void *)(v30 + 72);
      uint64_t v70 = (unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
      uint64_t v71 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
      uint64_t v68 = (void (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v69 = (void (**)(char *, uint64_t))(v61 + 8);
      uint64_t v75 = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v67 = (v61 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      char v34 = v66;
      uint64_t v65 = v7;
      uint64_t v64 = v6;
      uint64_t v63 = v14;
      uint64_t v62 = v9;
      do
      {
        uint64_t v37 = (uint64_t *)(v73 + v72 * v33);
        uint64_t v38 = *v37;
        uint64_t v39 = v37[1];
        uint64_t v76 = v37;
        v82[0] = v38;
        v82[1] = v39;
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_1BFEF53C0(v82);
        swift_bridgeObjectRelease();
        uint64_t v41 = v40;
        uint64_t v42 = *(void *)(v40 + 16);
        if (v42)
        {
          uint64_t v77 = v41;
          uint64_t v78 = v33;
          uint64_t v43 = (uint64_t *)(v41 + 64);
          do
          {
            uint64_t v44 = *(v43 - 1);
            uint64_t v45 = *v43;
            char v46 = *(unsigned char *)(v44 + 32);
            unsigned int v47 = v46 & 0x3F;
            unint64_t v48 = (unint64_t)((1 << v46) + 63) >> 6;
            size_t v49 = 8 * v48;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v47 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              bzero((char *)&v56 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v49);
              uint64_t v51 = sub_1BFEFB09C((uint64_t)&v56 - ((v49 + 15) & 0x3FFFFFFFFFFFFFF0), v48, v44, v81);
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v52 = (void *)swift_slowAlloc();
              bzero(v52, v49);
              uint64_t v51 = sub_1BFEFB09C((uint64_t)v52, v48, v44, v81);
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v52, -1, -1);
            }
            char v53 = sub_1BFEFAE14(v51, v44);
            swift_release();
            if (v53)
            {
              char v54 = sub_1BFEFB810(v81, v45);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v54)
              {
                swift_bridgeObjectRelease();
                uint64_t v6 = v64;
                uint64_t v7 = v65;
                v79(v64, (char *)v76 + *(int *)(v60 + 36), v65);
                uint64_t v55 = 0;
                goto LABEL_26;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v43 += 5;
            --v42;
          }
          while (v42);
          swift_bridgeObjectRelease();
          uint64_t v55 = 1;
          uint64_t v7 = v65;
          uint64_t v6 = v64;
LABEL_26:
          uint64_t v14 = v63;
          uint64_t v9 = v62;
          char v34 = v66;
          uint64_t v33 = v78;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v55 = 1;
        }
        (*v71)(v6, v55, 1, v7);
        v79(v9, v14, v7);
        if ((*v70)(v6, 1, v7) == 1)
        {
          BOOL v35 = *v68;
          (*v68)(v34, v9, v7);
          sub_1BFE5464C((uint64_t)v6, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          uint64_t v36 = *v69;
        }
        else
        {
          uint64_t v36 = *v69;
          (*v69)(v9, v7);
          BOOL v35 = *v68;
          (*v68)(v34, v6, v7);
        }
        ++v33;
        v36(v14, v7);
        v35(v14, v34, v7);
      }
      while (v33 != v74);
    }
    else
    {
      BOOL v35 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v75 = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      swift_bridgeObjectRetain();
    }
    v35(v58, v14, v7);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v57, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 16);
    return v24(a1, v1, v7);
  }
}

uint64_t sub_1C027367C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    uint64_t v6 = sub_1BFFC514C();
    uint64_t v7 = *(void *)(*(void *)(v6 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v7 + 16) + 16))
    {
      uint64_t v12 = *(void *)(v6 + 56);
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = sub_1BFEF3B08(v8);
      sub_1BFEF3808(v9);
      swift_release();
      uint64_t v10 = v12;
    }
    else
    {
      uint64_t v10 = sub_1BFEF3784();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFB3F44(a1, a2, v10, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1C02737B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C1517EFC();
    uint64_t v6 = *(void *)(*(void *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v6 + 16) + 16))
    {
      uint64_t v11 = *(void *)(v12 + 56);
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BFEF3B08(v7);
      sub_1BFEF3808(v8);
      swift_release();
      uint64_t v9 = v11;
    }
    else
    {
      uint64_t v9 = sub_1BFEF3784();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C026D8E4(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1C02738F0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  uint64_t v62 = *(void *)(a3 + 16);
  if (!v62) {
    return a2 & 1;
  }
  type metadata accessor for FormatDecorationContext();
  sub_1C1517EFC();
  uint64_t v5 = *(void *)(*(void *)(v71 + 40) + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(*(void *)(v5 + 16) + 16);
  int v60 = a2;
  if (v6)
  {
    v70[0] = *(void *)(v71 + 56);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BFEF3B08(v7);
    sub_1BFEF3808(v8);
    swift_release();
    uint64_t v68 = v70[0];
  }
  else
  {
    uint64_t v68 = sub_1BFEF3784();
    swift_release();
  }
  uint64_t v61 = a3 + 32;
  v59[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
LABEL_8:
  uint64_t v10 = v61 + 24 * v9;
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *(void *)(v10 + 8);
  int v63 = *(unsigned __int8 *)(v10 + 16);
  uint64_t v13 = qword_1EB87F148;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1EB93C770;
  uint64_t v15 = *(void *)(qword_1EB93C770 + 24);
  swift_bridgeObjectRetain();
  sub_1C1517E7C();
  uint64_t v16 = (uint64_t *)(v14 + 16);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v14 + 16);
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v66 = v9;
  if (v18)
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1BFEF2D8C(v12, v11);
    if (v20)
    {
      uint64_t v21 = *(void *)(*(void *)(v17 + 56) + 24 * v19 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v45 = *(void *)(v21 + 16);
      if (!v45)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      uint64_t v65 = v11;
      uint64_t v67 = v21;
      char v46 = (uint64_t *)(v21 + 64);
      while (1)
      {
        uint64_t v47 = *(v46 - 1);
        uint64_t v48 = *v46;
        char v49 = *(unsigned char *)(v47 + 32);
        unsigned int v50 = v49 & 0x3F;
        unint64_t v51 = (unint64_t)((1 << v49) + 63) >> 6;
        size_t v52 = 8 * v51;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v50 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v52);
          uint64_t v54 = sub_1BFEFB09C((uint64_t)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v51, v47, v68);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v55 = (void *)swift_slowAlloc();
          bzero(v55, v52);
          uint64_t v54 = sub_1BFEFB09C((uint64_t)v55, v51, v47, v68);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v55, -1, -1);
        }
        char v56 = sub_1BFEFAE14(v54, v47);
        swift_release();
        if (v56)
        {
          char v57 = sub_1BFEFB810(v68, v48);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v57)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v60 = v63;
LABEL_7:
            uint64_t v9 = v66 + 1;
            if (v66 + 1 == v62)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              LOBYTE(a2) = v60;
              return a2 & 1;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 += 5;
        if (!--v45) {
          goto LABEL_6;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v64 = v15;
  swift_endAccess();
  v69[0] = v12;
  v69[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BFF04A00(v69, v70);
  uint64_t v22 = v70[1];
  uint64_t v65 = v70[0];
  uint64_t v23 = v70[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v67 = v23;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = v12;
  char v26 = isUniquelyReferenced_nonNull_native;
  v69[0] = *v16;
  uint64_t v27 = v69[0];
  *uint64_t v16 = 0x8000000000000000;
  uint64_t v28 = v25;
  uint64_t v29 = v11;
  unint64_t v31 = sub_1BFEF2D8C(v25, v11);
  uint64_t v32 = *(void *)(v27 + 16);
  BOOL v33 = (v30 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  char v35 = v30;
  if (*(void *)(v27 + 24) >= v34)
  {
    if (v26)
    {
      uint64_t v38 = (void *)v69[0];
      if (v30) {
        goto LABEL_21;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v38 = (void *)v69[0];
      if (v35) {
        goto LABEL_21;
      }
    }
LABEL_23:
    v38[(v31 >> 6) + 8] |= 1 << v31;
    uint64_t v40 = (uint64_t *)(v38[6] + 16 * v31);
    uint64_t *v40 = v28;
    v40[1] = v29;
    uint64_t v41 = (uint64_t *)(v38[7] + 24 * v31);
    uint64_t *v41 = v65;
    v41[1] = v22;
    uint64_t v21 = v67;
    long long v41[2] = v67;
    uint64_t v42 = v38[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_41;
    }
    uint64_t v11 = v29;
    _OWORD v38[2] = v44;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BFFDF158(v34, v26);
  unint64_t v36 = sub_1BFEF2D8C(v28, v29);
  if ((v35 & 1) == (v37 & 1))
  {
    unint64_t v31 = v36;
    uint64_t v38 = (void *)v69[0];
    if ((v35 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_21:
    uint64_t v39 = (uint64_t *)(v38[7] + 24 * v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t *v39 = v65;
    v39[1] = v22;
    uint64_t v21 = v67;
    long long v39[2] = v67;
    uint64_t v11 = v29;
LABEL_25:
    *uint64_t v16 = (uint64_t)v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C0273F38@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v82 = *MEMORY[0x1E4F143B8];
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v55 - v5;
  uint64_t v7 = sub_1C151631C();
  uint64_t v59 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v64 = (char *)v55 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v55 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v55 - v16;
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB876930, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  uint64_t v19 = *(void *)(v2 + *(int *)(v18 + 36));
  if (*(void *)(v19 + 16))
  {
    char v57 = a1;
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    uint64_t v20 = v81;
    uint64_t v21 = *(void *)(*(void *)(v81 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v21 + 16) + 16))
    {
      v80[0] = *(void *)(v20 + 56);
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = sub_1BFEF3B08(v22);
      sub_1BFEF3808(v23);
      swift_release();
      uint64_t v79 = v80[0];
    }
    else
    {
      uint64_t v79 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v26 = v59 + 16;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
    v27(v17, v2, v7);
    uint64_t v77 = (void (*)(char *, char *, uint64_t))v27;
    uint64_t v78 = v26;
    v27(v14, (uint64_t)v17, v7);
    uint64_t v72 = *(void *)(v19 + 16);
    char v56 = v17;
    v55[1] = v19;
    if (v72)
    {
      sub_1BFF26D60(0, (unint64_t *)&qword_1EB87B1A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
      uint64_t v58 = v28;
      uint64_t v29 = *(void *)(v28 - 8);
      unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      uint64_t v31 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v32 = 0;
      uint64_t v71 = v19 + v30;
      uint64_t v70 = *(void *)(v29 + 72);
      uint64_t v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
      uint64_t v69 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
      uint64_t v66 = (void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v67 = (void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v73 = (v59 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v65 = (v59 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      BOOL v33 = v64;
      uint64_t v63 = v7;
      uint64_t v62 = v6;
      uint64_t v61 = v14;
      int v60 = v9;
      do
      {
        unint64_t v36 = (uint64_t *)(v71 + v70 * v32);
        uint64_t v37 = *v36;
        uint64_t v38 = v36[1];
        uint64_t v74 = v36;
        v80[0] = v37;
        v80[1] = v38;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1BFEF53C0(v80);
        swift_bridgeObjectRelease();
        uint64_t v40 = v39;
        uint64_t v41 = *(void *)(v39 + 16);
        if (v41)
        {
          uint64_t v75 = v40;
          uint64_t v76 = v32;
          uint64_t v42 = (uint64_t *)(v40 + 64);
          do
          {
            uint64_t v43 = *(v42 - 1);
            uint64_t v44 = *v42;
            char v45 = *(unsigned char *)(v43 + 32);
            unsigned int v46 = v45 & 0x3F;
            unint64_t v47 = (unint64_t)((1 << v45) + 63) >> 6;
            size_t v48 = 8 * v47;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v46 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              bzero((char *)v55 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v48);
              uint64_t v50 = sub_1BFEFB09C((uint64_t)v55 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v47, v43, v79);
              swift_bridgeObjectRelease();
            }
            else
            {
              unint64_t v51 = (void *)swift_slowAlloc();
              bzero(v51, v48);
              uint64_t v50 = sub_1BFEFB09C((uint64_t)v51, v47, v43, v79);
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v51, -1, -1);
            }
            char v52 = sub_1BFEFAE14(v50, v43);
            swift_release();
            if (v52)
            {
              char v53 = sub_1BFEFB810(v79, v44);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v53)
              {
                swift_bridgeObjectRelease();
                uint64_t v6 = v62;
                uint64_t v7 = v63;
                v77(v62, (char *)v74 + *(int *)(v58 + 36), v63);
                uint64_t v54 = 0;
                goto LABEL_26;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v42 += 5;
            --v41;
          }
          while (v41);
          swift_bridgeObjectRelease();
          uint64_t v54 = 1;
          uint64_t v7 = v63;
          uint64_t v6 = v62;
LABEL_26:
          uint64_t v14 = v61;
          uint64_t v9 = v60;
          BOOL v33 = v64;
          uint64_t v32 = v76;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v54 = 1;
        }
        (*v69)(v6, v54, 1, v7);
        v77(v9, v14, v7);
        if ((*v68)(v6, 1, v7) == 1)
        {
          uint64_t v34 = *v66;
          (*v66)(v33, v9, v7);
          sub_1BFE5464C((uint64_t)v6, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          char v35 = *v67;
        }
        else
        {
          char v35 = *v67;
          (*v67)(v9, v7);
          uint64_t v34 = *v66;
          (*v66)(v33, v6, v7);
        }
        ++v32;
        v35(v14, v7);
        v34(v14, v33, v7);
      }
      while (v32 != v72);
    }
    else
    {
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v73 = (v59 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      swift_bridgeObjectRetain();
    }
    v34(v57, v14, v7);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 16);
    return v24(a1, v2, v7);
  }
}

uint64_t sub_1C02747B8(uint64_t result, uint64_t a2)
{
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  uint64_t v56 = *(void *)(a2 + 16);
  if (v56)
  {
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    uint64_t v3 = *(void *)(*(void *)(v65 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v3 + 16) + 16))
    {
      v64[0] = *(void *)(v65 + 56);
      uint64_t v4 = swift_bridgeObjectRetain();
      uint64_t v5 = sub_1BFEF3B08(v4);
      sub_1BFEF3808(v5);
      swift_release();
      uint64_t v62 = v64[0];
    }
    else
    {
      uint64_t v62 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v54 = a2;
    uint64_t v55 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = (uint64_t *)(v55 + 24 * v6);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      uint64_t v10 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v10 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_1EB93C770;
      uint64_t v12 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      uint64_t v13 = (uint64_t *)(v11 + 16);
      swift_beginAccess();
      uint64_t v14 = *(void *)(v11 + 16);
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v60 = v6;
      if (!v15) {
        goto LABEL_13;
      }
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_1BFEF2D8C(v9, v8);
      if ((v17 & 1) == 0) {
        break;
      }
      uint64_t v18 = *(void *)(*(void *)(v14 + 56) + 24 * v16 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_25:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v41 = *(void *)(v18 + 16);
      if (v41)
      {
        uint64_t v59 = v8;
        uint64_t v61 = v18;
        uint64_t v42 = (uint64_t *)(v18 + 64);
        do
        {
          uint64_t v43 = *(v42 - 1);
          uint64_t v44 = *v42;
          char v45 = *(unsigned char *)(v43 + 32);
          unsigned int v46 = v45 & 0x3F;
          unint64_t v47 = (unint64_t)((1 << v45) + 63) >> 6;
          size_t v48 = 8 * v47;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v46 <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            bzero((char *)&v54 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v48);
            uint64_t v50 = sub_1BFEFB09C((uint64_t)&v54 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v47, v43, v62);
            swift_bridgeObjectRelease();
          }
          else
          {
            unint64_t v51 = (void *)swift_slowAlloc();
            bzero(v51, v48);
            uint64_t v50 = sub_1BFEFB09C((uint64_t)v51, v47, v43, v62);
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v51, -1, -1);
          }
          char v52 = sub_1BFEFAE14(v50, v43);
          swift_release();
          if (v52)
          {
            char v53 = sub_1BFEFB810(v62, v44);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v53) {
              break;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v42 += 5;
          --v41;
        }
        while (v41);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = v60 + 1;
      if (v60 + 1 == v56)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v57 = v12;
    swift_endAccess();
    v63[0] = v9;
    v63[1] = v8;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v63, v64);
    uint64_t v19 = v64[1];
    uint64_t v58 = v64[0];
    uint64_t v20 = v64[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v59 = v19;
    swift_bridgeObjectRetain();
    uint64_t v61 = v20;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v63[0] = *v13;
    uint64_t v22 = v63[0];
    *uint64_t v13 = 0x8000000000000000;
    uint64_t v23 = v8;
    unint64_t v25 = sub_1BFEF2D8C(v9, v8);
    uint64_t v26 = *(void *)(v22 + 16);
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    char v29 = v24;
    if (*(void *)(v22 + 24) < v28)
    {
      sub_1BFFDF158(v28, isUniquelyReferenced_nonNull_native);
      unint64_t v30 = sub_1BFEF2D8C(v9, v23);
      if ((v29 & 1) != (v31 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v25 = v30;
      uint64_t v32 = (void *)v63[0];
      if ((v29 & 1) == 0) {
        goto LABEL_22;
      }
LABEL_20:
      BOOL v33 = (void *)(v32[7] + 24 * v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = v59;
      *BOOL v33 = v58;
      v33[1] = v34;
      uint64_t v18 = v61;
      v33[2] = v61;
      uint64_t v8 = v23;
LABEL_24:
      *uint64_t v13 = (uint64_t)v32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_25;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v32 = (void *)v63[0];
      if (v24) {
        goto LABEL_20;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v32 = (void *)v63[0];
      if (v29) {
        goto LABEL_20;
      }
    }
LABEL_22:
    v32[(v25 >> 6) + 8] |= 1 << v25;
    char v35 = (uint64_t *)(v32[6] + 16 * v25);
    *char v35 = v9;
    v35[1] = v23;
    unint64_t v36 = (void *)(v32[7] + 24 * v25);
    uint64_t v37 = v59;
    *unint64_t v36 = v58;
    v36[1] = v37;
    uint64_t v18 = v61;
    void v36[2] = v61;
    uint64_t v38 = v32[2];
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39) {
      goto LABEL_40;
    }
    uint64_t v8 = v23;
    v32[2] = v40;
    swift_bridgeObjectRetain();
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1C0274DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  uint64_t v62 = *(void *)(a3 + 16);
  if (!v62) {
    return a2;
  }
  type metadata accessor for FormatDecorationContext();
  sub_1C1517EFC();
  uint64_t v5 = *(void *)(*(void *)(v71 + 40) + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(*(void *)(v5 + 16) + 16);
  uint64_t v60 = a2;
  if (v6)
  {
    v70[0] = *(void *)(v71 + 56);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BFEF3B08(v7);
    sub_1BFEF3808(v8);
    swift_release();
    uint64_t v68 = v70[0];
  }
  else
  {
    uint64_t v68 = sub_1BFEF3784();
    swift_release();
  }
  uint64_t v61 = a3 + 32;
  v59[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
LABEL_8:
  uint64_t v10 = (uint64_t *)(v61 + 24 * v9);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v63 = v10[2];
  uint64_t v13 = qword_1EB87F148;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1EB93C770;
  uint64_t v15 = *(void *)(qword_1EB93C770 + 24);
  swift_bridgeObjectRetain();
  sub_1C1517E7C();
  unint64_t v16 = (uint64_t *)(v14 + 16);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v14 + 16);
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v66 = v9;
  if (v18)
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1BFEF2D8C(v12, v11);
    if (v20)
    {
      uint64_t v21 = *(void *)(*(void *)(v17 + 56) + 24 * v19 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v45 = *(void *)(v21 + 16);
      if (!v45)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      uint64_t v65 = v11;
      uint64_t v67 = v21;
      unsigned int v46 = (uint64_t *)(v21 + 64);
      while (1)
      {
        uint64_t v47 = *(v46 - 1);
        uint64_t v48 = *v46;
        char v49 = *(unsigned char *)(v47 + 32);
        unsigned int v50 = v49 & 0x3F;
        unint64_t v51 = (unint64_t)((1 << v49) + 63) >> 6;
        size_t v52 = 8 * v51;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v50 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v52);
          uint64_t v54 = sub_1BFEFB09C((uint64_t)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v51, v47, v68);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v55 = (void *)swift_slowAlloc();
          bzero(v55, v52);
          uint64_t v54 = sub_1BFEFB09C((uint64_t)v55, v51, v47, v68);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v55, -1, -1);
        }
        char v56 = sub_1BFEFAE14(v54, v47);
        swift_release();
        if (v56)
        {
          char v57 = sub_1BFEFB810(v68, v48);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v57)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v60 = v63;
LABEL_7:
            uint64_t v9 = v66 + 1;
            if (v66 + 1 == v62)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v60;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 += 5;
        if (!--v45) {
          goto LABEL_6;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v64 = v15;
  swift_endAccess();
  v69[0] = v12;
  v69[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BFF04A00(v69, v70);
  uint64_t v22 = v70[1];
  uint64_t v65 = v70[0];
  uint64_t v23 = v70[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v67 = v23;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = v12;
  char v26 = isUniquelyReferenced_nonNull_native;
  v69[0] = *v16;
  uint64_t v27 = v69[0];
  *unint64_t v16 = 0x8000000000000000;
  uint64_t v28 = v25;
  uint64_t v29 = v11;
  unint64_t v31 = sub_1BFEF2D8C(v25, v11);
  uint64_t v32 = *(void *)(v27 + 16);
  BOOL v33 = (v30 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  char v35 = v30;
  if (*(void *)(v27 + 24) >= v34)
  {
    if (v26)
    {
      uint64_t v38 = (void *)v69[0];
      if (v30) {
        goto LABEL_21;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v38 = (void *)v69[0];
      if (v35) {
        goto LABEL_21;
      }
    }
LABEL_23:
    v38[(v31 >> 6) + 8] |= 1 << v31;
    uint64_t v40 = (uint64_t *)(v38[6] + 16 * v31);
    uint64_t *v40 = v28;
    v40[1] = v29;
    uint64_t v41 = (uint64_t *)(v38[7] + 24 * v31);
    uint64_t *v41 = v65;
    v41[1] = v22;
    uint64_t v21 = v67;
    long long v41[2] = v67;
    uint64_t v42 = v38[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_41;
    }
    uint64_t v11 = v29;
    _OWORD v38[2] = v44;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BFFDF158(v34, v26);
  unint64_t v36 = sub_1BFEF2D8C(v28, v29);
  if ((v35 & 1) == (v37 & 1))
  {
    unint64_t v31 = v36;
    uint64_t v38 = (void *)v69[0];
    if ((v35 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_21:
    BOOL v39 = (uint64_t *)(v38[7] + 24 * v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t *v39 = v65;
    v39[1] = v22;
    uint64_t v21 = v67;
    long long v39[2] = v67;
    uint64_t v11 = v29;
LABEL_25:
    *unint64_t v16 = (uint64_t)v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1C027543C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  uint64_t v65 = *(void *)(a4 + 16);
  if (v65)
  {
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    uint64_t v7 = *(void *)(*(void *)(v75 + 40) + 16);
    swift_beginAccess();
    uint64_t v8 = *(void *)(*(void *)(v7 + 16) + 16);
    uint64_t v62 = a2;
    if (v8)
    {
      v74[0] = *(void *)(v75 + 56);
      uint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v10 = sub_1BFEF3B08(v9);
      sub_1BFEF3808(v10);
      swift_release();
      uint64_t v72 = v74[0];
    }
    else
    {
      uint64_t v72 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v64 = a4 + 32;
    v61[0] = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v11 = 0;
    v61[1] = a3;
    uint64_t v63 = a3;
    while (1)
    {
      uint64_t v13 = (uint64_t *)(v64 + 32 * v11);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      uint64_t v16 = v13[3];
      uint64_t v66 = v13[2];
      uint64_t v17 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      uint64_t v69 = v16;
      swift_bridgeObjectRetain();
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v18 = qword_1EB93C770;
      uint64_t v19 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      char v20 = (uint64_t *)(v18 + 16);
      swift_beginAccess();
      uint64_t v21 = *(void *)(v18 + 16);
      uint64_t v22 = *(void *)(v21 + 16);
      uint64_t v70 = v11;
      if (!v22) {
        goto LABEL_15;
      }
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1BFEF2D8C(v15, v14);
      if ((v24 & 1) == 0) {
        break;
      }
      uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 24 * v23 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v47 = *(void *)(v25 + 16);
      if (!v47)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v70;
        goto LABEL_8;
      }
      uint64_t v68 = v14;
      uint64_t v71 = v25;
      uint64_t v48 = (uint64_t *)(v25 + 64);
      while (1)
      {
        uint64_t v49 = *(v48 - 1);
        uint64_t v50 = *v48;
        char v51 = *(unsigned char *)(v49 + 32);
        unsigned int v52 = v51 & 0x3F;
        unint64_t v53 = (unint64_t)((1 << v51) + 63) >> 6;
        size_t v54 = 8 * v53;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v52 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v54);
          uint64_t v56 = sub_1BFEFB09C((uint64_t)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v53, v49, v72);
          swift_bridgeObjectRelease();
        }
        else
        {
          char v57 = (void *)swift_slowAlloc();
          bzero(v57, v54);
          uint64_t v56 = sub_1BFEFB09C((uint64_t)v57, v53, v49, v72);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v57, -1, -1);
        }
        char v58 = sub_1BFEFAE14(v56, v49);
        swift_release();
        if (v58) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v48 += 5;
        if (!--v47) {
          goto LABEL_7;
        }
      }
      char v59 = sub_1BFEFB810(v72, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0) {
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v70;
      uint64_t v62 = v66;
      uint64_t v63 = v69;
LABEL_8:
      swift_bridgeObjectRelease();
      uint64_t v11 = v12 + 1;
      if (v11 == v65)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v62;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v67 = v19;
    swift_endAccess();
    v73[0] = v15;
    v73[1] = v14;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v73, v74);
    uint64_t v26 = v74[1];
    uint64_t v68 = v74[0];
    uint64_t v27 = v74[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v71 = v27;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *v20;
    uint64_t v29 = v73[0];
    *char v20 = 0x8000000000000000;
    uint64_t v30 = v15;
    uint64_t v31 = v14;
    unint64_t v33 = sub_1BFEF2D8C(v15, v14);
    uint64_t v34 = *(void *)(v29 + 16);
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    char v37 = v32;
    if (*(void *)(v29 + 24) < v36)
    {
      sub_1BFFDF158(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = sub_1BFEF2D8C(v30, v31);
      if ((v37 & 1) != (v39 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v33 = v38;
      uint64_t v40 = (void *)v73[0];
      if ((v37 & 1) == 0) {
        goto LABEL_24;
      }
LABEL_22:
      uint64_t v41 = (uint64_t *)(v40[7] + 24 * v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t *v41 = v68;
      v41[1] = v26;
      uint64_t v25 = v71;
      long long v41[2] = v71;
      uint64_t v14 = v31;
LABEL_26:
      *char v20 = (uint64_t)v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v40 = (void *)v73[0];
      if (v32) {
        goto LABEL_22;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v40 = (void *)v73[0];
      if (v37) {
        goto LABEL_22;
      }
    }
LABEL_24:
    v40[(v33 >> 6) + 8] |= 1 << v33;
    uint64_t v42 = (uint64_t *)(v40[6] + 16 * v33);
    uint64_t *v42 = v30;
    v42[1] = v31;
    BOOL v43 = (uint64_t *)(v40[7] + 24 * v33);
    uint64_t *v43 = v68;
    v43[1] = v26;
    uint64_t v25 = v71;
    _OWORD v43[2] = v71;
    uint64_t v44 = v40[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_42;
    }
    uint64_t v14 = v31;
    v40[2] = v46;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1C0275AE0@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v82 = *MEMORY[0x1E4F143B8];
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v55 - v5;
  uint64_t v7 = sub_1C1515FDC();
  uint64_t v59 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v64 = (char *)v55 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v55 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v55 - v16;
  sub_1BFF26C28(0, (unint64_t *)&qword_1EB876928, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  uint64_t v19 = *(void *)(v2 + *(int *)(v18 + 36));
  if (*(void *)(v19 + 16))
  {
    char v57 = a1;
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    uint64_t v20 = v81;
    uint64_t v21 = *(void *)(*(void *)(v81 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v21 + 16) + 16))
    {
      v80[0] = *(void *)(v20 + 56);
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = sub_1BFEF3B08(v22);
      sub_1BFEF3808(v23);
      swift_release();
      uint64_t v79 = v80[0];
    }
    else
    {
      uint64_t v79 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v26 = v59 + 16;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
    v27(v17, v2, v7);
    uint64_t v77 = (void (*)(char *, char *, uint64_t))v27;
    uint64_t v78 = v26;
    v27(v14, (uint64_t)v17, v7);
    uint64_t v72 = *(void *)(v19 + 16);
    uint64_t v56 = v17;
    v55[1] = v19;
    if (v72)
    {
      sub_1BFF26C28(0, (unint64_t *)&qword_1EB87B1A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
      uint64_t v58 = v28;
      uint64_t v29 = *(void *)(v28 - 8);
      unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      uint64_t v31 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v31 != -1) {
        swift_once();
      }
      uint64_t v32 = 0;
      uint64_t v71 = v19 + v30;
      uint64_t v70 = *(void *)(v29 + 72);
      uint64_t v68 = (unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
      uint64_t v69 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
      uint64_t v66 = (void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v67 = (void (**)(char *, uint64_t))(v59 + 8);
      uint64_t v73 = (v59 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v65 = (v59 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      unint64_t v33 = v64;
      uint64_t v63 = v7;
      uint64_t v62 = v6;
      uint64_t v61 = v14;
      uint64_t v60 = v9;
      do
      {
        uint64_t v36 = (uint64_t *)(v71 + v70 * v32);
        uint64_t v37 = *v36;
        uint64_t v38 = v36[1];
        uint64_t v74 = v36;
        v80[0] = v37;
        v80[1] = v38;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1BFEF53C0(v80);
        swift_bridgeObjectRelease();
        uint64_t v40 = v39;
        uint64_t v41 = *(void *)(v39 + 16);
        if (v41)
        {
          uint64_t v75 = v40;
          uint64_t v76 = v32;
          uint64_t v42 = (uint64_t *)(v40 + 64);
          do
          {
            uint64_t v43 = *(v42 - 1);
            uint64_t v44 = *v42;
            char v45 = *(unsigned char *)(v43 + 32);
            unsigned int v46 = v45 & 0x3F;
            unint64_t v47 = (unint64_t)((1 << v45) + 63) >> 6;
            size_t v48 = 8 * v47;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v46 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              bzero((char *)v55 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v48);
              uint64_t v50 = sub_1BFEFB09C((uint64_t)v55 - ((v48 + 15) & 0x3FFFFFFFFFFFFFF0), v47, v43, v79);
              swift_bridgeObjectRelease();
            }
            else
            {
              char v51 = (void *)swift_slowAlloc();
              bzero(v51, v48);
              uint64_t v50 = sub_1BFEFB09C((uint64_t)v51, v47, v43, v79);
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v51, -1, -1);
            }
            char v52 = sub_1BFEFAE14(v50, v43);
            swift_release();
            if (v52)
            {
              char v53 = sub_1BFEFB810(v79, v44);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v53)
              {
                swift_bridgeObjectRelease();
                uint64_t v6 = v62;
                uint64_t v7 = v63;
                v77(v62, (char *)v74 + *(int *)(v58 + 36), v63);
                uint64_t v54 = 0;
                goto LABEL_26;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v42 += 5;
            --v41;
          }
          while (v41);
          swift_bridgeObjectRelease();
          uint64_t v54 = 1;
          uint64_t v7 = v63;
          uint64_t v6 = v62;
LABEL_26:
          uint64_t v14 = v61;
          uint64_t v9 = v60;
          unint64_t v33 = v64;
          uint64_t v32 = v76;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v54 = 1;
        }
        (*v69)(v6, v54, 1, v7);
        v77(v9, v14, v7);
        if ((*v68)(v6, 1, v7) == 1)
        {
          uint64_t v34 = *v66;
          (*v66)(v33, v9, v7);
          sub_1BFE5464C((uint64_t)v6, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          BOOL v35 = *v67;
        }
        else
        {
          BOOL v35 = *v67;
          (*v67)(v9, v7);
          uint64_t v34 = *v66;
          (*v66)(v33, v6, v7);
        }
        ++v32;
        v35(v14, v7);
        v34(v14, v33, v7);
      }
      while (v32 != v72);
    }
    else
    {
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
      uint64_t v73 = (v59 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      swift_bridgeObjectRetain();
    }
    v34(v57, v14, v7);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v7);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 16);
    return v24(a1, v2, v7);
  }
}

uint64_t sub_1C0276360@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    type metadata accessor for FormatDecorationContext();
    sub_1C1517EFC();
    uint64_t v6 = *(void *)(*(void *)(v12 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v6 + 16) + 16))
    {
      uint64_t v11 = *(void *)(v12 + 56);
      uint64_t v7 = swift_bridgeObjectRetain();
      uint64_t v8 = sub_1BFEF3B08(v7);
      sub_1BFEF3808(v8);
      swift_release();
      uint64_t v9 = v11;
    }
    else
    {
      uint64_t v9 = sub_1BFEF3784();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C026CC9C(a1, a2, v9, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a3 = a1;
    return swift_retain();
  }
}

uint64_t sub_1C02764A8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  v82[5] = *MEMORY[0x1E4F143B8];
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v57 - v7;
  uint64_t v9 = sub_1C151631C();
  uint64_t v61 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v57 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v57 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v57 - v19;
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB876930, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  uint64_t v22 = *(void *)(v3 + *(int *)(v21 + 36));
  if (*(void *)(v22 + 16))
  {
    uint64_t v66 = v14;
    uint64_t v59 = a2;
    uint64_t v23 = *(void *)(a1 + 80);
    uint64_t v24 = *(void *)(*(void *)(v23 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v24 + 16) + 16))
    {
      v82[0] = *(void *)(v23 + 56);
      swift_retain();
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = sub_1BFEF3B08(v25);
      sub_1BFEF3808(v26);
      swift_release();
      uint64_t v81 = v82[0];
    }
    else
    {
      swift_retain();
      uint64_t v81 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v29 = v61 + 16;
    unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
    v30(v20, v3, v9);
    uint64_t v79 = (void (*)(char *, char *, uint64_t))v30;
    uint64_t v80 = v29;
    v30(v17, (uint64_t)v20, v9);
    uint64_t v31 = v66;
    uint64_t v74 = *(void *)(v22 + 16);
    uint64_t v58 = v20;
    v57[1] = v22;
    if (v74)
    {
      sub_1BFF26D60(0, (unint64_t *)&qword_1EB87B1A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
      uint64_t v60 = v32;
      uint64_t v33 = *(void *)(v32 - 8);
      unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v35 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v35 != -1) {
        swift_once();
      }
      uint64_t v36 = 0;
      uint64_t v73 = v22 + v34;
      uint64_t v72 = *(void *)(v33 + 72);
      uint64_t v70 = (unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
      uint64_t v71 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
      uint64_t v68 = (void (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v69 = (void (**)(char *, uint64_t))(v61 + 8);
      uint64_t v75 = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v67 = (v61 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v65 = v9;
      uint64_t v64 = v8;
      uint64_t v63 = v17;
      uint64_t v62 = v11;
      do
      {
        uint64_t v39 = (uint64_t *)(v73 + v72 * v36);
        uint64_t v40 = *v39;
        uint64_t v41 = v39[1];
        uint64_t v76 = v39;
        v82[0] = v40;
        v82[1] = v41;
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_1BFEF53C0(v82);
        swift_bridgeObjectRelease();
        uint64_t v43 = *(void *)(v42 + 16);
        if (v43)
        {
          uint64_t v77 = v42;
          uint64_t v78 = v36;
          uint64_t v44 = (uint64_t *)(v42 + 64);
          do
          {
            uint64_t v45 = *(v44 - 1);
            uint64_t v46 = *v44;
            char v47 = *(unsigned char *)(v45 + 32);
            unsigned int v48 = v47 & 0x3F;
            unint64_t v49 = (unint64_t)((1 << v47) + 63) >> 6;
            size_t v50 = 8 * v49;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v48 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              bzero((char *)v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v50);
              uint64_t v52 = sub_1BFEFB09C((uint64_t)v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v49, v45, v81);
              swift_bridgeObjectRelease();
            }
            else
            {
              char v53 = (void *)swift_slowAlloc();
              bzero(v53, v50);
              uint64_t v52 = sub_1BFEFB09C((uint64_t)v53, v49, v45, v81);
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v53, -1, -1);
            }
            char v54 = sub_1BFEFAE14(v52, v45);
            swift_release();
            if (v54)
            {
              char v55 = sub_1BFEFB810(v81, v46);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v55)
              {
                swift_bridgeObjectRelease();
                uint64_t v8 = v64;
                uint64_t v9 = v65;
                v79(v64, (char *)v76 + *(int *)(v60 + 36), v65);
                uint64_t v56 = 0;
                goto LABEL_26;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v44 += 5;
            --v43;
          }
          while (v43);
          swift_bridgeObjectRelease();
          uint64_t v56 = 1;
          uint64_t v9 = v65;
          uint64_t v8 = v64;
LABEL_26:
          uint64_t v17 = v63;
          uint64_t v11 = v62;
          uint64_t v31 = v66;
          uint64_t v36 = v78;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v56 = 1;
        }
        (*v71)(v8, v56, 1, v9);
        v79(v11, v17, v9);
        if ((*v70)(v8, 1, v9) == 1)
        {
          uint64_t v37 = *v68;
          (*v68)(v31, v11, v9);
          sub_1BFE5464C((uint64_t)v8, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
          uint64_t v38 = *v69;
        }
        else
        {
          uint64_t v38 = *v69;
          (*v69)(v11, v9);
          uint64_t v37 = *v68;
          (*v68)(v31, v8, v9);
        }
        ++v36;
        v38(v17, v9);
        v37(v17, v31, v9);
      }
      while (v36 != v74);
    }
    else
    {
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v75 = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      swift_bridgeObjectRetain();
    }
    v37(v59, v17, v9);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v9);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 16);
    return v27(a2, v3, v9);
  }
}

uint64_t sub_1C0276D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v75[6] = *MEMORY[0x1E4F143B8];
  uint64_t v66 = *(void *)(a4 + 16);
  if (v66)
  {
    uint64_t v7 = *(void *)(a1 + 80);
    uint64_t v8 = *(void *)(*(void *)(v7 + 40) + 16);
    swift_beginAccess();
    uint64_t v9 = *(void *)(*(void *)(v8 + 16) + 16);
    uint64_t v63 = a2;
    if (v9)
    {
      v75[0] = *(void *)(v7 + 56);
      swift_retain();
      uint64_t v10 = swift_bridgeObjectRetain();
      uint64_t v11 = sub_1BFEF3B08(v10);
      sub_1BFEF3808(v11);
      swift_release();
      uint64_t v73 = v75[0];
    }
    else
    {
      swift_retain();
      uint64_t v73 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v65 = a4 + 32;
    v62[0] = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v12 = 0;
    v62[1] = a3;
    uint64_t v64 = a3;
    while (1)
    {
      uint64_t v14 = (uint64_t *)(v65 + 32 * v12);
      uint64_t v16 = *v14;
      uint64_t v15 = v14[1];
      uint64_t v17 = v14[3];
      uint64_t v67 = v14[2];
      uint64_t v18 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      uint64_t v70 = v17;
      swift_bridgeObjectRetain();
      if (v18 != -1) {
        swift_once();
      }
      uint64_t v19 = qword_1EB93C770;
      uint64_t v20 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      uint64_t v21 = (uint64_t *)(v19 + 16);
      swift_beginAccess();
      uint64_t v22 = *(void *)(v19 + 16);
      uint64_t v23 = *(void *)(v22 + 16);
      uint64_t v71 = v12;
      if (!v23) {
        goto LABEL_15;
      }
      swift_bridgeObjectRetain();
      unint64_t v24 = sub_1BFEF2D8C(v16, v15);
      if ((v25 & 1) == 0) {
        break;
      }
      uint64_t v26 = *(void *)(*(void *)(v22 + 56) + 24 * v24 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v48 = *(void *)(v26 + 16);
      if (!v48)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = v71;
        goto LABEL_8;
      }
      uint64_t v69 = v15;
      uint64_t v72 = v26;
      unint64_t v49 = (uint64_t *)(v26 + 64);
      while (1)
      {
        uint64_t v50 = *(v49 - 1);
        uint64_t v51 = *v49;
        char v52 = *(unsigned char *)(v50 + 32);
        unsigned int v53 = v52 & 0x3F;
        unint64_t v54 = (unint64_t)((1 << v52) + 63) >> 6;
        size_t v55 = 8 * v54;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v53 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v62 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v55);
          uint64_t v57 = sub_1BFEFB09C((uint64_t)v62 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v50, v73);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v58 = (void *)swift_slowAlloc();
          bzero(v58, v55);
          uint64_t v57 = sub_1BFEFB09C((uint64_t)v58, v54, v50, v73);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v58, -1, -1);
        }
        char v59 = sub_1BFEFAE14(v57, v50);
        swift_release();
        if (v59) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v49 += 5;
        if (!--v48) {
          goto LABEL_7;
        }
      }
      char v60 = sub_1BFEFB810(v73, v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0) {
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v71;
      uint64_t v63 = v67;
      uint64_t v64 = v70;
LABEL_8:
      swift_bridgeObjectRelease();
      uint64_t v12 = v13 + 1;
      if (v12 == v66)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v63;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v68 = v20;
    swift_endAccess();
    v74[0] = v16;
    v74[1] = v15;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v74, v75);
    uint64_t v27 = v75[1];
    uint64_t v69 = v75[0];
    uint64_t v28 = v75[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v72 = v28;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v74[0] = *v21;
    uint64_t v30 = v74[0];
    *uint64_t v21 = 0x8000000000000000;
    uint64_t v31 = v16;
    uint64_t v32 = v15;
    unint64_t v34 = sub_1BFEF2D8C(v16, v15);
    uint64_t v35 = *(void *)(v30 + 16);
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    char v38 = v33;
    if (*(void *)(v30 + 24) < v37)
    {
      sub_1BFFDF158(v37, isUniquelyReferenced_nonNull_native);
      unint64_t v39 = sub_1BFEF2D8C(v31, v32);
      if ((v38 & 1) != (v40 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v34 = v39;
      uint64_t v41 = (void *)v74[0];
      if ((v38 & 1) == 0) {
        goto LABEL_24;
      }
LABEL_22:
      uint64_t v42 = (uint64_t *)(v41[7] + 24 * v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t *v42 = v69;
      v42[1] = v27;
      uint64_t v26 = v72;
      v42[2] = v72;
      uint64_t v15 = v32;
LABEL_26:
      *uint64_t v21 = (uint64_t)v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v41 = (void *)v74[0];
      if (v33) {
        goto LABEL_22;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v41 = (void *)v74[0];
      if (v38) {
        goto LABEL_22;
      }
    }
LABEL_24:
    v41[(v34 >> 6) + 8] |= 1 << v34;
    uint64_t v43 = (uint64_t *)(v41[6] + 16 * v34);
    uint64_t *v43 = v31;
    v43[1] = v32;
    uint64_t v44 = (uint64_t *)(v41[7] + 24 * v34);
    *uint64_t v44 = v69;
    v44[1] = v27;
    uint64_t v26 = v72;
    long long v44[2] = v72;
    uint64_t v45 = v41[2];
    BOOL v46 = __OFADD__(v45, 1);
    uint64_t v47 = v45 + 1;
    if (v46) {
      goto LABEL_42;
    }
    uint64_t v15 = v32;
    long long v41[2] = v47;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1C02773C0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3 = v2;
  v82[5] = *MEMORY[0x1E4F143B8];
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v57 - v7;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v61 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v57 - v13;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v57 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v57 - v19;
  sub_1BFF26C28(0, (unint64_t *)&qword_1EB876928, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  uint64_t v22 = *(void *)(v3 + *(int *)(v21 + 36));
  if (*(void *)(v22 + 16))
  {
    uint64_t v66 = v14;
    char v59 = a2;
    uint64_t v23 = *(void *)(a1 + 80);
    uint64_t v24 = *(void *)(*(void *)(v23 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v24 + 16) + 16))
    {
      v82[0] = *(void *)(v23 + 56);
      swift_retain();
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = sub_1BFEF3B08(v25);
      sub_1BFEF3808(v26);
      swift_release();
      uint64_t v81 = v82[0];
    }
    else
    {
      swift_retain();
      uint64_t v81 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v29 = v61 + 16;
    uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
    v30(v20, v3, v9);
    uint64_t v79 = (void (*)(char *, char *, uint64_t))v30;
    uint64_t v80 = v29;
    v30(v17, (uint64_t)v20, v9);
    uint64_t v31 = v66;
    uint64_t v74 = *(void *)(v22 + 16);
    uint64_t v58 = v20;
    v57[1] = v22;
    if (v74)
    {
      sub_1BFF26C28(0, (unint64_t *)&qword_1EB87B1A0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
      uint64_t v60 = v32;
      uint64_t v33 = *(void *)(v32 - 8);
      unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
      uint64_t v35 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v35 != -1) {
        swift_once();
      }
      uint64_t v36 = 0;
      uint64_t v73 = v22 + v34;
      uint64_t v72 = *(void *)(v33 + 72);
      uint64_t v70 = (unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
      uint64_t v71 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
      uint64_t v68 = (void (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v69 = (void (**)(char *, uint64_t))(v61 + 8);
      uint64_t v75 = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v67 = (v61 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v65 = v9;
      uint64_t v64 = v8;
      uint64_t v63 = v17;
      uint64_t v62 = v11;
      do
      {
        unint64_t v39 = (uint64_t *)(v73 + v72 * v36);
        uint64_t v40 = *v39;
        uint64_t v41 = v39[1];
        uint64_t v76 = v39;
        v82[0] = v40;
        v82[1] = v41;
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_1BFEF53C0(v82);
        swift_bridgeObjectRelease();
        uint64_t v43 = *(void *)(v42 + 16);
        if (v43)
        {
          uint64_t v77 = v42;
          uint64_t v78 = v36;
          uint64_t v44 = (uint64_t *)(v42 + 64);
          do
          {
            uint64_t v45 = *(v44 - 1);
            uint64_t v46 = *v44;
            char v47 = *(unsigned char *)(v45 + 32);
            unsigned int v48 = v47 & 0x3F;
            unint64_t v49 = (unint64_t)((1 << v47) + 63) >> 6;
            size_t v50 = 8 * v49;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v48 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              bzero((char *)v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v50);
              uint64_t v52 = sub_1BFEFB09C((uint64_t)v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v49, v45, v81);
              swift_bridgeObjectRelease();
            }
            else
            {
              unsigned int v53 = (void *)swift_slowAlloc();
              bzero(v53, v50);
              uint64_t v52 = sub_1BFEFB09C((uint64_t)v53, v49, v45, v81);
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v53, -1, -1);
            }
            char v54 = sub_1BFEFAE14(v52, v45);
            swift_release();
            if (v54)
            {
              char v55 = sub_1BFEFB810(v81, v46);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v55)
              {
                swift_bridgeObjectRelease();
                uint64_t v8 = v64;
                uint64_t v9 = v65;
                v79(v64, (char *)v76 + *(int *)(v60 + 36), v65);
                uint64_t v56 = 0;
                goto LABEL_26;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v44 += 5;
            --v43;
          }
          while (v43);
          swift_bridgeObjectRelease();
          uint64_t v56 = 1;
          uint64_t v9 = v65;
          uint64_t v8 = v64;
LABEL_26:
          uint64_t v17 = v63;
          uint64_t v11 = v62;
          uint64_t v31 = v66;
          uint64_t v36 = v78;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v56 = 1;
        }
        (*v71)(v8, v56, 1, v9);
        v79(v11, v17, v9);
        if ((*v70)(v8, 1, v9) == 1)
        {
          uint64_t v37 = *v68;
          (*v68)(v31, v11, v9);
          sub_1BFE5464C((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          char v38 = *v69;
        }
        else
        {
          char v38 = *v69;
          (*v69)(v11, v9);
          uint64_t v37 = *v68;
          (*v68)(v31, v8, v9);
        }
        ++v36;
        v38(v17, v9);
        v37(v17, v31, v9);
      }
      while (v36 != v74);
    }
    else
    {
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
      uint64_t v75 = (v61 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      swift_bridgeObjectRetain();
    }
    v37(v59, v17, v9);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v9);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 16);
    return v27(a2, v3, v9);
  }
}

uint64_t sub_1C0277C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (*(void *)(a3 + 16))
  {
    uint64_t v7 = *(void *)(a1 + 80);
    uint64_t v8 = *(void *)(*(void *)(v7 + 40) + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v8 + 16) + 16))
    {
      uint64_t v13 = *(void *)(v7 + 56);
      swift_retain();
      uint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v10 = sub_1BFEF3B08(v9);
      sub_1BFEF3808(v10);
      swift_release();
      uint64_t v11 = v13;
    }
    else
    {
      swift_retain();
      uint64_t v11 = sub_1BFEF3784();
      swift_release();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFB3F44(a2, a3, v11, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    *a4 = a2;
    return swift_retain();
  }
}

uint64_t sub_1C0277D98(void *a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 1uLL:
      char v9 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v11 = swift_allocObject();
      *(unsigned char *)(v11 + 16) = v9;
      *(void *)(v11 + 24) = v10;
      *(void *)(v11 + 32) = a1;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v43 = (id (*)(uint64_t))sub_1C028292C;
      uint64_t v44 = v11;
      uint64_t v39 = MEMORY[0x1E4F143A8];
      uint64_t v40 = 1107296256;
      uint64_t v8 = &block_descriptor_388;
      goto LABEL_12;
    case 2uLL:
      uint64_t v14 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v15 = swift_allocObject();
      long long v16 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(v15 + 88) = *(_OWORD *)(a2 + 48);
      long long v17 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(v15 + 104) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(v15 + 120) = v17;
      long long v18 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(v15 + 40) = *(_OWORD *)a2;
      *(_OWORD *)(v15 + 56) = v18;
      *(void *)(v15 + 16) = a1;
      *(void *)(v15 + 24) = v14;
      *(void *)(v15 + 32) = v13;
      *(void *)(v15 + 136) = *(void *)(a2 + 96);
      *(_OWORD *)(v15 + 72) = v16;
      id v19 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v43 = sub_1C0282864;
      uint64_t v44 = v15;
      uint64_t v39 = MEMORY[0x1E4F143A8];
      uint64_t v40 = 1107296256;
      uint64_t v41 = sub_1BFDF2404;
      uint64_t v42 = &block_descriptor_381;
      uint64_t v20 = _Block_copy(&v39);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      id v21 = a1;
      sub_1C003DFA4(a2);
      id v22 = objc_msgSend(v19, sel_initWithDynamicProvider_, v20);
      _Block_release(v20);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3uLL:
      uint64_t v23 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v23;
      id v25 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v43 = (id (*)(uint64_t))sub_1C0282920;
      uint64_t v44 = v24;
      uint64_t v39 = MEMORY[0x1E4F143A8];
      uint64_t v40 = 1107296256;
      uint64_t v41 = sub_1BFDF2404;
      uint64_t v42 = &block_descriptor_375;
      uint64_t v26 = _Block_copy(&v39);
      swift_retain_n();
      id v22 = objc_msgSend(v25, sel_initWithDynamicProvider_, v26);
      _Block_release(v26);
      goto LABEL_7;
    case 4uLL:
      uint64_t v28 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v27 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v29 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = a1;
      *(void *)(v30 + 24) = v28;
      *(void *)(v30 + 32) = v27;
      *(unsigned char *)(v30 + 40) = v29;
      id v31 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v43 = (id (*)(uint64_t))sub_1C0281938;
      uint64_t v44 = v30;
      uint64_t v39 = MEMORY[0x1E4F143A8];
      uint64_t v40 = 1107296256;
      uint64_t v41 = sub_1BFDF2404;
      uint64_t v42 = &block_descriptor_368;
      uint64_t v32 = _Block_copy(&v39);
      swift_retain_n();
      id v33 = a1;
      id v22 = objc_msgSend(v31, sel_initWithDynamicProvider_, v32);
      _Block_release(v32);
LABEL_7:
      swift_release();
      goto LABEL_13;
    case 5uLL:
      if (a3 == 0xA000000000000000)
      {
        uint64_t v35 = swift_allocObject();
        *(void *)(v35 + 16) = a1;
        id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
        uint64_t v43 = (id (*)(uint64_t))sub_1C0282928;
        uint64_t v44 = v35;
        uint64_t v39 = MEMORY[0x1E4F143A8];
        uint64_t v40 = 1107296256;
        uint64_t v8 = &block_descriptor_409;
      }
      else
      {
        if (a3 != 0xA000000000000008) {
          return sub_1C151F9FC();
        }
        uint64_t v34 = swift_allocObject();
        *(void *)(v34 + 16) = a1;
        id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
        uint64_t v43 = (id (*)(uint64_t))sub_1C0282924;
        uint64_t v44 = v34;
        uint64_t v39 = MEMORY[0x1E4F143A8];
        uint64_t v40 = 1107296256;
        uint64_t v8 = &block_descriptor_402;
      }
LABEL_12:
      uint64_t v41 = sub_1BFDF2404;
      uint64_t v42 = v8;
      uint64_t v36 = _Block_copy(&v39);
      id v37 = a1;
      id v22 = objc_msgSend(v7, sel_initWithDynamicProvider_, v36, v39, v40);
      _Block_release(v36);
LABEL_13:
      swift_release();
      return (uint64_t)v22;
    default:
      char v4 = *(unsigned char *)(a3 + 16);
      uint64_t v5 = *(void *)(a3 + 24);
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = a1;
      *(unsigned char *)(v6 + 24) = v4;
      *(void *)(v6 + 32) = v5;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v43 = (id (*)(uint64_t))sub_1C0282930;
      uint64_t v44 = v6;
      uint64_t v39 = MEMORY[0x1E4F143A8];
      uint64_t v40 = 1107296256;
      uint64_t v8 = &block_descriptor_395;
      goto LABEL_12;
  }
}

uint64_t sub_1C0278390(void *a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 1uLL:
      char v9 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v11 = swift_allocObject();
      *(unsigned char *)(v11 + 16) = v9;
      *(void *)(v11 + 24) = v10;
      *(void *)(v11 + 32) = a1;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v40 = (uint64_t (*)(uint64_t))sub_1C028292C;
      uint64_t v41 = (void *)v11;
      uint64_t v36 = MEMORY[0x1E4F143A8];
      uint64_t v37 = 1107296256;
      uint64_t v8 = &block_descriptor_191;
      goto LABEL_12;
    case 2uLL:
      uint64_t v14 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v15 = (void *)swift_allocObject();
      void v15[2] = a1;
      uint64_t v15[3] = v14;
      v15[4] = v13;
      v15[5] = a2;
      id v16 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v40 = sub_1C02823DC;
      uint64_t v41 = v15;
      uint64_t v36 = MEMORY[0x1E4F143A8];
      uint64_t v37 = 1107296256;
      char v38 = sub_1BFDF2404;
      uint64_t v39 = &block_descriptor_184;
      long long v17 = _Block_copy(&v36);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      id v18 = a1;
      swift_retain();
      id v19 = objc_msgSend(v16, sel_initWithDynamicProvider_, v17);
      _Block_release(v17);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3uLL:
      uint64_t v20 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v20;
      id v22 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v40 = (uint64_t (*)(uint64_t))sub_1C0282920;
      uint64_t v41 = (void *)v21;
      uint64_t v36 = MEMORY[0x1E4F143A8];
      uint64_t v37 = 1107296256;
      char v38 = sub_1BFDF2404;
      uint64_t v39 = &block_descriptor_178;
      uint64_t v23 = _Block_copy(&v36);
      swift_retain_n();
      id v19 = objc_msgSend(v22, sel_initWithDynamicProvider_, v23);
      _Block_release(v23);
      goto LABEL_7;
    case 4uLL:
      uint64_t v25 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v26 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = a1;
      *(void *)(v27 + 24) = v25;
      *(void *)(v27 + 32) = v24;
      *(unsigned char *)(v27 + 40) = v26;
      id v28 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v40 = (uint64_t (*)(uint64_t))sub_1C0281938;
      uint64_t v41 = (void *)v27;
      uint64_t v36 = MEMORY[0x1E4F143A8];
      uint64_t v37 = 1107296256;
      char v38 = sub_1BFDF2404;
      uint64_t v39 = &block_descriptor_171;
      char v29 = _Block_copy(&v36);
      swift_retain_n();
      id v30 = a1;
      id v19 = objc_msgSend(v28, sel_initWithDynamicProvider_, v29);
      _Block_release(v29);
LABEL_7:
      swift_release();
      goto LABEL_13;
    case 5uLL:
      if (a3 == 0xA000000000000000)
      {
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = a1;
        id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
        uint64_t v40 = (uint64_t (*)(uint64_t))sub_1C0282928;
        uint64_t v41 = (void *)v32;
        uint64_t v36 = MEMORY[0x1E4F143A8];
        uint64_t v37 = 1107296256;
        uint64_t v8 = &block_descriptor_212;
      }
      else
      {
        if (a3 != 0xA000000000000008) {
          return sub_1C151F9FC();
        }
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = a1;
        id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
        uint64_t v40 = (uint64_t (*)(uint64_t))sub_1C0282924;
        uint64_t v41 = (void *)v31;
        uint64_t v36 = MEMORY[0x1E4F143A8];
        uint64_t v37 = 1107296256;
        uint64_t v8 = &block_descriptor_205;
      }
LABEL_12:
      char v38 = sub_1BFDF2404;
      uint64_t v39 = v8;
      id v33 = _Block_copy(&v36);
      id v34 = a1;
      id v19 = objc_msgSend(v7, sel_initWithDynamicProvider_, v33, v36, v37);
      _Block_release(v33);
LABEL_13:
      swift_release();
      return (uint64_t)v19;
    default:
      char v4 = *(unsigned char *)(a3 + 16);
      uint64_t v5 = *(void *)(a3 + 24);
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = a1;
      *(unsigned char *)(v6 + 24) = v4;
      *(void *)(v6 + 32) = v5;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v40 = (uint64_t (*)(uint64_t))sub_1C0282930;
      uint64_t v41 = (void *)v6;
      uint64_t v36 = MEMORY[0x1E4F143A8];
      uint64_t v37 = 1107296256;
      uint64_t v8 = &block_descriptor_198_0;
      goto LABEL_12;
  }
}

uint64_t sub_1C027895C(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = type metadata accessor for FormatOptionsNodeStatementContext();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6 - 8);
  switch(a3 >> 61)
  {
    case 1uLL:
      char v14 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v16 = swift_allocObject();
      *(unsigned char *)(v16 + 16) = v14;
      *(void *)(v16 + 24) = v15;
      *(void *)(v16 + 32) = a1;
      id v12 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v45 = (id (*)(uint64_t))sub_1C028292C;
      uint64_t v46 = (void *)v16;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v42 = 1107296256;
      uint64_t v13 = &block_descriptor_323;
      goto LABEL_12;
    case 2uLL:
      uint64_t v18 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1C0282524(a2, (uint64_t)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
      unint64_t v19 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v20 = (void *)swift_allocObject();
      void v20[2] = a1;
      v20[3] = v18;
      v20[4] = v17;
      sub_1C028208C((uint64_t)&aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v20 + v19, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
      id v21 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v45 = sub_1C02826C4;
      uint64_t v46 = v20;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v42 = 1107296256;
      uint64_t v43 = sub_1BFDF2404;
      uint64_t v44 = &block_descriptor_316;
      id v22 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      id v23 = a1;
      id v24 = objc_msgSend(v21, sel_initWithDynamicProvider_, v22);
      _Block_release(v22);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3uLL:
      uint64_t v25 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v25;
      id v27 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v45 = (id (*)(uint64_t))sub_1C0282920;
      uint64_t v46 = (void *)v26;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v42 = 1107296256;
      uint64_t v43 = sub_1BFDF2404;
      uint64_t v44 = &block_descriptor_310;
      id v28 = _Block_copy(&aBlock);
      swift_retain_n();
      id v24 = objc_msgSend(v27, sel_initWithDynamicProvider_, v28);
      _Block_release(v28);
      goto LABEL_7;
    case 4uLL:
      uint64_t v30 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v29 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v31 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = a1;
      *(void *)(v32 + 24) = v30;
      *(void *)(v32 + 32) = v29;
      *(unsigned char *)(v32 + 40) = v31;
      id v33 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v45 = (id (*)(uint64_t))sub_1C0281938;
      uint64_t v46 = (void *)v32;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v42 = 1107296256;
      uint64_t v43 = sub_1BFDF2404;
      uint64_t v44 = &block_descriptor_303;
      id v34 = _Block_copy(&aBlock);
      swift_retain_n();
      id v35 = a1;
      id v24 = objc_msgSend(v33, sel_initWithDynamicProvider_, v34);
      _Block_release(v34);
LABEL_7:
      swift_release();
      goto LABEL_13;
    case 5uLL:
      if (a3 == 0xA000000000000000)
      {
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = a1;
        id v12 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
        uint64_t v45 = (id (*)(uint64_t))sub_1C0282928;
        uint64_t v46 = (void *)v37;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v42 = 1107296256;
        uint64_t v13 = &block_descriptor_344;
      }
      else
      {
        if (a3 != 0xA000000000000008) {
          return sub_1C151F9FC();
        }
        uint64_t v36 = swift_allocObject();
        *(void *)(v36 + 16) = a1;
        id v12 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
        uint64_t v45 = (id (*)(uint64_t))sub_1C0282924;
        uint64_t v46 = (void *)v36;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v42 = 1107296256;
        uint64_t v13 = &block_descriptor_337;
      }
LABEL_12:
      uint64_t v43 = sub_1BFDF2404;
      uint64_t v44 = v13;
      char v38 = _Block_copy(&aBlock);
      id v39 = a1;
      id v24 = objc_msgSend(v12, sel_initWithDynamicProvider_, v38, aBlock, v42);
      _Block_release(v38);
LABEL_13:
      swift_release();
      return (uint64_t)v24;
    default:
      char v9 = *(unsigned char *)(a3 + 16);
      uint64_t v10 = *(void *)(a3 + 24);
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = a1;
      *(unsigned char *)(v11 + 24) = v9;
      *(void *)(v11 + 32) = v10;
      id v12 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v45 = (id (*)(uint64_t))sub_1C0282930;
      uint64_t v46 = (void *)v11;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v42 = 1107296256;
      uint64_t v13 = &block_descriptor_330;
      goto LABEL_12;
  }
}

uint64_t sub_1C0279000(void *a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 1uLL:
      char v9 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v11 = swift_allocObject();
      *(unsigned char *)(v11 + 16) = v9;
      *(void *)(v11 + 24) = v10;
      *(void *)(v11 + 32) = a1;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v42 = sub_1BFDF294C;
      uint64_t v43 = v11;
      uint64_t v38 = MEMORY[0x1E4F143A8];
      uint64_t v39 = 1107296256;
      uint64_t v8 = &block_descriptor_44;
      goto LABEL_12;
    case 2uLL:
      uint64_t v14 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v15 = swift_allocObject();
      long long v16 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(v15 + 72) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(v15 + 88) = v16;
      *(_OWORD *)(v15 + 104) = *(_OWORD *)(a2 + 64);
      long long v17 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(v15 + 40) = *(_OWORD *)a2;
      *(void *)(v15 + 16) = a1;
      *(void *)(v15 + 24) = v14;
      *(void *)(v15 + 32) = v13;
      *(void *)(v15 + 120) = *(void *)(a2 + 80);
      *(_OWORD *)(v15 + 56) = v17;
      id v18 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v42 = sub_1C02819DC;
      uint64_t v43 = v15;
      uint64_t v38 = MEMORY[0x1E4F143A8];
      uint64_t v39 = 1107296256;
      uint64_t v40 = sub_1BFDF2404;
      uint64_t v41 = &block_descriptor_38;
      unint64_t v19 = _Block_copy(&v38);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      id v20 = a1;
      sub_1C0281A30(a2);
      id v21 = objc_msgSend(v18, sel_initWithDynamicProvider_, v19);
      _Block_release(v19);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3uLL:
      uint64_t v22 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v22;
      id v24 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v42 = sub_1C0281944;
      uint64_t v43 = v23;
      uint64_t v38 = MEMORY[0x1E4F143A8];
      uint64_t v39 = 1107296256;
      uint64_t v40 = sub_1BFDF2404;
      uint64_t v41 = &block_descriptor_32;
      uint64_t v25 = _Block_copy(&v38);
      swift_retain_n();
      id v21 = objc_msgSend(v24, sel_initWithDynamicProvider_, v25);
      _Block_release(v25);
      goto LABEL_7;
    case 4uLL:
      uint64_t v27 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v26 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v28 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = a1;
      *(void *)(v29 + 24) = v27;
      *(void *)(v29 + 32) = v26;
      *(unsigned char *)(v29 + 40) = v28;
      id v30 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v42 = (id (*)(uint64_t))sub_1C0281938;
      uint64_t v43 = v29;
      uint64_t v38 = MEMORY[0x1E4F143A8];
      uint64_t v39 = 1107296256;
      uint64_t v40 = sub_1BFDF2404;
      uint64_t v41 = &block_descriptor_13;
      char v31 = _Block_copy(&v38);
      swift_retain_n();
      id v32 = a1;
      id v21 = objc_msgSend(v30, sel_initWithDynamicProvider_, v31);
      _Block_release(v31);
LABEL_7:
      swift_release();
      goto LABEL_13;
    case 5uLL:
      if (a3 == 0xA000000000000000)
      {
        uint64_t v34 = swift_allocObject();
        *(void *)(v34 + 16) = a1;
        id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
        uint64_t v42 = sub_1C0281AB4;
        uint64_t v43 = v34;
        uint64_t v38 = MEMORY[0x1E4F143A8];
        uint64_t v39 = 1107296256;
        uint64_t v8 = &block_descriptor_62;
      }
      else
      {
        if (a3 != 0xA000000000000008) {
          return sub_1C151F9FC();
        }
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = a1;
        id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
        uint64_t v42 = sub_1C0281AAC;
        uint64_t v43 = v33;
        uint64_t v38 = MEMORY[0x1E4F143A8];
        uint64_t v39 = 1107296256;
        uint64_t v8 = &block_descriptor_56;
      }
LABEL_12:
      uint64_t v40 = sub_1BFDF2404;
      uint64_t v41 = v8;
      id v35 = _Block_copy(&v38);
      id v36 = a1;
      id v21 = objc_msgSend(v7, sel_initWithDynamicProvider_, v35, v38, v39);
      _Block_release(v35);
LABEL_13:
      swift_release();
      return (uint64_t)v21;
    default:
      char v4 = *(unsigned char *)(a3 + 16);
      uint64_t v5 = *(void *)(a3 + 24);
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = a1;
      *(unsigned char *)(v6 + 24) = v4;
      *(void *)(v6 + 32) = v5;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v42 = sub_1BFDF246C;
      uint64_t v43 = v6;
      uint64_t v38 = MEMORY[0x1E4F143A8];
      uint64_t v39 = 1107296256;
      uint64_t v8 = &block_descriptor_50;
      goto LABEL_12;
  }
}

void *sub_1C02795F4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1BFF67D70(a1, a2, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C027CB80, (uint64_t (*)(uint64_t, uint64_t))sub_1BFF64090, (void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1BFF67D44, a3);
}

void *sub_1C0279648@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  switch(a2 >> 61)
  {
    case 2uLL:
      unint64_t v8 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v7 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v9 = swift_allocObject();
      uint64_t v10 = sub_1C027CBC0(a1, v8, &v24);
      if (v3) {
        goto LABEL_9;
      }
      uint64_t v23 = *(void *)(a1 + 96);
      uint64_t v11 = v24;
      long long v12 = *(_OWORD *)(a1 + 80);
      v22[4] = *(_OWORD *)(a1 + 64);
      v22[5] = v12;
      long long v13 = *(_OWORD *)(a1 + 16);
      v22[0] = *(_OWORD *)a1;
      v22[1] = v13;
      long long v14 = *(_OWORD *)(a1 + 48);
      _OWORD v22[2] = *(_OWORD *)(a1 + 32);
      v22[3] = v14;
      MEMORY[0x1F4188790](v10);
      v21[2] = v22;
      uint64_t result = (void *)sub_1C0181D3C((void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C0282704, (uint64_t)v21, v7);
      *(void *)(v9 + 16) = v11;
      *(void *)(v9 + 24) = result;
      *a3 = v9 | 0x4000000000000000;
      break;
    case 3uLL:
      uint64_t v15 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v16 = swift_allocObject();
      uint64_t result = sub_1C0279B34((void *)(v16 + 16), a1, v15);
      if (v3) {
        goto LABEL_9;
      }
      *a3 = v16 | 0x6000000000000000;
      break;
    case 4uLL:
      uint64_t v17 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v18 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v19 = *(unsigned char *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v20 = swift_allocObject();
      uint64_t result = sub_1C0279B34(v22, a1, v17);
      if (v3)
      {
LABEL_9:
        uint64_t result = (void *)swift_deallocUninitializedObject();
      }
      else
      {
        *(void *)(v20 + 16) = *(void *)&v22[0];
        *(void *)(v20 + 24) = v18;
        *(unsigned char *)(v20 + 32) = v19;
        *a3 = v20 | 0x8000000000000000;
      }
      break;
    default:
      *a3 = a2;
      uint64_t result = (void *)sub_1BFF65DE8(a2);
      break;
  }
  return result;
}

void *sub_1C027987C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1BFF67D70(a1, a2, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C027CE3C, (uint64_t (*)(uint64_t, uint64_t))sub_1C027A3C0, (void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C02823A0, a3);
}

void *sub_1C0279900@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  switch(a2 >> 61)
  {
    case 2uLL:
      unint64_t v8 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v7 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v9 = swift_allocObject();
      uint64_t v10 = sub_1C027D178(a1, v8, &v23);
      if (v3) {
        goto LABEL_9;
      }
      uint64_t v11 = v23;
      long long v12 = *(_OWORD *)(a1 + 48);
      v21[2] = *(_OWORD *)(a1 + 32);
      v21[3] = v12;
      void v21[4] = *(_OWORD *)(a1 + 64);
      uint64_t v22 = *(void *)(a1 + 80);
      long long v13 = *(_OWORD *)(a1 + 16);
      v21[0] = *(_OWORD *)a1;
      v21[1] = v13;
      MEMORY[0x1F4188790](v10);
      void v20[2] = v21;
      uint64_t result = (void *)sub_1C0181D3C((void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C02818B8, (uint64_t)v20, v7);
      *(void *)(v9 + 16) = v11;
      *(void *)(v9 + 24) = result;
      *a3 = v9 | 0x4000000000000000;
      break;
    case 3uLL:
      uint64_t v14 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = swift_allocObject();
      uint64_t result = sub_1C027ACBC((void *)(v15 + 16), a1, v14);
      if (v3) {
        goto LABEL_9;
      }
      *a3 = v15 | 0x6000000000000000;
      break;
    case 4uLL:
      uint64_t v16 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v18 = *(unsigned char *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v19 = swift_allocObject();
      uint64_t result = sub_1C027ACBC(v21, a1, v16);
      if (v3)
      {
LABEL_9:
        uint64_t result = (void *)swift_deallocUninitializedObject();
      }
      else
      {
        *(void *)(v19 + 16) = *(void *)&v21[0];
        *(void *)(v19 + 24) = v17;
        *(unsigned char *)(v19 + 32) = v18;
        *a3 = v19 | 0x8000000000000000;
      }
      break;
    default:
      *a3 = a2;
      uint64_t result = (void *)sub_1BFF65DE8(a2);
      break;
  }
  return result;
}

uint64_t sub_1C0279B34@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  switch(a2 >> 60)
  {
    case 3uLL:
      uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v10 = swift_allocObject();
      sub_1C0279B34(&v93, a1, v9);
      if (v3)
      {
        uint64_t result = swift_deallocUninitializedObject();
      }
      else
      {
        uint64_t result = (uint64_t)sub_1C0279B34(v100, a1, v8);
        uint64_t v20 = v100[0];
        *(void *)(v10 + 16) = v93;
        *(void *)(v10 + 24) = v20;
        *a3 = v10 | 0x3000000000000000;
      }
      break;
    case 4uLL:
      uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1C0279B34(v100, a1, v11);
      if (!v4)
      {
        swift_release();
        sub_1C0279B34(&v93, a1, v100[0]);
        uint64_t v23 = swift_release();
        uint64_t v99 = *(void *)(a1 + 96);
        uint64_t v24 = v93;
        long long v25 = *(_OWORD *)(a1 + 80);
        long long v97 = *(_OWORD *)(a1 + 64);
        long long v98 = v25;
        long long v26 = *(_OWORD *)(a1 + 16);
        long long v93 = *(_OWORD *)a1;
        long long v94 = v26;
        long long v27 = *(_OWORD *)(a1 + 48);
        long long v95 = *(_OWORD *)(a1 + 32);
        long long v96 = v27;
        MEMORY[0x1F4188790](v23);
        __n128 v85 = &v93;
        uint64_t v28 = sub_1C0181D3C((void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C0282704, (uint64_t)v84, v12);
        uint64_t v99 = *(void *)(a1 + 96);
        long long v29 = *(_OWORD *)(a1 + 80);
        long long v97 = *(_OWORD *)(a1 + 64);
        long long v98 = v29;
        long long v30 = *(_OWORD *)(a1 + 16);
        long long v93 = *(_OWORD *)a1;
        long long v94 = v30;
        long long v31 = *(_OWORD *)(a1 + 48);
        long long v95 = *(_OWORD *)(a1 + 32);
        long long v96 = v31;
        MEMORY[0x1F4188790](v28);
        __n128 v85 = &v93;
        uint64_t v32 = sub_1C0181D3C((void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C0282704, (uint64_t)v84, v28);
        uint64_t v89 = v12;
        uint64_t v86 = (void *)v32;
        uint64_t v33 = swift_bridgeObjectRelease();
        *(void *)&long long v93 = v24;
        Class v34 = FormatColor.color.getter(v33);
        id v35 = self;
        uint64_t v36 = v24;
        id v37 = objc_msgSend(v35, sel_traitCollectionWithUserInterfaceStyle_, 1);
        id v38 = [(objc_class *)v34 resolvedColorWithTraitCollection:v37];

        uint64_t v88 = v36;
        *(void *)&long long v93 = v36;
        Class v40 = FormatColor.color.getter(v39);
        id v41 = objc_msgSend(v35, sel_traitCollectionWithUserInterfaceStyle_, 2);
        id v92 = [(objc_class *)v40 resolvedColorWithTraitCollection:v41];

        uint64_t v42 = v86;
        uint64_t v43 = v86[2];
        id v87 = v38;
        uint64_t v91 = v35;
        uint64_t v90 = v11 & 0xFFFFFFFFFFFFFFFLL;
        if (v43)
        {
          id v44 = v38;
          swift_bridgeObjectRetain();
          uint64_t v45 = v42;
          uint64_t v46 = 0;
          do
          {
            uint64_t v47 = v43;
            unsigned int v48 = v44;
            unint64_t v49 = v45[v46++ + 4];
            sub_1BFF65DE8(v49);
            id v44 = (id)sub_1C0277D98(v44, a1, v49);
            sub_1BFF65E20(v49);

            uint64_t v43 = v47;
          }
          while (v47 != v46);
          swift_bridgeObjectRelease();
          uint64_t v42 = v45;
          id v35 = v91;
        }
        else
        {
          id v44 = v38;
        }
        id v50 = objc_msgSend(v35, sel_traitCollectionWithUserInterfaceStyle_, 1);
        uint64_t v86 = objc_msgSend(v44, sel_resolvedColorWithTraitCollection_, v50);

        uint64_t v51 = v42[2];
        id v52 = v92;
        if (v51)
        {
          swift_bridgeObjectRetain();
          id v53 = v52;
          char v54 = v42;
          uint64_t v55 = 0;
          do
          {
            uint64_t v56 = v53;
            uint64_t v57 = v51;
            unint64_t v58 = v54[v55++ + 4];
            sub_1BFF65DE8(v58);
            id v53 = (id)sub_1C0277D98(v53, a1, v58);
            unint64_t v59 = v58;
            uint64_t v51 = v57;
            sub_1BFF65E20(v59);
          }
          while (v57 != v55);
          swift_bridgeObjectRelease();
          uint64_t v42 = v54;
          id v35 = v91;
        }
        else
        {
          id v53 = v92;
        }
        id v60 = objc_msgSend(v35, sel_traitCollectionWithUserInterfaceStyle_, 2);
        id v61 = objc_msgSend(v53, sel_resolvedColorWithTraitCollection_, v60);

        uint64_t v62 = v86;
        sub_1C151F9DC();
        double v64 = v63;
        double v66 = v65;
        double v68 = v67;
        uint64_t v70 = v69;
        uint64_t v71 = swift_allocObject();
        *(double *)(v71 + 16) = v64 * 255.0;
        *(double *)(v71 + 24) = v66 * 255.0;
        *(double *)(v71 + 32) = v68 * 255.0;
        *(void *)(v71 + 40) = v70;
        *(unsigned char *)(v71 + 48) = 0;
        uint64_t v72 = v71 | 0x6000000000000000;
        sub_1C151F9DC();
        double v74 = v73;
        double v76 = v75;
        double v78 = v77;
        uint64_t v80 = v79;
        uint64_t v81 = swift_allocObject();
        *(double *)(v81 + 16) = v74 * 255.0;
        *(double *)(v81 + 24) = v76 * 255.0;
        *(double *)(v81 + 32) = v78 * 255.0;
        *(void *)(v81 + 40) = v80;
        *(unsigned char *)(v81 + 48) = 0;
        swift_bridgeObjectRelease();
        swift_release();

        uint64_t v82 = swift_allocObject();
        *(void *)(v82 + 16) = v72;
        *(void *)(v82 + 24) = v81 | 0x6000000000000000;
        uint64_t v83 = v82 | 0x3000000000000000;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v88;
        *(void *)(result + 24) = v42;
        *(void *)(result + 32) = v83;
        unint64_t v22 = 0xA000000000000000;
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_release_n();
      break;
    case 7uLL:
      uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      char v16 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      sub_1BFF67F78(v14, v13, v15, v16);
      sub_1C027F2A4(a1, v14, v13, v15, v16, v100);
      if (!v3)
      {
        sub_1C0279B34(&v93, a1, v100[0]);
        swift_release();
        uint64_t v21 = v93;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v14;
        *(void *)(result + 24) = v13;
        *(void *)(result + 32) = v15;
        *(unsigned char *)(result + 40) = v16;
        *(void *)(result + 48) = v21;
        unint64_t v22 = 0x9000000000000000;
        goto LABEL_15;
      }
      uint64_t result = sub_1BFF05CCC(v14, v13, v15, v16);
      break;
    case 8uLL:
      uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1C0270A44(v18, v17, v100);
      sub_1C0279B34(&v93, a1, v100[0]);
      if (v3)
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
        uint64_t result = swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t v19 = v93;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v18;
        *(void *)(result + 24) = v17;
        *(void *)(result + 32) = v19;
        unint64_t v22 = 0xB000000000000000;
LABEL_15:
        *a3 = result | v22;
      }
      break;
    default:
      *a3 = a2;
      uint64_t result = swift_retain();
      break;
  }
  return result;
}

uint64_t sub_1C027A3C0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BFF64114(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C027A3C0, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C027F788, (void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C02823A0, (void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C02823A0, sub_1C0278390, a3);
}

uint64_t sub_1C027A474@<X0>(void *a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  switch(a2 >> 60)
  {
    case 3uLL:
      uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v10 = swift_allocObject();
      sub_1C027A474(&v86, a1, v9);
      if (v3)
      {
        uint64_t result = swift_deallocUninitializedObject();
      }
      else
      {
        uint64_t result = (uint64_t)sub_1C027A474(&v85, a1, v8);
        uint64_t v20 = v85;
        *(void *)(v10 + 16) = v86;
        *(void *)(v10 + 24) = v20;
        *a3 = v10 | 0x3000000000000000;
      }
      break;
    case 4uLL:
      uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1C027A474(&v85, a1, v11);
      if (!v4)
      {
        swift_release();
        sub_1C027A474(&v86, a1, v85);
        uint64_t v23 = swift_release();
        uint64_t v24 = v86;
        MEMORY[0x1F4188790](v23);
        double v77 = a1;
        uint64_t v25 = sub_1C0181D3C((void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C02824C4, (uint64_t)v76, v12);
        MEMORY[0x1F4188790](v25);
        double v77 = a1;
        uint64_t v26 = sub_1C0181D3C((void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C02824C4, (uint64_t)v76, v25);
        uint64_t v79 = v12;
        uint64_t v27 = swift_bridgeObjectRelease();
        uint64_t v86 = v24;
        Class v28 = FormatColor.color.getter(v27);
        long long v29 = self;
        uint64_t v30 = v26;
        uint64_t v31 = v24;
        id v32 = objc_msgSend(v29, sel_traitCollectionWithUserInterfaceStyle_, 1);
        id v83 = [(objc_class *)v28 resolvedColorWithTraitCollection:v32];

        uint64_t v80 = v31;
        uint64_t v86 = v31;
        uint64_t v33 = v30;
        Class v35 = FormatColor.color.getter(v34);
        id v82 = v29;
        id v36 = objc_msgSend(v29, sel_traitCollectionWithUserInterfaceStyle_, 2);
        id v37 = [(objc_class *)v35 resolvedColorWithTraitCollection:v36];

        uint64_t v38 = *(void *)(v33 + 16);
        id v81 = v37;
        if (v38)
        {
          uint64_t v84 = v11 & 0xFFFFFFFFFFFFFFFLL;
          id v39 = v83;
          swift_bridgeObjectRetain();
          uint64_t v40 = v33;
          uint64_t v41 = 0;
          do
          {
            uint64_t v42 = v39;
            uint64_t v43 = v38;
            unint64_t v44 = *(void *)(v40 + 8 * v41++ + 32);
            sub_1BFF65DE8(v44);
            id v39 = (id)sub_1C027895C(v39, (uint64_t)a1, v44);
            unint64_t v45 = v44;
            uint64_t v38 = v43;
            sub_1BFF65E20(v45);
          }
          while (v43 != v41);
          swift_bridgeObjectRelease();
          uint64_t v33 = v40;
          id v37 = v81;
        }
        else
        {
          id v39 = v83;
        }
        id v46 = objc_msgSend(v82, sel_traitCollectionWithUserInterfaceStyle_, 1);
        id v78 = objc_msgSend(v39, sel_resolvedColorWithTraitCollection_, v46);

        uint64_t v47 = *(void *)(v33 + 16);
        if (v47)
        {
          swift_bridgeObjectRetain();
          id v48 = v37;
          uint64_t v84 = v33;
          uint64_t v49 = 0;
          do
          {
            uint64_t v50 = v47;
            uint64_t v51 = v48;
            unint64_t v52 = *(void *)(v84 + 8 * v49++ + 32);
            sub_1BFF65DE8(v52);
            id v48 = (id)sub_1C027895C(v48, (uint64_t)a1, v52);
            sub_1BFF65E20(v52);

            uint64_t v47 = v50;
          }
          while (v50 != v49);
          uint64_t v33 = v84;
          swift_bridgeObjectRelease();
          id v37 = v81;
        }
        else
        {
          id v48 = v37;
        }
        id v53 = objc_msgSend(v82, sel_traitCollectionWithUserInterfaceStyle_, 2);
        id v54 = objc_msgSend(v48, sel_resolvedColorWithTraitCollection_, v53);

        uint64_t v55 = v78;
        sub_1C151F9DC();
        double v57 = v56;
        double v59 = v58;
        double v61 = v60;
        uint64_t v63 = v62;
        uint64_t v64 = swift_allocObject();
        *(double *)(v64 + 16) = v57 * 255.0;
        *(double *)(v64 + 24) = v59 * 255.0;
        *(double *)(v64 + 32) = v61 * 255.0;
        *(void *)(v64 + 40) = v63;
        *(unsigned char *)(v64 + 48) = 0;
        uint64_t v84 = v64 | 0x6000000000000000;
        sub_1C151F9DC();
        double v66 = v65;
        double v68 = v67;
        double v70 = v69;
        uint64_t v72 = v71;
        uint64_t v73 = swift_allocObject();
        *(double *)(v73 + 16) = v66 * 255.0;
        *(double *)(v73 + 24) = v68 * 255.0;
        *(double *)(v73 + 32) = v70 * 255.0;
        *(void *)(v73 + 40) = v72;
        *(unsigned char *)(v73 + 48) = 0;
        swift_bridgeObjectRelease();
        swift_release();

        uint64_t v74 = swift_allocObject();
        *(void *)(v74 + 16) = v84;
        *(void *)(v74 + 24) = v73 | 0x6000000000000000;
        uint64_t v75 = v74 | 0x3000000000000000;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v80;
        *(void *)(result + 24) = v33;
        *(void *)(result + 32) = v75;
        unint64_t v22 = 0xA000000000000000;
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_release_n();
      break;
    case 7uLL:
      uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      char v16 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      sub_1BFF67F78(v14, v13, v15, v16);
      sub_1C027FE64(a1, v14, v13, v15, v16, &v85);
      if (!v3)
      {
        sub_1C027A474(&v86, a1, v85);
        swift_release();
        uint64_t v21 = v86;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v14;
        *(void *)(result + 24) = v13;
        *(void *)(result + 32) = v15;
        *(unsigned char *)(result + 40) = v16;
        *(void *)(result + 48) = v21;
        unint64_t v22 = 0x9000000000000000;
        goto LABEL_15;
      }
      uint64_t result = sub_1BFF05CCC(v14, v13, v15, v16);
      break;
    case 8uLL:
      uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1C027367C(v18, v17, &v85);
      sub_1C027A474(&v86, a1, v85);
      if (v3)
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
        uint64_t result = swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t v19 = v86;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v18;
        *(void *)(result + 24) = v17;
        *(void *)(result + 32) = v19;
        unint64_t v22 = 0xB000000000000000;
LABEL_15:
        *a3 = result | v22;
      }
      break;
    default:
      *a3 = a2;
      uint64_t result = swift_retain();
      break;
  }
  return result;
}

uint64_t sub_1C027ACBC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = v3;
  switch(a2 >> 60)
  {
    case 3uLL:
      uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v10 = swift_allocObject();
      sub_1C027ACBC(&v90, a1, v9);
      if (v3)
      {
        uint64_t result = swift_deallocUninitializedObject();
      }
      else
      {
        uint64_t result = (uint64_t)sub_1C027ACBC(v96, a1, v8);
        uint64_t v20 = v96[0];
        *(void *)(v10 + 16) = v90;
        *(void *)(v10 + 24) = v20;
        *a3 = v10 | 0x3000000000000000;
      }
      break;
    case 4uLL:
      uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1C027ACBC(v96, a1, v11);
      if (!v4)
      {
        swift_release();
        sub_1C027ACBC(&v90, a1, v96[0]);
        uint64_t v23 = swift_release();
        uint64_t v24 = v90;
        long long v25 = *(_OWORD *)(a1 + 48);
        long long v92 = *(_OWORD *)(a1 + 32);
        long long v93 = v25;
        long long v94 = *(_OWORD *)(a1 + 64);
        uint64_t v95 = *(void *)(a1 + 80);
        long long v26 = *(_OWORD *)(a1 + 16);
        long long v90 = *(_OWORD *)a1;
        long long v91 = v26;
        MEMORY[0x1F4188790](v23);
        id v82 = &v90;
        uint64_t v27 = sub_1C0181D3C((void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C02818B8, (uint64_t)v81, v12);
        long long v28 = *(_OWORD *)(a1 + 48);
        long long v92 = *(_OWORD *)(a1 + 32);
        long long v93 = v28;
        long long v94 = *(_OWORD *)(a1 + 64);
        uint64_t v95 = *(void *)(a1 + 80);
        long long v29 = *(_OWORD *)(a1 + 16);
        long long v90 = *(_OWORD *)a1;
        long long v91 = v29;
        MEMORY[0x1F4188790](v27);
        id v82 = &v90;
        uint64_t v30 = sub_1C0181D3C((void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C02818B8, (uint64_t)v81, v27);
        uint64_t v84 = v12;
        uint64_t v31 = swift_bridgeObjectRelease();
        *(void *)&long long v90 = v24;
        Class v32 = FormatColor.color.getter(v31);
        uint64_t v33 = self;
        uint64_t v34 = v30;
        uint64_t v35 = v24;
        id v36 = objc_msgSend(v33, sel_traitCollectionWithUserInterfaceStyle_, 1);
        id v89 = [(objc_class *)v32 resolvedColorWithTraitCollection:v36];

        uint64_t v85 = v35;
        *(void *)&long long v90 = v35;
        uint64_t v37 = v34;
        Class v39 = FormatColor.color.getter(v38);
        id v88 = v33;
        id v40 = objc_msgSend(v33, sel_traitCollectionWithUserInterfaceStyle_, 2);
        id v41 = [(objc_class *)v39 resolvedColorWithTraitCollection:v40];

        uint64_t v42 = *(void *)(v37 + 16);
        uint64_t v86 = v11 & 0xFFFFFFFFFFFFFFFLL;
        id v87 = v41;
        if (v42)
        {
          id v43 = v89;
          swift_bridgeObjectRetain();
          uint64_t v44 = v37;
          uint64_t v45 = 0;
          do
          {
            id v46 = v43;
            uint64_t v47 = v42;
            unint64_t v48 = *(void *)(v44 + 8 * v45++ + 32);
            sub_1BFF65DE8(v48);
            id v43 = (id)sub_1C0279000(v43, a1, v48);
            unint64_t v49 = v48;
            uint64_t v42 = v47;
            sub_1BFF65E20(v49);
          }
          while (v47 != v45);
          swift_bridgeObjectRelease();
          uint64_t v37 = v44;
          id v41 = v87;
        }
        else
        {
          id v43 = v89;
        }
        id v50 = objc_msgSend(v88, sel_traitCollectionWithUserInterfaceStyle_, 1);
        id v83 = objc_msgSend(v43, sel_resolvedColorWithTraitCollection_, v50);

        uint64_t v51 = *(void *)(v37 + 16);
        if (v51)
        {
          swift_bridgeObjectRetain();
          id v52 = v41;
          uint64_t v53 = v37;
          uint64_t v54 = 0;
          do
          {
            uint64_t v55 = v51;
            double v56 = v52;
            unint64_t v57 = *(void *)(v53 + 8 * v54++ + 32);
            sub_1BFF65DE8(v57);
            id v52 = (id)sub_1C0279000(v52, a1, v57);
            sub_1BFF65E20(v57);

            uint64_t v51 = v55;
          }
          while (v55 != v54);
          swift_bridgeObjectRelease();
          uint64_t v37 = v53;
          id v41 = v87;
        }
        else
        {
          id v52 = v41;
        }
        id v58 = objc_msgSend(v88, sel_traitCollectionWithUserInterfaceStyle_, 2);
        id v59 = objc_msgSend(v52, sel_resolvedColorWithTraitCollection_, v58);

        double v60 = v83;
        sub_1C151F9DC();
        double v62 = v61;
        double v64 = v63;
        double v66 = v65;
        uint64_t v68 = v67;
        uint64_t v69 = swift_allocObject();
        *(double *)(v69 + 16) = v62 * 255.0;
        *(double *)(v69 + 24) = v64 * 255.0;
        *(double *)(v69 + 32) = v66 * 255.0;
        *(void *)(v69 + 40) = v68;
        *(unsigned char *)(v69 + 48) = 0;
        id v88 = (id)(v69 | 0x6000000000000000);
        sub_1C151F9DC();
        double v71 = v70;
        double v73 = v72;
        double v75 = v74;
        uint64_t v77 = v76;
        uint64_t v78 = swift_allocObject();
        *(double *)(v78 + 16) = v71 * 255.0;
        *(double *)(v78 + 24) = v73 * 255.0;
        *(double *)(v78 + 32) = v75 * 255.0;
        *(void *)(v78 + 40) = v77;
        *(unsigned char *)(v78 + 48) = 0;
        swift_bridgeObjectRelease();
        swift_release();

        uint64_t v79 = swift_allocObject();
        *(void *)(v79 + 16) = v88;
        *(void *)(v79 + 24) = v78 | 0x6000000000000000;
        uint64_t v80 = v79 | 0x3000000000000000;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v85;
        *(void *)(result + 24) = v37;
        *(void *)(result + 32) = v80;
        unint64_t v22 = 0xA000000000000000;
        goto LABEL_15;
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_release_n();
      break;
    case 7uLL:
      uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      char v16 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      sub_1BFF67F78(v14, v13, v15, v16);
      sub_1C02801D4((long long *)a1, v14, v13, v15, v16, v96);
      if (!v3)
      {
        sub_1C027ACBC(&v90, a1, v96[0]);
        swift_release();
        uint64_t v21 = v90;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v14;
        *(void *)(result + 24) = v13;
        *(void *)(result + 32) = v15;
        *(unsigned char *)(result + 40) = v16;
        *(void *)(result + 48) = v21;
        unint64_t v22 = 0x9000000000000000;
        goto LABEL_15;
      }
      uint64_t result = sub_1BFF05CCC(v14, v13, v15, v16);
      break;
    case 8uLL:
      uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1C0277C3C(a1, v18, v17, v96);
      sub_1C027ACBC(&v90, a1, v96[0]);
      if (v3)
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
        uint64_t result = swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t v19 = v90;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v18;
        *(void *)(result + 24) = v17;
        *(void *)(result + 32) = v19;
        unint64_t v22 = 0xB000000000000000;
LABEL_15:
        *a3 = result | v22;
      }
      break;
    default:
      *a3 = a2;
      uint64_t result = swift_retain();
      break;
  }
  return result;
}

uint64_t FormatSymbolImage.name.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return sub_1BFDEB94C(v2, v3, v4, v5);
}

uint64_t FormatSymbolImage.config.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(unsigned __int16 *)(v1 + 48);
  *(_WORD *)(a1 + 16) = v4;
  return sub_1BFF62358(v2, v3, v4);
}

uint64_t FormatSymbolImage.fill.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BFDEB8B4(v2);
}

uint64_t FormatSymbolImage.internal.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 80);
  char v4 = *(unsigned char *)(v1 + 88);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_1BFE94AB4(v2, v3, v4);
}

uint64_t sub_1C027B57C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = *(void *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 80);
  char v8 = *(unsigned char *)(a2 + 88);
  sub_1BFE94AB4(*(void *)a1, v4, v5);
  uint64_t result = sub_1BFE94AD4(v6, v7, v8);
  *(void *)(a2 + 72) = v3;
  *(void *)(a2 + 80) = v4;
  *(unsigned char *)(a2 + 88) = v5;
  return result;
}

uint64_t FormatSymbolImage.internal.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_1BFE94AD4(*(void *)(v1 + 72), *(void *)(v1 + 80), *(unsigned char *)(v1 + 88));
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = v3;
  *(unsigned char *)(v1 + 88) = v4;
  return result;
}

uint64_t (*FormatSymbolImage.internal.modify())(void)
{
  return nullsub_1;
}

unint64_t FormatSymbolImage.color.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 96);
  *a1 = v2;
  return sub_1C00F5B0C(v2);
}

id FormatSymbolImageColor.symbolConfiguration(context:)(uint64_t a1)
{
  unint64_t v3 = *v1;
  uint64_t v4 = v2;
  switch(v3 >> 62)
  {
    case 1uLL:
      unint64_t v8 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      uint64_t v9 = sub_1BFF64090(a1, v8, (uint64_t *)&v18);
      if (v4)
      {
        swift_release();
        goto LABEL_7;
      }
      uint64_t v17 = v18;
      Class v15 = FormatColor.color.getter(v9);
      swift_release();
      id v16 = objc_msgSend(self, sel_configurationWithHierarchicalColor_, v15, v17);
      swift_release();

      id result = v16;
      break;
    case 2uLL:
      unint64_t v10 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFF58F10(v10);
      swift_bridgeObjectRetain();
      sub_1C0272190(v10, v11, (void (*)(uint64_t))sub_1BFF58F10, (void (*)(void))sub_1BFF58F10, (void (*)(uint64_t))sub_1BFF07CD8, (void (*)(uint64_t))sub_1BFF07CD8, (uint64_t *)&v18);
      unint64_t v12 = v18;
      unint64_t v3 = FormatSymbolImageColor.symbolConfiguration(context:)(a1);
      sub_1BFF07CD8(v12);
      sub_1BFF07CD8(v10);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3uLL:
      uint64_t v14 = self;
      if (v3 == 0xC000000000000000) {
        id result = objc_msgSend(v14, sel_configurationPreferringMulticolor);
      }
      else {
        id result = objc_msgSend(v14, sel_configurationPreferringMonochrome);
      }
      break;
    default:
      uint64_t v6 = *(void *)(v3 + 16);
      swift_retain();
      unint64_t v3 = sub_1C0280AF4(v6, a1);
      swift_release();
      if (!v4)
      {
        sub_1BFF6B690();
        uint64_t v7 = (void *)sub_1C151EBAC();
        swift_bridgeObjectRelease();
        unint64_t v3 = (unint64_t)objc_msgSend(self, sel_configurationWithPaletteColors_, v7);
      }
LABEL_7:
      id result = (id)v3;
      break;
  }
  return result;
}

uint64_t FormatSymbolImageFill.fillColor.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatSymbolImageFill.symbolColor.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_retain();
}

uint64_t sub_1C027B8F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatSymbolImageFill.init(from:)(a1, a2);
}

uint64_t sub_1C027B908(void *a1)
{
  return FormatSymbolImageFill.encode(to:)(a1);
}

uint64_t static FormatSymbolImageColor.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  switch(*a1 >> 62)
  {
    case 1uLL:
      if (v3 >> 62 != 1) {
        goto LABEL_17;
      }
      unint64_t v7 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      v17[0] = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      v16[0] = v7;
      sub_1BFF58F10(v3);
      sub_1BFF58F10(v2);
      char v6 = static FormatColor.== infix(_:_:)(v17, v16);
      goto LABEL_6;
    case 2uLL:
      if (v3 >> 62 != 2) {
        goto LABEL_17;
      }
      uint64_t v9 = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      unint64_t v12 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v11 = *(void *)((v3 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
      v17[0] = *(void *)((v2 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v10 = v17[0];
      v17[1] = v9;
      v16[0] = v12;
      v16[1] = v11;
      sub_1BFF58F10(v3);
      sub_1BFF58F10(v2);
      sub_1BFF58F10(v17[0]);
      swift_bridgeObjectRetain();
      sub_1BFF58F10(v12);
      swift_bridgeObjectRetain();
      if ((static FormatSymbolImageColor.== infix(_:_:)(v17, v16) & 1) == 0)
      {
        sub_1BFF07CD8(v12);
        swift_bridgeObjectRelease();
        sub_1BFF07CD8(v10);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v13 = sub_1C00F06C8(v9, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF07CD8(v12);
      swift_bridgeObjectRelease();
      sub_1BFF07CD8(v10);
      swift_bridgeObjectRelease();
      sub_1BFF07CD8(v2);
      sub_1BFF07CD8(v3);
      if ((v13 & 1) == 0) {
        goto LABEL_19;
      }
      char v8 = 1;
      return v8 & 1;
    case 3uLL:
      if (v2 == 0xC000000000000000)
      {
        if (v3 == 0xC000000000000000)
        {
          sub_1BFF07CD8(0xC000000000000000);
          unint64_t v14 = 0xC000000000000000;
LABEL_16:
          sub_1BFF07CD8(v14);
          char v8 = 1;
          return v8 & 1;
        }
      }
      else if (v3 == 0xC000000000000008)
      {
        sub_1BFF07CD8(0xC000000000000008);
        unint64_t v14 = 0xC000000000000008;
        goto LABEL_16;
      }
LABEL_17:
      sub_1BFF58F10(*a2);
      sub_1BFF58F10(v2);
LABEL_18:
      sub_1BFF07CD8(v2);
      sub_1BFF07CD8(v3);
LABEL_19:
      char v8 = 0;
      return v8 & 1;
    default:
      if (v3 >> 62) {
        goto LABEL_17;
      }
      uint64_t v4 = *(void *)(v2 + 16);
      uint64_t v5 = *(void *)(v3 + 16);
      sub_1BFF58F10(*a2);
      sub_1BFF58F10(v2);
      char v6 = sub_1C00F0618(v4, v5);
LABEL_6:
      char v8 = v6;
      sub_1BFF07CD8(v2);
      sub_1BFF07CD8(v3);
      return v8 & 1;
  }
}

uint64_t sub_1C027BB94@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatSymbolImageColor.init(from:)(a1, a2);
}

uint64_t sub_1C027BBAC(void *a1)
{
  return FormatSymbolImageColor.encode(to:)(a1);
}

uint64_t sub_1C027BBC8(objc_class *a1, uint64_t a2, unint64_t a3)
{
  return sub_1C027BFE8(a1, a2, a3, (uint64_t (*)(Class, uint64_t, uint64_t))sub_1C027BBC8, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1BFF64090) & 1;
}

uint64_t sub_1C027BC0C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = v4;
  switch(a3 >> 61)
  {
    case 1uLL:
      uint64_t v11 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v3 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      char v12 = sub_1C027BC0C(a1, a2, v11);
      if (v5) {
        goto LABEL_6;
      }
      char v20 = v12;
      swift_release();
      if ((v20 & 1) == 0) {
        goto LABEL_18;
      }
      swift_release();
      swift_release();
      LOBYTE(v3) = 1;
      break;
    case 2uLL:
      uint64_t v13 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v3) = v13;
      swift_retain();
      char v14 = sub_1C027BC0C(a1, a2, v13);
      if (v5)
      {
        swift_release();
      }
      else
      {
        char v21 = v14;
        swift_release();
        LOBYTE(v3) = v21 ^ 1;
      }
      break;
    case 3uLL:
      uint64_t v15 = *(unsigned __int8 *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x11);
      double v16 = *(double *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v26) = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      double v17 = sub_1BFDF2A08();
      switch(v15)
      {
        case 1:
        case 7:
          LOBYTE(v3) = v17 != v16;
          break;
        case 2:
        case 8:
          LOBYTE(v3) = v17 < v16;
          break;
        case 3:
        case 9:
          BOOL v24 = v17 > v16;
          goto LABEL_24;
        case 4:
        case 10:
          LOBYTE(v3) = v16 < v17;
          break;
        case 5:
        case 11:
          BOOL v24 = v16 > v17;
LABEL_24:
          LOBYTE(v3) = !v24;
          break;
        default:
          LOBYTE(v3) = v17 == v16;
          break;
      }
      break;
    case 4uLL:
      uint64_t v18 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v19 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      sub_1C0279B34(&v26, a2, v18);
      if (v5)
      {
        swift_release();
        goto LABEL_13;
      }
      swift_release();
      uint64_t v22 = swift_retain();
      Class v23 = FormatColor.color.getter(v22);
      LOBYTE(v3) = sub_1C027BC0C(v23, a2, v19);
      swift_release_n();
      swift_release();

      swift_release();
      break;
    default:
      uint64_t v8 = *(void *)(a3 + 16);
      uint64_t v3 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain_n();
      char v9 = sub_1C027BC0C(a1, a2, v8);
      if (v5)
      {
LABEL_6:
        swift_release();
LABEL_13:
        swift_release_n();
      }
      else
      {
        char v10 = v9;
        swift_release();
        if (v10)
        {
LABEL_18:
          sub_1C003DFA4(a2);
          swift_retain();
          LOBYTE(v3) = sub_1C027BC0C(a1, a2, v3);
          swift_release();
          sub_1C003DF0C(a2);
          swift_release();
          swift_release();
        }
        else
        {
          swift_release();
          swift_release();
          LOBYTE(v3) = 0;
        }
      }
      break;
  }
  return v3 & 1;
}

uint64_t sub_1C027BFA4(objc_class *a1, uint64_t a2, unint64_t a3)
{
  return sub_1C027BFE8(a1, a2, a3, (uint64_t (*)(Class, uint64_t, uint64_t))sub_1C027BFA4, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C027A3C0) & 1;
}

uint64_t sub_1C027BFE8(objc_class *a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(Class, uint64_t, uint64_t), void (*a5)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  void (*v10)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  Class v26;
  BOOL v27;
  uint64_t v29;

  uint64_t v7 = v5;
  switch(a3 >> 61)
  {
    case 1uLL:
      char v14 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      char v10 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      uint64_t v15 = a4(a1, a2, v14);
      if (v7) {
        goto LABEL_6;
      }
      Class v23 = v15;
      swift_release();
      if ((v23 & 1) == 0) {
        goto LABEL_18;
      }
      swift_release();
      swift_release();
      LOBYTE(v10) = 1;
      break;
    case 2uLL:
      double v16 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(v10) = v16;
      swift_retain();
      double v17 = a4(a1, a2, v16);
      if (v7)
      {
        swift_release();
      }
      else
      {
        BOOL v24 = v17;
        swift_release();
        LOBYTE(v10) = v24 ^ 1;
      }
      break;
    case 3uLL:
      uint64_t v18 = *(unsigned __int8 *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x11);
      uint64_t v19 = *(double *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v29) = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      char v20 = sub_1BFDF2A08();
      switch(v18)
      {
        case 1:
        case 7:
          LOBYTE(v10) = v20 != v19;
          break;
        case 2:
        case 8:
          LOBYTE(v10) = v20 < v19;
          break;
        case 3:
        case 9:
          uint64_t v27 = v20 > v19;
          goto LABEL_24;
        case 4:
        case 10:
          LOBYTE(v10) = v19 < v20;
          break;
        case 5:
        case 11:
          uint64_t v27 = v19 > v20;
LABEL_24:
          LOBYTE(v10) = !v27;
          break;
        default:
          LOBYTE(v10) = v20 == v19;
          break;
      }
      break;
    case 4uLL:
      char v10 = a5;
      char v21 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v22 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      v10(&v29, a2, v21);
      if (v7)
      {
        swift_release();
        goto LABEL_13;
      }
      swift_release();
      long long v25 = swift_retain();
      uint64_t v26 = FormatColor.color.getter(v25);
      LOBYTE(v10) = a4(v26, a2, v22);
      swift_release_n();
      swift_release();

      swift_release();
      break;
    default:
      uint64_t v11 = *(void *)(a3 + 16);
      char v10 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 24);
      swift_retain();
      swift_retain_n();
      char v12 = a4(a1, a2, v11);
      if (v7)
      {
LABEL_6:
        swift_release();
LABEL_13:
        swift_release_n();
      }
      else
      {
        uint64_t v13 = v12;
        swift_release();
        if (v13)
        {
LABEL_18:
          swift_retain();
          swift_retain();
          LOBYTE(v10) = a4(a1, a2, (uint64_t)v10);
          swift_release();
          swift_release();
          swift_release_n();
        }
        else
        {
          swift_release();
          swift_release();
          LOBYTE(v10) = 0;
        }
      }
      break;
  }
  return v10 & 1;
}

uint64_t sub_1C027C3AC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v32 - v12;
  switch(a3 >> 61)
  {
    case 1uLL:
      uint64_t v16 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      a3 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      char v17 = sub_1C027C3AC(a1, a2, v16);
      if (v4) {
        goto LABEL_11;
      }
      char v26 = v17;
      swift_release();
      sub_1C0282524(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
      if (v26)
      {
        LOBYTE(a3) = 1;
      }
      else
      {
        swift_retain();
        LOBYTE(a3) = sub_1C027C3AC(a1, v10, a3);
        swift_release();
      }
      sub_1BFF810A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
      goto LABEL_22;
    case 2uLL:
      uint64_t v18 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      LOBYTE(a3) = v18;
      swift_retain();
      char v19 = sub_1C027C3AC(a1, a2, v18);
      if (v4) {
        goto LABEL_31;
      }
      char v27 = v19;
      swift_release();
      LOBYTE(a3) = v27 ^ 1;
      return a3 & 1;
    case 3uLL:
      uint64_t v20 = *(unsigned __int8 *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x11);
      double v21 = *(double *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      LOBYTE(v33) = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      double v22 = sub_1BFDF2A08();
      switch(v20)
      {
        case 1:
        case 7:
          LOBYTE(a3) = v22 != v21;
          break;
        case 2:
        case 8:
          LOBYTE(a3) = v22 < v21;
          break;
        case 3:
        case 9:
          BOOL v30 = v22 > v21;
          goto LABEL_28;
        case 4:
        case 10:
          LOBYTE(a3) = v21 < v22;
          break;
        case 5:
        case 11:
          BOOL v30 = v21 > v22;
LABEL_28:
          LOBYTE(a3) = !v30;
          break;
        default:
          LOBYTE(a3) = v22 == v21;
          break;
      }
      return a3 & 1;
    case 4uLL:
      uint64_t v23 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      sub_1C027A474(&v33, a2, v23);
      if (v4) {
        goto LABEL_11;
      }
      swift_release();
      uint64_t v28 = swift_retain();
      Class v29 = FormatColor.color.getter(v28);
      LOBYTE(a3) = sub_1C027C3AC(v29, a2, v24);
      swift_release_n();
      swift_release();

      goto LABEL_31;
    default:
      uint64_t v14 = *(void *)(a3 + 16);
      a3 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain_n();
      char v15 = sub_1C027C3AC(a1, a2, v14);
      if (v4)
      {
LABEL_11:
        swift_release();
        swift_release_n();
      }
      else
      {
        char v25 = v15;
        swift_release();
        sub_1C0282524(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
        if (v25)
        {
          swift_retain();
          LOBYTE(a3) = sub_1C027C3AC(a1, v13, a3);
          swift_release();
        }
        else
        {
          LOBYTE(a3) = 0;
        }
        sub_1BFF810A4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
LABEL_22:
        swift_release();
LABEL_31:
        swift_release();
      }
      return a3 & 1;
  }
}

BOOL sub_1C027C894(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = a1;
  switch(a3 >> 61)
  {
    case 1uLL:
      uint64_t v11 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v8 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      char v12 = sub_1C027C894(v6, a2, v11);
      if (v4) {
        goto LABEL_12;
      }
      char v13 = v12;
      swift_release();
      if ((v13 & 1) == 0) {
        goto LABEL_13;
      }
      swift_release();
      swift_release();
      LOBYTE(v6) = 1;
      return v6 & 1;
    case 2uLL:
      uint64_t v14 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      char v15 = sub_1C027C894(v6, a2, v14);
      if (v4)
      {
        swift_release();
      }
      else
      {
        char v19 = v15;
        swift_release();
        LOBYTE(v6) = v19 ^ 1;
      }
      return v6 & 1;
    case 3uLL:
      return sub_1C0281ABC(*(double *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18), a1, *(_WORD *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
    case 4uLL:
      uint64_t v17 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v18 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain();
      swift_retain_n();
      sub_1C027ACBC(&v22, a2, v17);
      if (v4) {
        goto LABEL_12;
      }
      swift_release();
      uint64_t v20 = swift_retain();
      Class v21 = FormatColor.color.getter(v20);
      LOBYTE(v6) = sub_1C027C894(v21, a2, v18);
      swift_release_n();
      swift_release();

      swift_release();
      break;
    default:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v8 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain_n();
      char v9 = sub_1C027C894(v6, a2, v7);
      if (v4)
      {
LABEL_12:
        swift_release();
        swift_release_n();
      }
      else
      {
        char v10 = v9;
        swift_release();
        if (v10)
        {
LABEL_13:
          sub_1C0281A30(a2);
          swift_retain();
          LOBYTE(v6) = sub_1C027C894(v6, a2, v8);
          swift_release();
          sub_1C0281D80(a2);
          swift_release();
          swift_release();
        }
        else
        {
          swift_release();
          swift_release();
          LOBYTE(v6) = 0;
        }
      }
      break;
  }
  return v6 & 1;
}

uint64_t sub_1C027CB80@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C027CE7C(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C027CB80, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1BFF64090, a3);
}

uint64_t sub_1C027CBC0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  switch(a2 >> 61)
  {
    case 1uLL:
      uint64_t v13 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v14 = swift_allocObject();
      sub_1C027CBC0(&v27, a1, v13);
      if (v3) {
        goto LABEL_11;
      }
      uint64_t v15 = v27;
      uint64_t result = (uint64_t)sub_1C027CBC0(&v26, a1, v12);
      uint64_t v24 = v26;
      *(void *)(v14 + 16) = v15;
      *(void *)(v14 + 24) = v24;
      *a3 = v14 | 0x2000000000000000;
      break;
    case 2uLL:
      uint64_t v16 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = swift_allocObject();
      uint64_t result = (uint64_t)sub_1C027CBC0(&v27, a1, v16);
      if (v3) {
        goto LABEL_11;
      }
      *(void *)(v17 + 16) = v27;
      *a3 = v17 | 0x4000000000000000;
      break;
    case 3uLL:
      __int16 v18 = *(_WORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v19 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t result = swift_allocObject();
      *(_WORD *)(result + 16) = v18;
      *(void *)(result + 24) = v19;
      *a3 = result | 0x6000000000000000;
      break;
    case 4uLL:
      uint64_t v21 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v20 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v22 = swift_allocObject();
      sub_1C0279B34(&v27, a1, v21);
      if (v3) {
        goto LABEL_11;
      }
      uint64_t v23 = v27;
      uint64_t result = (uint64_t)sub_1C027CBC0(&v26, a1, v20);
      uint64_t v25 = v26;
      *(void *)(v22 + 16) = v23;
      *(void *)(v22 + 24) = v25;
      *a3 = v22 | 0x8000000000000000;
      break;
    default:
      uint64_t v7 = *(void *)(a2 + 16);
      uint64_t v6 = *(void *)(a2 + 24);
      uint64_t v8 = swift_allocObject();
      sub_1C027CBC0(&v27, a1, v7);
      if (v3)
      {
LABEL_11:
        uint64_t result = swift_deallocUninitializedObject();
      }
      else
      {
        uint64_t v9 = v27;
        uint64_t result = (uint64_t)sub_1C027CBC0(&v26, a1, v6);
        uint64_t v11 = v26;
        *(void *)(v8 + 16) = v9;
        *(void *)(v8 + 24) = v11;
        *a3 = v8;
      }
      break;
  }
  return result;
}

uint64_t sub_1C027CE3C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C027CE7C(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C027CE3C, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C027A3C0, a3);
}

uint64_t sub_1C027CE7C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t)@<X2>, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t)@<X3>, void *a5@<X8>)
{
  switch(a2 >> 61)
  {
    case 1uLL:
      uint64_t v16 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v15 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v17 = swift_allocObject();
      a3(&v31, a1, v16);
      if (v5) {
        goto LABEL_11;
      }
      uint64_t v18 = v31;
      uint64_t result = (uint64_t)((uint64_t (*)(uint64_t *__return_ptr, uint64_t, uint64_t))a3)(&v30, a1, v15);
      uint64_t v28 = v30;
      *(void *)(v17 + 16) = v18;
      *(void *)(v17 + 24) = v28;
      *a5 = v17 | 0x2000000000000000;
      break;
    case 2uLL:
      uint64_t v19 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v20 = swift_allocObject();
      uint64_t result = (uint64_t)((uint64_t (*)(uint64_t *__return_ptr, uint64_t, uint64_t))a3)(&v31, a1, v19);
      if (v5) {
        goto LABEL_11;
      }
      *(void *)(v20 + 16) = v31;
      *a5 = v20 | 0x4000000000000000;
      break;
    case 3uLL:
      __int16 v21 = *(_WORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v22 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t result = swift_allocObject();
      *(_WORD *)(result + 16) = v21;
      *(void *)(result + 24) = v22;
      *a5 = result | 0x6000000000000000;
      break;
    case 4uLL:
      uint64_t v25 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v26 = swift_allocObject();
      a4(&v31, a1, v25);
      if (v5) {
        goto LABEL_11;
      }
      uint64_t v27 = v31;
      uint64_t result = (uint64_t)((uint64_t (*)(uint64_t *__return_ptr, uint64_t, uint64_t))a3)(&v30, a1, v24);
      uint64_t v29 = v30;
      *(void *)(v26 + 16) = v27;
      *(void *)(v26 + 24) = v29;
      *a5 = v26 | 0x8000000000000000;
      break;
    default:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      uint64_t v11 = swift_allocObject();
      a3(&v31, a1, v10);
      if (v5)
      {
LABEL_11:
        uint64_t result = swift_deallocUninitializedObject();
      }
      else
      {
        uint64_t v12 = v31;
        uint64_t result = (uint64_t)((uint64_t (*)(uint64_t *__return_ptr, uint64_t, uint64_t))a3)(&v30, a1, v9);
        uint64_t v14 = v30;
        *(void *)(v11 + 16) = v12;
        *(void *)(v11 + 24) = v14;
        *a5 = v11;
      }
      break;
  }
  return result;
}

uint64_t sub_1C027D124@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C0023344(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C027D124, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C027A474, a3);
}

uint64_t sub_1C027D178@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  switch(a2 >> 61)
  {
    case 1uLL:
      uint64_t v13 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v14 = swift_allocObject();
      sub_1C027D178(&v27, a1, v13);
      if (v3) {
        goto LABEL_11;
      }
      uint64_t v15 = v27;
      uint64_t result = (uint64_t)sub_1C027D178(&v26, a1, v12);
      uint64_t v24 = v26;
      *(void *)(v14 + 16) = v15;
      *(void *)(v14 + 24) = v24;
      *a3 = v14 | 0x2000000000000000;
      break;
    case 2uLL:
      uint64_t v16 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = swift_allocObject();
      uint64_t result = (uint64_t)sub_1C027D178(&v27, a1, v16);
      if (v3) {
        goto LABEL_11;
      }
      *(void *)(v17 + 16) = v27;
      *a3 = v17 | 0x4000000000000000;
      break;
    case 3uLL:
      __int16 v18 = *(_WORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v19 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t result = swift_allocObject();
      *(_WORD *)(result + 16) = v18;
      *(void *)(result + 24) = v19;
      *a3 = result | 0x6000000000000000;
      break;
    case 4uLL:
      uint64_t v21 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v20 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v22 = swift_allocObject();
      sub_1C027ACBC(&v27, a1, v21);
      if (v3) {
        goto LABEL_11;
      }
      uint64_t v23 = v27;
      uint64_t result = (uint64_t)sub_1C027D178(&v26, a1, v20);
      uint64_t v25 = v26;
      *(void *)(v22 + 16) = v23;
      *(void *)(v22 + 24) = v25;
      *a3 = v22 | 0x8000000000000000;
      break;
    default:
      uint64_t v7 = *(void *)(a2 + 16);
      uint64_t v6 = *(void *)(a2 + 24);
      uint64_t v8 = swift_allocObject();
      sub_1C027D178(&v27, a1, v7);
      if (v3)
      {
LABEL_11:
        uint64_t result = swift_deallocUninitializedObject();
      }
      else
      {
        uint64_t v9 = v27;
        uint64_t result = (uint64_t)sub_1C027D178(&v26, a1, v6);
        uint64_t v11 = v26;
        *(void *)(v8 + 16) = v9;
        *(void *)(v8 + 24) = v11;
        *a3 = v8;
      }
      break;
  }
  return result;
}

id sub_1C027D440(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C027D5BC(a1, a2, a3, a4, a5, (uint64_t (*)(id, uint64_t, uint64_t))sub_1C027BBC8, (uint64_t (*)(id, uint64_t, unint64_t))sub_1BFF663B0);
}

id sub_1C027D46C(uint64_t a1, id a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  swift_retain();
  char v9 = sub_1C027BC0C((uint64_t)v8, a5, a3);
  swift_release();
  if (v9)
  {
    uint64_t v10 = *(void *)(a4 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      id v11 = v8;
      uint64_t v12 = 0;
      id v8 = v11;
      do
      {
        uint64_t v13 = v8;
        unint64_t v14 = *(void *)(a4 + 8 * v12++ + 32);
        sub_1BFF65DE8(v14);
        id v8 = (id)sub_1C0277D98(v8, a5, v14);
        sub_1BFF65E20(v14);
      }
      while (v10 != v12);

      swift_bridgeObjectRelease_n();
    }
  }
  return v8;
}

id sub_1C027D590(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1C027D5BC(a1, a2, a3, a4, a5, (uint64_t (*)(id, uint64_t, uint64_t))sub_1C027BFA4, (uint64_t (*)(id, uint64_t, unint64_t))sub_1C0278390);
}

id sub_1C027D5BC(uint64_t a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(id, uint64_t, uint64_t), uint64_t (*a7)(id, uint64_t, unint64_t))
{
  id v12 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  swift_retain();
  LOBYTE(a6) = a6(v12, a5, a3);
  swift_release();
  if (a6)
  {
    uint64_t v13 = *(void *)(a4 + 16);
    if (v13)
    {
      swift_bridgeObjectRetain_n();
      id v14 = v12;
      uint64_t v15 = 0;
      id v12 = v14;
      do
      {
        uint64_t v16 = v12;
        unint64_t v17 = *(void *)(a4 + 8 * v15++ + 32);
        sub_1BFF65DE8(v17);
        id v12 = (id)a7(v12, a5, v17);
        sub_1BFF65E20(v17);
      }
      while (v13 != v15);

      swift_bridgeObjectRelease_n();
    }
  }
  return v12;
}

id sub_1C027D6F8(uint64_t a1, id a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  swift_retain();
  BOOL v9 = sub_1C027C894((uint64_t)v8, a5, a3);
  swift_release();
  if (v9)
  {
    uint64_t v10 = *(void *)(a4 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      id v11 = v8;
      uint64_t v12 = 0;
      id v8 = v11;
      do
      {
        uint64_t v13 = v8;
        unint64_t v14 = *(void *)(a4 + 8 * v12++ + 32);
        sub_1BFF65DE8(v14);
        id v8 = (id)sub_1C0279000(v8, a5, v14);
        sub_1BFF65E20(v14);
      }
      while (v10 != v12);

      swift_bridgeObjectRelease_n();
    }
  }
  return v8;
}

uint64_t sub_1C027D81C()
{
  type metadata accessor for FormatLayoutError();
  sub_1C0281748((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  swift_allocError();
  void *v0 = 0xD00000000000007ALL;
  v0[1] = 0x80000001C1607E70;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

void sub_1C027D90C(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v11 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v20[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a3 >> 7) & 0xFE | (a3 >> 5) & 1)
  {
    case 1u:
      sub_1BFC4BD94(*(void *)(a1 + *a4 + 8), (uint64_t)v13);
      if (!v5)
      {
        LOBYTE(v25) = a2;
        sub_1C03EAA1C((uint64_t)v13, a5);
        sub_1BFF810A4((uint64_t)v13, type metadata accessor for FeedHeadline);
      }
      break;
    case 2u:
      sub_1BFFDAD48(*(void *)(a1 + *a4 + 8), (uint64_t)&v25);
      if (!v5)
      {
        long long v14 = v25;
        LOBYTE(v25) = a2;
        sub_1C0292B2C((id)v14, a5);
        swift_unknownObjectRelease();
      }
      break;
    case 3u:
      sub_1C098D4FC(*(void *)(a1 + *a4 + 8), (uint64_t)&v25);
      if (!v5)
      {
        char v15 = a3 & 0xDF;
        uint64_t v16 = *((void *)&v26 + 1);
        long long v19 = v27;
        *(void *)&v23[0] = a2;
        BYTE8(v23[0]) = v15;
        sub_1C0D99718((uint64_t)&v25, a5);
        sub_1BFEEFC20(v16, v19);
        swift_unknownObjectRelease();
        goto LABEL_14;
      }
      break;
    case 4u:
      sub_1C098CEE0(*(void *)(a1 + *a4 + 8), &v25);
      if (!v5)
      {
        unint64_t v17 = (void *)v25;
        LOBYTE(v25) = a2;
        id v18 = FCFeedDescriptor.feedTag.getter();
        sub_1C0292B2C(v18, a5);

        swift_unknownObjectRelease();
      }
      break;
    case 5u:
      sub_1C098CD24(*(void *)(a1 + *a4 + 8), (uint64_t)&v25);
      if (!v5)
      {
        *(void *)&v23[0] = a2;
        BYTE8(v23[0]) = a3 & 0xDF;
        sub_1C0D58474((uint64_t)&v25, a5);
        swift_unknownObjectRelease();
LABEL_14:
        swift_bridgeObjectRelease();
      }
      break;
    default:
      sub_1C098D32C(*(void *)(a1 + *a4 + 8), (uint64_t)&v25);
      if (!v5)
      {
        v23[6] = v31;
        v24[0] = v32[0];
        *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)((char *)v32 + 9);
        v23[2] = v27;
        v23[3] = v28;
        v23[4] = v29;
        void v23[5] = v30;
        v23[0] = v25;
        v23[1] = v26;
        v20[6] = v31;
        *(_OWORD *)uint64_t v21 = v32[0];
        *(_OWORD *)&v21[9] = *(_OWORD *)((char *)v32 + 9);
        void v20[2] = v27;
        v20[3] = v28;
        void v20[4] = v29;
        v20[5] = v30;
        char v22 = a2;
        v20[0] = v25;
        v20[1] = v26;
        sub_1C065F354((void **)v20, a5);
        sub_1C01880A4((uint64_t)v23);
      }
      break;
  }
}

void sub_1C027DC70(uint64_t a1@<X1>, unsigned int a2@<W2>, uint64_t *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v7 - 8);
  BOOL v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a2 >> 7) & 0xFE | (a2 >> 5) & 1)
  {
    case 1u:
      sub_1BFF835F0((void (*)(void, void))sub_1BFC4BD94);
      if (!v3)
      {
        LOBYTE(v21) = a1;
        sub_1C03EAA1C((uint64_t)v9, a3);
        sub_1BFF810A4((uint64_t)v9, type metadata accessor for FeedHeadline);
      }
      break;
    case 2u:
      sub_1C027E9C8((uint64_t)&v21);
      if (!v3)
      {
        long long v10 = v21;
        LOBYTE(v21) = a1;
        sub_1C0292B2C((id)v10, a3);
        swift_unknownObjectRelease();
      }
      break;
    case 3u:
      sub_1C027EB90((void (*)(void, void))sub_1C098D4FC);
      if (!v3)
      {
        char v11 = a2 & 0xDF;
        uint64_t v12 = *((void *)&v22 + 1);
        long long v15 = v23;
        *(void *)&v19[0] = a1;
        BYTE8(v19[0]) = v11;
        sub_1C0D99718((uint64_t)&v21, a3);
        sub_1BFEEFC20(v12, v15);
        swift_unknownObjectRelease();
        goto LABEL_14;
      }
      break;
    case 4u:
      sub_1C027E6B0(&v21);
      if (!v3)
      {
        uint64_t v13 = (void *)v21;
        LOBYTE(v21) = a1;
        id v14 = FCFeedDescriptor.feedTag.getter();
        sub_1C0292B2C(v14, a3);

        swift_unknownObjectRelease();
      }
      break;
    case 5u:
      sub_1C027ED38((void (*)(void, void))sub_1C098CD24);
      if (!v3)
      {
        *(void *)&v19[0] = a1;
        BYTE8(v19[0]) = a2 & 0xDF;
        sub_1C0D58474((uint64_t)&v21, a3);
        swift_unknownObjectRelease();
LABEL_14:
        swift_bridgeObjectRelease();
      }
      break;
    default:
      sub_1C027E84C((void (*)(void, void))sub_1C098D32C);
      if (!v3)
      {
        v19[6] = v27;
        v20[0] = v28[0];
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v28 + 9);
        long long v19[2] = v23;
        v19[3] = v24;
        v19[4] = v25;
        v19[5] = v26;
        v19[0] = v21;
        v19[1] = v22;
        void v16[6] = v27;
        *(_OWORD *)unint64_t v17 = v28[0];
        *(_OWORD *)&v17[9] = *(_OWORD *)((char *)v28 + 9);
        unint64_t v16[2] = v23;
        v16[3] = v24;
        v16[4] = v25;
        v16[5] = v26;
        char v18 = a1;
        v16[0] = v21;
        v16[1] = v22;
        sub_1C065F354((void **)v16, a3);
        sub_1C01880A4((uint64_t)v19);
      }
      break;
  }
}

void sub_1C027DFD8(uint64_t a1@<X1>, unsigned int a2@<W2>, uint64_t *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v7 - 8);
  BOOL v9 = (char *)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch((a2 >> 7) & 0xFE | (a2 >> 5) & 1)
  {
    case 1u:
      sub_1C0220B00((uint64_t)&v16[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
      if (!v3)
      {
        LOBYTE(v21) = a1;
        sub_1C03EAA1C((uint64_t)v9, a3);
        sub_1BFF810A4((uint64_t)v9, type metadata accessor for FeedHeadline);
      }
      break;
    case 2u:
      sub_1C0221110((uint64_t)&v21);
      if (!v3)
      {
        long long v10 = v21;
        LOBYTE(v21) = a1;
        sub_1C0292B2C((id)v10, a3);
        swift_unknownObjectRelease();
      }
      break;
    case 3u:
      sub_1C02212C8((uint64_t)&v21);
      if (!v3)
      {
        char v11 = a2 & 0xDF;
        uint64_t v12 = *((void *)&v22 + 1);
        long long v15 = v23;
        *(void *)&v19[0] = a1;
        BYTE8(v19[0]) = v11;
        sub_1C0D99718((uint64_t)&v21, a3);
        sub_1BFEEFC20(v12, v15);
        swift_unknownObjectRelease();
        goto LABEL_14;
      }
      break;
    case 4u:
      sub_1C0220D90(&v21);
      if (!v3)
      {
        uint64_t v13 = (void *)v21;
        LOBYTE(v21) = a1;
        id v14 = FCFeedDescriptor.feedTag.getter();
        sub_1C0292B2C(v14, a3);

        swift_unknownObjectRelease();
      }
      break;
    case 5u:
      sub_1C02214A4((uint64_t)&v21);
      if (!v3)
      {
        *(void *)&v19[0] = a1;
        BYTE8(v19[0]) = a2 & 0xDF;
        sub_1C0D58474((uint64_t)&v21, a3);
        swift_unknownObjectRelease();
LABEL_14:
        swift_bridgeObjectRelease();
      }
      break;
    default:
      sub_1C0220F48((uint64_t)&v21);
      if (!v3)
      {
        v19[6] = v27;
        v20[0] = v28[0];
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v28 + 9);
        long long v19[2] = v23;
        v19[3] = v24;
        v19[4] = v25;
        v19[5] = v26;
        v19[0] = v21;
        v19[1] = v22;
        void v16[6] = v27;
        *(_OWORD *)unint64_t v17 = v28[0];
        *(_OWORD *)&v17[9] = *(_OWORD *)((char *)v28 + 9);
        unint64_t v16[2] = v23;
        v16[3] = v24;
        v16[4] = v25;
        v16[5] = v26;
        char v18 = a1;
        v16[0] = v21;
        v16[1] = v22;
        sub_1C065F354((void **)v16, a3);
        sub_1C01880A4((uint64_t)v19);
      }
      break;
  }
}

uint64_t sub_1C027E2F0()
{
  type metadata accessor for FormatLayoutError();
  sub_1C0281748((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  swift_allocError();
  void *v0 = 0xD000000000000048;
  v0[1] = 0x80000001C1607D30;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C027E3E0()
{
  return sub_1C027E84C((void (*)(void, void))sub_1BFFB5F74);
}

uint64_t sub_1C027E40C()
{
  return sub_1C027EB90((void (*)(void, void))sub_1C0E472AC);
}

uint64_t sub_1C027E438()
{
  return sub_1C027ED38((void (*)(void, void))sub_1C0E4755C);
}

uint64_t sub_1C027E464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0282524(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *v6;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    long long v10 = (char *)v6 + *(int *)(v9 + 48);
    sub_1C0E473E0(*(void *)(v8 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), a1);
    swift_release();
    sub_1BFF81FF0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
    sub_1C0E473E0(*(void *)(v8 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), a1);
    return swift_release();
  }
}

uint64_t sub_1C027E5D4()
{
  return sub_1C027EF38((void (*)(void, void))sub_1C0E47688);
}

uint64_t sub_1C027E600()
{
  return sub_1BFF835F0((void (*)(void, void))sub_1BFF7DD68);
}

uint64_t sub_1C027E62C()
{
  return sub_1BFF835F0((void (*)(void, void))sub_1C0E47960);
}

uint64_t sub_1C027E658()
{
  return sub_1C027F0E0((void (*)(void, void))sub_1C0E47814);
}

uint64_t sub_1C027E684()
{
  return sub_1BFF835F0((void (*)(void, void))sub_1C0E47B90);
}

uint64_t sub_1C027E6B0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0282524(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *v6;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    long long v10 = (char *)v6 + *(int *)(v9 + 48);
    sub_1C098CEE0(*(void *)(v8 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), a1);
    swift_release();
    sub_1BFF81FF0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
    sub_1C098CEE0(*(void *)(v8 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), a1);
    return swift_release();
  }
}

uint64_t sub_1C027E820()
{
  return sub_1C027E84C((void (*)(void, void))sub_1C098D32C);
}

uint64_t sub_1C027E84C(void (*a1)(void, void))
{
  uint64_t v3 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0282524(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = *v5;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    uint64_t v9 = (char *)v5 + *(int *)(v8 + 48);
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8));
    swift_release();
    sub_1BFF81FF0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8));
    return swift_release();
  }
}

uint64_t sub_1C027E9C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0282524(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *v6;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    uint64_t v10 = (char *)v6 + *(int *)(v9 + 48);
    sub_1BFFDAD48(*(void *)(v8 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), a1);
    swift_release();
    sub_1BFF81FF0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
    sub_1BFFDAD48(*(void *)(v8 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8), a1);
    return swift_release();
  }
}

uint64_t sub_1C027EB38()
{
  return sub_1BFF835F0((void (*)(void, void))sub_1BFC4BD94);
}

uint64_t sub_1C027EB64()
{
  return sub_1C027EB90((void (*)(void, void))sub_1C098D4FC);
}

uint64_t sub_1C027EB90(void (*a1)(void, void))
{
  uint64_t v3 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0282524(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = *v5;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    uint64_t v9 = (char *)v5 + *(int *)(v8 + 48);
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8));
    swift_release();
    sub_1BFF81FF0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8));
    return swift_release();
  }
}

uint64_t sub_1C027ED0C()
{
  return sub_1C027ED38((void (*)(void, void))sub_1C098CD24);
}

uint64_t sub_1C027ED38(void (*a1)(void, void))
{
  uint64_t v3 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0282524(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = *v5;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    uint64_t v9 = (char *)v5 + *(int *)(v8 + 48);
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8));
    swift_release();
    sub_1BFF81FF0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8));
    return swift_release();
  }
}

uint64_t sub_1C027EEB4()
{
  return sub_1BFF835F0((void (*)(void, void))sub_1C098DB74);
}

uint64_t sub_1C027EEE0()
{
  return sub_1BFF835F0((void (*)(void, void))sub_1C098D6C0);
}

uint64_t sub_1C027EF0C()
{
  return sub_1C027EF38((void (*)(void, void))sub_1C098D960);
}

uint64_t sub_1C027EF38(void (*a1)(void, void))
{
  uint64_t v3 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0282524(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = *v5;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    uint64_t v9 = (char *)v5 + *(int *)(v8 + 48);
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8));
    swift_release();
    sub_1BFF81FF0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8));
    return swift_release();
  }
}

uint64_t sub_1C027F0B4()
{
  return sub_1C027F0E0((void (*)(void, void))sub_1C098DE20);
}

uint64_t sub_1C027F0E0(void (*a1)(void, void))
{
  uint64_t v3 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0282524(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = *v5;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    uint64_t v9 = (char *)v5 + *(int *)(v8 + 48);
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8));
    swift_release();
    sub_1BFF81FF0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8));
    return swift_release();
  }
}

uint64_t sub_1C027F25C()
{
  return sub_1BFF835F0((void (*)(void, void))sub_1C098D080);
}

void sub_1C027F2A4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v28 = a4;
  long long v29 = a6;
  uint64_t v9 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v12 - 8);
  id v14 = (char *)&v28 - v13;
  uint64_t v15 = type metadata accessor for FormatOption();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  char v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a5)
  {
    case 3:
      sub_1C003DFA4(a1);
      sub_1C1517EFC();
      sub_1C003DF0C(a1);
      swift_retain();
      swift_release();
      FormatOptionCollection.subscript.getter(a2, v31, (uint64_t)v14);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        sub_1BFE5464C((uint64_t)v14, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
        uint64_t v20 = v31;
        *uint64_t v11 = a2;
        v11[1] = v20;
        swift_storeEnumTagMultiPayload();
        char v21 = *(unsigned char *)(a1 + 8);
        sub_1C0281748((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        long long v22 = (void *)swift_allocError();
        sub_1C0282524((uint64_t)v11, v23, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        if (v21)
        {
          uint64_t v27 = swift_allocObject();
          *(unsigned char *)(v27 + 16) = 2;
          *(void *)(v27 + 24) = 0x3FF0000000000000;
          *(unsigned char *)(v27 + 32) = 0;
          *long long v29 = v27 | 0x1000000000000000;
          swift_bridgeObjectRetain();
          sub_1BFF810A4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BFF810A4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        }
      }
      else
      {
        sub_1C028208C((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v24 = *((void *)v18 + 2);
        swift_retain();
        uint64_t v25 = v24;
        uint64_t v26 = v30;
        sub_1C0E44D88(&v32, a1, v25);
        swift_release();
        if (!v26)
        {
          sub_1C0E4B294(v32, a2, v31, v28, (long long *)a1, v29);
          swift_release();
        }
        sub_1BFF810A4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatOption);
      }
      break;
    case 4:
      sub_1C027D81C();
      break;
    default:
      sub_1C0281748((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *long long v19 = 0xD00000000000006ELL;
      v19[1] = 0x80000001C1607E00;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      break;
  }
}

void sub_1C027F788(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v36 = a4;
  uint64_t v38 = a6;
  uint64_t v39 = a3;
  uint64_t v8 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v8);
  uint64_t v37 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = type metadata accessor for FormatOption();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v17 - 8);
  long long v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a5)
  {
    case 1:
      uint64_t v21 = v41;
      sub_1C0E473E0(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)&v42);
      if (!v21)
      {
        LOBYTE(v52[0]) = v40;
        sub_1C0292B2C((id)v43, v38);
        sub_1BFEA4290((uint64_t)&v42);
      }
      return;
    case 2:
      uint64_t v22 = v41;
      sub_1BFFB5F74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)&v42);
      if (!v22)
      {
        v52[6] = v48;
        v53[0] = v49[0];
        *(_OWORD *)((char *)v53 + 9) = *(_OWORD *)((char *)v49 + 9);
        void v52[2] = v44;
        v52[3] = v45;
        v52[4] = v46;
        v52[5] = v47;
        v52[0] = v42;
        v52[1] = v43;
        v50[6] = v48;
        v51[0] = v49[0];
        *(_OWORD *)((char *)v51 + 9) = *(_OWORD *)((char *)v49 + 9);
        uint64_t v50[2] = v44;
        v50[3] = v45;
        v50[4] = v46;
        v50[5] = v47;
        char v54 = v40;
        v50[0] = v42;
        v50[1] = v43;
        sub_1C065F354((void **)v50, v38);
        sub_1C01880A4((uint64_t)v52);
      }
      return;
    case 3:
      uint64_t v23 = v40;
      FormatOptionCollection.subscript.getter(v40, v39, (uint64_t)v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        sub_1BFE5464C((uint64_t)v12, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
        uint64_t v16 = v37;
        *uint64_t v37 = v23;
        v16[1] = v39;
        swift_storeEnumTagMultiPayload();
        char v24 = *(unsigned char *)(a1 + 48);
        sub_1C0281748((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        uint64_t v25 = (void *)swift_allocError();
        sub_1C0282524((uint64_t)v16, v26, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        if (v24)
        {
          uint64_t v27 = swift_allocObject();
          *(unsigned char *)(v27 + 16) = 2;
          *(void *)(v27 + 24) = 0x3FF0000000000000;
          *(unsigned char *)(v27 + 32) = 0;
          uint64_t *v38 = v27 | 0x1000000000000000;
          swift_bridgeObjectRetain();
          sub_1BFF810A4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);

          return;
        }
        swift_bridgeObjectRetain();
        swift_willThrow();
        uint64_t v33 = type metadata accessor for FormatLayoutError;
        goto LABEL_21;
      }
      sub_1C028208C((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v30 = v16[2];
      swift_retain();
      uint64_t v31 = v30;
      uint64_t v32 = v41;
      sub_1BFF27FB0(&v42, a1, v31);
      swift_release();
      if (v32)
      {
        uint64_t v33 = type metadata accessor for FormatOption;
LABEL_21:
        sub_1BFF810A4((uint64_t)v16, (uint64_t (*)(void))v33);
        return;
      }
      sub_1C0E4C880(v42, v23, v39, v36, a1, v38);
      swift_release();
      sub_1BFF810A4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
      return;
    case 4:
      sub_1C027D90C(a1, v40, v39, &OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack, v38);
      return;
    case 5:
      uint64_t v28 = v41;
      sub_1C0E4755C(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)&v42);
      if (!v28)
      {
        *(void *)&v52[0] = v40;
        BYTE8(v52[0]) = v39;
        sub_1C0D58474((uint64_t)&v42, v38);
        goto LABEL_19;
      }
      return;
    case 6:
      uint64_t v29 = v41;
      sub_1C0E472AC(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)&v42);
      if (!v29)
      {
        uint64_t v34 = *((void *)&v43 + 1);
        long long v41 = v44;
        *(void *)&v52[0] = v40;
        BYTE8(v52[0]) = v39;
        sub_1C0D99718((uint64_t)&v42, v38);
        sub_1BFEEFC20(v34, v41);
LABEL_19:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      return;
    default:
      uint64_t v20 = v41;
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
      if (!v20)
      {
        LOBYTE(v42) = v40;
        sub_1C03EAA1C((uint64_t)v19, v38);
        sub_1BFF810A4((uint64_t)v19, type metadata accessor for FeedHeadline);
      }
      return;
  }
}

void sub_1C027FE64(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v13 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a5)
  {
    case 1:
      sub_1C027E464((uint64_t)&v18);
      if (!v6)
      {
        LOBYTE(v28[0]) = a2;
        sub_1C0292B2C((id)v19, a6);
        sub_1BFEA4290((uint64_t)&v18);
      }
      break;
    case 2:
      sub_1C027E84C((void (*)(void, void))sub_1BFFB5F74);
      if (!v6)
      {
        v28[6] = v24;
        v29[0] = v25[0];
        *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)((char *)v25 + 9);
        _OWORD v28[2] = v20;
        v28[3] = v21;
        v28[4] = v22;
        v28[5] = v23;
        v28[0] = v18;
        v28[1] = v19;
        v26[6] = v24;
        v27[0] = v25[0];
        *(_OWORD *)((char *)v27 + 9) = *(_OWORD *)((char *)v25 + 9);
        _OWORD v26[2] = v20;
        v26[3] = v21;
        v26[4] = v22;
        v26[5] = v23;
        char v30 = a2;
        v26[0] = v18;
        v26[1] = v19;
        sub_1C065F354((void **)v26, a6);
        sub_1C01880A4((uint64_t)v28);
      }
      break;
    case 3:
      sub_1C124D6AC(a1, a2, a3, a4, a6);
      break;
    case 4:
      sub_1C027DC70(a2, a3, a6);
      break;
    case 5:
      sub_1C027ED38((void (*)(void, void))sub_1C0E4755C);
      if (!v6)
      {
        *(void *)&v28[0] = a2;
        BYTE8(v28[0]) = a3;
        sub_1C0D58474((uint64_t)&v18, a6);
        swift_unknownObjectRelease();
        goto LABEL_14;
      }
      break;
    case 6:
      sub_1C027EB90((void (*)(void, void))sub_1C0E472AC);
      if (!v6)
      {
        uint64_t v16 = *((void *)&v19 + 1);
        long long v17 = v20;
        *(void *)&v28[0] = a2;
        BYTE8(v28[0]) = a3;
        sub_1C0D99718((uint64_t)&v18, a6);
        sub_1BFEEFC20(v16, v17);
        swift_unknownObjectRelease();
LABEL_14:
        swift_bridgeObjectRelease();
      }
      break;
    default:
      sub_1BFF835F0((void (*)(void, void))sub_1BFF23670);
      if (!v6)
      {
        LOBYTE(v18) = a2;
        sub_1C03EAA1C((uint64_t)v15, a6);
        sub_1BFF810A4((uint64_t)v15, type metadata accessor for FeedHeadline);
      }
      break;
  }
}

void sub_1C02801D4(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a6;
  uint64_t v9 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v15 = type metadata accessor for FormatOption();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  long long v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a5)
  {
    case 3:
      FormatOptionCollection.subscript.getter(a2, v31, (uint64_t)v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        sub_1BFE5464C((uint64_t)v14, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
        uint64_t v20 = v31;
        *uint64_t v11 = a2;
        v11[1] = v20;
        swift_storeEnumTagMultiPayload();
        char v21 = *(unsigned char *)a1;
        sub_1C0281748((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        long long v22 = (void *)swift_allocError();
        sub_1C0282524((uint64_t)v11, v23, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        if (v21)
        {
          uint64_t v27 = swift_allocObject();
          *(unsigned char *)(v27 + 16) = 2;
          *(void *)(v27 + 24) = 0x3FF0000000000000;
          *(unsigned char *)(v27 + 32) = 0;
          *uint64_t v29 = v27 | 0x1000000000000000;
          swift_bridgeObjectRetain();
          sub_1BFF810A4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_willThrow();
          sub_1BFF810A4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        }
      }
      else
      {
        sub_1C028208C((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v24 = *((void *)v18 + 2);
        swift_retain();
        uint64_t v25 = v24;
        uint64_t v26 = v30;
        sub_1C0E455CC(&v32, a1, v25);
        swift_release();
        if (!v26)
        {
          sub_1C0E54D54(v32, a2, v31, v28, a1, v29);
          swift_release();
        }
        sub_1BFF810A4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatOption);
      }
      break;
    case 4:
      sub_1C027E2F0();
      break;
    default:
      sub_1C0281748((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *long long v19 = 0xD000000000000048;
      v19[1] = 0x80000001C1607D30;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      break;
  }
}

BOOL _s8NewsFeed17FormatSymbolImageV2eeoiySbAC_ACtFZ_0(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 2);
  char v3 = *((unsigned char *)a1 + 24);
  uint64_t v5 = *((void *)a1 + 4);
  uint64_t v4 = *((void *)a1 + 5);
  uint64_t v6 = *((unsigned __int16 *)a1 + 24);
  uint64_t v8 = *((void *)a1 + 7);
  uint64_t v7 = *((void *)a1 + 8);
  uint64_t v29 = *((void *)a1 + 10);
  uint64_t v30 = *((void *)a1 + 9);
  unsigned int v28 = *((unsigned __int8 *)a1 + 88);
  unint64_t v9 = *((void *)a1 + 12);
  uint64_t v10 = *((void *)a2 + 2);
  char v11 = *((unsigned char *)a2 + 24);
  uint64_t v13 = *((void *)a2 + 4);
  uint64_t v12 = *((void *)a2 + 5);
  uint64_t v14 = *((unsigned __int16 *)a2 + 24);
  uint64_t v15 = *((void *)a2 + 7);
  uint64_t v31 = *((void *)a2 + 8);
  uint64_t v26 = *((void *)a2 + 10);
  uint64_t v27 = *((void *)a2 + 9);
  unsigned int v25 = *((unsigned __int8 *)a2 + 88);
  unint64_t v24 = *((void *)a2 + 12);
  long long v35 = *a1;
  uint64_t v36 = v2;
  char v37 = v3;
  long long v32 = *a2;
  uint64_t v33 = v10;
  char v34 = v11;
  if ((_s8NewsFeed16FormatSymbolNameO2eeoiySbAC_ACtFZ_0((uint64_t)&v35, (uint64_t)&v32) & 1) == 0) {
    return 0;
  }
  unint64_t v23 = v9;
  if (v6 >> 8 <= 0xFE)
  {
    *(void *)&long long v35 = v5;
    *((void *)&v35 + 1) = v4;
    LOWORD(v36) = v6;
    if (v14 >> 8 <= 0xFE)
    {
      *(void *)&long long v32 = v13;
      *((void *)&v32 + 1) = v12;
      LOWORD(v33) = v14;
      sub_1BFF62358(v5, v4, v6);
      sub_1BFF61744(v5, v4, v6, SBYTE1(v6));
      char v16 = _s8NewsFeed18FormatSymbolConfigO2eeoiySbAC_ACtFZ_0((uint64_t)&v35, (uint64_t)&v32);
      sub_1BFF61770(v35, *((uint64_t *)&v35 + 1), v36, SBYTE1(v36));
      sub_1BFF6179C(v5, v4, v6);
      if (v16) {
        goto LABEL_9;
      }
      return 0;
    }
    sub_1BFF61744(v5, v4, v6, SBYTE1(v6));
    sub_1BFF61744(v5, v4, v6, SBYTE1(v6));
    sub_1BFF61770(v5, v4, v6, SBYTE1(v6));
LABEL_7:
    sub_1BFF62358(v13, v12, v14);
    sub_1BFF6179C(v5, v4, v6);
    sub_1BFF6179C(v13, v12, v14);
    return 0;
  }
  if (v14 >> 8 <= 0xFE) {
    goto LABEL_7;
  }
LABEL_9:
  unint64_t v17 = v15 & 0xF000000000000007;
  if ((~v8 & 0xF000000000000007) == 0)
  {
    if (v17 == 0xF000000000000007) {
      goto LABEL_11;
    }
LABEL_17:
    sub_1BFDEB8B4(v15);
    sub_1BFDEB900(v8);
    sub_1BFDEB900(v15);
    return 0;
  }
  if (v17 == 0xF000000000000007)
  {
    swift_retain();
    swift_retain();
    goto LABEL_17;
  }
  *(void *)&long long v35 = v8;
  *(void *)&long long v32 = v15;
  sub_1BFDEB8B4(v8);
  sub_1BFDEB8B4(v8);
  sub_1BFDEB8B4(v15);
  if ((static FormatColor.== infix(_:_:)((uint64_t *)&v35, (unint64_t *)&v32) & 1) == 0)
  {
    sub_1BFDEB900(v15);
    swift_release();
    swift_release();
    sub_1BFDEB900(v8);
    return 0;
  }
  *(void *)&long long v35 = v7;
  *(void *)&long long v32 = v31;
  char v20 = static FormatColor.== infix(_:_:)((uint64_t *)&v35, (unint64_t *)&v32);
  sub_1BFDEB900(v15);
  swift_release();
  swift_release();
  sub_1BFDEB900(v8);
  if ((v20 & 1) == 0) {
    return 0;
  }
LABEL_11:
  sub_1BFE94AB4(v30, v29, v28);
  sub_1BFE94AB4(v27, v26, v25);
  char v18 = sub_1C1496764(v30, v29, v28, v27, v26, v25);
  sub_1BFE94AD4(v27, v26, v25);
  sub_1BFE94AD4(v30, v29, v28);
  if ((v18 & 1) == 0) {
    return 0;
  }
  if ((~v23 & 0xF000000000000007) == 0)
  {
    unint64_t v19 = v24;
    if ((~v24 & 0xF000000000000007) == 0) {
      return 1;
    }
    goto LABEL_24;
  }
  *(void *)&long long v35 = v23;
  unint64_t v19 = v24;
  if ((~v24 & 0xF000000000000007) == 0)
  {
    sub_1BFF58F10(v23);
    sub_1BFF58F10(v23);
    sub_1BFF07CD8(v23);
LABEL_24:
    sub_1C00F5B0C(v19);
    sub_1C00F5B20(v23);
    sub_1C00F5B20(v19);
    return 0;
  }
  *(void *)&long long v32 = v24;
  sub_1BFF58F10(v23);
  sub_1BFF58F10(v23);
  char v22 = static FormatSymbolImageColor.== infix(_:_:)((unint64_t *)&v35, (unint64_t *)&v32);
  sub_1BFF07CD8(v23);
  sub_1C00F5B20(v23);
  return (v22 & 1) != 0;
}

uint64_t _s8NewsFeed21FormatSymbolImageFillV2eeoiySbAC_ACtFZ_0(uint64_t *a1, unint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  unint64_t v7 = *a2;
  uint64_t v8 = v2;
  if (static FormatColor.== infix(_:_:)(&v8, &v7))
  {
    unint64_t v7 = v4;
    uint64_t v8 = v3;
    char v5 = static FormatColor.== infix(_:_:)(&v8, &v7);
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1C0280AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v4)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C152028C();
    unint64_t v7 = (unint64_t *)(a1 + 32);
    while (1)
    {
      unint64_t v8 = *v7++;
      swift_retain();
      uint64_t v9 = sub_1BFF64090(a2, v8, &v10);
      if (v2) {
        break;
      }
      FormatColor.color.getter(v9);
      swift_release();
      swift_release();
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
      if (!--v4) {
        return v11;
      }
    }
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1C0280C08(uint64_t a1)
{
  unint64_t result = sub_1C0280C30();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0280C30()
{
  unint64_t result = qword_1EA198DD0;
  if (!qword_1EA198DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198DD0);
  }
  return result;
}

uint64_t sub_1C0280C84(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0280F38(a1, a2, a3, (uint64_t (*)(void))sub_1BFD4B0D0, (uint64_t (*)(void))sub_1BFD4EF8C, (uint64_t (*)(void))sub_1C0280CC4);
}

unint64_t sub_1C0280CC4()
{
  unint64_t result = qword_1EA198DD8;
  if (!qword_1EA198DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198DD8);
  }
  return result;
}

unint64_t sub_1C0280D18(uint64_t a1)
{
  unint64_t result = sub_1C0280D40();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0280D40()
{
  unint64_t result = qword_1EA198DE0;
  if (!qword_1EA198DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198DE0);
  }
  return result;
}

uint64_t sub_1C0280D94(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0280F38(a1, a2, a3, (uint64_t (*)(void))sub_1BFD67BFC, (uint64_t (*)(void))sub_1C0280DD4, (uint64_t (*)(void))sub_1C0280E28);
}

unint64_t sub_1C0280DD4()
{
  unint64_t result = qword_1EB85E688;
  if (!qword_1EB85E688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85E688);
  }
  return result;
}

unint64_t sub_1C0280E28()
{
  unint64_t result = qword_1EA198DE8;
  if (!qword_1EA198DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198DE8);
  }
  return result;
}

unint64_t sub_1C0280E7C(uint64_t a1)
{
  unint64_t result = sub_1C0280EA4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1C0280EA4()
{
  unint64_t result = qword_1EA198DF0;
  if (!qword_1EA198DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198DF0);
  }
  return result;
}

uint64_t sub_1C0280EF8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C0280F38(a1, a2, a3, (uint64_t (*)(void))sub_1C0280F8C, (uint64_t (*)(void))sub_1C0280FE0, (uint64_t (*)(void))sub_1C0281034);
}

uint64_t sub_1C0280F38(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a1[1] = a4();
  a1[2] = a5();
  uint64_t result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_1C0280F8C()
{
  unint64_t result = qword_1EB8919F0;
  if (!qword_1EB8919F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8919F0);
  }
  return result;
}

unint64_t sub_1C0280FE0()
{
  unint64_t result = qword_1EA198DF8;
  if (!qword_1EA198DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198DF8);
  }
  return result;
}

unint64_t sub_1C0281034()
{
  unint64_t result = qword_1EA198E00;
  if (!qword_1EA198E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA198E00);
  }
  return result;
}

uint64_t sub_1C0281088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 72);
  uint64_t v2 = *(void *)(a1 + 80);
  char v4 = *(unsigned char *)(a1 + 88);
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v2;
  *(unsigned char *)(a2 + 16) = v4;
  return sub_1BFE94AB4(v3, v2, v4);
}

unint64_t destroy for FormatSymbolImage(uint64_t a1)
{
  sub_1BFDEB9E0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v2 = *(unsigned __int16 *)(a1 + 48);
  if (v2 >> 8 <= 0xFE) {
    sub_1BFF61770(*(void *)(a1 + 32), *(void *)(a1 + 40), v2, SBYTE1(v2));
  }
  if ((~*(void *)(a1 + 56) & 0xF000000000000007) != 0)
  {
    swift_release();
    swift_release();
  }
  sub_1BFE94AD4(*(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
  unint64_t result = *(void *)(a1 + 96);
  if ((~result & 0xF000000000000007) != 0)
  {
    return sub_1BFF07CD8(result);
  }
  return result;
}

uint64_t initializeWithCopy for FormatSymbolImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1BFDEB94C(*(void *)a2, v5, v6, v7);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  unsigned int v8 = *(unsigned __int16 *)(a2 + 48);
  if (v8 >> 8 <= 0xFE)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    uint64_t v10 = *(void *)(a2 + 40);
    sub_1BFF61744(v9, v10, *(unsigned __int16 *)(a2 + 48), SBYTE1(v8));
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    *(_WORD *)(a1 + 48) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  }
  uint64_t v11 = *(void *)(a2 + 56);
  if ((~v11 & 0xF000000000000007) != 0)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v12;
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  char v15 = *(unsigned char *)(a2 + 88);
  sub_1BFE94AB4(v13, v14, v15);
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(unsigned char *)(a1 + 88) = v15;
  unint64_t v16 = *(void *)(a2 + 96);
  if ((~v16 & 0xF000000000000007) != 0) {
    sub_1BFF58F10(v16);
  }
  *(void *)(a1 + 96) = v16;
  return a1;
}

uint64_t assignWithCopy for FormatSymbolImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  sub_1BFDEB94C(*(void *)a2, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  char v11 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  sub_1BFDEB9E0(v8, v9, v10, v11);
  uint64_t v12 = (long long *)(a1 + 32);
  uint64_t v13 = (long long *)(a2 + 32);
  unsigned int v14 = *(unsigned __int16 *)(a2 + 48);
  unsigned int v15 = v14 >> 8;
  if (*(unsigned __int8 *)(a1 + 49) == 255)
  {
    if (v15 <= 0xFE)
    {
      uint64_t v18 = *(void *)(a2 + 32);
      uint64_t v19 = *(void *)(a2 + 40);
      sub_1BFF61744(v18, v19, *(unsigned __int16 *)(a2 + 48), SBYTE1(v14));
      *(void *)(a1 + 32) = v18;
      *(void *)(a1 + 40) = v19;
      *(_WORD *)(a1 + 48) = v14;
    }
    else
    {
      long long v16 = *v13;
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *uint64_t v12 = v16;
    }
  }
  else if (v15 <= 0xFE)
  {
    uint64_t v20 = *(void *)(a2 + 32);
    uint64_t v21 = *(void *)(a2 + 40);
    sub_1BFF61744(v20, v21, *(unsigned __int16 *)(a2 + 48), SBYTE1(v14));
    uint64_t v22 = *(void *)(a1 + 32);
    uint64_t v23 = *(void *)(a1 + 40);
    *(void *)(a1 + 32) = v20;
    *(void *)(a1 + 40) = v21;
    uint64_t v24 = *(unsigned __int8 *)(a1 + 48);
    *(unsigned char *)(a1 + 48) = v14;
    char v25 = *(unsigned char *)(a1 + 49);
    *(unsigned char *)(a1 + 49) = BYTE1(v14);
    sub_1BFF61770(v22, v23, v24, v25);
  }
  else
  {
    sub_1C02814D0(a1 + 32);
    __int16 v17 = *(_WORD *)(a2 + 48);
    *uint64_t v12 = *v13;
    *(_WORD *)(a1 + 48) = v17;
  }
  uint64_t v26 = *(void *)(a2 + 56);
  unint64_t v27 = v26 & 0xF000000000000007;
  if ((~*(void *)(a1 + 56) & 0xF000000000000007) == 0)
  {
    if (v27 != 0xF000000000000007)
    {
      *(void *)(a1 + 56) = v26;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_retain();
      swift_retain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v27 == 0xF000000000000007)
  {
    sub_1C0281524(a1 + 56);
LABEL_13:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_15;
  }
  *(void *)(a1 + 56) = v26;
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
LABEL_15:
  uint64_t v28 = *(void *)(a2 + 72);
  uint64_t v29 = *(void *)(a2 + 80);
  char v30 = *(unsigned char *)(a2 + 88);
  sub_1BFE94AB4(v28, v29, v30);
  uint64_t v31 = *(void *)(a1 + 72);
  uint64_t v32 = *(void *)(a1 + 80);
  char v33 = *(unsigned char *)(a1 + 88);
  *(void *)(a1 + 72) = v28;
  *(void *)(a1 + 80) = v29;
  *(unsigned char *)(a1 + 88) = v30;
  sub_1BFE94AD4(v31, v32, v33);
  char v34 = (unint64_t *)(a1 + 96);
  unint64_t v35 = *(void *)(a2 + 96);
  unint64_t v36 = v35 & 0xF000000000000007;
  if ((~*(void *)(a1 + 96) & 0xF000000000000007) != 0)
  {
    if (v36 == 0xF000000000000007)
    {
      sub_1C0281560((unint64_t *)(a1 + 96));
      *char v34 = *(void *)(a2 + 96);
    }
    else
    {
      sub_1BFF58F10(*(void *)(a2 + 96));
      unint64_t v37 = *v34;
      *char v34 = v35;
      sub_1BFF07CD8(v37);
    }
  }
  else
  {
    if (v36 != 0xF000000000000007) {
      sub_1BFF58F10(*(void *)(a2 + 96));
    }
    *char v34 = v35;
  }
  return a1;
}

uint64_t sub_1C02814D0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C0281524(uint64_t a1)
{
  return a1;
}

unint64_t *sub_1C0281560(unint64_t *a1)
{
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FormatSymbolImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  char v9 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  sub_1BFDEB9E0(v6, v7, v8, v9);
  uint64_t v10 = (_OWORD *)(a2 + 32);
  uint64_t v11 = *(unsigned __int16 *)(a1 + 48);
  if (v11 >> 8 > 0xFE) {
    goto LABEL_4;
  }
  unsigned int v12 = *(unsigned __int16 *)(a2 + 48);
  if (v12 >> 8 > 0xFE)
  {
    sub_1C02814D0(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *v10;
    *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
    goto LABEL_6;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v10;
  *(_WORD *)(a1 + 48) = v12;
  sub_1BFF61770(v13, v14, v11, SBYTE1(v11));
LABEL_6:
  uint64_t v15 = *(void *)(a2 + 56);
  if ((~*(void *)(a1 + 56) & 0xF000000000000007) == 0)
  {
LABEL_9:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_11;
  }
  if ((~v15 & 0xF000000000000007) == 0)
  {
    sub_1C0281524(a1 + 56);
    goto LABEL_9;
  }
  *(void *)(a1 + 56) = v15;
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_release();
LABEL_11:
  char v16 = *(unsigned char *)(a2 + 88);
  uint64_t v17 = *(void *)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 80);
  char v19 = *(unsigned char *)(a1 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = v16;
  sub_1BFE94AD4(v17, v18, v19);
  uint64_t v21 = (void *)(a1 + 96);
  unint64_t v20 = *(void *)(a1 + 96);
  uint64_t v22 = *(void *)(a2 + 96);
  if ((~v20 & 0xF000000000000007) != 0)
  {
    if ((~v22 & 0xF000000000000007) != 0)
    {
      *uint64_t v21 = v22;
      sub_1BFF07CD8(v20);
      return a1;
    }
    sub_1C0281560((unint64_t *)(a1 + 96));
  }
  *uint64_t v21 = v22;
  return a1;
}

ValueMetadata *type metadata accessor for FormatSymbolImage()
{
  return &type metadata for FormatSymbolImage;
}

ValueMetadata *type metadata accessor for FormatSymbolImageFill()
{
  return &type metadata for FormatSymbolImageFill;
}

ValueMetadata *type metadata accessor for FormatSymbolImageColor()
{
  return &type metadata for FormatSymbolImageColor;
}

uint64_t sub_1C0281748(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0281790()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C02817C8()
{
  if (!qword_1EB87A698)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A698);
    }
  }
}

uint64_t sub_1C0281824()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C028186C()
{
  sub_1BFF05CCC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  return swift_deallocObject();
}

void *sub_1C02818B8@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_1C0281F34(a1, a2, a3);
}

uint64_t sub_1C02818D0()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_7Tm_0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C028193C()
{
  return objectdestroy_28Tm();
}

id sub_1C0281944(uint64_t a1)
{
  return sub_1C01B7444(a1);
}

uint64_t sub_1C028194C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 80))
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

id sub_1C02819DC(uint64_t a1)
{
  long long v2 = *(void **)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  long long v5 = *(_OWORD *)(v1 + 88);
  v8[2] = *(_OWORD *)(v1 + 72);
  v8[3] = v5;
  v8[4] = *(_OWORD *)(v1 + 104);
  uint64_t v9 = *(void *)(v1 + 120);
  long long v6 = *(_OWORD *)(v1 + 56);
  v8[0] = *(_OWORD *)(v1 + 40);
  v8[1] = v6;
  return sub_1C027D6F8(a1, v2, v3, v4, (uint64_t)v8);
}

uint64_t sub_1C0281A30(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void **)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1E730(v2, v3);
  swift_retain();
  return a1;
}

id sub_1C0281AAC(uint64_t a1)
{
  return sub_1C01B732C(a1, *(id *)(v1 + 16));
}

id sub_1C0281AB4(uint64_t a1)
{
  return sub_1C01B7224(a1, *(id *)(v1 + 16));
}

BOOL sub_1C0281ABC(double a1, uint64_t a2, __int16 a3)
{
  char v3 = HIBYTE(a3);
  switch((char)a3)
  {
    case 1:
      sub_1C151FA4C();
      uint64_t v7 = &qword_1EB85C858;
      uint64_t v8 = (void (*)(uint64_t))sub_1C00920E8;
      goto LABEL_13;
    case 2:
      sub_1C151FA4C();
      sub_1BFDF2820((uint64_t)v11, (uint64_t)v12, &qword_1EB85C858, (void (*)(uint64_t))sub_1C00920E8);
      double v9 = 0.0;
      if (v13) {
        break;
      }
      goto LABEL_16;
    case 3:
      sub_1C151FA4C();
      sub_1BFDF2820((uint64_t)v11, (uint64_t)v12, &qword_1EB85C858, (void (*)(uint64_t))sub_1C00920E8);
      double v9 = 0.0;
      if ((v13 & 1) == 0) {
        double v9 = *(double *)&v12[3];
      }
      break;
    case 4:
      sub_1C151FA5C();
      long long v5 = &qword_1EA198E08;
      long long v6 = (void (*)(uint64_t))sub_1C0281DFC;
      goto LABEL_9;
    case 5:
      sub_1C151FA5C();
      uint64_t v7 = &qword_1EA198E08;
      uint64_t v8 = (void (*)(uint64_t))sub_1C0281DFC;
LABEL_13:
      sub_1BFDF2820((uint64_t)v11, (uint64_t)v12, v7, v8);
      double v9 = 0.0;
      if ((v13 & 1) == 0) {
        double v9 = *(double *)&v12[1];
      }
      break;
    case 6:
      sub_1C151FA5C();
      sub_1BFDF2820((uint64_t)v11, (uint64_t)v12, &qword_1EA198E08, (void (*)(uint64_t))sub_1C0281DFC);
      double v9 = 0.0;
      if (v13 != 1) {
LABEL_16:
      }
        double v9 = *(double *)&v12[2];
      break;
    default:
      sub_1C151FA4C();
      long long v5 = &qword_1EB85C858;
      long long v6 = (void (*)(uint64_t))sub_1C00920E8;
LABEL_9:
      sub_1BFDF2820((uint64_t)v11, (uint64_t)v12, v5, v6);
      double v9 = *(double *)v12;
      if (v13) {
        double v9 = 0.0;
      }
      break;
  }
  switch(v3)
  {
    case 1:
    case 7:
      BOOL result = v9 != a1;
      break;
    case 2:
    case 8:
      BOOL result = v9 < a1;
      break;
    case 3:
    case 9:
      BOOL result = v9 <= a1;
      break;
    case 4:
    case 10:
      BOOL result = v9 > a1;
      break;
    case 5:
    case 11:
      BOOL result = v9 >= a1;
      break;
    default:
      BOOL result = v9 == a1;
      break;
  }
  return result;
}

uint64_t sub_1C0281D80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(void **)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1EAA0(v2, v3);
  swift_release();
  return a1;
}

uint64_t sub_1C0281DFC(uint64_t a1)
{
  uint64_t v1 = qword_1EA198E10;
  if (!qword_1EA198E10)
  {
    MEMORY[0x1F4188790](a1);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v1 = TupleTypeMetadata;
    if (!v3) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA198E10);
    }
  }
  return v1;
}

uint64_t sub_1C0281EE0()
{
  return objectdestroy_28Tm();
}

uint64_t sub_1C0281EE8()
{
  return objectdestroy_28Tm();
}

uint64_t sub_1C0281EF0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void *sub_1C0281F34@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(v3 + 16);
  unint64_t v7 = *a1;
  long long v8 = *(_OWORD *)(v6 + 48);
  void v11[2] = *(_OWORD *)(v6 + 32);
  v11[3] = v8;
  v11[4] = *(_OWORD *)(v6 + 64);
  uint64_t v12 = *(void *)(v6 + 80);
  long long v9 = *(_OWORD *)(v6 + 16);
  v11[0] = *(_OWORD *)v6;
  v11[1] = v9;
  BOOL result = sub_1C0279900((uint64_t)v11, v7, a3);
  if (v4) {
    *a2 = v4;
  }
  return result;
}

uint64_t sub_1C0281F98()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0281FE0()
{
  return swift_deallocObject();
}

uint64_t sub_1C0281FF0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_83Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C028207C()
{
  return swift_deallocObject();
}

uint64_t sub_1C028208C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_1C02820F4@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t)@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, void (*a5)(uint64_t *__return_ptr, unint64_t *, uint64_t *)@<X4>, void *a6@<X8>)
{
  BOOL result = sub_1C0000C48(*(void *)(v6 + 16), *a1, a3, a4, a5, a6);
  if (v7) {
    *a2 = v7;
  }
  return result;
}

uint64_t sub_1C0282134()
{
  return objectdestroy_28Tm();
}

uint64_t sub_1C028213C()
{
  uint64_t v1 = type metadata accessor for FormatDecorationContext();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);

  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v2;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v2 + 48))
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  uint64_t v4 = v3 + *(int *)(v1 + 28);
  uint64_t v5 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = v3 + *(int *)(v1 + 32);
  uint64_t v7 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C02822F8()
{
  return swift_deallocObject();
}

uint64_t sub_1C0282330()
{
  return swift_deallocObject();
}

uint64_t sub_1C0282368()
{
  return swift_deallocObject();
}

uint64_t sub_1C02823A0(void *a1, void *a2)
{
  return sub_1C0282484(a1, a2, (uint64_t (*)(void, void))sub_1C027987C);
}

uint64_t sub_1C02823D0()
{
  return objectdestroy_28Tm();
}

uint64_t sub_1C02823DC(uint64_t a1)
{
  return sub_1C0282470(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1C027D590);
}

uint64_t sub_1C02823F8()
{
  return objectdestroy_28Tm();
}

uint64_t objectdestroy_180Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C0282458(uint64_t a1)
{
  return sub_1C0282470(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1C027D440);
}

uint64_t sub_1C0282470(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1C0282484(void *a1, void *a2, uint64_t (*a3)(void, void))
{
  uint64_t result = a3(**(void **)(v3 + 16), *a1);
  if (v4) {
    *a2 = v4;
  }
  return result;
}

void *sub_1C02824C4@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_1C02820F4(a1, a2, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1C027D124, (uint64_t (*)(uint64_t, uint64_t))sub_1C027A474, (void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1C02824C4, a3);
}

uint64_t sub_1C028251C()
{
  return objectdestroy_28Tm();
}

uint64_t sub_1C0282524(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C028258C()
{
  uint64_t v1 = *(void *)(type metadata accessor for FormatOptionsNodeStatementContext() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);

  swift_release();
  swift_bridgeObjectRelease();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    unint64_t v5 = v0 + v2 + *(int *)(v4 + 48);
    sub_1BFF81FF0();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

id sub_1C02826C4(uint64_t a1)
{
  return sub_1BFDF2D84(a1, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext, (uint64_t (*)(id, uint64_t, uint64_t))sub_1C027C3AC, (uint64_t (*)(id, uint64_t, unint64_t))sub_1C027895C);
}

void *sub_1C0282704@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_1C02828BC(a1, a2, a3);
}

uint64_t objectdestroy_25Tm()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1C0282764(uint64_t a1)
{
  return sub_1C09FE498(a1, *(id *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t sub_1C0282774()
{
  return objectdestroy_28Tm();
}

uint64_t objectdestroy_28Tm()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C02827C4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 88))
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

id sub_1C0282864(uint64_t a1)
{
  unint64_t v2 = *(void **)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  long long v5 = *(_OWORD *)(v1 + 88);
  long long v6 = *(_OWORD *)(v1 + 120);
  void v9[4] = *(_OWORD *)(v1 + 104);
  v9[5] = v6;
  uint64_t v10 = *(void *)(v1 + 136);
  long long v7 = *(_OWORD *)(v1 + 56);
  v9[0] = *(_OWORD *)(v1 + 40);
  v9[1] = v7;
  v9[2] = *(_OWORD *)(v1 + 72);
  v9[3] = v5;
  return sub_1C027D46C(a1, v2, v3, v4, (uint64_t)v9);
}

void *sub_1C02828BC@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(v3 + 16);
  unint64_t v7 = *a1;
  long long v8 = *(_OWORD *)(v6 + 80);
  void v12[4] = *(_OWORD *)(v6 + 64);
  v12[5] = v8;
  uint64_t v13 = *(void *)(v6 + 96);
  long long v9 = *(_OWORD *)(v6 + 16);
  v12[0] = *(_OWORD *)v6;
  v12[1] = v9;
  long long v10 = *(_OWORD *)(v6 + 48);
  _OWORD v12[2] = *(_OWORD *)(v6 + 32);
  v12[3] = v10;
  uint64_t result = sub_1C0279648((uint64_t)v12, v7, a3);
  if (v4) {
    *a2 = v4;
  }
  return result;
}

uint64_t sub_1C0282AD0(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    long long v9 = (uint64_t *)(a3 + 40);
    do
    {
      uint64_t v10 = v9[4];
      uint64_t v11 = v9[5];
      uint64_t v13 = *v9;
      uint64_t v12 = v9[1];
      v16[0] = *(v9 - 1);
      v16[1] = v13;
      unint64_t v16[2] = v12;
      long long v17 = *((_OWORD *)v9 + 1);
      uint64_t v18 = v10;
      uint64_t v19 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v15, v16);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = swift_bridgeObjectRelease();
      if (v15)
      {
        MEMORY[0x1C18C66D0](v14);
        if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v9 += 7;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v20;
  }
  return result;
}

unint64_t sub_1C0282C6C(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a2;
  sub_1C028A4E0(0);
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0181BEC(0);
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v26 = (uint64_t)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v24 = (uint64_t)&v22 - v14;
  uint64_t v25 = *(void *)(a3 + 16);
  if (!v25) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v22 = v13;
  uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  unint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v23 = a1;
  do
  {
    char v28 = *(unsigned char *)(a3 + v16 + 32);
    a1(&v28);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    if ((*v15)(v8, 1, v10) == 1)
    {
      sub_1BFF5B58C((uint64_t)v8, (uint64_t (*)(void))sub_1C028A4E0);
    }
    else
    {
      uint64_t v18 = v24;
      sub_1BFF976E8((uint64_t)v8, v24, (uint64_t (*)(void))sub_1C0181BEC);
      sub_1BFF976E8(v18, v26, (uint64_t (*)(void))sub_1C0181BEC);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_1C0EDFFC4(0, *(void *)(v17 + 16) + 1, 1, v17);
      }
      unint64_t v20 = *(void *)(v17 + 16);
      unint64_t v19 = *(void *)(v17 + 24);
      if (v20 >= v19 >> 1) {
        unint64_t v17 = sub_1C0EDFFC4(v19 > 1, v20 + 1, 1, v17);
      }
      *(void *)(v17 + 16) = v20 + 1;
      sub_1BFF976E8(v26, v17+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v20, (uint64_t (*)(void))sub_1C0181BEC);
      a1 = v23;
    }
    ++v16;
  }
  while (v25 != v16);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1C0282F68(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (a3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1C15204BC())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C18C7CB0](i - 4, a3) : *(id *)(a3 + 8 * i);
      long long v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v12)
      {
        MEMORY[0x1C18C66D0]();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

void *sub_1C0283108(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = (uint64_t *)(a3 + 40);
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v8 = *v5;
    uint64_t v9 = v5[1];
    uint64_t v10 = v5[2];
    uint64_t v11 = v5[3];
    uint64_t v12 = v5[4];
    v30[0] = *(v5 - 1);
    v30[1] = v8;
    v30[2] = v9;
    _OWORD v30[3] = v10;
    v30[4] = v11;
    v30[5] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v13 = v31;
    a1(&v25, v30);
    if (v13)
    {
      uint64_t v6 = v13;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v31 = 0;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((void)v26)
    {
      long long v24 = v26;
      uint64_t v14 = v25;
      long long v22 = v28;
      long long v23 = v27;
      uint64_t v15 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1C0EDFD18(0, v6[2] + 1, 1, v6);
      }
      unint64_t v17 = v6[2];
      unint64_t v16 = v6[3];
      long long v18 = v24;
      if (v17 >= v16 >> 1)
      {
        unint64_t v19 = sub_1C0EDFD18((void *)(v16 > 1), v17 + 1, 1, v6);
        long long v18 = v24;
        uint64_t v6 = v19;
      }
      _OWORD v6[2] = v17 + 1;
      id v7 = &v6[8 * v17];
      v7[4] = v14;
      *(_OWORD *)(v7 + 5) = v18;
      *(_OWORD *)(v7 + 7) = v23;
      *(_OWORD *)(v7 + 9) = v22;
      v7[11] = v15;
    }
    v5 += 6;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v6;
}

void *sub_1C0283324(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  v22[4] = a3;
  uint64_t v8 = (uint64_t *)(a3 + 48);
  uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v11 = *(v8 - 1);
    uint64_t v12 = *v8;
    v22[0] = *(v8 - 2);
    v22[1] = v11;
    _OWORD v22[2] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(&v20, v22);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((void)v21)
    {
      long long v19 = v21;
      uint64_t v13 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_1C0EE07A8(0, v9[2] + 1, 1, v9);
      }
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      long long v16 = v19;
      if (v15 >= v14 >> 1)
      {
        unint64_t v17 = sub_1C0EE07A8((void *)(v14 > 1), v15 + 1, 1, v9);
        long long v16 = v19;
        uint64_t v9 = v17;
      }
      v9[2] = v15 + 1;
      uint64_t v10 = &v9[3 * v15];
      void v10[4] = v13;
      *(_OWORD *)(v10 + 5) = v16;
    }
    v8 += 3;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_1C02834C0(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a1;
  sub_1C028A500(0);
  MEMORY[0x1F4188790](v5 - 8);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for FormatSourceItemTipSource();
  MEMORY[0x1F4188790](v24);
  uint64_t v23 = (uint64_t)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v22 = (uint64_t)&v20 - v11;
  uint64_t v12 = *(void *)(a3 + 16);
  if (!v12) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v20 = v10;
  uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  uint64_t v14 = 0;
  unint64_t v15 = MEMORY[0x1E4FBC860];
  uint64_t v21 = a3;
  do
  {
    uint64_t v26 = *(void *)(a3 + 8 * v14 + 32);
    swift_retain();
    v25(&v26);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v15;
    }
    swift_release();
    if ((*v13)(v7, 1, v24) == 1)
    {
      sub_1BFF5B58C((uint64_t)v7, (uint64_t (*)(void))sub_1C028A500);
    }
    else
    {
      uint64_t v16 = v22;
      sub_1BFF976E8((uint64_t)v7, v22, (uint64_t (*)(void))type metadata accessor for FormatSourceItemTipSource);
      sub_1BFF976E8(v16, v23, (uint64_t (*)(void))type metadata accessor for FormatSourceItemTipSource);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v15 = sub_1C0EE1D0C(0, *(void *)(v15 + 16) + 1, 1, v15);
      }
      unint64_t v18 = *(void *)(v15 + 16);
      unint64_t v17 = *(void *)(v15 + 24);
      if (v18 >= v17 >> 1) {
        unint64_t v15 = sub_1C0EE1D0C(v17 > 1, v18 + 1, 1, v15);
      }
      *(void *)(v15 + 16) = v18 + 1;
      sub_1BFF976E8(v23, v15+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v18, (uint64_t (*)(void))type metadata accessor for FormatSourceItemTipSource);
      a3 = v21;
    }
    ++v14;
  }
  while (v12 != v14);
  swift_bridgeObjectRelease();
  return v15;
}

void *sub_1C02837C0(void (*a1)(long long *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  id v7 = (uint64_t *)(a3 + 48);
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v26 = v4;
    uint64_t v25 = v5;
    char v34 = v8;
    uint64_t v8 = (void *)*(v7 - 2);
    uint64_t v9 = *(v7 - 1);
    uint64_t v11 = *v7;
    uint64_t v10 = v7[1];
    uint64_t v12 = v7[2];
    uint64_t v13 = v7[3];
    uint64_t v15 = v7[4];
    uint64_t v14 = v7[5];
    v33[0] = v8;
    v33[1] = v9;
    v33[2] = v11;
    _OWORD v33[3] = v10;
    v33[4] = v12;
    v33[5] = v13;
    v33[6] = v15;
    v33[7] = v14;
    sub_1C0007DB4((uint64_t)v8, v9, v11, v10);
    sub_1C0007EEC(v12, v13, v15);
    swift_retain();
    a1(&v28, v33);
    uint64_t v4 = v26;
    if (v26)
    {
      sub_1C0007E38((uint64_t)v8, v9, v11, v10);
      sub_1C0007E9C(v12, v13, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return v8;
    }
    sub_1C0007E38((uint64_t)v8, v9, v11, v10);
    sub_1C0007E9C(v12, v13, v15);
    swift_release();
    uint64_t v16 = v32;
    if (v32 == 1)
    {
      uint64_t v8 = v34;
    }
    else
    {
      long long v27 = v28;
      char v18 = v29;
      uint64_t v17 = v30;
      char v19 = v31;
      uint64_t v8 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1C0EE2184(0, v8[2] + 1, 1, v8);
      }
      unint64_t v21 = v8[2];
      unint64_t v20 = v8[3];
      if (v21 >= v20 >> 1) {
        uint64_t v8 = sub_1C0EE2184((void *)(v20 > 1), v21 + 1, 1, v8);
      }
      v8[2] = v21 + 1;
      uint64_t v22 = &v8[6 * v21];
      *((_OWORD *)v22 + 2) = v27;
      *((unsigned char *)v22 + 48) = v18 & 1;
      _OWORD v22[7] = v17;
      *((unsigned char *)v22 + 64) = v19 & 1;
      v22[9] = v16;
    }
    v7 += 8;
    uint64_t v5 = v25 - 1;
  }
  while (v25 != 1);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_1C02839E8(void (*a1)(long long *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = (uint64_t *)(a3 + 48);
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v21 = v3;
    uint64_t v24 = v6;
    uint64_t v7 = *v5;
    uint64_t v8 = v5[1];
    uint64_t v9 = v5[2];
    uint64_t v10 = v5[3];
    uint64_t v11 = v5[4];
    uint64_t v6 = (void *)v5[5];
    uint64_t v12 = v5[6];
    uint64_t v13 = *(v5 - 1);
    v26[0] = *(v5 - 2);
    v26[1] = v13;
    _OWORD v26[2] = v7;
    v26[3] = v8;
    v26[4] = v9;
    v26[5] = v10;
    v26[6] = v11;
    _OWORD v26[7] = v6;
    v26[8] = v12;
    swift_bridgeObjectRetain();
    uint64_t v22 = v11;
    sub_1C028A540(v7, v8, v9, v10, v11, (unint64_t)v6);
    uint64_t v14 = v27;
    a1(&v25, v26);
    if (v14)
    {
      swift_bridgeObjectRelease();
      sub_1C019BAA8(v7, v8, v9, v10, v22, (unint64_t)v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v27 = 0;
    swift_bridgeObjectRelease();
    sub_1C019BAA8(v7, v8, v9, v10, v22, (unint64_t)v6);
    if ((void)v25)
    {
      long long v23 = v25;
      uint64_t v6 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1C0EE2C14(0, v24[2] + 1, 1, v24);
      }
      unint64_t v16 = v6[2];
      unint64_t v15 = v6[3];
      long long v17 = v23;
      if (v16 >= v15 >> 1)
      {
        char v18 = sub_1C0EE2C14((void *)(v15 > 1), v16 + 1, 1, v6);
        long long v17 = v23;
        uint64_t v6 = v18;
      }
      _OWORD v6[2] = v16 + 1;
      *(_OWORD *)&v6[2 * v16 + 4] = v17;
    }
    else
    {
      uint64_t v6 = v24;
    }
    v5 += 9;
    uint64_t v3 = v21 - 1;
  }
  while (v21 != 1);
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1C0283C00(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  sub_1C028A4E0(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0181BEC(0);
  uint64_t v26 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v25 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(a3 + 16);
  if (!v15) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v22 = a3;
  uint64_t v23 = v12;
  unint64_t v16 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v24 = a1;
  do
  {
    while (1)
    {
      a1(v17);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v18;
      }
      if ((*v16)(v8, 1, v26) != 1) {
        break;
      }
      uint64_t v17 = sub_1BFF5B58C((uint64_t)v8, (uint64_t (*)(void))sub_1C028A4E0);
      if (!--v15) {
        goto LABEL_14;
      }
    }
    sub_1BFF976E8((uint64_t)v8, (uint64_t)v14, (uint64_t (*)(void))sub_1C0181BEC);
    sub_1BFF976E8((uint64_t)v14, v25, (uint64_t (*)(void))sub_1C0181BEC);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v18 = sub_1C0EDFFC4(0, *(void *)(v18 + 16) + 1, 1, v18);
    }
    unint64_t v20 = *(void *)(v18 + 16);
    unint64_t v19 = *(void *)(v18 + 24);
    if (v20 >= v19 >> 1) {
      unint64_t v18 = sub_1C0EDFFC4(v19 > 1, v20 + 1, 1, v18);
    }
    *(void *)(v18 + 16) = v20 + 1;
    uint64_t v17 = sub_1BFF976E8(v25, v18+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v20, (uint64_t (*)(void))sub_1C0181BEC);
    a1 = v24;
    --v15;
  }
  while (v15);
LABEL_14:
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_1C0283EC8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  sub_1C028A5AC(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedItemAuxiliaryItem();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v30 = (uint64_t)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v28 = (uint64_t)&v24 - v14;
  uint64_t v15 = *(void *)(a3 + 16);
  if (!v15) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v16 = *(void *)(type metadata accessor for FormatContentSlotItemResolution() - 8);
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v25 = v11;
  unint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v29 = *(void *)(v16 + 72);
  uint64_t v24 = a3;
  swift_bridgeObjectRetain();
  unint64_t v19 = MEMORY[0x1E4FBC860];
  uint64_t v26 = v10;
  uint64_t v27 = a2;
  do
  {
    a1(v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    if ((*v18)(v9, 1, v10) == 1)
    {
      sub_1BFF5B58C((uint64_t)v9, (uint64_t (*)(void))sub_1C028A5AC);
    }
    else
    {
      uint64_t v20 = v28;
      sub_1BFF976E8((uint64_t)v9, v28, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
      sub_1BFF976E8(v20, v30, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v19 = sub_1C0EE364C(0, *(void *)(v19 + 16) + 1, 1, v19);
      }
      unint64_t v22 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      if (v22 >= v21 >> 1) {
        unint64_t v19 = sub_1C0EE364C(v21 > 1, v22 + 1, 1, v19);
      }
      *(void *)(v19 + 16) = v22 + 1;
      sub_1BFF976E8(v30, v19+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v22, (uint64_t (*)(void))type metadata accessor for FeedItemAuxiliaryItem);
      uint64_t v10 = v26;
    }
    v17 += v29;
    --v15;
  }
  while (v15);
  swift_bridgeObjectRelease();
  return v19;
}

void *sub_1C0284200(void (*a1)(void *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = (uint64_t *)(a3 + 48);
  uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    unint64_t v10 = *(v7 - 1);
    uint64_t v11 = *v7;
    v20[0] = *(v7 - 2);
    v20[1] = v10;
    _OWORD v20[2] = v11;
    swift_bridgeObjectRetain();
    sub_1BFE60260(v10);
    a1(v19, v20);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_1BFD7F858(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    sub_1BFD7F858(v10);
    uint64_t v12 = v19[0];
    if (v19[0])
    {
      uint64_t v13 = v19[1];
      uint64_t v14 = v19[2];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1BFE608A0(0, v8[2] + 1, 1, v8);
      }
      unint64_t v16 = v8[2];
      unint64_t v15 = v8[3];
      if (v16 >= v15 >> 1) {
        uint64_t v8 = sub_1BFE608A0((void *)(v15 > 1), v16 + 1, 1, v8);
      }
      v8[2] = v16 + 1;
      uint64_t v9 = &v8[3 * v16];
      void v9[4] = v12;
      v9[5] = v13;
      _OWORD v9[6] = v14;
    }
    v7 += 3;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_1C0284398(void (*a1)(void *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v6 = a3 + 32;
  uint64_t v14 = a3;
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    a1(v11, v6);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
    if (v12 == 255)
    {
      sub_1C0289EB8((uint64_t)v11, &qword_1EA198E40, (uint64_t)&type metadata for HGroupLayoutContext);
    }
    else
    {
      sub_1C028A5EC((uint64_t)v11, (uint64_t)v13);
      sub_1C028A5EC((uint64_t)v13, (uint64_t)v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_1C0EE60B8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v9 = v7[2];
      unint64_t v8 = v7[3];
      if (v9 >= v8 >> 1) {
        uint64_t v7 = sub_1C0EE60B8((void *)(v8 > 1), v9 + 1, 1, v7);
      }
      _OWORD v7[2] = v9 + 1;
      sub_1C028A5EC((uint64_t)v11, (uint64_t)&v7[50 * v9 + 4]);
    }
    v6 += 288;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C0284514(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = a3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v16 = v6;
    do
    {
      uint64_t v8 = *(void *)(v6 + v7 + 88);
      uint64_t v9 = *(void *)(v6 + v7 + 96);
      char v10 = *(unsigned char *)(v6 + v7 + 104);
      uint64_t v11 = *(void *)(v6 + v7 + 72);
      uint64_t v12 = *(void *)(v6 + v7 + 80);
      uint64_t v14 = *(void *)(v6 + v7 + 40);
      uint64_t v13 = *(void *)(v6 + v7 + 48);
      v19[0] = *(void *)(v6 + v7 + 32);
      v19[1] = v14;
      long long v19[2] = v13;
      long long v20 = *(_OWORD *)(v6 + v7 + 56);
      uint64_t v21 = v11;
      uint64_t v22 = v12;
      uint64_t v23 = v8;
      uint64_t v24 = v9;
      char v25 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v18, v19);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = swift_bridgeObjectRelease();
      if (v18)
      {
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v7 += 80;
      --v5;
      uint64_t v3 = 0;
      uint64_t v6 = v16;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v26;
  }
  return result;
}

uint64_t sub_1C02846F8(void (*a1)(void *__return_ptr, void), uint64_t a2, uint64_t a3)
{
  return sub_1BFFC3B2C(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseItem, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1C0EDF770);
}

uint64_t sub_1C0284738(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v7 = *(void *)(a3 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (uint64_t *)(a3 + 72);
    do
    {
      uint64_t v10 = *(v9 - 1);
      uint64_t v11 = *v9;
      uint64_t v12 = *(v9 - 3);
      uint64_t v13 = *(v9 - 2);
      uint64_t v14 = *(v9 - 4);
      v17[0] = *(v9 - 5);
      v17[1] = v14;
      uint64_t v17[2] = v12;
      uint64_t v17[3] = v13;
      v17[4] = v10;
      v17[5] = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v16, v17);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = swift_bridgeObjectRelease();
      if (v16)
      {
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v9 += 6;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v18;
  }
  return result;
}

uint64_t sub_1C02848BC(void *(*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_1BFDE62FC(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for SportsDataVisualizationResponseScoreItem);
}

uint64_t sub_1C02848E8(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t *)(a3 + 56);
    do
    {
      uint64_t v7 = *(v6 - 2);
      uint64_t v8 = *(v6 - 1);
      uint64_t v9 = *v6;
      uint64_t v11 = v6[1];
      uint64_t v10 = v6[2];
      uint64_t v13 = v6[3];
      uint64_t v12 = v6[4];
      uint64_t v14 = v6[5];
      uint64_t v15 = v6[6];
      v21[0] = *(v6 - 3);
      v21[1] = v7;
      v21[2] = v8;
      v21[3] = v9;
      void v21[4] = v11;
      _OWORD v21[5] = v10;
      uint64_t v18 = v4;
      v21[6] = v13;
      _OWORD v21[7] = v12;
      v21[8] = v14;
      v21[9] = v15;
      sub_1BFEE0A78();
      a1(&v20, v21);
      uint64_t v16 = sub_1C0033494();
      if (v19)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      if (v20)
      {
        MEMORY[0x1C18C66D0](v16);
        if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
      v6 += 10;
      --v4;
    }
    while (v18 != 1);
    swift_bridgeObjectRelease();
    return v22;
  }
  return result;
}

uint64_t FeedModelFactory.create<A>(headline:context:namespace:metadata:nativeAdInfo:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v39 = a6;
  uint64_t v43 = a9;
  uint64_t v44 = a8;
  uint64_t v41 = a7;
  uint64_t v42 = a5;
  uint64_t v38 = a2;
  uint64_t v12 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v40);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v37 - v21;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C1527210;
  *(void *)(v23 + 32) = a3;
  *(void *)(v23 + 40) = a4;
  swift_bridgeObjectRetain();
  id v24 = objc_msgSend(a1, sel_identifier);
  uint64_t v25 = sub_1C151E62C();
  uint64_t v27 = v26;

  *(void *)(v23 + 48) = v25;
  *(void *)(v23 + 56) = v27;
  uint64_t v45 = v23;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v28 = sub_1C151E55C();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = v28;
  uint64_t v32 = v38;
  sub_1BFDB60D4(v31, v30, a1, v38, v39, (uint64_t)v22);
  swift_bridgeObjectRelease();
  sub_1BFDB5E54((uint64_t)v22, (uint64_t)v19, type metadata accessor for FeedHeadline);
  sub_1BFDB5E54((uint64_t)v32, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v33 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v42, v41);
  uint64_t v34 = sub_1C002C76C(&qword_1EB886BB8, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  uint64_t v35 = sub_1C002C76C(&qword_1EB873770, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  FeedModel<>.init(model:context:namespace:metadata:)((uint64_t)v19, (uint64_t)v17, 0, 0, (uint64_t)v14, v40, v33, v34, v43, v35, v44);
  return sub_1BFF5B58C((uint64_t)v22, type metadata accessor for FeedHeadline);
}

uint64_t FeedModelFactory.create(headline:context:namespace:nativeAdInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v41 = a3;
  uint64_t v42 = a6;
  uint64_t v43 = a7;
  uint64_t v11 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v40 = (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFFCF8C(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FeedHeadline(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v39 = (uint64_t)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v38 - v20;
  uint64_t v22 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C1527210;
  *(void *)(v23 + 32) = a4;
  *(void *)(v23 + 40) = a5;
  *(void *)(v23 + 48) = a1;
  *(void *)(v23 + 56) = a2;
  uint64_t v44 = v23;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v22, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_1C151E55C();
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = v41;
  sub_1C13BB020(v24, v26, v41, v42, (uint64_t)v15);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BFF5B58C((uint64_t)v15, (uint64_t (*)(void))sub_1BFFFCF8C);
    sub_1BFDB5FF4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v43, 1, 1, v28);
  }
  else
  {
    sub_1BFF976E8((uint64_t)v15, (uint64_t)v21, type metadata accessor for FeedHeadline);
    uint64_t v30 = v39;
    sub_1BFDB5E54((uint64_t)v21, v39, type metadata accessor for FeedHeadline);
    uint64_t v31 = v40;
    sub_1BFDB5E54((uint64_t)v27, v40, (uint64_t (*)(void))type metadata accessor for FeedContext);
    uint64_t v32 = v30;
    uint64_t v33 = v43;
    sub_1BFF976E8(v32, v43, type metadata accessor for FeedHeadline);
    sub_1BFDB5FF4();
    uint64_t v35 = v34;
    sub_1BFF976E8(v31, v33 + *(int *)(v34 + 52), (uint64_t (*)(void))type metadata accessor for FeedContext);
    unint64_t v36 = (void *)(v33 + *(int *)(v35 + 56));
    *unint64_t v36 = 0;
    v36[1] = 0;
    uint64_t v37 = (uint64_t (**)())(v33 + *(int *)(v35 + 64));
    *uint64_t v37 = sub_1BFE31C54;
    v37[1] = 0;
    sub_1BFF5B58C((uint64_t)v21, type metadata accessor for FeedHeadline);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v33, 0, 1, v35);
  }
}

uint64_t FeedModelFactory.create(issue:context:namespace:traits:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, _OWORD *a6@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v11 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a5;
  int v35 = *((unsigned __int8 *)a5 + 8);
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C1527210;
  *(void *)(v16 + 32) = a3;
  *(void *)(v16 + 40) = a4;
  swift_bridgeObjectRetain();
  id v17 = objc_msgSend(a1, sel_identifier);
  uint64_t v18 = sub_1C151E62C();
  uint64_t v20 = v19;

  *(void *)(v16 + 48) = v18;
  *(void *)(v16 + 56) = v20;
  *(void *)&long long v39 = v16;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v15, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v21 = sub_1C151E55C();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  *(void *)&long long v39 = v14;
  BYTE8(v39) = v35;
  uint64_t v24 = v36;
  sub_1C149DE5C(v21, v23, a1, v36, (uint64_t)&v39, (uint64_t)v37);
  swift_bridgeObjectRelease();
  long long v45 = v37[6];
  v46[0] = v38[0];
  *(_OWORD *)((char *)v46 + 9) = *(_OWORD *)((char *)v38 + 9);
  long long v41 = v37[2];
  long long v42 = v37[3];
  long long v43 = v37[4];
  long long v44 = v37[5];
  long long v39 = v37[0];
  long long v40 = v37[1];
  sub_1BFDB5E54(v24, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FeedContext);
  long long v25 = v46[0];
  a6[6] = v45;
  a6[7] = v25;
  *(_OWORD *)((char *)a6 + 121) = *(_OWORD *)((char *)v46 + 9);
  long long v26 = v42;
  a6[2] = v41;
  a6[3] = v26;
  long long v27 = v44;
  a6[4] = v43;
  a6[5] = v27;
  long long v28 = v40;
  *a6 = v39;
  a6[1] = v28;
  sub_1C028A270(0, &qword_1EA1AF940, (void (*)(void))sub_1C0289E10, (void (*)(void))sub_1C008617C);
  uint64_t v30 = v29;
  uint64_t result = sub_1BFF976E8((uint64_t)v13, (uint64_t)a6 + *(int *)(v29 + 52), (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v32 = (void *)((char *)a6 + *(int *)(v30 + 56));
  *uint64_t v32 = 0;
  v32[1] = 0;
  uint64_t v33 = (uint64_t (**)())((char *)a6 + *(int *)(v30 + 64));
  *uint64_t v33 = sub_1BFE31C54;
  v33[1] = 0;
  return result;
}

uint64_t (*FeedModelFactory.create<A>(issue:context:namespace:metadata:traits:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>))()
{
  uint64_t v37 = a2;
  uint64_t v40 = a9;
  uint64_t v41 = a8;
  uint64_t v38 = a7;
  uint64_t v39 = a5;
  uint64_t v13 = *(void *)(a7 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v15 = &v34[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = &v34[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v36 = *a6;
  int v35 = *((unsigned __int8 *)a6 + 8);
  uint64_t v19 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1C1527210;
  *(void *)(v20 + 32) = a3;
  *(void *)(v20 + 40) = a4;
  swift_bridgeObjectRetain();
  id v21 = objc_msgSend(a1, sel_identifier);
  uint64_t v22 = sub_1C151E62C();
  uint64_t v24 = v23;

  *(void *)(v20 + 48) = v22;
  *(void *)(v20 + 56) = v24;
  *(void *)&v44[0] = v20;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v19, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v25 = sub_1C151E55C();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  *(void *)&v42[0] = v36;
  BYTE8(v42[0]) = v35;
  uint64_t v28 = v25;
  uint64_t v29 = v37;
  sub_1C149DE5C(v28, v27, a1, v37, (uint64_t)v42, (uint64_t)v44);
  swift_bridgeObjectRelease();
  v42[6] = v44[6];
  v43[0] = v45[0];
  *(_OWORD *)((char *)v43 + 9) = *(_OWORD *)((char *)v45 + 9);
  v42[2] = v44[2];
  v42[3] = v44[3];
  v42[4] = v44[4];
  v42[5] = v44[5];
  v42[0] = v44[0];
  v42[1] = v44[1];
  sub_1BFDB5E54(v29, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v30 = v38;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, v39, v38);
  unint64_t v31 = sub_1C0289E10();
  unint64_t v32 = sub_1C008617C();
  return FeedModel<>.init(model:context:namespace:metadata:)((uint64_t)v42, (uint64_t)v18, 0, 0, (uint64_t)v15, (uint64_t)&type metadata for FeedIssue, v30, v31, v40, v32, v41);
}

uint64_t FeedModelFactory.create(tag:context:namespace:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1527210;
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = a4;
  swift_bridgeObjectRetain();
  id v15 = objc_msgSend(a1, sel_identifier);
  uint64_t v16 = sub_1C151E62C();
  uint64_t v18 = v17;

  *(void *)(v14 + 48) = v16;
  *(void *)(v14 + 56) = v18;
  v34[0] = v14;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v13, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v19 = sub_1C151E55C();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  sub_1C0E80414(v19, v21, a1, (uint64_t)v34);
  swift_bridgeObjectRelease();
  sub_1BFEA435C((uint64_t)v34, (uint64_t)v32);
  sub_1BFDB5E54(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedContext);
  long long v22 = v32[7];
  *(_OWORD *)(a5 + 96) = v32[6];
  *(_OWORD *)(a5 + 112) = v22;
  *(_OWORD *)(a5 + 128) = v32[8];
  *(unsigned char *)(a5 + 144) = v33;
  long long v23 = v32[3];
  *(_OWORD *)(a5 + 32) = v32[2];
  *(_OWORD *)(a5 + 48) = v23;
  long long v24 = v32[5];
  *(_OWORD *)(a5 + 64) = v32[4];
  *(_OWORD *)(a5 + 80) = v24;
  long long v25 = v32[1];
  *(_OWORD *)a5 = v32[0];
  *(_OWORD *)(a5 + 16) = v25;
  sub_1C028A270(0, &qword_1EB86FB20, (void (*)(void))sub_1C0289E64, (void (*)(void))sub_1C0086784);
  uint64_t v27 = v26;
  sub_1BFF976E8((uint64_t)v12, a5 + *(int *)(v26 + 52), (uint64_t (*)(void))type metadata accessor for FeedContext);
  uint64_t v28 = (void *)(a5 + *(int *)(v27 + 56));
  *uint64_t v28 = 0;
  v28[1] = 0;
  uint64_t v29 = (uint64_t (**)())(a5 + *(int *)(v27 + 64));
  *uint64_t v29 = sub_1BFE31C54;
  v29[1] = 0;
  return sub_1BFEA4290((uint64_t)v34);
}

uint64_t FeedModelFactory.create<A>(tag:context:namespace:metadata:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v34 = a8;
  uint64_t v35 = a7;
  uint64_t v33 = a5;
  uint64_t v12 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1C1527210;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  swift_bridgeObjectRetain();
  id v19 = objc_msgSend(a1, sel_identifier);
  uint64_t v20 = sub_1C151E62C();
  uint64_t v22 = v21;

  *(void *)(v18 + 48) = v20;
  *(void *)(v18 + 56) = v22;
  v37[0] = v18;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v23 = sub_1C151E55C();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a1;
  uint64_t v27 = v32;
  sub_1C0E80414(v23, v25, v26, (uint64_t)v37);
  swift_bridgeObjectRelease();
  sub_1BFEA435C((uint64_t)v37, (uint64_t)v36);
  sub_1BFDB5E54(v27, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeedContext);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v33, a6);
  unint64_t v28 = sub_1C0289E64();
  unint64_t v29 = sub_1C0086784();
  FeedModel<>.init(model:context:namespace:metadata:)((uint64_t)v36, (uint64_t)v17, 0, 0, (uint64_t)v14, (uint64_t)&type metadata for FeedTag, a6, v28, v34, v29, v35);
  return sub_1BFEA4290((uint64_t)v37);
}

uint64_t FeedModelFactory.create(tag:context:namespace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C1527210;
  *(void *)(v16 + 32) = a4;
  *(void *)(v16 + 40) = a5;
  *(void *)(v16 + 48) = a1;
  *(void *)(v16 + 56) = a2;
  *(void *)&v41[0] = v16;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v15, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C151E55C();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  sub_1C0E80554(v17, v19, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  if (*((void *)&v31 + 1))
  {
    v41[6] = v37;
    v41[7] = v38;
    v41[8] = v39;
    char v42 = v40;
    long long v41[2] = v33;
    v41[3] = v34;
    v41[4] = v35;
    v41[5] = v36;
    v41[0] = v31;
    v41[1] = v32;
    sub_1BFEA435C((uint64_t)v41, (uint64_t)&v31);
    sub_1BFDB5E54(a3, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedContext);
    long long v20 = v38;
    *(_OWORD *)(a6 + 96) = v37;
    *(_OWORD *)(a6 + 112) = v20;
    *(_OWORD *)(a6 + 128) = v39;
    *(unsigned char *)(a6 + 144) = v40;
    long long v21 = v34;
    *(_OWORD *)(a6 + 32) = v33;
    *(_OWORD *)(a6 + 48) = v21;
    long long v22 = v36;
    *(_OWORD *)(a6 + 64) = v35;
    *(_OWORD *)(a6 + 80) = v22;
    long long v23 = v32;
    *(_OWORD *)a6 = v31;
    *(_OWORD *)(a6 + 16) = v23;
    sub_1C028A270(0, &qword_1EB86FB20, (void (*)(void))sub_1C0289E64, (void (*)(void))sub_1C0086784);
    uint64_t v25 = v24;
    sub_1BFF976E8((uint64_t)v14, a6 + *(int *)(v24 + 52), (uint64_t (*)(void))type metadata accessor for FeedContext);
    uint64_t v26 = (void *)(a6 + *(int *)(v25 + 56));
    *uint64_t v26 = 0;
    v26[1] = 0;
    uint64_t v27 = (uint64_t (**)())(a6 + *(int *)(v25 + 64));
    void *v27 = sub_1BFE31C54;
    v27[1] = 0;
    sub_1BFEA4290((uint64_t)v41);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a6, 0, 1, v25);
  }
  else
  {
    sub_1C0289EB8((uint64_t)&v31, &qword_1EB8819D8, (uint64_t)&type metadata for FeedTag);
    sub_1C028A270(0, &qword_1EB86FB20, (void (*)(void))sub_1C0289E64, (void (*)(void))sub_1C0086784);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(a6, 1, 1, v29);
  }
}

uint64_t FeedModelFactory.create(webEmbed:context:namespace:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  long long v32 = a2;
  uint64_t v9 = type metadata accessor for FeedContext();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (uint64_t *)((char *)&v31 - v16);
  uint64_t v18 = MEMORY[0x1E4FBB1A0];
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C1527210;
  *(void *)(v19 + 32) = a3;
  *(void *)(v19 + 40) = a4;
  uint64_t v20 = a1[1];
  *(void *)(v19 + 48) = *a1;
  *(void *)(v19 + 56) = v20;
  uint64_t v33 = v19;
  sub_1BFE99D58(0, (unint64_t *)&qword_1EB879F20, v18, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C151E55C();
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t)a1;
  uint64_t v25 = v32;
  sub_1C0E9C670(v21, v23, v24, v32, v17);
  swift_bridgeObjectRelease();
  sub_1BFDB5E54((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1BFDB5E54((uint64_t)v25, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedContext);
  sub_1BFF976E8((uint64_t)v14, a5, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  sub_1C0289F28();
  uint64_t v27 = v26;
  sub_1BFF976E8((uint64_t)v11, a5 + *(int *)(v26 + 52), (uint64_t (*)(void))type metadata accessor for FeedContext);
  unint64_t v28 = (void *)(a5 + *(int *)(v27 + 56));
  *unint64_t v28 = 0;
  v28[1] = 0;
  uint64_t v29 = (uint64_t (**)())(a5 + *(int *)(v27 + 64));
  *uint64_t v29 = sub_1BFE31C54;
  v29[1] = 0;
  return sub_1BFF5B58C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
}