uint64_t sub_1BFEFAE14(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  void *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    v5 = ~(-1 << v4);
  }
  else {
    v5 = -1;
  }
  v6 = v5 & *(void *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    v11 = *(void *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    v14 = result;
    v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    v18 = sub_1C1520E0C();
    v19 = -1 << *(unsigned char *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    v21 = *(void *)(a2 + 48);
    v22 = (void *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1C1520A9C() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        v27 = (void *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1C1520A9C() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1BFEFB09C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  v60 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    uint64_t v61 = 0;
    int64_t v6 = 0;
    uint64_t v57 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v58 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_77;
          }
          if (v13 >= v58) {
            goto LABEL_75;
          }
          unint64_t v14 = *(void *)(v57 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v13 + 1;
            if (v13 + 1 >= v58) {
              goto LABEL_75;
            }
            unint64_t v14 = *(void *)(v57 + 8 * v15);
            if (!v14)
            {
              int64_t v16 = v13 + 2;
              if (v16 >= v58) {
                goto LABEL_75;
              }
              unint64_t v14 = *(void *)(v57 + 8 * v16);
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_78;
                  }
                  if (v15 >= v58) {
                    goto LABEL_75;
                  }
                  unint64_t v14 = *(void *)(v57 + 8 * v15);
                  ++v16;
                  if (v14) {
                    goto LABEL_20;
                  }
                }
              }
              int64_t v15 = v16;
            }
          }
LABEL_20:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_1C1520DBC();
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        uint64_t v20 = sub_1C1520E0C();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1C1520A9C() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1C1520A9C() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_36;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_36:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v60[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_79;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v59 = a3 + 56;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  uint64_t v61 = 0;
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_59;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    if (v41 >= v63) {
      goto LABEL_75;
    }
    unint64_t v42 = *(void *)(v59 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_75;
      }
      unint64_t v42 = *(void *)(v59 + 8 * v34);
      if (!v42) {
        break;
      }
    }
LABEL_58:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_59:
    v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v47 = sub_1C1520E0C();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_44;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1C1520A9C() & 1) != 0)
    {
LABEL_72:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v60 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_75:
        swift_retain();
        return sub_1BFEFB580(v60, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1C1520A9C() & 1) != 0) {
          goto LABEL_72;
        }
      }
LABEL_44:
      result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 2;
  if (v43 >= v63) {
    goto LABEL_75;
  }
  unint64_t v42 = *(void *)(v59 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_58;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_75;
    }
    unint64_t v42 = *(void *)(v59 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_58;
    }
  }
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_1BFEFB580(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_34:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1BFEFFF68(0, &qword_1EB87A370);
  uint64_t result = sub_1C15200AC();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_22;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_37;
    }
    if (v14 >= v30) {
      goto LABEL_34;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_34;
      }
      unint64_t v15 = a1[v10];
      if (!v15) {
        break;
      }
    }
LABEL_21:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_22:
    v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (!v5) {
      goto LABEL_34;
    }
  }
  uint64_t v16 = v14 + 2;
  if (v16 >= v30) {
    goto LABEL_34;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_34;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1BFEFB808()
{
  return swift_release();
}

uint64_t sub_1BFEFB810(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  if (v2 >= v3) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = a2;
  }
  uint64_t v31 = v4 + 56;
  if (v2 >= v3) {
    uint64_t v5 = a2;
  }
  else {
    uint64_t v5 = a1;
  }
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 56);
  int64_t v32 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v33 = v4;
  uint64_t v9 = v5 + 56;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    while (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      if (*(void *)(v5 + 16)) {
        goto LABEL_29;
      }
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v14 >= v32) {
      goto LABEL_44;
    }
    unint64_t v15 = *(void *)(v31 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v32) {
        goto LABEL_44;
      }
      unint64_t v15 = *(void *)(v31 + 8 * v11);
      if (!v15) {
        break;
      }
    }
LABEL_28:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    if (*(void *)(v5 + 16))
    {
LABEL_29:
      v17 = (uint64_t *)(*(void *)(v33 + 48) + 16 * v13);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      sub_1C1520DBC();
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      uint64_t v20 = sub_1C1520E0C();
      uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v22 = v20 & ~v21;
      if ((*(void *)(v9 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22))
      {
        uint64_t v23 = *(void *)(v5 + 48);
        char v24 = (void *)(v23 + 16 * v22);
        BOOL v25 = *v24 == v19 && v24[1] == v18;
        if (v25 || (sub_1C1520A9C() & 1) != 0)
        {
LABEL_43:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return 0;
        }
        uint64_t v26 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v28 + 1)
        {
          uint64_t v28 = i & v26;
          if (((*(void *)(v9 + (((i & v26) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v26)) & 1) == 0) {
            break;
          }
          v29 = (void *)(v23 + 16 * v28);
          BOOL v30 = *v29 == v19 && v29[1] == v18;
          if (v30 || (sub_1C1520A9C() & 1) != 0) {
            goto LABEL_43;
          }
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v32)
  {
LABEL_44:
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  unint64_t v15 = *(void *)(v31 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v32) {
      goto LABEL_44;
    }
    unint64_t v15 = *(void *)(v31 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_28;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1BFEFBA94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFEFBB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v20 = a7;
  uint64_t v21 = a6;
  uint64_t v19 = a2;
  uint64_t v11 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C152083C();
  MEMORY[0x1F4188790](v14);
  int64_t v16 = (char *)&v19 - v15;
  sub_1C1520F0C();
  v22[3] = a3;
  v22[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v22);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_0, v7, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v19, a4);
  swift_getWitnessTable();
  return sub_1BFEFE584((uint64_t)v16, (uint64_t)v22, (uint64_t)v13, (uint64_t)sub_1C01B158C, 0, v14, a4, v20, v21);
}

uint64_t sub_1BFEFBD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v29 = a4;
  uint64_t v30 = a1;
  uint64_t v27 = a2;
  uint64_t v31 = a8;
  uint64_t v15 = *(void *)(a6 - 8);
  uint64_t v28 = a10;
  MEMORY[0x1F4188790](a1);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C152083C();
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v27 - v19;
  sub_1C1520F0C();
  v32[3] = a3;
  v32[4] = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_0, v10, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v27, a6);
  unint64_t v22 = (void *)swift_allocObject();
  uint64_t v23 = v29;
  v22[2] = a3;
  v22[3] = v23;
  v22[4] = a5;
  uint64_t v22[5] = a6;
  v22[6] = a7;
  v22[7] = a9;
  uint64_t v24 = v28;
  uint64_t v25 = v30;
  v22[8] = v28;
  v22[9] = v25;
  swift_getWitnessTable();
  return sub_1BFEFE584((uint64_t)v20, (uint64_t)v32, (uint64_t)v17, (uint64_t)sub_1C146B9BC, (uint64_t)v22, v18, a6, v31, v24);
}

uint64_t TraversalOnlyEncoder.container<A>(keyedBy:)()
{
  return sub_1C152084C();
}

uint64_t type metadata accessor for TraversalOnlyEncoder.KeyedContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFEFC050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  uint64_t v26 = a1;
  sub_1BFEFD268(0, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo, MEMORY[0x1E4FBB718]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = sub_1C1520EFC();
  Dictionary<>.formatCodingVersionInfo.getter(v15, (uint64_t)v14);
  uint64_t v16 = type metadata accessor for FormatVersionInfo(0);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16);
  if (v17)
  {
    sub_1BFEFC57C((uint64_t)v14, (uint64_t)v12, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
    Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v12, v15);
    swift_bridgeObjectRelease();
    sub_1BFE546A8((uint64_t)v14, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
    LOBYTE(v18) = 1;
  }
  else
  {
    uint64_t v19 = MEMORY[0x1F4188790](v17);
    *(&v24 - 2) = a2;
    *(&v24 - 1) = a3;
    MEMORY[0x1F4188790](v19);
    uint64_t v20 = v25;
    *(&v24 - 2) = a4;
    *(&v24 - 1) = v20;
    char v22 = sub_1C02EE28C(v26, (uint64_t)sub_1C02F7C7C, v21, (uint64_t)sub_1C02F7C80, (uint64_t)(&v24 - 4));
    if (v5)
    {
      uint64_t v18 = &qword_1EB8883E0;
      sub_1BFEFC57C((uint64_t)v14, (uint64_t)v12, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
      Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v12, v15);
      swift_bridgeObjectRelease();
      sub_1BFE546A8((uint64_t)v14, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
    }
    else
    {
      LOBYTE(v18) = v22;
      Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v14, v15);
      swift_bridgeObjectRelease();
    }
  }
  return v18 & 1;
}

uint64_t sub_1BFEFC30C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a5;
  uint64_t v24 = a1;
  sub_1BFEFD268(0, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo, MEMORY[0x1E4FBB718]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = sub_1C1520EFC();
  Dictionary<>.formatCodingVersionInfo.getter(v15, (uint64_t)v14);
  uint64_t v16 = type metadata accessor for FormatVersionInfo(0);
  uint64_t v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16);
  if (v17) {
    goto LABEL_3;
  }
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  *(&v22 - 2) = a2;
  *(&v22 - 1) = a3;
  MEMORY[0x1F4188790](v18);
  uint64_t v19 = v23;
  *(&v22 - 2) = a4;
  *(&v22 - 1) = v19;
  sub_1C02ECEA8(v24, sub_1C02F7C7C, v20, sub_1C02F7C80, (uint64_t)(&v22 - 4));
  if (v5)
  {
LABEL_3:
    sub_1BFEFC57C((uint64_t)v14, (uint64_t)v12, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
    Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v12, v15);
    swift_bridgeObjectRelease();
    return sub_1BFE546A8((uint64_t)v14, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
  }
  else
  {
    Dictionary<>.formatCodingVersionInfo.setter((uint64_t)v14, v15);
    return swift_bridgeObjectRelease();
  }
}

uint64_t getEnumTagSinglePayload for FormatVersionInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C02F29D0);
}

uint64_t sub_1BFEFC574()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFEFC57C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFEFD268(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFEFC5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1(v4);
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (unsigned __int8 *)((v4 + (v7 | 7) + 40) & ~(v7 | 7));
  unint64_t v9 = *(void *)(v6 + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v10 <= v9) {
    unint64_t v10 = *(void *)(v6 + 64);
  }
  uint64_t v11 = v9 + v7;
  unint64_t v12 = ((v9 + 7 + ((v9 + v7) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 <= v10) {
    unint64_t v13 = v10;
  }
  else {
    unint64_t v13 = v12;
  }
  unsigned int v14 = v8[v13];
  unsigned int v15 = v14 - 3;
  if (v14 >= 3)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *v8;
        goto LABEL_15;
      case 2:
        int v17 = *(unsigned __int16 *)v8;
        goto LABEL_15;
      case 3:
        int v17 = *(unsigned __int16 *)v8 | (v8[2] << 16);
        goto LABEL_15;
      case 4:
        int v17 = *(_DWORD *)v8;
LABEL_15:
        int v18 = (v17 | (v15 << (8 * v13))) + 3;
        unsigned int v14 = v17 + 3;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 2)
  {
    uint64_t v19 = ~v7;
    uint64_t v20 = *(void (**)(unsigned __int8 *, uint64_t))(v6 + 8);
    v20(v8, v5);
    v20((unsigned __int8 *)((unint64_t)&v8[v11] & v19), v5);
    goto LABEL_21;
  }
  if (v14 == 1)
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(v8, v5);
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(v8, v5);
LABEL_23:
  return swift_release();
}

uint64_t sub_1BFEFC838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[3] = &type metadata for TraversalOnlyEncoder;
  v6[4] = sub_1BFEFC8E4();
  sub_1BFEFC938(a2, *(void *)(a3 + 16), *(void *)(a3 + 24), v6);
  sub_1C151E46C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

unint64_t sub_1BFEFC8E4()
{
  unint64_t result = qword_1EB862EF0;
  if (!qword_1EB862EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862EF0);
  }
  return result;
}

uint64_t sub_1BFEFC938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = *v4;
  uint64_t v10 = v4[1];
  sub_1BFEFCD08();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 64) = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_0, a1, a2);
  swift_bridgeObjectRetain();
  sub_1BFEFCE78(inited);
  *a4 = v9;
  a4[1] = v10;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFEFCA3C(uint64_t a1, uint64_t (*a2)(void), unint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  if ((*(void *)(v5 + 24) >> 1) - v10 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v11 = v5 + 40 * v10 + 32;
  if (a1 + 32 < v11 + 40 * v4 && v11 < a1 + 32 + 40 * v4) {
    goto LABEL_21;
  }
  sub_1BFC845BC(0, a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v13 = *(void *)(v5 + 16);
  BOOL v14 = __OFADD__(v13, v4);
  uint64_t v15 = v13 + v4;
  if (!v14)
  {
    *(void *)(v5 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void *sub_1BFEFCBCC(void *result, int64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      a5(0);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BFEFCD60(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void sub_1BFEFCD08()
{
  if (!qword_1EB863650)
  {
    sub_1C08E4CD0();
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863650);
    }
  }
}

uint64_t sub_1BFEFCD60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_1BFCB6824(0, a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFEFCE78(uint64_t a1)
{
  return sub_1BFEFCA3C(a1, (uint64_t (*)(void))sub_1C0EDFAB0, (unint64_t *)&qword_1EB863660);
}

uint64_t Dictionary<>.formatCodingVersionInfo.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEFD268(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = sub_1C152039C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C152038C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (*(void *)(a1 + 16) && (unint64_t v12 = sub_1BFEFE43C((uint64_t)v10), (v13 & 1) != 0))
    {
      sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v12, (uint64_t)&v19);
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (*((void *)&v20 + 1))
    {
      sub_1BFEFD268(0, &qword_1EA1995A8, type metadata accessor for FormatVersionInfo, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Box);
      if (swift_dynamicCast())
      {
        uint64_t v14 = v18 + *(void *)(*(void *)v18 + 88);
        swift_beginAccess();
        sub_1BFDCD3F4(v14, a2, type metadata accessor for FormatVersionInfo);
        swift_release();
        uint64_t v15 = type metadata accessor for FormatVersionInfo(0);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 0, 1, v15);
      }
    }
    else
    {
      sub_1BFEFD990((uint64_t)&v19, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
    }
    uint64_t v16 = type metadata accessor for FormatVersionInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void sub_1BFEFD268(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEFD2CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEFD320(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t type metadata accessor for FormatVersioningMode(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB889CA0);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t type metadata accessor for FormatVersionInfo(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB8883A0);
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t type metadata accessor for FormatContent.Resolved()
{
  uint64_t result = qword_1EB895190;
  if (!qword_1EB895190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Dictionary<>.formatCodingVersionInfo.setter(uint64_t a1, uint64_t a2)
{
  v27[0] = a1;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEFD268(0, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)v27 - v5;
  uint64_t v7 = type metadata accessor for FormatVersionInfo(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  char v13 = (char *)v27 - v12;
  sub_1BFEFD268(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50], v3);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)v27 - v15;
  uint64_t v17 = sub_1C152039C();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  long long v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C152038C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  if (*(void *)(a2 + 16) && (unint64_t v22 = sub_1BFEFE43C((uint64_t)v20), (v23 & 1) != 0))
  {
    sub_1BFF6A008(*(void *)(a2 + 56) + 32 * v22, (uint64_t)&v28);
  }
  else
  {
    long long v28 = 0u;
    long long v29 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  if (*((void *)&v29 + 1))
  {
    sub_1BFEFD268(0, &qword_1EA1995A8, type metadata accessor for FormatVersionInfo, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for Box);
    if (swift_dynamicCast())
    {
      uint64_t v24 = v27[1];
      sub_1C02F0A1C(v27[0], (uint64_t)v6, (uint64_t)&qword_1EB8883E0, (uint64_t)type metadata accessor for FormatVersionInfo, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFD268);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        sub_1C02F5C80((uint64_t)v6, (uint64_t)v13, type metadata accessor for FormatVersionInfo);
        sub_1C02F5C80((uint64_t)v13, (uint64_t)v11, type metadata accessor for FormatVersionInfo);
        uint64_t v26 = v24 + *(void *)(*(void *)v24 + 88);
        swift_beginAccess();
        sub_1C02F0A90((uint64_t)v11, v26);
        swift_endAccess();
        return swift_release();
      }
      swift_release();
      uint64_t v25 = (uint64_t)v6;
      return sub_1BFE546A8(v25, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
    }
  }
  else
  {
    sub_1BFEFD990((uint64_t)&v28, (unint64_t *)&qword_1EB87A940, MEMORY[0x1E4FBC840] + 8);
  }
  uint64_t v25 = v27[0];
  return sub_1BFE546A8(v25, &qword_1EB8883E0, type metadata accessor for FormatVersionInfo);
}

uint64_t sub_1BFEFD990(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1BFEFDE40(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFEFDA00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFDA60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFDAC0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1BFEFDE8C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFEFDB30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFDB90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFDBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1BFEFDC50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFDCB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1BFEFDD10(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEFDD5C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEFDDA8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEFDDF4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEFDE40(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEFDE8C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEFDED8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEFDF24(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEFDF70(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEFDFBC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEFE008(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEFE054(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFEFE0A0(uint64_t a1)
{
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790]();
  uint64_t v3 = &v11[-v2];
  uint64_t v4 = sub_1C152039C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C152038C();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v3, v4);
    if (*(void *)(a1 + 16) && (unint64_t v9 = sub_1BFEFE43C((uint64_t)v7), (v10 & 1) != 0))
    {
      sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v9, (uint64_t)&v12);
    }
    else
    {
      long long v12 = 0u;
      long long v13 = 0u;
    }
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    if (*((void *)&v13 + 1))
    {
      if (swift_dynamicCast()) {
        return v11[15];
      }
    }
    else
    {
      sub_1BFEFE4A0((uint64_t)&v12);
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BFEFE2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_1C152039C();
  MEMORY[0x1F4188790]();
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    long long v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    long long v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_1C151E5CC();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_1BFEFE43C(uint64_t a1)
{
  sub_1C152039C();
  uint64_t v2 = sub_1C151E47C();
  return sub_1BFEFE2A4(a1, v2);
}

uint64_t sub_1BFEFE4A0(uint64_t a1)
{
  sub_1BFC77FBC(0, (unint64_t *)&qword_1EB87A940);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BFEFE510()
{
  if (!qword_1EB87A940)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A940);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FormatVersionInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C02F2B14);
}

uint64_t sub_1BFEFE584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v23 = a4;
  uint64_t v24 = a5;
  uint64_t v15 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v15 - 8);
  char v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a8, a1, a6);
  uint64_t v19 = (int *)type metadata accessor for VersionedKeyedEncodingContainer();
  sub_1BFC66384(a2, a8 + v19[9]);
  sub_1BFEFE740(a3, a7, a9);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a7 - 8) + 8))(a3, a7);
  __swift_destroy_boxed_opaque_existential_1(a2);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a1, a6);
  uint64_t result = sub_1BFEFE864((uint64_t)v17, a8 + v19[10]);
  uint64_t v21 = (void *)(a8 + v19[11]);
  uint64_t v22 = v24;
  *uint64_t v21 = v23;
  v21[1] = v22;
  return result;
}

uint64_t type metadata accessor for VersionedKeyedEncodingContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFEFE740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BFEFE794(a2, a3);
  type metadata accessor for FormatVersionRequirement.Value(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BFEFE794(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1BFEFE7C8@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_1BFEFE864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFEFE8C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFE928(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFE988(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFE9E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFEA48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFEAA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFEB08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFEB68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFEBC8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFEC28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFEC88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFECE8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFED48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFEDA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFEE08(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEFEE68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FormatVersionRequirement(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB88B8D0);
}

uint64_t sub_1BFEFEEE8(uint64_t a1)
{
  type metadata accessor for FormatVersionRequirement.Value(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v5 = sub_1C151928C();
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(a1, v5);
      sub_1BFF05D18();
      v6(a1 + *(int *)(v7 + 48), v5);
      break;
    case 1:
      uint64_t v8 = sub_1C151928C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      sub_1C02F5DB4(0, (unint64_t *)&qword_1EA197218);
      break;
    case 0:
      uint64_t v3 = sub_1C151928C();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    default:
      return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FormatVersionRequirement.Value(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB88B850);
}

uint64_t sub_1BFEFF0A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFEFE7C8(&qword_1EB882D28, (uint64_t)qword_1EB93CAB0, a1);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1BFEFF114(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1BFEFF7D8();
  uint64_t v11 = v10;
  long long v12 = (uint64_t *)(v5 + *(int *)(v10 + 44));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v29 = a2;
  unint64_t v30 = a3;
  uint64_t v15 = swift_allocObject();
  sub_1BFEFF858((uint64_t)&v29, v15 + 16);
  *(void *)(v15 + 32) = v14;
  *(void *)(v15 + 40) = v13;
  sub_1BFEFF7C4(a2, a3);
  sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
  sub_1BFEFF8B4();
  swift_retain();
  uint64_t v16 = sub_1C1520B8C();
  uint64_t v29 = a2;
  unint64_t v30 = a3;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  sub_1BFEFF858((uint64_t)&v29, v17 + 24);
  sub_1BFC66384(v5 + *(int *)(v11 + 36), (uint64_t)&v29);
  __swift_project_boxed_opaque_existential_1(&v29, v31);
  uint64_t v27 = sub_1C08E4F5C;
  uint64_t v28 = v17;
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v24 = sub_1C08E4F54;
  uint64_t v25 = v15;
  sub_1BFEFF7C4(a2, a3);
  char v18 = sub_1BFEFC050(a1, (uint64_t)sub_1C08E4F7C, (uint64_t)v26, (uint64_t)sub_1C08659A0, (uint64_t)v21);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  return v18 & 1;
}

void sub_1BFEFF31C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFEB6A24();
    unint64_t v7 = a3(a1, &type metadata for FormatCodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1BFEFF380(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFEFF3E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFEFF450(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFEFF4B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFEFF520(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFEFF588(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFEFF5F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFEFF658(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFEFF6C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1BFEFF728()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = 1701869940;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      uint64_t v3 = 1635017060;
      break;
    case 2uLL:
      uint64_t v3 = 0x617461646174656DLL;
      break;
    case 3uLL:
      uint64_t v3 = 1885433183;
      break;
    default:
      uint64_t v3 = v1;
      break;
  }
  sub_1BFEFF7C4(v1, v2);
  return v3;
}

uint64_t sub_1BFEFF7C4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1BFEFF7D8()
{
  if (!qword_1EB869778)
  {
    sub_1BFEFF31C(255, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    unint64_t v0 = type metadata accessor for VersionedKeyedEncodingContainer();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB869778);
    }
  }
}

uint64_t sub_1BFEFF858(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1BFEFF8B4()
{
  unint64_t result = qword_1EB86B8A8;
  if (!qword_1EB86B8A8)
  {
    sub_1BFEFF31C(255, &qword_1EB85E120, MEMORY[0x1E4FBBDE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B8A8);
  }
  return result;
}

uint64_t sub_1BFEFF928()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1BFEFFF68(0, &qword_1EB87A370);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t result = sub_1C1520E0C();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1BFEFFC1C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  uint64_t v8 = sub_1C1520E0C();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C1520A9C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      int64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C1520A9C() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1BFEFFDCC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1BFEFFDCC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1BFEFF928();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1BFF009B0();
      goto LABEL_22;
    }
    sub_1BFF00588();
  }
  uint64_t v11 = *v4;
  sub_1C1520DBC();
  sub_1C151E77C();
  uint64_t result = sub_1C1520E0C();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1C1520A9C(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1C1520CEC();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1C1520A9C();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_1BFEFFF68(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C15200BC();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t sub_1BFEFFFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v39 = a7;
  uint64_t v32 = a2;
  uint64_t v45 = a8;
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v37 = a3;
  v31[0] = a1;
  uint64_t v11 = *(void *)(a6 + 16);
  uint64_t v10 = *(void *)(a6 + 24);
  uint64_t v34 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __n128 v16 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  int64_t v18 = (char *)v31 - v17;
  BOOL v19 = (uint64_t *)(v8 + *(int *)(a6 + 44));
  uint64_t v20 = v19[1];
  uint64_t v33 = *v19;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v18, a2, AssociatedTypeWitness, v16);
  unint64_t v21 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v22 = (v15 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  BOOL v23 = (char *)swift_allocObject();
  v31[1] = v11;
  v31[2] = v10;
  uint64_t v24 = v39;
  *((void *)v23 + 2) = v11;
  *((void *)v23 + 3) = v24;
  uint64_t v25 = v45;
  *((void *)v23 + 4) = v10;
  *((void *)v23 + 5) = v25;
  uint64_t v26 = AssociatedTypeWitness;
  uint64_t v27 = v32;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v23[v21], v18, v26);
  uint64_t v28 = &v23[v22];
  *(void *)uint64_t v28 = v33;
  *((void *)v28 + 1) = v20;
  uint64_t v41 = v35;
  uint64_t v42 = v36;
  int64_t v43 = sub_1C146B890;
  v44 = v23;
  swift_retain();
  uint64_t v29 = v38;
  sub_1BFF00218(v37, v27, (uint64_t)sub_1C146B45C, (uint64_t)v40, v34);
  if (!v29) {
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFF00218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v47 = a2;
  uint64_t v52 = a1;
  uint64_t v7 = *(void *)(a5 + 16);
  uint64_t v62 = *(void *)(a5 + 24);
  uint64_t v49 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v44 = *(void *)(v10 + 64);
  uint64_t v11 = v44;
  __n128 v12 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v15 = (uint64_t *)(v5 + *(int *)(a5 + 44));
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  uint64_t v41 = v17;
  uint64_t v40 = v16;
  uint64_t v46 = *(void (**)(char *, uint64_t, __n128))(v10 + 16);
  uint64_t v38 = v14;
  uint64_t v18 = a2;
  uint64_t v20 = v19;
  v46(v14, v18, v12);
  uint64_t v21 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v22 = (v21 + 32) & ~v21;
  uint64_t v43 = v21 | 7;
  unint64_t v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  uint64_t v39 = v7;
  uint64_t v25 = v62;
  *(void *)(v24 + 16) = v7;
  *(void *)(v24 + 24) = v25;
  uint64_t v26 = v24 + v22;
  uint64_t v27 = v24;
  uint64_t v48 = v24;
  uint64_t v42 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  uint64_t v28 = v14;
  uint64_t v29 = v20;
  v42(v26, v28, v20);
  unint64_t v30 = (void *)(v27 + v23);
  uint64_t v31 = v40;
  *unint64_t v30 = v41;
  v30[1] = v31;
  swift_retain();
  uint64_t v32 = v45;
  uint64_t v33 = sub_1C1520B8C();
  uint64_t v34 = v38;
  ((void (*)(char *, uint64_t, uint64_t))v46)(v38, v47, v29);
  uint64_t v35 = (void *)swift_allocObject();
  uint64_t v36 = v62;
  v35[2] = v39;
  v35[3] = v36;
  v35[4] = v33;
  v42((uint64_t)v35 + ((v21 + 40) & ~v21), v34, v29);
  sub_1BFC66384(v32 + *(int *)(v49 + 36), (uint64_t)v61);
  __swift_project_boxed_opaque_existential_1(v61, v61[3]);
  uint64_t v59 = sub_1C146B458;
  v60 = v35;
  uint64_t v54 = v50;
  uint64_t v55 = v51;
  v56 = sub_1C146B450;
  uint64_t v57 = v48;
  sub_1BFEFC30C(v52, (uint64_t)sub_1C146B9F4, (uint64_t)v58, (uint64_t)sub_1C146B45C, (uint64_t)v53);
  swift_release();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
}

unint64_t sub_1BFF0056C(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFF00588()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1BFEFFF68(0, &qword_1EB87A370);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BFF0084C(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  switch((2 * a8) | ((a7 & 8) != 0))
  {
    case 0:
      uint64_t result = sub_1BFF01064(result, a2, a3, a4, a5, a6, a7);
      break;
    case 2:
      uint64_t result = sub_1BFF58ECC(result, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_1BFF01064, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C022422C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C0224014);
      break;
    case 3:
    case 4:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 8:
      uint64_t result = sub_1C0224014(result, a2, a3, a4, a5, a6, a7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for FormatAction()
{
  uint64_t result = qword_1EB87B268;
  if (!qword_1EB87B268) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1BFF009B0()
{
  uint64_t v1 = v0;
  sub_1BFEFFF68(0, &qword_1EB87A370);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C152007C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t type metadata accessor for FormatContentSlotItemObject()
{
  uint64_t result = qword_1EB883170;
  if (!qword_1EB883170) {
    return swift_getSingletonMetadata();
  }
  return result;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

void sub_1BFF00BEC()
{
  if (!qword_1EB8948A0)
  {
    sub_1C1515FDC();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8948A0);
    }
  }
}

uint64_t sub_1BFF00C44(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  switch((a7 >> 21) & 7)
  {
    case 0u:
    case 1u:
    case 2u:
    case 4u:
      __n128 result = swift_bridgeObjectRelease();
      break;
    case 5u:
      __n128 result = sub_1BFF0084C(result, a2, a3, a4, a5, a6, a7, SBYTE1(a7));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF00C84(uint64_t a1, long long *a2)
{
  long long v4 = a2[11];
  long long v71 = a2[10];
  long long v72 = v4;
  uint64_t v73 = *((void *)a2 + 24);
  long long v5 = a2[7];
  long long v67 = a2[6];
  long long v68 = v5;
  long long v6 = a2[9];
  long long v69 = a2[8];
  long long v70 = v6;
  long long v7 = a2[3];
  long long v63 = a2[2];
  long long v64 = v7;
  long long v8 = a2[5];
  long long v65 = a2[4];
  long long v66 = v8;
  long long v9 = a2[1];
  long long v61 = *a2;
  long long v62 = v9;
  *(void *)(v2 + 64) = 0;
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v2 + 16) = v11;
  *(void *)(v2 + 24) = v10;
  uint64_t v12 = *(void *)(a1 + 40);
  *(void *)(v2 + 32) = *(void *)(a1 + 32);
  *(void *)(v2 + 40) = v12;
  swift_beginAccess();
  uint64_t v13 = *(void *)(a1 + 48);
  swift_beginAccess();
  *(void *)(v2 + 48) = v13;
  uint64_t v14 = *((void *)&v71 + 1);
  if (!*((void *)&v71 + 1)) {
    uint64_t v14 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 56) = v14;
  uint64_t v15 = v72;
  if (!(void)v72)
  {
    swift_beginAccess();
    uint64_t v15 = *(void *)(a1 + 64);
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  *(void *)(v2 + 64) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = v62;
  uint64_t v60 = v62;
  if ((~(void)v62 & 0xF000000000000007) == 0)
  {
    uint64_t v16 = *(void *)(a1 + 72);
    sub_1BFEF683C(v16);
  }
  *(void *)(v2 + 72) = v16;
  uint64_t v17 = *((void *)&v62 + 1);
  if (!*((void *)&v62 + 1)) {
    uint64_t v17 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 80) = v17;
  char v18 = BYTE10(v70);
  if (BYTE10(v70) == 9) {
    char v18 = *(unsigned char *)(a1 + 88);
  }
  *(unsigned char *)(v2 + 88) = v18;
  uint64_t v19 = *((void *)&v63 + 1);
  unsigned long long v21 = v63;
  uint64_t v58 = v21 >> 64;
  uint64_t v20 = v21;
  uint64_t v59 = v63;
  char v22 = v64;
  char v57 = v64;
  if (v64 >= 0xFEu)
  {
    uint64_t v20 = *(void *)(a1 + 96);
    uint64_t v19 = *(void *)(a1 + 104);
    char v22 = *(unsigned char *)(a1 + 112);
    sub_1BFEF6828(v20, v19, v22);
  }
  *(void *)(v2 + 96) = v20;
  *(void *)(v2 + 104) = v19;
  *(unsigned char *)(v2 + 112) = v22;
  unint64_t v23 = v71;
  unint64_t v56 = v71;
  if ((void)v71 == 3)
  {
    unint64_t v23 = *(void *)(a1 + 120);
    sub_1BFEF6854(v23);
  }
  *(void *)(v2 + 120) = v23;
  char v24 = BYTE9(v70);
  if (BYTE9(v70) == 4) {
    char v24 = *(unsigned char *)(a1 + 128);
  }
  uint64_t v25 = *((void *)&v64 + 1);
  uint64_t v27 = *((void *)&v65 + 1);
  uint64_t v26 = v65;
  uint64_t v29 = *((void *)&v66 + 1);
  uint64_t v28 = v66;
  uint64_t v30 = *((void *)&v67 + 1);
  uint64_t v31 = v67;
  uint64_t v33 = *((void *)&v68 + 1);
  uint64_t v34 = v68;
  uint64_t v32 = v69;
  uint64_t v54 = v65;
  uint64_t v55 = *((void *)&v64 + 1);
  uint64_t v52 = v66;
  uint64_t v53 = *((void *)&v65 + 1);
  uint64_t v50 = v67;
  uint64_t v51 = *((void *)&v66 + 1);
  uint64_t v48 = v68;
  uint64_t v49 = *((void *)&v67 + 1);
  uint64_t v46 = v69;
  uint64_t v47 = *((void *)&v68 + 1);
  *(unsigned char *)(v2 + 128) = v24;
  unsigned __int8 v35 = BYTE8(v69);
  unsigned __int8 v45 = BYTE8(v69);
  if (BYTE8(v69) == 254)
  {
    uint64_t v43 = *(void *)(a1 + 144);
    uint64_t v44 = *(void *)(a1 + 136);
    uint64_t v28 = *(void *)(a1 + 160);
    uint64_t v42 = *(void *)(a1 + 152);
    uint64_t v29 = *(void *)(a1 + 168);
    uint64_t v31 = *(void *)(a1 + 176);
    uint64_t v30 = *(void *)(a1 + 184);
    uint64_t v34 = *(void *)(a1 + 192);
    uint64_t v33 = *(void *)(a1 + 200);
    uint64_t v32 = *(void *)(a1 + 208);
    unsigned __int8 v35 = *(unsigned char *)(a1 + 216);
    sub_1BFEF8708(v44, v43, v42, v28, v29, v31, v30, v34, v33, v32, v35);
    uint64_t v27 = v42;
    uint64_t v26 = v43;
    uint64_t v25 = v44;
  }
  *(void *)(v2 + 136) = v25;
  *(void *)(v2 + 144) = v26;
  *(void *)(v2 + 152) = v27;
  *(void *)(v2 + 160) = v28;
  *(void *)(v2 + 168) = v29;
  *(void *)(v2 + 176) = v31;
  *(void *)(v2 + 184) = v30;
  *(void *)(v2 + 192) = v34;
  *(void *)(v2 + 200) = v33;
  *(void *)(v2 + 208) = v32;
  uint64_t v36 = v70;
  uint64_t v37 = v70;
  *(unsigned char *)(v2 + 216) = v35;
  if ((~v37 & 0xF000000000000007) == 0)
  {
    uint64_t v37 = *(void *)(a1 + 224);
    sub_1BFDC11A4(v37);
  }
  *(void *)(v2 + 224) = v37;
  char v38 = BYTE8(v70);
  if (BYTE8(v70) == 2) {
    char v38 = *(unsigned char *)(a1 + 232);
  }
  *(unsigned char *)(v2 + 232) = v38;
  uint64_t v39 = *((void *)&v72 + 1);
  uint64_t v40 = v73;
  sub_1BFEF683C(v60);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v59, v58, v57);
  sub_1BFEF6854(v56);
  sub_1BFEF8708(v55, v54, v53, v52, v51, v50, v49, v48, v47, v46, v45);
  sub_1BFDC11A4(v36);
  sub_1BFEF6864(*((uint64_t *)&v72 + 1));
  sub_1C05DCA1C((uint64_t)&v61);
  if (v39 == 1)
  {
    uint64_t v39 = *(void *)(a1 + 240);
    uint64_t v40 = *(void *)(a1 + 248);
    sub_1BFEF6864(v39);
  }
  *(void *)(v2 + 240) = v39;
  *(void *)(v2 + 248) = v40;
  sub_1BFEF6CE8(a1 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask, v2 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask);
  return v2;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_1BFF01064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 <= 1u) {
    return sub_1BFF51C94(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1BFF01078(uint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  switch((a6 >> 1) & 0xF)
  {
    case 2u:
      __n128 result = sub_1C05D8B28(result, a2, a3, a4, a5, a6 & 0xE1, (uint64_t (*)(void))sub_1C0223A4C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BFF61770, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0223A4C);
      break;
    case 3u:
      __n128 result = sub_1C0223A4C(result, a2);
      break;
    case 7u:
      swift_bridgeObjectRelease();
      __n128 result = swift_bridgeObjectRelease();
      break;
    case 8u:
      __n128 result = sub_1C05D8BC0(result, a2, a3, a4, a5, a6 & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0223A4C);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1BFF0117C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFF018D0();
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 208);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[26 * v8 + 4]) {
          memmove(v12, a4 + 4, 208 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BFF012A4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFF012A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 208 * a1 + 32;
    unint64_t v6 = a3 + 208 * v4;
    if (v5 >= v6 || v5 + 208 * v4 <= a3)
    {
      sub_1BFE38B54(0, (unint64_t *)&qword_1EB88D000, (uint64_t (*)(void))sub_1C0077E3C, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1BFF013E4(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = type metadata accessor for FormatCompilerPrimitiveProperty();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF01444(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFF014AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFF01514(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFF0157C()
{
  if (!qword_1EB88D000)
  {
    sub_1C0077E3C();
    unint64_t v0 = type metadata accessor for FormatNodeStyleSelectorOrder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88D000);
    }
  }
}

uint64_t sub_1BFF015D8(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    uint64_t v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 2) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C15DDC60;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 2)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void sub_1BFF018D0()
{
  if (!qword_1EB8904B8)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EB88D000, (uint64_t (*)(void))sub_1C0077E3C, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8904B8);
    }
  }
}

uint64_t sub_1BFF01960(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF019A4(a1, a2, a3, (void *)*v3, (void (*)(void))sub_1BFF01B5C, (unint64_t *)&qword_1EB873868);
  *long long v3 = result;
  return result;
}

uint64_t sub_1BFF019A4(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), unint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    a5(0);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_1BFC845BC(0, a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1BFF01B5C()
{
  if (!qword_1EB87A680)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB873868);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A680);
    }
  }
}

unint64_t sub_1BFF01BC4()
{
  unint64_t result = qword_1EB879BB0;
  if (!qword_1EB879BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879BB0);
  }
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BFF01C3C(uint64_t a1, char a2, void (*a3)(void))
{
  long long v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v37 = a2;
  uint64_t v7 = sub_1C15204EC();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *long long v4 = v8;
  return result;
}

uint64_t sub_1BFF01F54(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    long long v2 = a1;
    long long v5 = &byte_1F1B64748;
    while (1)
    {
      int v6 = *v5++;
      if (v6 == 1) {
        break;
      }
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(void *)(v7 + 56) = 0;
  *(_OWORD *)(v7 + 64) = xmmword_1C15C4E40;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    long long v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (*(void *)(v14 + 64) >> 59 == 1)
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BFF02214(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v106 = a1;
  uint64_t v4 = *v1;
  swift_beginAccess();
  uint64_t v5 = v1[3];
  uint64_t v105 = v1[2];
  uint64_t v6 = v1[4];
  uint64_t v108 = v3[5];
  swift_beginAccess();
  unint64_t v7 = v3[7];
  uint64_t v107 = v3[6];
  uint64_t v103 = v6;
  uint64_t v104 = v4;
  if ((~v7 & 0xF000000000000007) != 0)
  {
    if (v7 >> 61 == 3)
    {
      uint64_t v8 = v7 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v9 = *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v11 = *(void *)(v8 + 32);
      uint64_t v12 = v5;
      char v13 = *(unsigned char *)(v8 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF67F78(v9, v10, v11, v13);
      sub_1C021CDF8(v106, v9, v10, v11, v13, v124);
      if (v2)
      {
        sub_1BFF05CCC(v9, v10, v11, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v15 = v124[0];
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v9;
      *(void *)(v16 + 24) = v10;
      *(void *)(v16 + 32) = v11;
      *(unsigned char *)(v16 + 40) = v13;
      unint64_t v7 = v16 | 0x8000000000000000;
      *(void *)(v16 + 48) = v15;
      uint64_t v5 = v12;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFEF683C(v7);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  unint64_t v126 = v7;
  sub_1BFF8874C((uint64_t)(v3 + 8), (uint64_t)v128, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
  sub_1BFF8874C((uint64_t)v128, (uint64_t)v129, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
  if (sub_1C044587C((uint64_t)v129) == 1)
  {
    sub_1BFF8874C((uint64_t)v128, (uint64_t)v127, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
    uint64_t v17 = v106;
  }
  else
  {
    sub_1BFF6530C((uint64_t)v129, (uint64_t)v130);
    sub_1BFF8874C((uint64_t)v128, (uint64_t)v123, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
    sub_1BFF99A50(v123, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF87A0);
    uint64_t v17 = v106;
    sub_1BFF63D68(v106, (uint64_t)v124);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v18 = v128;
LABEL_25:
      sub_1BFF99A50(v18, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
      uint64_t v53 = v7;
      return sub_1BFEF68C0(v53);
    }
    sub_1BFF99A50(v128, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
    sub_1BFF6530C((uint64_t)v124, (uint64_t)&v109);
    sub_1BFF6530C((uint64_t)&v109, (uint64_t)v125);
    nullsub_1(v125);
    sub_1BFF8874C((uint64_t)v125, (uint64_t)v127, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
  }
  uint64_t v19 = sub_1BFF8874C((uint64_t)v127, (uint64_t)v125, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
  if (v3[24])
  {
    v124[0] = v17;
    MEMORY[0x1F4188790](v19);
    v82 = v124;
    uint64_t v21 = sub_1C0182288((void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_1BFFC2654, (uint64_t)&v80, v20);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF99A50(v127, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
      return sub_1BFEF68C0(v7);
    }
    uint64_t v22 = v21;
    uint64_t v100 = 0;
    unint64_t v101 = v7;
    uint64_t v91 = v5;
  }
  else
  {
    uint64_t v100 = v2;
    unint64_t v101 = v7;
    uint64_t v91 = v5;
    uint64_t v22 = 0;
  }
  uint64_t v23 = v3[25];
  uint64_t v24 = v3[26];
  uint64_t v26 = v3[27];
  uint64_t v25 = v3[28];
  uint64_t v27 = v3[29];
  uint64_t v28 = v3[30];
  uint64_t v30 = v3[31];
  uint64_t v29 = v3[32];
  uint64_t v102 = v3[33];
  uint64_t v31 = v3[34];
  uint64_t v98 = v23;
  uint64_t v99 = v31;
  int v32 = *((unsigned __int8 *)v3 + 280);
  uint64_t v94 = v28;
  uint64_t v95 = v30;
  uint64_t v92 = v26;
  uint64_t v93 = v25;
  int v97 = v32;
  if (v32 != 254)
  {
    uint64_t v96 = v24;
    swift_retain();
    unint64_t v33 = v27;
    uint64_t v34 = v27;
    uint64_t v35 = v100;
    sub_1BFF64090(v17, v33, v124);
    if (v35)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v82) = v97;
      uint64_t v81 = v99;
      uint64_t v80 = v102;
      uint64_t v36 = v98;
      uint64_t v38 = v95;
      uint64_t v37 = v96;
      uint64_t v39 = v92;
      uint64_t v40 = v93;
      uint64_t v41 = v34;
      uint64_t v42 = v94;
      uint64_t v43 = v29;
LABEL_48:
      sub_1BFEF8738(v36, v37, v39, v40, v41, v42, v38, v43, v80, v81, v82);
      sub_1BFF99A50(v127, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
      uint64_t v53 = v101;
      return sub_1BFEF68C0(v53);
    }
    uint64_t v100 = 0;
    LODWORD(v24) = v96;
    uint64_t v26 = v92;
    uint64_t v44 = v93;
    uint64_t v45 = v34;
    uint64_t v28 = v94;
    uint64_t v30 = v95;
    sub_1BFEF8738(v98, v96, v92, v93, v45, v94, v95, v29, v102, v99, v97);
    LOBYTE(v32) = v97;
    uint64_t v23 = v98;
    uint64_t v25 = v44;
    uint64_t v27 = v124[0];
    uint64_t v24 = v24;
  }
  uint64_t v89 = v29;
  uint64_t v90 = v22;
  *(void *)&long long v109 = v23;
  *((void *)&v109 + 1) = v24;
  uint64_t v96 = v24;
  uint64_t v110 = v26;
  uint64_t v111 = v25;
  uint64_t v88 = v27;
  uint64_t v112 = v27;
  uint64_t v113 = v28;
  uint64_t v114 = v30;
  uint64_t v115 = v29;
  uint64_t v46 = v99;
  uint64_t v116 = v102;
  uint64_t v117 = v99;
  char v118 = v32;
  uint64_t v47 = v3[36];
  sub_1BFF8874C((uint64_t)(v3 + 37), (uint64_t)v124, (unint64_t *)&qword_1EB876CA0, (uint64_t)&type metadata for FormatParagraphStyle);
  sub_1BFF8874C((uint64_t)v124, (uint64_t)v123, (unint64_t *)&qword_1EB876CA0, (uint64_t)&type metadata for FormatParagraphStyle);
  uint64_t v87 = v3[62];
  int v86 = *((unsigned __int8 *)v3 + 504);
  uint64_t v48 = v3[64];
  if (v48)
  {
    uint64_t v49 = v106;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    uint64_t v50 = v100;
    double v51 = sub_1BFF493E4(v121[0], v48);
    uint64_t v52 = v50;
    unint64_t v7 = v101;
    if (v50)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BFEF8738(v98, v96, v92, v93, v88, v94, v95, v89, v102, v46, v97);
      unint64_t v18 = v127;
      goto LABEL_25;
    }
    double v56 = v51;
    uint64_t v85 = v47;
    swift_release();
    uint64_t v57 = swift_allocObject();
    *(double *)(v57 + 16) = v56;
    sub_1BFFC0BF8();
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_1C1529AE0;
    *(void *)(v54 + 32) = v57;
    *(unsigned char *)(v54 + 40) = 0;
    swift_bridgeObjectRelease();
    uint64_t v55 = v49;
  }
  else
  {
    uint64_t v85 = v47;
    swift_bridgeObjectRetain();
    uint64_t v54 = 0;
    uint64_t v55 = v106;
    uint64_t v52 = v100;
    unint64_t v7 = v101;
  }
  uint64_t v122 = v54;
  uint64_t v58 = v3[65];
  uint64_t v59 = v3[66];
  uint64_t v60 = v58;
  unint64_t v101 = v7;
  if (v58 == 9)
  {
    uint64_t v61 = v90;
    uint64_t v62 = v59;
  }
  else
  {
    uint64_t v62 = v59;
    if ((~v59 & 0xF000000000000007) != 0)
    {
      uint64_t v100 = v58;
      sub_1BFDC11A4(v59);
      sub_1BFF64090(v55, v62, v121);
      uint64_t v61 = v90;
      if (v52)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_47:
        sub_1BFEF8750(v100, v62);
        swift_bridgeObjectRelease();
        LOBYTE(v82) = v97;
        uint64_t v81 = v46;
        uint64_t v80 = v102;
        uint64_t v36 = v98;
        uint64_t v38 = v95;
        uint64_t v37 = v96;
        uint64_t v39 = v92;
        uint64_t v40 = v93;
        uint64_t v41 = v88;
        uint64_t v43 = v89;
        uint64_t v42 = v94;
        goto LABEL_48;
      }
      sub_1BFEF8750(v100, v62);
      uint64_t v62 = v121[0];
    }
    else
    {
      sub_1BFEF8750(v58, v59);
      uint64_t v61 = v90;
    }
    uint64_t v58 = v60;
  }
  v121[0] = v58;
  v121[1] = v62;
  uint64_t v63 = v3[67];
  uint64_t v64 = v3[68];
  uint64_t v65 = v63;
  uint64_t v100 = v58;
  if (v63 != 9)
  {
    if ((~v64 & 0xF000000000000007) != 0)
    {
      uint64_t v84 = v63;
      unint64_t v67 = v64;
      sub_1BFDC11A4(v64);
      sub_1BFF64090(v55, v67, v120);
      if (v52)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v68 = v84;
        uint64_t v69 = v67;
LABEL_46:
        sub_1BFEF8750(v68, v69);
        goto LABEL_47;
      }
      sub_1BFEF8750(v84, v67);
      uint64_t v64 = v120[0];
    }
    else
    {
      uint64_t v66 = v64;
      sub_1BFEF8750(v63, v64);
      uint64_t v64 = v66;
    }
    uint64_t v63 = v65;
    uint64_t v61 = v90;
  }
  v120[0] = v63;
  v120[1] = v64;
  uint64_t v70 = v3[70];
  if (v70)
  {
    char v71 = *((unsigned char *)v3 + 552);
    uint64_t v83 = v64;
    uint64_t v84 = v63;
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    double v72 = sub_1BFF493E4(v119, v70);
    if (v52)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v69 = v83;
      uint64_t v68 = v84;
      goto LABEL_46;
    }
    double v74 = v72;
    swift_release();
    uint64_t v75 = swift_allocObject();
    *(double *)(v75 + 16) = v74;
    sub_1BFFC0BF8();
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_1C1529AE0;
    *(void *)(v73 + 32) = v75;
    *(unsigned char *)(v73 + 40) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v71 = *((unsigned char *)v3 + 552);
    uint64_t v73 = 0;
  }
  uint64_t v76 = v91;
  uint64_t v77 = v103;
  uint64_t v78 = v87;
  char v79 = v86;
  uint64_t v119 = v73;
  swift_allocObject();
  return FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(v105, v76, v77, v108, v107, (uint64_t *)&v126, (uint64_t)v125, v61, &v109, v85, (uint64_t)v123, v78, v79, &v122, v121, v120, v71, &v119);
}

uint64_t sub_1BFF02C9C(uint64_t a1)
{
  uint64_t v56 = a1;
  uint64_t v57 = 0;
  v59[70] = *MEMORY[0x1E4F143B8];
  uint64_t v50 = *v1;
  swift_beginAccess();
  uint64_t v45 = v1;
  uint64_t v2 = v1[6];
  int64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v5 = sub_1BFEF8AD8(0, v3, 0, MEMORY[0x1E4FBC860]);
  uint64_t v46 = sub_1BFF03328(0, v3, 0, v4);
  uint64_t v49 = *(void *)(v2 + 16);
  if (!v49)
  {
LABEL_31:
    sub_1BFF03590();
    uint64_t v33 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void *)(v33 + 16);
    if (v34)
    {
      uint64_t v35 = v34 - 1;
      for (uint64_t i = 32; ; i += 536)
      {
        memcpy(v59, (const void *)(v33 + i), 0x218uLL);
        sub_1C05DC340((uint64_t)v59);
        unint64_t v38 = v5[2];
        unint64_t v37 = v5[3];
        if (v38 >= v37 >> 1) {
          uint64_t v5 = sub_1BFEF8AD8((void *)(v37 > 1), v38 + 1, 1, v5);
        }
        v5[2] = v38 + 1;
        memcpy(&v5[66 * v38 + 4], v59, 0x210uLL);
        if (!v35) {
          break;
        }
        --v35;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v39 = v5[2];
    if (v39)
    {
      uint64_t v40 = (uint64_t)v45;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v41 = v39 - 1;
      uint64_t v42 = v40;
      for (uint64_t j = 4; ; j += 66)
      {
        memcpy(v59, &v5[j], 0x210uLL);
        memcpy(v58, v59, sizeof(v58));
        swift_allocObject();
        sub_1C05DC340((uint64_t)v59);
        uint64_t v42 = sub_1C109C998(v42, v58);
        swift_release();
        if (!v41) {
          break;
        }
        --v41;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v42 = (uint64_t)v45;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v42;
  }
  uint64_t v48 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  uint64_t v47 = v2;
LABEL_3:
  unint64_t v52 = v6;
  memcpy(v59, (const void *)(v48 + 528 * v6), 0x210uLL);
  uint64_t v7 = v59[0];
  uint64_t v8 = v59[1];
  sub_1C05DC340((uint64_t)v59);
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  v58[0] = v7;
  v58[1] = v8;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1BFEF53C0(v58);
  swift_bridgeObjectRelease();
  uint64_t v54 = *(void *)(v9 + 16);
  if (!v54)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  double v51 = v5;
  unint64_t v10 = 0;
  uint64_t v11 = (uint64_t *)(v9 + 64);
  uint64_t v12 = v9;
  while (1)
  {
    if (v10 >= *(void *)(v12 + 16))
    {
      __break(1u);
      goto LABEL_45;
    }
    uint64_t v53 = *(v11 - 2);
    uint64_t v13 = *(v11 - 1);
    uint64_t v14 = *v11;
    char v15 = *(unsigned char *)(v13 + 32);
    unsigned int v16 = v15 & 0x3F;
    unint64_t v17 = (unint64_t)((1 << v15) + 63) >> 6;
    size_t v18 = 8 * v17;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v16 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v20 = (char *)swift_slowAlloc();
    bzero(v20, v18);
    uint64_t v24 = v17;
    uint64_t v22 = v57;
    uint64_t v23 = sub_1BFEFB09C((uint64_t)v20, v24, v13, v56);
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_47;
    }
    uint64_t v57 = 0;
    MEMORY[0x1C18C9B00](v20, -1, -1);
LABEL_15:
    char v25 = sub_1BFEFAE14(v23, v13);
    swift_release();
    if (v25 & 1) != 0 && (sub_1BFEFB810(v56, v14))
    {
      swift_bridgeObjectRelease();
      uint64_t v26 = v53;
      if (v53 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C05DC340((uint64_t)v59);
        uint64_t v5 = v51;
        unint64_t v32 = v51[2];
        unint64_t v31 = v51[3];
        uint64_t v2 = v47;
        if (v32 >= v31 >> 1) {
          uint64_t v5 = sub_1BFEF8AD8((void *)(v31 > 1), v32 + 1, 1, v51);
        }
        v5[2] = v32 + 1;
        memcpy(&v5[66 * v32 + 4], v59, 0x210uLL);
      }
      else
      {
        sub_1C05DC340((uint64_t)v59);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v2 = v47;
        unint64_t v28 = v46[2];
        unint64_t v27 = v46[3];
        uint64_t v5 = v51;
        if (v28 >= v27 >> 1) {
          uint64_t v46 = sub_1BFF03328((void *)(v27 > 1), v28 + 1, 1, v46);
        }
        memcpy(v58, v59, sizeof(v58));
        uint64_t v29 = v46;
        v46[2] = v28 + 1;
        uint64_t v30 = &v29[67 * v28];
        memcpy(v30 + 4, v58, 0x210uLL);
        v30[70] = v26;
      }
LABEL_26:
      sub_1C05DC4C4((uint64_t)v59);
LABEL_27:
      unint64_t v6 = v52 + 1;
      if (v52 + 1 == v49)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v6 >= *(void *)(v2 + 16)) {
LABEL_45:
      }
        __break(1u);
      goto LABEL_3;
    }
    ++v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 += 5;
    if (v54 == v10)
    {
      swift_bridgeObjectRelease();
      sub_1C05DC4C4((uint64_t)v59);
      uint64_t v5 = v51;
      uint64_t v2 = v47;
      goto LABEL_27;
    }
  }
  uint64_t v55 = &v45;
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v20 = (char *)&v45 - ((v18 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v20, v18);
  uint64_t v21 = v17;
  uint64_t v22 = v57;
  uint64_t v23 = sub_1BFEFB09C((uint64_t)v20, v21, v13, v56);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    uint64_t v57 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_47:

  uint64_t result = MEMORY[0x1C18C9B00](v20, -1, -1);
  __break(1u);
  return result;
}

void *sub_1BFF03328(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFF03628();
      unint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 536);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[67 * v8 + 4]) {
          memmove(v12, a4 + 4, 536 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BFF03450(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFF03450(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 536 * a1 + 32;
    unint64_t v6 = a3 + 536 * v4;
    if (v5 >= v6 || v5 + 536 * v4 <= a3)
    {
      sub_1BFE38B54(0, (unint64_t *)&qword_1EB88CFE0, (uint64_t (*)(void))sub_1C0079058, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1BFF03590()
{
  if (!qword_1EB88CFE0)
  {
    sub_1C0079058();
    unint64_t v0 = type metadata accessor for FormatNodeStyleSelectorOrder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88CFE0);
    }
  }
}

uint64_t sub_1BFF035EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFEFE7C8(&qword_1EB887640, (uint64_t)qword_1EB93CAC8, a1);
}

uint64_t sub_1BFF03610(uint64_t a1, char a2)
{
  return sub_1BFF01C3C(a1, a2, (void (*)(void))sub_1BFEF3110);
}

void sub_1BFF03628()
{
  if (!qword_1EB890498)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EB88CFE0, (uint64_t (*)(void))sub_1C0079058, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890498);
    }
  }
}

uint64_t sub_1BFF036B8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v4 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  swift_beginAccess();
  v225 = v1;
  uint64_t v7 = v1[6];
  swift_beginAccess();
  uint64_t v226 = a1;
  uint64_t v8 = *(void *)(a1 + 48);
  unint64_t v305 = MEMORY[0x1E4FBC868];
  int64_t v9 = *(void *)(v7 + 16);
  int64_t v10 = *(void *)(v8 + 16);
  if (__OFADD__(v9, v10)) {
    goto LABEL_98;
  }
  uint64_t v222 = v5;
  uint64_t v224 = v4;
  sub_1BFF04980();
  uint64_t v223 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  size_t v11 = (_OWORD *)v7;
  sub_1C151E3AC();
  v282 = sub_1BFEF692C(0, v9, 0, MEMORY[0x1E4FBC860]);
  uint64_t v12 = *(void *)(v7 + 16);
  uint64_t v221 = v6;
  uint64_t v227 = v8;
  if (!v12) {
    goto LABEL_20;
  }
  int64_t v279 = v10;
  swift_bridgeObjectRetain();
  long long v13 = v11[9];
  long long v302 = v11[8];
  long long v303 = v13;
  *(_OWORD *)v304 = v11[10];
  *(_OWORD *)&v304[9] = *(_OWORD *)((char *)v11 + 169);
  long long v14 = v11[5];
  long long v298 = v11[4];
  long long v299 = v14;
  long long v15 = v11[7];
  long long v300 = v11[6];
  long long v301 = v15;
  long long v16 = v11[3];
  long long v296 = v11[2];
  long long v297 = v16;
  uint64_t v17 = *((void *)&v296 + 1);
  uint64_t v18 = v12 - 1;
  for (uint64_t i = 12; ; i += 10)
  {
    uint64_t v20 = v296;
    sub_1C05DD5B8((uint64_t)&v296);
    sub_1C05DD5B8((uint64_t)&v296);
    swift_bridgeObjectRetain();
    unint64_t v21 = v305;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v284[0] = v21;
    unint64_t v24 = sub_1BFEF2D8C(v20, v17);
    uint64_t v25 = *(void *)(v21 + 16);
    BOOL v26 = (v23 & 1) == 0;
    uint64_t v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
      return result;
    }
    char v28 = v23;
    if (*(void *)(v21 + 24) >= v27)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v23) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_1C1070FD4();
        if (v28) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_1C105E1C4(v27, isUniquelyReferenced_nonNull_native);
      unint64_t v29 = sub_1BFEF2D8C(v20, v17);
      if ((v28 & 1) != (v30 & 1)) {
        goto LABEL_99;
      }
      unint64_t v24 = v29;
      if (v28)
      {
LABEL_11:
        unint64_t v31 = *(void **)&v284[0];
        unint64_t v32 = (long long *)(*(void *)(*(void *)&v284[0] + 56) + 160 * v24);
        long long v33 = v32[1];
        long long v287 = *v32;
        long long v288 = v33;
        long long v34 = v32[5];
        long long v36 = v32[2];
        long long v35 = v32[3];
        long long v291 = v32[4];
        long long v292 = v34;
        long long v289 = v36;
        long long v290 = v35;
        long long v38 = v32[7];
        long long v37 = v32[8];
        long long v39 = v32[6];
        *(_OWORD *)&v295[9] = *(long long *)((char *)v32 + 137);
        long long v294 = v38;
        *(_OWORD *)v295 = v37;
        long long v293 = v39;
        sub_1C05DD698((uint64_t)&v287);
        long long v40 = v297;
        *unint64_t v32 = v296;
        v32[1] = v40;
        long long v41 = v301;
        long long v43 = v298;
        long long v42 = v299;
        v32[4] = v300;
        uint64_t v32[5] = v41;
        v32[2] = v43;
        v32[3] = v42;
        long long v45 = v303;
        long long v44 = *(_OWORD *)v304;
        long long v46 = v302;
        *(long long *)((char *)v32 + 137) = *(_OWORD *)&v304[9];
        v32[7] = v45;
        v32[8] = v44;
        v32[6] = v46;
        goto LABEL_15;
      }
    }
    unint64_t v31 = *(void **)&v284[0];
    *(void *)(*(void *)&v284[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v47 = (uint64_t *)(v31[6] + 16 * v24);
    *uint64_t v47 = v20;
    v47[1] = v17;
    uint64_t v48 = (_OWORD *)(v31[7] + 160 * v24);
    long long v49 = *(_OWORD *)&v304[9];
    long long v51 = v303;
    long long v50 = *(_OWORD *)v304;
    v48[6] = v302;
    v48[7] = v51;
    v48[8] = v50;
    *(_OWORD *)((char *)v48 + 137) = v49;
    long long v53 = v300;
    long long v52 = v301;
    long long v54 = v299;
    v48[2] = v298;
    v48[3] = v54;
    v48[4] = v53;
    v48[5] = v52;
    long long v55 = v297;
    *uint64_t v48 = v296;
    v48[1] = v55;
    uint64_t v56 = v31[2];
    BOOL v57 = __OFADD__(v56, 1);
    uint64_t v58 = v56 + 1;
    if (v57) {
      goto LABEL_94;
    }
    v31[2] = v58;
    swift_bridgeObjectRetain();
LABEL_15:
    unint64_t v305 = (unint64_t)v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v59 = v282[2];
    unint64_t v60 = v282[3];
    swift_bridgeObjectRetain();
    if (v59 >= v60 >> 1) {
      v282 = sub_1BFEF692C((void *)(v60 > 1), v59 + 1, 1, v282);
    }
    v282[2] = v59 + 1;
    uint64_t v61 = &v282[2 * v59];
    void v61[4] = v20;
    v61[5] = v17;
    sub_1C05DD698((uint64_t)&v296);
    if (!v18) {
      break;
    }
    long long v62 = v11[i + 1];
    long long v296 = v11[i];
    long long v297 = v62;
    long long v63 = v11[i + 2];
    long long v64 = v11[i + 3];
    long long v65 = v11[i + 5];
    long long v300 = v11[i + 4];
    long long v301 = v65;
    long long v298 = v63;
    long long v299 = v64;
    long long v66 = v11[i + 6];
    long long v67 = v11[i + 7];
    long long v68 = v11[i + 8];
    *(_OWORD *)&v304[9] = *(_OWORD *)((char *)&v11[i + 8] + 9);
    long long v303 = v67;
    *(_OWORD *)v304 = v68;
    long long v302 = v66;
    uint64_t v17 = *((void *)&v296 + 1);
    --v18;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = v227;
  int64_t v10 = v279;
LABEL_20:
  uint64_t v69 = sub_1BFEF692C(0, v10, 0, MEMORY[0x1E4FBC860]);
  uint64_t v70 = *(void *)(v8 + 16);
  if (!v70) {
    goto LABEL_66;
  }
  swift_bridgeObjectRetain();
  long long v71 = *(_OWORD *)(v8 + 144);
  long long v302 = *(_OWORD *)(v8 + 128);
  long long v303 = v71;
  *(_OWORD *)v304 = *(_OWORD *)(v8 + 160);
  *(_OWORD *)&v304[9] = *(_OWORD *)(v8 + 169);
  long long v72 = *(_OWORD *)(v8 + 80);
  long long v298 = *(_OWORD *)(v8 + 64);
  long long v299 = v72;
  long long v73 = *(_OWORD *)(v8 + 112);
  long long v300 = *(_OWORD *)(v8 + 96);
  long long v301 = v73;
  long long v74 = *(_OWORD *)(v8 + 48);
  long long v296 = *(_OWORD *)(v8 + 32);
  long long v297 = v74;
  uint64_t v75 = v70 - 1;
  uint64_t v280 = 192;
  uint64_t v76 = *((void *)&v296 + 1);
  while (2)
  {
    uint64_t v77 = v296;
    uint64_t v78 = (void *)v305;
    uint64_t v79 = *(void *)(v305 + 16);
    sub_1C05DD5B8((uint64_t)&v296);
    if (v79)
    {
      swift_bridgeObjectRetain();
      unint64_t v80 = sub_1BFEF2D8C(v77, v76);
      if (v81)
      {
        v82 = (long long *)(v78[7] + 160 * v80);
        long long v83 = v82[1];
        long long v287 = *v82;
        long long v288 = v83;
        long long v84 = v82[5];
        long long v86 = v82[2];
        long long v85 = v82[3];
        long long v291 = v82[4];
        long long v292 = v84;
        long long v289 = v86;
        long long v290 = v85;
        long long v87 = v82[6];
        long long v88 = v82[7];
        long long v89 = v82[8];
        *(_OWORD *)&v295[9] = *(long long *)((char *)v82 + 137);
        long long v294 = v88;
        *(_OWORD *)v295 = v89;
        long long v293 = v87;
        sub_1C05DD5B8((uint64_t)&v287);
        swift_bridgeObjectRelease();
        uint64_t v90 = v288;
        uint64_t v91 = v288;
        if ((~(void)v288 & 0xF000000000000007) == 0)
        {
          uint64_t v91 = v297;
          sub_1BFEF683C(v297);
        }
        uint64_t v92 = *((void *)&v288 + 1);
        if (!*((void *)&v288 + 1)) {
          uint64_t v92 = swift_bridgeObjectRetain();
        }
        uint64_t v237 = v92;
        uint64_t v228 = v91;
        uint64_t v94 = *((void *)&v289 + 1);
        uint64_t v93 = v289;
        char v95 = v290;
        uint64_t v259 = v289;
        v261 = v69;
        uint64_t v257 = *((void *)&v289 + 1);
        char v96 = v290;
        if (v290 >= 0xFEu)
        {
          uint64_t v94 = *((void *)&v298 + 1);
          uint64_t v93 = v298;
          char v96 = v299;
          sub_1BFEF6828(v298, *((uint64_t *)&v298 + 1), v299);
        }
        uint64_t v233 = v94;
        uint64_t v235 = v93;
        uint64_t v239 = v75;
        uint64_t v97 = *((void *)&v290 + 1);
        uint64_t v98 = v291;
        uint64_t v99 = *((void *)&v294 + 1);
        uint64_t v100 = *(void *)v295;
        uint64_t v253 = v291;
        uint64_t v255 = *((void *)&v290 + 1);
        uint64_t v249 = v292;
        uint64_t v251 = *((void *)&v291 + 1);
        uint64_t v276 = v292;
        uint64_t v277 = *((void *)&v291 + 1);
        uint64_t v245 = v293;
        uint64_t v247 = *((void *)&v292 + 1);
        uint64_t v272 = v293;
        uint64_t v274 = *((void *)&v292 + 1);
        uint64_t v241 = v294;
        uint64_t v243 = *((void *)&v293 + 1);
        uint64_t v269 = v294;
        uint64_t v271 = *((void *)&v293 + 1);
        uint64_t v265 = *(void *)v295;
        uint64_t v267 = *((void *)&v294 + 1);
        unsigned __int8 v101 = v295[8];
        char v263 = v295[8];
        if (v295[8] == 254)
        {
          uint64_t v97 = *((void *)&v299 + 1);
          uint64_t v98 = v300;
          char v263 = v304[8];
          uint64_t v265 = *(void *)v304;
          uint64_t v267 = *((void *)&v303 + 1);
          uint64_t v276 = v301;
          uint64_t v277 = *((void *)&v300 + 1);
          uint64_t v272 = v302;
          uint64_t v274 = *((void *)&v301 + 1);
          uint64_t v269 = v303;
          uint64_t v271 = *((void *)&v302 + 1);
          sub_1BFEF8708(*((uint64_t *)&v299 + 1), v300, *((uint64_t *)&v300 + 1), v301, *((uint64_t *)&v301 + 1), v302, *((uint64_t *)&v302 + 1), v303, *((uint64_t *)&v303 + 1), *(uint64_t *)v304, v304[8]);
        }
        uint64_t v231 = v98;
        uint64_t v102 = *(void *)&v295[16];
        if (!*(void *)&v295[16]) {
          uint64_t v102 = swift_bridgeObjectRetain();
        }
        uint64_t v230 = v102;
        char v103 = v295[24];
        if (v295[24] == 2) {
          char v103 = v304[24];
        }
        char v229 = v103;
        long long v104 = v287;
        swift_bridgeObjectRetain_n();
        sub_1BFEF683C(v90);
        swift_bridgeObjectRetain();
        sub_1BFEF6828(v259, v257, v95);
        sub_1BFEF8708(v255, v253, v251, v249, v247, v245, v243, v241, v99, v100, v101);
        swift_bridgeObjectRetain();
        char v105 = swift_isUniquelyReferenced_nonNull_native();
        v286 = v78;
        unint64_t v305 = 0x8000000000000000;
        unint64_t v107 = sub_1BFEF2D8C(v104, *((uint64_t *)&v104 + 1));
        uint64_t v108 = v78[2];
        BOOL v109 = (v106 & 1) == 0;
        uint64_t v110 = v108 + v109;
        if (__OFADD__(v108, v109)) {
          goto LABEL_96;
        }
        char v111 = v106;
        if (v78[3] >= v110)
        {
          uint64_t v69 = v261;
          uint64_t v75 = v239;
          if (v105)
          {
            uint64_t v114 = v228;
            if ((v106 & 1) == 0) {
              goto LABEL_61;
            }
          }
          else
          {
            sub_1C1070FD4();
            uint64_t v114 = v228;
            if ((v111 & 1) == 0) {
              goto LABEL_61;
            }
          }
        }
        else
        {
          sub_1C105E1C4(v110, v105);
          unint64_t v112 = sub_1BFEF2D8C(v104, *((uint64_t *)&v104 + 1));
          uint64_t v69 = v261;
          uint64_t v75 = v239;
          if ((v111 & 1) != (v113 & 1)) {
            goto LABEL_99;
          }
          unint64_t v107 = v112;
          uint64_t v114 = v228;
          if ((v111 & 1) == 0)
          {
LABEL_61:
            v140 = v286;
            v286[(v107 >> 6) + 8] |= 1 << v107;
            *(_OWORD *)(v140[6] + 16 * v107) = v104;
            uint64_t v163 = v140[7] + 160 * v107;
            *(_OWORD *)uint64_t v163 = v104;
            *(void *)(v163 + 16) = v114;
            *(void *)(v163 + 24) = v237;
            *(void *)(v163 + 32) = v235;
            *(void *)(v163 + 40) = v233;
            *(unsigned char *)(v163 + 48) = v96;
            *(void *)(v163 + 56) = v97;
            *(void *)(v163 + 64) = v231;
            *(void *)(v163 + 72) = v277;
            *(void *)(v163 + 80) = v276;
            *(void *)(v163 + 88) = v274;
            *(void *)(v163 + 96) = v272;
            *(void *)(v163 + 104) = v271;
            *(void *)(v163 + 112) = v269;
            *(void *)(v163 + 120) = v267;
            *(void *)(v163 + 128) = v265;
            *(unsigned char *)(v163 + 136) = v263;
            *(void *)(v163 + 144) = v230;
            *(unsigned char *)(v163 + 152) = v229;
            uint64_t v164 = v140[2];
            BOOL v57 = __OFADD__(v164, 1);
            uint64_t v165 = v164 + 1;
            if (v57) {
              goto LABEL_97;
            }
            v140[2] = v165;
            swift_bridgeObjectRetain();
            goto LABEL_63;
          }
        }
        v140 = v286;
        uint64_t v141 = v286[7] + 160 * v107;
        long long v142 = *(_OWORD *)(v141 + 16);
        v284[0] = *(_OWORD *)v141;
        v284[1] = v142;
        long long v143 = *(_OWORD *)(v141 + 80);
        long long v145 = *(_OWORD *)(v141 + 32);
        long long v144 = *(_OWORD *)(v141 + 48);
        v284[4] = *(_OWORD *)(v141 + 64);
        v284[5] = v143;
        v284[2] = v145;
        v284[3] = v144;
        long long v147 = *(_OWORD *)(v141 + 112);
        long long v146 = *(_OWORD *)(v141 + 128);
        long long v148 = *(_OWORD *)(v141 + 96);
        *(_OWORD *)((char *)v285 + 9) = *(_OWORD *)(v141 + 137);
        v284[7] = v147;
        v285[0] = v146;
        v284[6] = v148;
        sub_1C05DD698((uint64_t)v284);
        *(_OWORD *)uint64_t v141 = v104;
        *(void *)(v141 + 16) = v114;
        *(void *)(v141 + 24) = v237;
        *(void *)(v141 + 32) = v235;
        *(void *)(v141 + 40) = v233;
        *(unsigned char *)(v141 + 48) = v96;
        *(void *)(v141 + 56) = v97;
        *(void *)(v141 + 64) = v231;
        *(void *)(v141 + 72) = v277;
        *(void *)(v141 + 80) = v276;
        *(void *)(v141 + 88) = v274;
        *(void *)(v141 + 96) = v272;
        *(void *)(v141 + 104) = v271;
        *(void *)(v141 + 112) = v269;
        *(void *)(v141 + 120) = v267;
        *(void *)(v141 + 128) = v265;
        *(unsigned char *)(v141 + 136) = v263;
        *(void *)(v141 + 144) = v230;
        *(unsigned char *)(v141 + 152) = v229;
LABEL_63:
        unint64_t v305 = (unint64_t)v140;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C05DD698((uint64_t)&v287);
        sub_1C05DD698((uint64_t)&v296);
        uint64_t v8 = v227;
        if (!v75) {
          goto LABEL_65;
        }
LABEL_64:
        long long v166 = *(_OWORD *)(v8 + v280 + 16);
        long long v296 = *(_OWORD *)(v8 + v280);
        long long v297 = v166;
        long long v167 = *(_OWORD *)(v8 + v280 + 32);
        long long v168 = *(_OWORD *)(v8 + v280 + 48);
        long long v169 = *(_OWORD *)(v8 + v280 + 80);
        long long v300 = *(_OWORD *)(v8 + v280 + 64);
        long long v301 = v169;
        long long v298 = v167;
        long long v299 = v168;
        long long v170 = *(_OWORD *)(v8 + v280 + 96);
        long long v171 = *(_OWORD *)(v8 + v280 + 112);
        long long v172 = *(_OWORD *)(v8 + v280 + 128);
        *(_OWORD *)&v304[9] = *(_OWORD *)(v8 + v280 + 137);
        long long v303 = v171;
        *(_OWORD *)v304 = v172;
        long long v302 = v170;
        uint64_t v76 = *((void *)&v296 + 1);
        v280 += 160;
        --v75;
        continue;
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  sub_1C05DD5B8((uint64_t)&v296);
  swift_bridgeObjectRetain();
  char v115 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v284[0] = v78;
  unint64_t v117 = sub_1BFEF2D8C(v77, v76);
  uint64_t v118 = v78[2];
  BOOL v119 = (v116 & 1) == 0;
  uint64_t v120 = v118 + v119;
  if (__OFADD__(v118, v119)) {
    goto LABEL_93;
  }
  char v121 = v116;
  if (v78[3] >= v120)
  {
    if (v115)
    {
      if ((v116 & 1) == 0) {
        goto LABEL_54;
      }
    }
    else
    {
      sub_1C1070FD4();
      if ((v121 & 1) == 0) {
        goto LABEL_54;
      }
    }
    goto LABEL_49;
  }
  sub_1C105E1C4(v120, v115);
  unint64_t v122 = sub_1BFEF2D8C(v77, v76);
  if ((v121 & 1) != (v123 & 1)) {
    goto LABEL_99;
  }
  unint64_t v117 = v122;
  if (v121)
  {
LABEL_49:
    v124 = *(void **)&v284[0];
    v125 = (long long *)(*(void *)(*(void *)&v284[0] + 56) + 160 * v117);
    long long v126 = v125[1];
    long long v287 = *v125;
    long long v288 = v126;
    long long v127 = v125[5];
    long long v129 = v125[2];
    long long v128 = v125[3];
    long long v291 = v125[4];
    long long v292 = v127;
    long long v289 = v129;
    long long v290 = v128;
    long long v131 = v125[7];
    long long v130 = v125[8];
    long long v132 = v125[6];
    *(_OWORD *)&v295[9] = *(long long *)((char *)v125 + 137);
    long long v294 = v131;
    *(_OWORD *)v295 = v130;
    long long v293 = v132;
    sub_1C05DD698((uint64_t)&v287);
    long long v133 = v297;
    long long *v125 = v296;
    v125[1] = v133;
    long long v134 = v301;
    long long v136 = v298;
    long long v135 = v299;
    v125[4] = v300;
    v125[5] = v134;
    v125[2] = v136;
    v125[3] = v135;
    long long v138 = v303;
    long long v137 = *(_OWORD *)v304;
    long long v139 = v302;
    *(long long *)((char *)v125 + 137) = *(_OWORD *)&v304[9];
    v125[7] = v138;
    v125[8] = v137;
    v125[6] = v139;
    goto LABEL_56;
  }
LABEL_54:
  v124 = *(void **)&v284[0];
  *(void *)(*(void *)&v284[0] + 8 * (v117 >> 6) + 64) |= 1 << v117;
  v149 = (uint64_t *)(v124[6] + 16 * v117);
  uint64_t *v149 = v77;
  v149[1] = v76;
  v150 = (_OWORD *)(v124[7] + 160 * v117);
  long long v151 = *(_OWORD *)&v304[9];
  long long v153 = v303;
  long long v152 = *(_OWORD *)v304;
  v150[6] = v302;
  v150[7] = v153;
  v150[8] = v152;
  *(_OWORD *)((char *)v150 + 137) = v151;
  long long v155 = v300;
  long long v154 = v301;
  long long v156 = v299;
  v150[2] = v298;
  v150[3] = v156;
  v150[4] = v155;
  v150[5] = v154;
  long long v157 = v297;
  _OWORD *v150 = v296;
  v150[1] = v157;
  uint64_t v158 = v124[2];
  BOOL v57 = __OFADD__(v158, 1);
  uint64_t v159 = v158 + 1;
  if (v57) {
    goto LABEL_95;
  }
  v124[2] = v159;
  swift_bridgeObjectRetain();
LABEL_56:
  unint64_t v305 = (unint64_t)v124;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v160 = v69[2];
  unint64_t v161 = v69[3];
  swift_bridgeObjectRetain();
  if (v160 >= v161 >> 1) {
    uint64_t v69 = sub_1BFEF692C((void *)(v161 > 1), v160 + 1, 1, v69);
  }
  v69[2] = v160 + 1;
  v162 = &v69[2 * v160];
  v162[4] = v77;
  v162[5] = v76;
  sub_1C05DD698((uint64_t)&v296);
  if (v75) {
    goto LABEL_64;
  }
LABEL_65:
  swift_bridgeObjectRelease();
LABEL_66:
  *(void *)&long long v296 = v69;
  swift_bridgeObjectRetain();
  uint64_t v173 = swift_bridgeObjectRetain();
  sub_1BFEF6AA0(v173);
  uint64_t v174 = v296;
  uint64_t v175 = *(void *)(v296 + 16);
  if (v175)
  {
    swift_bridgeObjectRetain();
    v176 = (uint64_t *)(v174 + 40);
    v177 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      unint64_t v178 = v305;
      if (*(void *)(v305 + 16))
      {
        uint64_t v180 = *(v176 - 1);
        uint64_t v179 = *v176;
        swift_bridgeObjectRetain_n();
        unint64_t v181 = sub_1BFEF2D8C(v180, v179);
        if (v182)
        {
          v183 = (long long *)(*(void *)(v178 + 56) + 160 * v181);
          long long v184 = v183[1];
          long long v296 = *v183;
          long long v297 = v184;
          long long v185 = v183[5];
          long long v187 = v183[2];
          long long v186 = v183[3];
          long long v300 = v183[4];
          long long v301 = v185;
          long long v298 = v187;
          long long v299 = v186;
          long long v188 = v183[6];
          long long v189 = v183[7];
          long long v190 = v183[8];
          *(_OWORD *)&v304[9] = *(long long *)((char *)v183 + 137);
          long long v303 = v189;
          *(_OWORD *)v304 = v190;
          long long v302 = v188;
          sub_1C05DD5B8((uint64_t)&v296);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v177 = sub_1BFF04748(0, v177[2] + 1, 1, v177);
          }
          unint64_t v192 = v177[2];
          unint64_t v191 = v177[3];
          if (v192 >= v191 >> 1) {
            v177 = sub_1BFF04748((void *)(v191 > 1), v192 + 1, 1, v177);
          }
          v177[2] = v192 + 1;
          v193 = &v177[20 * v192];
          long long v194 = v297;
          v193[2] = v296;
          v193[3] = v194;
          long long v195 = v298;
          long long v196 = v299;
          long long v197 = v301;
          v193[6] = v300;
          v193[7] = v197;
          v193[4] = v195;
          v193[5] = v196;
          long long v198 = v302;
          long long v199 = v303;
          long long v200 = *(_OWORD *)v304;
          *(_OWORD *)((char *)v193 + 169) = *(_OWORD *)&v304[9];
          v193[9] = v199;
          v193[10] = v200;
          v193[8] = v198;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v176 += 2;
      --v175;
    }
    while (v175);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v177 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v201 = v225[7];
  if (!v201)
  {
    uint64_t v201 = *(void *)(v226 + 56);
    swift_bridgeObjectRetain();
  }
  uint64_t v275 = v225[8];
  uint64_t v202 = v275;
  if ((~v275 & 0xF000000000000007) == 0)
  {
    uint64_t v202 = *(void *)(v226 + 64);
    sub_1BFEF683C(v202);
  }
  uint64_t v203 = v225[9];
  if (!v203) {
    uint64_t v203 = swift_bridgeObjectRetain();
  }
  uint64_t v262 = v203;
  uint64_t v264 = v202;
  uint64_t v273 = v201;
  uint64_t v204 = v225[10];
  uint64_t v205 = v225[11];
  uint64_t v268 = v205;
  uint64_t v270 = v204;
  unsigned int v206 = *((unsigned __int8 *)v225 + 96);
  char v266 = *((unsigned char *)v225 + 96);
  if (v206 >= 0xFE)
  {
    uint64_t v204 = *(void *)(v226 + 80);
    uint64_t v205 = *(void *)(v226 + 88);
    LOBYTE(v206) = *(unsigned char *)(v226 + 96);
    sub_1BFEF6828(v204, v205, v206);
  }
  char v238 = v206;
  uint64_t v242 = v205;
  uint64_t v244 = v204;
  uint64_t v207 = v225[13];
  uint64_t v208 = v225[14];
  uint64_t v209 = v225[18];
  uint64_t v210 = v225[19];
  uint64_t v211 = v225[20];
  uint64_t v212 = v225[21];
  uint64_t v258 = v208;
  uint64_t v260 = v207;
  uint64_t v254 = v225[16];
  uint64_t v256 = v225[15];
  uint64_t v281 = v254;
  uint64_t v283 = v256;
  uint64_t v250 = v209;
  uint64_t v252 = v225[17];
  uint64_t v278 = v252;
  uint64_t v246 = v211;
  uint64_t v248 = v210;
  uint64_t v240 = v212;
  uint64_t v236 = v225[22];
  uint64_t v213 = v236;
  int v214 = *((unsigned __int8 *)v225 + 184);
  unsigned __int8 v215 = *((unsigned char *)v225 + 184);
  if (v214 == 254)
  {
    uint64_t v207 = *(void *)(v226 + 104);
    uint64_t v208 = *(void *)(v226 + 112);
    uint64_t v209 = *(void *)(v226 + 144);
    uint64_t v210 = *(void *)(v226 + 152);
    uint64_t v211 = *(void *)(v226 + 160);
    uint64_t v212 = *(void *)(v226 + 168);
    uint64_t v213 = *(void *)(v226 + 176);
    unsigned __int8 v215 = *(unsigned char *)(v226 + 184);
    uint64_t v281 = *(void *)(v226 + 128);
    uint64_t v283 = *(void *)(v226 + 120);
    uint64_t v278 = *(void *)(v226 + 136);
    sub_1BFEF8708(v207, v208, v283, v281, v278, v209, v210, v211, v212, v213, v215);
  }
  uint64_t v232 = v210;
  uint64_t v234 = v209;
  uint64_t v216 = v208;
  uint64_t v217 = v207;
  int v218 = *((unsigned __int8 *)v225 + 185);
  if (v218 == 2) {
    LOBYTE(v218) = *(unsigned char *)(v226 + 185);
  }
  uint64_t v219 = swift_allocObject();
  swift_beginAccess();
  *(void *)(v219 + 16) = v224;
  *(void *)(v219 + 24) = v223;
  *(void *)(v219 + 32) = v222;
  *(void *)(v219 + 40) = v221;
  swift_beginAccess();
  *(void *)(v219 + 48) = v177;
  *(void *)(v219 + 56) = v273;
  *(void *)(v219 + 64) = v264;
  *(void *)(v219 + 72) = v262;
  *(void *)(v219 + 80) = v244;
  *(void *)(v219 + 88) = v242;
  *(unsigned char *)(v219 + 96) = v238;
  *(void *)(v219 + 104) = v217;
  *(void *)(v219 + 112) = v216;
  *(void *)(v219 + 120) = v283;
  *(void *)(v219 + 128) = v281;
  *(void *)(v219 + 136) = v278;
  *(void *)(v219 + 144) = v234;
  *(void *)(v219 + 152) = v232;
  *(void *)(v219 + 160) = v211;
  *(void *)(v219 + 168) = v212;
  *(void *)(v219 + 176) = v213;
  *(unsigned char *)(v219 + 184) = v215;
  *(unsigned char *)(v219 + 185) = v218;
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v275);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v270, v268, v266);
  sub_1BFEF8708(v260, v258, v256, v254, v252, v250, v248, v246, v240, v236, v214);
  return v219;
}

uint64_t sub_1BFF046A0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 0x80) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for FormatViewNodeStyle.Selector(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) != 0) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 <= 0xFD) {
    sub_1BFF04738(*(void *)(a1 + 32), *(void *)(a1 + 40), v2);
  }
  if (*(unsigned __int8 *)(a1 + 136) != 254) {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFF04738(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 0x80) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1BFF04748(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB890420, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, MEMORY[0x1E4FBBE00]);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[20 * v8 + 4]) {
          memmove(v12, a4 + 4, 160 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BFF04888(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFF04888(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 160 * a1 + 32;
    unint64_t v6 = a3 + 160 * v4;
    if (v5 >= v6 || v5 + 160 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1BFF04980()
{
  if (!qword_1EB88FEC0)
  {
    sub_1C008192C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88FEC0);
    }
  }
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1BFF04A00@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1C15154CC();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  *(void *)&v36[0] = *a1;
  *((void *)&v36[0] + 1) = v9;
  sub_1BFF27ECC();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151FF1C();
  swift_bridgeObjectRelease();
  int64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v31 = v9;
    uint64_t v32 = v8;
    long long v33 = a2;
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1BFF04EFC(0, v11, 0);
    uint64_t v12 = (void (**)(char *, uint64_t))(v5 + 8);
    v30[1] = v10;
    long long v13 = (uint64_t *)(v10 + 56);
    do
    {
      uint64_t v14 = *(v13 - 3);
      uint64_t v15 = *(v13 - 2);
      uint64_t v16 = *(v13 - 1);
      uint64_t v17 = *v13;
      swift_bridgeObjectRetain();
      v34[0] = MEMORY[0x1C18C6220](v14, v15, v16, v17);
      v34[1] = v18;
      sub_1C15153DC();
      uint64_t v19 = sub_1C151FE9C();
      uint64_t v21 = v20;
      (*v12)(v7, v4);
      swift_bridgeObjectRelease();
      sub_1BFF04CBC(v19, v21, (uint64_t *)v36);
      swift_bridgeObjectRelease();
      uint64_t v22 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF04EFC(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v35;
      }
      unint64_t v24 = *(void *)(v22 + 16);
      unint64_t v23 = *(void *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1BFF04EFC(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v35;
      }
      *(void *)(v22 + 16) = v24 + 1;
      uint64_t v25 = v22 + 40 * v24;
      long long v26 = v36[0];
      long long v27 = v36[1];
      *(void *)(v25 + 64) = v37;
      *(_OWORD *)(v25 + 32) = v26;
      *(_OWORD *)(v25 + 48) = v27;
      v13 += 4;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v8 = v32;
    a2 = v33;
    uint64_t v9 = v31;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
  }
  v34[0] = v22;
  swift_bridgeObjectRetain();
  sub_1BFF04F1C(v34);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v29 = v34[0];
  *a2 = v8;
  a2[1] = v9;
  a2[2] = v29;
  return result;
}

unint64_t sub_1BFF04CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v6 = MEMORY[0x1E4FBC870];
  uint64_t v36 = MEMORY[0x1E4FBC870];
  uint64_t v37 = MEMORY[0x1E4FBC870];
  v35[0] = a1;
  v35[1] = a2;
  sub_1BFF27ECC();
  uint64_t v7 = sub_1C151FF1C();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v33 = v4;
    uint64_t v34 = v3;
    swift_bridgeObjectRetain();
    uint64_t v32 = v7;
    uint64_t v9 = (uint64_t *)(v7 + 56);
    while (1)
    {
      unint64_t v13 = *(v9 - 3);
      unint64_t v14 = *(v9 - 2);
      uint64_t v16 = *(v9 - 1);
      uint64_t v15 = *v9;
      swift_bridgeObjectRetain();
      if (v14 >> 14 == v13 >> 14) {
        break;
      }
      if (sub_1C151FDCC() == 33 && v17 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v19 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0) {
          break;
        }
      }
      unint64_t result = sub_1C151FDAC();
      if (v21) {
        unint64_t result = v14;
      }
      if (v14 >> 14 < result >> 14)
      {
        __break(1u);
        return result;
      }
      uint64_t v22 = sub_1C151FDEC();
      uint64_t v24 = v23;
      uint64_t v26 = v25;
      uint64_t v28 = v27;
      swift_bridgeObjectRelease();
      uint64_t v10 = MEMORY[0x1C18C6220](v22, v24, v26, v28);
      uint64_t v12 = v29;
      swift_bridgeObjectRelease();
LABEL_4:
      sub_1BFEFFC1C(v35, v10, v12);
      swift_bridgeObjectRelease();
      v9 += 4;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v36;
        uint64_t v30 = v37;
        uint64_t v31 = *(void *)(v32 + 16);
        uint64_t v3 = v34;
        uint64_t v4 = v33;
        goto LABEL_19;
      }
    }
    uint64_t v10 = MEMORY[0x1C18C6220](v13, v14, v16, v15);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  uint64_t v31 = 0;
  uint64_t v30 = v6;
LABEL_19:
  unint64_t result = swift_bridgeObjectRelease();
  *a3 = v4;
  a3[1] = v3;
  a3[2] = v31;
  a3[3] = v30;
  a3[4] = v6;
  return result;
}

uint64_t sub_1BFF04EFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF65E88(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BFF04F1C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF04F88(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1BFF04F9C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BFF04F88(uint64_t a1)
{
  return sub_1BFF65E88(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BFF04F9C(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v94 = 0;
      uint64_t v95 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v97 = *(void *)(v95 + 40 * i + 16);
        uint64_t v98 = v94;
        do
        {
          uint64_t v99 = v95 + v98;
          if (*(void *)(v95 + v98 + 16) >= v97) {
            break;
          }
          if (!v95) {
            goto LABEL_140;
          }
          uint64_t v100 = v95 + v98;
          uint64_t v101 = *(void *)(v95 + v98 + 48);
          long long v102 = *(_OWORD *)(v95 + v98 + 64);
          long long v103 = *(_OWORD *)(v99 + 16);
          uint64_t result = *(void *)(v99 + 32);
          uint64_t v104 = *(void *)(v99 + 40);
          *(_OWORD *)(v99 + 40) = *(_OWORD *)v99;
          *(_OWORD *)(v99 + 56) = v103;
          *(void *)(v99 + 72) = result;
          *(void *)uint64_t v100 = v104;
          *(void *)(v100 + 8) = v101;
          *(void *)(v99 + 16) = v97;
          v98 -= 40;
          *(_OWORD *)(v100 + 24) = v102;
        }
        while (v98 != -40);
        v94 += 40;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  uint64_t v6 = result;
  uint64_t v114 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
LABEL_102:
      char v105 = v12;
      uint64_t v116 = v9;
      if (v13 >= 2)
      {
        uint64_t v106 = *v114;
        do
        {
          unint64_t v107 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v106) {
            goto LABEL_144;
          }
          uint64_t v108 = v105;
          uint64_t v109 = *(void *)&v105[16 * v107 + 32];
          uint64_t v110 = *(void *)&v105[16 * v13 + 24];
          sub_1C0AB17CC((char *)(v106 + 40 * v109), (char *)(v106 + 40 * *(void *)&v105[16 * v13 + 16]), v106 + 40 * v110, __dst);
          if (v1) {
            break;
          }
          if (v110 < v109) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v108 = sub_1C063604C((uint64_t)v108);
          }
          if (v107 >= *((void *)v108 + 2)) {
            goto LABEL_133;
          }
          char v111 = &v108[16 * v107 + 32];
          *(void *)char v111 = v109;
          *((void *)v111 + 1) = v110;
          unint64_t v112 = *((void *)v108 + 2);
          if (v13 > v112) {
            goto LABEL_134;
          }
          memmove(&v108[16 * v13 + 16], &v108[16 * v13 + 32], 16 * (v112 - v13));
          char v105 = v108;
          *((void *)v108 + 2) = v112 - 1;
          unint64_t v13 = v112 - 1;
        }
        while (v112 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v116 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v116 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1C151ECCC();
    *(void *)(v8 + 16) = v7;
    uint64_t v116 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v115 = *a1 + 96;
  uint64_t v113 = *a1 + 24;
  uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v117 = v6;
  uint64_t v118 = v3;
  uint64_t v119 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 40 * v10 + 16);
      uint64_t v16 = *(void *)(v11 + 40 * v14 + 16);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (uint64_t *)(v115 + 40 * v14);
        uint64_t v18 = v15;
        while (1)
        {
          uint64_t v20 = *v17;
          v17 += 5;
          uint64_t v19 = v20;
          if (v16 < v15 == v18 >= v20) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          uint64_t v21 = 40 * v10;
          uint64_t v22 = 40 * v14;
          uint64_t v23 = v10;
          uint64_t v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11) {
                goto LABEL_143;
              }
              uint64_t v25 = v11 + v22;
              long long v26 = *(_OWORD *)(v11 + v22);
              uint64_t v27 = v11 + v21;
              uint64_t v28 = *(void *)(v11 + v22 + 16);
              long long v29 = *(_OWORD *)(v11 + v22 + 24);
              uint64_t v30 = *(void *)(v11 + v21 - 8);
              long long v31 = *(_OWORD *)(v11 + v21 - 24);
              *(_OWORD *)uint64_t v25 = *(_OWORD *)(v11 + v21 - 40);
              *(_OWORD *)(v25 + 16) = v31;
              *(void *)(v25 + 32) = v30;
              *(_OWORD *)(v27 - 40) = v26;
              *(void *)(v27 - 24) = v28;
              *(_OWORD *)(v27 - 16) = v29;
            }
            ++v24;
            v21 -= 40;
            v22 += 40;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v32 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v32 >= v3) {
      uint64_t v32 = v3;
    }
    if (v32 < v14) {
      break;
    }
    if (v10 != v32)
    {
      uint64_t v33 = v113 + 40 * v10;
      do
      {
        uint64_t v34 = *(void *)(v11 + 40 * v10 + 16);
        uint64_t v35 = v14;
        uint64_t v36 = v33;
        do
        {
          if (*(void *)(v36 - 48) >= v34) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v37 = v36 - 24;
          uint64_t v38 = *(void *)(v36 - 32);
          long long v40 = *(_OWORD *)(v36 - 64);
          long long v39 = *(_OWORD *)(v36 - 48);
          *(_OWORD *)(v36 - 40) = *(_OWORD *)v36;
          v36 -= 40;
          uint64_t v41 = *(void *)(v36 + 16);
          uint64_t v42 = *(void *)(v36 + 24);
          *(_OWORD *)uint64_t v37 = v40;
          *(_OWORD *)(v37 + 16) = v39;
          *(void *)(v37 + 32) = v38;
          *(void *)(v36 - 24) = v41;
          *(void *)(v36 - 16) = v42;
          *(void *)(v36 - 8) = v34;
          ++v35;
        }
        while (v10 != v35);
        ++v10;
        v33 += 40;
      }
      while (v10 != v32);
      uint64_t v10 = v32;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1C0634CC8(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v44 = *((void *)v12 + 2);
    unint64_t v43 = *((void *)v12 + 3);
    unint64_t v13 = v44 + 1;
    uint64_t v11 = v119;
    if (v44 >= v43 >> 1)
    {
      uint64_t v93 = sub_1C0634CC8((char *)(v43 > 1), v44 + 1, 1, v12);
      uint64_t v11 = v119;
      uint64_t v12 = v93;
    }
    *((void *)v12 + 2) = v13;
    long long v45 = v12 + 32;
    long long v46 = &v12[16 * v44 + 32];
    *(void *)long long v46 = v14;
    *((void *)v46 + 1) = v10;
    if (v44)
    {
      while (1)
      {
        unint64_t v47 = v13 - 1;
        if (v13 >= 4)
        {
          long long v52 = &v45[16 * v13];
          uint64_t v53 = *((void *)v52 - 8);
          uint64_t v54 = *((void *)v52 - 7);
          BOOL v58 = __OFSUB__(v54, v53);
          uint64_t v55 = v54 - v53;
          if (v58) {
            goto LABEL_119;
          }
          uint64_t v57 = *((void *)v52 - 6);
          uint64_t v56 = *((void *)v52 - 5);
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v50 = v56 - v57;
          char v51 = v58;
          if (v58) {
            goto LABEL_120;
          }
          unint64_t v59 = v13 - 2;
          unint64_t v60 = &v45[16 * v13 - 32];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v58 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v58) {
            goto LABEL_122;
          }
          BOOL v58 = __OFADD__(v50, v63);
          uint64_t v64 = v50 + v63;
          if (v58) {
            goto LABEL_125;
          }
          if (v64 >= v55)
          {
            v82 = &v45[16 * v47];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v58 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v58) {
              goto LABEL_129;
            }
            BOOL v75 = v50 < v85;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v76 = *((void *)v12 + 4);
            uint64_t v77 = *((void *)v12 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
            goto LABEL_77;
          }
          uint64_t v49 = *((void *)v12 + 4);
          uint64_t v48 = *((void *)v12 + 5);
          BOOL v58 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          char v51 = v58;
        }
        if (v51) {
          goto LABEL_121;
        }
        unint64_t v59 = v13 - 2;
        long long v65 = &v45[16 * v13 - 32];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v68 = __OFSUB__(v66, v67);
        uint64_t v69 = v66 - v67;
        char v70 = v68;
        if (v68) {
          goto LABEL_124;
        }
        long long v71 = &v45[16 * v47];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v58 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v58) {
          goto LABEL_127;
        }
        if (__OFADD__(v69, v74)) {
          goto LABEL_128;
        }
        if (v69 + v74 >= v50)
        {
          BOOL v75 = v50 < v74;
LABEL_83:
          if (v75) {
            unint64_t v47 = v59;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v70) {
          goto LABEL_123;
        }
        uint64_t v78 = &v45[16 * v47];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v58 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v58) {
          goto LABEL_126;
        }
        if (v81 < v69) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v86 = v47 - 1;
        if (v47 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        long long v87 = v12;
        long long v88 = &v45[16 * v86];
        uint64_t v89 = *(void *)v88;
        uint64_t v90 = &v45[16 * v47];
        uint64_t v91 = *((void *)v90 + 1);
        sub_1C0AB17CC((char *)(v11 + 40 * *(void *)v88), (char *)(v11 + 40 * *(void *)v90), v11 + 40 * v91, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v91 < v89) {
          goto LABEL_116;
        }
        if (v47 > *((void *)v87 + 2)) {
          goto LABEL_117;
        }
        *(void *)long long v88 = v89;
        *(void *)&v45[16 * v86 + 8] = v91;
        unint64_t v92 = *((void *)v87 + 2);
        if (v47 >= v92) {
          goto LABEL_118;
        }
        uint64_t v12 = v87;
        unint64_t v13 = v92 - 1;
        memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
        *((void *)v87 + 2) = v92 - 1;
        uint64_t v11 = v119;
        if (v92 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v117;
    uint64_t v3 = v118;
    if (v10 >= v118)
    {
      uint64_t v9 = v116;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_1BFF057B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v49 = a7;
  uint64_t v50 = a8;
  uint64_t v47 = a2;
  sub_1BFF05BFC(0, (unint64_t *)&qword_1EB871380, MEMORY[0x1E4FABA40]);
  uint64_t v48 = v14;
  uint64_t v51 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v14);
  long long v46 = (char *)v39 - v16;
  sub_1BFF05BFC(0, (unint64_t *)&qword_1EB871360, MEMORY[0x1E4FABA30]);
  uint64_t v18 = v17;
  uint64_t v54 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (void *)((char *)v39 - v19);
  uint64_t v57 = a1;
  uint64_t KeyPath = swift_getKeyPath();
  swift_unownedRetainStrong();
  unint64_t v22 = *(void *)(a5 + 32);
  sub_1BFF35EA4(v22);
  uint64_t v52 = a5;
  swift_release();
  unint64_t v56 = v22;
  uint64_t v53 = (uint64_t)a6;
  uint64_t v23 = a6;
  uint64_t v24 = a3;
  uint64_t v25 = v55;
  sub_1BFF30600(v23, a3, a4, v20);
  sub_1BFF322A8(v22);
  if (!v25)
  {
    uint64_t v41 = v15;
    uint64_t v42 = a4;
    uint64_t v27 = v51;
    uint64_t v28 = v52;
    unint64_t v44 = v20;
    uint64_t v45 = KeyPath;
    uint64_t v55 = v18;
    uint64_t v43 = v24;
    swift_unownedRetainStrong();
    swift_beginAccess();
    uint64_t v29 = *(void *)(v28 + 48);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v30 = v53;
    swift_retain();
    uint64_t v31 = sub_1C12A4C68(v29, v30);
    uint64_t v40 = a9;
    swift_bridgeObjectRelease();
    swift_release();
    v39[1] = v31;
    uint64_t v32 = v46;
    uint64_t v33 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v46, v47, v48);
    unint64_t v34 = (*(unsigned __int8 *)(v27 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
    uint64_t v35 = (char *)swift_allocObject();
    *((void *)v35 + 2) = v49;
    *((void *)v35 + 3) = v30;
    uint64_t v36 = v43;
    *((void *)v35 + 4) = v28;
    *((void *)v35 + 5) = v36;
    uint64_t v47 = 0;
    uint64_t v37 = v50;
    *((void *)v35 + 6) = v42;
    *((void *)v35 + 7) = v37;
    *((void *)v35 + 8) = v40;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v35[v34], v32, v33);
    swift_retain();
    swift_retain();
    swift_unownedRetain();
    sub_1BFF1D63C();
    sub_1BFF05C60(&qword_1EB884D70, 255, (void (*)(uint64_t))sub_1BFF1D63C);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v38 = v44;
    sub_1C15173EC();
    (*(void (**)(uint64_t *, uint64_t))(v54 + 8))(v38, v55);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

void sub_1BFF05BFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFF597F8();
    unint64_t v7 = a3(a1, &type metadata for FormatLayout, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1BFF05C60(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF05CA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFEFE7C8(&qword_1EB8875F8, (uint64_t)qword_1EB93C9F0, a1);
}

uint64_t sub_1BFF05CCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BFF05D18()
{
  if (!qword_1EB863ED0)
  {
    sub_1C151928C();
    sub_1BFEFDD10(255, (unint64_t *)&qword_1EB879C00, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EB863ED0);
    }
  }
}

uint64_t sub_1BFF05DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  unint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1BFEF2D8C(a4, a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1C106B39C();
LABEL_7:
    unint64_t v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = (void *)(v22[7] + 24 * v16);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v23 = a1;
      v23[1] = a2;
      v23[2] = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_1BFFDF158(v19, a6 & 1);
  unint64_t v25 = sub_1BFEF2D8C(a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  unint64_t v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v27 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v27 = a4;
  v27[1] = a5;
  uint64_t v28 = (void *)(v22[7] + 24 * v16);
  *uint64_t v28 = a1;
  v28[1] = a2;
  v28[2] = a3;
  uint64_t v29 = v22[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v31;
  return swift_bridgeObjectRetain();
}

void sub_1BFF05F54()
{
  if (!qword_1EB87A7F0)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB8779F0);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A7F0);
    }
  }
}

__n128 __swift_memcpy121_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

void sub_1BFF05FE8()
{
  if (!qword_1EB87A850)
  {
    sub_1BFC845BC(255, &qword_1EB878A10);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A850);
    }
  }
}

uint64_t sub_1BFF06050(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1;
  uint64_t v72 = *v1;
  swift_beginAccess();
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = *(void *)(v3 + 40);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v3 + 48);
  uint64_t v10 = *(void *)(v3 + 56);
  uint64_t v73 = v7;
  if (!v10)
  {
    uint64_t v71 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  double v11 = sub_1BFF493E4(v74[0], v10);
  if (!v2)
  {
    double v14 = v11;
    uint64_t v71 = v6;
    swift_release();
    uint64_t v15 = swift_allocObject();
    *(double *)(v15 + 16) = v14;
    sub_1BFFC0BF8();
    uint64_t v12 = swift_allocObject();
    uint64_t v13 = v12;
    *(_OWORD *)(v12 + 16) = xmmword_1C1529AE0;
    *(void *)(v12 + 32) = v15;
    *(unsigned char *)(v12 + 40) = 0;
LABEL_6:
    uint64_t v16 = *(void *)(v3 + 64);
    if ((~v16 & 0xF000000000000007) != 0)
    {
      swift_retain();
      sub_1BFF07448(a1, v16, v74);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEF68C0(v16);
LABEL_19:
        swift_bridgeObjectRelease();
        return v3;
      }
      uint64_t v12 = sub_1BFEF68C0(v16);
      uint64_t v16 = v74[0];
    }
    if (*(void *)(v3 + 72))
    {
      v74[0] = a1;
      MEMORY[0x1F4188790](v12);
      v50[2] = v74;
      uint64_t v18 = sub_1C0182288((void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_1BFFC2654, (uint64_t)v50, v17);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEF68C0(v16);
        swift_bridgeObjectRelease();
        return v3;
      }
      uint64_t v53 = v16;
      uint64_t v54 = v5;
      uint64_t v52 = a1;
      uint64_t v55 = v8;
      uint64_t v56 = v9;
      uint64_t v59 = v13;
    }
    else
    {
      uint64_t v53 = v16;
      uint64_t v54 = v5;
      uint64_t v52 = a1;
      uint64_t v55 = v8;
      uint64_t v56 = v9;
      uint64_t v59 = v13;
      uint64_t v18 = 0;
    }
    uint64_t v60 = v18;
    uint64_t v20 = *(void *)(v3 + 80);
    uint64_t v19 = *(void *)(v3 + 88);
    int v21 = *(unsigned __int8 *)(v3 + 96);
    uint64_t v22 = *(void *)(v3 + 104);
    uint64_t v67 = *(void *)(v3 + 112);
    uint64_t v24 = *(void *)(v3 + 120);
    uint64_t v23 = *(void *)(v3 + 128);
    uint64_t v25 = *(void *)(v3 + 136);
    uint64_t v26 = *(void *)(v3 + 144);
    uint64_t v27 = *(void *)(v3 + 160);
    uint64_t v28 = *(void *)(v3 + 168);
    uint64_t v29 = *(void *)(v3 + 176);
    int v30 = *(unsigned __int8 *)(v3 + 184);
    uint64_t v69 = *(void *)(v3 + 152);
    uint64_t v70 = v27;
    uint64_t v68 = v26;
    uint64_t v65 = v24;
    uint64_t v66 = v23;
    uint64_t v64 = v22;
    uint64_t v63 = v28;
    uint64_t v62 = v29;
    int v61 = v30;
    uint64_t v58 = v19;
    uint64_t v57 = v20;
    if (v30 == 254)
    {
      uint64_t v52 = v25;
      char v31 = v21;
      sub_1BFEF6828(v20, v19, v21);
      uint64_t v32 = v67;
    }
    else
    {
      int v51 = v21;
      uint64_t v33 = v28;
      uint64_t v34 = v29;
      unsigned __int8 v35 = v30;
      sub_1BFEF6828(v20, v19, v21);
      sub_1BFEF8708(v22, v67, v24, v23, v25, v68, v69, v70, v33, v34, v35);
      sub_1BFF64090(v52, v25, v74);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEF8738(v64, v67, v65, v66, v25, v68, v69, v70, v63, v62, v61);
        sub_1BFEF68AC(v57, v58, v51);
        sub_1BFEF68C0(v53);
        goto LABEL_19;
      }
      unsigned int v37 = v67;
      sub_1BFEF8738(v64, v67, v65, v66, v25, v68, v69, v70, v63, v62, v61);
      uint64_t v52 = v74[0];
      uint64_t v32 = v37;
      char v31 = v51;
    }
    uint64_t v38 = v56;
    uint64_t v39 = v55;
    uint64_t v40 = v54;
    uint64_t v41 = v53;
    char v42 = *(unsigned char *)(v3 + 185);
    uint64_t v3 = swift_allocObject();
    swift_beginAccess();
    *(void *)(v3 + 16) = v71;
    *(void *)(v3 + 24) = v40;
    *(void *)(v3 + 32) = v73;
    *(void *)(v3 + 40) = v39;
    swift_beginAccess();
    uint64_t v43 = v59;
    *(void *)(v3 + 48) = v38;
    *(void *)(v3 + 56) = v43;
    uint64_t v44 = v60;
    *(void *)(v3 + 64) = v41;
    *(void *)(v3 + 72) = v44;
    uint64_t v45 = v58;
    *(void *)(v3 + 80) = v57;
    *(void *)(v3 + 88) = v45;
    *(unsigned char *)(v3 + 96) = v31;
    *(void *)(v3 + 104) = v64;
    *(void *)(v3 + 112) = v32;
    uint64_t v46 = v66;
    *(void *)(v3 + 120) = v65;
    *(void *)(v3 + 128) = v46;
    uint64_t v47 = v68;
    *(void *)(v3 + 136) = v52;
    *(void *)(v3 + 144) = v47;
    uint64_t v48 = v70;
    *(void *)(v3 + 152) = v69;
    *(void *)(v3 + 160) = v48;
    uint64_t v49 = v62;
    *(void *)(v3 + 168) = v63;
    *(void *)(v3 + 176) = v49;
    *(unsigned char *)(v3 + 184) = v61;
    *(unsigned char *)(v3 + 185) = v42;
    return v3;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v3;
}

uint64_t sub_1BFF06678(uint64_t a1)
{
  uint64_t v103 = a1;
  uint64_t v104 = 0;
  uint64_t v124 = *MEMORY[0x1E4F143B8];
  uint64_t v97 = *v1;
  swift_beginAccess();
  unint64_t v92 = v1;
  uint64_t v2 = v1[6];
  int64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  long long v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v99 = sub_1BFF04748(0, v3, 0, MEMORY[0x1E4FBC860]);
  uint64_t v93 = sub_1BFF06E18(0, v3, 0, v4);
  uint64_t v95 = *(void *)(v2 + 16);
  uint64_t v96 = v2;
  if (!v95)
  {
LABEL_31:
    sub_1BFF07084();
    uint64_t v55 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v56 = *(void *)(v55 + 16);
    if (v56)
    {
      uint64_t v57 = v56 - 1;
      for (uint64_t i = 32; ; i += 168)
      {
        long long v59 = *(_OWORD *)(v55 + i);
        long long v60 = *(_OWORD *)(v55 + i + 32);
        long long v106 = *(_OWORD *)(v55 + i + 16);
        long long v107 = v60;
        long long v105 = v59;
        long long v61 = *(_OWORD *)(v55 + i + 48);
        long long v62 = *(_OWORD *)(v55 + i + 64);
        long long v63 = *(_OWORD *)(v55 + i + 96);
        long long v110 = *(_OWORD *)(v55 + i + 80);
        long long v111 = v63;
        long long v108 = v61;
        long long v109 = v62;
        long long v64 = *(_OWORD *)(v55 + i + 112);
        long long v65 = *(_OWORD *)(v55 + i + 128);
        long long v66 = *(_OWORD *)(v55 + i + 144);
        uint64_t v114 = *(void *)(v55 + i + 160);
        v113[0] = v65;
        v113[1] = v66;
        long long v112 = v64;
        sub_1C05DD5B8((uint64_t)&v105);
        uint64_t v67 = v99;
        unint64_t v69 = v99[2];
        unint64_t v68 = v99[3];
        if (v69 >= v68 >> 1) {
          uint64_t v67 = sub_1BFF04748((void *)(v68 > 1), v69 + 1, 1, v99);
        }
        v67[2] = v69 + 1;
        uint64_t v99 = v67;
        uint64_t v70 = &v67[20 * v69];
        long long v71 = v106;
        v70[2] = v105;
        v70[3] = v71;
        long long v72 = v107;
        long long v73 = v108;
        long long v74 = v110;
        v70[6] = v109;
        v70[7] = v74;
        v70[4] = v72;
        v70[5] = v73;
        long long v75 = v111;
        long long v76 = v112;
        long long v77 = v113[0];
        *(_OWORD *)((char *)v70 + 169) = *(_OWORD *)((char *)v113 + 9);
        v70[9] = v76;
        v70[10] = v77;
        v70[8] = v75;
        if (!v57) {
          break;
        }
        --v57;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v78 = v99;
    uint64_t v79 = v99[2];
    if (v79)
    {
      uint64_t v80 = (uint64_t)v92;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v81 = v79 - 1;
      uint64_t v82 = v80;
      for (uint64_t j = 4; ; j += 20)
      {
        long long v84 = *(_OWORD *)&v78[j + 2];
        long long v105 = *(_OWORD *)&v78[j];
        long long v106 = v84;
        long long v85 = *(_OWORD *)&v78[j + 4];
        long long v86 = *(_OWORD *)&v78[j + 6];
        long long v87 = *(_OWORD *)&v78[j + 10];
        long long v109 = *(_OWORD *)&v78[j + 8];
        long long v110 = v87;
        long long v107 = v85;
        long long v108 = v86;
        long long v88 = *(_OWORD *)&v78[j + 12];
        long long v89 = *(_OWORD *)&v78[j + 14];
        long long v90 = *(_OWORD *)&v78[j + 16];
        *(_OWORD *)((char *)v113 + 9) = *(_OWORD *)((char *)&v78[j + 17] + 1);
        v113[0] = v90;
        long long v111 = v88;
        long long v112 = v89;
        long long v121 = v88;
        long long v122 = v89;
        v123[0] = v90;
        *(_OWORD *)((char *)v123 + 9) = *(_OWORD *)((char *)v113 + 9);
        long long v117 = v107;
        long long v118 = v108;
        long long v119 = v109;
        long long v120 = v87;
        long long v115 = v105;
        long long v116 = v106;
        swift_allocObject();
        sub_1C05DD5B8((uint64_t)&v105);
        uint64_t v82 = sub_1BFF07A0C(v82, &v115);
        swift_release();
        if (!v81) {
          break;
        }
        --v81;
        uint64_t v78 = v99;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v82 = (uint64_t)v92;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v82;
  }
  uint64_t v94 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v5 = 0;
LABEL_3:
  unint64_t v98 = v5;
  uint64_t v6 = (long long *)(v94 + 160 * v5);
  long long v7 = v6[1];
  long long v115 = *v6;
  long long v116 = v7;
  long long v8 = v6[2];
  long long v9 = v6[3];
  long long v10 = v6[5];
  long long v119 = v6[4];
  long long v120 = v10;
  long long v117 = v8;
  long long v118 = v9;
  long long v11 = v6[6];
  long long v12 = v6[7];
  long long v13 = v6[8];
  *(_OWORD *)((char *)v123 + 9) = *(long long *)((char *)v6 + 137);
  long long v122 = v12;
  v123[0] = v13;
  long long v121 = v11;
  long long v14 = v115;
  sub_1C05DD5B8((uint64_t)&v115);
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  long long v105 = v14;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1BFEF53C0((uint64_t *)&v105);
  swift_bridgeObjectRelease();
  uint64_t v101 = *(void *)(v15 + 16);
  if (!v101)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  unint64_t v16 = 0;
  uint64_t v17 = (uint64_t *)(v15 + 64);
  uint64_t v18 = v15;
  while (1)
  {
    if (v16 >= *(void *)(v18 + 16))
    {
      __break(1u);
      goto LABEL_45;
    }
    uint64_t v100 = *(v17 - 2);
    uint64_t v19 = *(v17 - 1);
    uint64_t v20 = *v17;
    char v21 = *(unsigned char *)(v19 + 32);
    unsigned int v22 = v21 & 0x3F;
    unint64_t v23 = (unint64_t)((1 << v21) + 63) >> 6;
    size_t v24 = 8 * v23;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v22 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v26 = (char *)swift_slowAlloc();
    bzero(v26, v24);
    uint64_t v30 = v23;
    uint64_t v28 = v104;
    uint64_t v29 = sub_1BFEFB09C((uint64_t)v26, v30, v19, v103);
    swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_47;
    }
    uint64_t v104 = 0;
    MEMORY[0x1C18C9B00](v26, -1, -1);
LABEL_15:
    char v31 = sub_1BFEFAE14(v29, v19);
    swift_release();
    if (v31 & 1) != 0 && (sub_1BFEFB810(v103, v20))
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = v100;
      if (v100 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C05DD5B8((uint64_t)&v115);
        uint64_t v44 = v99;
        unint64_t v46 = v99[2];
        unint64_t v45 = v99[3];
        if (v46 >= v45 >> 1) {
          uint64_t v44 = sub_1BFF04748((void *)(v45 > 1), v46 + 1, 1, v99);
        }
        v44[2] = v46 + 1;
        uint64_t v99 = v44;
        uint64_t v47 = &v44[20 * v46];
        long long v48 = v116;
        v47[2] = v115;
        v47[3] = v48;
        long long v49 = v117;
        long long v50 = v118;
        long long v51 = v120;
        v47[6] = v119;
        v47[7] = v51;
        v47[4] = v49;
        v47[5] = v50;
        long long v52 = v121;
        long long v53 = v122;
        long long v54 = v123[0];
        *(_OWORD *)((char *)v47 + 169) = *(_OWORD *)((char *)v123 + 9);
        v47[9] = v53;
        v47[10] = v54;
        v47[8] = v52;
      }
      else
      {
        sub_1C05DD5B8((uint64_t)&v115);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v33 = v93;
        unint64_t v35 = v93[2];
        unint64_t v34 = v93[3];
        if (v35 >= v34 >> 1) {
          uint64_t v33 = sub_1BFF06E18((void *)(v34 > 1), v35 + 1, 1, v93);
        }
        long long v109 = v119;
        long long v110 = v120;
        long long v107 = v117;
        long long v108 = v118;
        *(_OWORD *)((char *)v113 + 9) = *(_OWORD *)((char *)v123 + 9);
        v113[0] = v123[0];
        long long v111 = v121;
        long long v112 = v122;
        long long v105 = v115;
        long long v106 = v116;
        v33[2] = v35 + 1;
        uint64_t v93 = v33;
        uint64_t v36 = &v33[21 * v35];
        long long v37 = v106;
        *((_OWORD *)v36 + 2) = v105;
        *((_OWORD *)v36 + 3) = v37;
        long long v38 = v107;
        long long v39 = v108;
        long long v40 = v110;
        *((_OWORD *)v36 + 6) = v109;
        *((_OWORD *)v36 + 7) = v40;
        *((_OWORD *)v36 + 4) = v38;
        *((_OWORD *)v36 + 5) = v39;
        long long v41 = v111;
        long long v42 = v112;
        long long v43 = v113[1];
        *((_OWORD *)v36 + 10) = v113[0];
        *((_OWORD *)v36 + 11) = v43;
        *((_OWORD *)v36 + 8) = v41;
        *((_OWORD *)v36 + 9) = v42;
        v36[24] = v32;
      }
LABEL_26:
      sub_1C05DD698((uint64_t)&v115);
LABEL_27:
      unint64_t v5 = v98 + 1;
      if (v98 + 1 == v95)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v5 >= *(void *)(v96 + 16)) {
LABEL_45:
      }
        __break(1u);
      goto LABEL_3;
    }
    ++v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 += 5;
    if (v101 == v16)
    {
      swift_bridgeObjectRelease();
      sub_1C05DD698((uint64_t)&v115);
      goto LABEL_27;
    }
  }
  long long v102 = &v92;
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v26 = (char *)&v92 - ((v24 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v26, v24);
  uint64_t v27 = v23;
  uint64_t v28 = v104;
  uint64_t v29 = sub_1BFEFB09C((uint64_t)v26, v27, v19, v103);
  swift_bridgeObjectRelease();
  if (!v28)
  {
    uint64_t v104 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_47:

  uint64_t result = MEMORY[0x1C18C9B00](v26, -1, -1);
  __break(1u);
  return result;
}

void *sub_1BFF06E18(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFF0797C();
      long long v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 168);
      long long v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[21 * v8 + 4]) {
          memmove(v12, a4 + 4, 168 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      long long v10 = (void *)MEMORY[0x1E4FBC860];
      long long v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BFF06F44(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFF06F44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 168 * a1 + 32;
    unint64_t v6 = a3 + 168 * v4;
    if (v5 >= v6 || v5 + 168 * v4 <= a3)
    {
      sub_1BFE38B54(0, (unint64_t *)&qword_1EB88CFF0, (uint64_t (*)(void))sub_1C0078B74, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1BFF07084()
{
  if (!qword_1EB88CFF0)
  {
    sub_1C0078B74();
    unint64_t v0 = type metadata accessor for FormatNodeStyleSelectorOrder();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88CFF0);
    }
  }
}

uint64_t sub_1BFF070E0(void *a1, uint64_t a2)
{
  uint64_t v4 = qword_1F1B64738;
  if (qword_1F1B64738)
  {
    uint64_t v3 = a2;
    uint64_t v2 = a1;
    unint64_t v5 = &byte_1F1B64748;
    while (*v5++)
    {
      if (!--v4) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    sub_1C152040C();
    __break(1u);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(void *)(v7 + 72) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BFF9514C(0, v2[2] + 1, 1, v2);
  }
  unint64_t v9 = v2[2];
  unint64_t v8 = v2[3];
  if (v9 >= v8 >> 1) {
    uint64_t v2 = sub_1BFF9514C((void *)(v8 > 1), v9 + 1, 1, v2);
  }
  v2[2] = v9 + 1;
  v2[v9 + 4] = v7 | 0x9000000000000000;
  sub_1BFF951E4();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      unint64_t v14 = *(void *)(v10 + 8 * i + 32);
      switch((v14 >> 59) & 0x1E | (v14 >> 2) & 1)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
        case 4uLL:
        case 5uLL:
        case 6uLL:
        case 7uLL:
        case 8uLL:
        case 9uLL:
        case 0xAuLL:
        case 0xBuLL:
        case 0xCuLL:
        case 0xDuLL:
        case 0xEuLL:
        case 0xFuLL:
        case 0x10uLL:
        case 0x11uLL:
        case 0x12uLL:
        case 0x13uLL:
        case 0x14uLL:
        case 0x15uLL:
        case 0x16uLL:
        case 0x17uLL:
          v14 &= 0xFFFFFFFFFFFFFFBuLL;
          break;
        default:
          break;
      }
      if (!(*(void *)(v14 + 64) >> 59))
      {
        uint64_t v15 = swift_retain();
        MEMORY[0x1C18C66D0](v15);
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

void sub_1BFF07390(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF073E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFF07448@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  switch(a2 >> 61)
  {
    case 1uLL:
      long long v9 = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      v56[2] = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v56[3] = v9;
      long long v10 = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      v56[4] = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      v56[5] = v10;
      uint64_t v11 = swift_allocObject();
      uint64_t result = sub_1BFFEF614(a1, v11 + 16);
      if (v3) {
        goto LABEL_20;
      }
      *a3 = v11 | 0x2000000000000000;
      break;
    case 2uLL:
      uint64_t v12 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v14 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v59 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v15 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v47 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x38);
      uint64_t v48 = v15;
      int v46 = *(unsigned __int8 *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      uint64_t v16 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x48);
      uint64_t v17 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      uint64_t v18 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x58);
      uint64_t v44 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
      uint64_t v45 = v18;
      uint64_t v19 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x68);
      uint64_t v42 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
      uint64_t v43 = v19;
      int v41 = *(unsigned __int8 *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x78);
      uint64_t v21 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      uint64_t v20 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x88);
      uint64_t v22 = swift_allocObject();
      *(void *)&v55[0] = a1;
      MEMORY[0x1F4188790](v22);
      v40[2] = v55;
      uint64_t v23 = sub_1C0182454((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BFF9F260, (uint64_t)v40, v21);
      if (v3) {
        goto LABEL_20;
      }
      *(void *)(v22 + 16) = v12;
      *(void *)(v22 + 24) = v13;
      *(void *)(v22 + 32) = v59;
      *(void *)(v22 + 40) = v14;
      uint64_t v37 = v47;
      *(void *)(v22 + 48) = v48;
      *(void *)(v22 + 56) = v37;
      *(unsigned char *)(v22 + 64) = v46;
      *(void *)(v22 + 72) = v16;
      *(void *)(v22 + 80) = v17;
      uint64_t v38 = v44;
      *(void *)(v22 + 88) = v45;
      *(void *)(v22 + 96) = v38;
      uint64_t v39 = v42;
      *(void *)(v22 + 104) = v43;
      *(void *)(v22 + 112) = v39;
      *(unsigned char *)(v22 + 120) = v41;
      *(void *)(v22 + 128) = v23;
      *(void *)(v22 + 136) = v20;
      *a3 = v22 | 0x4000000000000000;
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3uLL:
      unint64_t v24 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v25 = swift_allocObject();
      uint64_t result = sub_1C002BB30(a1, v24, (uint64_t *)(v25 + 16));
      if (v3) {
        goto LABEL_20;
      }
      *a3 = v25 | 0x6000000000000000;
      break;
    case 4uLL:
      long long v26 = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      v56[12] = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
      v56[13] = v26;
      v57[0] = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
      *(_OWORD *)((char *)v57 + 9) = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x99);
      long long v27 = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      v56[8] = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      v56[9] = v27;
      long long v28 = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
      v56[10] = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      v56[11] = v28;
      long long v29 = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      v56[6] = *(_OWORD *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      v56[7] = v29;
      uint64_t v30 = swift_allocObject();
      uint64_t result = sub_1C1294E08(a1, v30 + 16);
      if (v3) {
        goto LABEL_20;
      }
      *a3 = v30 | 0x8000000000000000;
      break;
    case 5uLL:
      uint64_t v32 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v31 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v33 = swift_allocObject();
      if (v31)
      {
        swift_retain();
        uint64_t result = sub_1BFEF40F8(a1);
        if (v3)
        {
          swift_release();
          goto LABEL_20;
        }
      }
      else
      {
        swift_retain();
        uint64_t result = 0;
      }
      *(void *)(v33 + 16) = v32;
      *(void *)(v33 + 24) = result;
      *a3 = v33 | 0xA000000000000000;
      break;
    case 6uLL:
      uint64_t v34 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFF8874C((a2 & 0x1FFFFFFFFFFFFFFFLL) + 24, (uint64_t)v54, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
      uint64_t v35 = swift_allocObject();
      sub_1BFF8874C((uint64_t)v54, (uint64_t)v55, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
      if (sub_1C00F6584((uint64_t *)v55) == 1)
      {
        swift_retain();
        uint64_t v36 = v54;
      }
      else
      {
        v57[8] = v55[6];
        v58[0] = v56[0];
        *(_OWORD *)((char *)v58 + 9) = *(_OWORD *)((char *)v56 + 9);
        v57[4] = v55[2];
        v57[5] = v55[3];
        v57[7] = v55[5];
        v57[6] = v55[4];
        v57[2] = v55[0];
        v57[3] = v55[1];
        swift_retain();
        sub_1C1298304((uint64_t)v51);
        if (v3)
        {
          swift_release();
          goto LABEL_20;
        }
        v49[6] = v51[6];
        v50[0] = v52[0];
        *(_OWORD *)((char *)v50 + 9) = *(_OWORD *)((char *)v52 + 9);
        v49[2] = v51[2];
        v49[3] = v51[3];
        v49[4] = v51[4];
        v49[5] = v51[5];
        v49[0] = v51[0];
        v49[1] = v51[1];
        nullsub_1(v49);
        uint64_t v36 = v49;
      }
      sub_1BFF8874C((uint64_t)v36, (uint64_t)v53, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
      *(void *)(v35 + 16) = v34;
      uint64_t result = sub_1BFF8874C((uint64_t)v53, v35 + 24, (unint64_t *)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming);
      *a3 = v35 | 0xC000000000000000;
      break;
    case 7uLL:
      *a3 = a2;
      uint64_t result = swift_retain();
      break;
    default:
      unint64_t v6 = *(void *)(a2 + 16);
      uint64_t v7 = swift_allocObject();
      uint64_t result = sub_1BFF64090(a1, v6, (uint64_t *)(v7 + 16));
      if (v3) {
LABEL_20:
      }
        uint64_t result = swift_deallocUninitializedObject();
      else {
        *a3 = v7;
      }
      break;
  }
  return result;
}

void sub_1BFF0797C()
{
  if (!qword_1EB8904A8)
  {
    sub_1BFE38B54(255, (unint64_t *)&qword_1EB88CFF0, (uint64_t (*)(void))sub_1C0078B74, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8904A8);
    }
  }
}

uint64_t sub_1BFF07A0C(uint64_t a1, long long *a2)
{
  long long v4 = a2[7];
  long long v56 = a2[6];
  long long v57 = v4;
  *(_OWORD *)uint64_t v58 = a2[8];
  *(_OWORD *)&v58[9] = *(long long *)((char *)a2 + 137);
  long long v5 = a2[3];
  unsigned long long v52 = a2[2];
  long long v53 = v5;
  long long v6 = a2[5];
  long long v54 = a2[4];
  long long v55 = v6;
  long long v7 = a2[1];
  long long v50 = *a2;
  long long v51 = v7;
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v2 + 16) = v8;
  *(void *)(v2 + 24) = v9;
  uint64_t v10 = *(void *)(a1 + 40);
  *(void *)(v2 + 32) = *(void *)(a1 + 32);
  *(void *)(v2 + 40) = v10;
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 48);
  swift_beginAccess();
  *(void *)(v2 + 48) = v11;
  uint64_t v12 = *(void *)&v58[16];
  if (!*(void *)&v58[16]) {
    uint64_t v12 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 56) = v12;
  uint64_t v49 = v51;
  uint64_t v13 = v51;
  if ((~(void)v51 & 0xF000000000000007) == 0)
  {
    uint64_t v13 = *(void *)(a1 + 64);
    sub_1BFEF683C(v13);
  }
  *(void *)(v2 + 64) = v13;
  uint64_t v14 = *((void *)&v51 + 1);
  if (!*((void *)&v51 + 1)) {
    uint64_t v14 = swift_bridgeObjectRetain();
  }
  *(void *)(v2 + 72) = v14;
  uint64_t v15 = *((void *)&v52 + 1);
  unsigned long long v17 = v52;
  uint64_t v47 = v17 >> 64;
  uint64_t v16 = v17;
  uint64_t v48 = v52;
  char v18 = v53;
  char v46 = v53;
  if (v53 >= 0xFEu)
  {
    uint64_t v16 = *(void *)(a1 + 80);
    uint64_t v15 = *(void *)(a1 + 88);
    char v18 = *(unsigned char *)(a1 + 96);
    sub_1BFEF6828(v16, v15, v18);
  }
  *(void *)(v2 + 80) = v16;
  *(void *)(v2 + 88) = v15;
  uint64_t v20 = *((void *)&v54 + 1);
  uint64_t v19 = v54;
  uint64_t v22 = *((void *)&v55 + 1);
  uint64_t v21 = v55;
  uint64_t v25 = *((void *)&v56 + 1);
  uint64_t v24 = v56;
  uint64_t v23 = v57;
  uint64_t v44 = v54;
  uint64_t v45 = *((void *)&v53 + 1);
  uint64_t v26 = *((void *)&v53 + 1);
  uint64_t v42 = v55;
  uint64_t v43 = *((void *)&v54 + 1);
  uint64_t v40 = v56;
  uint64_t v41 = *((void *)&v55 + 1);
  uint64_t v38 = v57;
  uint64_t v39 = *((void *)&v56 + 1);
  uint64_t v28 = *((void *)&v57 + 1);
  uint64_t v27 = *(void *)v58;
  uint64_t v36 = *(void *)v58;
  uint64_t v37 = *((void *)&v57 + 1);
  *(unsigned char *)(v2 + 96) = v18;
  unsigned __int8 v29 = v58[8];
  unsigned __int8 v35 = v58[8];
  if (v58[8] == 254)
  {
    uint64_t v33 = *(void *)(a1 + 112);
    uint64_t v34 = *(void *)(a1 + 104);
    uint64_t v21 = *(void *)(a1 + 128);
    uint64_t v32 = *(void *)(a1 + 120);
    uint64_t v22 = *(void *)(a1 + 136);
    uint64_t v24 = *(void *)(a1 + 144);
    uint64_t v25 = *(void *)(a1 + 152);
    uint64_t v23 = *(void *)(a1 + 160);
    uint64_t v28 = *(void *)(a1 + 168);
    uint64_t v27 = *(void *)(a1 + 176);
    unsigned __int8 v29 = *(unsigned char *)(a1 + 184);
    sub_1BFEF8708(v34, v33, v32, v21, v22, v24, v25, v23, v28, v27, v29);
    uint64_t v20 = v32;
    uint64_t v19 = v33;
    uint64_t v26 = v34;
  }
  *(void *)(v2 + 104) = v26;
  *(void *)(v2 + 112) = v19;
  *(void *)(v2 + 120) = v20;
  *(void *)(v2 + 128) = v21;
  *(void *)(v2 + 136) = v22;
  *(void *)(v2 + 144) = v24;
  *(void *)(v2 + 152) = v25;
  *(void *)(v2 + 160) = v23;
  *(void *)(v2 + 168) = v28;
  *(void *)(v2 + 176) = v27;
  *(unsigned char *)(v2 + 184) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v49);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v48, v47, v46);
  sub_1BFEF8708(v45, v44, v43, v42, v41, v40, v39, v38, v37, v36, v35);
  sub_1C05DD698((uint64_t)&v50);
  char v30 = v58[24];
  if (v58[24] == 2) {
    char v30 = *(unsigned char *)(a1 + 185);
  }
  *(unsigned char *)(v2 + 185) = v30;
  return v2;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BFF07CD8(unint64_t result)
{
  unint64_t v1 = result >> 62;
  if (!(result >> 62) || v1 == 2 || v1 == 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFF07CFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFEFE7C8(&qword_1EB887638, (uint64_t)qword_1EB93CA98, a1);
}

uint64_t FormatOptionExpression.Exists.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v31 = &v29[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v33 = &v29[-v6];
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = &v29[-v8];
  sub_1C0867218();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = &v29[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void *)v1;
  uint64_t v14 = *(void *)(v1 + 8);
  int v32 = *(unsigned __int8 *)(v1 + 16);
  int v30 = *(unsigned __int8 *)(v1 + 17);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1C08670EC();
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C085F050(&qword_1EB892010, (void (*)(uint64_t))sub_1C08670EC);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatOptionExpression.Exists, v20, v15, (uint64_t)&type metadata for FormatOptionExpression.Exists, v18, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v12, v19, (uint64_t)&off_1F1C39B68);
  uint64_t v21 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C151928C();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CAB0);
  uint64_t v24 = *(void (**)(unsigned char *))(*(void *)(v22 - 8) + 16);
  uint64_t v34 = v23;
  v24(v9);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v35;
  sub_1C06B6724(v13, v14, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v25)
  {
    uint64_t v26 = (uint64_t)v33;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v24)(v33, v34, v22);
    swift_storeEnumTagMultiPayload();
    sub_1C06B68B8(v32, 1, 0, 0, v26, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v26, type metadata accessor for FormatVersionRequirement);
    uint64_t v27 = (uint64_t)v31;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v24)(v31, v34, v22);
    swift_storeEnumTagMultiPayload();
    sub_1C06B6A50(v30, 2, 0, 0, v27, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68((uint64_t)v12, (uint64_t (*)(void))sub_1C0867218);
}

unint64_t sub_1BFF08118()
{
  unint64_t result = qword_1EB85D178;
  if (!qword_1EB85D178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85D178);
  }
  return result;
}

unint64_t sub_1BFF0816C()
{
  unint64_t result = qword_1EB85BD80;
  if (!qword_1EB85BD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BD80);
  }
  return result;
}

void sub_1BFF081C0()
{
  if (!qword_1EB87A5B0)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB8715C0);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A5B0);
    }
  }
}

uint64_t FormatHBoxNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  long long v84 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v85 = (char *)&v80 - v8;
  MEMORY[0x1F4188790](v9);
  long long v86 = (char *)&v80 - v10;
  MEMORY[0x1F4188790](v11);
  long long v87 = (char *)&v80 - v12;
  MEMORY[0x1F4188790](v13);
  long long v88 = (char *)&v80 - v14;
  MEMORY[0x1F4188790](v15);
  long long v90 = (char *)&v80 - v16;
  MEMORY[0x1F4188790](v17);
  long long v89 = (char *)&v80 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v80 - v20;
  sub_1C088D4AC();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1C088D5D4();
  uint64_t v28 = v27;
  uint64_t v29 = sub_1C085F050(&qword_1EB892530, (void (*)(uint64_t))sub_1C088D5D4);
  sub_1BFEFBD78(v4, v30, v25, v4, v28, (uint64_t)&type metadata for FormatVersions.JazzkonC, v26, (uint64_t)v24, v29, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v31 = v2[2];
  uint64_t v32 = v2[3];
  uint64_t v91 = v2;
  uint64_t v33 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v33 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1C151928C();
  uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1EB93CAB0);
  uint64_t v36 = *(void *)(v34 - 8);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  uint64_t v38 = (char *)(v36 + 16);
  v37(v21, v35, v34);
  uint64_t v39 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v93 = v24;
  uint64_t v40 = v92;
  sub_1C06DC090(v31, v32, 0, 0, 0, (uint64_t)v21, (uint64_t)sub_1C01B158C, 0);
  if (v40)
  {
    sub_1BFEFEB68((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v41 = (uint64_t)v93;
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v43 = (uint64_t)v89;
    v37(v89, v35, v34);
    swift_storeEnumTagMultiPayload();
    sub_1BFEFEB68(v43, type metadata accessor for FormatVersionRequirement);
    v37((char *)v43, v35, v34);
    swift_storeEnumTagMultiPayload();
    sub_1BFEFEB68(v43, type metadata accessor for FormatVersionRequirement);
    uint64_t v44 = v91;
    swift_beginAccess();
    unint64_t v45 = v44[8];
    uint64_t v46 = (uint64_t)v90;
    uint64_t v83 = v34;
    unint64_t v92 = v37;
    v37(v90, v35, v34);
    uint64_t v82 = v39;
    swift_storeEnumTagMultiPayload();
    if (((v45 >> 59) & 0x1E | (v45 >> 2) & 1) == 0x16 && v45 == 0xB000000000000008)
    {
      uint64_t v47 = v38;
      uint64_t v81 = v35;
      uint64_t v48 = v91;
    }
    else
    {
      sub_1BFF35EA4(v45);
      char v49 = sub_1C08435E8(v46, 3, 0, 0, (uint64_t)sub_1C01B158C, 0);
      uint64_t v81 = v35;
      if (v49)
      {
        long long v99 = xmmword_1C1557FB0;
        char v100 = 0;
        unint64_t v98 = v45;
        sub_1C088D540();
        sub_1C085F050(&qword_1EB86EC60, (void (*)(uint64_t))sub_1C088D540);
        sub_1BFE1D79C();
        sub_1C1520BAC();
        uint64_t v48 = v91;
        uint64_t v47 = v38;
      }
      else
      {
        uint64_t v47 = v38;
        uint64_t v48 = v91;
      }
      uint64_t v46 = (uint64_t)v90;
    }
    sub_1BFEFEB68(v46, type metadata accessor for FormatVersionRequirement);
    sub_1BFF322A8(v45);
    uint64_t v51 = v48[9];
    uint64_t v50 = v48[10];
    uint64_t v52 = qword_1EB8875E0;
    swift_bridgeObjectRetain();
    uint64_t v53 = v83;
    long long v54 = v92;
    if (v52 != -1) {
      swift_once();
    }
    uint64_t v55 = __swift_project_value_buffer(v53, (uint64_t)qword_1EB93C9D8);
    uint64_t v56 = (uint64_t)v88;
    v54(v88, v55, v53);
    swift_storeEnumTagMultiPayload();
    sub_1C0725394(v51, v50, 4, 0, 0, v56, (uint64_t)sub_1C01B158C, 0);
    long long v57 = v47;
    sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v58 = (uint64_t)v87;
    long long v90 = v57;
    v54(v87, v81, v83);
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = swift_bridgeObjectRetain();
    sub_1C06DC2D0(v59, 5, 0, 0);
    sub_1BFEFEB68(v58, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    long long v60 = v91;
    swift_beginAccess();
    uint64_t v61 = v60[12];
    uint64_t v62 = (uint64_t)v86;
    v54(v86, v81, v83);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if (sub_1C08435E8(v62, 6, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v96 = xmmword_1C1557FE0;
      char v97 = 0;
      *(void *)&long long v94 = v61;
      sub_1C088D540();
      sub_1C085F050(&qword_1EB86EC60, (void (*)(uint64_t))sub_1C088D540);
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB863300, (uint64_t)&type metadata for FormatSourceMapNode, MEMORY[0x1E4FBB320]);
      sub_1BFE407E0();
      sub_1C1520BAC();
      uint64_t v63 = (uint64_t)v85;
      uint64_t v64 = v83;
      long long v65 = v91;
    }
    else
    {
      long long v65 = v60;
      uint64_t v63 = (uint64_t)v85;
      uint64_t v64 = v83;
    }
    sub_1BFEFEB68(v62, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    LODWORD(v89) = *((unsigned __int8 *)v65 + 104);
    sub_1BFF05D18();
    uint64_t v67 = v63 + *(int *)(v66 + 48);
    unint64_t v68 = (void *)(v63 + *(int *)(v66 + 64));
    if (qword_1EB887620 != -1) {
      swift_once();
    }
    uint64_t v69 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB93CA50);
    uint64_t v70 = (void (*)(uint64_t, uint64_t, uint64_t))v92;
    v92((char *)v63, v69, v64);
    if (qword_1EB893B08 != -1) {
      swift_once();
    }
    uint64_t v71 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB93CBA0);
    v70(v67, v71, v64);
    *unint64_t v68 = 0;
    v68[1] = 0;
    swift_storeEnumTagMultiPayload();
    if (v89 & 1) != 0 && (sub_1C08435E8(v63, 7, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v94 = xmmword_1C1557FF0;
      char v95 = 0;
      char v101 = 1;
      sub_1C088D540();
      sub_1C085F050(&qword_1EB86EC60, (void (*)(uint64_t))sub_1C088D540);
      sub_1C1520BAC();
      uint64_t v72 = v83;
      uint64_t v73 = v71;
    }
    else
    {
      uint64_t v73 = v71;
      uint64_t v72 = v83;
    }
    sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
    long long v74 = v91;
    swift_beginAccess();
    uint64_t v75 = v74[14];
    uint64_t v76 = v74[15];
    int v77 = *((unsigned __int8 *)v74 + 128);
    uint64_t v78 = (uint64_t)v84;
    v92(v84, v73, v72);
    swift_storeEnumTagMultiPayload();
    sub_1BFE94AB4(v75, v76, v77);
    uint64_t v79 = (uint64_t)v93;
    sub_1C06DC434(v75, v76, v77, 8, 0, 0, v78, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v78, type metadata accessor for FormatVersionRequirement);
    sub_1BFE94AD4(v75, v76, v77);
    uint64_t v41 = v79;
  }
  return sub_1BFEFEB68(v41, (uint64_t (*)(void))sub_1C088D4AC);
}

uint64_t FormatVBoxNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  long long v84 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  long long v85 = (char *)&v80 - v8;
  MEMORY[0x1F4188790](v9);
  long long v86 = (char *)&v80 - v10;
  MEMORY[0x1F4188790](v11);
  long long v87 = (char *)&v80 - v12;
  MEMORY[0x1F4188790](v13);
  long long v88 = (char *)&v80 - v14;
  MEMORY[0x1F4188790](v15);
  long long v90 = (char *)&v80 - v16;
  MEMORY[0x1F4188790](v17);
  long long v89 = (char *)&v80 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v80 - v20;
  sub_1C08C5964();
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1C08C5A8C();
  uint64_t v28 = v27;
  uint64_t v29 = sub_1C085F050(&qword_1EB892580, (void (*)(uint64_t))sub_1C08C5A8C);
  sub_1BFEFBD78(v4, v30, v25, v4, v28, (uint64_t)&type metadata for FormatVersions.JazzkonC, v26, (uint64_t)v24, v29, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v31 = v2[2];
  uint64_t v32 = v2[3];
  uint64_t v91 = v2;
  uint64_t v33 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v33 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_1C151928C();
  uint64_t v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1EB93CAB0);
  uint64_t v36 = *(void *)(v34 - 8);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  uint64_t v38 = (char *)(v36 + 16);
  v37(v21, v35, v34);
  uint64_t v39 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v93 = v24;
  uint64_t v40 = v92;
  sub_1C06DA92C(v31, v32, 0, 0, 0, (uint64_t)v21, (uint64_t)sub_1C01B158C, 0);
  if (v40)
  {
    sub_1BFEFEB68((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v41 = (uint64_t)v93;
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v21, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v43 = (uint64_t)v89;
    v37(v89, v35, v34);
    swift_storeEnumTagMultiPayload();
    sub_1BFEFEB68(v43, type metadata accessor for FormatVersionRequirement);
    v37((char *)v43, v35, v34);
    swift_storeEnumTagMultiPayload();
    sub_1BFEFEB68(v43, type metadata accessor for FormatVersionRequirement);
    uint64_t v44 = v91;
    swift_beginAccess();
    unint64_t v45 = v44[8];
    uint64_t v46 = (uint64_t)v90;
    uint64_t v83 = v34;
    unint64_t v92 = v37;
    v37(v90, v35, v34);
    uint64_t v82 = v39;
    swift_storeEnumTagMultiPayload();
    if (((v45 >> 59) & 0x1E | (v45 >> 2) & 1) == 0x16 && v45 == 0xB000000000000008)
    {
      uint64_t v47 = v38;
      uint64_t v81 = v35;
      uint64_t v48 = v91;
    }
    else
    {
      sub_1BFF35EA4(v45);
      char v49 = sub_1C0842ABC(v46, 3, 0, 0, (uint64_t)sub_1C01B158C, 0);
      uint64_t v81 = v35;
      if (v49)
      {
        long long v99 = xmmword_1C1557FB0;
        char v100 = 0;
        unint64_t v98 = v45;
        sub_1C08C59F8();
        sub_1C085F050(&qword_1EB86ECC0, (void (*)(uint64_t))sub_1C08C59F8);
        sub_1BFE1D79C();
        sub_1C1520BAC();
        uint64_t v48 = v91;
        uint64_t v47 = v38;
      }
      else
      {
        uint64_t v47 = v38;
        uint64_t v48 = v91;
      }
      uint64_t v46 = (uint64_t)v90;
    }
    sub_1BFEFEB68(v46, type metadata accessor for FormatVersionRequirement);
    sub_1BFF322A8(v45);
    uint64_t v51 = v48[9];
    uint64_t v50 = v48[10];
    uint64_t v52 = qword_1EB8875E0;
    swift_bridgeObjectRetain();
    uint64_t v53 = v83;
    long long v54 = v92;
    if (v52 != -1) {
      swift_once();
    }
    uint64_t v55 = __swift_project_value_buffer(v53, (uint64_t)qword_1EB93C9D8);
    uint64_t v56 = (uint64_t)v88;
    v54(v88, v55, v53);
    swift_storeEnumTagMultiPayload();
    sub_1C0723450(v51, v50, 4, 0, 0, v56, (uint64_t)sub_1C01B158C, 0);
    long long v57 = v47;
    sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v58 = (uint64_t)v87;
    long long v90 = v57;
    v54(v87, v81, v83);
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = swift_bridgeObjectRetain();
    sub_1C06DAB6C(v59, 5, 0, 0);
    sub_1BFEFEB68(v58, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    long long v60 = v91;
    swift_beginAccess();
    uint64_t v61 = v60[12];
    uint64_t v62 = (uint64_t)v86;
    v54(v86, v81, v83);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if (sub_1C0842ABC(v62, 6, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v96 = xmmword_1C1557FE0;
      char v97 = 0;
      *(void *)&long long v94 = v61;
      sub_1C08C59F8();
      sub_1C085F050(&qword_1EB86ECC0, (void (*)(uint64_t))sub_1C08C59F8);
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB863300, (uint64_t)&type metadata for FormatSourceMapNode, MEMORY[0x1E4FBB320]);
      sub_1BFE407E0();
      sub_1C1520BAC();
      uint64_t v63 = (uint64_t)v85;
      uint64_t v64 = v83;
      long long v65 = v91;
    }
    else
    {
      long long v65 = v60;
      uint64_t v63 = (uint64_t)v85;
      uint64_t v64 = v83;
    }
    sub_1BFEFEB68(v62, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    LODWORD(v89) = *((unsigned __int8 *)v65 + 104);
    sub_1BFF05D18();
    uint64_t v67 = v63 + *(int *)(v66 + 48);
    unint64_t v68 = (void *)(v63 + *(int *)(v66 + 64));
    if (qword_1EB887620 != -1) {
      swift_once();
    }
    uint64_t v69 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB93CA50);
    uint64_t v70 = (void (*)(uint64_t, uint64_t, uint64_t))v92;
    v92((char *)v63, v69, v64);
    if (qword_1EB893B08 != -1) {
      swift_once();
    }
    uint64_t v71 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB93CBA0);
    v70(v67, v71, v64);
    *unint64_t v68 = 0;
    v68[1] = 0;
    swift_storeEnumTagMultiPayload();
    if (v89 & 1) != 0 && (sub_1C0842ABC(v63, 7, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v94 = xmmword_1C1557FF0;
      char v95 = 0;
      char v101 = 1;
      sub_1C08C59F8();
      sub_1C085F050(&qword_1EB86ECC0, (void (*)(uint64_t))sub_1C08C59F8);
      sub_1C1520BAC();
      uint64_t v72 = v83;
      uint64_t v73 = v71;
    }
    else
    {
      uint64_t v73 = v71;
      uint64_t v72 = v83;
    }
    sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
    long long v74 = v91;
    swift_beginAccess();
    uint64_t v75 = v74[14];
    uint64_t v76 = v74[15];
    int v77 = *((unsigned __int8 *)v74 + 128);
    uint64_t v78 = (uint64_t)v84;
    v92(v84, v73, v72);
    swift_storeEnumTagMultiPayload();
    sub_1BFE94AB4(v75, v76, v77);
    uint64_t v79 = (uint64_t)v93;
    sub_1C06DACD0(v75, v76, v77, 8, 0, 0, v78, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v78, type metadata accessor for FormatVersionRequirement);
    sub_1BFE94AD4(v75, v76, v77);
    uint64_t v41 = v79;
  }
  return sub_1BFEFEB68(v41, (uint64_t (*)(void))sub_1C08C5964);
}

unint64_t sub_1BFF09D30(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x7470697263736564;
      break;
    case 3:
      unint64_t result = 0x6465726975716572;
      break;
    case 4:
      unint64_t result = 0x746C7561666564;
      break;
    case 5:
      unint64_t result = 0x7461636572706564;
      break;
    case 6:
      unint64_t result = 0x72656C69706D6F63;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatType.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v31 = (char *)&v31 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v31 - v8;
  sub_1C086BBC4();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v1;
  uint64_t v14 = v1[1];
  sub_1BFF0A288((uint64_t)(v1 + 4), (uint64_t)v34);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1C086BA98();
  uint64_t v18 = v17;
  uint64_t v19 = sub_1C085F050(&qword_1EB892460, (void (*)(uint64_t))sub_1C086BA98);
  uint64_t v35 = v12;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatType, v20, v15, (uint64_t)&type metadata for FormatType, v18, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v12, v19, (uint64_t)&off_1F1C39B68);
  uint64_t v21 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v21 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1C151928C();
  uint64_t v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1EB93CAB0);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  v24(v9, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v33;
  sub_1C06C7084(v13, v14, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v25)
  {
    uint64_t v26 = (uint64_t)v35;
  }
  else
  {
    uint64_t v27 = (uint64_t)v31;
    v24(v31, v23, v22);
    swift_storeEnumTagMultiPayload();
    sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
    uint64_t v28 = (uint64_t)v32;
    v24(v32, v23, v22);
    swift_storeEnumTagMultiPayload();
    sub_1BFF0A244((uint64_t)v34, (void (*)(void, void, void, void, void, void, void))sub_1BFF1DB64);
    uint64_t v29 = (uint64_t)v35;
    sub_1C06C7218((uint64_t)v34, 2, 0, 0, v28, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v28, type metadata accessor for FormatVersionRequirement);
    sub_1BFF0A244((uint64_t)v34, (void (*)(void, void, void, void, void, void, void))sub_1BFEC28BC);
    uint64_t v26 = v29;
  }
  return sub_1BFEFEB68(v26, (uint64_t (*)(void))sub_1C086BBC4);
}

uint64_t sub_1BFF0A244(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1BFF0A288(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

unint64_t sub_1BFF0A300()
{
  unint64_t result = qword_1EB85BBD8;
  if (!qword_1EB85BBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BBD8);
  }
  return result;
}

void sub_1BFF0A354()
{
  if (!qword_1EB884FC0)
  {
    sub_1C1515FDC();
    sub_1C00675CC();
    sub_1C00676C8();
    sub_1C0067674();
    sub_1C0067524();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    sub_1C001A5E0((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
    sub_1C001A5E0((unint64_t *)&unk_1EB8710F0, v0);
    unint64_t v1 = sub_1C1518A3C();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EB884FC0);
    }
  }
}

void sub_1BFF0A468()
{
  if (!qword_1EB87C348)
  {
    type metadata accessor for FormatBlock();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C348);
    }
  }
}

void sub_1BFF0A4E0(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1BFCE25D8(255, a3, a4);
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB87A930);
    unint64_t v5 = sub_1C151EDEC();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFF0A56C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFEFE7C8(&qword_1EB887620, (uint64_t)qword_1EB93CA50, a1);
}

__n128 __swift_memcpy105_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t destroy for FormatURL(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v4 = *(void *)a1;
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v6 = *(void *)(a1 + 16);
    char v7 = *(unsigned char *)(a1 + 24);
    return sub_1BFD7418C(v4, v5, v6, v7);
  }
  else
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v3 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for FormatAbsoluteURL();
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BFF0A690(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1BFF0A6F8(uint64_t a1)
{
}

void sub_1BFF0A72C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FormatOption();
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1D9F4(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = *(void *)(a3 + 16);
  if (v40)
  {
    uint64_t v15 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v16 = *(void *)(v12 + 72);
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
    uint64_t v42 = a3;
    uint64_t v41 = v14;
    uint64_t v37 = v16;
    uint64_t v36 = v15;
    while (1)
    {
      uint64_t v43 = v17;
      sub_1C1147A28(v15 + v16 * v17, (uint64_t)v14, (uint64_t (*)(void))sub_1BFF1D9F4);
      uint64_t v18 = (void *)*v14;
      swift_beginAccess();
      uint64_t v19 = v18[8];
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v44 = v18;
      if (v20) {
        break;
      }
      swift_retain();
      uint64_t v25 = v43;
LABEL_9:
      swift_beginAccess();
      uint64_t v26 = v18[9];
      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        uint64_t v28 = v39;
        uint64_t v29 = v26 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
        uint64_t v38 = v26;
        swift_bridgeObjectRetain_n();
        uint64_t v30 = *(void *)(v28 + 72);
        while (1)
        {
          sub_1C1147A28(v29, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v52 = *((void *)v10 + 2);
          long long v31 = *(_OWORD *)(a2 + 80);
          long long v49 = *(_OWORD *)(a2 + 64);
          long long v50 = v31;
          uint64_t v51 = *(void *)(a2 + 96);
          long long v32 = *(_OWORD *)(a2 + 16);
          long long v45 = *(_OWORD *)a2;
          long long v46 = v32;
          long long v33 = *(_OWORD *)(a2 + 48);
          long long v47 = *(_OWORD *)(a2 + 32);
          long long v48 = v33;
          swift_retain();
          sub_1BFF2871C(a1, (uint64_t)&v45);
          if (v4) {
            break;
          }
          swift_release();
          sub_1C1147B04((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
          v29 += v30;
          if (!--v27)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v14 = v41;
            uint64_t v25 = v43;
            uint64_t v18 = v44;
            goto LABEL_15;
          }
        }
        swift_release();
        sub_1C1147B04((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FormatOption);
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_20;
      }
      uint64_t v14 = v41;
LABEL_15:
      swift_beginAccess();
      uint64_t v34 = v18[11];
      swift_bridgeObjectRetain();
      sub_1BFF11C38(a1, a2, v34);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v16 = v37;
      if (v4) {
        goto LABEL_21;
      }
      uint64_t v17 = v25 + 1;
      sub_1C1147B04((uint64_t)v14, (uint64_t (*)(void))sub_1BFF1D9F4);
      uint64_t v15 = v36;
      if (v17 == v40) {
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v38 = v19;
    uint64_t v21 = v19 + 48;
    while (1)
    {
      uint64_t v52 = *(void *)(v21 - 16);
      long long v22 = *(_OWORD *)(a2 + 80);
      long long v49 = *(_OWORD *)(a2 + 64);
      long long v50 = v22;
      uint64_t v51 = *(void *)(a2 + 96);
      long long v23 = *(_OWORD *)(a2 + 16);
      long long v45 = *(_OWORD *)a2;
      long long v46 = v23;
      long long v24 = *(_OWORD *)(a2 + 48);
      long long v47 = *(_OWORD *)(a2 + 32);
      long long v48 = v24;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BFF0B0B8(a1, (uint64_t)&v45);
      if (v4) {
        break;
      }
      v21 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v20)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v25 = v43;
        uint64_t v18 = v44;
        goto LABEL_9;
      }
    }
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_release_n();
LABEL_20:
    uint64_t v14 = v41;
LABEL_21:
    sub_1C1147B04((uint64_t)v14, (uint64_t (*)(void))sub_1BFF1D9F4);
LABEL_22:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BFF0AC50(unint64_t *a1, uint64_t a2)
{
  uint64_t v36 = *(void *)a2;
  char v34 = *(unsigned char *)(a2 + 9);
  char v35 = *(unsigned char *)(a2 + 8);
  uint64_t v32 = *(void *)(a2 + 24);
  uint64_t v33 = *(void *)(a2 + 16);
  uint64_t v30 = *(void *)(a2 + 40);
  uint64_t v31 = *(void *)(a2 + 32);
  uint64_t v28 = *(void *)(a2 + 56);
  uint64_t v29 = *(void *)(a2 + 48);
  uint64_t v26 = *(void *)(a2 + 72);
  uint64_t v27 = *(void *)(a2 + 64);
  uint64_t v4 = *(void *)(a2 + 88);
  uint64_t v25 = *(void *)(a2 + 80);
  unint64_t v5 = v2[4];
  uint64_t v6 = *(void *)(a2 + 96);
  if (v5 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v7 = result;
    if (result) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      unint64_t v9 = 0;
      unint64_t v10 = v5 & 0xC000000000000001;
      unint64_t v22 = v5 + 32;
      uint64_t v23 = v5 & 0xFFFFFFFFFFFFFF8;
      unint64_t v24 = v5;
      uint64_t v21 = v7;
      uint64_t v19 = v2;
      unint64_t v20 = v5 & 0xC000000000000001;
      while (1)
      {
        if (v10)
        {
          uint64_t v11 = MEMORY[0x1C18C7CB0](v9, v5);
          BOOL v12 = __OFADD__(v9++, 1);
          if (v12) {
            goto LABEL_19;
          }
        }
        else
        {
          if (v9 >= *(void *)(v23 + 16))
          {
            __break(1u);
            return result;
          }
          uint64_t v11 = *(void *)(v22 + 8 * v9);
          swift_retain();
          BOOL v12 = __OFADD__(v9++, 1);
          if (v12)
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v38 = *(void *)(v11 + 16);
        uint64_t v39 = v36;
        char v40 = v35;
        char v41 = v34;
        uint64_t v42 = v33;
        uint64_t v43 = v32;
        uint64_t v44 = v31;
        uint64_t v45 = v30;
        uint64_t v46 = v29;
        uint64_t v47 = v28;
        uint64_t v48 = v27;
        uint64_t v49 = v26;
        uint64_t v50 = v25;
        uint64_t v51 = v4;
        uint64_t v52 = v6;
        sub_1BFF0C6A0(a1, &v39);
        if (v3)
        {
          swift_bridgeObjectRelease();
          return swift_release();
        }
        swift_beginAccess();
        long long v2 = *(uint64_t **)(v11 + 24);
        uint64_t v13 = v2[2];
        if (v13)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v14 = v2 + 6;
          do
          {
            uint64_t v38 = *(v14 - 2);
            uint64_t v39 = v36;
            char v40 = v35;
            char v41 = v34;
            uint64_t v42 = v33;
            uint64_t v43 = v32;
            uint64_t v44 = v31;
            uint64_t v45 = v30;
            uint64_t v46 = v29;
            uint64_t v47 = v28;
            uint64_t v48 = v27;
            uint64_t v49 = v26;
            uint64_t v50 = v25;
            uint64_t v51 = v4;
            uint64_t v52 = v6;
            swift_bridgeObjectRetain();
            swift_retain_n();
            long long v2 = &v38;
            sub_1BFF0B0B8(a1, &v39);
            v14 += 5;
            swift_bridgeObjectRelease();
            swift_release_n();
            --v13;
          }
          while (v13);
          swift_release();
          uint64_t result = swift_bridgeObjectRelease_n();
          unint64_t v5 = v24;
          unint64_t v10 = v20;
          uint64_t v7 = v21;
          if (v9 == v21)
          {
LABEL_17:
            uint64_t result = swift_bridgeObjectRelease();
            long long v2 = v19;
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t result = swift_release();
          if (v9 == v7) {
            goto LABEL_17;
          }
        }
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_22:
  uint64_t v15 = v2[5];
  if (v15)
  {
    uint64_t result = swift_beginAccess();
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v18 = v16 + 48;
      while (1)
      {
        uint64_t v53 = *(void *)(v18 - 16);
        uint64_t v39 = v36;
        char v40 = v35;
        char v41 = v34;
        uint64_t v42 = v33;
        uint64_t v43 = v32;
        uint64_t v44 = v31;
        uint64_t v45 = v30;
        uint64_t v46 = v29;
        uint64_t v47 = v28;
        uint64_t v48 = v27;
        uint64_t v49 = v26;
        uint64_t v50 = v25;
        uint64_t v51 = v4;
        uint64_t v52 = v6;
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BFF0B0B8(a1, &v39);
        if (v3) {
          break;
        }
        v18 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        if (!--v17) {
          return swift_bridgeObjectRelease_n();
        }
      }
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
  }
  return result;
}

void sub_1BFF0B0B8(unint64_t *a1, uint64_t a2)
{
  v183 = a1;
  uint64_t v4 = type metadata accessor for FormatOptionsNodeStatement();
  uint64_t v181 = *(void *)(v4 - 8);
  uint64_t v182 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v177 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)v177 - v8;
  uint64_t v10 = a2;
  uint64_t v11 = type metadata accessor for FormatOption() - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v177 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v177 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v177 - v18;
  MEMORY[0x1F4188790](v20);
  unint64_t v22 = (char *)v177 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)v177 - v25;
  long long v27 = *(_OWORD *)(v10 + 80);
  v196[4] = *(_OWORD *)(v10 + 64);
  v196[5] = v27;
  uint64_t v197 = *(void *)(v10 + 96);
  long long v28 = *(_OWORD *)(v10 + 16);
  v196[0] = *(_OWORD *)v10;
  v196[1] = v28;
  long long v29 = *(_OWORD *)(v10 + 48);
  uint64_t v30 = *v2;
  unint64_t v31 = ((unint64_t)*v2 >> 58) & 0x3C | (*v2 >> 1) & 3;
  v196[2] = *(_OWORD *)(v10 + 32);
  v196[3] = v29;
  switch(v31)
  {
    case 2uLL:
    case 3uLL:
      swift_retain();
      uint64_t v32 = (uint64_t *)v10;
      uint64_t v33 = v184;
      sub_1BFF2435C(v183, v32);
      goto LABEL_82;
    case 4uLL:
      swift_retain();
      uint64_t v35 = v10;
      uint64_t v33 = v184;
      sub_1BFF43C48(v183, v35);
      goto LABEL_82;
    case 5uLL:
      swift_retain();
      uint64_t v36 = v10;
      uint64_t v33 = v184;
      sub_1BFF781FC(v183, v36);
      goto LABEL_82;
    case 6uLL:
      swift_retain();
      uint64_t v37 = v10;
      uint64_t v33 = v184;
      sub_1BFF42BE0(v183, v37);
      goto LABEL_82;
    case 7uLL:
      swift_retain();
      uint64_t v38 = v10;
      uint64_t v33 = v184;
      sub_1BFF48D94(v183, v38);
      goto LABEL_82;
    case 8uLL:
      uint64_t v39 = *(void *)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v40 = v10;
      swift_beginAccess();
      unint64_t v195 = *(void *)(v39 + 32);
      swift_retain();
      uint64_t v41 = v184;
      sub_1BFF0D1B8(v183, v40);
      if (v41) {
        goto LABEL_83;
      }
      swift_beginAccess();
      uint64_t v42 = *(void *)(v39 + 40);
      uint64_t v43 = *(void *)(v42 + 16);
      if (!v43) {
        goto LABEL_131;
      }
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v43; ++i)
      {
        unint64_t v45 = *(void *)(v42 + 8 * i + 32);
        unint64_t v194 = v45;
        sub_1BFF32264(v45);
        sub_1BFF0D378((uint64_t)v183, v40);
        sub_1BFF31E90(v45);
      }
      goto LABEL_101;
    case 9uLL:
      uint64_t v46 = v24;
      uint64_t v47 = v10;
      uint64_t v48 = *(void *)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v49 = *(void *)(v48 + 88);
      uint64_t v50 = *(void *)(v49 + 16);
      if (v50)
      {
        uint64_t v51 = v49 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
        uint64_t v52 = *(void *)(v46 + 72);
        uint64_t v182 = *(void *)(v48 + 88);
        swift_bridgeObjectRetain_n();
        swift_retain();
        do
        {
          sub_1BFF83CC4(v51, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FormatOption);
          unint64_t v195 = *((void *)v26 + 2);
          swift_retain();
          uint64_t v53 = v184;
          sub_1BFF2871C(v183, v47);
          uint64_t v184 = v53;
          if (v53)
          {
            swift_release();
            uint64_t v176 = (uint64_t)v26;
            goto LABEL_137;
          }
          swift_release();
          sub_1C05DDC60((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for FormatOption);
          v51 += v52;
          --v50;
        }
        while (v50);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_retain();
      }
      swift_beginAccess();
      unint64_t v139 = *(void *)(v48 + 96);
      swift_bridgeObjectRetain();
      uint64_t v140 = v184;
      sub_1BFF0CA38(v183, v196, v139);
      if (!v140) {
        uint64_t v184 = 0;
      }
      swift_release();
      goto LABEL_130;
    case 0xAuLL:
      swift_retain();
      uint64_t v54 = v10;
      uint64_t v33 = v184;
      sub_1BFF7D624(v183, v54);
      goto LABEL_82;
    case 0xBuLL:
      swift_retain();
      uint64_t v55 = v10;
      uint64_t v33 = v184;
      sub_1BFF0AC50(v183, v55);
      goto LABEL_82;
    case 0xCuLL:
      uint64_t v182 = v24;
      uint64_t v56 = v10;
      uint64_t v57 = *(void *)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v58 = *(void *)(v57 + 40);
      uint64_t v59 = *(void *)(v58 + 16);
      uint64_t v181 = v57;
      if (v59)
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v180 = v58;
        uint64_t v60 = v58 + 48;
        do
        {
          unint64_t v195 = *(void *)(v60 - 16);
          swift_bridgeObjectRetain();
          swift_retain_n();
          uint64_t v61 = v184;
          sub_1BFF0B0B8(v183, v56);
          uint64_t v184 = v61;
          if (v61) {
            goto LABEL_142;
          }
          v60 += 40;
          swift_bridgeObjectRelease();
          swift_release_n();
          --v59;
        }
        while (v59);
        swift_bridgeObjectRelease_n();
        uint64_t v57 = v181;
      }
      else
      {
        swift_retain();
      }
      swift_beginAccess();
      uint64_t v141 = *(void *)(v57 + 56);
      uint64_t v142 = *(void *)(v141 + 16);
      long long v143 = v183;
      if (!v142) {
        goto LABEL_83;
      }
      uint64_t v144 = v141 + ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80));
      uint64_t v145 = *(void *)(v182 + 72);
      uint64_t v182 = *(void *)(v57 + 56);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BFF83CC4(v144, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatOption);
        unint64_t v194 = *((void *)v22 + 2);
        swift_retain();
        uint64_t v146 = v184;
        sub_1BFF2871C(v143, v56);
        uint64_t v184 = v146;
        if (v146) {
          break;
        }
        swift_release();
        sub_1C05DDC60((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v144 += v145;
        if (!--v142) {
          goto LABEL_138;
        }
      }
      swift_release();
      uint64_t v176 = (uint64_t)v22;
      goto LABEL_137;
    case 0xDuLL:
      swift_retain();
      uint64_t v62 = (uint64_t *)v10;
      uint64_t v33 = v184;
      sub_1BFF0DC28(v183, v62);
      goto LABEL_82;
    case 0xEuLL:
      swift_retain();
      uint64_t v63 = v10;
      uint64_t v33 = v184;
      sub_1BFF6C968(v183, v63);
      goto LABEL_82;
    case 0xFuLL:
      swift_retain();
      uint64_t v64 = v10;
      uint64_t v33 = v184;
      sub_1BFF5E6F8(v183, v64);
      goto LABEL_82;
    case 0x10uLL:
      swift_retain();
      uint64_t v65 = v10;
      uint64_t v33 = v184;
      sub_1BFF8079C(v183, v65);
      goto LABEL_82;
    case 0x11uLL:
      uint64_t v66 = *(void *)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v185 = *(void *)(v66 + 32);
      swift_retain();
      uint64_t v67 = v10;
      uint64_t v68 = v10;
      uint64_t v69 = v184;
      sub_1BFF0D1B8(v183, v67);
      if (v69) {
        goto LABEL_83;
      }
      swift_beginAccess();
      uint64_t v147 = *(void *)(v66 + 40);
      uint64_t v148 = *(void *)(v147 + 16);
      if (!v148)
      {
LABEL_131:
        uint64_t v184 = 0;
        goto LABEL_83;
      }
      swift_bridgeObjectRetain_n();
      for (uint64_t j = 0; j != v148; ++j)
      {
        unint64_t v150 = *(void *)(v147 + 8 * j + 32);
        unint64_t v195 = v150;
        sub_1BFF32264(v150);
        sub_1BFF0D378((uint64_t)v183, v68);
        sub_1BFF31E90(v150);
      }
LABEL_101:
      uint64_t v184 = 0;
      swift_release();
      goto LABEL_139;
    case 0x12uLL:
      swift_retain();
      uint64_t v70 = (uint64_t *)v10;
      uint64_t v33 = v184;
      sub_1BFF45B48((uint64_t)v183, v70);
      goto LABEL_82;
    case 0x13uLL:
      uint64_t v71 = v10;
      uint64_t v72 = *(void *)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v73 = *(void *)(v72 + 32);
      uint64_t v74 = *(void *)(v73 + 16);
      if (v74)
      {
        uint64_t v75 = v73 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
        uint64_t v76 = *(void *)(v181 + 72);
        swift_retain();
        swift_bridgeObjectRetain();
        do
        {
          sub_1BFF83CC4(v75, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
          uint64_t v77 = v184;
          sub_1BFF816A8(v183, v71);
          uint64_t v184 = v77;
          if (v77)
          {
            sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
            swift_release();
            goto LABEL_130;
          }
          sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
          v75 += v76;
          --v74;
        }
        while (v74);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_retain();
      }
      swift_beginAccess();
      uint64_t v151 = *(void *)(v72 + 40);
      uint64_t v152 = *(void *)(v151 + 16);
      if (!v152) {
        goto LABEL_83;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v153 = v151 + 48;
      do
      {
        unint64_t v194 = *(void *)(v153 - 16);
        swift_bridgeObjectRetain();
        swift_retain_n();
        uint64_t v154 = v184;
        sub_1BFF0B0B8(v183, v71);
        uint64_t v184 = v154;
        if (v154) {
          goto LABEL_142;
        }
        v153 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v152;
      }
      while (v152);
      goto LABEL_138;
    case 0x14uLL:
      swift_retain();
      uint64_t v78 = v10;
      uint64_t v33 = v184;
      sub_1C0038230(v183, v78);
      goto LABEL_82;
    case 0x15uLL:
      swift_retain();
      uint64_t v79 = v10;
      uint64_t v33 = v184;
      sub_1C003E84C(v183, v79);
      goto LABEL_82;
    case 0x16uLL:
      return;
    case 0x17uLL:
      swift_retain();
      uint64_t v80 = v10;
      uint64_t v33 = v184;
      sub_1BFF72A34(v183, v80);
      goto LABEL_82;
    case 0x18uLL:
      swift_retain();
      uint64_t v81 = v10;
      uint64_t v33 = v184;
      sub_1C05CFFEC(v183, v81);
      goto LABEL_82;
    case 0x19uLL:
      swift_retain();
      uint64_t v82 = v10;
      uint64_t v33 = v184;
      sub_1C0020C60(v183, v82);
      goto LABEL_82;
    case 0x1AuLL:
      swift_retain();
      uint64_t v83 = v10;
      uint64_t v33 = v184;
      sub_1C05D15A4(v183, v83);
      goto LABEL_82;
    case 0x1BuLL:
      swift_retain();
      uint64_t v84 = v10;
      uint64_t v33 = v184;
      sub_1C00235D8(v183, v84);
      goto LABEL_82;
    case 0x1CuLL:
      uint64_t v85 = v30 & 0xFFFFFFFFFFFFFF9;
      uint64_t v86 = *(void *)(v85 + 24);
      uint64_t v87 = *(void *)(v85 + 48);
      char v88 = *(unsigned char *)(v85 + 72);
      uint64_t v89 = *(void *)(v85 + 80);
      char v90 = *(unsigned char *)(v85 + 88);
      uint64_t v91 = *(void *)(v85 + 96);
      uint64_t v185 = *(void *)(v85 + 16);
      uint64_t v186 = v86;
      long long v187 = *(_OWORD *)(v85 + 32);
      uint64_t v188 = v87;
      long long v189 = *(_OWORD *)(v85 + 56);
      LOBYTE(v190) = v88;
      uint64_t v191 = v89;
      char v192 = v90;
      uint64_t v193 = v91;
      uint64_t v92 = v10;
      uint64_t v93 = v184;
      sub_1C003546C(v183, v92);
      goto LABEL_78;
    case 0x1DuLL:
      uint64_t v94 = v24;
      uint64_t v95 = v10;
      uint64_t v96 = *(void *)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v97 = *(void *)(v96 + 56);
      uint64_t v98 = *(void *)(v97 + 16);
      if (!v98) {
        return;
      }
      uint64_t v99 = v97 + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
      uint64_t v100 = *(void *)(v94 + 72);
      uint64_t v182 = *(void *)(v96 + 56);
      swift_bridgeObjectRetain_n();
      swift_retain();
      while (1)
      {
        sub_1BFF83CC4(v99, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatOption);
        unint64_t v195 = *((void *)v19 + 2);
        swift_retain();
        uint64_t v101 = v184;
        sub_1BFF2871C(v183, v95);
        uint64_t v184 = v101;
        if (v101) {
          break;
        }
        swift_release();
        sub_1C05DDC60((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v99 += v100;
        if (!--v98) {
          goto LABEL_138;
        }
      }
      swift_release();
      uint64_t v176 = (uint64_t)v19;
      goto LABEL_137;
    case 0x1EuLL:
      uint64_t v102 = v10;
      uint64_t v103 = *(void *)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v104 = *(void *)(v103 + 56);
      uint64_t v105 = *(void *)(v104 + 16);
      if (!v105) {
        return;
      }
      swift_bridgeObjectRetain_n();
      swift_retain();
      uint64_t v182 = v104;
      uint64_t v106 = v104 + 48;
      while (1)
      {
        unint64_t v195 = *(void *)(v106 - 16);
        swift_bridgeObjectRetain();
        swift_retain_n();
        uint64_t v107 = v184;
        sub_1BFF0B0B8(v183, v102);
        uint64_t v184 = v107;
        if (v107) {
          goto LABEL_142;
        }
        v106 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        if (!--v105) {
          goto LABEL_138;
        }
      }
    case 0x1FuLL:
      swift_retain();
      uint64_t v108 = v10;
      uint64_t v33 = v184;
      sub_1C00368D0(v183, v108);
      goto LABEL_82;
    case 0x20uLL:
      swift_retain();
      uint64_t v109 = v10;
      uint64_t v33 = v184;
      sub_1C05D1890(v183, v109);
      goto LABEL_82;
    case 0x21uLL:
      uint64_t v110 = v24;
      uint64_t v182 = v10;
      long long v111 = *(void **)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v112 = v111[7];
      uint64_t v113 = *(void *)(v112 + 16);
      unint64_t v178 = v111;
      if (v113)
      {
        uint64_t v114 = v112 + ((*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80));
        uint64_t v115 = *(void *)(v110 + 72);
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v116 = v184;
        do
        {
          sub_1BFF83CC4(v114, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v185 = *((void *)v16 + 2);
          swift_retain();
          sub_1BFF2871C(v183, v182);
          if (v116)
          {
            swift_release();
            sub_1C05DDC60((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
            swift_release();
            swift_bridgeObjectRelease_n();
            return;
          }
          swift_release();
          sub_1C05DDC60((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
          v114 += v115;
          --v113;
        }
        while (v113);
        swift_bridgeObjectRelease_n();
        long long v111 = v178;
      }
      else
      {
        swift_retain();
        uint64_t v116 = v184;
      }
      swift_beginAccess();
      uint64_t v155 = v111[8];
      uint64_t v156 = *(void *)(v155 + 16);
      if (!v156) {
        goto LABEL_114;
      }
      uint64_t v184 = v116;
      swift_bridgeObjectRetain_n();
      v177[1] = v155;
      long long v157 = (uint64_t *)(v155 + 48);
      do
      {
        uint64_t v179 = v156;
        uint64_t v158 = *(v157 - 2);
        uint64_t v159 = *(v157 - 1);
        uint64_t v160 = *v157;
        uint64_t v161 = v157[1];
        uint64_t v163 = v157[2];
        uint64_t v162 = v157[3];
        unint64_t v165 = v157[4];
        uint64_t v164 = v157[5];
        uint64_t v185 = v158;
        uint64_t v186 = v159;
        *(void *)&long long v187 = v160;
        *((void *)&v187 + 1) = v161;
        uint64_t v188 = v163;
        *(void *)&long long v189 = v162;
        *((void *)&v189 + 1) = v165;
        uint64_t v190 = v164;
        uint64_t v180 = v164;
        uint64_t v181 = v162;
        sub_1BFF95098(v158, v159, v160, v161, v163, v162, v165);
        uint64_t v166 = v184;
        sub_1C05D2144(v183, v182);
        uint64_t v184 = v166;
        if (v166)
        {
          sub_1BFF94FE4(v158, v159, v160, v161, v163, v181, v165);
          swift_release();
          goto LABEL_139;
        }
        v157 += 8;
        sub_1BFF94FE4(v158, v159, v160, v161, v163, v181, v165);
        uint64_t v156 = v179 - 1;
      }
      while (v179 != 1);
      swift_bridgeObjectRelease_n();
      uint64_t v116 = v184;
      long long v111 = v178;
LABEL_114:
      swift_beginAccess();
      uint64_t v167 = v111[9];
      uint64_t v168 = *(void *)(v167 + 16);
      if (v168)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v169 = v167 + 48;
        do
        {
          uint64_t v198 = *(void *)(v169 - 16);
          swift_bridgeObjectRetain();
          swift_retain_n();
          sub_1BFF0B0B8(v183, v196);
          if (v116) {
            goto LABEL_142;
          }
          v169 += 40;
          swift_bridgeObjectRelease();
          swift_release_n();
          --v168;
        }
        while (v168);
        uint64_t v184 = 0;
        goto LABEL_138;
      }
      uint64_t v184 = v116;
LABEL_83:
      swift_release();
      return;
    case 0x22uLL:
      uint64_t v182 = v24;
      uint64_t v117 = v10;
      uint64_t v118 = *(void *)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v119 = *(void *)(v118 + 32);
      uint64_t v120 = *(void *)(v119 + 16);
      uint64_t v181 = v118;
      if (v120)
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        uint64_t v180 = v119;
        uint64_t v121 = v119 + 48;
        do
        {
          unint64_t v195 = *(void *)(v121 - 16);
          swift_bridgeObjectRetain();
          swift_retain_n();
          uint64_t v122 = v184;
          sub_1BFF0B0B8(v183, v117);
          uint64_t v184 = v122;
          if (v122) {
            goto LABEL_142;
          }
          v121 += 40;
          swift_bridgeObjectRelease();
          swift_release_n();
          --v120;
        }
        while (v120);
        swift_bridgeObjectRelease_n();
        uint64_t v118 = v181;
      }
      else
      {
        swift_retain();
      }
      swift_beginAccess();
      uint64_t v170 = *(void *)(v118 + 48);
      uint64_t v171 = *(void *)(v170 + 16);
      long long v172 = v183;
      if (!v171) {
        goto LABEL_83;
      }
      uint64_t v173 = v170 + ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80));
      uint64_t v174 = *(void *)(v182 + 72);
      uint64_t v182 = *(void *)(v118 + 48);
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1BFF83CC4(v173, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatOption);
        unint64_t v194 = *((void *)v13 + 2);
        swift_retain();
        uint64_t v175 = v184;
        sub_1BFF2871C(v172, v117);
        uint64_t v184 = v175;
        if (v175) {
          break;
        }
        swift_release();
        sub_1C05DDC60((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v173 += v174;
        if (!--v171) {
          goto LABEL_138;
        }
      }
      swift_release();
      uint64_t v176 = (uint64_t)v13;
LABEL_137:
      sub_1C05DDC60(v176, (uint64_t (*)(void))type metadata accessor for FormatOption);
      goto LABEL_138;
    case 0x23uLL:
      uint64_t v123 = v10;
      uint64_t v124 = *(void *)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v125 = *(void *)(v124 + 48);
      uint64_t v126 = *(void *)(v125 + 16);
      if (!v126) {
        return;
      }
      swift_bridgeObjectRetain_n();
      swift_retain();
      uint64_t v182 = v125;
      uint64_t v127 = v125 + 48;
      do
      {
        unint64_t v195 = *(void *)(v127 - 16);
        swift_bridgeObjectRetain();
        swift_retain_n();
        uint64_t v128 = v184;
        sub_1BFF0B0B8(v183, v123);
        uint64_t v184 = v128;
        if (v128)
        {
LABEL_142:
          swift_release();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_release_n();
          return;
        }
        v127 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v126;
      }
      while (v126);
LABEL_138:
      swift_release();
LABEL_139:
      swift_bridgeObjectRelease_n();
      return;
    case 0x24uLL:
      uint64_t v129 = v10;
      uint64_t v130 = *(void *)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      uint64_t v131 = *(void *)(v130 + 32);
      uint64_t v132 = *(void *)(v131 + 16);
      if (!v132) {
        return;
      }
      uint64_t v133 = v131 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
      uint64_t v134 = *(void *)(v181 + 72);
      swift_retain();
      uint64_t v181 = v131;
      swift_bridgeObjectRetain();
      uint64_t v135 = v184;
      break;
    case 0x25uLL:
      uint64_t v185 = *(void *)(*(void *)((v30 & 0xFFFFFFFFFFFFFF9) + 0x10) + 64);
      uint64_t v136 = v10;
      uint64_t v93 = v184;
      sub_1BFF0B0B8(v183, v136);
LABEL_78:
      if (!v93) {
        uint64_t v184 = 0;
      }
      return;
    case 0x26uLL:
      swift_retain();
      uint64_t v137 = v10;
      uint64_t v33 = v184;
      sub_1C05D1D38(v183, v137);
      goto LABEL_82;
    case 0x27uLL:
      swift_retain();
      uint64_t v138 = v10;
      uint64_t v33 = v184;
      sub_1C05D1F54(v183, v138);
      goto LABEL_82;
    default:
      swift_retain();
      char v34 = (uint64_t *)v10;
      uint64_t v33 = v184;
      sub_1BFF0CE7C(v183, v34);
LABEL_82:
      if (!v33) {
        uint64_t v184 = 0;
      }
      goto LABEL_83;
  }
  while (1)
  {
    sub_1BFF83CC4(v133, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    sub_1BFF816A8(v183, v129);
    if (v135) {
      break;
    }
    sub_1C05DDC60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
    v133 += v134;
    if (!--v132)
    {
      uint64_t v184 = 0;
      swift_release();
      goto LABEL_130;
    }
  }
  sub_1C05DDC60((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
  swift_release();
LABEL_130:
  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FormatOptionsNodeStatement()
{
  uint64_t result = qword_1EB88C2F0;
  if (!qword_1EB88C2F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BFF0C6A0(unint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  char v6 = *((unsigned char *)a2 + 9);
  uint64_t v7 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v14 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v16 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v17 = *v2;
  uint64_t v18 = a2[12];
  uint64_t v19 = v3;
  uint64_t v20 = a1;
  switch((unint64_t)*v2 >> 60)
  {
    case 1uLL:
      if ((*(_WORD *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x30) & 0x8001) == 0)
      {
        uint64_t v51 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        *(void *)&long long v65 = v4;
        BYTE8(v65) = v5;
        BYTE9(v65) = v6;
        *(void *)&long long v66 = v7;
        *((void *)&v66 + 1) = v8;
        *(void *)&long long v67 = v10;
        *((void *)&v67 + 1) = v9;
        *(void *)&long long v68 = v12;
        *((void *)&v68 + 1) = v11;
        *(void *)&long long v69 = v14;
        *((void *)&v69 + 1) = v13;
        *(void *)&long long v70 = v16;
        *((void *)&v70 + 1) = v15;
        uint64_t v71 = v18;
        sub_1BFF2871C(a1, &v65);
      }
      return;
    case 4uLL:
      uint64_t v21 = v17 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v22 = *(void *)(v21 + 112);
      __int16 v23 = *(_WORD *)(v21 + 120);
      char v24 = *(unsigned char *)(v21 + 122);
      long long v25 = *(_OWORD *)(v21 + 32);
      long long v65 = *(_OWORD *)(v21 + 16);
      long long v66 = v25;
      long long v26 = *(_OWORD *)(v21 + 64);
      long long v67 = *(_OWORD *)(v21 + 48);
      long long v68 = v26;
      long long v27 = *(_OWORD *)(v21 + 96);
      long long v69 = *(_OWORD *)(v21 + 80);
      long long v70 = v27;
      uint64_t v71 = v22;
      char v73 = v24;
      __int16 v72 = v23;
      uint64_t v51 = v4;
      char v52 = v5;
      char v53 = v6;
      uint64_t v54 = v7;
      uint64_t v55 = v8;
      uint64_t v56 = v10;
      uint64_t v57 = v9;
      uint64_t v58 = v12;
      uint64_t v59 = v11;
      uint64_t v60 = v14;
      uint64_t v61 = v13;
      uint64_t v62 = v16;
      uint64_t v63 = v15;
      uint64_t v64 = v18;
      sub_1BFF0D684(a1, (uint64_t)&v51);
      return;
    case 7uLL:
      uint64_t v51 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)&long long v65 = v4;
      BYTE8(v65) = v5;
      BYTE9(v65) = v6;
      *(void *)&long long v66 = v7;
      *((void *)&v66 + 1) = v8;
      *(void *)&long long v67 = v10;
      *((void *)&v67 + 1) = v9;
      *(void *)&long long v68 = v12;
      *((void *)&v68 + 1) = v11;
      *(void *)&long long v69 = v14;
      *((void *)&v69 + 1) = v13;
      *(void *)&long long v70 = v16;
      *((void *)&v70 + 1) = v15;
      uint64_t v71 = v18;
      break;
    case 8uLL:
      uint64_t v28 = v17 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v29 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v40 = *(void *)(v28 + 24);
      *(void *)&long long v65 = *a2;
      BYTE8(v65) = v5;
      BYTE9(v65) = v6;
      *(void *)&long long v66 = v7;
      *((void *)&v66 + 1) = v8;
      *(void *)&long long v67 = v10;
      *((void *)&v67 + 1) = v9;
      *(void *)&long long v68 = v12;
      *((void *)&v68 + 1) = v11;
      *(void *)&long long v69 = v14;
      *((void *)&v69 + 1) = v13;
      *(void *)&long long v70 = v16;
      *((void *)&v70 + 1) = v15;
      uint64_t v71 = v18;
      uint64_t v74 = a1;
      uint64_t v30 = v19;
      uint64_t v48 = v18;
      uint64_t v51 = v29;
      uint64_t v31 = v15;
      *((void *)&v44 + 1) = v13;
      uint64_t v46 = v16;
      *((void *)&v42 + 1) = v11;
      *(void *)&long long v44 = v14;
      *(void *)&long long v42 = v12;
      sub_1BFF0C6A0(a1, &v65);
      a1 = v74;
      if (v30) {
        return;
      }
      uint64_t v51 = v40;
      *(void *)&long long v65 = v4;
      BYTE8(v65) = v5;
      BYTE9(v65) = v6;
      *(void *)&long long v66 = v7;
      *((void *)&v66 + 1) = v8;
      *(void *)&long long v67 = v10;
      *((void *)&v67 + 1) = v9;
      long long v68 = v42;
      long long v69 = v44;
      *(void *)&long long v70 = v46;
      *((void *)&v70 + 1) = v31;
      uint64_t v71 = v48;
      break;
    case 9uLL:
      uint64_t v32 = v17 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v33 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v41 = *(void *)(v32 + 24);
      *(void *)&long long v65 = *a2;
      BYTE8(v65) = v5;
      BYTE9(v65) = v6;
      *(void *)&long long v66 = v7;
      *((void *)&v66 + 1) = v8;
      *(void *)&long long v67 = v10;
      *((void *)&v67 + 1) = v9;
      *(void *)&long long v68 = v12;
      *((void *)&v68 + 1) = v11;
      *(void *)&long long v69 = v14;
      *((void *)&v69 + 1) = v13;
      *(void *)&long long v70 = v16;
      *((void *)&v70 + 1) = v15;
      uint64_t v71 = v18;
      uint64_t v74 = a1;
      uint64_t v49 = v18;
      uint64_t v51 = v33;
      uint64_t v39 = v15;
      *((void *)&v45 + 1) = v13;
      uint64_t v47 = v16;
      *((void *)&v43 + 1) = v11;
      *(void *)&long long v45 = v14;
      *(void *)&long long v43 = v12;
      sub_1BFF0C6A0(a1, &v65);
      if (v19) {
        return;
      }
      uint64_t v51 = v41;
      *(void *)&long long v65 = v4;
      BYTE8(v65) = v5;
      BYTE9(v65) = v6;
      *(void *)&long long v66 = v7;
      *((void *)&v66 + 1) = v8;
      *(void *)&long long v67 = v10;
      *((void *)&v67 + 1) = v9;
      long long v68 = v43;
      long long v69 = v45;
      *(void *)&long long v70 = v47;
      *((void *)&v70 + 1) = v39;
      uint64_t v71 = v49;
      a1 = v74;
      break;
    case 0xCuLL:
      char v34 = (void *)(v17 & 0xFFFFFFFFFFFFFFFLL);
      int v35 = *(char *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x38);
      if (v35 < 0)
      {
        LODWORD(v74) = v35;
        uint64_t v36 = v34[4];
        uint64_t v50 = v34[5];
        uint64_t v37 = v34[6];
        *(void *)&long long v65 = v4;
        uint64_t v38 = v36;
        BYTE8(v65) = v5;
        BYTE9(v65) = v6;
        *(void *)&long long v66 = v7;
        *((void *)&v66 + 1) = v8;
        *(void *)&long long v67 = v10;
        *((void *)&v67 + 1) = v9;
        *(void *)&long long v68 = v12;
        *((void *)&v68 + 1) = v11;
        *(void *)&long long v69 = v14;
        *((void *)&v69 + 1) = v13;
        *(void *)&long long v70 = v16;
        *((void *)&v70 + 1) = v15;
        uint64_t v71 = v18;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1BFF7855C(v20, (uint64_t)&v65);
        sub_1C033D994(v38, v50, v37, v74);
      }
      return;
    default:
      return;
  }
  sub_1BFF0C6A0(a1, &v65);
}

uint64_t sub_1BFF0CA38(unint64_t *a1, long long *a2, unint64_t a3)
{
  uint64_t v7 = type metadata accessor for FormatOption();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a3 >> 62))
  {
    uint64_t v10 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_26:
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C15204BC();
  uint64_t v10 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  unint64_t v12 = 0;
  unint64_t v13 = a3 & 0xC000000000000001;
  uint64_t v33 = a3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v32 = a3 + 32;
  unint64_t v39 = a3;
  uint64_t v35 = v10;
  unint64_t v34 = a3 & 0xC000000000000001;
  while (1)
  {
    if (v13)
    {
      uint64_t v14 = MEMORY[0x1C18C7CB0](v12, a3);
      BOOL v15 = __OFADD__(v12, 1);
      unint64_t v16 = v12 + 1;
      if (v15) {
        goto LABEL_25;
      }
    }
    else
    {
      if (v12 >= *(void *)(v33 + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v14 = *(void *)(v32 + 8 * v12);
      swift_retain();
      BOOL v15 = __OFADD__(v12, 1);
      unint64_t v16 = v12 + 1;
      if (v15)
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    swift_beginAccess();
    uint64_t v40 = v14;
    uint64_t v17 = *(void *)(v14 + 32);
    uint64_t v18 = *(void *)(v17 + 16);
    unint64_t v38 = v16;
    if (v18) {
      break;
    }
LABEL_15:
    uint64_t v23 = v40;
    swift_beginAccess();
    uint64_t v24 = *(void *)(v23 + 40);
    uint64_t v25 = *(void *)(v24 + 16);
    if (v25)
    {
      uint64_t v26 = v37;
      uint64_t v27 = v24 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
      uint64_t v36 = v24;
      swift_bridgeObjectRetain_n();
      uint64_t v28 = *(void *)(v26 + 72);
      while (1)
      {
        sub_1C1147A28(v27, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v48 = *((void *)v9 + 2);
        long long v29 = a2[5];
        long long v45 = a2[4];
        long long v46 = v29;
        uint64_t v47 = *((void *)a2 + 12);
        long long v30 = a2[1];
        long long v41 = *a2;
        long long v42 = v30;
        long long v31 = a2[3];
        long long v43 = a2[2];
        long long v44 = v31;
        swift_retain();
        sub_1BFF2871C(a1, (uint64_t)&v41);
        if (v3) {
          break;
        }
        swift_release();
        sub_1C1147B04((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v27 += v28;
        if (!--v25)
        {
          swift_release();
          uint64_t result = swift_bridgeObjectRelease_n();
          goto LABEL_21;
        }
      }
      swift_release();
      sub_1C1147B04((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease_n();
    }
    uint64_t result = swift_release();
LABEL_21:
    unint64_t v12 = v38;
    a3 = v39;
    unint64_t v13 = v34;
    if (v38 == v35) {
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v36 = v17;
  uint64_t v19 = v17 + 48;
  while (1)
  {
    uint64_t v48 = *(void *)(v19 - 16);
    long long v20 = a2[5];
    long long v45 = a2[4];
    long long v46 = v20;
    uint64_t v47 = *((void *)a2 + 12);
    long long v21 = a2[1];
    long long v41 = *a2;
    long long v42 = v21;
    long long v22 = a2[3];
    long long v43 = a2[2];
    long long v44 = v22;
    swift_bridgeObjectRetain();
    swift_retain_n();
    sub_1BFF0B0B8(a1, &v41);
    if (v3) {
      break;
    }
    v19 += 40;
    swift_bridgeObjectRelease();
    swift_release_n();
    if (!--v18)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

void sub_1BFF0CE7C(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[2];
  uint64_t v24 = a2[3];
  uint64_t v26 = a2[4];
  uint64_t v37 = a2[5];
  uint64_t v7 = a2[7];
  uint64_t v8 = a2[8];
  uint64_t v9 = a2[9];
  uint64_t v10 = a2[10];
  uint64_t v34 = a2[11];
  uint64_t v35 = a2[6];
  uint64_t v33 = a2[12];
  swift_beginAccess();
  uint64_t v23 = v2;
  uint64_t v38 = v3;
  char v31 = v5;
  char v32 = v4;
  char v39 = v4;
  char v40 = v5;
  uint64_t v25 = v6;
  uint64_t v41 = v6;
  uint64_t v42 = v24;
  uint64_t v43 = v26;
  uint64_t v44 = v37;
  uint64_t v45 = v35;
  uint64_t v46 = v7;
  uint64_t v30 = v9;
  uint64_t v47 = v8;
  uint64_t v48 = v9;
  uint64_t v29 = v10;
  uint64_t v49 = v10;
  uint64_t v50 = v34;
  uint64_t v51 = v33;
  sub_1BFF0D1B8(a1, (uint64_t)&v38);
  if (!v27)
  {
    uint64_t v28 = v7;
    uint64_t v11 = v2;
    swift_beginAccess();
    uint64_t v12 = *(void *)(v2 + 88);
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      uint64_t v14 = v3;
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v13; ++i)
      {
        unint64_t v16 = *(void *)(v12 + 8 * i + 32);
        uint64_t v38 = v14;
        char v39 = v4;
        char v40 = v31;
        uint64_t v41 = v25;
        uint64_t v42 = v24;
        uint64_t v43 = v26;
        uint64_t v44 = v37;
        uint64_t v45 = v35;
        uint64_t v46 = v7;
        uint64_t v47 = v8;
        uint64_t v48 = v30;
        uint64_t v49 = v29;
        uint64_t v50 = v34;
        uint64_t v51 = v33;
        sub_1BFF32264(v16);
        sub_1BFF0D378((uint64_t)a1, (uint64_t)&v38);
        sub_1BFF31E90(v16);
      }
      swift_bridgeObjectRelease_n();
      uint64_t v3 = v14;
      uint64_t v17 = v24;
      uint64_t v18 = v26;
      uint64_t v19 = v37;
      uint64_t v11 = v23;
    }
    else
    {
      uint64_t v19 = v37;
      uint64_t v17 = v24;
      uint64_t v18 = v26;
    }
    swift_beginAccess();
    uint64_t v20 = *(void *)(v11 + 96);
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v22 = v20 + 48;
      do
      {
        uint64_t v52 = *(void *)(v22 - 16);
        uint64_t v38 = v3;
        char v39 = v32;
        char v40 = v31;
        uint64_t v41 = v25;
        uint64_t v42 = v17;
        uint64_t v43 = v18;
        uint64_t v44 = v19;
        uint64_t v45 = v35;
        uint64_t v46 = v28;
        uint64_t v47 = v8;
        uint64_t v48 = v30;
        uint64_t v49 = v29;
        uint64_t v50 = v34;
        uint64_t v51 = v33;
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BFF0B0B8(a1, &v38);
        v22 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v21;
        uint64_t v19 = v37;
      }
      while (v21);
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1BFF0D1B8(unint64_t *a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v17[4] = *(_OWORD *)(a2 + 64);
  v17[5] = v4;
  uint64_t v18 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v17[0] = *(_OWORD *)a2;
  v17[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  v17[2] = *(_OWORD *)(a2 + 32);
  v17[3] = v6;
  uint64_t v7 = *v2;
  switch(((unint64_t)*v2 >> 59) & 0x1E | (*v2 >> 2) & 1)
  {
    case 2uLL:
      uint64_t v10 = v7 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v11 = *(void *)(v10 + 24);
      unint64_t v19 = *(void *)(v10 + 16);
      sub_1BFF0DB9C((uint64_t)a1, (uint64_t *)a2);
      if (!v3)
      {
        unint64_t v19 = v11;
        sub_1BFF0DB9C((uint64_t)a1, (uint64_t *)a2);
      }
      break;
    case 9uLL:
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFFBLL) + 0x10)) {
        sub_1BFF7855C(a1, a2);
      }
      break;
    case 0xFuLL:
      uint64_t v12 = v7 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v13 = *(void *)(v12 + 24);
      unint64_t v19 = *(void *)(v12 + 16);
      sub_1BFF0D1B8(a1, a2);
      if (!v3 && (~v13 & 0xF000000000000007) != 0)
      {
        unint64_t v19 = v13;
        sub_1BFF0D1B8(a1, a2);
      }
      break;
    case 0x10uLL:
      uint64_t v14 = v7 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v16 = *(void *)(v14 + 16);
      unint64_t v15 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      sub_1BFF35EA4(v15);
      sub_1BFF42A2C((uint64_t)a1, v17, v16);
      if (!v3)
      {
        unint64_t v19 = v15;
        sub_1BFF0D1B8(a1, v17);
      }
      swift_bridgeObjectRelease();
      sub_1BFF322A8(v15);
      break;
    default:
      return;
  }
}

uint64_t sub_1BFF0D378(uint64_t result, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = v3;
  uint64_t v18 = (unint64_t *)result;
  switch((*v2 >> 59) & 0x1E | (*v2 >> 2) & 1)
  {
    case 0xELL:
    case 0xFLL:
    case 0x16:
      uint64_t v32 = *(void *)a2;
      char v33 = v4;
      char v34 = v5;
      uint64_t v35 = v7;
      uint64_t v36 = v6;
      uint64_t v37 = v9;
      uint64_t v38 = v8;
      uint64_t v39 = v11;
      uint64_t v40 = v10;
      uint64_t v41 = v12;
      uint64_t v42 = v13;
      uint64_t v43 = v14;
      uint64_t v44 = v15;
      uint64_t v45 = v16;
      swift_retain();
      sub_1BFF7855C(v18, (uint64_t)&v32);
      uint64_t result = swift_release();
      break;
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
      uint64_t v32 = *(void *)a2;
      char v33 = v4;
      char v34 = v5;
      uint64_t v35 = v7;
      uint64_t v36 = v6;
      uint64_t v37 = v9;
      uint64_t v38 = v8;
      uint64_t v39 = v11;
      uint64_t v40 = v10;
      uint64_t v41 = v12;
      uint64_t v42 = v13;
      uint64_t v43 = v14;
      uint64_t v44 = v15;
      uint64_t v45 = v16;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BFF7855C(v18, (uint64_t)&v32);
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 0x17:
      uint64_t result = *(void *)((*v2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v19 = *(void *)(result + 16);
      if (v19)
      {
        uint64_t v22 = *(void *)a2;
        char v23 = *(unsigned char *)(a2 + 8);
        char v24 = *(unsigned char *)(a2 + 9);
        uint64_t v25 = *(void *)(a2 + 16);
        uint64_t v26 = *(void *)(a2 + 24);
        uint64_t v27 = *(void *)(a2 + 32);
        uint64_t v28 = *(void *)(a2 + 40);
        uint64_t v29 = *(void *)(a2 + 48);
        uint64_t v30 = *(void *)(a2 + 56);
        uint64_t v21 = *(void *)(a2 + 64);
        uint64_t v20 = swift_bridgeObjectRetain() + 40;
        while (1)
        {
          uint64_t v31 = v19;
          uint64_t v46 = *(void *)(v20 - 8);
          uint64_t v32 = v22;
          char v33 = v23;
          char v34 = v24;
          uint64_t v35 = v25;
          uint64_t v36 = v26;
          uint64_t v37 = v27;
          uint64_t v38 = v28;
          uint64_t v39 = v29;
          uint64_t v40 = v30;
          uint64_t v41 = v12;
          uint64_t v42 = v13;
          uint64_t v43 = v14;
          uint64_t v44 = v15;
          uint64_t v45 = v16;
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1BFF0C6A0(v18, &v32);
          if (v17) {
            break;
          }
          swift_bridgeObjectRelease();
          swift_release();
          v20 += 16;
          --v19;
          uint64_t v12 = v21;
          if (v31 == 1) {
            return swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF0D624(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1BFF0D684(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  char v50 = *(unsigned char *)(a2 + 9);
  uint64_t v54 = *(void *)(a2 + 24);
  uint64_t v51 = *(void *)(a2 + 16);
  uint64_t v52 = *(void *)(a2 + 32);
  uint64_t v69 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v53 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 88);
  uint64_t v11 = *(void *)(a2 + 96);
  unint64_t v13 = *(void *)v2;
  unint64_t v12 = *(void *)(v2 + 8);
  unint64_t v14 = *(void *)(v2 + 16);
  unsigned int v15 = *(unsigned __int8 *)(v2 + 106);
  unsigned int v16 = *(unsigned __int16 *)(v2 + 104);
  unsigned int v17 = v16 | (v15 << 16);
  uint64_t v18 = *(void *)(v2 + 80);
  uint64_t v19 = *(void *)(v2 + 88);
  uint64_t v20 = *(void *)(v2 + 96);
  switch((v15 >> 2) & 4 | (v16 >> 14))
  {
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 7u:
      return;
    case 6u:
      uint64_t v44 = *(void *)(v2 + 64);
      uint64_t v48 = *(void *)(v2 + 32);
      uint64_t v49 = *(void *)(v2 + 40);
      uint64_t v46 = *(void *)(v2 + 24);
      uint64_t v47 = *(void *)(v2 + 56);
      __int16 v45 = *(void *)(v2 + 48);
      unint64_t v43 = *(void *)(v2 + 72);
      uint64_t v40 = *(void *)(a2 + 88);
      uint64_t v41 = *(void *)(a2 + 96);
      uint64_t v38 = *(void *)(a2 + 72);
      uint64_t v39 = *(void *)(a2 + 80);
      uint64_t v37 = *(void *)(a2 + 64);
      switch(v13 >> 62)
      {
        case 1uLL:
          uint64_t v55 = v4;
          char v56 = v5;
          char v57 = v50;
          uint64_t v58 = v51;
          uint64_t v59 = v54;
          uint64_t v60 = v52;
          uint64_t v61 = v69;
          uint64_t v62 = v53;
          uint64_t v63 = v6;
          uint64_t v64 = v8;
          uint64_t v65 = v7;
          uint64_t v66 = v10;
          uint64_t v67 = v9;
          uint64_t v68 = v11;
          unint64_t v25 = v12;
          sub_1BFF58F10(v13);
          sub_1BFF8401C(v25, v14);
          sub_1BFFDD9B8((uint64_t)a1, &v55);
          if (v3)
          {
            unsigned int v36 = v17;
            uint64_t v34 = v19;
            uint64_t v35 = v20;
            unint64_t v32 = v43;
            uint64_t v33 = v18;
            uint64_t v31 = v44;
            unint64_t v26 = v13;
            unint64_t v24 = v25;
            goto LABEL_24;
          }
          unint64_t v24 = v25;
          goto LABEL_19;
        case 3uLL:
          if (v13 == 0xC000000000000000)
          {
            unint64_t v21 = 0xC000000000000000;
LABEL_7:
            unint64_t v22 = *(void *)(v2 + 8);
            sub_1BFF58F10(v21);
            sub_1BFF8401C(v22, v14);
            unint64_t v23 = v43;
            unint64_t v24 = v22;
          }
          else
          {
            unint64_t v27 = *(void *)(v2 + 8);
            if (v13 == 0xC000000000000008) {
              unint64_t v28 = 0xC000000000000008;
            }
            else {
              unint64_t v28 = 0xC000000000000010;
            }
            sub_1BFF58F10(v28);
            sub_1BFF8401C(v27, v14);
            unint64_t v24 = v27;
LABEL_19:
            unint64_t v23 = v43;
          }
          if (v24 == 12 || v24 == 13)
          {
LABEL_23:
            unsigned int v36 = v17;
            uint64_t v34 = v19;
            uint64_t v35 = v20;
            unint64_t v32 = v23;
            uint64_t v33 = v18;
            uint64_t v31 = v44;
            unint64_t v26 = v13;
LABEL_24:
            sub_1BFF77374(v26, v24, v14, v46, v48, v49, v45, v47, v31, v32, v33, v34, v35, v36);
          }
          else
          {
            switch(v14 >> 62)
            {
              case 1uLL:
                uint64_t v55 = v4;
                char v56 = v5;
                char v57 = v50;
                uint64_t v58 = v51;
                uint64_t v59 = v54;
                uint64_t v60 = v52;
                uint64_t v61 = v69;
                uint64_t v62 = v53;
                uint64_t v63 = v6;
                uint64_t v64 = v37;
                uint64_t v65 = v38;
                uint64_t v66 = v39;
                uint64_t v67 = v40;
                uint64_t v68 = v41;
                unint64_t v29 = v24;
                unint64_t v30 = v23;
                sub_1BFFDD9B8((uint64_t)a1, &v55);
                sub_1BFF77374(v13, v29, v14, v46, v48, v49, v45, v47, v44, v30, v18, v19, v20, v17);
                break;
              case 3uLL:
                if (v14 == 0xC000000000000000)
                {
                  sub_1BFF77374(v13, v24, 0xC000000000000000, v46, v48, v49, v45, v47, v44, v23, v18, v19, v20, v17);
                }
                else if (v14 == 0xC000000000000008)
                {
                  sub_1BFF77374(v13, v24, 0xC000000000000008, v46, v48, v49, v45, v47, v44, v23, v18, v19, v20, v17);
                }
                else
                {
                  sub_1BFF77374(v13, v24, 0xC000000000000010, v46, v48, v49, v45, v47, v44, v23, v18, v19, v20, v17);
                }
                break;
              default:
                goto LABEL_23;
            }
          }
          break;
        default:
          unint64_t v21 = *(void *)v2;
          goto LABEL_7;
      }
      break;
    default:
      switch((*(void *)(v2 + 40) >> 1) & 0xF)
      {
        case 2u:
          uint64_t v55 = v4;
          char v56 = v5;
          char v57 = v50;
          uint64_t v58 = v51;
          uint64_t v59 = v54;
          uint64_t v60 = v52;
          uint64_t v61 = v69;
          uint64_t v62 = v53;
          uint64_t v63 = v6;
          uint64_t v64 = v8;
          uint64_t v65 = v7;
          uint64_t v66 = v10;
          uint64_t v67 = v9;
          uint64_t v68 = v11;
          sub_1C002603C(a1, (uint64_t)&v55);
          break;
        case 3u:
          uint64_t v55 = v4;
          char v56 = v5;
          char v57 = v50;
          uint64_t v58 = v51;
          uint64_t v59 = v54;
          uint64_t v60 = v52;
          uint64_t v61 = v69;
          uint64_t v62 = v53;
          uint64_t v63 = v6;
          uint64_t v64 = v8;
          uint64_t v65 = v7;
          uint64_t v66 = v10;
          uint64_t v67 = v9;
          uint64_t v68 = v11;
          sub_1C003030C(a1, &v55);
          break;
        case 8u:
          uint64_t v55 = v4;
          char v56 = v5;
          char v57 = v50;
          uint64_t v58 = v51;
          uint64_t v59 = v54;
          uint64_t v60 = v52;
          uint64_t v61 = v69;
          uint64_t v62 = v53;
          uint64_t v63 = v6;
          uint64_t v64 = v8;
          uint64_t v65 = v7;
          uint64_t v66 = v10;
          uint64_t v67 = v9;
          uint64_t v68 = v11;
          sub_1C05CC5B0(a1, (uint64_t)&v55);
          break;
        default:
          return;
      }
      break;
  }
}

uint64_t sub_1BFF0DB9C(uint64_t result, uint64_t *a2)
{
  if (*v2 >> 61 == 3)
  {
    uint64_t v3 = a2[12];
    char v4 = *((unsigned char *)a2 + 9);
    char v5 = *((unsigned char *)a2 + 8);
    uint64_t v6 = *a2;
    uint64_t v18 = *(void *)((*v2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v9 = v6;
    char v10 = v5;
    char v11 = v4;
    long long v7 = *((_OWORD *)a2 + 2);
    long long v12 = *((_OWORD *)a2 + 1);
    long long v13 = v7;
    long long v8 = *((_OWORD *)a2 + 4);
    long long v14 = *((_OWORD *)a2 + 3);
    long long v15 = v8;
    long long v16 = *((_OWORD *)a2 + 5);
    uint64_t v17 = v3;
    return sub_1BFF0DB9C(result, &v9);
  }
  return result;
}

void sub_1BFF0DC28(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  char v6 = *((unsigned char *)a2 + 9);
  uint64_t v35 = a2[2];
  uint64_t v20 = a2[3];
  uint64_t v14 = a2[4];
  uint64_t v7 = a2[6];
  uint64_t v9 = a2[7];
  uint64_t v8 = a2[8];
  uint64_t v10 = a2[10];
  uint64_t v18 = a2[9];
  uint64_t v11 = a2[12];
  uint64_t v16 = a2[5];
  uint64_t v17 = a2[11];
  swift_beginAccess();
  uint64_t v21 = v4;
  char v22 = v5;
  char v23 = v6;
  uint64_t v24 = v35;
  uint64_t v25 = v20;
  uint64_t v26 = v14;
  uint64_t v27 = v16;
  uint64_t v28 = v7;
  uint64_t v29 = v9;
  uint64_t v13 = v8;
  uint64_t v30 = v8;
  uint64_t v31 = v18;
  uint64_t v32 = v10;
  uint64_t v33 = v17;
  uint64_t v34 = v11;
  sub_1BFF0DDEC((unint64_t)a1, (uint64_t)&v21);
  if (!v15)
  {
    uint64_t v12 = v35;
    swift_beginAccess();
    if (*(__int16 *)(v3 + 72) <= -1025)
    {
      uint64_t v21 = v4;
      char v22 = v5;
      char v23 = v6;
      uint64_t v24 = v12;
      uint64_t v25 = v20;
      uint64_t v26 = v14;
      uint64_t v27 = v16;
      uint64_t v28 = v7;
      uint64_t v29 = v9;
      uint64_t v30 = v13;
      uint64_t v31 = v18;
      uint64_t v32 = v10;
      uint64_t v33 = v17;
      uint64_t v34 = v11;
      sub_1BFF8449C(a1, (uint64_t)&v21);
    }
  }
}

unint64_t sub_1BFF0DDEC(unint64_t result, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 80);
  v18[4] = *(_OWORD *)(a2 + 64);
  v18[5] = v3;
  uint64_t v19 = *(void *)(a2 + 96);
  long long v4 = *(_OWORD *)(a2 + 16);
  v18[0] = *(_OWORD *)a2;
  v18[1] = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  v18[2] = *(_OWORD *)(a2 + 32);
  v18[3] = v5;
  unint64_t v6 = *(void *)v2;
  int v7 = *(unsigned __int8 *)(v2 + 8);
  if (v7) {
    int v8 = 4;
  }
  else {
    int v8 = 0;
  }
  uint64_t v9 = (unint64_t *)result;
  switch((v6 >> 60) & 3 | v8)
  {
    case 1uLL:
    case 2uLL:
      if (v6 >> 62 == 1)
      {
        uint64_t v10 = (void *)(v6 & 0xFFFFFFFFFFFFFFFLL);
        goto LABEL_11;
      }
      break;
    case 3uLL:
    case 5uLL:
      if (v6 >> 62 == 1)
      {
        uint64_t v11 = (void *)(v6 & 0xFFFFFFFFFFFFFFFLL);
        goto LABEL_14;
      }
      break;
    case 4uLL:
      if (v6 >> 62 == 1)
      {
        uint64_t v11 = (void *)(v6 & 0x3FFFFFFFFFFFFFFFLL);
LABEL_14:
        uint64_t v15 = v11[2];
        uint64_t v16 = v11[3];
        unint64_t v17 = v11[4];
        sub_1BFF4CEEC(v6, v7);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BFFA2240(v9, v18, v15, v16, v17);
        goto LABEL_15;
      }
      break;
    case 6uLL:
      return result;
    default:
      if (v6 >> 62 == 1)
      {
        uint64_t v10 = (void *)(v6 & 0x3FFFFFFFFFFFFFFFLL);
LABEL_11:
        uint64_t v12 = v10[2];
        uint64_t v13 = v10[3];
        unint64_t v14 = v10[4];
        sub_1BFF4CEEC(v6, v7);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BFFA2240(v9, v18, v12, v13, v14);
LABEL_15:
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t result = sub_1BFF4BCA0(v6, v7);
      }
      break;
  }
  return result;
}

void sub_1BFF0DFA4(unint64_t a1, uint64_t (*a2)(uint64_t a1, uint64_t a2, uint64_t a3, char a4), uint64_t a3)
{
  unint64_t v404 = a1;
  v405 = a2;
  uint64_t v4 = type metadata accessor for FormatPropertyDefinition(0);
  uint64_t v397 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  v394 = (char *)&v375 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v375 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v10 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return;
  }
  uint64_t v383 = (uint64_t)&v375 - v12;
  uint64_t v387 = v13;
  uint64_t v388 = v6;
  v382 = (uint64_t *)v9;
  uint64_t v386 = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
  uint64_t v15 = a3 + 32;
  v385 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v384 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  uint64_t v392 = a3 + 32;
  uint64_t v393 = v14;
  uint64_t v396 = a3;
  while (1)
  {
    uint64_t v19 = v15 + 88 * v16;
    unsigned int v20 = *(unsigned __int8 *)(v19 + 80);
    if (!(v20 >> 6)) {
      goto LABEL_5;
    }
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v23 = *(void *)(v19 + 24);
    uint64_t v22 = *(void *)(v19 + 32);
    uint64_t v24 = *(void *)(v19 + 48);
    uint64_t v403 = *(void *)(v19 + 40);
    uint64_t v25 = *(void *)(v19 + 56);
    uint64_t v26 = *(void *)(v19 + 64);
    uint64_t v27 = *(void *)(v19 + 72);
    if (v20 >> 6 == 1) {
      break;
    }
    uint64_t v40 = *(void *)(v22 + 16);
    if (v40)
    {
      uint64_t v395 = v16;
      uint64_t v41 = v26;
      unsigned __int8 v42 = v20;
      uint64_t v43 = v22;
      uint64_t v402 = v23;
      uint64_t v44 = v24;
      unint64_t v45 = (*(unsigned __int8 *)(v397 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v397 + 80);
      uint64_t v46 = v25;
      uint64_t v400 = v21;
      uint64_t v47 = v22 + v45;
      uint64_t v48 = v403;
      sub_1BFF1DB64(v22, v403, v44, v25, v41, v27, v42);
      sub_1BFF1DB64(v43, v48, v44, v46, v41, v27, v42);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v398 = v27;
      uint64_t v399 = v43;
      uint64_t v49 = v43;
      unsigned __int8 v50 = v42;
      uint64_t v51 = v41;
      uint64_t v52 = v48;
      uint64_t v53 = v48;
      uint64_t v54 = v44;
      uint64_t v401 = v46;
      uint64_t v55 = v27;
      unsigned __int8 v56 = v50;
      sub_1BFF1DB64(v49, v53, v44, v46, v41, v55, v50);
      uint64_t v57 = *(void *)(v397 + 72);
      uint64_t v58 = (uint64_t)v394;
      while (1)
      {
        sub_1BFF83CC4(v47, v58, type metadata accessor for FormatPropertyDefinition);
        uint64_t v59 = v411;
        FormatPropertyDefinition.bind(binder:context:)(v404, (uint64_t)v405);
        uint64_t v411 = v59;
        if (v59) {
          break;
        }
        sub_1C05DDC60(v58, type metadata accessor for FormatPropertyDefinition);
        v47 += v57;
        if (!--v40)
        {
          uint64_t v60 = v399;
          uint64_t v61 = v54;
          uint64_t v62 = v54;
          uint64_t v63 = v401;
          uint64_t v64 = v398;
          sub_1BFEC28BC(v399, v52, v62, v401, v51, v398, v56);
          sub_1BFEC28BC(v60, v52, v61, v63, v51, v64, v56);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEC28BC(v60, v52, v61, v63, v51, v64, v56);
          a3 = v396;
          goto LABEL_4;
        }
      }
      sub_1C05DDC60(v58, type metadata accessor for FormatPropertyDefinition);
      uint64_t v298 = v399;
      uint64_t v299 = v54;
      uint64_t v300 = v54;
      uint64_t v301 = v401;
      uint64_t v302 = v398;
      sub_1BFEC28BC(v399, v52, v300, v401, v51, v398, v56);
      sub_1BFEC28BC(v298, v52, v299, v301, v51, v302, v56);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v303 = v298;
      uint64_t v304 = v52;
      uint64_t v305 = v299;
      uint64_t v306 = v301;
      uint64_t v307 = v51;
      uint64_t v308 = v302;
      unsigned __int8 v309 = v56;
      goto LABEL_94;
    }
LABEL_5:
    if (++v16 == v14) {
      goto LABEL_95;
    }
  }
  if (v20) {
    goto LABEL_5;
  }
  uint64_t v28 = *(void *)(v24 + 16);
  uint64_t v29 = *(void *)(v24 + 24);
  uint64_t v30 = *(void *)(v24 + 32);
  unsigned int v31 = *(unsigned __int8 *)(v24 + 40);
  int v32 = *(unsigned __int8 *)(v24 + 41);
  uint64_t v398 = *(void *)(v19 + 72);
  uint64_t v391 = v26;
  uint64_t v401 = v25;
  uint64_t v390 = v24;
  uint64_t v399 = v22;
  uint64_t v400 = v21;
  uint64_t v402 = v23;
  uint64_t v395 = v16;
  switch((4 * (v32 & 0x3F)) | (v31 >> 2) & 3)
  {
    case 1u:
      uint64_t v65 = v22;
      uint64_t v34 = v403;
      uint64_t v35 = v27;
      uint64_t v36 = v25;
      sub_1BFF1DB64(v22, v403, v24, v25, v26, v27, v20);
      sub_1BFF429DC(v24, v36, v26, v27, 0);
      sub_1BFF1DB64(v65, v34, v24, v36, v26, v27, v20);
      sub_1BFF429DC(v24, v36, v26, v27, 0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = v65;
      goto LABEL_11;
    case 2u:
    case 4u:
    case 5u:
    case 8u:
LABEL_10:
      uint64_t v33 = v22;
      uint64_t v34 = v403;
      uint64_t v35 = v27;
      uint64_t v36 = v25;
      sub_1BFF1DB64(v22, v403, v24, v25, v26, v27, v20);
      sub_1BFF429DC(v24, v36, v26, v27, 0);
      sub_1BFF1DB64(v33, v34, v24, v36, v26, v27, v20);
      sub_1BFF429DC(v24, v36, v26, v27, 0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v37 = v33;
LABEL_11:
      sub_1BFF1DB64(v37, v34, v24, v36, v26, v35, v20);
      uint64_t v38 = v36;
      a3 = v396;
      uint64_t v39 = *(void *)(v38 + 16);
      if (!v39) {
        goto LABEL_78;
      }
      goto LABEL_68;
    case 3u:
      switch((char)v30)
      {
        case 1:
          if ((~v28 & 0xF000000000000007) == 0)
          {
            uint64_t v125 = v22;
            uint64_t v126 = v403;
            uint64_t v127 = v25;
            sub_1BFF1DB64(v22, v403, v24, v25, v26, v27, v20);
            sub_1BFF429DC(v24, v127, v26, v27, 0);
            sub_1BFF1DB64(v125, v126, v24, v127, v26, v27, v20);
            sub_1BFF429DC(v24, v127, v26, v27, 0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v125, v126, v24, v127, v26, v27, v20);
            uint64_t v79 = v127;
            a3 = v396;
            goto LABEL_29;
          }
          *(void *)&long long v408 = v28;
          uint64_t v159 = v22;
          v376 = sub_1BFDEB94C;
          uint64_t v160 = v28;
          uint64_t v378 = v28;
          uint64_t v381 = v30;
          unsigned int v161 = v31;
          unsigned int v380 = v31;
          char v162 = v32;
          int v379 = v32;
          LODWORD(v389) = v20;
          uint64_t v163 = v25;
          sub_1C05D881C(v160, v29, v30, v31, v32, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
          sub_1BFF1DB64(v159, v403, v24, v163, v26, v27, v389);
          sub_1BFF429DC(v24, v163, v26, v27, 0);
          sub_1C05D881C(v378, v29, v381, v161, v162, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v376);
          uint64_t v164 = v403;
          sub_1BFF1DB64(v159, v403, v24, v163, v26, v27, v389);
          sub_1BFF429DC(v24, v163, v26, v27, 0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v165 = v163;
          unsigned int v20 = v389;
          sub_1BFF1DB64(v159, v164, v24, v165, v26, v27, v389);
          swift_retain();
          uint64_t v166 = v378;
          uint64_t v167 = v29;
          uint64_t v168 = v29;
          uint64_t v169 = v381;
          unsigned int v170 = v380;
          char v171 = v379;
          sub_1C05D881C(v378, v168, v381, v380, v379, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v376);
          sub_1BFDC11A4(v166);
          uint64_t v172 = v411;
          FormatTextContent.bind(binder:context:)(v404, (uint64_t)v405);
          uint64_t v411 = v172;
          if (v172)
          {
            sub_1BFDC11BC(v166);
            sub_1C05D881C(v166, v167, v169, v170, v171, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            sub_1C05D881C(v166, v167, v169, v170, v171, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            sub_1C002B840(v166, v167, 1);
            swift_release();
            uint64_t v343 = v401;
            uint64_t v344 = v391;
            uint64_t v345 = v398;
            sub_1BFEC41E8(v24, v401, v391, v398, 0);
            sub_1BFEC41E8(v24, v343, v344, v345, 0);
            uint64_t v346 = v399;
            uint64_t v347 = v403;
            sub_1BFEC28BC(v399, v403, v24, v343, v344, v345, v20);
            sub_1BFEC28BC(v346, v347, v24, v343, v344, v345, v20);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v303 = v346;
            uint64_t v304 = v347;
            uint64_t v305 = v24;
            uint64_t v306 = v343;
            uint64_t v307 = v344;
            uint64_t v308 = v345;
            unsigned __int8 v309 = v20;
            goto LABEL_94;
          }
          sub_1BFDC11BC(v166);
          sub_1C05D881C(v166, v167, v169, v170, v171, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
          sub_1C05D881C(v166, v167, v169, v170, v171, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
          sub_1C002B840(v166, v167, 1);
          break;
        case 2:
          goto LABEL_10;
        default:
          goto LABEL_22;
      }
      goto LABEL_90;
    case 6u:
      if (v31 >> 6)
      {
        if (v31 >> 6 == 1)
        {
          switch((char)v30)
          {
            case 1:
              goto LABEL_50;
            case 2:
              goto LABEL_10;
            default:
              goto LABEL_36;
          }
        }
        switch(v31 & 0x33333333)
        {
          case 1u:
            if ((~v29 & 0xF000000000000007) == 0) {
              goto LABEL_86;
            }
            LODWORD(v376) = v31 & 0xF3;
            *(void *)&long long v408 = v29;
            uint64_t v378 = v28;
            uint64_t v173 = v30;
            unsigned int v380 = v31;
            int v379 = v32;
            LODWORD(v389) = v20;
            v375 = sub_1BFDEB94C;
            sub_1C05D881C(v28, v29, v30, v31, v32, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
            uint64_t v174 = v173;
            uint64_t v175 = v173;
            uint64_t v381 = v173;
            LODWORD(v173) = v380;
            char v176 = v379;
            sub_1C05D881C(v28, v29, v174, v380, v379, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
            unsigned int v177 = v173;
            LOBYTE(v173) = v176;
            sub_1C05D881C(v28, v29, v175, v177, v176, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
            uint64_t v178 = v399;
            uint64_t v377 = v29;
            uint64_t v179 = v403;
            uint64_t v180 = v401;
            uint64_t v181 = v391;
            uint64_t v182 = v398;
            sub_1BFF1DB64(v399, v403, v24, v401, v391, v398, v389);
            sub_1BFF429DC(v24, v180, v181, v182, 0);
            sub_1C05D881C(v378, v377, v381, v380, v173, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v375);
            sub_1BFF1DB64(v178, v179, v24, v180, v181, v182, v389);
            sub_1BFF429DC(v24, v180, v181, v182, 0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v183 = v178;
            uint64_t v184 = v179;
            uint64_t v185 = v377;
            uint64_t v186 = v180;
            unsigned int v20 = v389;
            uint64_t v187 = v181;
            uint64_t v188 = v181;
            uint64_t v189 = v381;
            char v190 = v379;
            uint64_t v191 = v182;
            uint64_t v192 = v378;
            sub_1BFF1DB64(v183, v184, v24, v186, v188, v191, v389);
            swift_retain();
            sub_1C05D881C(v192, v185, v189, v380, v190, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v375);
            sub_1BFDC11A4(v185);
            uint64_t v193 = v411;
            FormatTextContent.bind(binder:context:)(v404, (uint64_t)v405);
            uint64_t v411 = v193;
            if (v193)
            {
              sub_1BFDC11BC(v185);
              v405 = sub_1BFDEB9E0;
              unsigned int v356 = v380;
              sub_1C05D881C(v192, v185, v189, v380, v190, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              sub_1C05D881C(v192, v185, v189, v356, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v405);
              LOBYTE(v356) = (_BYTE)v376;
              sub_1C00AB750(v192, v185, v189, v376, (uint64_t (*)(void))sub_1C002B840);
              sub_1C00AB750(v192, v185, v189, v356, (uint64_t (*)(void))sub_1C002B840);
              sub_1C00AB750(v192, v185, v189, v356, (uint64_t (*)(void))sub_1C002B840);
              swift_release();
              uint64_t v357 = v401;
              uint64_t v358 = v187;
              uint64_t v359 = v398;
              sub_1BFEC41E8(v24, v401, v187, v398, 0);
              sub_1BFEC41E8(v24, v357, v187, v359, 0);
              unsigned __int8 v360 = v20;
              uint64_t v361 = v399;
              uint64_t v362 = v403;
              sub_1BFEC28BC(v399, v403, v24, v357, v358, v359, v360);
              sub_1BFEC28BC(v361, v362, v24, v357, v358, v359, v360);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v303 = v361;
              uint64_t v304 = v362;
              uint64_t v305 = v24;
              uint64_t v306 = v357;
              uint64_t v307 = v358;
              uint64_t v308 = v359;
              unsigned __int8 v309 = v360;
              goto LABEL_94;
            }
            sub_1BFDC11BC(v185);
            uint64_t v194 = v185;
            uint64_t v195 = v185;
            unsigned int v196 = v380;
            sub_1C05D881C(v192, v195, v189, v380, v190, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            a3 = v396;
            sub_1C05D881C(v192, v194, v189, v196, v190, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            LOBYTE(v196) = (_BYTE)v376;
            sub_1C00AB750(v192, v194, v189, v376, (uint64_t (*)(void))sub_1C002B840);
            sub_1C00AB750(v192, v194, v189, v196, (uint64_t (*)(void))sub_1C002B840);
            sub_1C00AB750(v192, v194, v189, v196, (uint64_t (*)(void))sub_1C002B840);
            break;
          case 2u:
            goto LABEL_10;
          default:
            uint64_t v105 = v22;
            uint64_t v378 = v28;
            uint64_t v106 = v403;
            uint64_t v381 = v30;
            unsigned int v380 = v31;
            LODWORD(v376) = v31 & 0xF3;
            int v379 = v32;
            uint64_t v377 = v29;
            sub_1BFF1DB64(v22, v403, v24, v25, v26, v27, v20);
            sub_1BFF429DC(v24, v401, v26, v27, 0);
            sub_1BFF1DB64(v105, v106, v24, v401, v26, v27, v20);
            sub_1BFF429DC(v24, v401, v26, v27, 0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BFF1DB64(v105, v106, v24, v401, v26, v27, v20);
            swift_retain();
            v389 = sub_1BFDEB9E0;
            uint64_t v107 = v378;
            uint64_t v108 = v377;
            uint64_t v109 = v381;
            unsigned int v110 = v380;
            char v111 = v379;
            sub_1C05D881C(v378, v377, v381, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            unsigned int v112 = v110;
            a3 = v396;
            sub_1C05D881C(v107, v108, v109, v112, v111, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v389);
            unsigned __int8 v113 = v376;
            sub_1C00AB750(v107, v108, v109, v376, (uint64_t (*)(void))sub_1C002B840);
            uint64_t v101 = v107;
            uint64_t v102 = v108;
            uint64_t v103 = v109;
            unsigned __int8 v104 = v113;
            goto LABEL_39;
        }
LABEL_66:
        swift_release();
LABEL_67:
        uint64_t v39 = *(void *)(v401 + 16);
        if (v39) {
          goto LABEL_68;
        }
        goto LABEL_78;
      }
      switch((char)v30)
      {
        case 1:
LABEL_50:
          if ((~v28 & 0xF000000000000007) == 0) {
            goto LABEL_54;
          }
          LODWORD(v376) = v31 & 0xF3;
          LODWORD(v389) = v20;
          *(void *)&long long v408 = v28;
          uint64_t v131 = v28;
          uint64_t v132 = v27;
          uint64_t v378 = v131;
          uint64_t v133 = v30;
          uint64_t v381 = v30;
          unsigned int v134 = v31;
          unsigned int v380 = v31;
          int v135 = v32;
          v375 = sub_1BFDEB94C;
          sub_1C05D881C(v131, v29, v30, v31, v32, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
          uint64_t v136 = v131;
          LOBYTE(v131) = v135;
          int v379 = v135;
          sub_1C05D881C(v136, v29, v133, v134, v135, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
          uint64_t v137 = v399;
          uint64_t v377 = v29;
          uint64_t v138 = v401;
          uint64_t v139 = v391;
          unsigned __int8 v140 = v389;
          sub_1BFF1DB64(v399, v403, v24, v401, v391, v132, v389);
          sub_1BFF429DC(v24, v138, v139, v132, 0);
          uint64_t v141 = v29;
          uint64_t v142 = v381;
          sub_1C05D881C(v378, v141, v381, v380, v131, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v375);
          uint64_t v143 = v137;
          uint64_t v144 = v137;
          uint64_t v145 = v403;
          sub_1BFF1DB64(v144, v403, v24, v138, v139, v132, v140);
          sub_1BFF429DC(v24, v138, v139, v132, 0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v146 = v139;
          uint64_t v147 = v378;
          sub_1BFF1DB64(v143, v145, v24, v138, v146, v132, v140);
          swift_retain();
          uint64_t v148 = v377;
          uint64_t v149 = v142;
          uint64_t v150 = v142;
          unsigned int v151 = v380;
          char v152 = v379;
          sub_1C05D881C(v147, v377, v150, v380, v379, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v375);
          sub_1BFDC11A4(v147);
          uint64_t v153 = v411;
          FormatTextContent.bind(binder:context:)(v404, (uint64_t)v405);
          uint64_t v411 = v153;
          if (!v153)
          {
            sub_1BFDC11BC(v147);
            sub_1C05D881C(v147, v148, v149, v151, v152, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            sub_1C05D881C(v147, v148, v149, v151, v152, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            unsigned __int8 v154 = v376;
            sub_1C00AB750(v147, v148, v149, v376, (uint64_t (*)(void))sub_1C002B840);
            sub_1C00AB750(v147, v148, v149, v154, (uint64_t (*)(void))sub_1C002B840);
            goto LABEL_77;
          }
          sub_1BFDC11BC(v147);
          uint64_t v348 = v148;
          sub_1C05D881C(v147, v148, v149, v151, v152, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
          sub_1C05D881C(v147, v148, v149, v151, v152, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
          uint64_t v349 = v148;
          unsigned __int8 v350 = v376;
          sub_1C00AB750(v147, v349, v149, v376, (uint64_t (*)(void))sub_1C002B840);
          sub_1C00AB750(v147, v348, v149, v350, (uint64_t (*)(void))sub_1C002B840);
          break;
        case 2:
          goto LABEL_10;
        default:
LABEL_36:
          uint64_t v94 = v22;
          uint64_t v378 = v28;
          uint64_t v95 = v403;
          uint64_t v381 = v30;
          unsigned int v380 = v31;
          LODWORD(v376) = v31 & 0xF3;
          int v379 = v32;
          uint64_t v377 = v29;
          sub_1BFF1DB64(v22, v403, v24, v25, v26, v27, v20);
          sub_1BFF429DC(v24, v401, v26, v27, 0);
          sub_1BFF1DB64(v94, v95, v24, v401, v26, v27, v20);
          sub_1BFF429DC(v24, v401, v26, v27, 0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v94, v95, v24, v401, v26, v27, v20);
          swift_retain();
          uint64_t v96 = v378;
          uint64_t v97 = v377;
          uint64_t v98 = v381;
          unsigned int v99 = v380;
          char v100 = v379;
          sub_1C05D881C(v378, v377, v381, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
          a3 = v396;
          sub_1C05D881C(v96, v97, v98, v99, v100, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
          uint64_t v101 = v378;
          uint64_t v102 = v97;
          uint64_t v103 = v98;
          unsigned __int8 v104 = v376;
LABEL_39:
          sub_1C00AB750(v101, v102, v103, v104, (uint64_t (*)(void))sub_1C002B840);
          goto LABEL_66;
      }
LABEL_105:
      swift_release();
      uint64_t v351 = v401;
      uint64_t v352 = v391;
      uint64_t v353 = v398;
      sub_1BFEC41E8(v24, v401, v391, v398, 0);
      sub_1BFEC41E8(v24, v351, v352, v353, 0);
      uint64_t v354 = v399;
      uint64_t v355 = v403;
      unsigned __int8 v316 = v389;
      sub_1BFEC28BC(v399, v403, v24, v351, v352, v353, v389);
      sub_1BFEC28BC(v354, v355, v24, v351, v352, v353, v316);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v303 = v354;
      uint64_t v304 = v355;
      uint64_t v305 = v24;
      uint64_t v306 = v351;
      uint64_t v307 = v352;
      uint64_t v308 = v353;
      goto LABEL_93;
    case 7u:
      if (v31)
      {
        *(void *)&long long v408 = v28;
        *((void *)&v408 + 1) = v29;
        *(void *)&long long v409 = v30;
        LOBYTE(v406) = 5;
        uint64_t v80 = v22;
        uint64_t v381 = v30;
        unsigned int v380 = v31;
        int v379 = v32;
        uint64_t v81 = v27;
        uint64_t v82 = v27;
        uint64_t v83 = v25;
        sub_1BFF1DB64(v22, v403, v24, v25, v26, v82, v20);
        sub_1BFF429DC(v24, v83, v26, v81, 0);
        uint64_t v84 = v29;
        v389 = sub_1BFDEB94C;
        sub_1C05D881C(v28, v29, v381, v380, v379, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
        sub_1BFF1DB64(v80, v403, v24, v83, v26, v81, v20);
        sub_1BFF429DC(v24, v83, v26, v81, 0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v85 = v83;
        uint64_t v86 = v26;
        sub_1BFF1DB64(v80, v403, v24, v85, v26, v81, v20);
        uint64_t v87 = v24;
        swift_retain();
        sub_1C05D881C(v28, v29, v381, v380, v379, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v389);
        uint64_t v88 = v411;
        uint64_t v89 = sub_1C12ECBDC((uint64_t *)&v408, (char *)&v406);
        uint64_t v411 = v88;
        if (v88)
        {
          sub_1C05D881C(v28, v29, v381, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
          swift_release();
          uint64_t v317 = v401;
          uint64_t v318 = v398;
          sub_1BFEC41E8(v24, v401, v86, v398, 0);
          sub_1BFEC41E8(v24, v317, v86, v318, 0);
          uint64_t v319 = v399;
          uint64_t v320 = v403;
          sub_1BFEC28BC(v399, v403, v24, v317, v86, v318, v20);
          sub_1BFEC28BC(v319, v320, v24, v317, v86, v318, v20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v303 = v319;
          uint64_t v304 = v320;
          uint64_t v305 = v24;
          uint64_t v306 = v317;
          uint64_t v307 = v86;
          uint64_t v308 = v318;
          unsigned __int8 v309 = v20;
          goto LABEL_94;
        }
        uint64_t v90 = v89;
        uint64_t v91 = v387;
        uint64_t v378 = v28;
        uint64_t v377 = v84;
        FormatOptionCollection.subscript.getter(v28, v84, v387);
        if ((*v385)(v91, 1, v388) == 1)
        {
          sub_1C05DDCC0(v91, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
          a3 = v396;
          if ((*((unsigned char *)v405 + 48) & 1) == 0)
          {
            type metadata accessor for FormatLayoutError();
            sub_1BFF87774((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
            uint64_t v321 = swift_allocError();
            uint64_t v322 = v378;
            uint64_t v323 = v377;
            void *v324 = v378;
            v324[1] = v323;
            swift_storeEnumTagMultiPayload();
            swift_bridgeObjectRetain();
            uint64_t v411 = v321;
            swift_willThrow();
            swift_bridgeObjectRelease();
            sub_1C05D881C(v322, v323, v381, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            swift_release();
            uint64_t v325 = v401;
            uint64_t v326 = v398;
            sub_1BFEC41E8(v24, v401, v86, v398, 0);
            sub_1BFEC41E8(v24, v325, v86, v326, 0);
            uint64_t v327 = v399;
            uint64_t v328 = v403;
            sub_1BFEC28BC(v399, v403, v24, v325, v86, v326, v20);
            sub_1BFEC28BC(v327, v328, v24, v325, v86, v326, v20);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v303 = v327;
            uint64_t v304 = v328;
            uint64_t v305 = v24;
            uint64_t v306 = v325;
            uint64_t v307 = v86;
            uint64_t v308 = v326;
            unsigned __int8 v309 = v20;
            goto LABEL_94;
          }
          uint64_t v92 = 1;
          uint64_t v93 = v383;
        }
        else
        {
          uint64_t v128 = v382;
          sub_1BFCCD5B8(v91, (uint64_t)v382, (uint64_t (*)(void))type metadata accessor for FormatOption);
          *(void *)&long long v408 = v128[2];
          FormatOptionValue.type.getter((char *)&v406);
          uint64_t v129 = v90;
          char v130 = sub_1BFF2AB84(v406, v90);
          a3 = v396;
          if ((v130 & 1) == 0)
          {
            uint64_t v411 = type metadata accessor for FormatDerivedDataError();
            sub_1BFF87774((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
            uint64_t v329 = swift_allocError();
            LODWORD(v389) = v20;
            uint64_t v331 = v330;
            uint64_t v332 = v87;
            uint64_t v333 = *v128;
            uint64_t v334 = v128[1];
            *(void *)&long long v408 = v128[2];
            swift_bridgeObjectRetain();
            FormatOptionValue.type.getter((char *)&v406);
            char v335 = v406;
            *(void *)uint64_t v331 = v333;
            *(void *)(v331 + 8) = v334;
            *(unsigned char *)(v331 + 16) = v335;
            *(void *)(v331 + 24) = v129;
            swift_storeEnumTagMultiPayload();
            swift_bridgeObjectRetain();
            uint64_t v411 = v329;
            swift_willThrow();
            sub_1C05DDC60((uint64_t)v128, (uint64_t (*)(void))type metadata accessor for FormatOption);
            swift_bridgeObjectRelease();
            sub_1C05D881C(v378, v377, v381, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
            swift_release();
            uint64_t v336 = v401;
            uint64_t v337 = v391;
            uint64_t v338 = v398;
            sub_1BFEC41E8(v332, v401, v391, v398, 0);
            uint64_t v339 = v338;
            sub_1BFEC41E8(v332, v336, v337, v338, 0);
            uint64_t v340 = v399;
            uint64_t v341 = v403;
            uint64_t v342 = v338;
            LOBYTE(v338) = (_BYTE)v389;
            sub_1BFEC28BC(v399, v403, v332, v336, v337, v342, v389);
            sub_1BFEC28BC(v340, v341, v332, v336, v337, v339, v338);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v303 = v340;
            uint64_t v304 = v341;
            uint64_t v305 = v332;
            uint64_t v306 = v336;
            uint64_t v307 = v337;
            uint64_t v308 = v339;
            unsigned __int8 v309 = v338;
            goto LABEL_94;
          }
          uint64_t v93 = v383;
          sub_1BFCCD5B8((uint64_t)v128, v383, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v92 = 0;
        }
        (*v384)(v93, v92, 1, v388);
        sub_1C05DDCC0(v93, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
        sub_1C05D881C(v378, v377, v381, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
        goto LABEL_66;
      }
      uint64_t v73 = v22;
      uint64_t v74 = v403;
      uint64_t v75 = v27;
      uint64_t v76 = v27;
      uint64_t v77 = v25;
      sub_1BFF1DB64(v22, v403, v24, v25, v26, v76, v20);
      sub_1BFF429DC(v24, v77, v26, v75, 0);
      sub_1BFF1DB64(v73, v74, v24, v77, v26, v75, v20);
      sub_1BFF429DC(v24, v77, v26, v75, 0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v78 = v73;
LABEL_28:
      sub_1BFF1DB64(v78, v74, v24, v77, v26, v75, v20);
      uint64_t v79 = v77;
LABEL_29:
      uint64_t v39 = *(void *)(v79 + 16);
      if (v39) {
        goto LABEL_68;
      }
      goto LABEL_78;
    default:
      switch((v31 >> 4) & 3)
      {
        case 1u:
LABEL_22:
          uint64_t v66 = v22;
          uint64_t v378 = v28;
          uint64_t v67 = v403;
          uint64_t v381 = v30;
          unsigned int v380 = v31;
          int v379 = v32;
          uint64_t v377 = v29;
          sub_1BFF1DB64(v22, v403, v24, v25, v26, v27, v20);
          sub_1BFF429DC(v24, v401, v26, v27, 0);
          sub_1BFF1DB64(v66, v67, v24, v401, v26, v27, v20);
          sub_1BFF429DC(v24, v401, v26, v27, 0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v66, v67, v24, v401, v26, v27, v20);
          swift_retain();
          uint64_t v68 = v378;
          uint64_t v69 = v377;
          uint64_t v70 = v381;
          unsigned int v71 = v380;
          char v72 = v379;
          sub_1C05D881C(v378, v377, v381, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
          a3 = v396;
          sub_1C05D881C(v68, v69, v70, v71, v72, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
          goto LABEL_66;
        case 2u:
          switch((char)v30)
          {
            case 1:
              goto LABEL_53;
            case 2:
              goto LABEL_10;
            default:
              goto LABEL_41;
          }
        case 3u:
          if (!(v31 >> 6))
          {
            switch((char)v30)
            {
              case 1:
LABEL_82:
                if ((~v28 & 0xF000000000000007) == 0)
                {
LABEL_86:
                  uint64_t v277 = v22;
                  uint64_t v74 = v403;
                  uint64_t v75 = v27;
                  uint64_t v278 = v27;
                  uint64_t v77 = v25;
                  sub_1BFF1DB64(v22, v403, v24, v25, v26, v278, v20);
                  sub_1BFF429DC(v24, v77, v26, v75, 0);
                  sub_1BFF1DB64(v277, v74, v24, v77, v26, v75, v20);
                  sub_1BFF429DC(v24, v77, v26, v75, 0);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v78 = v277;
                  goto LABEL_28;
                }
                *(void *)&long long v408 = v28;
                uint64_t v378 = v28;
                uint64_t v253 = v28;
                uint64_t v254 = v30;
                unsigned int v255 = v31;
                int v256 = v32;
                LODWORD(v389) = v20;
                uint64_t v257 = v27;
                sub_1C05D881C(v253, v29, v30, v31, v32, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                v376 = sub_1BFDEB94C;
                sub_1C05D881C(v378, v29, v254, v255, v256, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                uint64_t v381 = v254;
                int v379 = v256;
                sub_1C05D881C(v378, v29, v254, v255, v256, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                uint64_t v258 = v399;
                uint64_t v377 = v29;
                uint64_t v259 = v401;
                uint64_t v260 = v391;
                sub_1BFF1DB64(v399, v403, v24, v401, v391, v257, v389);
                sub_1BFF429DC(v24, v259, v260, v257, 0);
                char v261 = v256;
                uint64_t v262 = v376;
                sub_1C05D881C(v378, v377, v254, v255, v261, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v376);
                uint64_t v263 = v403;
                sub_1BFF1DB64(v258, v403, v24, v259, v260, v257, v389);
                sub_1BFF429DC(v24, v259, v260, v257, 0);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v264 = v263;
                uint64_t v265 = v260;
                uint64_t v266 = v378;
                unsigned int v20 = v389;
                sub_1BFF1DB64(v258, v264, v24, v259, v265, v257, v389);
                swift_retain();
                uint64_t v267 = v377;
                uint64_t v268 = v381;
                unsigned int v269 = v255;
                sub_1C05D881C(v266, v377, v381, v255, v379, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v262);
                sub_1BFDC11A4(v266);
                uint64_t v270 = v411;
                FormatTextContent.bind(binder:context:)(v404, (uint64_t)v405);
                uint64_t v411 = v270;
                if (v270)
                {
                  sub_1BFDC11BC(v266);
                  char v363 = v379;
                  sub_1C05D881C(v266, v267, v268, v255, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C05D881C(v266, v267, v268, v255, v363, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C00AB700(v266, v267, v268, v255, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                  sub_1C00AB700(v266, v267, v268, v255, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                  uint64_t v364 = v266;
                  uint64_t v365 = v267;
                  uint64_t v366 = v268;
                  unsigned int v367 = v255;
                  goto LABEL_109;
                }
                sub_1BFDC11BC(v266);
                unsigned int v271 = v255;
                char v272 = v379;
                sub_1C05D881C(v266, v267, v268, v271, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                sub_1C05D881C(v266, v267, v268, v269, v272, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                sub_1C00AB700(v266, v267, v268, v269, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                sub_1C00AB700(v266, v267, v268, v269, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                uint64_t v273 = v266;
                uint64_t v274 = v267;
                uint64_t v275 = v268;
                unsigned int v276 = v269;
                break;
              case 2:
                goto LABEL_10;
              default:
LABEL_62:
                uint64_t v197 = v22;
                uint64_t v378 = v28;
                uint64_t v198 = v403;
                uint64_t v381 = v30;
                unsigned int v380 = v31;
                int v379 = v32;
                uint64_t v377 = v29;
                sub_1BFF1DB64(v22, v403, v24, v25, v26, v27, v20);
                sub_1BFF429DC(v24, v401, v26, v27, 0);
                sub_1BFF1DB64(v197, v198, v24, v401, v26, v27, v20);
                sub_1BFF429DC(v24, v401, v26, v27, 0);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1BFF1DB64(v197, v198, v24, v401, v26, v27, v20);
                swift_retain();
                uint64_t v199 = v378;
                uint64_t v200 = v377;
                uint64_t v201 = v381;
                unsigned int v202 = v380;
                char v203 = v379;
                sub_1C05D881C(v378, v377, v381, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                uint64_t v204 = v200;
                LODWORD(v200) = v202;
                a3 = v396;
                sub_1C05D881C(v199, v204, v201, v202, v203, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                uint64_t v205 = v378;
                uint64_t v206 = v377;
                sub_1C00AB700(v378, v377, v201, v200, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                uint64_t v121 = v205;
                uint64_t v122 = v206;
                uint64_t v123 = v201;
                unsigned int v124 = v200;
                goto LABEL_65;
            }
LABEL_89:
            sub_1C00AB700(v273, v274, v275, v276, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
LABEL_90:
            swift_release();
            a3 = v396;
            goto LABEL_67;
          }
          if (v31 >> 6 == 1)
          {
            switch((char)v30)
            {
              case 1:
                goto LABEL_82;
              case 2:
                goto LABEL_10;
              default:
                goto LABEL_62;
            }
          }
          switch(v31 & 0xF)
          {
            case 1u:
              if ((~v29 & 0xF000000000000007) == 0) {
                goto LABEL_86;
              }
              *(void *)&long long v408 = v29;
              uint64_t v279 = v22;
              uint64_t v280 = v30;
              unsigned int v380 = v31;
              int v281 = v32;
              LODWORD(v389) = v20;
              sub_1C05D881C(v28, v29, v30, v31, v32, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
              unsigned int v282 = v380;
              sub_1C05D881C(v28, v29, v280, v380, v281, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
              uint64_t v378 = v28;
              int v379 = v281;
              sub_1C05D881C(v28, v29, v280, v282, v281, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
              v376 = sub_1BFDEB94C;
              sub_1C05D881C(v28, v29, v280, v282, v281, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
              uint64_t v283 = v279;
              uint64_t v284 = v279;
              uint64_t v285 = v29;
              uint64_t v377 = v29;
              uint64_t v286 = v401;
              uint64_t v287 = v391;
              uint64_t v288 = v398;
              sub_1BFF1DB64(v284, v403, v24, v401, v391, v398, v389);
              sub_1BFF429DC(v24, v286, v287, v288, 0);
              uint64_t v289 = v285;
              LODWORD(v285) = v380;
              sub_1C05D881C(v378, v289, v280, v380, v379, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
              uint64_t v290 = v403;
              sub_1BFF1DB64(v283, v403, v24, v286, v287, v288, v389);
              sub_1BFF429DC(v24, v286, v287, v288, 0);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v291 = v283;
              LODWORD(v283) = v285;
              uint64_t v292 = v288;
              unsigned int v20 = v389;
              sub_1BFF1DB64(v291, v290, v24, v286, v287, v292, v389);
              swift_retain();
              uint64_t v293 = v378;
              uint64_t v294 = v377;
              sub_1C05D881C(v378, v377, v280, v283, v379, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v376);
              sub_1BFDC11A4(v294);
              uint64_t v295 = v411;
              FormatTextContent.bind(binder:context:)(v404, (uint64_t)v405);
              uint64_t v411 = v295;
              if (!v295)
              {
                sub_1BFDC11BC(v294);
                unsigned int v296 = v380;
                char v297 = v379;
                sub_1C05D881C(v293, v294, v280, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                sub_1C05D881C(v293, v294, v280, v296, v297, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                sub_1C00AB700(v293, v294, v280, v296, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                sub_1C00AB700(v293, v294, v280, v296, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                sub_1C00AB700(v293, v294, v280, v296, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                uint64_t v273 = v293;
                uint64_t v274 = v294;
                uint64_t v275 = v280;
                unsigned int v276 = v296;
                goto LABEL_89;
              }
              sub_1BFDC11BC(v294);
              unsigned int v368 = v380;
              char v369 = v379;
              sub_1C05D881C(v293, v294, v280, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              sub_1C05D881C(v293, v294, v280, v368, v369, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              sub_1C00AB700(v293, v294, v280, v368, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
              sub_1C00AB700(v293, v294, v280, v368, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
              sub_1C00AB700(v293, v294, v280, v368, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
              uint64_t v364 = v293;
              uint64_t v365 = v294;
              uint64_t v366 = v280;
              unsigned int v367 = v368;
LABEL_109:
              sub_1C00AB700(v364, v365, v366, v367, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
              swift_release();
              uint64_t v370 = v401;
              uint64_t v371 = v391;
              uint64_t v372 = v398;
              sub_1BFEC41E8(v24, v401, v391, v398, 0);
              sub_1BFEC41E8(v24, v370, v371, v372, 0);
              uint64_t v373 = v399;
              uint64_t v374 = v403;
              unsigned __int8 v316 = v389;
              sub_1BFEC28BC(v399, v403, v24, v370, v371, v372, v389);
              sub_1BFEC28BC(v373, v374, v24, v370, v371, v372, v316);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v303 = v373;
              uint64_t v304 = v374;
              uint64_t v305 = v24;
              uint64_t v306 = v370;
              uint64_t v307 = v371;
              uint64_t v308 = v372;
LABEL_93:
              unsigned __int8 v309 = v316;
LABEL_94:
              sub_1BFEC28BC(v303, v304, v305, v306, v307, v308, v309);
LABEL_95:
              swift_bridgeObjectRelease();
              return;
            case 2u:
              goto LABEL_10;
            default:
              uint64_t v207 = v22;
              uint64_t v378 = v28;
              uint64_t v208 = v403;
              uint64_t v381 = v30;
              unsigned int v380 = v31;
              int v379 = v32;
              uint64_t v377 = v29;
              sub_1BFF1DB64(v22, v403, v24, v25, v26, v27, v20);
              sub_1BFF429DC(v24, v401, v26, v27, 0);
              sub_1BFF1DB64(v207, v208, v24, v401, v26, v27, v20);
              sub_1BFF429DC(v24, v401, v26, v27, 0);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1BFF1DB64(v207, v208, v24, v401, v26, v27, v20);
              swift_retain();
              v389 = sub_1BFDEB9E0;
              uint64_t v209 = v378;
              uint64_t v210 = v377;
              uint64_t v211 = v381;
              LODWORD(v208) = v380;
              char v212 = v379;
              sub_1C05D881C(v378, v377, v381, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              char v213 = v212;
              a3 = v396;
              sub_1C05D881C(v209, v210, v211, v208, v213, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v389);
              sub_1C00AB700(v209, v210, v211, v208, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
              sub_1C00AB700(v209, v210, v211, v208, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
              uint64_t v121 = v209;
              uint64_t v122 = v210;
              uint64_t v123 = v211;
              unsigned int v124 = v208;
              goto LABEL_65;
          }
        default:
          switch((char)v30)
          {
            case 1:
LABEL_53:
              if ((~v28 & 0xF000000000000007) == 0)
              {
LABEL_54:
                uint64_t v155 = v22;
                uint64_t v156 = v403;
                uint64_t v157 = v25;
                sub_1BFF1DB64(v22, v403, v24, v25, v26, v27, v20);
                sub_1BFF429DC(v24, v157, v26, v27, 0);
                sub_1BFF1DB64(v155, v156, v24, v157, v26, v27, v20);
                sub_1BFF429DC(v24, v157, v26, v27, 0);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1BFF1DB64(v155, v156, v24, v157, v26, v27, v20);
                uint64_t v158 = v157;
                a3 = v396;
                uint64_t v39 = *(void *)(v158 + 16);
                if (v39) {
                  goto LABEL_68;
                }
                goto LABEL_78;
              }
              LODWORD(v389) = v20;
              *(void *)&long long v408 = v28;
              uint64_t v223 = v28;
              uint64_t v224 = v27;
              uint64_t v225 = v223;
              uint64_t v378 = v223;
              uint64_t v226 = v30;
              uint64_t v381 = v30;
              unsigned int v227 = v31;
              char v228 = v32;
              int v379 = v32;
              sub_1C05D881C(v223, v29, v30, v31, v32, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
              v376 = sub_1BFDEB94C;
              unsigned int v380 = v227;
              sub_1C05D881C(v225, v29, v226, v227, v228, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
              uint64_t v229 = v401;
              uint64_t v230 = v391;
              unsigned __int8 v231 = v389;
              sub_1BFF1DB64(v399, v403, v24, v401, v391, v224, v389);
              sub_1BFF429DC(v24, v229, v230, v224, 0);
              sub_1C05D881C(v378, v29, v381, v227, v379, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
              uint64_t v232 = v399;
              uint64_t v233 = v403;
              sub_1BFF1DB64(v399, v403, v24, v229, v230, v224, v231);
              sub_1BFF429DC(v24, v229, v230, v224, 0);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v234 = v230;
              uint64_t v235 = v378;
              sub_1BFF1DB64(v232, v233, v24, v229, v234, v224, v231);
              swift_retain();
              uint64_t v236 = v29;
              uint64_t v237 = v29;
              uint64_t v238 = v381;
              unsigned int v239 = v380;
              char v240 = v379;
              sub_1C05D881C(v235, v237, v381, v380, v379, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v376);
              sub_1BFDC11A4(v235);
              uint64_t v241 = v411;
              FormatTextContent.bind(binder:context:)(v404, (uint64_t)v405);
              uint64_t v411 = v241;
              if (!v241)
              {
                sub_1BFDC11BC(v235);
                sub_1C05D881C(v235, v236, v238, v239, v240, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                sub_1C05D881C(v235, v236, v238, v239, v240, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                sub_1C00AB700(v235, v236, v238, v239, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                sub_1C00AB700(v235, v236, v238, v239, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
LABEL_77:
                swift_release();
                a3 = v396;
                unsigned int v20 = v389;
                uint64_t v39 = *(void *)(v401 + 16);
                if (v39)
                {
LABEL_68:
                  LODWORD(v389) = v20;
                  int v214 = (void *)(swift_bridgeObjectRetain() + 64);
                  do
                  {
                    uint64_t v215 = *(v214 - 4);
                    uint64_t v216 = *(v214 - 3);
                    char v217 = *((unsigned char *)v214 - 16);
                    uint64_t v218 = *v214;
                    uint64_t v406 = *(v214 - 1);
                    uint64_t v407 = v218;
                    sub_1BFF5B7E0(v215, v216, v217);
                    sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
                    swift_bridgeObjectRetain_n();
                    if (swift_dynamicCast())
                    {
                      uint64_t v219 = *((void *)&v409 + 1);
                      uint64_t v220 = v410;
                      __swift_project_boxed_opaque_existential_1(&v408, *((uint64_t *)&v409 + 1));
                      uint64_t v221 = v411;
                      (*(void (**)(unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, char), uint64_t, uint64_t))(v220 + 8))(v404, v405, v219, v220);
                      uint64_t v411 = v221;
                      if (v221)
                      {
                        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v408);
                        sub_1BFF5B7CC(v215, v216, v217);
                        uint64_t v310 = v401;
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t v311 = v390;
                        uint64_t v312 = v391;
                        uint64_t v313 = v398;
                        sub_1BFEC41E8(v390, v310, v391, v398, 0);
                        sub_1BFEC41E8(v311, v310, v312, v313, 0);
                        uint64_t v314 = v399;
                        uint64_t v315 = v403;
                        unsigned __int8 v316 = v389;
                        sub_1BFEC28BC(v399, v403, v311, v310, v312, v313, v389);
                        sub_1BFEC28BC(v314, v315, v311, v310, v312, v313, v316);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t v303 = v314;
                        uint64_t v304 = v315;
                        uint64_t v305 = v311;
                        uint64_t v306 = v310;
                        uint64_t v307 = v312;
                        uint64_t v308 = v313;
                        goto LABEL_93;
                      }
                      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v408);
                      sub_1BFF5B7CC(v215, v216, v217);
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      uint64_t v410 = 0;
                      long long v408 = 0u;
                      long long v409 = 0u;
                      sub_1BFE4D118((uint64_t)&v408, qword_1EB874940, (unint64_t *)&qword_1EB874938);
                      sub_1BFF5B7CC(v215, v216, v217);
                      swift_bridgeObjectRelease();
                    }
                    v214 += 5;
                    --v39;
                  }
                  while (v39);
                  swift_bridgeObjectRelease();
                  a3 = v396;
                  unsigned __int8 v222 = v389;
                  goto LABEL_79;
                }
LABEL_78:
                unsigned __int8 v222 = v20;
LABEL_79:
                uint64_t v242 = v398;
                uint64_t v243 = v399;
                uint64_t v244 = v391;
                uint64_t v406 = v391;
                uint64_t v407 = v398;
                sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
                swift_bridgeObjectRetain();
                char v245 = swift_dynamicCast();
                uint64_t v246 = v390;
                if ((v245 & 1) == 0)
                {
                  uint64_t v410 = 0;
                  long long v408 = 0u;
                  long long v409 = 0u;
                  sub_1BFE4D118((uint64_t)&v408, qword_1EB874940, (unint64_t *)&qword_1EB874938);
                  uint64_t v17 = v401;
                  sub_1BFEC41E8(v246, v401, v244, v242, 0);
                  sub_1BFEC41E8(v246, v17, v244, v242, 0);
                  uint64_t v18 = v403;
                  sub_1BFEC28BC(v243, v403, v246, v17, v244, v242, v222);
                  sub_1BFEC28BC(v243, v18, v246, v17, v244, v242, v222);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1BFEC28BC(v243, v18, v246, v17, v244, v242, v222);
                  goto LABEL_4;
                }
                uint64_t v247 = a3;
                uint64_t v248 = *((void *)&v409 + 1);
                uint64_t v249 = v410;
                __swift_project_boxed_opaque_existential_1(&v408, *((uint64_t *)&v409 + 1));
                uint64_t v250 = v411;
                (*(void (**)(unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, char), uint64_t, uint64_t))(v249 + 8))(v404, v405, v248, v249);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v408);
                uint64_t v251 = v401;
                sub_1BFEC41E8(v246, v401, v244, v242, 0);
                sub_1BFEC41E8(v246, v251, v244, v242, 0);
                uint64_t v252 = v403;
                sub_1BFEC28BC(v243, v403, v246, v251, v244, v242, v222);
                sub_1BFEC28BC(v243, v252, v246, v251, v244, v242, v222);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1BFEC28BC(v243, v252, v246, v251, v244, v242, v222);
                uint64_t v411 = v250;
                if (v250) {
                  goto LABEL_95;
                }
                a3 = v247;
LABEL_4:
                uint64_t v15 = v392;
                uint64_t v14 = v393;
                uint64_t v16 = v395;
                goto LABEL_5;
              }
              sub_1BFDC11BC(v235);
              sub_1C05D881C(v235, v236, v238, v239, v240, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              sub_1C05D881C(v235, v236, v238, v239, v240, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              sub_1C00AB700(v235, v236, v238, v239, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
              sub_1C00AB700(v235, v236, v238, v239, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
              break;
            case 2:
              goto LABEL_10;
            default:
LABEL_41:
              uint64_t v114 = v22;
              uint64_t v378 = v28;
              uint64_t v115 = v403;
              uint64_t v381 = v30;
              unsigned int v380 = v31;
              int v379 = v32;
              uint64_t v377 = v29;
              sub_1BFF1DB64(v22, v403, v24, v25, v26, v27, v20);
              sub_1BFF429DC(v24, v401, v26, v27, 0);
              sub_1BFF1DB64(v114, v115, v24, v401, v26, v27, v20);
              sub_1BFF429DC(v24, v401, v26, v27, 0);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1BFF1DB64(v114, v115, v24, v401, v26, v27, v20);
              swift_retain();
              uint64_t v116 = v378;
              uint64_t v117 = v377;
              uint64_t v118 = v381;
              unsigned int v119 = v380;
              char v120 = v379;
              sub_1C05D881C(v378, v377, v381, v380, v379, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              a3 = v396;
              sub_1C05D881C(v116, v117, v118, v119, v120, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              uint64_t v121 = v378;
              uint64_t v122 = v117;
              uint64_t v123 = v118;
              unsigned int v124 = v119;
LABEL_65:
              sub_1C00AB700(v121, v122, v123, v124, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
              goto LABEL_66;
          }
          goto LABEL_105;
      }
  }
}

void sub_1BFF11C38(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v403 = a1;
  sub_1BFF14F38(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v402 = (uint64_t)&v379 - v6;
  sub_1BFF14F38(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v401 = (uint64_t)&v379 - v8;
  sub_1BFF14F38(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v400 = (uint64_t)&v379 - v10;
  sub_1BFF14F38(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v399 = (uint64_t)&v379 - v12;
  sub_1BFF14F38(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v398 = (uint64_t)&v379 - v14;
  uint64_t v15 = type metadata accessor for FormatPropertyDefinition(0);
  uint64_t v392 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v379 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  unsigned int v20 = (char *)&v379 - v19;
  uint64_t v21 = *(void *)(a3 + 16);
  if (!v21) {
    return;
  }
  uint64_t v22 = a3 + 32;
  uint64_t v386 = a3;
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  uint64_t v393 = a2;
  v389 = v20;
  uint64_t v388 = v15;
  uint64_t v387 = v17;
  uint64_t v391 = v21;
  uint64_t v390 = a3 + 32;
  while (1)
  {
    uint64_t v47 = v22 + 88 * v23;
    unsigned int v408 = *(unsigned __int8 *)(v47 + 80);
    if (!(v408 >> 6)) {
      goto LABEL_7;
    }
    uint64_t v48 = *(void *)(v47 + 8);
    uint64_t v50 = *(void *)(v47 + 24);
    uint64_t v49 = *(void *)(v47 + 32);
    uint64_t v51 = *(void *)(v47 + 40);
    uint64_t v407 = *(void *)(v47 + 48);
    uint64_t v52 = *(void *)(v47 + 56);
    uint64_t v53 = *(void *)(v47 + 64);
    uint64_t v54 = *(void *)(v47 + 72);
    uint64_t v405 = v52;
    uint64_t v406 = v54;
    if (v408 >> 6 != 1) {
      break;
    }
    if ((v408 & 1) == 0)
    {
      uint64_t v56 = *(void *)(v407 + 16);
      uint64_t v55 = *(void *)(v407 + 24);
      uint64_t v57 = *(void *)(v407 + 32);
      unsigned int v58 = *(unsigned __int8 *)(v407 + 40);
      int v59 = *(unsigned __int8 *)(v407 + 41);
      uint64_t v395 = v51;
      uint64_t v396 = v49;
      uint64_t v397 = v48;
      uint64_t v404 = v50;
      uint64_t v394 = v23;
      switch((4 * (v59 & 0x3F)) | (v58 >> 2) & 3)
      {
        case 1u:
        case 2u:
        case 4u:
        case 5u:
        case 7u:
        case 8u:
LABEL_12:
          uint64_t v60 = v49;
          uint64_t v61 = v49;
          uint64_t v62 = v51;
          uint64_t v63 = v406;
          uint64_t v64 = v407;
          uint64_t v65 = v405;
          unsigned __int8 v66 = v408;
          sub_1BFF1DB64(v61, v51, v407, v405, v53, v406, v408);
          sub_1BFF429DC(v64, v65, v53, v63, 0);
          sub_1BFF1DB64(v60, v62, v64, v65, v53, v63, v66);
          sub_1BFF429DC(v64, v65, v53, v63, 0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF1DB64(v60, v62, v64, v65, v53, v63, v66);
          goto LABEL_5;
        case 3u:
          switch((char)v57)
          {
            case 1:
              if ((~v56 & 0xF000000000000007) == 0) {
                goto LABEL_12;
              }
              uint64_t v418 = v56;
              long long v128 = *(_OWORD *)(a2 + 80);
              long long v415 = *(_OWORD *)(a2 + 64);
              long long v416 = v128;
              uint64_t v417 = *(void *)(a2 + 96);
              long long v129 = *(_OWORD *)(a2 + 16);
              long long v411 = *(_OWORD *)a2;
              long long v412 = v129;
              long long v130 = *(_OWORD *)(a2 + 48);
              long long v413 = *(_OWORD *)(a2 + 32);
              long long v414 = v130;
              uint64_t v131 = v49;
              uint64_t v132 = v51;
              uint64_t v382 = v57;
              uint64_t v133 = v407;
              uint64_t v134 = v53;
              uint64_t v135 = v405;
              unsigned int v385 = v58;
              int v383 = v59;
              uint64_t v136 = v406;
              sub_1BFF1DB64(v131, v51, v407, v405, v134, v406, v408);
              sub_1BFF429DC(v133, v135, v134, v136, 0);
              uint64_t v384 = v56;
              uint64_t v410 = v55;
              uint64_t v137 = v132;
              uint64_t v381 = sub_1BFDEB94C;
              unsigned int v380 = (uint64_t (*)(void))sub_1C00AB56C;
              sub_1C11493E4(v56, v410, v382, v385, v383, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
              uint64_t v138 = v396;
              uint64_t v139 = v132;
              LOBYTE(v132) = v408;
              sub_1BFF1DB64(v396, v139, v133, v135, v134, v136, v408);
              sub_1BFF429DC(v133, v135, v134, v136, 0);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v140 = v138;
              uint64_t v141 = v137;
              uint64_t v142 = v410;
              uint64_t v143 = v384;
              uint64_t v144 = v133;
              uint64_t v145 = v382;
              uint64_t v146 = v135;
              uint64_t v53 = v134;
              unsigned int v147 = v385;
              uint64_t v148 = v136;
              char v149 = v383;
              sub_1BFF1DB64(v140, v141, v144, v146, v53, v148, v132);
              sub_1C11493E4(v143, v142, v145, v147, v149, v380, v380, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v381);
              sub_1BFDC11A4(v143);
              uint64_t v150 = v409;
              sub_1BFE2F328(v403, (uint64_t)&v411);
              uint64_t v409 = v150;
              if (v150)
              {
                sub_1BFDC11BC(v143);
                unsigned int v317 = v147;
                uint64_t v318 = v143;
                uint64_t v319 = v142;
                uint64_t v320 = v53;
                char v321 = v149;
                uint64_t v322 = v145;
                uint64_t v323 = v145;
                unsigned int v324 = v317;
                sub_1C11493E4(v318, v319, v323, v317, v321, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                sub_1C11493E4(v318, v319, v322, v324, v321, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                goto LABEL_94;
              }
              sub_1BFDC11BC(v143);
              sub_1C11493E4(v143, v142, v145, v147, v149, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              sub_1C11493E4(v143, v142, v145, v147, v149, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
              break;
            case 2:
              goto LABEL_12;
            default:
              goto LABEL_3;
          }
          break;
        case 6u:
          if (v58 >> 6)
          {
            if (v58 >> 6 == 1)
            {
              switch((char)v57)
              {
                case 1:
                  goto LABEL_47;
                case 2:
                  goto LABEL_12;
                default:
                  goto LABEL_53;
              }
            }
            switch(v58 & 0x33333333)
            {
              case 1u:
                if ((~v55 & 0xF000000000000007) == 0) {
                  goto LABEL_12;
                }
                LODWORD(v381) = v58 & 0xF3;
                uint64_t v418 = v55;
                long long v197 = *(_OWORD *)(a2 + 80);
                long long v415 = *(_OWORD *)(a2 + 64);
                long long v416 = v197;
                uint64_t v417 = *(void *)(a2 + 96);
                long long v198 = *(_OWORD *)(a2 + 16);
                long long v411 = *(_OWORD *)a2;
                long long v412 = v198;
                long long v199 = *(_OWORD *)(a2 + 48);
                long long v413 = *(_OWORD *)(a2 + 32);
                long long v414 = v199;
                uint64_t v200 = v56;
                uint64_t v201 = v56;
                uint64_t v384 = v56;
                unsigned int v385 = v58;
                char v202 = v59;
                int v383 = v59;
                unsigned int v380 = (uint64_t (*)(void))sub_1BFDEB94C;
                sub_1C11493E4(v201, v55, v57, v58, v59, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                sub_1C11493E4(v200, v55, v57, v385, v202, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                uint64_t v203 = v396;
                uint64_t v204 = v395;
                uint64_t v382 = v57;
                uint64_t v205 = v406;
                uint64_t v206 = v407;
                uint64_t v410 = v55;
                uint64_t v207 = v53;
                uint64_t v208 = v405;
                sub_1BFF1DB64(v396, v395, v407, v405, v207, v406, v408);
                sub_1BFF429DC(v206, v208, v207, v205, 0);
                sub_1C11493E4(v384, v410, v382, v385, v383, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v380);
                uint64_t v209 = v203;
                LOBYTE(v203) = v408;
                sub_1BFF1DB64(v209, v204, v206, v208, v207, v205, v408);
                sub_1BFF429DC(v206, v208, v207, v205, 0);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v210 = v206;
                uint64_t v211 = v382;
                uint64_t v212 = v208;
                uint64_t v53 = v207;
                uint64_t v213 = v410;
                uint64_t v214 = v205;
                char v215 = v383;
                sub_1BFF1DB64(v396, v204, v210, v212, v53, v214, v203);
                uint64_t v216 = v384;
                sub_1C11493E4(v384, v213, v211, v385, v215, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v380);
                sub_1BFDC11A4(v213);
                uint64_t v217 = v409;
                sub_1BFE2F328(v403, (uint64_t)&v411);
                uint64_t v409 = v217;
                if (v217)
                {
                  sub_1BFDC11BC(v213);
                  uint64_t v331 = v213;
                  uint64_t v320 = v53;
                  char v332 = v215;
                  uint64_t v333 = v211;
                  uint64_t v334 = v211;
                  unsigned int v335 = v385;
                  sub_1C11493E4(v216, v331, v334, v385, v332, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C11493E4(v216, v331, v333, v335, v332, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  unsigned __int8 v336 = v381;
                  sub_1C0223EF4(v216, v331, v333, v381, (uint64_t (*)(void))sub_1C002B840);
                  uint64_t v327 = v216;
                  uint64_t v328 = v331;
                  uint64_t v329 = v333;
                  unsigned __int8 v330 = v336;
LABEL_93:
                  sub_1C0223EF4(v327, v328, v329, v330, (uint64_t (*)(void))sub_1C002B840);
LABEL_94:
                  uint64_t v337 = v406;
                  uint64_t v338 = v407;
                  uint64_t v339 = v405;
                  sub_1BFEC41E8(v407, v405, v320, v406, 0);
                  sub_1BFEC41E8(v338, v339, v320, v337, 0);
                  uint64_t v340 = v396;
                  uint64_t v341 = v395;
                  unsigned __int8 v342 = v408;
                  sub_1BFEC28BC(v396, v395, v338, v339, v320, v337, v408);
                  sub_1BFEC28BC(v340, v341, v338, v339, v320, v337, v342);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v350 = v340;
                  uint64_t v351 = v341;
                  uint64_t v352 = v338;
                  uint64_t v353 = v339;
                  uint64_t v354 = v320;
                  uint64_t v315 = v337;
                  unsigned __int8 v316 = v342;
                  goto LABEL_87;
                }
                sub_1BFDC11BC(v213);
                unsigned int v218 = v385;
                sub_1C11493E4(v216, v213, v211, v385, v215, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                sub_1C11493E4(v216, v213, v211, v218, v215, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                LOBYTE(v218) = (_BYTE)v381;
                sub_1C0223EF4(v216, v213, v211, v381, (uint64_t (*)(void))sub_1C002B840);
                uint64_t v173 = v216;
                uint64_t v174 = v213;
                uint64_t v175 = v211;
                unsigned __int8 v176 = v218;
                break;
              case 2u:
                goto LABEL_12;
              default:
                uint64_t v410 = v55;
                uint64_t v177 = v49;
                uint64_t v178 = v51;
                uint64_t v382 = v57;
                uint64_t v179 = v407;
                uint64_t v180 = v405;
                unsigned int v385 = v58;
                LODWORD(v381) = v58 & 0xF3;
                int v383 = v59;
                uint64_t v181 = v406;
                uint64_t v384 = v56;
                unsigned __int8 v182 = v408;
                sub_1BFF1DB64(v177, v51, v407, v405, v53, v406, v408);
                sub_1BFF429DC(v179, v180, v53, v181, 0);
                uint64_t v183 = v396;
                sub_1BFF1DB64(v396, v178, v179, v180, v53, v181, v182);
                sub_1BFF429DC(v179, v180, v53, v181, 0);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1BFF1DB64(v183, v178, v179, v180, v53, v181, v182);
                unsigned int v380 = (uint64_t (*)(void))sub_1BFDEB9E0;
                uint64_t v184 = v384;
                uint64_t v185 = v410;
                uint64_t v186 = v382;
                LODWORD(v183) = v385;
                LOBYTE(v179) = v383;
                sub_1C11493E4(v384, v410, v382, v385, v383, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                sub_1C11493E4(v184, v185, v186, v183, v179, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v380);
                sub_1C0223EF4(v184, v185, v186, v381, (uint64_t (*)(void))sub_1C002B840);
                goto LABEL_5;
            }
          }
          else
          {
            switch((char)v57)
            {
              case 1:
LABEL_47:
                if ((~v56 & 0xF000000000000007) == 0) {
                  goto LABEL_12;
                }
                LODWORD(v381) = v58 & 0xF3;
                uint64_t v418 = v56;
                long long v151 = *(_OWORD *)(a2 + 80);
                long long v415 = *(_OWORD *)(a2 + 64);
                long long v416 = v151;
                uint64_t v417 = *(void *)(a2 + 96);
                long long v152 = *(_OWORD *)(a2 + 16);
                long long v411 = *(_OWORD *)a2;
                long long v412 = v152;
                long long v153 = *(_OWORD *)(a2 + 48);
                long long v413 = *(_OWORD *)(a2 + 32);
                long long v414 = v153;
                uint64_t v410 = v55;
                uint64_t v154 = v51;
                uint64_t v384 = v56;
                uint64_t v155 = v49;
                unsigned int v385 = v58;
                int v383 = v59;
                unsigned int v380 = (uint64_t (*)(void))sub_1BFDEB94C;
                sub_1C11493E4(v384, v410, v57, v58, v59, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                uint64_t v156 = v49;
                uint64_t v382 = v57;
                uint64_t v157 = v406;
                uint64_t v158 = v407;
                uint64_t v159 = v53;
                uint64_t v160 = v405;
                sub_1BFF1DB64(v156, v154, v407, v405, v159, v406, v408);
                sub_1BFF429DC(v158, v160, v159, v157, 0);
                sub_1C11493E4(v384, v410, v382, v385, v383, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                unsigned __int8 v161 = v408;
                sub_1BFF1DB64(v155, v154, v158, v160, v159, v157, v408);
                sub_1BFF429DC(v158, v160, v159, v157, 0);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v162 = v155;
                uint64_t v163 = v384;
                uint64_t v164 = v154;
                uint64_t v165 = v410;
                uint64_t v166 = v158;
                uint64_t v167 = v382;
                uint64_t v168 = v160;
                uint64_t v53 = v159;
                char v169 = v383;
                uint64_t v170 = v157;
                unsigned int v171 = v385;
                sub_1BFF1DB64(v162, v164, v166, v168, v53, v170, v161);
                sub_1C11493E4(v163, v165, v167, v171, v169, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v380);
                sub_1BFDC11A4(v163);
                uint64_t v172 = v409;
                sub_1BFE2F328(v403, (uint64_t)&v411);
                uint64_t v409 = v172;
                if (v172)
                {
                  sub_1BFDC11BC(v163);
                  unsigned int v325 = v171;
                  uint64_t v326 = v165;
                  uint64_t v320 = v53;
                  sub_1C11493E4(v163, v326, v167, v325, v169, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C11493E4(v163, v326, v167, v325, v169, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  uint64_t v327 = v163;
                  uint64_t v328 = v326;
                  uint64_t v329 = v167;
                  unsigned __int8 v330 = v381;
                  goto LABEL_93;
                }
                sub_1BFDC11BC(v163);
                sub_1C11493E4(v163, v165, v167, v171, v169, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                sub_1C11493E4(v163, v165, v167, v171, v169, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                uint64_t v173 = v163;
                uint64_t v174 = v165;
                uint64_t v175 = v167;
                unsigned __int8 v176 = v381;
                break;
              case 2:
                goto LABEL_12;
              default:
                goto LABEL_53;
            }
          }
          sub_1C0223EF4(v173, v174, v175, v176, (uint64_t (*)(void))sub_1C002B840);
          break;
        default:
          switch((v58 >> 4) & 3)
          {
            case 1u:
LABEL_3:
              uint64_t v410 = v55;
              uint64_t v24 = v49;
              uint64_t v25 = v51;
              uint64_t v382 = v57;
              uint64_t v26 = v407;
              uint64_t v27 = v405;
              unsigned int v385 = v58;
              int v383 = v59;
              uint64_t v28 = v406;
              uint64_t v384 = v56;
              unsigned __int8 v29 = v408;
              sub_1BFF1DB64(v24, v51, v407, v405, v53, v406, v408);
              sub_1BFF429DC(v26, v27, v53, v28, 0);
              uint64_t v30 = v396;
              sub_1BFF1DB64(v396, v25, v26, v27, v53, v28, v29);
              sub_1BFF429DC(v26, v27, v53, v28, 0);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1BFF1DB64(v30, v25, v26, v27, v53, v28, v29);
              unsigned int v31 = sub_1BFDEB9E0;
              uint64_t v32 = v384;
              uint64_t v33 = v410;
              uint64_t v34 = v382;
              unsigned int v35 = v385;
              char v36 = v383;
LABEL_4:
              sub_1C11493E4(v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v31);
              goto LABEL_5;
            case 2u:
              switch((char)v57)
              {
                case 1:
                  if ((~v56 & 0xF000000000000007) == 0) {
                    goto LABEL_12;
                  }
                  uint64_t v418 = v56;
                  long long v261 = *(_OWORD *)(a2 + 80);
                  long long v415 = *(_OWORD *)(a2 + 64);
                  long long v416 = v261;
                  uint64_t v417 = *(void *)(a2 + 96);
                  long long v262 = *(_OWORD *)(a2 + 16);
                  long long v411 = *(_OWORD *)a2;
                  long long v412 = v262;
                  long long v263 = *(_OWORD *)(a2 + 48);
                  long long v413 = *(_OWORD *)(a2 + 32);
                  long long v414 = v263;
                  uint64_t v410 = v55;
                  uint64_t v264 = v51;
                  uint64_t v384 = v56;
                  uint64_t v265 = v49;
                  unsigned int v385 = v58;
                  int v383 = v59;
                  uint64_t v381 = sub_1BFDEB94C;
                  sub_1C11493E4(v384, v410, v57, v58, v59, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                  uint64_t v266 = v49;
                  uint64_t v382 = v57;
                  uint64_t v267 = v406;
                  uint64_t v268 = v407;
                  uint64_t v269 = v53;
                  uint64_t v270 = v405;
                  sub_1BFF1DB64(v266, v264, v407, v405, v269, v406, v408);
                  sub_1BFF429DC(v268, v270, v269, v267, 0);
                  sub_1C11493E4(v384, v410, v382, v385, v383, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                  unsigned __int8 v271 = v408;
                  sub_1BFF1DB64(v265, v264, v268, v270, v269, v267, v408);
                  sub_1BFF429DC(v268, v270, v269, v267, 0);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v272 = v265;
                  uint64_t v273 = v384;
                  uint64_t v274 = v264;
                  uint64_t v254 = v410;
                  uint64_t v275 = v268;
                  uint64_t v252 = v382;
                  uint64_t v276 = v270;
                  uint64_t v53 = v269;
                  unsigned int v258 = v385;
                  uint64_t v277 = v267;
                  char v278 = v383;
                  sub_1BFF1DB64(v272, v274, v275, v276, v53, v277, v271);
                  sub_1C11493E4(v273, v254, v252, v258, v278, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v381);
                  sub_1BFDC11A4(v273);
                  uint64_t v279 = v409;
                  sub_1BFE2F328(v403, (uint64_t)&v411);
                  uint64_t v409 = v279;
                  if (v279)
                  {
                    sub_1BFDC11BC(v273);
                    char v355 = v278;
                    uint64_t v356 = v254;
                    uint64_t v320 = v53;
                    sub_1C11493E4(v273, v356, v252, v258, v355, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                    sub_1C11493E4(v273, v356, v252, v258, v355, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                    sub_1C0224154(v273, v356, v252, v258, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                    goto LABEL_94;
                  }
                  sub_1BFDC11BC(v273);
                  uint64_t v260 = v273;
                  sub_1C11493E4(v273, v254, v252, v258, v278, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C11493E4(v273, v254, v252, v258, v278, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
LABEL_73:
                  uint64_t v280 = v260;
                  uint64_t v281 = v254;
                  uint64_t v282 = v252;
                  unsigned int v283 = v258;
LABEL_74:
                  sub_1C0224154(v280, v281, v282, v283, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                  break;
                case 2:
                  goto LABEL_12;
                default:
                  goto LABEL_53;
              }
              break;
            case 3u:
              if (v58 >> 6)
              {
                if (v58 >> 6 == 1)
                {
                  switch((char)v57)
                  {
                    case 1:
                      goto LABEL_68;
                    case 2:
                      goto LABEL_12;
                    default:
                      goto LABEL_62;
                  }
                }
                switch(v58 & 0xF)
                {
                  case 1u:
                    if ((~v55 & 0xF000000000000007) == 0) {
                      goto LABEL_12;
                    }
                    uint64_t v418 = v55;
                    long long v284 = *(_OWORD *)(a2 + 80);
                    long long v415 = *(_OWORD *)(a2 + 64);
                    long long v416 = v284;
                    uint64_t v417 = *(void *)(a2 + 96);
                    long long v285 = *(_OWORD *)(a2 + 16);
                    long long v411 = *(_OWORD *)a2;
                    long long v412 = v285;
                    long long v286 = *(_OWORD *)(a2 + 48);
                    long long v413 = *(_OWORD *)(a2 + 32);
                    long long v414 = v286;
                    uint64_t v384 = v56;
                    unsigned int v287 = v58;
                    int v383 = v59;
                    sub_1C11493E4(v56, v55, v57, v58, v59, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                    unsigned int v385 = v287;
                    uint64_t v381 = sub_1BFDEB94C;
                    sub_1C11493E4(v56, v55, v57, v287, v383, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                    sub_1C11493E4(v56, v55, v57, v287, v383, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                    uint64_t v288 = v396;
                    uint64_t v289 = v395;
                    uint64_t v382 = v57;
                    uint64_t v290 = v406;
                    uint64_t v291 = v407;
                    uint64_t v410 = v55;
                    uint64_t v292 = v53;
                    uint64_t v293 = v405;
                    sub_1BFF1DB64(v396, v395, v407, v405, v292, v406, v408);
                    sub_1BFF429DC(v291, v293, v292, v290, 0);
                    unsigned int v380 = (uint64_t (*)(void))sub_1C00AB56C;
                    sub_1C11493E4(v384, v410, v382, v385, v383, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v381);
                    uint64_t v294 = v289;
                    uint64_t v295 = v289;
                    LOBYTE(v289) = v408;
                    sub_1BFF1DB64(v288, v294, v291, v293, v292, v290, v408);
                    sub_1BFF429DC(v291, v293, v292, v290, 0);
                    swift_bridgeObjectRetain();
                    unsigned int v296 = v385;
                    swift_bridgeObjectRetain();
                    uint64_t v297 = v295;
                    uint64_t v298 = v384;
                    uint64_t v299 = v291;
                    uint64_t v300 = v382;
                    uint64_t v301 = v293;
                    uint64_t v53 = v292;
                    uint64_t v302 = v410;
                    uint64_t v303 = v290;
                    char v304 = v383;
                    sub_1BFF1DB64(v288, v297, v299, v301, v53, v303, v289);
                    sub_1C11493E4(v298, v302, v300, v296, v304, v380, v380, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v381);
                    sub_1BFDC11A4(v302);
                    uint64_t v305 = v409;
                    sub_1BFE2F328(v403, (uint64_t)&v411);
                    uint64_t v409 = v305;
                    if (v305)
                    {
                      sub_1BFDC11BC(v302);
                      char v366 = v304;
                      uint64_t v367 = v302;
                      uint64_t v359 = v53;
                      unsigned int v368 = v296;
                      sub_1C11493E4(v298, v367, v300, v296, v366, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                      uint64_t v361 = v359;
                      sub_1C11493E4(v298, v367, v300, v368, v366, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                      sub_1C0224154(v298, v367, v300, v368, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                      sub_1C0224154(v298, v367, v300, v368, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                      uint64_t v362 = v298;
                      uint64_t v363 = v367;
                      uint64_t v364 = v300;
                      unsigned int v365 = v368;
                      goto LABEL_98;
                    }
                    sub_1BFDC11BC(v302);
                    sub_1C11493E4(v298, v302, v300, v296, v304, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                    sub_1C11493E4(v298, v302, v300, v296, v304, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                    sub_1C0224154(v298, v302, v300, v296, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                    sub_1C0224154(v298, v302, v300, v296, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                    uint64_t v280 = v298;
                    uint64_t v281 = v302;
                    uint64_t v282 = v300;
                    unsigned int v283 = v296;
                    break;
                  case 2u:
                    goto LABEL_12;
                  default:
                    uint64_t v410 = v55;
                    uint64_t v230 = v49;
                    uint64_t v231 = v51;
                    uint64_t v382 = v57;
                    uint64_t v232 = v407;
                    uint64_t v233 = v405;
                    unsigned int v385 = v58;
                    int v383 = v59;
                    uint64_t v234 = v406;
                    uint64_t v384 = v56;
                    unsigned __int8 v235 = v408;
                    sub_1BFF1DB64(v230, v51, v407, v405, v53, v406, v408);
                    sub_1BFF429DC(v232, v233, v53, v234, 0);
                    uint64_t v236 = v396;
                    sub_1BFF1DB64(v396, v231, v232, v233, v53, v234, v235);
                    sub_1BFF429DC(v232, v233, v53, v234, 0);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    sub_1BFF1DB64(v236, v231, v232, v233, v53, v234, v235);
                    uint64_t v381 = sub_1BFDEB9E0;
                    uint64_t v226 = v384;
                    uint64_t v227 = v410;
                    uint64_t v228 = v382;
                    unsigned int v229 = v385;
                    LOBYTE(v236) = v383;
                    sub_1C11493E4(v384, v410, v382, v385, v383, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                    sub_1C11493E4(v226, v227, v228, v229, v236, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v381);
                    sub_1C0224154(v226, v227, v228, v229, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                    goto LABEL_65;
                }
                goto LABEL_74;
              }
              switch((char)v57)
              {
                case 1:
LABEL_68:
                  if ((~v56 & 0xF000000000000007) == 0) {
                    goto LABEL_12;
                  }
                  uint64_t v418 = v56;
                  long long v237 = *(_OWORD *)(a2 + 80);
                  long long v415 = *(_OWORD *)(a2 + 64);
                  long long v416 = v237;
                  uint64_t v417 = *(void *)(a2 + 96);
                  long long v238 = *(_OWORD *)(a2 + 16);
                  long long v411 = *(_OWORD *)a2;
                  long long v412 = v238;
                  long long v239 = *(_OWORD *)(a2 + 48);
                  long long v413 = *(_OWORD *)(a2 + 32);
                  long long v414 = v239;
                  uint64_t v384 = v56;
                  uint64_t v240 = v56;
                  unsigned int v241 = v58;
                  unsigned int v385 = v58;
                  char v242 = v59;
                  int v383 = v59;
                  uint64_t v381 = sub_1BFDEB94C;
                  sub_1C11493E4(v240, v55, v57, v58, v59, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                  sub_1C11493E4(v384, v55, v57, v241, v242, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                  uint64_t v243 = v396;
                  uint64_t v244 = v395;
                  uint64_t v382 = v57;
                  uint64_t v245 = v406;
                  uint64_t v246 = v407;
                  uint64_t v410 = v55;
                  uint64_t v247 = v53;
                  uint64_t v248 = v405;
                  sub_1BFF1DB64(v396, v395, v407, v405, v247, v406, v408);
                  sub_1BFF429DC(v246, v248, v247, v245, 0);
                  sub_1C11493E4(v384, v410, v382, v385, v383, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v381);
                  uint64_t v249 = v243;
                  LOBYTE(v243) = v408;
                  sub_1BFF1DB64(v249, v244, v246, v248, v247, v245, v408);
                  sub_1BFF429DC(v246, v248, v247, v245, 0);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v250 = v384;
                  uint64_t v251 = v246;
                  uint64_t v252 = v382;
                  uint64_t v253 = v248;
                  uint64_t v53 = v247;
                  uint64_t v254 = v410;
                  uint64_t v255 = v245;
                  char v256 = v383;
                  unsigned __int8 v257 = v243;
                  unsigned int v258 = v385;
                  sub_1BFF1DB64(v396, v395, v251, v253, v53, v255, v257);
                  sub_1C11493E4(v250, v254, v252, v258, v256, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v381);
                  sub_1BFDC11A4(v250);
                  uint64_t v259 = v409;
                  sub_1BFE2F328(v403, (uint64_t)&v411);
                  uint64_t v409 = v259;
                  if (v259)
                  {
                    sub_1BFDC11BC(v250);
                    char v357 = v256;
                    uint64_t v358 = v254;
                    uint64_t v359 = v53;
                    sub_1C11493E4(v250, v358, v252, v258, v357, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                    char v360 = v357;
                    uint64_t v361 = v53;
                    sub_1C11493E4(v250, v358, v252, v258, v360, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                    sub_1C0224154(v250, v358, v252, v258, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                    uint64_t v362 = v250;
                    uint64_t v363 = v358;
                    uint64_t v364 = v252;
                    unsigned int v365 = v258;
LABEL_98:
                    sub_1C0224154(v362, v363, v364, v365, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                    uint64_t v369 = v407;
                    uint64_t v370 = v405;
                    uint64_t v371 = v359;
                    uint64_t v372 = v406;
                    sub_1BFEC41E8(v407, v405, v371, v406, 0);
                    sub_1BFEC41E8(v369, v370, v361, v372, 0);
                    uint64_t v373 = v396;
                    uint64_t v374 = v395;
                    sub_1BFEC28BC(v396, v395, v369, v370, v361, v372, v408);
                    uint64_t v375 = v406;
                    uint64_t v376 = v407;
                    uint64_t v377 = v405;
                    unsigned __int8 v378 = v408;
                    sub_1BFEC28BC(v373, v374, v407, v405, v361, v406, v408);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_1BFEC28BC(v373, v374, v376, v377, v361, v375, v378);
                    goto LABEL_88;
                  }
                  sub_1BFDC11BC(v250);
                  uint64_t v260 = v250;
                  sub_1C11493E4(v250, v254, v252, v258, v256, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C11493E4(v250, v254, v252, v258, v256, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C0224154(v250, v254, v252, v258, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                  break;
                case 2:
                  goto LABEL_12;
                default:
LABEL_62:
                  uint64_t v410 = v55;
                  uint64_t v219 = v49;
                  uint64_t v220 = v51;
                  uint64_t v382 = v57;
                  uint64_t v221 = v407;
                  uint64_t v222 = v405;
                  unsigned int v385 = v58;
                  int v383 = v59;
                  uint64_t v223 = v406;
                  uint64_t v384 = v56;
                  unsigned __int8 v224 = v408;
                  sub_1BFF1DB64(v219, v51, v407, v405, v53, v406, v408);
                  sub_1BFF429DC(v221, v222, v53, v223, 0);
                  uint64_t v225 = v396;
                  sub_1BFF1DB64(v396, v220, v221, v222, v53, v223, v224);
                  sub_1BFF429DC(v221, v222, v53, v223, 0);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1BFF1DB64(v225, v220, v221, v222, v53, v223, v224);
                  uint64_t v381 = sub_1BFDEB9E0;
                  uint64_t v226 = v384;
                  uint64_t v227 = v410;
                  uint64_t v228 = v382;
                  unsigned int v229 = v385;
                  LOBYTE(v225) = v383;
                  sub_1C11493E4(v384, v410, v382, v385, v383, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C11493E4(v226, v227, v228, v229, v225, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v381);
LABEL_65:
                  sub_1C0224154(v226, v227, v228, v229, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                  goto LABEL_5;
              }
              goto LABEL_73;
            default:
              switch((char)v57)
              {
                case 1:
                  if ((~v56 & 0xF000000000000007) == 0) {
                    goto LABEL_12;
                  }
                  uint64_t v418 = v56;
                  long long v108 = *(_OWORD *)(a2 + 80);
                  long long v415 = *(_OWORD *)(a2 + 64);
                  long long v416 = v108;
                  uint64_t v417 = *(void *)(a2 + 96);
                  long long v109 = *(_OWORD *)(a2 + 16);
                  long long v411 = *(_OWORD *)a2;
                  long long v412 = v109;
                  long long v110 = *(_OWORD *)(a2 + 48);
                  long long v413 = *(_OWORD *)(a2 + 32);
                  long long v414 = v110;
                  uint64_t v111 = v55;
                  uint64_t v410 = v55;
                  uint64_t v112 = v51;
                  uint64_t v381 = sub_1BFDEB94C;
                  uint64_t v113 = v56;
                  uint64_t v114 = v49;
                  unsigned int v385 = v58;
                  int v383 = v59;
                  sub_1C11493E4(v113, v111, v57, v58, v59, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
                  uint64_t v115 = v49;
                  uint64_t v116 = v112;
                  uint64_t v117 = v57;
                  uint64_t v382 = v57;
                  uint64_t v118 = v406;
                  uint64_t v119 = v407;
                  uint64_t v120 = v53;
                  uint64_t v121 = v405;
                  sub_1BFF1DB64(v115, v116, v407, v405, v120, v406, v408);
                  sub_1BFF429DC(v119, v121, v120, v118, 0);
                  sub_1C11493E4(v113, v410, v117, v385, v383, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v381);
                  uint64_t v122 = v114;
                  uint64_t v123 = v395;
                  LOBYTE(v114) = v408;
                  sub_1BFF1DB64(v122, v395, v119, v121, v120, v118, v408);
                  sub_1BFF429DC(v119, v121, v120, v118, 0);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  uint64_t v124 = v121;
                  uint64_t v53 = v120;
                  sub_1BFF1DB64(v396, v123, v119, v124, v120, v118, v114);
                  uint64_t v125 = v410;
                  uint64_t v126 = v382;
                  LODWORD(v118) = v385;
                  LOBYTE(v123) = v383;
                  sub_1C11493E4(v113, v410, v382, v385, v383, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))v381);
                  sub_1BFDC11A4(v113);
                  uint64_t v127 = v409;
                  sub_1BFE2F328(v403, (uint64_t)&v411);
                  uint64_t v409 = v127;
                  sub_1BFDC11BC(v113);
                  sub_1C11493E4(v113, v125, v126, v118, v123, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C11493E4(v113, v125, v126, v118, v123, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  sub_1C0224154(v113, v125, v126, v118, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840);
                  if (!v409) {
                    goto LABEL_75;
                  }
                  uint64_t v343 = v406;
                  uint64_t v344 = v407;
                  uint64_t v345 = v53;
                  uint64_t v346 = v405;
                  sub_1BFEC41E8(v407, v405, v345, v406, 0);
                  sub_1BFEC41E8(v344, v346, v345, v343, 0);
                  uint64_t v347 = v396;
                  uint64_t v348 = v395;
                  unsigned __int8 v349 = v408;
                  sub_1BFEC28BC(v396, v395, v344, v346, v345, v343, v408);
                  sub_1BFEC28BC(v347, v348, v344, v346, v345, v343, v349);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v350 = v347;
                  uint64_t v351 = v348;
                  uint64_t v352 = v344;
                  uint64_t v353 = v346;
                  uint64_t v354 = v345;
                  break;
                case 2:
                  goto LABEL_12;
                default:
LABEL_53:
                  uint64_t v410 = v55;
                  uint64_t v187 = v49;
                  uint64_t v188 = v51;
                  uint64_t v382 = v57;
                  uint64_t v189 = v407;
                  uint64_t v190 = v405;
                  unsigned int v385 = v58;
                  int v383 = v59;
                  uint64_t v191 = v406;
                  uint64_t v384 = v56;
                  unsigned __int8 v192 = v408;
                  sub_1BFF1DB64(v187, v51, v407, v405, v53, v406, v408);
                  sub_1BFF429DC(v189, v190, v53, v191, 0);
                  uint64_t v193 = v396;
                  sub_1BFF1DB64(v396, v188, v189, v190, v53, v191, v192);
                  sub_1BFF429DC(v189, v190, v53, v191, 0);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1BFF1DB64(v193, v188, v189, v190, v53, v191, v192);
                  uint64_t v381 = sub_1BFDEB9E0;
                  uint64_t v194 = v384;
                  uint64_t v195 = v410;
                  uint64_t v196 = v382;
                  LODWORD(v189) = v385;
                  LOBYTE(v190) = v383;
                  sub_1C11493E4(v384, v410, v382, v385, v383, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
                  uint64_t v32 = v194;
                  uint64_t v33 = v195;
                  uint64_t v34 = v196;
                  unsigned int v35 = v189;
                  char v36 = v190;
                  unsigned int v31 = v381;
                  goto LABEL_4;
              }
              goto LABEL_86;
          }
          break;
      }
LABEL_75:
      a2 = v393;
LABEL_5:
      uint64_t v37 = v406;
      uint64_t v38 = v407;
      uint64_t v39 = v405;
      sub_1BFEC41E8(v407, v405, v53, v406, 0);
      sub_1BFEC41E8(v38, v39, v53, v37, 0);
LABEL_6:
      uint64_t v40 = v396;
      uint64_t v41 = v395;
      uint64_t v42 = v406;
      uint64_t v43 = v407;
      uint64_t v44 = v53;
      uint64_t v45 = v405;
      unsigned __int8 v46 = v408;
      sub_1BFEC28BC(v396, v395, v407, v405, v44, v406, v408);
      sub_1BFEC28BC(v40, v41, v43, v45, v44, v42, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC28BC(v40, v41, v43, v45, v44, v42, v46);
      uint64_t v21 = v391;
      uint64_t v22 = v390;
      uint64_t v23 = v394;
    }
LABEL_7:
    if (++v23 == v21) {
      goto LABEL_88;
    }
  }
  uint64_t v67 = *(void *)(v49 + 16);
  if (!v67) {
    goto LABEL_7;
  }
  uint64_t v394 = v23;
  uint64_t v68 = v51;
  uint64_t v69 = v49 + ((*(unsigned __int8 *)(v392 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v392 + 80));
  uint64_t v70 = v407;
  uint64_t v397 = v48;
  uint64_t v71 = v405;
  uint64_t v72 = v53;
  uint64_t v73 = v53;
  uint64_t v74 = v406;
  uint64_t v404 = v50;
  unsigned __int8 v75 = v408;
  sub_1BFF1DB64(v49, v51, v407, v405, v72, v406, v408);
  sub_1BFF1DB64(v49, v68, v70, v71, v73, v74, v75);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v396 = v49;
  uint64_t v395 = v68;
  uint64_t v76 = v70;
  a2 = v393;
  uint64_t v77 = v71;
  uint64_t v78 = (uint64_t)v389;
  uint64_t v79 = v73;
  uint64_t v80 = v74;
  uint64_t v53 = v73;
  uint64_t v81 = (uint64_t)v387;
  sub_1BFF1DB64(v49, v68, v76, v77, v79, v80, v75);
  uint64_t v410 = *(void *)(v392 + 72);
  while (2)
  {
    sub_1C1147A28(v69, v78, type metadata accessor for FormatPropertyDefinition);
    sub_1C1147A28(v78, v81, type metadata accessor for FormatPropertyDefinition);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v82 = v398;
        sub_1C114949C(v81, v398, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        if ((~*(void *)(v82 + 72) & 0xF000000000000007) == 0) {
          goto LABEL_20;
        }
        uint64_t v418 = *(void *)(v82 + 72);
        long long v83 = *(_OWORD *)(a2 + 80);
        long long v415 = *(_OWORD *)(a2 + 64);
        long long v416 = v83;
        uint64_t v417 = *(void *)(a2 + 96);
        long long v84 = *(_OWORD *)(a2 + 16);
        long long v411 = *(_OWORD *)a2;
        long long v412 = v84;
        long long v85 = *(_OWORD *)(a2 + 48);
        long long v413 = *(_OWORD *)(a2 + 32);
        long long v414 = v85;
        uint64_t v86 = v409;
        sub_1BFF79540((uint64_t)v403, (uint64_t)&v411);
        uint64_t v409 = v86;
        if (!v86)
        {
LABEL_20:
          sub_1C114971C(v398, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          goto LABEL_16;
        }
        uint64_t v306 = v53;
        uint64_t v307 = &qword_1EB88E9B8;
        uint64_t v308 = &type metadata for FormatColor;
        unsigned __int8 v309 = sub_1C003F2E8;
        uint64_t v310 = &v419;
        goto LABEL_84;
      case 8u:
        uint64_t v87 = v399;
        sub_1C114949C(v81, v399, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        if ((~*(void *)(v87 + 72) & 0xF000000000000007) == 0) {
          goto LABEL_23;
        }
        uint64_t v418 = *(void *)(v87 + 72);
        long long v88 = *(_OWORD *)(a2 + 80);
        long long v415 = *(_OWORD *)(a2 + 64);
        long long v416 = v88;
        uint64_t v417 = *(void *)(a2 + 96);
        long long v89 = *(_OWORD *)(a2 + 16);
        long long v411 = *(_OWORD *)a2;
        long long v412 = v89;
        long long v90 = *(_OWORD *)(a2 + 48);
        long long v413 = *(_OWORD *)(a2 + 32);
        long long v414 = v90;
        uint64_t v91 = v409;
        sub_1BFF5B7F4(v403, (uint64_t)&v411);
        uint64_t v409 = v91;
        if (!v91)
        {
LABEL_23:
          sub_1C114971C(v399, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          goto LABEL_16;
        }
        uint64_t v306 = v53;
        uint64_t v307 = &qword_1EB88E9A0;
        uint64_t v308 = &type metadata for FormatAsyncImageContent;
        unsigned __int8 v309 = sub_1C0036630;
        uint64_t v310 = &v420;
        goto LABEL_84;
      case 9u:
        uint64_t v92 = v400;
        sub_1C114949C(v81, v400, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        if ((~*(void *)(v92 + 72) & 0xF000000000000007) == 0) {
          goto LABEL_26;
        }
        uint64_t v418 = *(void *)(v92 + 72);
        long long v93 = *(_OWORD *)(a2 + 80);
        long long v415 = *(_OWORD *)(a2 + 64);
        long long v416 = v93;
        uint64_t v417 = *(void *)(a2 + 96);
        long long v94 = *(_OWORD *)(a2 + 16);
        long long v411 = *(_OWORD *)a2;
        long long v412 = v94;
        long long v95 = *(_OWORD *)(a2 + 48);
        long long v413 = *(_OWORD *)(a2 + 32);
        long long v414 = v95;
        uint64_t v96 = v409;
        sub_1C05D3050((uint64_t)v403, (uint64_t)&v411);
        uint64_t v409 = v96;
        if (!v96)
        {
LABEL_26:
          sub_1C114971C(v400, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
          goto LABEL_16;
        }
        uint64_t v306 = v53;
        uint64_t v307 = &qword_1EB88E998;
        uint64_t v308 = &type metadata for FormatVideoNodeContent;
        unsigned __int8 v309 = sub_1C00738F0;
        uint64_t v310 = &v421;
        goto LABEL_84;
      case 0xAu:
        uint64_t v97 = v401;
        sub_1C114949C(v81, v401, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        if ((~*(void *)(v97 + 72) & 0xF000000000000007) != 0)
        {
          uint64_t v418 = *(void *)(v97 + 72);
          long long v98 = *(_OWORD *)(a2 + 80);
          long long v415 = *(_OWORD *)(a2 + 64);
          long long v416 = v98;
          uint64_t v417 = *(void *)(a2 + 96);
          long long v99 = *(_OWORD *)(a2 + 16);
          long long v411 = *(_OWORD *)a2;
          long long v412 = v99;
          long long v100 = *(_OWORD *)(a2 + 48);
          long long v413 = *(_OWORD *)(a2 + 32);
          long long v414 = v100;
          uint64_t v101 = v409;
          sub_1BFF79C34(v403, (uint64_t *)&v411);
          uint64_t v409 = v101;
          if (v101)
          {
            uint64_t v306 = v53;
            uint64_t v307 = &qword_1EB88E9B0;
            uint64_t v308 = &type metadata for FormatFont;
            unsigned __int8 v309 = sub_1C0084C58;
            uint64_t v310 = &v422;
LABEL_84:
            sub_1C114971C(*(v310 - 32), v307, (uint64_t (*)(void))v309, (uint64_t)v308, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
            goto LABEL_85;
          }
        }
        sub_1C114971C(v401, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        goto LABEL_16;
      case 0xBu:
        uint64_t v102 = v402;
        sub_1C114949C(v81, v402, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v103 = *(void *)(v102 + 72);
        if (v103 < 0) {
          goto LABEL_33;
        }
        uint64_t v104 = *(void *)(v103 + 16);
        uint64_t v105 = *(void *)(v103 + 24);
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v106 = v105;
        uint64_t v107 = v409;
        sub_1C00389F8((uint64_t)v403, a2, v104, v106);
        uint64_t v409 = v107;
        if (!v107)
        {
          swift_release();
          swift_bridgeObjectRelease();
          a2 = v393;
LABEL_33:
          sub_1C114971C(v402, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
LABEL_16:
          sub_1C1147B04(v78, type metadata accessor for FormatPropertyDefinition);
          v69 += v410;
          if (!--v67) {
            goto LABEL_6;
          }
          continue;
        }
        swift_release();
        swift_bridgeObjectRelease();
        sub_1C114971C(v402, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
        uint64_t v306 = v53;
LABEL_85:
        sub_1C1147B04(v78, type metadata accessor for FormatPropertyDefinition);
        uint64_t v311 = v396;
        uint64_t v312 = v395;
        uint64_t v343 = v406;
        uint64_t v313 = v407;
        uint64_t v314 = v405;
        unsigned __int8 v349 = v408;
        sub_1BFEC28BC(v396, v395, v407, v405, v306, v406, v408);
        sub_1BFEC28BC(v311, v312, v313, v314, v306, v343, v349);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v350 = v311;
        uint64_t v351 = v312;
        uint64_t v352 = v313;
        uint64_t v353 = v314;
        uint64_t v354 = v306;
LABEL_86:
        uint64_t v315 = v343;
        unsigned __int8 v316 = v349;
LABEL_87:
        sub_1BFEC28BC(v350, v351, v352, v353, v354, v315, v316);
LABEL_88:
        swift_bridgeObjectRelease();
        return;
      default:
        sub_1C1147B04(v81, type metadata accessor for FormatPropertyDefinition);
        goto LABEL_16;
    }
  }
}

void sub_1BFF14E68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFF14ED0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFF14F38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t type metadata accessor for FormatPropertyDefinition(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB8782B0);
}

uint64_t sub_1BFF14FC0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v27 - v10;
  swift_beginAccess();
  unint64_t v12 = v3[8];
  *(void *)&long long v29 = v12;
  sub_1BFF35EA4(v12);
  FormatSize.bind(binder:context:)(a1, a2);
  uint64_t result = sub_1BFF322A8(v12);
  if (!v4)
  {
    uint64_t v28 = v11;
    uint64_t v32 = a3;
    swift_beginAccess();
    uint64_t v14 = v3[11];
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v15; ++i)
      {
        unint64_t v17 = *(void *)(v14 + 8 * i + 32);
        *(void *)&long long v29 = v17;
        sub_1BFF32264(v17);
        FormatAdjustment.bind(binder:context:)(a1, a2);
        sub_1BFF31E90(v17);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    uint64_t v18 = v3[12];
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v27 = v18;
      unsigned int v20 = (void *)(v18 + 64);
      do
      {
        uint64_t v21 = *v20;
        long long v29 = *((_OWORD *)v20 - 2);
        long long v30 = *((_OWORD *)v20 - 1);
        uint64_t v31 = v21;
        swift_bridgeObjectRetain();
        swift_retain();
        FormatSourceMapNode.bind(binder:context:)(a1, a2);
        v20 += 5;
        swift_bridgeObjectRelease();
        swift_release();
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease_n();
    }
    uint64_t result = swift_beginAccess();
    uint64_t v22 = v32;
    uint64_t v23 = (uint64_t)v28;
    if (*((unsigned char *)v6 + 128) == 1)
    {
      uint64_t v25 = v6[14];
      uint64_t v24 = v6[15];
      sub_1BFE94AB4(v25, v24, 1);
      uint64_t v26 = sub_1C00B857C(v22);
      sub_1C0EC63F8(v25, v24, v26, 1, v23);
      sub_1C05DDCC0(v23, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      return sub_1BFE94AD4(v25, v24, 1);
    }
  }
  return result;
}

uint64_t FormatSourceMapNode.bind(binder:context:)(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4), uint64_t a2)
{
  sub_1BFF15D34(0, &qword_1EB881428, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v55 - v7;
  int v59 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))type metadata accessor for FormatDebuggerCallStackFrame(0);
  MEMORY[0x1F4188790](v59);
  uint64_t v10 = (void *)((char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *v2;
  uint64_t v12 = v2[1];
  uint64_t v13 = v2[3];
  uint64_t v84 = v2[2];
  uint64_t v14 = v2[4];
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_debugData);
  uint64_t v62 = v3;
  uint64_t v64 = a1;
  uint64_t v61 = v14;
  uint64_t v65 = v13;
  uint64_t v63 = v11;
  uint64_t v56 = v8;
  if (!v15)
  {
    uint64_t v66 = 0;
    uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))a2;
    uint64_t v26 = *((void *)a1 + 2);
    if (v26) {
      goto LABEL_7;
    }
LABEL_11:
    if (v84)
    {
      long long v82 = 0u;
      long long v83 = 0u;
      long long v81 = 0u;
      uint64_t v80 = 0;
      long long v78 = 0u;
      long long v79 = 0u;
      uint64_t v74 = v12;
      uint64_t v75 = v84;
      uint64_t v43 = v11;
      uint64_t v44 = v65;
      uint64_t v45 = v61;
      uint64_t v76 = v65;
      uint64_t v77 = v61;
      uint64_t v68 = 0;
      uint64_t v67 = 0;
      uint64_t v69 = 1;
      long long v70 = 0u;
      long long v71 = 0u;
      long long v72 = 0u;
      uint64_t v73 = 0;
      swift_bridgeObjectRetain_n();
      uint64_t v46 = sub_1C0EC66B4(0, 0, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC870], 0, 0, 0, MEMORY[0x1E4FBC860], (uint64_t *)&v81, (uint64_t)&v78, &v74, (unint64_t *)&v67);
      swift_bridgeObjectRelease();
      sub_1BFF1FA68((uint64_t)&v78, (uint64_t (*)(void))sub_1C0C397C8);
      uint64_t v67 = v43;
      swift_retain();
      uint64_t v47 = v62;
      FormatNode.bind(binder:context:)(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))v46);
      if (v47)
      {
        swift_release();
        uint64_t v48 = *(void *)(v46 + 24);
        uint64_t v67 = v12;
        uint64_t v68 = v84;
        uint64_t v69 = v44;
        *(void *)&long long v70 = v45;
        sub_1C1242AF4(v48, &v67, v47, 0);
        swift_willThrow();

        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
        goto LABEL_19;
      }
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v67 = v11;
    swift_retain();
    FormatNode.bind(binder:context:)(a1, v25);
LABEL_15:
    uint64_t result = swift_release();
    goto LABEL_23;
  }
  uint64_t v58 = (uint64_t)v10;
  uint64_t v16 = v84;
  uint64_t v17 = v13;
  uint64_t v18 = *(void *)(v15 + 16);
  uint64_t v67 = v11;
  uint64_t v66 = sub_1C11523CC();
  uint64_t v19 = v11;
  uint64_t v21 = v20;
  uint64_t v67 = v19;
  char v22 = sub_1C1150A2C();
  uint64_t v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))a2;
  uint64_t v23 = *(void *)(a2 + 24);
  uint64_t v60 = v12;
  uint64_t v67 = v12;
  uint64_t v68 = v16;
  uint64_t v69 = v17;
  *(void *)&long long v70 = v14;
  type metadata accessor for FormatNodeDebugRecord();
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  uint64_t v66 = sub_1C093678C(v66, v21, v22, v23, &v67);
  if (v66)
  {
    swift_beginAccess();
    uint64_t v24 = swift_retain();
    MEMORY[0x1C18C66D0](v24);
    if (*(void *)((*(void *)(v18 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v18 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_1C151EC8C();
    sub_1C151ECEC();
    sub_1C151EBEC();
    swift_endAccess();
  }
  swift_release();
  swift_bridgeObjectRelease();
  a1 = v64;
  uint64_t v12 = v60;
  uint64_t v25 = v57;
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)v58;
  uint64_t v11 = v63;
  uint64_t v26 = *((void *)a1 + 2);
  if (!v26) {
    goto LABEL_11;
  }
LABEL_7:
  if (!v84) {
    goto LABEL_14;
  }
  long long v82 = 0u;
  long long v83 = 0u;
  long long v81 = 0u;
  uint64_t v80 = 0;
  long long v78 = 0u;
  long long v79 = 0u;
  uint64_t v27 = v84;
  uint64_t v74 = v12;
  uint64_t v75 = v84;
  uint64_t v76 = v65;
  uint64_t v28 = v65;
  uint64_t v29 = v11;
  uint64_t v30 = v61;
  uint64_t v77 = v61;
  uint64_t v68 = 0;
  uint64_t v67 = 0;
  uint64_t v69 = 1;
  long long v70 = 0u;
  long long v71 = 0u;
  long long v72 = 0u;
  uint64_t v73 = 0;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))sub_1C0EC66B4(0, 0, MEMORY[0x1E4FBC860], MEMORY[0x1E4FBC870], 0, 0, 0, MEMORY[0x1E4FBC860], (uint64_t *)&v81, (uint64_t)&v78, &v74, (unint64_t *)&v67);
  swift_bridgeObjectRelease();
  sub_1BFF1FA68((uint64_t)&v78, (uint64_t (*)(void))sub_1C0C397C8);
  *(void *)((char *)v10 + *((int *)v59 + 6)) = v31;
  type metadata accessor for FormatDebuggerCallStackFrameContext(0);
  swift_storeEnumTagMultiPayload();
  *uint64_t v10 = v29;
  v10[1] = v12;
  v10[2] = v27;
  v10[3] = v28;
  v10[4] = v30;
  uint64_t v58 = OBJC_IVAR____TtC8NewsFeed14FormatDebugger_lock;
  uint64_t v32 = v29 & 0xFFFFFFFFFFFFFF9;
  swift_retain();
  swift_bridgeObjectRetain();
  int v59 = v31;
  swift_retain();
  sub_1C1517E7C();
  uint64_t v33 = v26 + OBJC_IVAR____TtC8NewsFeed14FormatDebugger_callStack;
  swift_beginAccess();
  sub_1BFF15D34(0, &qword_1EA19CE60, type metadata accessor for FormatDebuggerCallStackFrame, MEMORY[0x1E4FAB048]);
  v55[2] = v34;
  uint64_t v57 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))v33;
  sub_1C1518E1C();
  swift_endAccess();
  sub_1C1517E8C();
  *(void *)&long long v81 = v12;
  *((void *)&v81 + 1) = v27;
  *(void *)&long long v82 = v65;
  *((void *)&v82 + 1) = v30;
  sub_1C1017F38((uint64_t *)&v81, 0, &v67);
  uint64_t v35 = v68;
  if (v68)
  {
    char v36 = (void *)*((void *)&v70 + 1);
    uint64_t v60 = v12;
    uint64_t v37 = v70;
    v55[1] = v32;
    uint64_t v38 = v69;
    uint64_t v39 = v67;
    sub_1C1016BB8(&v67);
    uint64_t v40 = v37;
    uint64_t v12 = v60;
    uint64_t v41 = v36;
    uint64_t v42 = v62;
    sub_1C1242D88(v39, v35, v38, v40, v41);
  }
  else
  {
    uint64_t v42 = v62;
  }
  uint64_t v67 = v63;
  swift_retain();
  uint64_t v50 = v59;
  FormatNode.bind(binder:context:)(v64, v59);
  if (v42)
  {
    swift_release();
    uint64_t v51 = *((void *)v50 + 3);
    uint64_t v67 = v12;
    uint64_t v68 = v84;
    uint64_t v69 = v65;
    *(void *)&long long v70 = v61;
    swift_retain();
    sub_1C1242AF4(v51, &v67, v42, v26);
    swift_release();
    swift_willThrow();

    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t result = sub_1BFF1FA68((uint64_t)v10, type metadata accessor for FormatDebuggerCallStackFrame);
LABEL_19:
    if (!v66) {
      return result;
    }
    if ((*(unsigned char *)(v66 + 96) & 1) == 0) {
      return swift_release();
    }
    goto LABEL_25;
  }
  swift_release();
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v52 = (uint64_t)v56;
  sub_1C1518DFC();
  swift_endAccess();
  sub_1C124317C(v52, &qword_1EB881428, type metadata accessor for FormatDebuggerCallStackFrame);
  sub_1C1517E8C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t result = sub_1BFF1FA68((uint64_t)v10, type metadata accessor for FormatDebuggerCallStackFrame);
LABEL_23:
  if (!v66) {
    return result;
  }
  if (*(unsigned char *)(v66 + 96) == 1)
  {
LABEL_25:
    CFTimeInterval v53 = CACurrentMediaTime();
    uint64_t v54 = v66;
    *(CFTimeInterval *)(v66 + 88) = v53;
    *(unsigned char *)(v54 + 96) = 0;
  }
  return swift_release();
}

void sub_1BFF15CD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF15D34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for FormatDebuggerCallStackFrame(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB882AE8);
}

uint64_t FormatNode.bind(binder:context:)(uint64_t (*a1)(uint64_t a1, uint64_t a2, uint64_t a3, char a4), uint64_t (*a2)(uint64_t a1, uint64_t a2, uint64_t a3, char a4))
{
  uint64_t v4 = *v2;
  switch(((unint64_t)*v2 >> 58) & 0x3C | (*v2 >> 1) & 3)
  {
    case 1uLL:
      swift_retain();
      FormatVBoxNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 2uLL:
      swift_retain();
      FormatHOverlayNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 3uLL:
      swift_retain();
      FormatVOverlayNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 4uLL:
      swift_retain();
      FormatViewNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 5uLL:
      swift_retain();
      FormatTextNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 6uLL:
      swift_retain();
      FormatImageNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 7uLL:
      swift_retain();
      FormatItemNode.bind(binder:context:)((unint64_t)a1, a2);
      return swift_release();
    case 8uLL:
      uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_beginAccess();
      unint64_t v8 = *(void *)(v7 + 32);
      swift_retain();
      sub_1BFF35EA4(v8);
      FormatSize.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      if (v3) {
        goto LABEL_24;
      }
      sub_1BFF322A8(v8);
      swift_beginAccess();
      uint64_t v9 = *(void *)(v7 + 40);
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        return swift_release();
      }
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v10; ++i)
      {
        unint64_t v12 = *(void *)(v9 + 8 * i + 32);
        sub_1BFF32264(v12);
        FormatAdjustment.bind(binder:context:)((uint64_t)a1, (uint64_t)a2);
        sub_1BFF31E90(v12);
      }
      goto LABEL_53;
    case 9uLL:
      swift_retain();
      FormatSnippetNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0xAuLL:
      swift_retain();
      FormatSupplementaryNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0xBuLL:
      swift_retain();
      FormatSwitchNode.bind(binder:context:)((uint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0xCuLL:
      swift_retain();
      FormatSlotNode.bind(binder:context:)((uint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0xDuLL:
      swift_retain();
      FormatAccessibilityNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0xEuLL:
      swift_retain();
      FormatButtonNode.bind(binder:context:)(a1, a2);
      return swift_release();
    case 0xFuLL:
      swift_retain();
      FormatGroupNode.bind(binder:context:)((unint64_t)a1);
      return swift_release();
    case 0x10uLL:
      swift_retain();
      FormatWebEmbedNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x11uLL:
      uint64_t v13 = *(void *)((v4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      unint64_t v8 = *(void *)(v13 + 32);
      swift_retain();
      sub_1BFF35EA4(v8);
      FormatSize.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      if (v3)
      {
LABEL_24:
        sub_1BFF322A8(v8);
        return swift_release();
      }
      sub_1BFF322A8(v8);
      swift_beginAccess();
      uint64_t v19 = *(void *)(v13 + 40);
      uint64_t v20 = *(void *)(v19 + 16);
      if (!v20) {
        return swift_release();
      }
      swift_bridgeObjectRetain_n();
      for (uint64_t j = 0; j != v20; ++j)
      {
        unint64_t v22 = *(void *)(v19 + 8 * j + 32);
        sub_1BFF32264(v22);
        FormatAdjustment.bind(binder:context:)((uint64_t)a1, (uint64_t)a2);
        sub_1BFF31E90(v22);
      }
LABEL_53:
      swift_release();
      return swift_bridgeObjectRelease_n();
    case 0x12uLL:
      swift_retain();
      FormatRepeatNode.bind(binder:context:)((uint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x13uLL:
      swift_retain();
      FormatOptionsNode.bind(binder:context:)((uint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x14uLL:
      swift_retain();
      FormatStateViewNode.bind(binder:context:)((uint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x15uLL:
      swift_retain();
      FormatCustomNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x16uLL:
      swift_retain();
      sub_1C119E208((uint64_t)a2);
      return swift_release();
    case 0x17uLL:
      swift_retain();
      FormatAdMetricsNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x18uLL:
      swift_retain();
      FormatMicaNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x19uLL:
      swift_retain();
      FormatLayeredMediaNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x1AuLL:
      swift_retain();
      FormatVideoNode.bind(binder:context:)((unint64_t)a1, (char *)a2);
      return swift_release();
    case 0x1BuLL:
      swift_retain();
      FormatIssueCoverNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x1CuLL:
      uint64_t v14 = v4 & 0xFFFFFFFFFFFFFF9;
      unint64_t v15 = *(void *)(v14 + 32);
      unint64_t v16 = *(void *)(v14 + 64);
      swift_bridgeObjectRetain();
      sub_1BFF35EA4(v15);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFE6FA30(v16);
      swift_bridgeObjectRetain();
      FormatShareAttributionNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      swift_bridgeObjectRelease();
      sub_1BFF322A8(v15);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BFF0056C(v16);
      return swift_bridgeObjectRelease();
    case 0x1DuLL:
      swift_retain();
      FormatBlockNode.bind(binder:context:)((uint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x1EuLL:
      swift_retain();
      FormatGeometryNode.bind(binder:context:)((uint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x1FuLL:
      swift_retain();
      FormatVideoPlayerNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x20uLL:
      swift_retain();
      FormatProgressViewNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x21uLL:
      swift_retain();
      FormatItemBindingsNode.bind(binder:context:)((uint64_t)a1, a2);
      return swift_release();
    case 0x22uLL:
      swift_retain();
      FormatAuxiliaryNode.bind(binder:context:)((uint64_t)a1);
      return swift_release();
    case 0x23uLL:
      swift_retain();
      uint64_t v18 = sub_1C0F0D73C((uint64_t)a2);
      FormatResetNode.bindChildren(binder:context:)((uint64_t)a1, v18);
      swift_release();
      return swift_release();
    case 0x24uLL:
      swift_retain();
      FormatVariableNode.bind(binder:context:)((uint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x25uLL:
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(a1, a2);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 0x26uLL:
      swift_retain();
      FormatPuzzleEmbedNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    case 0x27uLL:
      swift_retain();
      FormatSponsoredBannerNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
    default:
      swift_retain();
      FormatHBoxNode.bind(binder:context:)((unint64_t)a1, (uint64_t)a2);
      return swift_release();
  }
}

unint64_t FormatSize.bind(binder:context:)(unint64_t result, uint64_t a2)
{
  uint64_t v4 = *v2;
  unint64_t v6 = result;
  switch(((unint64_t)*v2 >> 59) & 0x1E | (*v2 >> 2) & 1)
  {
    case 1uLL:
      uint64_t v10 = v4 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v12 = *(void *)(v10 + 16);
      uint64_t v11 = *(void *)(v10 + 24);
      *(void *)&long long v66 = v12;
      *((void *)&v66 + 1) = v11;
      return FormatPercentFillSizing.bind(binder:context:)(result, a2);
    case 2uLL:
      uint64_t v13 = v4 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v15 = *(void *)(v13 + 16);
      unint64_t v14 = *(void *)(v13 + 24);
      *(void *)&long long v66 = v15;
      sub_1BFF18D70(v15);
      sub_1BFF18D70(v14);
      sub_1BFF18D70(v15);
      FormatDimensionSizingValue.bind(binder:context:)(v6, a2);
      sub_1BFF18DA8(v15);
      if (!v3)
      {
        *(void *)&long long v66 = v14;
        sub_1BFF18D70(v14);
        FormatDimensionSizingValue.bind(binder:context:)(v6, a2);
        sub_1BFF18DA8(v14);
      }
      sub_1BFF18DA8(v15);
      return sub_1BFF18DA8(v14);
    case 3uLL:
      uint64_t v16 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = (unsigned char *)(v16 + 40); ; i += 16)
        {
          if ((*i & 1) == 0)
          {
            uint64_t v19 = *((void *)i - 1);
            *(void *)&long long v66 = v19;
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v6, a2);
            if (v3) {
              goto LABEL_89;
            }
            sub_1BFF49984(v19, 0);
            sub_1BFF49984(v19, 0);
          }
          if (!--v17) {
            return swift_bridgeObjectRelease();
          }
        }
      }
      return result;
    case 4uLL:
      uint64_t v20 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        swift_bridgeObjectRetain();
        for (uint64_t j = (unsigned char *)(v20 + 40); ; j += 16)
        {
          if ((*j & 1) == 0)
          {
            uint64_t v19 = *((void *)j - 1);
            *(void *)&long long v66 = v19;
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v6, a2);
            if (v3) {
              goto LABEL_89;
            }
            sub_1BFF49984(v19, 0);
            sub_1BFF49984(v19, 0);
          }
          if (!--v21) {
            return swift_bridgeObjectRelease();
          }
        }
      }
      return result;
    case 5uLL:
      uint64_t v23 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        swift_bridgeObjectRetain();
        for (k = (unsigned char *)(v23 + 40); ; k += 16)
        {
          if ((*k & 1) == 0)
          {
            uint64_t v19 = *((void *)k - 1);
            *(void *)&long long v66 = v19;
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v6, a2);
            if (v3) {
              goto LABEL_89;
            }
            sub_1BFF49984(v19, 0);
            sub_1BFF49984(v19, 0);
          }
          if (!--v24) {
            return swift_bridgeObjectRelease();
          }
        }
      }
      return result;
    case 6uLL:
      uint64_t v26 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        swift_bridgeObjectRetain();
        for (m = (unsigned char *)(v26 + 40); ; m += 16)
        {
          if ((*m & 1) == 0)
          {
            uint64_t v19 = *((void *)m - 1);
            *(void *)&long long v66 = v19;
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v6, a2);
            if (v3) {
              goto LABEL_89;
            }
            sub_1BFF49984(v19, 0);
            sub_1BFF49984(v19, 0);
          }
          if (!--v27) {
            return swift_bridgeObjectRelease();
          }
        }
      }
      return result;
    case 7uLL:
      uint64_t v29 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        swift_bridgeObjectRetain_n();
        for (n = (unsigned char *)(v29 + 40); ; n += 16)
        {
          if ((*n & 1) == 0)
          {
            uint64_t v32 = *((void *)n - 1);
            *(void *)&long long v66 = v32;
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v6, a2);
            if (v3) {
              goto LABEL_92;
            }
            sub_1BFF49984(v32, 0);
            sub_1BFF49984(v32, 0);
          }
          if (!--v30) {
            return swift_bridgeObjectRelease_n();
          }
        }
      }
      return result;
    case 8uLL:
      uint64_t v33 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v34 = *(void *)(v33 + 16);
      if (v34)
      {
        swift_bridgeObjectRetain_n();
        for (iuint64_t i = (unsigned char *)(v33 + 40); ; ii += 16)
        {
          if ((*ii & 1) == 0)
          {
            uint64_t v32 = *((void *)ii - 1);
            *(void *)&long long v66 = v32;
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v6, a2);
            if (v3) {
              goto LABEL_92;
            }
            sub_1BFF49984(v32, 0);
            sub_1BFF49984(v32, 0);
          }
          if (!--v34) {
            return swift_bridgeObjectRelease_n();
          }
        }
      }
      return result;
    case 9uLL:
      uint64_t v36 = v4 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v37 = *(void *)(v36 + 24);
      if (*(void *)(v36 + 16))
      {
        swift_retain();
        swift_bridgeObjectRetain();
        FormatTextNodeStyle.bind(binder:context:)(v6, a2);
        if (v3)
        {
          swift_bridgeObjectRelease();
          return swift_release();
        }
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      sub_1BFF80048(a2, v37);
      swift_bridgeObjectRelease_n();
      return swift_release();
    case 0xAuLL:
      uint64_t v38 = v4 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v39 = *(void *)(v38 + 16);
      LOBYTE(v38) = *(unsigned char *)(v38 + 24);
      *(void *)&long long v66 = v39;
      BYTE8(v66) = v38;
      return FormatRatio.bind(binder:context:)(result, a2);
    case 0xBuLL:
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
      if (swift_dynamicCast())
      {
        uint64_t v40 = *((void *)&v67 + 1);
        uint64_t v41 = v68;
        __swift_project_boxed_opaque_existential_1(&v66, *((uint64_t *)&v67 + 1));
        (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8))(v6, a2, v40, v41);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
      }
      else
      {
        uint64_t v68 = 0;
        long long v66 = 0u;
        long long v67 = 0u;
        return sub_1BFE4D118((uint64_t)&v66, qword_1EB874940, (unint64_t *)&qword_1EB874938);
      }
    case 0xCuLL:
      uint64_t v42 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v43 = *(void *)(v42 + 16);
      if (!v43) {
        return result;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v44 = (unsigned char *)(v42 + 40);
      while (2)
      {
        if (*v44) {
          goto LABEL_56;
        }
        uint64_t v32 = *((void *)v44 - 1);
        *(void *)&long long v66 = v32;
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v6, a2);
        if (!v3)
        {
          sub_1BFF49984(v32, 0);
          sub_1BFF49984(v32, 0);
LABEL_56:
          v44 += 16;
          if (!--v43) {
            return swift_bridgeObjectRelease_n();
          }
          continue;
        }
        break;
      }
LABEL_92:
      sub_1BFF49984(v32, 0);
      sub_1BFF49984(v32, 0);
      return swift_bridgeObjectRelease_n();
    case 0xDuLL:
      uint64_t v45 = v4 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v46 = *(void *)(v45 + 24);
      LOBYTE(v45) = *(unsigned char *)(v45 + 32);
      *(void *)&long long v66 = v46;
      BYTE8(v66) = v45;
      swift_bridgeObjectRetain();
      FormatRatio.bind(binder:context:)(v6, a2);
      return swift_bridgeObjectRelease();
    case 0xEuLL:
      uint64_t v47 = v4 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v48 = *(void *)(v47 + 24);
      if (v48 < 3) {
        return result;
      }
      uint64_t v49 = *(void *)(v48 + 16);
      if (!v49) {
        return result;
      }
      sub_1BFF58908(*(void *)(v47 + 24));
      swift_bridgeObjectRetain();
      uint64_t v50 = (unsigned char *)(v48 + 40);
      while (2)
      {
        if (*v50) {
          goto LABEL_64;
        }
        *(void *)&long long v66 = *((void *)v50 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v6, a2);
        if (!v3)
        {
          sub_1BFF49984(v66, 0);
          sub_1BFF49984(v66, 0);
LABEL_64:
          v50 += 16;
          if (!--v49) {
            goto LABEL_102;
          }
          continue;
        }
        break;
      }
      sub_1BFF49984(v66, 0);
      sub_1BFF49984(v66, 0);
LABEL_102:
      sub_1BFF58918(v48);
      return sub_1BFF58918(v48);
    case 0xFuLL:
      uint64_t v51 = v4 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v53 = *(void *)(v51 + 16);
      unint64_t v52 = *(void *)(v51 + 24);
      *(void *)&long long v66 = v53;
      sub_1BFF35EA4(v53);
      sub_1C05D88D4(v52);
      sub_1BFF35EA4(v53);
      FormatSize.bind(binder:context:)(v6, a2);
      if (v3)
      {
        sub_1BFF322A8(v53);
      }
      else
      {
        sub_1BFF322A8(v53);
        if ((~v52 & 0xF000000000000007) != 0)
        {
          *(void *)&long long v66 = v52;
          sub_1BFF35EA4(v52);
          FormatSize.bind(binder:context:)(v6, a2);
          sub_1C05D88E8(v52);
        }
      }
      sub_1BFF322A8(v53);
      return sub_1C05D88E8(v52);
    case 0x10uLL:
      uint64_t v54 = v4 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v56 = *(void *)(v54 + 16);
      unint64_t v55 = *(void *)(v54 + 24);
      swift_bridgeObjectRetain();
      sub_1BFF35EA4(v55);
      sub_1BFF77510(v6, a2, v56, v55);
      swift_bridgeObjectRelease();
      return sub_1BFF322A8(v55);
    case 0x11uLL:
      uint64_t v57 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v58 = *(void *)(v57 + 16);
      if (!v58) {
        return result;
      }
      swift_bridgeObjectRetain();
      int v59 = (unsigned char *)(v57 + 40);
      while (2)
      {
        if (*v59) {
          goto LABEL_73;
        }
        uint64_t v19 = *((void *)v59 - 1);
        *(void *)&long long v66 = v19;
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v6, a2);
        if (!v3)
        {
          sub_1BFF49984(v19, 0);
          sub_1BFF49984(v19, 0);
LABEL_73:
          v59 += 16;
          if (!--v58) {
            return swift_bridgeObjectRelease();
          }
          continue;
        }
        goto LABEL_89;
      }
    case 0x12uLL:
      uint64_t v60 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v61 = *(void *)(v60 + 16);
      if (!v61) {
        return result;
      }
      swift_bridgeObjectRetain();
      uint64_t v62 = (unsigned char *)(v60 + 40);
      while (2)
      {
        if (*v62) {
          goto LABEL_79;
        }
        uint64_t v19 = *((void *)v62 - 1);
        *(void *)&long long v66 = v19;
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v6, a2);
        if (!v3)
        {
          sub_1BFF49984(v19, 0);
          sub_1BFF49984(v19, 0);
LABEL_79:
          v62 += 16;
          if (!--v61) {
            return swift_bridgeObjectRelease();
          }
          continue;
        }
        goto LABEL_89;
      }
    case 0x13uLL:
      uint64_t v63 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v64 = *(void *)(v63 + 16);
      if (!v64) {
        return result;
      }
      swift_bridgeObjectRetain();
      uint64_t v65 = (unsigned char *)(v63 + 40);
      break;
    case 0x14uLL:
      long long v66 = *(_OWORD *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      return FormatSizeEquation.bind(binder:context:)(result, a2);
    case 0x15uLL:
    case 0x16uLL:
      return result;
    default:
      uint64_t v7 = *(void *)(v4 + 16);
      uint64_t v8 = *(void *)(v7 + 16);
      if (!v8) {
        return result;
      }
      swift_bridgeObjectRetain();
      uint64_t v9 = (unsigned char *)(v7 + 40);
      do
      {
        if ((*v9 & 1) == 0)
        {
          *(void *)&long long v66 = *((void *)v9 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)(v6, a2);
          sub_1BFF49984(v66, 0);
          sub_1BFF49984(v66, 0);
          if (v3) {
            break;
          }
        }
        v9 += 16;
        --v8;
      }
      while (v8);
      return swift_bridgeObjectRelease();
  }
  while ((*v65 & 1) != 0)
  {
LABEL_85:
    v65 += 16;
    if (!--v64) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v19 = *((void *)v65 - 1);
  *(void *)&long long v66 = v19;
  swift_retain_n();
  FormatFloat.bind(binder:context:)(v6, a2);
  if (!v3)
  {
    sub_1BFF49984(v19, 0);
    sub_1BFF49984(v19, 0);
    goto LABEL_85;
  }
LABEL_89:
  sub_1BFF49984(v19, 0);
  sub_1BFF49984(v19, 0);
  return swift_bridgeObjectRelease();
}

uint64_t FormatSwitchNode.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  unint64_t v5 = v2;
  unint64_t v43 = a2;
  uint64_t v39 = a1;
  uint64_t v6 = sub_1C15191EC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(v5 + 32);
  if (v10 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v11 = result;
    if (result)
    {
LABEL_3:
      unint64_t v30 = v5;
      unint64_t v5 = 0;
      unint64_t v32 = v10 + 32;
      uint64_t v33 = v10 & 0xFFFFFFFFFFFFFF8;
      uint64_t v37 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
      unint64_t v38 = v10 & 0xC000000000000001;
      char v13 = 1;
      unint64_t v35 = v10;
      uint64_t v36 = v11;
      uint64_t v31 = v6;
      uint64_t v34 = v9;
      do
      {
        if (v38)
        {
          uint64_t v14 = MEMORY[0x1C18C7CB0](v5, v10);
          BOOL v15 = __OFADD__(v5++, 1);
          if (v15) {
            goto LABEL_28;
          }
        }
        else
        {
          if (v5 >= *(void *)(v33 + 16))
          {
            __break(1u);
            return result;
          }
          uint64_t v14 = *(void *)(v32 + 8 * v5);
          swift_retain();
          BOOL v15 = __OFADD__(v5++, 1);
          if (v15)
          {
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        *(void *)&long long v40 = *(void *)(v14 + 16);
        swift_retain();
        sub_1BFF17D10(v39, v43, (uint64_t)v9);
        if (v4)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_release();
        }
        swift_release();
        if ((sub_1C15191DC() & 1) == 0)
        {
          *(void *)&long long v40 = *(void *)(v14 + 16);
          swift_retain();
          FormatExpression.bind(binder:context:)(v39, v43);
          swift_release();
          swift_beginAccess();
          uint64_t v16 = *(void *)(v14 + 24);
          uint64_t v17 = *(void *)(v16 + 16);
          if (v17)
          {
            swift_bridgeObjectRetain_n();
            uint64_t v18 = (void *)(v16 + 64);
            do
            {
              uint64_t v19 = *v18;
              long long v40 = *((_OWORD *)v18 - 2);
              long long v41 = *((_OWORD *)v18 - 1);
              uint64_t v42 = v19;
              swift_bridgeObjectRetain();
              swift_retain();
              FormatSourceMapNode.bind(binder:context:)(v39, v43);
              v18 += 5;
              swift_bridgeObjectRelease();
              swift_release();
              --v17;
            }
            while (v17);
            swift_bridgeObjectRelease_n();
            char v13 = 0;
            uint64_t v6 = v31;
          }
          else
          {
            char v13 = 0;
          }
          uint64_t v9 = v34;
          unint64_t v10 = v35;
        }
        uint64_t v7 = sub_1C15191CC();
        swift_release();
        uint64_t result = (*v37)(v9, v6);
        if (v7) {
          return swift_bridgeObjectRelease();
        }
      }
      while (v5 != v36);
      swift_bridgeObjectRelease();
      unint64_t v5 = v30;
      if (*(void *)(v30 + 40)) {
        goto LABEL_31;
      }
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  char v13 = 1;
  if (!*(void *)(v5 + 40))
  {
LABEL_21:
    uint64_t result = swift_beginAccess();
    if (*(unsigned char *)(v5 + 48) & v13)
    {
      swift_beginAccess();
      uint64_t v20 = *(void *)(v5 + 64);
      if (v20)
      {
        uint64_t v21 = *(void *)(v5 + 56);
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA9F4((unint64_t *)&qword_1EB875690, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        uint64_t v23 = v22;
        uint64_t v24 = swift_allocError();
        uint64_t v25 = v39;
        unint64_t *v26 = v5;
        v26[1] = v25;
        v26[2] = v43;
        swift_storeEnumTagMultiPayload();
        *uint64_t v23 = v21;
        v23[1] = v20;
        v23[2] = v24;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
      }
      else
      {
        type metadata accessor for FormatLayoutError();
        sub_1BFFBA9F4((unint64_t *)&qword_1EB875690, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        uint64_t v27 = v39;
        *uint64_t v28 = v5;
        v28[1] = v27;
        v28[2] = v43;
        swift_storeEnumTagMultiPayload();
      }
      swift_retain();
      swift_retain();
      swift_retain();
      return swift_willThrow();
    }
    return result;
  }
LABEL_31:
  swift_retain();
  FormatSwitchNodeDefault.bind(binder:context:)(v39, v43);
  uint64_t result = swift_release();
  if (!v4) {
    return swift_beginAccess();
  }
  return result;
}

uint64_t FormatExpression.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v6 = result;
  switch((unint64_t)*v2 >> 60)
  {
    case 1uLL:
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFFFFLL;
      int v8 = *(unsigned __int16 *)(v7 + 48);
      if ((v8 & 0xFFFF8001) == 0)
      {
        uint64_t v9 = *(void *)(v7 + 40);
        uint64_t v11 = *(void *)(v7 + 16);
        uint64_t v10 = *(void *)(v7 + 24);
        uint64_t v31 = *(void *)(v7 + 32);
        sub_1BFF27F3C(v11, v10, v31, v9, v8);
        sub_1BFF27F28(v31, v9, 0);
        FormatOptionValue.bind(binder:context:)(v6, a2);
        sub_1BFE1D230(v31, v9, 0);
        uint64_t result = sub_1BFE1D244(v11, v10, v31, v9, v8);
      }
      break;
    case 4uLL:
      uint64_t v12 = v4 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v13 = *(void *)(v12 + 80);
      unint64_t v14 = *(void *)(v12 + 88);
      uint64_t v15 = *(void *)(v12 + 96);
      uint64_t v16 = *(void *)(v12 + 104);
      uint64_t v17 = *(void *)(v12 + 112);
      unint64_t v24 = *(void *)(v12 + 16);
      unint64_t v32 = *(void *)(v12 + 24);
      uint64_t v29 = *(void *)(v12 + 40);
      unint64_t v30 = *(void *)(v12 + 32);
      uint64_t v27 = *(void *)(v12 + 56);
      uint64_t v28 = *(void *)(v12 + 48);
      uint64_t v25 = *(void *)(v12 + 72);
      __int16 v26 = *(void *)(v12 + 64);
      sub_1C05D88FC(v24, v32, v30, v29, v28, v27, v26, v25, v13, v14, v15, v16, v17, *(unsigned __int16 *)(v12 + 120) | (*(unsigned __int8 *)(v12 + 122) << 16));
      FormatBindingExpression.bind(binder:context:)(v6, a2);
      uint64_t result = sub_1BFF77374(v24, v32, v30, v29, v28, v27, v26, v25, v13, v14, v15, v16, v17, v23);
      break;
    case 7uLL:
      swift_retain();
      FormatExpression.bind(binder:context:)(v6, a2);
      uint64_t result = swift_release();
      break;
    case 8uLL:
      swift_retain();
      swift_retain_n();
      FormatExpression.bind(binder:context:)(v6, a2);
      if (v3) {
        goto LABEL_14;
      }
      goto LABEL_13;
    case 9uLL:
      swift_retain();
      swift_retain_n();
      FormatExpression.bind(binder:context:)(v6, a2);
      if (!v3)
      {
LABEL_13:
        swift_release();
        swift_retain();
        FormatExpression.bind(binder:context:)(v6, a2);
      }
LABEL_14:
      swift_release();
      uint64_t result = swift_release_n();
      break;
    case 0xAuLL:
      uint64_t result = FormatBoolBinding.bind(binder:context:)(result, a2);
      break;
    case 0xCuLL:
      uint64_t v18 = v4 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v19 = *(void *)(v18 + 32);
      uint64_t v20 = *(void *)(v18 + 40);
      uint64_t v21 = *(void *)(v18 + 48);
      unsigned __int8 v22 = *(unsigned char *)(v18 + 56);
      swift_bridgeObjectRetain();
      sub_1C033D91C(v19, v20, v21, v22);
      sub_1C033D91C(v19, v20, v21, v22);
      FormatFrameExpressionLogic.bind(binder:context:)(v6, a2);
      sub_1C033D994(v19, v20, v21, v22);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C033D994(v19, v20, v21, v22);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF17B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v7 = sub_1C15191EC();
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = v3[1];
  uint64_t v22 = *v3;
  swift_retain();
  sub_1BFF17D10(a1, a2);
  uint64_t result = swift_release();
  if (!v4)
  {
    uint64_t v19 = v7;
    uint64_t v15 = v21;
    uint64_t v22 = v13;
    swift_retain();
    sub_1BFF17D10(a1, a2);
    swift_release();
    sub_1C15191AC();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v17 = v19;
    v16(v9, v19);
    return ((uint64_t (*)(char *, uint64_t))v16)(v12, v17);
  }
  return result;
}

void sub_1BFF17D10(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = sub_1C15191EC();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v3;
  switch((unint64_t)*v3 >> 60)
  {
    case 1uLL:
      uint64_t v14 = v13 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = *(void *)(v14 + 24);
      uint64_t v17 = *(void *)(v14 + 32);
      uint64_t v18 = *(void *)(v14 + 40);
      LODWORD(v79) = *(unsigned __int16 *)(v14 + 48);
      unint64_t v65 = v15;
      *(void *)&long long v66 = v16;
      *((void *)&v66 + 1) = v17;
      uint64_t v67 = v18;
      LOWORD(v68) = v79;
      sub_1BFF27F3C(v15, v16, v17, v18, v79);
      sub_1BFF25744(a2, a3);
      sub_1BFE1D244(v15, v16, v17, v18, v79);
      return;
    case 2uLL:
      uint64_t v19 = v13 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v20 = *(void *)(v19 + 16);
      LOBYTE(v19) = *(unsigned char *)(v19 + 24);
      unint64_t v65 = v20;
      LOBYTE(v66) = v19;
      sub_1BFFB4848(a1, a2);
      return;
    case 3uLL:
      uint64_t v21 = v13 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v22 = *(void *)(v21 + 40);
      uint64_t v23 = *(void *)(v21 + 48);
      unint64_t v65 = *(void *)(v21 + 16);
      long long v66 = *(_OWORD *)(v21 + 24);
      uint64_t v67 = v22;
      uint64_t v68 = v23;
      sub_1BFF71E88(a1, a2);
      return;
    case 4uLL:
      uint64_t v24 = v13 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v26 = *(void *)(v24 + 16);
      unint64_t v25 = *(void *)(v24 + 24);
      unint64_t v27 = *(void *)(v24 + 32);
      uint64_t v28 = *(void *)(v24 + 40);
      uint64_t v29 = *(void *)(v24 + 48);
      uint64_t v30 = *(void *)(v24 + 56);
      uint64_t v31 = *(void *)(v24 + 64);
      uint64_t v32 = *(void *)(v24 + 72);
      uint64_t v33 = *(void *)(v24 + 80);
      unint64_t v34 = *(void *)(v24 + 88);
      uint64_t v35 = *(void *)(v24 + 96);
      uint64_t v36 = *(void *)(v24 + 104);
      uint64_t v37 = *(void *)(v24 + 112);
      int v38 = *(unsigned __int8 *)(v24 + 122);
      LODWORD(v24) = *(unsigned __int16 *)(v24 + 120);
      HIDWORD(v56) = v24 | (v38 << 16);
      unint64_t v65 = v26;
      *(void *)&long long v66 = v25;
      unint64_t v57 = v26;
      unint64_t v79 = v25;
      uint64_t v63 = v28;
      unint64_t v64 = v27;
      *((void *)&v66 + 1) = v27;
      uint64_t v67 = v28;
      uint64_t v61 = v30;
      uint64_t v62 = v29;
      uint64_t v68 = v29;
      uint64_t v69 = v30;
      uint64_t v59 = v32;
      uint64_t v60 = v31;
      uint64_t v70 = v31;
      uint64_t v71 = v32;
      uint64_t v58 = v33;
      uint64_t v72 = v33;
      unint64_t v73 = v34;
      uint64_t v74 = v35;
      uint64_t v75 = v36;
      uint64_t v76 = v37;
      char v78 = v38;
      __int16 v77 = v24;
      sub_1C05D88FC(v26, v25, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, HIDWORD(v56));
      sub_1BFF18254(a1, a2, a3);
      sub_1BFF77374(v57, v79, v64, v63, v62, v61, v60, v59, v58, v34, v35, v36, v37, HIDWORD(v56));
      return;
    case 5uLL:
      uint64_t v39 = v13 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v41 = *(void *)(v39 + 16);
      uint64_t v40 = *(void *)(v39 + 24);
      unint64_t v65 = v41;
      *(void *)&long long v66 = v40;
      sub_1BFF420A0();
      return;
    case 6uLL:
      uint64_t v42 = v13 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v44 = *(void *)(v42 + 16);
      uint64_t v43 = *(void *)(v42 + 24);
      unint64_t v65 = v44;
      *(void *)&long long v66 = v43;
      sub_1BFF5F6CC(a3);
      return;
    case 7uLL:
      unint64_t v65 = *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      sub_1BFF17D10(a1, a2);
      if (!v4)
      {
        sub_1C151919C();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      }
      swift_release();
      return;
    case 8uLL:
      uint64_t v45 = v13 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v47 = *(void *)(v45 + 16);
      uint64_t v46 = *(void *)(v45 + 24);
      unint64_t v65 = v47;
      *(void *)&long long v66 = v46;
      swift_retain();
      swift_retain();
      sub_1BFF17B40(a1, a2, a3);
      goto LABEL_14;
    case 9uLL:
      uint64_t v48 = v13 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v50 = *(void *)(v48 + 16);
      uint64_t v49 = *(void *)(v48 + 24);
      unint64_t v65 = v50;
      *(void *)&long long v66 = v49;
      swift_retain();
      swift_retain();
      sub_1BFF427EC(a1, a2, a3);
LABEL_14:
      swift_release();
      swift_release();
      return;
    case 0xAuLL:
      sub_1BFF18DE0(a2, *(void *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x10), *(_WORD *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x18));
      if (!v4) {
        goto LABEL_22;
      }
      sub_1C151918C();

      break;
    case 0xBuLL:
      LOBYTE(v65) = *(unsigned char *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v51 = (void *)sub_1C15176CC();
      sub_1C0F1493C();

      goto LABEL_22;
    case 0xDuLL:
      uint64_t v52 = v13 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v65 = *(void *)(v52 + 16);
      long long v66 = *(_OWORD *)(v52 + 24);
      sub_1C0020028(a1);
      return;
    case 0xEuLL:
      if (*(void *)(*(void *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_blocks) + 16))
      {
        uint64_t v53 = v13 & 0xFFFFFFFFFFFFFFFLL;
        uint64_t v54 = *(void *)(v53 + 16);
        uint64_t v55 = *(void *)(v53 + 24);
        swift_bridgeObjectRetain();
        sub_1BFEF2D8C(v54, v55);
        swift_bridgeObjectRelease();
      }
LABEL_22:
      sub_1C15191FC();
      break;
    default:
      (*(void (**)(uint64_t, void, uint64_t, __n128))(v9 + 104))(a3, *MEMORY[0x1E4FAB0A0], v8, v10);
      break;
  }
}

void sub_1BFF18254(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5 = v4;
  uint64_t v88 = a2;
  uint64_t v89 = a3;
  sub_1BFEE9E74(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v77 - v8;
  sub_1BFEE9E74(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v77 - v11;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = *(void *)v3;
  uint64_t v17 = *(void *)(v3 + 8);
  unint64_t v20 = *(void *)(v3 + 16);
  uint64_t v19 = *(void *)(v3 + 24);
  uint64_t v21 = *(void *)(v3 + 32);
  uint64_t v22 = *(void *)(v3 + 40);
  unint64_t v23 = *(void *)(v3 + 48);
  uint64_t v24 = *(void *)(v3 + 56);
  uint64_t v25 = *(void *)(v3 + 64);
  unint64_t v26 = *(void *)(v3 + 72);
  uint64_t v27 = *(void *)(v3 + 80);
  uint64_t v28 = *(void *)(v3 + 88);
  LODWORD(v15) = *(unsigned __int8 *)(v3 + 106);
  unsigned int v29 = *(unsigned __int16 *)(v3 + 104);
  unsigned int v30 = v29 | (v15 << 16);
  uint64_t v31 = (v15 >> 2) & 4 | (v29 >> 14);
  uint64_t v32 = *(void *)(v3 + 96);
  switch(v31)
  {
    case 1:
      uint64_t v35 = *(void *)(v3 + 96);
      unint64_t v85 = *(void *)(v3 + 72);
      uint64_t v86 = v28;
      uint64_t v83 = v27;
      uint64_t v84 = v25;
      uint64_t v87 = v24;
      LODWORD(v79) = v30 & 0xFFEF3FFF;
      unint64_t v36 = v23 >> 8;
      unint64_t v98 = v18;
      uint64_t v99 = v17;
      unint64_t v100 = v20;
      uint64_t v101 = v19;
      uint64_t v102 = v21;
      uint64_t v103 = v22;
      __int16 v104 = v23;
      uint64_t v82 = v17;
      unint64_t v81 = v20;
      uint64_t v80 = v19;
      uint64_t v37 = v21;
      uint64_t v38 = v22;
      char v39 = v23;
      sub_1BFF2A99C(v18, v17, v20, v19, v21, v22, v23, SBYTE1(v23));
      uint64_t v40 = sub_1BFF45CF8(v88, 0);
      if (v5)
      {

        uint64_t v77 = 0;
        unint64_t v42 = 0xE000000000000000;
        uint64_t v43 = v35;
      }
      else
      {
        unint64_t v42 = v41;
        uint64_t v43 = v35;
        uint64_t v77 = v40;
      }
      uint64_t v78 = v43;
      sub_1BFF0084C(v18, v82, v81, v80, v37, v38, v39, v36);
      uint64_t v57 = v86;
      uint64_t v56 = v87;
      uint64_t v58 = v84;
      unint64_t v59 = v85;
      uint64_t v90 = v87;
      uint64_t v91 = v84;
      uint64_t v60 = v83;
      unint64_t v92 = v85;
      uint64_t v93 = v83;
      uint64_t v94 = v86;
      uint64_t v95 = v43;
      unsigned int v61 = v79;
      char v97 = BYTE2(v79);
      __int16 v96 = v79;
      sub_1BFF2B090(v87, v84, v85, v83, v86, v43, v79);
      sub_1C10C023C(v88, v77, v42);
      swift_bridgeObjectRelease();
      sub_1BFF00C44(v56, v58, v59, v60, v57, v78, v61);
      goto LABEL_23;
    case 2:
      sub_1BFF18DE0(v88, *(void *)v3, v17);
      if (v5) {
        goto LABEL_18;
      }
LABEL_23:
      sub_1C15191FC();
      break;
    case 3:
      __int16 v105 = v18 & 0x101;
      sub_1C0033790(a1, v88);
      return;
    case 4:
      LOBYTE(v105) = v18 & 1;
      sub_1C00195A8(a1, v88);
      return;
    case 5:
      LODWORD(v77) = v30;
      uint64_t v78 = v32;
      unint64_t v81 = v21;
      uint64_t v86 = v28;
      uint64_t v82 = v22;
      uint64_t v83 = v27;
      unint64_t v79 = v23;
      uint64_t v84 = v25;
      unint64_t v85 = v26;
      uint64_t v87 = v24;
      unint64_t v44 = v17;
      unint64_t v45 = v20;
      unint64_t v46 = v19;
      sub_1BFE86E48(v18, v17, v20, v19);
      sub_1C003E0A8(v88, v18, v44, v45, v46, (uint64_t)v16);
      if (v5)
      {
        sub_1BFF77374(v18, v44, v45, v46, v81, v82, v79, v87, v84, v85, v83, v86, v78, v77);
LABEL_18:
        sub_1C151918C();
      }
      else
      {
        uint64_t v88 = v46 >> 8;
        sub_1BFF77374(v18, v44, v45, v46, v81, v82, v79, v87, v84, v85, v83, v86, v78, v77);
        LOBYTE(v105) = v88;
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v12, v16, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
        sub_1C001CAEC((uint64_t)v12);
        sub_1BFE547D4((uint64_t)v12, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        sub_1C15191FC();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      }
      break;
    case 6:
      LODWORD(v77) = v30;
      uint64_t v47 = v32;
      uint64_t v86 = v28;
      uint64_t v83 = v27;
      unint64_t v85 = v26;
      uint64_t v84 = v25;
      unint64_t v48 = v17;
      unint64_t v49 = v20;
      uint64_t v80 = v19;
      unint64_t v81 = v21;
      uint64_t v82 = v22;
      unint64_t v79 = v23;
      uint64_t v87 = v24;
      sub_1C05D88FC(v18, v17, v20, v19, v21, v22, v23, v24, v25, v26, v27, v28, v32, v30);
      sub_1BFF58F10(v18);
      uint64_t v50 = v88;
      sub_1C0019B88(v88, v18, (uint64_t)v9);
      sub_1BFF07CD8(v18);
      if (v5)
      {
        sub_1C151918C();
      }
      else
      {
        sub_1BFF8401C(v48, v49);
        sub_1C00197D0((uint64_t)v9, v50, v48, v49);
        sub_1C00197B8(v48, v49);
        sub_1C15191FC();
        sub_1BFE547D4((uint64_t)v9, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      }
      unsigned int v76 = v77;
      uint64_t v74 = v47;
      uint64_t v73 = v86;
      uint64_t v72 = v83;
      unint64_t v71 = v85;
      uint64_t v70 = v84;
      unint64_t v62 = v18;
      unint64_t v63 = v48;
      unint64_t v64 = v49;
      goto LABEL_22;
    case 7:
      uint64_t v51 = *(void *)(v3 + 96);
      uint64_t v80 = *(void *)(v3 + 24);
      unint64_t v81 = v21;
      uint64_t v86 = v28;
      uint64_t v82 = v22;
      uint64_t v83 = v27;
      unint64_t v79 = v23;
      uint64_t v84 = v25;
      unint64_t v85 = v26;
      uint64_t v87 = v24;
      unint64_t v52 = v17;
      unint64_t v53 = v20;
      sub_1C05D8AD4(v17);
      uint64_t v54 = v88;
      double v55 = sub_1C1018F7C(v88, v18);
      if (v5)
      {
        sub_1C151918C();

        unsigned int v76 = v30;
        uint64_t v74 = v51;
        uint64_t v73 = v86;
        uint64_t v72 = v83;
        unint64_t v71 = v85;
        uint64_t v70 = v84;
        unint64_t v62 = v18;
        unint64_t v63 = v52;
        unint64_t v64 = v53;
LABEL_22:
        sub_1BFF77374(v62, v63, v64, v80, v81, v82, v79, v87, v70, v71, v72, v73, v74, v76);
      }
      else
      {
        uint64_t v65 = *(void *)&v55;
        sub_1C05D8AD4(v52);
        sub_1C13BCB04(v65, 0, v54, v52);
        LODWORD(v77) = v30;
        uint64_t v78 = v51;
        uint64_t v75 = v51;
        uint64_t v66 = v83;
        unint64_t v67 = v85;
        uint64_t v68 = v84;
        __int16 v69 = v79;
        sub_1BFF77374(v18, v52, v53, v80, v81, v82, v79, v87, v84, v85, v83, v86, v75, v30);
        sub_1C15191FC();
        sub_1BFF77374(v18, v52, v53, v80, v81, v82, v69, v87, v68, v67, v66, v86, v78, v77);
      }
      break;
    default:
      uint64_t v33 = *MEMORY[0x1E4FAB0A0];
      uint64_t v34 = sub_1C15191EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v89, v33, v34);
      return;
  }
}

unint64_t sub_1BFF18D70(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFF18DA8(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF18DE0(uint64_t a1, uint64_t a2, unsigned __int16 a3)
{
  return sub_1BFF2B70C(a1, a2, a3, &OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack) & 1;
}

uint64_t FormatSnippetNode.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  unint64_t v79 = a1;
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v77 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v66 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v66 - v13;
  *(void *)&v83[8] = type metadata accessor for FormatNodeBinderContext();
  *(void *)&v83[16] = &protocol witness table for FormatNodeBinderContext;
  *(void *)&long long v82 = a2;
  swift_retain();
  uint64_t v15 = sub_1BFF19B5C(&v82);
  if (v3) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
  }
  uint64_t v17 = v15;
  uint64_t v75 = a2;
  __int16 v69 = v8;
  unint64_t v81 = v14;
  uint64_t v87 = v6;
  unint64_t v71 = v11;
  uint64_t v80 = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
  swift_beginAccess();
  uint64_t v18 = v4[3];
  uint64_t v72 = v4[2];
  uint64_t v70 = (uint64_t *)(v17 + 72);
  swift_beginAccess();
  uint64_t v76 = v17;
  uint64_t v19 = *(void *)(v17 + 72);
  int64_t v20 = *(void *)(v19 + 16);
  uint64_t v21 = v77;
  uint64_t v73 = v18;
  uint64_t v74 = v4;
  if (v20)
  {
    *(void *)&long long v82 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF9524C(0, v20, 0);
    uint64_t v22 = v19 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v78 = *(void *)(v21 + 72);
    uint64_t v24 = (uint64_t)v81;
    uint64_t v23 = v82;
    do
    {
      sub_1C0FFCED4(v22, v24, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v25 = swift_allocBox();
      sub_1C0FFCE6C(v24, v26, (uint64_t (*)(void))type metadata accessor for FormatOption);
      *(void *)&long long v82 = v23;
      unint64_t v28 = *(void *)(v23 + 16);
      unint64_t v27 = *(void *)(v23 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1BFF9524C(v27 > 1, v28 + 1, 1);
        uint64_t v23 = v82;
      }
      *(void *)(v23 + 16) = v28 + 1;
      *(void *)(v23 + 8 * v28 + 32) = v25 | 0xA000000000000004;
      v22 += v78;
      --v20;
      uint64_t v24 = (uint64_t)v81;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v21 = v77;
    uint64_t v4 = v74;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = MEMORY[0x1E4FBC860];
    uint64_t v24 = (uint64_t)v81;
  }
  unint64_t v67 = v4 + 11;
  swift_beginAccess();
  uint64_t v29 = v4[11];
  int64_t v30 = *(void *)(v29 + 16);
  uint64_t v31 = MEMORY[0x1E4FBC860];
  if (v30)
  {
    *(void *)&long long v82 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF9524C(0, v30, 0);
    uint64_t v31 = v82;
    uint64_t v32 = v21;
    uint64_t v33 = *(unsigned __int8 *)(v21 + 80);
    uint64_t v68 = v29;
    uint64_t v34 = v29 + ((v33 + 32) & ~v33);
    uint64_t v78 = *(void *)(v32 + 72);
    do
    {
      sub_1C0FFCED4(v34, v24, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v35 = swift_allocBox();
      uint64_t v36 = v24;
      uint64_t v37 = v35;
      sub_1C0FFCE6C(v36, v38, (uint64_t (*)(void))type metadata accessor for FormatOption);
      *(void *)&long long v82 = v31;
      unint64_t v40 = *(void *)(v31 + 16);
      unint64_t v39 = *(void *)(v31 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_1BFF9524C(v39 > 1, v40 + 1, 1);
        uint64_t v31 = v82;
      }
      *(void *)(v31 + 16) = v40 + 1;
      *(void *)(v31 + 8 * v40 + 32) = v37 | 0x5000000000000004;
      v34 += v78;
      --v30;
      uint64_t v24 = (uint64_t)v81;
    }
    while (v30);
    swift_bridgeObjectRelease();
  }
  *(void *)&long long v82 = v23;
  sub_1BFF1B81C(v31);
  uint64_t v41 = v82;
  uint64_t v42 = v76;
  swift_beginAccess();
  uint64_t v43 = *(void *)(v42 + 80);
  unint64_t v44 = v74;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v45 = swift_bridgeObjectRetain();
  uint64_t v46 = sub_1BFEF3988(v45, v43);
  swift_beginAccess();
  unint64_t v47 = v44[12];
  memset(v86, 0, 48);
  memset(v85, 0, 40);
  memset(v84, 0, sizeof(v84));
  long long v82 = 0uLL;
  *(void *)uint64_t v83 = 1;
  memset(&v83[8], 0, 56);
  swift_bridgeObjectRetain();
  unint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char))sub_1C0EC66B4(v72, v73, v41, v46, 0, 0, 0, v47, v86, (uint64_t)v85, v84, (unint64_t *)&v82);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1FA0C((uint64_t)v85, qword_1EB873870, (void (*)(uint64_t))sub_1BFFFCF34);
  swift_beginAccess();
  uint64_t v49 = *(void *)(v42 + 64);
  uint64_t v50 = *(void *)(v49 + 16);
  if (v50)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v51 = (void *)(v49 + 64);
    while (1)
    {
      uint64_t v52 = *v51;
      long long v82 = *((_OWORD *)v51 - 2);
      *(_OWORD *)uint64_t v83 = *((_OWORD *)v51 - 1);
      *(void *)&v83[16] = v52;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v53 = v80;
      FormatSourceMapNode.bind(binder:context:)(v79, v48);
      uint64_t v80 = v53;
      if (v53) {
        break;
      }
      v51 += 5;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v50)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_21;
      }
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
LABEL_21:
    uint64_t v54 = (uint64_t)v71;
    uint64_t v55 = *(void *)(*v70 + 16);
    uint64_t v56 = v80;
    uint64_t v57 = v77;
    if (v55)
    {
      uint64_t v58 = *v70 + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
      uint64_t v59 = *(void *)(v77 + 72);
      uint64_t v87 = *v70;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_1C0FFCED4(v58, v54, (uint64_t (*)(void))type metadata accessor for FormatOption);
        *(void *)&long long v82 = *(void *)(v54 + 16);
        swift_retain();
        FormatOptionValue.bind(binder:context:)(v79, (uint64_t)v48);
        if (v56) {
          break;
        }
        swift_release();
        sub_1BFF0D624(v54, (uint64_t (*)(void))type metadata accessor for FormatOption);
        v58 += v59;
        if (!--v55)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v57 = v77;
          goto LABEL_26;
        }
      }
      swift_release();
      sub_1BFF0D624(v54, (uint64_t (*)(void))type metadata accessor for FormatOption);
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_26:
      uint64_t v60 = v76;
      swift_beginAccess();
      uint64_t v61 = *(void *)(v60 + 88);
      swift_bridgeObjectRetain();
      sub_1BFF0DFA4(v79, v48, v61);
      uint64_t v62 = (uint64_t)v69;
      if (v56)
      {
        swift_release();
        swift_release();
        return swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v63 = *(void *)(*v67 + 16);
        if (v63)
        {
          uint64_t v64 = *v67 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
          uint64_t v65 = *(void *)(v57 + 72);
          uint64_t v87 = *v67;
          swift_bridgeObjectRetain_n();
          do
          {
            sub_1C0FFCED4(v64, v62, (uint64_t (*)(void))type metadata accessor for FormatOption);
            v85[0] = *(void *)(v62 + 16);
            swift_retain();
            FormatOptionValue.bind(binder:context:)(v79, (uint64_t)v48);
            swift_release();
            sub_1BFF0D624(v62, (uint64_t (*)(void))type metadata accessor for FormatOption);
            v64 += v65;
            --v63;
          }
          while (v63);
          swift_release();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_release();
        }
        return swift_release();
      }
    }
  }
}

void sub_1BFF19690(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF196F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFF19758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255) {
    return sub_1C0E74704();
  }
  return result;
}

uint64_t sub_1BFF19770(uint64_t a1)
{
  sub_1BFEE7E48(0, qword_1EB873870, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BFF197F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFF1985C(uint64_t a1, uint64_t a2)
{
  sub_1BFEE7E48(0, qword_1EB873870, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BFF198EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1BFC845BC(255, (unint64_t *)&qword_1EA1974E0);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t type metadata accessor for FormatNodeBinderContext()
{
  uint64_t result = qword_1EB87B038;
  if (!qword_1EB87B038) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FormatSnippetNode.bindChildren(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = *(void *)(v2 + 88);
  uint64_t v11 = *(void *)(result + 16);
  if (v11)
  {
    uint64_t v12 = result + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v13 = *(void *)(v7 + 72);
    v14[0] = *(void *)(v2 + 88);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BFF83CC4(v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v14[5] = *((void *)v9 + 2);
      swift_retain();
      FormatOptionValue.bind(binder:context:)(a1, a2);
      if (v3) {
        break;
      }
      swift_release();
      sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v12 += v13;
      if (!--v11) {
        return swift_bridgeObjectRelease_n();
      }
    }
    swift_release();
    sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1BFF19B5C(void *a1)
{
  uint64_t v2 = v1;
  sub_1BFF1FCAC(0, &qword_1EB8870F0, sub_1BFF1D9F4);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v23[-v5];
  sub_1BFF1D9F4(0);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)&v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets;
  swift_beginAccess();
  uint64_t v15 = *(void *)(v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  if (*(void *)(v15 + 16))
  {
    uint64_t v16 = *(void *)(v2 + 40);
    uint64_t v17 = *(void *)(v2 + 32);
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1BFEF2D8C(v17, v16);
    if (v19)
    {
      sub_1C0FFCED4(*(void *)(v15 + 56) + *(void *)(v9 + 72) * v18, (uint64_t)v6, (uint64_t (*)(void))sub_1BFF1D9F4);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v6, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v6, 1, 1, v8);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_1BFF1FA0C((uint64_t)v6, &qword_1EB8870F0, sub_1BFF1D9F4);
    uint64_t v20 = type metadata accessor for FormatLayoutError();
    sub_1C0FFCE24((unint64_t *)&qword_1EB875690, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    *uint64_t v21 = v2;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_willThrow();
  }
  else
  {
    sub_1C0FFCE6C((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF1D9F4);
    uint64_t v20 = *v11;
    swift_retain();
    sub_1BFF0D624((uint64_t)v11, (uint64_t (*)(void))sub_1BFF1D9F4);
  }
  return v20;
}

uint64_t sub_1BFF19EFC(uint64_t a1)
{
  sub_1BFF1D9F4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFF19F58(uint64_t a1, uint64_t a2)
{
  sub_1BFF1D9F4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFF19FBC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GroupLayoutContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFF1A018(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v78 = a4;
  uint64_t v6 = v5;
  uint64_t v7 = v4;
  uint64_t v73 = a1;
  uint64_t v76 = type metadata accessor for FormatOption();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v84 = (uint64_t)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12A7FB8(0, &qword_1EB8870F0, (uint64_t (*)(uint64_t))sub_1BFF1D9F4, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v69 - v12;
  sub_1BFF1D9F4(0);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v77 = (void *)((char *)v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v74 = a2;
  uint64_t v18 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets;
  swift_beginAccess();
  uint64_t v19 = *(void *)(v18 + 8);
  swift_beginAccess();
  uint64_t v20 = *(void *)(v19 + 16);
  unint64_t v79 = v7;
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v13, 1, 1, v15);
LABEL_7:
    sub_1C12AD324((uint64_t)v13, &qword_1EB8870F0, (uint64_t (*)(uint64_t))sub_1BFF1D9F4);
    type metadata accessor for FormatLayoutError();
    sub_1BFF30570((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    *unint64_t v27 = v79;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    return swift_willThrow();
  }
  uint64_t v72 = a3;
  uint64_t v21 = v7[5];
  uint64_t v22 = v7[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v23 = sub_1BFEF2D8C(v22, v21);
  if (v24)
  {
    sub_1BFF1B214(*(void *)(v19 + 56) + *(void *)(v16 + 72) * v23, (uint64_t)v13, (uint64_t (*)(void))sub_1BFF1D9F4);
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v25 = 1;
  }
  uint64_t v26 = v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v13, v25, 1, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1) {
    goto LABEL_7;
  }
  uint64_t v29 = v77;
  sub_1BFF23AA4((uint64_t)v13, (uint64_t)v77, (uint64_t (*)(void))sub_1BFF1D9F4);
  int64_t v30 = v79;
  swift_beginAccess();
  uint64_t v31 = (void *)v30[2];
  uint64_t v32 = v30[3];
  swift_bridgeObjectRetain();
  sub_1BFF1DD20(v31, v32);
  swift_bridgeObjectRelease();
  uint64_t v33 = (void *)v30[2];
  uint64_t v34 = v30[3];
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_1BFF1E298(v33, v34);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = *v29;
  swift_beginAccess();
  uint64_t v74 = v35;
  uint64_t v36 = *(void *)(v35 + 72);
  int64_t v37 = *(void *)(v36 + 16);
  uint64_t v38 = MEMORY[0x1E4FBC860];
  if (v37)
  {
    uint64_t v81 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF9524C(0, v37, 0);
    uint64_t v38 = v81;
    unint64_t v39 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
    uint64_t v70 = v36;
    uint64_t v40 = v36 + v39;
    uint64_t v41 = *(void *)(v75 + 72);
    do
    {
      uint64_t v42 = v84;
      sub_1BFF1B214(v40, v84, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v43 = swift_allocBox();
      sub_1BFF23AA4(v42, v44, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v81 = v38;
      unint64_t v46 = *(void *)(v38 + 16);
      unint64_t v45 = *(void *)(v38 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_1BFF9524C(v45 > 1, v46 + 1, 1);
        uint64_t v38 = v81;
      }
      *(void *)(v38 + 16) = v46 + 1;
      *(void *)(v38 + 8 * v46 + 32) = v43 | 0xA000000000000004;
      v40 += v41;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease();
    uint64_t v26 = v78;
    int64_t v30 = v79;
  }
  swift_beginAccess();
  uint64_t v47 = v30[11];
  int64_t v48 = *(void *)(v47 + 16);
  uint64_t v49 = MEMORY[0x1E4FBC860];
  if (v48)
  {
    uint64_t v70 = v6;
    uint64_t v80 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF9524C(0, v48, 0);
    uint64_t v49 = v80;
    unint64_t v50 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
    v69[1] = v47;
    uint64_t v51 = v47 + v50;
    uint64_t v52 = *(void *)(v75 + 72);
    do
    {
      uint64_t v53 = v84;
      sub_1BFF1B214(v51, v84, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v54 = swift_allocBox();
      sub_1BFF23AA4(v53, v55, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v80 = v49;
      unint64_t v57 = *(void *)(v49 + 16);
      unint64_t v56 = *(void *)(v49 + 24);
      if (v57 >= v56 >> 1)
      {
        sub_1BFF9524C(v56 > 1, v57 + 1, 1);
        uint64_t v49 = v80;
      }
      *(void *)(v49 + 16) = v57 + 1;
      *(void *)(v49 + 8 * v57 + 32) = v54 | 0x5000000000000004;
      v51 += v52;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    uint64_t v6 = v70;
    uint64_t v26 = v78;
  }
  uint64_t v80 = v38;
  sub_1BFF1B81C(v49);
  sub_1BFF20000(v80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v58 = swift_bridgeObjectRetain();
  sub_1BFF1B2E4(v58, 0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t v59 = swift_bridgeObjectRetain();
  uint64_t v60 = sub_1BFF205C0(v59);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v61 = v74;
  swift_beginAccess();
  uint64_t v62 = *(void *)(v61 + 64);
  uint64_t v63 = *(void *)(v62 + 16);
  if (v63)
  {
    swift_bridgeObjectRetain();
    uint64_t v64 = 32;
    uint64_t v65 = v72;
    uint64_t v66 = v73;
    while (1)
    {
      long long v67 = *(_OWORD *)(v62 + v64);
      long long v68 = *(_OWORD *)(v62 + v64 + 16);
      uint64_t v83 = *(void *)(v62 + v64 + 32);
      v82[0] = v67;
      v82[1] = v68;
      sub_1BFF1BDBC((uint64_t)v82);
      v26(v66, v60, v65);
      if (v6) {
        break;
      }
      sub_1BFF1BD7C((uint64_t)v82);
      v64 += 40;
      if (!--v63)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BFF1BA48((uint64_t)v77, (uint64_t (*)(void))sub_1BFF1D9F4);
    return sub_1BFF1BD7C((uint64_t)v82);
  }
  else
  {
LABEL_25:
    swift_release();
    return sub_1BFF1BA48((uint64_t)v77, (uint64_t (*)(void))sub_1BFF1D9F4);
  }
}

uint64_t sub_1BFF1A90C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(sub_1C151928C() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = *(void *)(v8 + 64);
  if (v9) {
    unsigned int v12 = v9 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v9 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  if (v13 <= v7) {
    unsigned int v14 = v7;
  }
  else {
    unsigned int v14 = v13;
  }
  if (v9) {
    uint64_t v15 = 7;
  }
  else {
    uint64_t v15 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t result = v10 | 7;
  uint64_t v17 = (v10 | 7) + *(void *)(v6 + 64);
  uint64_t v18 = v10 + 16;
  uint64_t v19 = v11 + v10;
  if (v14 >= a2)
  {
LABEL_34:
    if (v7 >= v13)
    {
      uint64_t v29 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
      return v29(a1, v7, v5);
    }
    else
    {
      unint64_t v27 = (v18 + (((unint64_t)a1 + v17) & ~result)) & ~v10;
      if (v9 < 0x7FFFFFFF)
      {
        unint64_t v30 = (v19 + ((v19 + v27) & ~v10)) & ~v10;
        if (v12 == v13)
        {
          unsigned int v31 = (*(uint64_t (**)(unint64_t))(v8 + 48))(v30);
          if (v31 >= 2) {
            return v31 - 1;
          }
          else {
            return 0;
          }
        }
        else
        {
          if (!v9) {
            ++v11;
          }
          unint64_t v32 = *(void *)((v30 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
          if (v32 >= 0xFFFFFFFF) {
            LODWORD(v32) = -1;
          }
          return (v32 + 1);
        }
      }
      else
      {
        unint64_t v28 = *(uint64_t (**)(unint64_t))(v8 + 48);
        return v28(v27);
      }
    }
  }
  else
  {
    unint64_t v20 = (v17 & ~result)
        + ((((((((v15 + v11 + ((v19 + ((v19 + (v18 & ~v10)) & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    if ((v20 & 0xFFFFFFF8) != 0) {
      unsigned int v21 = 2;
    }
    else {
      unsigned int v21 = a2 - v14 + 1;
    }
    if (v21 >= 0x10000) {
      unsigned int v22 = 4;
    }
    else {
      unsigned int v22 = 2;
    }
    if (v21 < 0x100) {
      unsigned int v22 = 1;
    }
    if (v21 >= 2) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    switch(v23)
    {
      case 1:
        int v24 = *((unsigned __int8 *)a1 + v20);
        if (!*((unsigned char *)a1 + v20)) {
          goto LABEL_34;
        }
        goto LABEL_31;
      case 2:
        int v24 = *(unsigned __int16 *)((char *)a1 + v20);
        if (!*(_WORD *)((char *)a1 + v20)) {
          goto LABEL_34;
        }
        goto LABEL_31;
      case 3:
        __break(1u);
        return result;
      case 4:
        int v24 = *(_DWORD *)((char *)a1 + v20);
        if (!v24) {
          goto LABEL_34;
        }
LABEL_31:
        int v25 = v24 - 1;
        if ((v20 & 0xFFFFFFF8) != 0)
        {
          int v25 = 0;
          int v26 = *a1;
        }
        else
        {
          int v26 = 0;
        }
        uint64_t result = v14 + (v26 | v25) + 1;
        break;
      default:
        goto LABEL_34;
    }
  }
  return result;
}

void sub_1BFF1AC18(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v39 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  int v10 = 0;
  uint64_t v11 = *(void *)(sub_1C151928C() - 8);
  unsigned int v12 = *(_DWORD *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = *(void *)(v11 + 64);
  if (v12) {
    unsigned int v15 = v12 - 1;
  }
  else {
    unsigned int v15 = 0;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v11 + 84);
  }
  if (v16 <= v9) {
    unsigned int v17 = v9;
  }
  else {
    unsigned int v17 = v16;
  }
  uint64_t v18 = (v13 | 7) + *(void *)(v8 + 64);
  uint64_t v19 = v13 + 16;
  uint64_t v20 = v14 + v13;
  uint64_t v21 = (v14 + v13 + ((v14 + v13 + ((v13 + 16) & ~v13)) & ~v13)) & ~v13;
  if (v12) {
    uint64_t v22 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v22 = v14 + 1;
  }
  int v23 = v22 + v21;
  size_t v24 = (v18 & ~(v13 | 7))
      + ((((((((v22 + v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v17 < a3)
  {
    if ((v18 & ~(v13 | 7))
       + ((((((((v22 + v21 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == -8)
      unsigned int v25 = a3 - v17 + 1;
    else {
      unsigned int v25 = 2;
    }
    if (v25 >= 0x10000) {
      int v26 = 4;
    }
    else {
      int v26 = 2;
    }
    if (v25 < 0x100) {
      int v26 = 1;
    }
    if (v25 >= 2) {
      int v10 = v26;
    }
    else {
      int v10 = 0;
    }
  }
  if (a2 <= v17)
  {
    uint64_t v29 = ~(v13 | 7);
    uint64_t v30 = ~v13;
    switch(v10)
    {
      case 1:
        *((unsigned char *)a1 + v24) = 0;
        if (a2) {
          goto LABEL_40;
        }
        return;
      case 2:
        *(_WORD *)((char *)a1 + v24) = 0;
        if (a2) {
          goto LABEL_40;
        }
        return;
      case 3:
LABEL_61:
        __break(1u);
        return;
      case 4:
        *(_DWORD *)((char *)a1 + v24) = 0;
        goto LABEL_39;
      default:
LABEL_39:
        if (!a2) {
          return;
        }
LABEL_40:
        if (v9 >= v16)
        {
          uint64_t v34 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v39 + 56);
          v34(a1, a2, v9, v7);
        }
        else
        {
          unsigned int v31 = (_DWORD *)(((unint64_t)a1 + v18) & v29);
          if (v16 >= a2)
          {
            unint64_t v35 = ((unint64_t)v31 + v19) & v30;
            if (v12 < 0x7FFFFFFF)
            {
              unint64_t v35 = (v20 + ((v20 + v35) & v30)) & v30;
              if (v15 != v16)
              {
                if ((a2 & 0x80000000) != 0) {
                  uint64_t v38 = a2 ^ 0x80000000;
                }
                else {
                  uint64_t v38 = (a2 - 1);
                }
                *(void *)((v35 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) = v38;
                return;
              }
              uint64_t v37 = (a2 + 1);
              uint64_t v36 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
            }
            else
            {
              uint64_t v36 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
              uint64_t v37 = a2;
            }
            v36(v35, v37);
          }
          else
          {
            unsigned int v32 = (((((((v23 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8;
            if (v32 != -8)
            {
              int v33 = ~v16 + a2;
              bzero(v31, v32 + 8);
              _DWORD *v31 = v33;
            }
          }
        }
        break;
    }
  }
  else
  {
    if (v24) {
      int v27 = 1;
    }
    else {
      int v27 = a2 - v17;
    }
    if (v24)
    {
      int v28 = ~v17 + a2;
      bzero(a1, v24);
      *a1 = v28;
    }
    switch(v10)
    {
      case 1:
        *((unsigned char *)a1 + v24) = v27;
        break;
      case 2:
        *(_WORD *)((char *)a1 + v24) = v27;
        break;
      case 3:
        goto LABEL_61;
      case 4:
        *(_DWORD *)((char *)a1 + v24) = v27;
        break;
      default:
        return;
    }
  }
}

uint64_t sub_1BFF1AFA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1B00C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1B074(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1B0DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1B144(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1B1AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1B214(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1B27C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1B2E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16) && (a2 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v10 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  if ((sub_1BFF20AE8(v10, a1) & 1) == 0)
  {
    if ((a2 & 1) == 0)
    {
      uint64_t v45 = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = sub_1BFEF3988(a1, v10);
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v45 = v6;
    swift_bridgeObjectRetain();
LABEL_9:
    sub_1BFF1ECB0((uint64_t)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    char v11 = *((unsigned char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    char v12 = *((unsigned char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    uint64_t v13 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    uint64_t v37 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    uint64_t v42 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
    uint64_t v41 = *(void **)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
    uint64_t v40 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
    uint64_t v39 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
    uint64_t v38 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
    v58[0] = v11;
    v58[1] = v12;
    uint64_t v59 = v13;
    long long v36 = *(_OWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    long long v60 = v36;
    uint64_t v61 = v37;
    uint64_t v62 = v42;
    uint64_t v63 = v41;
    uint64_t v64 = v40;
    uint64_t v65 = v39;
    uint64_t v66 = v38;
    uint64_t v51 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
    uint64_t v50 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    long long v14 = *(_OWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
    long long v15 = *(_OWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
    long long v16 = *(_OWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
    v67[2] = *(_OWORD *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
    v67[3] = v16;
    v67[0] = v14;
    v67[1] = v15;
    uint64_t v49 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
    uint64_t v48 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
    sub_1BFF1F7AC((uint64_t)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v57, qword_1EB873870, MEMORY[0x1E4FBB718]);
    uint64_t v17 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
    uint64_t v47 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    uint64_t v46 = v17;
    uint64_t v18 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
    uint64_t v33 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
    uint64_t v19 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
    uint64_t v20 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    uint64_t v21 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
    uint64_t v22 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
    *(void *)&long long v52 = v18;
    *((void *)&v52 + 1) = v33;
    uint64_t v53 = v19;
    uint64_t v54 = v20;
    uint64_t v55 = v21;
    uint64_t v56 = v22;
    uint64_t v34 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
    uint64_t v23 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    uint64_t v44 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    uint64_t v35 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
    *(void *)(swift_allocObject() + 16) = a1;
    uint64_t v43 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E730(v42, v41);
    swift_retain();
    swift_retain();
    sub_1BFF1E79C((uint64_t)v67);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v18, v33);
    uint64_t v24 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v25 = v34;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1C1517EEC();
    swift_release();
    uint64_t v28 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    uint64_t v27 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    uint64_t v30 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
    uint64_t v29 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1C0DAFA8C((uint64_t)v43, v58, v51, v50, v67, a1, v49, v48, (uint64_t)v57, v47, v46, &v52, v25, v44, v24, v26, v28, v27, v30,
             v29);
  }
  if (a2) {
    goto LABEL_7;
  }
LABEL_5:
  swift_retain();
  return (uint64_t)v3;
}

uint64_t sub_1BFF1B81C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1BFF1FFCC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[v9 + 4];
  if (a1 + 32 < v10 + 8 * v8 && v10 < a1 + 32 + 8 * v8) {
    goto LABEL_24;
  }
  sub_1BFF9544C();
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFF1B988(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1B9E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1BA48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1BAA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for GroupLayoutBindingContext()
{
  uint64_t result = qword_1EB8785C0;
  if (!qword_1EB8785C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFF1BB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1BFF271F4(a3, a2, a4);
  if (v10)
  {
    uint64_t v11 = v10;
    sub_1C151745C();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      for (uint64_t i = 32; ; i += 40)
      {
        long long v14 = *(_OWORD *)(v11 + i);
        long long v15 = *(_OWORD *)(v11 + i + 16);
        uint64_t v26 = *(void *)(v11 + i + 32);
        v25[0] = v14;
        v25[1] = v15;
        sub_1BFF1BDBC((uint64_t)v25);
        sub_1BFF1BDFC(a1, a4, a5);
        if (v5) {
          break;
        }
        sub_1BFF1BD7C((uint64_t)v25);
        if (!--v12) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      return sub_1BFF1BD7C((uint64_t)v25);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_unownedRetainStrong();
    swift_beginAccess();
    char v17 = *(unsigned char *)(a3 + 48);
    uint64_t result = swift_release();
    if (v17)
    {
      swift_unownedRetainStrong();
      swift_beginAccess();
      uint64_t v19 = *(void *)(a3 + 56);
      uint64_t v18 = *(void *)(a3 + 64);
      swift_bridgeObjectRetain();
      swift_release();
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA9F4((unint64_t *)&qword_1EB875690, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v21 = v20;
      if (v18)
      {
        uint64_t v22 = swift_allocError();
        uint64_t v24 = v23;
        swift_unownedRetainStrong();
        *uint64_t v24 = a3;
        swift_storeEnumTagMultiPayload();
        *uint64_t v21 = v19;
        v21[1] = v18;
        v21[2] = v22;
      }
      else
      {
        swift_unownedRetainStrong();
        *uint64_t v21 = a3;
      }
      swift_storeEnumTagMultiPayload();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1BFF1BD7C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFF1BDBC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFF1BDFC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v29[4] = a1;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) + 16);
  if (v6)
  {
    uint64_t v8 = *(void *)(v6 + 24);
    sub_1C12A7D78(v3, (uint64_t)v31);
    sub_1C12A7D78((uint64_t)v31, (uint64_t)v29);
    uint64_t v9 = sub_1C11523CC();
    uint64_t v11 = v10;
    sub_1C12A7D78((uint64_t)v31, (uint64_t)v29);
    char v12 = sub_1C1150A2C();
    uint64_t v13 = *(uint64_t *)((char *)a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    sub_1BFF8874C(v4 + 8, (uint64_t)v30, &qword_1EA1ADB40, (uint64_t)&type metadata for FormatSourceMap);
    sub_1BFF8874C((uint64_t)v30, (uint64_t)v29, &qword_1EA1ADB40, (uint64_t)&type metadata for FormatSourceMap);
    type metadata accessor for FormatNodeDebugRecord();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1BFF59A8C((uint64_t)v30);
    swift_bridgeObjectRetain();
    sub_1BFF59A8C((uint64_t)v30);
    swift_retain();
    swift_retain();
    uint64_t v14 = sub_1C093678C(v9, v11, v12, v13, v29);
    if (v14)
    {
      swift_beginAccess();
      uint64_t v15 = swift_retain();
      MEMORY[0x1C18C66D0](v15);
      if (*(void *)((*(void *)(v8 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v8 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        sub_1C151EC8C();
      sub_1C151ECEC();
      sub_1C151EBEC();
      swift_endAccess();
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BFF5E6C8((uint64_t)v30);
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v16 = *(void *)(a3 + 80);
  uint64_t v17 = *(void *)(v4 + 8);
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v20 = *(void *)(v4 + 24);
  uint64_t v19 = *(void *)(v4 + 32);
  if (v16)
  {
    if (v18)
    {
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = a2;
      *(void *)(v21 + 24) = v17;
      *(void *)(v21 + 32) = v18;
      *(void *)(v21 + 40) = v20;
      *(void *)(v21 + 48) = v19;
      long long v22 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(v21 + 56) = *(_OWORD *)v4;
      *(_OWORD *)(v21 + 72) = v22;
      *(void *)(v21 + 88) = *(void *)(v4 + 32);
      *(void *)(v21 + 96) = v16;
      *(void *)(v21 + 104) = a3;
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_1BFF1BDBC(v4);
      sub_1BFF1D63C();
      sub_1BFF1D6F8();
      swift_retain();
      sub_1C15172FC();
      swift_bridgeObjectRelease();
      swift_release_n();
      goto LABEL_14;
    }
  }
  else if (v18)
  {
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a2;
    *(void *)(v23 + 24) = v17;
    *(void *)(v23 + 32) = v18;
    *(void *)(v23 + 40) = v20;
    *(void *)(v23 + 48) = v19;
    long long v24 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v23 + 56) = *(_OWORD *)v4;
    *(_OWORD *)(v23 + 72) = v24;
    *(void *)(v23 + 88) = *(void *)(v4 + 32);
    *(void *)(v23 + 96) = a3;
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_1BFF1BDBC(v4);
    sub_1BFF1D63C();
    sub_1BFF1D6F8();
    swift_retain();
    sub_1C15172FC();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  unint64_t v25 = *(void *)v4;
  swift_retain();
  sub_1BFF1C1F0(a1, a2, (char *)a3, v25);
LABEL_14:
  uint64_t result = swift_release();
  if (v14)
  {
    if (*(unsigned char *)(v14 + 96) == 1)
    {
      *(CFTimeInterval *)(v14 + 88) = CACurrentMediaTime();
      *(unsigned char *)(v14 + 96) = 0;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFF1C1F0(uint64_t a1, uint64_t *a2, char *a3, unint64_t a4)
{
  switch((a4 >> 58) & 0x3C | (a4 >> 1) & 3)
  {
    case 1uLL:
      swift_retain();
      uint64_t v8 = (void (*)(uint64_t, uint64_t *, void, uint64_t *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))MEMORY[0x1E4FAB508];
      goto LABEL_4;
    case 2uLL:
      swift_retain();
      uint64_t v9 = (void (*)(uint64_t, uint64_t, void, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t))MEMORY[0x1E4FAB510];
      goto LABEL_7;
    case 3uLL:
      swift_retain();
      uint64_t v9 = (void (*)(uint64_t, uint64_t, void, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t))MEMORY[0x1E4FAB518];
LABEL_7:
      sub_1BFF486EC(a1, a2, (uint64_t)a3, (uint64_t (*)(void, __n128))sub_1BFF1D63C, sub_1BFF1D6F8, (uint64_t)sub_1C12AD4B8, v9);
      return swift_release();
    case 4uLL:
      swift_retain();
      sub_1BFF4ACFC(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25650, (void (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8);
      return swift_release();
    case 5uLL:
      swift_retain();
      sub_1BFF437A4(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25678, (void (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8);
      return swift_release();
    case 6uLL:
      swift_retain();
      sub_1BFF44304(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C256A0, (void (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8);
      return swift_release();
    case 7uLL:
      swift_retain();
      sub_1BFFF3894(a1, (uint64_t)a2, (uint64_t)a3, (unint64_t)sub_1C12A8490, (uint64_t)&unk_1F1C256C8, (uint64_t (*)(void))sub_1BFF1D63C, sub_1BFF1D6F8, (uint64_t)sub_1C12A84AC, (uint64_t)&unk_1F1C256F0, (unint64_t)sub_1C12AD470);
      return swift_release();
    case 8uLL:
      swift_retain();
      sub_1BFF2F96C(a1, a2, (void (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8);
      return swift_release();
    case 9uLL:
      swift_retain();
      sub_1BFF1A018(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF1BDFC);
      return swift_release();
    case 0xAuLL:
      swift_retain();
      sub_1BFFF2840(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)sub_1BFC5CB0C, (uint64_t)&unk_1F1C25718, (uint64_t (*)(void))sub_1BFF1D63C, sub_1BFF1D6F8, (uint64_t)sub_1C12AD394);
      return swift_release();
    case 0xBuLL:
    case 0x1EuLL:
      uint64_t v26 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v27 = *(void *)(v26 + 16);
      uint64_t v28 = *(void *)(v26 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF303E0(v27, v28);
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_unownedRetain();
      swift_release();
      uint64_t v29 = (void *)swift_allocObject();
      v29[2] = v26;
      v29[3] = a2;
      v29[4] = a3;
      sub_1BFF1D63C();
      sub_1BFF1D6F8();
      swift_retain();
      swift_retain();
      goto LABEL_34;
    case 0xCuLL:
      swift_retain();
      sub_1BFFC002C(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF1BDFC);
      return swift_release();
    case 0xDuLL:
      uint64_t v10 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 16);
      uint64_t v12 = *(void *)(v10 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1BFF303E0(v11, v12);
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_unownedRetain();
      swift_unownedRetain();
      swift_bridgeObjectRetain();
      swift_unownedRelease();
      swift_unownedRelease();
      swift_unownedRetain();
      swift_release();
      uint64_t v16 = (void *)swift_allocObject();
      v16[2] = v10;
      v16[3] = a2;
      v16[4] = v13;
      v16[5] = v15;
      v16[6] = a3;
      sub_1BFF1D63C();
      sub_1BFF1D6F8();
      swift_retain();
      swift_retain();
      goto LABEL_34;
    case 0xEuLL:
      swift_retain();
      sub_1BFF7C308(a1, a2, (uint64_t)a3, (uint64_t)&unk_1F1C25740, (uint64_t *)sub_1BFF1D63C, (uint64_t)sub_1BFF1D6F8, (uint64_t)sub_1BFC37370, (uint64_t)sub_1BFDA01C4, (uint64_t)&unk_1F1C25768, (uint64_t)sub_1C12AD488, (uint64_t)sub_1BFDA01C4, (char *)sub_1BFCDE4EC);
      return swift_release();
    case 0xFuLL:
      swift_retain();
      sub_1BFF54F6C(a1, a2, (uint64_t)a3, (uint64_t)sub_1BFDA01F0, (void (*)(char *, uint64_t))&unk_1F1C25790, (uint64_t (*)(void))sub_1BFF1D63C, sub_1BFF1D6F8, (uint64_t)sub_1C12AD3AC, (uint64_t)sub_1C12A86F8);
      return swift_release();
    case 0x10uLL:
      swift_retain();
      sub_1C129CA64(a1, (uint64_t)a2, a3, (uint64_t)&unk_1F1C257B8, (uint64_t (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8, (uint64_t)sub_1C12A8714);
      return swift_release();
    case 0x11uLL:
      swift_retain();
      sub_1C12A79CC(a1, a2, (uint64_t)&unk_1F1C257E0, (uint64_t (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8, (uint64_t)sub_1C12AD3F8);
      return swift_release();
    case 0x12uLL:
      swift_retain();
      sub_1C003F948(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF1BDFC);
      return swift_release();
    case 0x13uLL:
      uint64_t v17 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v18 = *(void *)(v17 + 16);
      uint64_t v19 = *(void *)(v17 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF303E0(v18, v19);
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_retain();
      swift_unownedRetain();
      swift_release();
      uint64_t v20 = (void *)swift_allocObject();
      v20[2] = a2;
      v20[3] = v17;
      v20[4] = a3;
      sub_1BFF1D63C();
      sub_1BFF1D6F8();
      swift_retain();
LABEL_34:
      sub_1C15173AC();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 0x14uLL:
      swift_retain();
      sub_1C129D2BC(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)sub_1C12A8778, (uint64_t)&unk_1F1C25808, (uint64_t (*)(void))sub_1BFF1D63C, sub_1BFF1D6F8, (uint64_t)sub_1C12AD4A0);
      return swift_release();
    case 0x15uLL:
      swift_retain();
      sub_1C1296210(a1, a2, (uint64_t)a3, (uint64_t)&unk_1F1C25830, (void (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8, (uint64_t)sub_1C12A87F8);
      return swift_release();
    case 0x16uLL:
      uint64_t v21 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      long long v22 = (void *)swift_allocObject();
      v22[2] = v21;
      v22[3] = a3;
      v22[4] = a2;
      sub_1BFF1D63C();
      sub_1BFF1D6F8();
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_1C15173BC();
      swift_release();
      return swift_release();
    case 0x17uLL:
      swift_retain();
      sub_1C1290F40(a1, a2, (uint64_t)a3, (uint64_t)&unk_1F1C25858, (void (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8, (uint64_t)sub_1C12AD410);
      return swift_release();
    case 0x18uLL:
      swift_retain();
      sub_1C129E54C(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25880, (uint64_t (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8, (uint64_t)sub_1C12A88E8);
      return swift_release();
    case 0x19uLL:
      swift_retain();
      sub_1C129F028(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C258A8, (uint64_t (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8, (uint64_t)sub_1C12A8918);
      return swift_release();
    case 0x1AuLL:
      swift_retain();
      sub_1C129FC70(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C258D0, (void (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8);
      return swift_release();
    case 0x1BuLL:
      swift_retain();
      sub_1C129267C(a1, (uint64_t)a2, (uint64_t (*)(uint64_t))a3);
      return swift_release();
    case 0x1CuLL:
      long long v23 = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x40);
      v41[2] = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x30);
      v41[3] = v23;
      v41[4] = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x50);
      uint64_t v42 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x60);
      long long v24 = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x20);
      v41[0] = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v41[1] = v24;
      sub_1C089E4F4((uint64_t)v41);
      sub_1C129AA98(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25920, (void (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8, (uint64_t)sub_1C12A8C20);
      return sub_1C089E568((uint64_t)v41);
    case 0x1DuLL:
      swift_retain();
      sub_1BFF902C0(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF1BDFC);
      return swift_release();
    case 0x1FuLL:
      swift_retain();
      sub_1C129C180(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25948, (void (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8);
      return swift_release();
    case 0x20uLL:
      swift_retain();
      sub_1C1299EAC(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25970, (uint64_t (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8, (uint64_t)sub_1C12A8C70);
      return swift_release();
    case 0x21uLL:
      swift_retain();
      sub_1C129BC0C(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF1BDFC);
      return swift_release();
    case 0x22uLL:
      swift_retain();
      sub_1C12A01D4(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF1BDFC);
      return swift_release();
    case 0x23uLL:
      uint64_t v30 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      uint64_t v31 = sub_1C0F0D63C((uint64_t)a2);
      swift_beginAccess();
      uint64_t v32 = *(void *)(v30 + 48);
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 32; ; i += 40)
        {
          long long v35 = *(_OWORD *)(v32 + i);
          long long v36 = *(_OWORD *)(v32 + i + 16);
          uint64_t v44 = *(void *)(v32 + i + 32);
          v43[0] = v35;
          v43[1] = v36;
          sub_1BFF1BDBC((uint64_t)v43);
          sub_1BFF1BDFC(a1, v31, a3);
          if (v4) {
            break;
          }
          sub_1BFF1BD7C((uint64_t)v43);
          if (!--v33)
          {
            swift_release();
            swift_release();
            return swift_bridgeObjectRelease();
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        sub_1BFF1BD7C((uint64_t)v43);
      }
      else
      {
        swift_release();
      }
      return swift_release();
    case 0x24uLL:
      uint64_t v37 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v38 = *(void *)(v37 + 16);
      uint64_t v39 = *(void *)(v37 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF303E0(v38, v39);
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_unownedRetain();
      swift_release();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v37;
      *(void *)(v40 + 24) = a2;
      sub_1BFF1D63C();
      sub_1BFF1D6F8();
      swift_retain();
      sub_1C15173AC();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 0x25uLL:
      swift_retain();
      sub_1C12945A4(a1, (uint64_t)a2, (uint64_t)a3);
      return swift_release();
    case 0x26uLL:
      swift_retain();
      sub_1C1296EA8(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25A10, (uint64_t (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8, (uint64_t)sub_1C12A8CB0);
      return swift_release();
    case 0x27uLL:
      swift_retain();
      sub_1C129B458(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25A38, (void (*)(void))sub_1BFF1D63C, (void (*)(void))sub_1BFF1D6F8, (uint64_t)sub_1C12A8D38);
      return swift_release();
    default:
      swift_retain();
      uint64_t v8 = (void (*)(uint64_t, uint64_t *, void, uint64_t *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))MEMORY[0x1E4FAB500];
LABEL_4:
      sub_1BFF2FEF8(a1, a2, (uint64_t)a3, (uint64_t (*)(void, __n128))sub_1BFF1D63C, sub_1BFF1D6F8, (uint64_t)sub_1BFD33A74, v8);
      return swift_release();
  }
}

void sub_1BFF1D63C()
{
  if (!qword_1EB884D78)
  {
    type metadata accessor for FormatLayoutAttributes();
    sub_1BFF597F8();
    sub_1BFF4CF20(&qword_1EB88A8A0, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
    unint64_t v0 = sub_1C151746C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884D78);
    }
  }
}

uint64_t sub_1BFF1D6F8()
{
  return sub_1BFF30570(&qword_1EB884D70, (void (*)(uint64_t))sub_1BFF1D63C);
}

uint64_t sub_1BFF1D72C(uint64_t a1, uint64_t a2)
{
  sub_1BFF1D9F4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFF1D790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 | 7) + v6;
  uint64_t v12 = (void *)((v11 + a1) & ~(v10 | 7));
  uint64_t v13 = (void *)((v11 + a2) & ~(v10 | 7));
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  uint64_t v14 = ((unint64_t)v12 + v10 + 16) & ~v10;
  uint64_t v15 = ((unint64_t)v13 + v10 + 16) & ~v10;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_bridgeObjectRetain();
  v16(v14, v15, v7);
  size_t v17 = *(void *)(v8 + 64);
  uint64_t v18 = (v17 + v10 + v14) & ~v10;
  v16(v18, (v17 + v10 + v15) & ~v10, v7);
  uint64_t v19 = (void *)((v17 + v10 + v18) & ~v10);
  uint64_t v20 = (const void *)((v17 + v10 + ((v17 + v10 + v15) & ~v10)) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v20, 1, v7))
  {
    int v21 = *(_DWORD *)(v9 + 84);
    if (v21) {
      size_t v22 = v17;
    }
    else {
      size_t v22 = v17 + 1;
    }
    memcpy(v19, v20, v22);
  }
  else
  {
    v16((uint64_t)v19, (uint64_t)v20, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v7);
    int v21 = *(_DWORD *)(v9 + 84);
  }
  if (v21) {
    size_t v23 = v17;
  }
  else {
    size_t v23 = v17 + 1;
  }
  long long v24 = (void *)(((unint64_t)v19 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v25 = (void *)(((unint64_t)v20 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  *long long v24 = *v25;
  uint64_t v26 = (void *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = (void *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v26 = *v27;
  uint64_t v28 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v28 = *v29;
  *(void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BFF1D9F4(uint64_t a1)
{
}

void *initializeWithCopy for FormatStyle(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for FormatType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  unsigned __int8 v11 = *(unsigned char *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1DB64(v5, v6, v7, v8, v9, v10, v11);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = v11;
  return a1;
}

void sub_1BFF1DB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  int v8 = a7 >> 6;
  if (v8 == 2)
  {
LABEL_4:
    swift_bridgeObjectRetain();
    return;
  }
  if (v8 != 1)
  {
    if (a7 >> 6) {
      return;
    }
    goto LABEL_4;
  }
  char v13 = a7 & 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF429DC(a3, a4, a5, a6, v13);
}

uint64_t initializeWithCopy for FormatGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v7 = (_OWORD *)(a2 + 64);
  unint64_t v8 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 <= 2)
  {
    *(_OWORD *)(a1 + 64) = *v7;
  }
  else
  {
    *(unsigned char *)(a1 + 64) = *(unsigned char *)v7;
    *(void *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFF1DD20(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v46 = a2;
  uint64_t v43 = a1;
  uint64_t v42 = *v2;
  uint64_t v4 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v45 = (uint64_t)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1ECB0((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v45, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  char v6 = *((unsigned char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  uint64_t v7 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  uint64_t v8 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  uint64_t v9 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  uint64_t v10 = *(void **)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  uint64_t v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  uint64_t v12 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
  uint64_t v13 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
  v53[0] = *((unsigned char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  v53[1] = v6;
  uint64_t v54 = v7;
  long long v55 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  uint64_t v56 = v8;
  uint64_t v57 = v9;
  uint64_t v58 = v10;
  uint64_t v59 = v11;
  uint64_t v44 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  uint64_t v60 = v12;
  uint64_t v61 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1E730(v9, v10);
  swift_retain();
  uint64_t v43 = sub_1BFF1E154((uint64_t)v43, v46);
  long long v14 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  v62[0] = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  v62[1] = v14;
  long long v15 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  long long v16 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  uint64_t v46 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v62[2] = v15;
  v62[3] = v16;
  uint64_t v17 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  uint64_t v18 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  sub_1BFF1F7AC((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v52, qword_1EB873870, MEMORY[0x1E4FBB718]);
  uint64_t v20 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  uint64_t v19 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  uint64_t v21 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  uint64_t v22 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  uint64_t v23 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  uint64_t v24 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  uint64_t v25 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  v35[0] = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  *(void *)&long long v47 = v21;
  *((void *)&v47 + 1) = v22;
  uint64_t v48 = v23;
  uint64_t v49 = v24;
  uint64_t v50 = v25;
  uint64_t v51 = v35[0];
  uint64_t v38 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  uint64_t v26 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
  uint64_t v41 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  uint64_t v36 = v26;
  uint64_t v37 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  uint64_t v27 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  uint64_t v40 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  v35[1] = v27;
  uint64_t v28 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  uint64_t v29 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  uint64_t v39 = v28;
  uint64_t v42 = swift_allocObject();
  sub_1BFF1E79C((uint64_t)v62);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1E6CC(v21, v22);
  swift_bridgeObjectRetain();
  uint64_t v30 = v38;
  swift_bridgeObjectRetain();
  uint64_t v31 = v36;
  swift_bridgeObjectRetain();
  uint64_t v32 = v37;
  swift_retain();
  uint64_t v33 = swift_bridgeObjectRetain();
  return sub_1C0DAFA8C(v45, v53, v44, (uint64_t)v43, v62, v46, v17, v18, (uint64_t)v52, v20, v19, &v47, v30, v41, v31, v32, v40, v33, v39,
           v29);
}

void *sub_1BFF1E154(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (v2[3])
  {
    if (!a2)
    {
      swift_retain();
      return v3;
    }
    uint64_t v15 = v2[2];
    uint64_t v16 = v2[3];
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    uint64_t v7 = v2[4];
    uint64_t v6 = v2[5];
    uint64_t v8 = v3[6];
    uint64_t v9 = v3[7];
    uint64_t v3 = (void *)swift_allocObject();
    v3[2] = v15;
    v3[3] = v16;
    v3[4] = v7;
    v3[5] = v6;
    v3[6] = v8;
    v3[7] = v9;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = v2[4];
    uint64_t v10 = v2[5];
    uint64_t v12 = v3[6];
    uint64_t v13 = v3[7];
    uint64_t v3 = (void *)swift_allocObject();
    v3[2] = a1;
    v3[3] = a2;
    v3[4] = v11;
    v3[5] = v10;
    v3[6] = v12;
    v3[7] = v13;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1BFF1E298(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v46 = a2;
  uint64_t v43 = a1;
  uint64_t v42 = *v2;
  uint64_t v4 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v45 = (uint64_t)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1ECB0((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v45, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  char v6 = *((unsigned char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  uint64_t v7 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  uint64_t v8 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  uint64_t v9 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  uint64_t v10 = *(void **)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  uint64_t v11 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  uint64_t v12 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
  uint64_t v13 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
  v53[0] = *((unsigned char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  v53[1] = v6;
  uint64_t v54 = v7;
  long long v55 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  uint64_t v56 = v8;
  uint64_t v57 = v9;
  uint64_t v58 = v10;
  uint64_t v59 = v11;
  uint64_t v44 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  uint64_t v60 = v12;
  uint64_t v61 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1E730(v9, v10);
  swift_retain();
  uint64_t v43 = sub_1BFF1FE90((uint64_t)v43, v46);
  long long v14 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  v62[0] = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  v62[1] = v14;
  long long v15 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  long long v16 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  uint64_t v46 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v62[2] = v15;
  v62[3] = v16;
  uint64_t v17 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  uint64_t v18 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  sub_1BFF1F7AC((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v52, qword_1EB873870, MEMORY[0x1E4FBB718]);
  uint64_t v20 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  uint64_t v19 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  uint64_t v21 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  uint64_t v22 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  uint64_t v23 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  uint64_t v24 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  uint64_t v25 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  v35[0] = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  *(void *)&long long v47 = v21;
  *((void *)&v47 + 1) = v22;
  uint64_t v48 = v23;
  uint64_t v49 = v24;
  uint64_t v50 = v25;
  uint64_t v51 = v35[0];
  uint64_t v38 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  uint64_t v26 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
  uint64_t v41 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  uint64_t v36 = v26;
  uint64_t v37 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  uint64_t v27 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  uint64_t v40 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  v35[1] = v27;
  uint64_t v28 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  uint64_t v29 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  uint64_t v39 = v28;
  uint64_t v42 = swift_allocObject();
  sub_1BFF1E79C((uint64_t)v62);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1E6CC(v21, v22);
  swift_bridgeObjectRetain();
  uint64_t v30 = v38;
  swift_bridgeObjectRetain();
  uint64_t v31 = v36;
  swift_bridgeObjectRetain();
  uint64_t v32 = v37;
  swift_retain();
  uint64_t v33 = swift_bridgeObjectRetain();
  return sub_1C0DAFA8C(v45, v53, v44, (uint64_t)v43, v62, v46, v17, v18, (uint64_t)v52, v20, v19, &v47, v30, v41, v31, v32, v40, v33, v39,
           v29);
}

uint64_t sub_1BFF1E6CC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFF1E730(uint64_t result, void *a2)
{
  if (result)
  {
    id v2 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFF1E79C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFF1E828(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupLayoutContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FormatNodeContext.deinit()
{
  sub_1BFF1F404(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1EAA0(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1F9B0(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, qword_1EB873870, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBB718]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF1EB14(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary), *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

void sub_1BFF1EAA0(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BFF1EB14(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFF1EB78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1EBE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1EC48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1ECB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1ED18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1ED80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF1EDE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for GroupLayoutContext()
{
  uint64_t result = qword_1EB8760F0;
  if (!qword_1EB8760F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeWithCopy for GroupLayoutContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)(a2 + v11);
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(a2 + v11 + 16);
  *(_WORD *)(v12 + 17) = *(_WORD *)(a2 + v11 + 17);
  *(unsigned char *)(v12 + 19) = *(unsigned char *)(a2 + v11 + 19);
  *(_DWORD *)(v12 + 20) = *(_DWORD *)(a2 + v11 + 20);
  unint64_t v14 = *(void *)(a2 + v11 + 24);
  if (v14 >= 2) {
    unint64_t v14 = swift_bridgeObjectRetain();
  }
  *(void *)(v12 + 24) = v14;
  uint64_t v15 = type metadata accessor for FeedLayoutSolverOptions(0);
  uint64_t v16 = *(int *)(v15 + 36);
  uint64_t v17 = (void *)(v12 + v16);
  uint64_t v18 = (const void *)(v13 + v16);
  uint64_t v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1C01BB2C0();
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_1C151B62C();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v18, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *(void *)(v12 + *(int *)(v15 + 40)) = *(void *)(v13 + *(int *)(v15 + 40));
  uint64_t v23 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  uint64_t v24 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  uint64_t v25 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BFF1F104(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F164(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F1C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F224(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F284(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F2E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F344(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F3A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F404(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F464(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F4C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F524(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F584(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F5E4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for GroupLayoutContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  if (*(void *)(v7 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v7 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v9 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_1C151B62C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1BFF1F7AC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1BFF1FBE0(0, a3, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFF1F82C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFF47094(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFF1F898(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFFFA900(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF1F8F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1F954(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF1FB8C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF1F9B0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  sub_1BFF1FBE0(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1BFF1FA0C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF1FCAC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF1FA68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF1FAC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFF1FE2C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BFF1FB38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF1FB8C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF1FBE0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1BFF1FC48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF1FCAC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF1FD00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF1FD64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF1FDC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF1FE2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_1BFF1FE90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2[5];
  if (v6) {
    BOOL v7 = a2 == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7)
  {
    uint64_t v9 = v3[2];
    uint64_t v8 = v3[3];
    uint64_t v10 = v3[6];
    uint64_t v11 = v3[7];
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v9;
    v17[3] = v8;
    v17[4] = a1;
    v17[5] = a2;
    long long v17[6] = v10;
    v17[7] = v11;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = v3[3];
    uint64_t v13 = v3[2];
    uint64_t v19 = v3[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    sub_1C151E80C();
    uint64_t v14 = v6;
    uint64_t v16 = v3[6];
    uint64_t v15 = v3[7];
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v13;
    v17[3] = v12;
    v17[4] = v19;
    v17[5] = v14;
    long long v17[6] = v16;
    v17[7] = v15;
    swift_retain();
  }
  swift_bridgeObjectRetain();
  return v17;
}

void *sub_1BFF1FFCC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1D54(a1, a2, a3, a4, &qword_1EB87A6B0, (uint64_t (*)(uint64_t))sub_1BFF9544C, (void (*)(void))sub_1BFF9544C);
}

uint64_t sub_1BFF20000(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v5 - 8);
  BOOL v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) && (uint64_t v8 = sub_1BFEF1B58(a1)) != 0)
  {
    uint64_t v47 = v4;
    uint64_t v48 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
    uint64_t v9 = v8;
    uint64_t v34 = v8;
    sub_1BFF1ECB0((uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    char v10 = *((unsigned char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    char v11 = *((unsigned char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    uint64_t v12 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    uint64_t v37 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    uint64_t v44 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
    uint64_t v43 = *(void **)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
    uint64_t v42 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
    uint64_t v41 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
    uint64_t v40 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
    v60[0] = v10;
    v60[1] = v11;
    uint64_t v61 = v12;
    long long v36 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    long long v62 = v36;
    uint64_t v63 = v37;
    uint64_t v64 = v44;
    uint64_t v65 = v43;
    uint64_t v66 = v42;
    uint64_t v67 = v41;
    uint64_t v68 = v40;
    uint64_t v52 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
    uint64_t v53 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    long long v13 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
    long long v14 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
    long long v15 = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
    void v69[2] = *(_OWORD *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
    v69[3] = v15;
    v69[0] = v13;
    v69[1] = v14;
    uint64_t v51 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
    sub_1BFF1F7AC((uint64_t)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v59, qword_1EB873870, MEMORY[0x1E4FBB718]);
    uint64_t v16 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
    uint64_t v50 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    uint64_t v49 = v16;
    uint64_t v46 = v7;
    uint64_t v17 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
    uint64_t v19 = *(void *)((char *)v1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
    uint64_t v20 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    uint64_t v21 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
    uint64_t v22 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
    *(void *)&long long v54 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
    uint64_t v18 = v54;
    *((void *)&v54 + 1) = v17;
    uint64_t v55 = v19;
    uint64_t v56 = v20;
    uint64_t v57 = v21;
    uint64_t v58 = v22;
    uint64_t v38 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
    uint64_t v23 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    uint64_t v45 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    uint64_t v35 = v23;
    uint64_t v39 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v9;
    *(void *)(v24 + 24) = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1BFF1E730(v44, v43);
    swift_retain();
    swift_retain();
    sub_1BFF1E79C((uint64_t)v69);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v18, v17);
    uint64_t v25 = v35;
    swift_bridgeObjectRetain();
    uint64_t v26 = v34;
    swift_retain();
    uint64_t v27 = v38;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1C1517EEC();
    swift_release();
    uint64_t v30 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    uint64_t v29 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    uint64_t v32 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
    uint64_t v31 = *(void *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1C0DAFA8C((uint64_t)v46, v60, v52, v53, v69, v48, v26, v51, (uint64_t)v59, v50, v49, &v54, v27, v45, v25, v28, v30, v29, v32,
             v31);
  }
  else
  {
    swift_retain();
  }
  return (uint64_t)v2;
}

uint64_t destroy for FeedLayoutCacheKey(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 76);
  uint64_t v5 = sub_1C151794C();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1BFF205C0(unint64_t a1)
{
  id v2 = v1;
  uint64_t v49 = *v2;
  uint64_t v4 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_3;
    }
LABEL_5:
    swift_retain();
    return (uint64_t)v2;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v46 = v6;
  sub_1BFF1ECB0((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  char v7 = *((unsigned char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  uint64_t v8 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  uint64_t v9 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  uint64_t v10 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  char v11 = *(void **)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  uint64_t v12 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  uint64_t v14 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
  uint64_t v13 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
  v57[0] = *((unsigned char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  v57[1] = v7;
  uint64_t v58 = v8;
  long long v59 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  uint64_t v60 = v9;
  uint64_t v61 = v10;
  long long v62 = v11;
  uint64_t v63 = v12;
  uint64_t v48 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  uint64_t v64 = v14;
  uint64_t v65 = v13;
  uint64_t v47 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  long long v15 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  long long v16 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  long long v17 = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  v66[2] = *(_OWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  v66[3] = v17;
  v66[0] = v15;
  v66[1] = v16;
  uint64_t v45 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  uint64_t v50 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  *(void *)&long long v51 = a1;
  uint64_t v44 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1E730(v10, v11);
  swift_retain();
  swift_retain();
  sub_1BFF1E79C((uint64_t)v66);
  sub_1BFF19690(0, &qword_1EB880CA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, MEMORY[0x1E4FBB320]);
  sub_1BFF90B18();
  sub_1BFF77B44(&qword_1EB87D500, (void (*)(uint64_t))type metadata accessor for FormatBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v18 = v44;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1C151E91C();
  uint64_t v44 = sub_1BFF911C4(v19, v18);
  sub_1BFF1F7AC((uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v56, qword_1EB873870, MEMORY[0x1E4FBB718]);
  uint64_t v20 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  uint64_t v21 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  uint64_t v22 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  uint64_t v24 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  uint64_t v25 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  uint64_t v26 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  uint64_t v27 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  *(void *)&long long v51 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  uint64_t v23 = v51;
  *((void *)&v51 + 1) = v22;
  uint64_t v52 = v24;
  uint64_t v53 = v25;
  uint64_t v54 = v26;
  uint64_t v55 = v27;
  uint64_t v40 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  uint64_t v28 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
  uint64_t v43 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  uint64_t v38 = v28;
  uint64_t v39 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  uint64_t v29 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  uint64_t v42 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  uint64_t v30 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  uint64_t v31 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  uint64_t v41 = v30;
  uint64_t v49 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1E6CC(v23, v22);
  swift_bridgeObjectRetain();
  uint64_t v32 = v40;
  swift_bridgeObjectRetain();
  uint64_t v33 = v38;
  swift_bridgeObjectRetain();
  uint64_t v34 = v39;
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1C0DAFA8C((uint64_t)v46, v57, v48, v47, v66, v45, v50, v44, (uint64_t)v56, v20, v21, &v51, v32, v43, v33, v34, v42, v29, v41,
           v31);
}

uint64_t sub_1BFF20AE8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v31 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v30 = (unint64_t)(63 - v5) >> 6;
  uint64_t v32 = a1 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v12)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (i << 6);
      int64_t v12 = i;
      if (!*(void *)(v4 + 16)) {
        goto LABEL_40;
      }
      goto LABEL_25;
    }
    int64_t v13 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v13 >= v30) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v13);
    int64_t v12 = i + 1;
    if (!v14)
    {
      int64_t v12 = i + 2;
      if (i + 2 >= v30) {
        goto LABEL_41;
      }
      unint64_t v14 = *(void *)(v31 + 8 * v12);
      if (!v14)
      {
        int64_t v12 = i + 3;
        if (i + 3 >= v30) {
          goto LABEL_41;
        }
        unint64_t v14 = *(void *)(v31 + 8 * v12);
        if (!v14) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    if (!*(void *)(v4 + 16))
    {
LABEL_40:
      uint64_t v2 = 0;
      goto LABEL_42;
    }
LABEL_25:
    uint64_t v16 = v3;
    long long v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v20 = sub_1C1520E0C();
    uint64_t v21 = v4;
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = v20 & ~v22;
    if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v24 = *(void *)(v21 + 48);
    uint64_t v25 = (void *)(v24 + 16 * v23);
    BOOL v26 = *v25 == v19 && v25[1] == v18;
    if (!v26 && (sub_1C1520A9C() & 1) == 0)
    {
      uint64_t v27 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v27;
        if (((*(void *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        uint64_t v28 = (void *)(v24 + 16 * v23);
        BOOL v29 = *v28 == v19 && v28[1] == v18;
        if (v29 || (sub_1C1520A9C() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      uint64_t v2 = 0;
LABEL_42:
      sub_1BFEFB808();
      return v2;
    }
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v3 = v16;
    uint64_t v4 = v21;
  }
  int64_t v15 = i + 4;
  if (i + 4 >= v30)
  {
LABEL_41:
    uint64_t v2 = 1;
    goto LABEL_42;
  }
  unint64_t v14 = *(void *)(v31 + 8 * v15);
  if (v14)
  {
    int64_t v12 = i + 4;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v12 >= v30) {
      goto LABEL_41;
    }
    unint64_t v14 = *(void *)(v31 + 8 * v12);
    ++v15;
    if (v14) {
      goto LABEL_24;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t initializeWithCopy for FormatItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  unint64_t v7 = (void *)(a2 + 48);
  unint64_t v8 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >= 0xF)
  {
    *(void *)(a1 + 48) = *v7;
    *(void *)(a1 + 56) = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v7;
  }
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFF20ED4()
{
  return swift_retain();
}

uint64_t destroy for GroupLayoutBindingContext(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 52);
  uint64_t v5 = sub_1C151787C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void FormatAdjustment.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  switch(((unint64_t)*v2 >> 59) & 0x1E | (*v2 >> 2) & 1)
  {
    case 1uLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0x19uLL:
      return;
    case 2uLL:
      uint64_t v7 = v4 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v9 = *(void *)(v7 + 16);
      uint64_t v8 = *(void *)(v7 + 24);
      uint64_t v10 = *(void *)(v9 + 16);
      if (v10)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v11 = (unsigned char *)(v9 + 40);
        while (1)
        {
          if ((*v11 & 1) == 0)
          {
            uint64_t v12 = *((void *)v11 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            sub_1BFF49984(v12, 0);
            sub_1BFF49984(v12, 0);
            if (v3) {
              goto LABEL_73;
            }
          }
          v11 += 16;
          if (!--v10)
          {
            swift_bridgeObjectRelease_n();
            break;
          }
        }
      }
      uint64_t v38 = *(void *)(v8 + 16);
      if (v38)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v39 = (unsigned char *)(v8 + 40);
        do
        {
          if ((*v39 & 1) == 0)
          {
            uint64_t v40 = *((void *)v39 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            sub_1BFF49984(v40, 0);
            sub_1BFF49984(v40, 0);
            if (v3) {
              break;
            }
          }
          v39 += 16;
          --v38;
        }
        while (v38);
LABEL_73:
        swift_bridgeObjectRelease_n();
      }
      return;
    case 3uLL:
      uint64_t v26 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        swift_bridgeObjectRetain();
        uint64_t v28 = (unsigned char *)(v26 + 40);
        while (1)
        {
          if ((*v28 & 1) == 0)
          {
            uint64_t v16 = *((void *)v28 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            if (v3) {
              goto LABEL_63;
            }
            sub_1BFF49984(v16, 0);
            sub_1BFF49984(v16, 0);
          }
          v28 += 16;
          if (!--v27) {
            goto LABEL_64;
          }
        }
      }
      return;
    case 4uLL:
      uint64_t v13 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14)
      {
        swift_bridgeObjectRetain();
        int64_t v15 = (unsigned char *)(v13 + 40);
        while (1)
        {
          if ((*v15 & 1) == 0)
          {
            uint64_t v16 = *((void *)v15 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            if (v3) {
              goto LABEL_63;
            }
            sub_1BFF49984(v16, 0);
            sub_1BFF49984(v16, 0);
          }
          v15 += 16;
          if (!--v14) {
            goto LABEL_64;
          }
        }
      }
      return;
    case 5uLL:
      uint64_t v29 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = (unsigned char *)(v29 + 40);
        while (1)
        {
          if ((*v31 & 1) == 0)
          {
            uint64_t v16 = *((void *)v31 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            if (v3) {
              goto LABEL_63;
            }
            sub_1BFF49984(v16, 0);
            sub_1BFF49984(v16, 0);
          }
          v31 += 16;
          if (!--v30) {
            goto LABEL_64;
          }
        }
      }
      return;
    case 6uLL:
      uint64_t v17 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v18 = *(void *)(v17 + 16);
      if (v18)
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = (unsigned char *)(v17 + 40);
        while (1)
        {
          if ((*v19 & 1) == 0)
          {
            uint64_t v16 = *((void *)v19 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            if (v3) {
              goto LABEL_63;
            }
            sub_1BFF49984(v16, 0);
            sub_1BFF49984(v16, 0);
          }
          v19 += 16;
          if (!--v18) {
            goto LABEL_64;
          }
        }
      }
      return;
    case 7uLL:
      uint64_t v32 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        swift_bridgeObjectRetain();
        uint64_t v34 = (unsigned char *)(v32 + 40);
        while (1)
        {
          if ((*v34 & 1) == 0)
          {
            uint64_t v16 = *((void *)v34 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            if (v3) {
              goto LABEL_63;
            }
            sub_1BFF49984(v16, 0);
            sub_1BFF49984(v16, 0);
          }
          v34 += 16;
          if (!--v33) {
            goto LABEL_64;
          }
        }
      }
      return;
    case 8uLL:
      uint64_t v20 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v21 = *(void *)(v20 + 16);
      if (v21)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = (unsigned char *)(v20 + 40);
        while (1)
        {
          if ((*v22 & 1) == 0)
          {
            uint64_t v16 = *((void *)v22 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            if (v3) {
              goto LABEL_63;
            }
            sub_1BFF49984(v16, 0);
            sub_1BFF49984(v16, 0);
          }
          v22 += 16;
          if (!--v21) {
            goto LABEL_64;
          }
        }
      }
      return;
    case 9uLL:
      FormatRatio.bind(binder:context:)(a1, a2);
      return;
    case 0xAuLL:
      uint64_t v35 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v36 = *(void *)(v35 + 16);
      if (v36)
      {
        swift_bridgeObjectRetain();
        uint64_t v37 = (unsigned char *)(v35 + 40);
        while (1)
        {
          if ((*v37 & 1) == 0)
          {
            uint64_t v16 = *((void *)v37 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            if (v3) {
              goto LABEL_63;
            }
            sub_1BFF49984(v16, 0);
            sub_1BFF49984(v16, 0);
          }
          v37 += 16;
          if (!--v36) {
            goto LABEL_64;
          }
        }
      }
      return;
    case 0xBuLL:
      uint64_t v23 = *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = (unsigned char *)(v23 + 40);
        while (1)
        {
          if ((*v25 & 1) == 0)
          {
            uint64_t v16 = *((void *)v25 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            if (v3)
            {
LABEL_63:
              sub_1BFF49984(v16, 0);
              sub_1BFF49984(v16, 0);
              goto LABEL_64;
            }
            sub_1BFF49984(v16, 0);
            sub_1BFF49984(v16, 0);
          }
          v25 += 16;
          if (!--v24) {
            goto LABEL_64;
          }
        }
      }
      return;
    case 0xEuLL:
    case 0xFuLL:
    case 0x16uLL:
      swift_retain();
      FormatTextNodeStyle.bind(binder:context:)(a1, a2);
      swift_release();
      return;
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      swift_bridgeObjectRetain();
      swift_retain();
      FormatTextNodeStyle.bind(binder:context:)(a1, a2);
      swift_release();
LABEL_64:
      swift_bridgeObjectRelease();
      return;
    case 0x14uLL:
    case 0x15uLL:
      sub_1BFF80048(a2, *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10));
      return;
    case 0x17uLL:
      sub_1BFF62558(a1, a2, *(void *)((v4 & 0xFFFFFFFFFFFFFFBLL) + 0x10));
      return;
    case 0x18uLL:
      FormatGeometryAdjustment.bind(binder:context:)(a1, a2);
      return;
    default:
      FormatEdgeInsetsEquation.bind(binder:context:)(a1, a2);
      return;
  }
}

uint64_t initializeWithCopy for GroupLayoutBindingContext(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v9 = a3[13];
  uint64_t v16 = a2 + v9;
  uint64_t v17 = a1 + v9;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v10 = sub_1C151787C();
  int64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(v17, v16, v10);
  uint64_t v11 = a3[15];
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[19];
  *(void *)(a1 + a3[18]) = *(void *)(a2 + a3[18]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFF21844@<X0>(unint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  uint64_t v160 = a3;
  uint64_t v165 = (unint64_t *)a4;
  sub_1BFF242C4();
  uint64_t v166 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v163 = (uint64_t)&v141 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v159 = (uint64_t)&v141 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v158 = (uint64_t)&v141 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v156 = (uint64_t)&v141 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v154 = (uint64_t)&v141 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v141 - v24;
  MEMORY[0x1F4188790](v26);
  uint64_t v157 = (uint64_t)&v141 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v153 = (uint64_t)&v141 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v155 = (uint64_t)&v141 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v151 = (uint64_t)&v141 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v152 = (uint64_t)&v141 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v149 = (uint64_t)&v141 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v150 = (uint64_t)&v141 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v146 = (uint64_t)&v141 - v41;
  MEMORY[0x1F4188790](v42);
  uint64_t v145 = (uint64_t)&v141 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v144 = (uint64_t)&v141 - v45;
  MEMORY[0x1F4188790](v46);
  uint64_t v148 = (uint64_t)&v141 - v47;
  MEMORY[0x1F4188790](v48);
  uint64_t v147 = (uint64_t)&v141 - v49;
  MEMORY[0x1F4188790](v50);
  uint64_t v143 = (uint64_t)&v141 - v51;
  MEMORY[0x1F4188790](v52);
  uint64_t v54 = (char *)&v141 - v53;
  unint64_t v55 = *a1;
  uint64_t v56 = *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 40);
  unsigned __int8 v161 = a2;
  uint64_t v57 = *(void **)&a2[v56];
  unint64_t v167 = v55;
  uint64_t v58 = FormatLayoutValue.identifier.getter();
  uint64_t v60 = v59;
  swift_beginAccess();
  uint64_t v61 = v57[3];
  if (*(void *)(v61 + 16) && (unint64_t v62 = sub_1BFEF2D8C(v58, v60), (v63 & 1) != 0))
  {
    unint64_t v64 = v62;
    uint64_t v65 = v25;
    uint64_t v66 = *(void *)(v61 + 56);
    uint64_t v67 = type metadata accessor for FormatNodeStateData.Data();
    uint64_t v68 = *(void *)(v67 - 8);
    uint64_t v142 = v12;
    uint64_t v69 = v68;
    uint64_t v70 = v66 + *(void *)(v68 + 72) * v64;
    uint64_t v25 = v65;
    sub_1BFF1B214(v70, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v54, 0, 1, v67);
    uint64_t v12 = v142;
  }
  else
  {
    uint64_t v71 = type metadata accessor for FormatNodeStateData.Data();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v54, 1, 1, v71);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  unint64_t v167 = v55;
  uint64_t v72 = FormatLayoutValue.identifier.getter();
  uint64_t v74 = v73;
  swift_beginAccess();
  uint64_t v75 = v57[4];
  if (*(void *)(v75 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v76 = sub_1BFEF2D8C(v72, v74);
    if (v77)
    {
      uint64_t v164 = *(void *)(*(void *)(v75 + 56) + 8 * v76);
      swift_retain();
    }
    else
    {
      uint64_t v164 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v164 = 0;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  unint64_t v167 = v55;
  uint64_t v78 = FormatLayoutValue.identifier.getter();
  uint64_t v80 = v79;
  swift_beginAccess();
  uint64_t v81 = v57[5];
  if (*(void *)(v81 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v82 = sub_1BFEF2D8C(v78, v80);
    if (v83)
    {
      uint64_t v84 = *(void *)(v81 + 56) + 24 * v82;
      unint64_t v85 = *(void **)v84;
      uint64_t v86 = *(void *)(v84 + 16);
      uint64_t v87 = *(void *)(v84 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v85 = 0;
      uint64_t v87 = 0;
      uint64_t v86 = 0;
    }
    uint64_t v88 = v166;
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v85 = 0;
    uint64_t v87 = 0;
    uint64_t v86 = 0;
    uint64_t v88 = v166;
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v89 = *(int *)(v88 + 48);
  sub_1BFF235F0((uint64_t)v54, (uint64_t)v12, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v166 = v89;
  *(void *)&v12[v89] = v55;
  int v90 = (v55 >> 59) & 0x1E | (v55 >> 2) & 1;
  unint64_t v162 = v55;
  switch(v90)
  {
    case 0:
      swift_retain();
      sub_1C017C418((uint64_t)v85, v87);
      uint64_t v91 = type metadata accessor for FormatNodeStateData.Data();
      int v92 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v91 - 8) + 48))(v12, 1, v91);
      uint64_t v93 = v163;
      if (v92 == 1) {
        goto LABEL_89;
      }
      uint64_t v94 = v158;
      sub_1BFF235F0((uint64_t)v12, v158, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_73;
      }
      sub_1C12A2DA4((uint64_t)v54, v162, (uint64_t)v161, v165, a5, a6);
      goto LABEL_71;
    case 1:
      uint64_t v95 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v95 - 8) + 48))(v12, 1, v95) == 1) {
        goto LABEL_38;
      }
      uint64_t v96 = v147;
      sub_1BFF235F0((uint64_t)v12, v147, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_retain();
      if (EnumCaseMultiPayload != 10) {
        goto LABEL_85;
      }
      uint64_t v98 = v96;
      sub_1BFF55F38((uint64_t)v54, v162, v164, (uint64_t)v85, v87, v86, (uint64_t *)v165);
      goto LABEL_54;
    case 2:
      swift_retain();
      sub_1BFF884F4(v55, (uint64_t)v161, (uint64_t)v85, v87, v86, v164, (uint64_t *)v165);
      swift_release();
      sub_1C017C418((uint64_t)v85, v87);
      sub_1C12AD324((uint64_t)v54, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      goto LABEL_82;
    case 3:
      uint64_t v99 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v99 - 8) + 48))(v12, 1, v99) == 1) {
        goto LABEL_38;
      }
      uint64_t v96 = v146;
      sub_1BFF235F0((uint64_t)v12, v146, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_84;
      }
      swift_retain();
      swift_release();
      sub_1C12A11F0((uint64_t)v54, v162, v160, v164, (uint64_t)v85, v87, v86, (uint64_t *)v165);
      goto LABEL_80;
    case 4:
      uint64_t v100 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v100 - 8) + 48))(v12, 1, v100) == 1) {
        goto LABEL_38;
      }
      uint64_t v96 = v145;
      sub_1BFF235F0((uint64_t)v12, v145, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_84;
      }
      swift_retain();
      swift_release();
      sub_1BFF6C694((uint64_t)v54, v162, v164, (uint64_t)v85, v87, v86, (uint64_t *)v165);
      goto LABEL_80;
    case 5:
      uint64_t v101 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v101 - 8) + 48))(v12, 1, v101) == 1) {
        goto LABEL_38;
      }
      uint64_t v96 = v143;
      sub_1BFF235F0((uint64_t)v12, v143, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_84;
      }
      swift_retain();
      swift_release();
      sub_1BFF6C494((uint64_t)v54, v162, v164, (uint64_t)v85, v87, v86, v165);
      goto LABEL_80;
    case 7:
      uint64_t v102 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v102 - 8) + 48))(v12, 1, v102) == 1) {
        goto LABEL_38;
      }
      uint64_t v96 = v148;
      sub_1BFF235F0((uint64_t)v12, v148, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      int v103 = swift_getEnumCaseMultiPayload();
      swift_retain();
      if (v103 != 6) {
        goto LABEL_85;
      }
      uint64_t v98 = v96;
      sub_1BFE4D4E4((uint64_t)v54, v162, (uint64_t)v161, v164, (uint64_t)v85, v87, v86, (uint64_t *)v165);
      goto LABEL_54;
    case 9:
      uint64_t v160 = v86;
      uint64_t v104 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 48))(v12, 1, v104) == 1) {
        goto LABEL_38;
      }
      uint64_t v132 = v144;
      sub_1BFF235F0((uint64_t)v12, v144, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        swift_retain();
        swift_release();
        sub_1C12A0A48((uint64_t)v54, v55, (uint64_t)v161, v164, (uint64_t)v85, v87, v160, (uint64_t *)v165);
        swift_release();
        sub_1C017C418((uint64_t)v85, v87);
        sub_1C12AD324((uint64_t)v54, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        swift_release();
        uint64_t v123 = (uint64_t)v12;
        return sub_1C12AD324(v123, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      }
      swift_retain();
      sub_1C017C418((uint64_t)v85, v87);
      sub_1BFF1BA48(v132, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
      goto LABEL_88;
    case 10:
      uint64_t v105 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v105 - 8) + 48))(v12, 1, v105) == 1) {
        goto LABEL_38;
      }
      uint64_t v96 = v149;
      sub_1BFF235F0((uint64_t)v12, v149, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      int v106 = swift_getEnumCaseMultiPayload();
      swift_retain();
      if (v106 != 9) {
        goto LABEL_85;
      }
      sub_1C12A17B4((uint64_t)v54, v162, v164, (uint64_t)v85, v87, v86, (uint64_t *)v165);
      goto LABEL_80;
    case 11:
      swift_retain();
      sub_1C017C418((uint64_t)v85, v87);
      uint64_t v107 = type metadata accessor for FormatNodeStateData.Data();
      int v108 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v107 - 8) + 48))(v12, 1, v107);
      uint64_t v93 = v163;
      if (v108 == 1) {
        goto LABEL_89;
      }
      uint64_t v94 = v150;
      sub_1BFF235F0((uint64_t)v12, v150, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_73;
      }
      sub_1C12A1478((uint64_t)v54, v162, v160, (uint64_t *)v165);
      goto LABEL_71;
    case 12:
      swift_retain();
      sub_1C017C418((uint64_t)v85, v87);
      uint64_t v109 = type metadata accessor for FormatNodeStateData.Data();
      int v110 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v109 - 8) + 48))(v12, 1, v109);
      uint64_t v93 = v163;
      if (v110 == 1) {
        goto LABEL_89;
      }
      uint64_t v94 = v152;
      sub_1BFF235F0((uint64_t)v12, v152, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_73;
      }
      sub_1C12A19B4((uint64_t)v54, v162, (uint64_t *)v165);
      goto LABEL_71;
    case 13:
      uint64_t v111 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v111 - 8) + 48))(v12, 1, v111) == 1) {
        goto LABEL_38;
      }
      uint64_t v96 = v151;
      sub_1BFF235F0((uint64_t)v12, v151, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_84;
      }
      swift_retain();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C12A1C50((uint64_t)v54, v162, v164, (uint64_t)v85, v87, v86, (uint64_t *)v165);
      goto LABEL_80;
    case 14:
      uint64_t v112 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v112 - 8) + 48))(v12, 1, v112) == 1) {
        goto LABEL_38;
      }
      uint64_t v96 = v155;
      sub_1BFF235F0((uint64_t)v12, v155, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      int v113 = swift_getEnumCaseMultiPayload();
      swift_retain();
      if (v113 != 13) {
        goto LABEL_85;
      }
      uint64_t v98 = v96;
      sub_1C12A1E88((uint64_t)v54, v162, v164, (uint64_t)v85, v87, v86, (uint64_t *)v165);
LABEL_54:
      swift_release();
      sub_1C017C418((uint64_t)v85, v87);
      sub_1C12AD324((uint64_t)v54, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      uint64_t v114 = v98;
      goto LABEL_72;
    case 15:
      uint64_t v160 = v86;
      uint64_t v115 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v115 - 8) + 48))(v12, 1, v115) == 1) {
        goto LABEL_38;
      }
      uint64_t v96 = v153;
      sub_1BFF235F0((uint64_t)v12, v153, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() == 14)
      {
        uint64_t v117 = *(void **)v96;
        uint64_t v116 = *(void *)(v96 + 8);
        uint64_t v142 = v12;
        uint64_t v118 = *(void **)(v96 + 16);
        uint64_t v119 = *(void *)(v96 + 24);
        uint64_t v120 = *(void **)(v96 + 32);
        uint64_t v163 = *(void *)(v96 + 40);
        unsigned __int8 v161 = *(void **)(v96 + 48);
        char v121 = *(unsigned char *)(v96 + 56);
        swift_retain();
        sub_1C00FA1F0(v117, v116, v118, v119, v120, v163, v161, v121);
        sub_1C12A216C((uint64_t)v54, v162, v164, v85, v87, v160, (uint64_t *)v165);
        swift_release();
        sub_1C017C418((uint64_t)v85, v87);
        sub_1C12AD324((uint64_t)v54, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        uint64_t v122 = (uint64_t)v142;
        swift_release();
        uint64_t v123 = v122;
        return sub_1C12AD324(v123, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      }
      swift_retain();
      uint64_t v136 = (uint64_t)v85;
      uint64_t v137 = v87;
      goto LABEL_86;
    case 16:
      swift_retain();
      sub_1C017C418((uint64_t)v85, v87);
      uint64_t v124 = type metadata accessor for FormatNodeStateData.Data();
      int v125 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v124 - 8) + 48))(v12, 1, v124);
      uint64_t v93 = v163;
      if (v125 == 1) {
        goto LABEL_89;
      }
      uint64_t v94 = v157;
      sub_1BFF235F0((uint64_t)v12, v157, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 15) {
        goto LABEL_73;
      }
      sub_1C12A23C8((uint64_t)v54, v162, (uint64_t *)v165);
      goto LABEL_71;
    case 17:
      uint64_t v160 = v86;
      uint64_t v126 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v126 - 8) + 48))(v12, 1, v126) == 1) {
        goto LABEL_38;
      }
      sub_1BFF235F0((uint64_t)v12, (uint64_t)v25, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      int v133 = swift_getEnumCaseMultiPayload();
      swift_retain();
      if (v133 == 17)
      {
        sub_1C12A2664((uint64_t)v54, v162, v164, (uint64_t)v85, v87, v160, (uint64_t *)v165);
        swift_release();
        sub_1C017C418((uint64_t)v85, v87);
        sub_1C12AD324((uint64_t)v54, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        uint64_t v114 = (uint64_t)v25;
        goto LABEL_72;
      }
      sub_1C017C418((uint64_t)v85, v87);
      uint64_t v138 = (uint64_t)v25;
      goto LABEL_87;
    case 18:
      uint64_t v127 = type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v127 - 8) + 48))(v12, 1, v127) == 1) {
        goto LABEL_38;
      }
      uint64_t v96 = v154;
      sub_1BFF235F0((uint64_t)v12, v154, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() == 18)
      {
        uint64_t v134 = *(void *)(v96 + 8);
        swift_retain();
        sub_1C00F80E0(v134);
        sub_1C12A2940((uint64_t)v54, v162, v164, (uint64_t)v85, v87, v86, (uint64_t *)v165);
LABEL_80:
        swift_release();
        sub_1C017C418((uint64_t)v85, v87);
LABEL_81:
        sub_1C12AD324((uint64_t)v54, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        goto LABEL_82;
      }
LABEL_84:
      swift_retain();
LABEL_85:
      uint64_t v136 = (uint64_t)v85;
      uint64_t v137 = v87;
LABEL_86:
      sub_1C017C418(v136, v137);
      uint64_t v138 = v96;
LABEL_87:
      sub_1BFF1BA48(v138, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
LABEL_88:
      uint64_t v93 = v163;
      goto LABEL_89;
    case 19:
      swift_retain();
      sub_1C017C418((uint64_t)v85, v87);
      uint64_t v128 = type metadata accessor for FormatNodeStateData.Data();
      int v129 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v128 - 8) + 48))(v12, 1, v128);
      uint64_t v93 = v163;
      if (v129 == 1) {
        goto LABEL_89;
      }
      uint64_t v94 = v156;
      sub_1BFF235F0((uint64_t)v12, v156, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 19) {
        goto LABEL_73;
      }
      swift_release();
      sub_1C12A2B5C((uint64_t)v54, v162, v160, v165);
      swift_release();
      goto LABEL_81;
    case 20:
      swift_retain();
      sub_1C017C418((uint64_t)v85, v87);
      uint64_t v130 = type metadata accessor for FormatNodeStateData.Data();
      int v131 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v130 - 8) + 48))(v12, 1, v130);
      uint64_t v93 = v163;
      if (v131 == 1) {
        goto LABEL_89;
      }
      uint64_t v94 = v159;
      sub_1BFF235F0((uint64_t)v12, v159, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      if (swift_getEnumCaseMultiPayload() != 20)
      {
LABEL_73:
        sub_1BFF1BA48(v94, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
LABEL_89:
        uint64_t v139 = type metadata accessor for FormatNodeStateData.Data();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v139 - 8) + 48))(v12, 1, v139) != 1)
        {
          sub_1BFF235F0((uint64_t)v12, v93, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
          if (swift_getEnumCaseMultiPayload() == 7)
          {
            sub_1C12AD324((uint64_t)v54, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
            swift_release();
            uint64_t v140 = v165;
            goto LABEL_98;
          }
          sub_1BFF1BA48(v93, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
        }
        if (v90 != 8 && v90 != 20 && (v90 != 21 || v162 != 0xA000000000000004))
        {
          swift_release();
          sub_1C12AD324((uint64_t)v54, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
          *uint64_t v165 = 0xF000000000000007;
          return sub_1BFF1BA48((uint64_t)v12, (uint64_t (*)(void))sub_1BFF242C4);
        }
        sub_1C12AD324((uint64_t)v54, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        uint64_t v140 = v165;
LABEL_98:
        swift_release();
        swift_release();
        uint64_t result = sub_1C12AD324((uint64_t)v12, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
        unint64_t *v140 = 0xF000000000000007;
        return result;
      }
      sub_1C12A3430((uint64_t)v54, v162, v165);
LABEL_71:
      swift_release();
      sub_1C12AD324((uint64_t)v54, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      uint64_t v114 = v94;
LABEL_72:
      sub_1BFF1BA48(v114, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
LABEL_82:
      swift_release();
      uint64_t v123 = (uint64_t)v12;
      return sub_1C12AD324(v123, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    default:
LABEL_38:
      swift_retain();
      sub_1C017C418((uint64_t)v85, v87);
      goto LABEL_88;
  }
}

uint64_t sub_1BFF2339C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFE309D0(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFF2341C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFE79B90(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFF2349C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF23504(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C0FA6F20(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFF23570(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFE79D74(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFF235F0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C12A7FB8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFF23670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0E572B0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v15[-v5 - 8];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a1 + 40 * v7 - 8;
    while (1)
    {
      sub_1BFC66384(v8, (uint64_t)v15);
      sub_1BFFFCF34();
      uint64_t v9 = type metadata accessor for FeedHeadline(0);
      int v10 = swift_dynamicCast();
      uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
      if (v10) {
        break;
      }
      --v7;
      v11(v6, 1, 1, v9);
      sub_1C0E56F54((uint64_t)v6, (uint64_t)&unk_1EB8737F0, (uint64_t)type metadata accessor for FeedHeadline, (uint64_t (*)(void))sub_1C0E572B0);
      v8 -= 40;
      if (!v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    v11(v6, 0, 1, v9);
    swift_bridgeObjectRelease();
    return sub_1C0E56FB4((uint64_t)v6, a2, type metadata accessor for FeedHeadline);
  }
  else
  {
LABEL_6:
    sub_1BFF7DFA8();
    swift_allocError();
    strcpy(v12, "FeedHeadline");
    v12[13] = 0;
    *((_WORD *)v12 + 7) = -5120;
    v12[56] = 6;
    return swift_willThrow();
  }
}

uint64_t sub_1BFF2389C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF23904(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF2396C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF239D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF23A3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF23AA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF23B0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF23B74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t storeEnumTagSinglePayload for FeedHeadline(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C01A803C);
}

void *initializeBufferWithCopyOfBuffer for FeedHeadline(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v45 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v45;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v6 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = a2[6];
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    uint64_t v7 = a3[10];
    uint64_t v8 = (unsigned char *)(a1 + v7);
    uint64_t v9 = (uint64_t)a2 + v7;
    *uint64_t v8 = *((unsigned char *)a2 + v7);
    v8[1] = *((unsigned char *)a2 + v7 + 1);
    uint64_t v10 = type metadata accessor for FeedHeadline.State(0);
    uint64_t v11 = *(int *)(v10 + 24);
    __dst = &v8[v11];
    uint64_t v43 = (int *)v10;
    uint64_t v12 = (char *)(v9 + v11);
    uint64_t v13 = (int *)type metadata accessor for SharedItem();
    uint64_t v41 = *((void *)v13 - 1);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, int *))(v41 + 48);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    if (v14(v12, 1, v13))
    {
      uint64_t v15 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v17 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v12, v17);
      __dst[v13[5]] = v12[v13[5]];
      uint64_t v18 = v13[6];
      uint64_t v19 = *(void **)&v12[v18];
      *(void *)&__dst[v18] = v19;
      uint64_t v20 = v13[7];
      uint64_t v46 = &__dst[v20];
      uint64_t v40 = &v12[v20];
      uint64_t v21 = sub_1C1515FDC();
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
      id v23 = v19;
      v22(v46, v40, v21);
      (*(void (**)(char *, void, uint64_t, int *))(v41 + 56))(__dst, 0, 1, v13);
    }
    v8[v43[7]] = *(unsigned char *)(v9 + v43[7]);
    v8[v43[8]] = *(unsigned char *)(v9 + v43[8]);
    v8[v43[9]] = *(unsigned char *)(v9 + v43[9]);
    v8[v43[10]] = *(unsigned char *)(v9 + v43[10]);
    uint64_t v24 = a3[11];
    uint64_t v25 = (char *)v4 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_1C151D2DC();
    uint64_t v28 = *(void *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      sub_1BFEEF378(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    uint64_t v30 = a3[12];
    uint64_t v31 = (void *)((char *)v4 + v30);
    uint64_t v32 = (uint64_t *)((char *)a2 + v30);
    unint64_t v33 = v32[1];
    if (v33 >= 0x11)
    {
      void *v31 = *v32;
      v31[1] = v33;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    }
    uint64_t v34 = a3[13];
    unint64_t v35 = *(uint64_t *)((char *)a2 + v34);
    if (v35 >= 2)
    {
      if (v35 == 2)
      {
        *(void *)((char *)v4 + v34) = 2;
      }
      else
      {
        *(void *)((char *)v4 + v34) = v35;
        swift_unknownObjectRetain();
      }
    }
    else
    {
      *(void *)((char *)v4 + v34) = v35;
    }
    uint64_t v36 = a3[14];
    uint64_t v37 = *(void **)((char *)a2 + v36);
    *(void *)((char *)v4 + v36) = v37;
    id v38 = v37;
  }
  return v4;
}

uint64_t sub_1BFF24020(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF24080(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF240E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF470E8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF2413C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FormatViewData(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB87B480);
}

uint64_t FormatLayoutValue.identifier.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = ((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1;
  uint64_t v3 = 0x6E6564646968;
  switch(v2)
  {
    case 1uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 8uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
      uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      goto LABEL_3;
    case 2uLL:
      uint64_t v6 = v1 & 0xFFFFFFFFFFFFFFBLL;
      goto LABEL_7;
    case 6uLL:
    case 7uLL:
    case 9uLL:
      v1 &= 0xFFFFFFFFFFFFFFBuLL;
      goto LABEL_5;
    case 0xBuLL:
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFFBLL;
LABEL_3:
      int v5 = (uint64_t *)(v4 + 16);
      goto LABEL_8;
    case 0x15uLL:
      return v3;
    default:
LABEL_5:
      uint64_t v6 = *(void *)(v1 + 16);
LABEL_7:
      int v5 = (uint64_t *)(*(void *)(v6 + 16) + 48);
LABEL_8:
      uint64_t v3 = *v5;
      swift_bridgeObjectRetain();
      return v3;
  }
}

uint64_t type metadata accessor for FormatGroupLayoutFactory.Bound()
{
  uint64_t result = qword_1EB878198;
  if (!qword_1EB878198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BFF242C4()
{
  if (!qword_1EB882A90)
  {
    sub_1C12A7FB8(255, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB882A90);
    }
  }
}

void sub_1BFF2435C(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[2];
  uint64_t v24 = a2[3];
  uint64_t v26 = a2[4];
  uint64_t v37 = a2[5];
  uint64_t v7 = a2[7];
  uint64_t v8 = a2[8];
  uint64_t v9 = a2[9];
  uint64_t v10 = a2[10];
  uint64_t v34 = a2[11];
  uint64_t v35 = a2[6];
  uint64_t v33 = a2[12];
  swift_beginAccess();
  uint64_t v23 = v2;
  uint64_t v38 = v3;
  char v31 = v5;
  char v32 = v4;
  char v39 = v4;
  char v40 = v5;
  uint64_t v25 = v6;
  uint64_t v41 = v6;
  uint64_t v42 = v24;
  uint64_t v43 = v26;
  uint64_t v44 = v37;
  uint64_t v45 = v35;
  uint64_t v46 = v7;
  uint64_t v30 = v9;
  uint64_t v47 = v8;
  uint64_t v48 = v9;
  uint64_t v29 = v10;
  uint64_t v49 = v10;
  uint64_t v50 = v34;
  uint64_t v51 = v33;
  sub_1BFF0D1B8(a1, (uint64_t)&v38);
  if (!v27)
  {
    uint64_t v28 = v7;
    uint64_t v11 = v2;
    swift_beginAccess();
    uint64_t v12 = *(void *)(v2 + 96);
    uint64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      uint64_t v14 = v3;
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v13; ++i)
      {
        unint64_t v16 = *(void *)(v12 + 8 * i + 32);
        uint64_t v38 = v14;
        char v39 = v4;
        char v40 = v31;
        uint64_t v41 = v25;
        uint64_t v42 = v24;
        uint64_t v43 = v26;
        uint64_t v44 = v37;
        uint64_t v45 = v35;
        uint64_t v46 = v7;
        uint64_t v47 = v8;
        uint64_t v48 = v30;
        uint64_t v49 = v29;
        uint64_t v50 = v34;
        uint64_t v51 = v33;
        sub_1BFF32264(v16);
        sub_1BFF0D378((uint64_t)a1, (uint64_t)&v38);
        sub_1BFF31E90(v16);
      }
      swift_bridgeObjectRelease_n();
      uint64_t v3 = v14;
      uint64_t v17 = v24;
      uint64_t v18 = v26;
      uint64_t v19 = v37;
      uint64_t v11 = v23;
    }
    else
    {
      uint64_t v19 = v37;
      uint64_t v17 = v24;
      uint64_t v18 = v26;
    }
    swift_beginAccess();
    uint64_t v20 = *(void *)(v11 + 104);
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v22 = v20 + 48;
      do
      {
        uint64_t v52 = *(void *)(v22 - 16);
        uint64_t v38 = v3;
        char v39 = v32;
        char v40 = v31;
        uint64_t v41 = v25;
        uint64_t v42 = v17;
        uint64_t v43 = v18;
        uint64_t v44 = v19;
        uint64_t v45 = v35;
        uint64_t v46 = v28;
        uint64_t v47 = v8;
        uint64_t v48 = v30;
        uint64_t v49 = v29;
        uint64_t v50 = v34;
        uint64_t v51 = v33;
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BFF0B0B8(a1, &v38);
        v22 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v21;
        uint64_t v19 = v37;
      }
      while (v21);
      swift_bridgeObjectRelease_n();
    }
  }
}

unint64_t FormatDimensionSizingValue.bind(binder:context:)(unint64_t result, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v6 = result;
  switch((unint64_t)*v2 >> 61)
  {
    case 1uLL:
      uint64_t v11 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = (unsigned char *)(v11 + 40);
        do
        {
          if ((*v13 & 1) == 0)
          {
            uint64_t v14 = *((void *)v13 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v6, a2);
            sub_1BFF49984(v14, 0);
            sub_1BFF49984(v14, 0);
            if (v3) {
              break;
            }
          }
          v13 += 16;
          --v12;
        }
        while (v12);
        return swift_bridgeObjectRelease();
      }
      return result;
    case 2uLL:
    case 6uLL:
      return result;
    case 3uLL:
      unint64_t v23 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFF18D70(v23);
      FormatDimensionSizingValue.bind(binder:context:)(v6, a2);
      return sub_1BFF18DA8(v23);
    case 4uLL:
      uint64_t v15 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v16 = *(void *)(v15 + 16);
      if (!v16) {
        return result;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v17 = (unsigned char *)(v15 + 40);
      break;
    case 5uLL:
      uint64_t v19 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v20 = *(void *)(v19 + 16);
      if (v20)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = (unsigned char *)(v19 + 40); ; i += 16)
        {
          if ((*i & 1) == 0)
          {
            uint64_t v22 = *((void *)i - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v6, a2);
            if (v3)
            {
              sub_1BFF49984(v22, 0);
              sub_1BFF49984(v22, 0);
              return swift_bridgeObjectRelease();
            }
            sub_1BFF49984(v22, 0);
            sub_1BFF49984(v22, 0);
          }
          if (!--v20) {
            return swift_bridgeObjectRelease();
          }
        }
      }
      return result;
    default:
      uint64_t v7 = *(void *)(v4 + 16);
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = (unsigned char *)(v7 + 40);
        do
        {
          if ((*v9 & 1) == 0)
          {
            uint64_t v10 = *((void *)v9 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(v6, a2);
            sub_1BFF49984(v10, 0);
            sub_1BFF49984(v10, 0);
            if (v3) {
              break;
            }
          }
          v9 += 16;
          --v8;
        }
        while (v8);
        return swift_bridgeObjectRelease();
      }
      return result;
  }
  while ((*v17 & 1) != 0)
  {
LABEL_16:
    v17 += 16;
    if (!--v16) {
      return swift_bridgeObjectRelease_n();
    }
  }
  uint64_t v18 = *((void *)v17 - 1);
  swift_retain_n();
  FormatFloat.bind(binder:context:)(v6, a2);
  if (!v3)
  {
    sub_1BFF49984(v18, 0);
    sub_1BFF49984(v18, 0);
    goto LABEL_16;
  }
  sub_1BFF49984(v18, 0);
  sub_1BFF49984(v18, 0);
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1BFF2497C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatOptionValue.init(from:)(a1, a2);
}

uint64_t FormatOptionValue.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v62 = a2;
  sub_1BFF2918C();
  *(void *)&long long v61 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v59 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF29220();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v10 = v9;
  uint64_t v60 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v57 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v13 = (void *)v63;
  sub_1C1520EBC();
  uint64_t v14 = v13;
  if (v13)
  {
LABEL_24:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v58 = v8;
  *(void *)&long long v63 = v6;
  uint64_t v15 = v62;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v16 = sub_1C1520EAC();
  char v17 = Dictionary<>.errorOnUnknownKeys.getter(v16);
  swift_bridgeObjectRelease();
  uint64_t v18 = v60;
  uint64_t v19 = v12;
  if (v17)
  {
    uint64_t v20 = sub_1C152070C();
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      uint64_t v22 = (unint64_t *)(v20 + 40);
      while (1)
      {
        unint64_t v23 = *v22;
        if (*v22 >= 4) {
          break;
        }
        v22 += 2;
        if (!--v21) {
          goto LABEL_7;
        }
      }
      uint64_t v28 = v18;
      uint64_t v29 = *(v22 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v14 = (void *)swift_allocError();
      *(void *)uint64_t v30 = v29;
      *(void *)(v30 + 8) = v23;
      *(void *)(v30 + 16) = &unk_1F1B81550;
      *(_OWORD *)(v30 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v29, v23);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v10);
      goto LABEL_24;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFF2566C();
  *(_OWORD *)unint64_t v64 = 0uLL;
  sub_1C15206EC();
  uint64_t v24 = v15;
  switch((char)v66)
  {
    case 1:
      long long v66 = xmmword_1C152C800;
      sub_1BFF2F918();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      long long v63 = *(_OWORD *)v64;
      uint64_t v31 = *(void *)&v64[16];
      long long v61 = v65;
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v63;
      *(void *)(v32 + 32) = v31;
      *(_OWORD *)(v32 + 40) = v61;
      unint64_t v27 = v32 | 0x1000000000000000;
      break;
    case 2:
      *(_OWORD *)unint64_t v64 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EA19D360, (void (*)(uint64_t))sub_1BFF29220);
      uint64_t v33 = (uint64_t)v58;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      uint64_t v34 = swift_allocBox();
      sub_1BFE7FB8C(v33, v35, (uint64_t (*)(void))sub_1BFF29220);
      unint64_t v27 = v34 | 0x2000000000000000;
      break;
    case 3:
      sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB876940, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      long long v66 = xmmword_1C152C800;
      sub_1BFF71BC4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      long long v36 = *(_OWORD *)v64;
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v36;
      unint64_t v27 = v37 | 0x3000000000000000;
      break;
    case 4:
      sub_1C08FC718(0, &qword_1EB876970, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      long long v66 = xmmword_1C152C800;
      sub_1BFF6C8E4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      long long v38 = *(_OWORD *)v64;
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = v38;
      unint64_t v27 = v39 | 0x4000000000000000;
      break;
    case 5:
      sub_1C08FC718(0, &qword_1EB876950, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      long long v66 = xmmword_1C152C800;
      sub_1BFF44A40();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      uint64_t v40 = *(void *)v64;
      long long v63 = *(_OWORD *)&v64[8];
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v40;
      *(_OWORD *)(v41 + 24) = v63;
      unint64_t v42 = 0x5000000000000000;
      goto LABEL_26;
    case 6:
      *(_OWORD *)unint64_t v64 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB876920, (void (*)(uint64_t))sub_1BFF2918C);
      uint64_t v43 = (uint64_t)v59;
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      uint64_t v44 = swift_allocBox();
      sub_1BFE7FB8C(v43, v45, (uint64_t (*)(void))sub_1BFF2918C);
      unint64_t v27 = v44 | 0x6000000000000000;
      break;
    case 7:
      *(_OWORD *)unint64_t v64 = xmmword_1C152C800;
      sub_1BFE113DC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      uint64_t v46 = v66;
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v46;
      unint64_t v27 = v47 | 0x7000000000000000;
      break;
    case 8:
      sub_1C0868154();
      long long v66 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EA19D358, (void (*)(uint64_t))sub_1C0868154);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      long long v48 = *(_OWORD *)v64;
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = v48;
      unint64_t v27 = v49 | 0x8000000000000000;
      break;
    case 9:
      *(_OWORD *)unint64_t v64 = xmmword_1C152C800;
      sub_1BFE3D1DC();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      uint64_t v50 = v66;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v50;
      unint64_t v42 = 0x9000000000000000;
      goto LABEL_26;
    case 10:
      *(_OWORD *)unint64_t v64 = xmmword_1C152C800;
      sub_1C0073944();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      uint64_t v51 = v66;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v51;
      unint64_t v42 = 0xA000000000000000;
      goto LABEL_26;
    case 11:
      sub_1BFEFF3E8(0, &qword_1EA19D330, (uint64_t (*)(void))sub_1C0868054, (uint64_t)&type metadata for FormatOptionType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
      *(_OWORD *)unint64_t v64 = xmmword_1C152C800;
      sub_1C08680A8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      char v55 = v66;
      uint64_t v41 = swift_allocObject();
      *(unsigned char *)(v41 + 16) = v55;
      unint64_t v42 = 0xB000000000000000;
      goto LABEL_26;
    case 12:
      *(_OWORD *)unint64_t v64 = xmmword_1C152C800;
      sub_1BFE9439C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      uint64_t v52 = v66;
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v52;
      unint64_t v27 = v53 | 0xC000000000000000;
      break;
    case 13:
      *(_OWORD *)unint64_t v64 = xmmword_1C152C800;
      sub_1C006FA30();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      uint64_t v56 = v66;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v56;
      unint64_t v42 = 0xD000000000000000;
LABEL_26:
      unint64_t v27 = v41 | v42;
      break;
    default:
      sub_1C08FC718(0, &qword_1EB876960, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      long long v66 = xmmword_1C152C800;
      sub_1BFF256C0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v10);
      char v25 = v64[0];
      uint64_t v26 = *(void *)&v64[8];
      unint64_t v27 = swift_allocObject();
      *(unsigned char *)(v27 + 16) = v25;
      *(void *)(v27 + 24) = v26;
      break;
  }
  *uint64_t v24 = v27;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BFF25620(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for FormatSelectorValue();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

unint64_t sub_1BFF2566C()
{
  unint64_t result = qword_1EB8882E8;
  if (!qword_1EB8882E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8882E8);
  }
  return result;
}

unint64_t sub_1BFF256C0()
{
  unint64_t result = qword_1EB876958;
  if (!qword_1EB876958)
  {
    sub_1C08FC718(255, &qword_1EB876960, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876958);
  }
  return result;
}

uint64_t sub_1BFF25744@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_1C00AB000();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v56 = &v52[-v9];
  MEMORY[0x1F4188790](v10);
  uint64_t v57 = &v52[-v11];
  uint64_t v12 = type metadata accessor for FormatOption();
  uint64_t v58 = *(void *)(v12 - 8);
  uint64_t v59 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)&v52[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  char v55 = (uint64_t *)&v52[-v16];
  uint64_t v17 = *(void *)v2;
  uint64_t v18 = *(void *)(v2 + 8);
  uint64_t v19 = *(void *)(v2 + 16);
  uint64_t v60 = *(void *)(v2 + 24);
  uint64_t v61 = a1;
  int v20 = *(__int16 *)(v2 + 32);
  sub_1C1517EFC();
  swift_retain();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v65 = MEMORY[0x1E4FBC870];
  uint64_t v62 = v17;
  LOBYTE(a1) = sub_1BFF2B14C(v17, v18, &v65);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1)
  {
    uint64_t v21 = *MEMORY[0x1E4FAB0A0];
    uint64_t v22 = sub_1C15191EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(a2, v21, v22);
  }
  uint64_t v54 = a2;
  if (v20 < 0)
  {
    sub_1BFF582A4();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    *(unsigned char *)(inited + 32) = v19;
    uint64_t v31 = sub_1C00B857C(inited);
    swift_setDeallocating();
    swift_bridgeObjectRetain();
    FormatOptionCollection.subscript.getter(v62, v18, (uint64_t)v7);
    uint64_t v32 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v58 + 48);
    int v33 = v32(v7, 1, v59);
    uint64_t v34 = v63;
    if (v33 == 1)
    {
      uint64_t v61 = v31;
      sub_1BFEFEA48((uint64_t)v7, (uint64_t (*)(void))sub_1C00AB000);
      uint64_t v35 = 1;
    }
    else
    {
      sub_1C00AB068((uint64_t)v7, (uint64_t)v14);
      sub_1C12EC404(v14, v31);
      if (v34)
      {
        sub_1BFEFEA48((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease();
        return sub_1BFE1D244(v62, v18, v19, v60, v20);
      }
      uint64_t v61 = v31;
      sub_1C00AB068((uint64_t)v14, (uint64_t)v56);
      uint64_t v35 = 0;
    }
    uint64_t v39 = v62;
    uint64_t v40 = v59;
    uint64_t v41 = v56;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v56, v35, 1, v59);
    swift_bridgeObjectRelease();
    sub_1BFE1D244(v39, v18, v19, v60, v20);
    v32(v41, 1, v40);
    sub_1C15191FC();
    uint64_t v50 = (uint64_t (*)(void))sub_1C00AB000;
    uint64_t v51 = (uint64_t)v41;
  }
  else
  {
    LODWORD(v56) = v20;
    swift_bridgeObjectRetain();
    uint64_t v24 = v19;
    uint64_t v25 = v60;
    int v53 = v20 & 1;
    sub_1BFF27F28(v19, v60, v20 & 1);
    uint64_t v26 = v63;
    if (qword_1EB87BD48 != -1) {
      swift_once();
    }
    uint64_t v27 = qword_1EB879FE0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v28 = v57;
    uint64_t v29 = v62;
    sub_1C0EC63F8(v62, v18, v27, 1, (uint64_t)v57);
    if (v26)
    {
      swift_bridgeObjectRelease();
      sub_1BFE1D244(v29, v18, v24, v25, (__int16)v56);
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v58 + 48))(v28, 1, v59) == 1)
    {
      sub_1BFEFEA48((uint64_t)v28, (uint64_t (*)(void))sub_1C00AB000);
      sub_1C151918C();
      return sub_1BFE1D244(v62, v18, v24, v25, (__int16)v56);
    }
    long long v36 = v55;
    sub_1C00AB068((uint64_t)v28, (uint64_t)v55);
    swift_retain();
    uint64_t v37 = v61;
    sub_1BFF27FB0(v61, (unint64_t *)&v65);
    uint64_t v38 = v24;
    swift_release();
    uint64_t v42 = v65;
    uint64_t v43 = v24;
    char v44 = v53;
    sub_1BFF27F28(v43, v25, v53);
    sub_1BFF26E98(v37, v38, v25, v44, (uint64_t)&OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_1BFF27FB0, &v65);
    sub_1BFE1D230(v38, v25, v44);
    uint64_t v45 = v65;
    uint64_t v65 = v42;
    uint64_t v64 = v45;
    uint64_t v46 = *(void *)(v37 + 16);
    uint64_t v48 = *v36;
    uint64_t v47 = v36[1];
    swift_bridgeObjectRetain();
    sub_1BFF2A084((unint64_t *)&v64, v46, v48, v47);
    uint64_t v49 = v36;
    LOWORD(v36) = (_WORD)v56;
    swift_bridgeObjectRelease();
    sub_1BFF26488(v42, v45, SBYTE1(v36));
    sub_1C15191FC();
    swift_release();
    swift_release();
    sub_1BFE1D244(v62, v18, v38, v60, (__int16)v36);
    uint64_t v50 = (uint64_t (*)(void))type metadata accessor for FormatOption;
    uint64_t v51 = (uint64_t)v49;
  }
  return sub_1BFEFEA48(v51, v50);
}

uint64_t sub_1BFF25EC8(uint64_t a1, long long *a2)
{
  sub_1BFF27EB4(a2, (uint64_t)v4);
  return sub_1BFF25F10(a1) & 1;
}

uint64_t sub_1BFF25F10(uint64_t a1)
{
  uint64_t v37 = a1;
  sub_1C00AB000();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - v6;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v35 - v9;
  uint64_t v11 = type metadata accessor for FormatOption();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  MEMORY[0x1F4188790](v13);
  uint64_t v36 = (uint64_t)&v35 - v16;
  uint64_t v18 = *(void *)v1;
  uint64_t v17 = *(void *)(v1 + 8);
  uint64_t v19 = *(void *)(v1 + 16);
  uint64_t v20 = *(void *)(v1 + 24);
  int v21 = *(__int16 *)(v1 + 32);
  if (v21 < 0)
  {
    uint64_t v35 = v15;
    uint64_t v36 = v14;
    swift_bridgeObjectRetain();
    unint64_t v23 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if ((v19 & 0x100) == 0)
    {
      FormatOptionCollection.subscript.getter(v18, v17, (uint64_t)v7);
      sub_1BFE1D244(v18, v17, v19, v20, v21);
      if ((*v23)(v7, 1, v36) == 1)
      {
        sub_1BFEFEA48((uint64_t)v7, (uint64_t (*)(void))sub_1C00AB000);
      }
      else
      {
        uint64_t v27 = (uint64_t)v7;
        uint64_t v28 = v35;
        sub_1C00AB068(v27, v35);
        uint64_t v39 = *(void *)(v28 + 16);
        FormatOptionValue.type.getter(&v38);
        LOBYTE(v39) = v19;
        uint64_t v29 = FormatOptionType.rawValue.getter();
        uint64_t v31 = v30;
        if (v29 == FormatOptionType.rawValue.getter() && v31 == v32)
        {
          swift_bridgeObjectRelease_n();
          sub_1BFEFEA48(v35, (uint64_t (*)(void))type metadata accessor for FormatOption);
          char v34 = 1;
          return v34 & 1;
        }
        char v33 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFEFEA48(v35, (uint64_t (*)(void))type metadata accessor for FormatOption);
        if (v33)
        {
          char v34 = 1;
          return v34 & 1;
        }
      }
      goto LABEL_9;
    }
    FormatOptionCollection.subscript.getter(v18, v17, (uint64_t)v4);
    sub_1BFE1D244(v18, v17, v19, v20, v21);
    char v34 = (*v23)(v4, 1, v36) == 1;
    sub_1BFEFEA48((uint64_t)v4, (uint64_t (*)(void))sub_1C00AB000);
  }
  else
  {
    uint64_t v22 = v14;
    sub_1BFF27F3C(v18, v17, v19, v20, v21);
    swift_bridgeObjectRetain();
    FormatOptionCollection.subscript.getter(v18, v17, (uint64_t)v10);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v22) == 1)
    {
      sub_1BFE1D244(v18, v17, v19, v20, v21);
      sub_1BFEFEA48((uint64_t)v10, (uint64_t (*)(void))sub_1C00AB000);
LABEL_9:
      char v34 = 0;
      return v34 & 1;
    }
    uint64_t v24 = v36;
    sub_1C00AB068((uint64_t)v10, v36);
    swift_retain();
    sub_1BFF28A20(v37, (unint64_t *)&v39);
    swift_release();
    uint64_t v25 = v39;
    sub_1BFF27F28(v19, v20, v21 & 1);
    sub_1BFF26E98(v37, v19, v20, v21 & 1, (uint64_t)&OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options, (uint64_t (*)(uint64_t, uint64_t, __n128))sub_1BFF28A20, &v39);
    sub_1BFE1D230(v19, v20, v21 & 1);
    char v34 = sub_1BFF26488(v25, v39, SBYTE1(v21));
    sub_1BFE1D244(v18, v17, v19, v20, v21);
    sub_1BFEFEA48(v24, (uint64_t (*)(void))type metadata accessor for FormatOption);
    swift_release();
    swift_release();
  }
  return v34 & 1;
}

uint64_t sub_1BFF26488(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v11 = a1;
  uint64_t v10 = a2;
  switch(a3)
  {
    case 1:
    case 7:
      char v4 = static FormatOptionValue.== infix(_:_:)(&v11, (unint64_t *)&v10);
      goto LABEL_9;
    case 2:
    case 8:
      char v3 = static FormatOptionValue.< infix(_:_:)(&v11, (unint64_t *)&v10);
      return v3 & 1;
    case 3:
    case 9:
      uint64_t v8 = a2;
      uint64_t v9 = a1;
      uint64_t v5 = &v8;
      uint64_t v6 = (unint64_t *)&v9;
      goto LABEL_8;
    case 4:
    case 10:
      uint64_t v8 = a2;
      uint64_t v9 = a1;
      char v3 = static FormatOptionValue.< infix(_:_:)(&v8, (unint64_t *)&v9);
      return v3 & 1;
    case 5:
    case 11:
      uint64_t v8 = a2;
      uint64_t v9 = a1;
      uint64_t v5 = &v9;
      uint64_t v6 = (unint64_t *)&v8;
LABEL_8:
      char v4 = static FormatOptionValue.< infix(_:_:)(v5, v6);
LABEL_9:
      char v3 = v4 ^ 1;
      break;
    default:
      char v3 = static FormatOptionValue.== infix(_:_:)(&v11, (unint64_t *)&v10);
      break;
  }
  return v3 & 1;
}

uint64_t static FormatOptionValue.== infix(_:_:)(uint64_t *a1, unint64_t *a2)
{
  sub_1BFF26C28(0, (unint64_t *)&qword_1EB876928, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v48 - v8;
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB876930, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = *a1;
  unint64_t v17 = *a2;
  unint64_t v18 = (unint64_t)*a1 >> 60;
  switch((int)v18)
  {
    case 0:
      if (v17 >> 60) {
        goto LABEL_37;
      }
      char v19 = *(unsigned char *)(v16 + 16) ^ *(unsigned char *)(v17 + 16) ^ 1;
      return v19 & 1;
    case 1:
      uint64_t v25 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v26 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      if (v17 >> 60 != 1)
      {
        if (v17 >> 60 != 5) {
          goto LABEL_37;
        }
        if (v25 == *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
          && v26 == *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x18))
        {
          char v19 = 1;
          goto LABEL_71;
        }
        goto LABEL_20;
      }
      uint64_t v44 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v45 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      if (*(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10) != *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
        || *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x18) != *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x18))
      {
        char v19 = 0;
        if ((sub_1C1520A9C() & 1) == 0) {
          return v19 & 1;
        }
      }
      if (v25 == v44 && v26 == v45) {
        goto LABEL_67;
      }
      goto LABEL_64;
    case 2:
      if (v17 >> 60 != 2) {
        goto LABEL_37;
      }
      uint64_t v20 = swift_projectBox();
      uint64_t v21 = swift_projectBox();
      sub_1BFFDA208(v20, (uint64_t)v15, (uint64_t)&qword_1EB876930, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26D60);
      sub_1BFFDA208(v21, (uint64_t)v12, (uint64_t)&qword_1EB876930, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26D60);
      swift_retain();
      swift_retain();
      char v19 = sub_1C15162AC();
      sub_1BFFDA0C8((uint64_t)v12, (uint64_t)&qword_1EB876930, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void))sub_1BFF26D60);
      sub_1BFFDA0C8((uint64_t)v15, (uint64_t)&qword_1EB876930, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void))sub_1BFF26D60);
      goto LABEL_43;
    case 3:
      if (v17 >> 60 != 3) {
        goto LABEL_37;
      }
      char v19 = *(double *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10) == *(double *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      return v19 & 1;
    case 4:
      if (v17 >> 60 != 4) {
        goto LABEL_37;
      }
      char v19 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10) == *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      return v19 & 1;
    case 5:
      uint64_t v22 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v23 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (v17 >> 60 == 1)
      {
        if (v22 == *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x20)
          && v23 == *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x28))
        {
          char v19 = 1;
        }
        else
        {
LABEL_20:
          char v19 = sub_1C1520A9C();
        }
LABEL_71:
        swift_retain();
        goto LABEL_48;
      }
      if (v17 >> 60 != 5)
      {
LABEL_37:
        if (v17 >> 60 == 9)
        {
          if (v18 == 9)
          {
            unint64_t v40 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v41 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
            unint64_t v48 = v40;
            uint64_t v49 = v41;
            swift_retain();
            swift_retain();
            char v39 = static FormatAsyncImageContent.== infix(_:_:)((unint64_t *)&v49, &v48);
LABEL_42:
            char v19 = v39;
LABEL_43:
            swift_release();
LABEL_48:
            swift_release();
            return v19 & 1;
          }
        }
        else if (v17 >> 60 == 8)
        {
          unint64_t v48 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v49 = v16;
          swift_retain();
          swift_retain();
          char v39 = static FormatOptionValue.== infix(_:_:)(&v49, &v48);
          goto LABEL_42;
        }
        char v19 = 0;
        return v19 & 1;
      }
      if (v22 == *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10)
        && v23 == *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x18))
      {
LABEL_67:
        char v19 = 1;
        return v19 & 1;
      }
LABEL_64:
      return sub_1C1520A9C();
    case 6:
      if (v17 >> 60 != 6) {
        goto LABEL_37;
      }
      uint64_t v28 = swift_projectBox();
      uint64_t v29 = swift_projectBox();
      sub_1BFFDA208(v28, (uint64_t)v9, (uint64_t)&qword_1EB876928, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26C28);
      sub_1BFFDA208(v29, (uint64_t)v6, (uint64_t)&qword_1EB876928, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26C28);
      swift_retain();
      swift_retain();
      uint64_t v30 = sub_1C1515E2C();
      uint64_t v32 = v31;
      if (v30 == sub_1C1515E2C() && v32 == v33) {
        char v19 = 1;
      }
      else {
        char v19 = sub_1C1520A9C();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFFDA0C8((uint64_t)v6, (uint64_t)&qword_1EB876928, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void))sub_1BFF26C28);
      sub_1BFFDA0C8((uint64_t)v9, (uint64_t)&qword_1EB876928, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void))sub_1BFF26C28);
      swift_release();
      goto LABEL_48;
    case 7:
      if (v17 >> 60 != 7) {
        goto LABEL_37;
      }
      uint64_t v35 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v48 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v49 = v35;
      swift_retain();
      swift_retain();
      char v36 = static FormatColor.== infix(_:_:)(&v49, &v48);
      goto LABEL_47;
    case 8:
      uint64_t v37 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      if (v17 >> 60 == 8)
      {
        unint64_t v48 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v49 = v37;
        swift_retain();
      }
      else
      {
        unint64_t v48 = *a2;
        uint64_t v49 = v37;
        swift_retain();
      }
      swift_retain();
      char v36 = static FormatOptionValue.== infix(_:_:)(&v49, &v48);
      goto LABEL_47;
    case 12:
      if (v17 >> 60 != 12) {
        goto LABEL_37;
      }
      uint64_t v38 = *(void *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      unint64_t v48 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v49 = v38;
      swift_retain();
      swift_retain();
      char v36 = static FormatFont.== infix(_:_:)(&v49, &v48);
LABEL_47:
      char v19 = v36;
      swift_release();
      goto LABEL_48;
    default:
      goto LABEL_37;
  }
}

void sub_1BFF26C28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v7 = sub_1C0281748(&qword_1EB884CF0, MEMORY[0x1E4F276F0]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF26CC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v7 = sub_1BFF8772C(&qword_1EB884CF0, MEMORY[0x1E4F276F0]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF26D60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C151631C();
    uint64_t v7 = sub_1C0281748((unint64_t *)&qword_1EB884D00, MEMORY[0x1E4F27928]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF26DFC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C151631C();
    uint64_t v7 = sub_1BFF8772C((unint64_t *)&qword_1EB884D00, MEMORY[0x1E4F27928]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFF26E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t (*a6)(uint64_t, uint64_t, __n128)@<X5>, void *a7@<X8>)
{
  uint64_t v37 = a5;
  uint64_t v38 = a3;
  uint64_t v9 = v7;
  uint64_t v39 = a1;
  sub_1C00AB000();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FormatOption();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  __n128 v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (uint64_t *)((char *)&v34 - v21);
  if ((a4 & 1) == 0) {
    return a6(v39, a2, v20);
  }
  uint64_t v35 = v19;
  char v36 = a7;
  uint64_t v24 = v38;
  swift_bridgeObjectRetain();
  FormatOptionCollection.subscript.getter(a2, v24, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1BFEFEA48((uint64_t)v15, (uint64_t (*)(void))sub_1C00AB000);
    type metadata accessor for FormatLayoutError();
    sub_1C002F5C0((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    *uint64_t v25 = a2;
    v25[1] = v24;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  else
  {
    sub_1BFE1D230(a2, v24, 1);
    sub_1C00AB068((uint64_t)v15, (uint64_t)v22);
    uint64_t v27 = *v22;
    uint64_t v26 = v22[1];
    uint64_t v28 = v22[2];
    swift_bridgeObjectRetain();
    ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))a6)(&v40, v39, v28);
    if (v9)
    {
      swift_bridgeObjectRelease();
      return sub_1BFEFEA48((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatOption);
    }
    else
    {
      uint64_t v29 = v40;
      uint64_t v30 = v35;
      *uint64_t v35 = v27;
      v30[1] = v26;
      void v30[2] = v29;
      v30[3] = 1;
      uint64_t v31 = (char *)v30 + *(int *)(v16 + 28);
      uint64_t v32 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
      sub_1BFEFEA48((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v33 = v30[2];
      swift_retain();
      uint64_t result = sub_1BFEFEA48((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for FormatOption);
      *char v36 = v33;
    }
  }
  return result;
}

uint64_t sub_1BFF271F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(swift_unownedRetainStrong() + 32);
  swift_bridgeObjectRetain();
  swift_release();
  if (v4 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      uint64_t v6 = 4;
      do
      {
        uint64_t v7 = v6 - 4;
        if ((v4 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = MEMORY[0x1C18C7CB0](v6 - 4, v4);
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(v4 + 8 * v6);
          swift_retain();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        uint64_t v10 = swift_retain();
        uint64_t v11 = sub_1BFF273E0(v10);
        if (v12) {
          char v13 = ((uint64_t (*)(uint64_t, uint64_t))v11)(a3, a2);
        }
        else {
          char v13 = ((uint64_t (*)(uint64_t))v11)(a3);
        }
        sub_1BFF27F20();
        swift_release();
        if (v13)
        {
          swift_bridgeObjectRelease();
          uint64_t v15 = (uint64_t *)(v8 + 24);
          goto LABEL_17;
        }
        swift_release();
        ++v6;
      }
      while (v9 != v5);
    }
  }
  swift_bridgeObjectRelease();
  swift_unownedRetainStrong();
  uint64_t v14 = *(void *)(a1 + 40);
  swift_retain();
  swift_release();
  if (!v14) {
    return 0;
  }
  uint64_t v15 = (uint64_t *)(v14 + 16);
LABEL_17:
  swift_beginAccess();
  uint64_t v16 = *v15;
  swift_bridgeObjectRetain();
  swift_release();
  return v16;
}

uint64_t (*sub_1BFF273E0(uint64_t a1))()
{
  uint64_t v2 = *v1;
  switch((unint64_t)*v1 >> 60)
  {
    case 1uLL:
      sub_1BFF27EB4((long long *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 16), (uint64_t)v106);
      sub_1BFF27EB4(v106, (uint64_t)&v107);
      __int16 v41 = *(_WORD *)&v108[16] & 0x7FFF;
      swift_bridgeObjectRetain();
      *(_WORD *)&v108[16] = v41;
      sub_1C0884388((uint64_t)v106, (void (*)(void, void, void, void, void))sub_1BFF27F3C);
      sub_1C0884388((uint64_t)v106, (void (*)(void, void, void, void, void))sub_1BFF27F3C);
      sub_1BFF27ECC();
      char v42 = sub_1C151FF0C();
      swift_bridgeObjectRelease();
      uint64_t v43 = swift_allocObject();
      sub_1BFF27EB4(v106, v43 + 16);
      sub_1C0884388((uint64_t)v106, (void (*)(void, void, void, void, void))sub_1BFE1D244);
      if (v42) {
        unint64_t v4 = (uint64_t (*)())sub_1C1496F58;
      }
      else {
        unint64_t v4 = (uint64_t (*)())sub_1BFF27FA8;
      }
      break;
    case 2uLL:
      uint64_t v5 = v2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v6 = *(void *)(v5 + 16);
      char v7 = *(unsigned char *)(v5 + 24);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v6;
      *(unsigned char *)(v8 + 24) = v7;
      unint64_t v4 = (uint64_t (*)())sub_1BFF840B8;
      break;
    case 3uLL:
      uint64_t v44 = v2 & 0xFFFFFFFFFFFFFFFLL;
      long long v45 = *(_OWORD *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v107 = *(_OWORD *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *(_OWORD *)int v108 = v45;
      *(void *)&v108[16] = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v46 = swift_allocObject();
      uint64_t v47 = *(void *)(v44 + 48);
      long long v48 = *(_OWORD *)(v44 + 32);
      *(_OWORD *)(v46 + 16) = *(_OWORD *)(v44 + 16);
      *(_OWORD *)(v46 + 32) = v48;
      *(void *)(v46 + 48) = v47;
      sub_1BFF6C898((uint64_t)&v107);
      unint64_t v4 = (uint64_t (*)())sub_1BFF6D9F0;
      break;
    case 4uLL:
      uint64_t v9 = v2 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v10 = *(void *)(v9 + 16);
      unint64_t v11 = *(void *)(v9 + 24);
      unint64_t v12 = *(void *)(v9 + 32);
      uint64_t v13 = *(void *)(v9 + 40);
      uint64_t v14 = *(void *)(v9 + 48);
      uint64_t v15 = *(void *)(v9 + 56);
      unsigned int v16 = *(unsigned __int8 *)(v9 + 122);
      unsigned int v17 = *(unsigned __int16 *)(v9 + 120);
      switch((v16 >> 2) & 4 | (v17 >> 14))
      {
        case 1u:
          uint64_t v105 = *(void *)(v9 + 104);
          unint64_t v91 = *(void *)(v9 + 88);
          uint64_t v102 = *(void *)(v9 + 96);
          uint64_t v103 = *(void *)(v9 + 112);
          uint64_t v92 = *(void *)(v9 + 80);
          uint64_t v93 = *(void *)(v9 + 64);
          unsigned int v104 = (v17 | (v16 << 16)) & 0xFFEF3FFF;
          uint64_t v101 = *(void *)(v9 + 72);
          uint64_t v94 = swift_allocObject();
          *(void *)(v94 + 16) = v10;
          *(void *)(v94 + 24) = v11;
          *(void *)(v94 + 32) = v12;
          *(void *)(v94 + 40) = v13;
          *(void *)(v94 + 48) = v14;
          *(void *)(v94 + 56) = v15;
          *(_WORD *)(v94 + 64) = v93;
          *(void *)(v94 + 72) = v101;
          *(void *)(v94 + 80) = v92;
          *(void *)(v94 + 88) = v91;
          *(void *)(v94 + 96) = v102;
          *(void *)(v94 + 104) = v105;
          *(void *)(v94 + 112) = v103;
          *(unsigned char *)(v94 + 122) = BYTE2(v104);
          *(_WORD *)(v94 + 120) = v104;
          sub_1BFF2A99C(v10, v11, v12, v13, v14, v15, v93, SBYTE1(v93));
          sub_1BFF2B090(v101, v92, v91, v102, v105, v103, v104);
          unint64_t v4 = (uint64_t (*)())sub_1BFF35F3C;
          break;
        case 2u:
          uint64_t v95 = swift_allocObject();
          *(void *)(v95 + 16) = v10;
          *(_WORD *)(v95 + 24) = v11;
          *(unsigned char *)(v95 + 26) = BYTE2(v11) & 1;
          unint64_t v4 = sub_1BFF46750;
          break;
        case 3u:
          uint64_t v96 = swift_allocObject();
          *(unsigned char *)(v96 + 16) = v10 & 1;
          *(unsigned char *)(v96 + 17) = BYTE1(v10) & 1;
          unint64_t v4 = (uint64_t (*)())sub_1C0068010;
          break;
        case 4u:
          *(unsigned char *)(swift_allocObject() + 16) = v10 & 1;
          unint64_t v4 = (uint64_t (*)())sub_1BFF86278;
          break;
        case 5u:
          uint64_t v97 = swift_allocObject();
          *(void *)(v97 + 16) = v10;
          *(void *)(v97 + 24) = v11;
          *(void *)(v97 + 32) = v12;
          *(_WORD *)(v97 + 40) = v13;
          sub_1BFE86E48(v10, v11, v12, v13);
          unint64_t v4 = (uint64_t (*)())sub_1C001C8D8;
          break;
        case 6u:
          uint64_t v98 = (void *)swift_allocObject();
          v98[2] = v10;
          v98[3] = v11;
          v98[4] = v12;
          sub_1BFF58F10(v10);
          sub_1BFF8401C(v11, v12);
          unint64_t v4 = (uint64_t (*)())sub_1C1496D94;
          break;
        case 7u:
          uint64_t v99 = swift_allocObject();
          *(unsigned char *)(v99 + 16) = v10;
          *(void *)(v99 + 24) = v11;
          *(void *)(v99 + 32) = v12;
          sub_1C05D8AD4(v11);
          unint64_t v4 = (uint64_t (*)())sub_1C1496D38;
          break;
        default:
          uint64_t v18 = swift_allocObject();
          *(void *)(v18 + 16) = v10;
          *(void *)(v18 + 24) = v11;
          *(void *)(v18 + 32) = v12;
          *(void *)(v18 + 40) = v13;
          *(void *)(v18 + 48) = v14;
          *(unsigned char *)(v18 + 56) = v15;
          *(unsigned char *)(v18 + 57) = BYTE1(v15) & 1;
          sub_1BFF2B584(v10, v11, v12, v13, v14, v15);
          unint64_t v4 = (uint64_t (*)())sub_1BFF43C40;
          break;
      }
      break;
    case 5uLL:
      uint64_t v49 = v2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v51 = *(void *)(v49 + 16);
      uint64_t v50 = *(void *)(v49 + 24);
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v51;
      *(void *)(v52 + 24) = v50;
      swift_bridgeObjectRetain();
      unint64_t v4 = (uint64_t (*)())sub_1BFF2F154;
      break;
    case 6uLL:
      uint64_t v53 = v2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v55 = *(void *)(v53 + 16);
      uint64_t v54 = *(void *)(v53 + 24);
      uint64_t v56 = swift_allocObject();
      *(void *)(v56 + 16) = v55;
      *(void *)(v56 + 24) = v54;
      swift_bridgeObjectRetain();
      unint64_t v4 = (uint64_t (*)())sub_1BFF363F4;
      break;
    case 7uLL:
      *(void *)&long long v107 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v57 = swift_retain();
      uint64_t v58 = sub_1BFF273E0(v57);
      uint64_t v60 = v59;
      if (v61)
      {
        uint64_t v85 = swift_allocObject();
        *(void *)(v85 + 16) = v58;
        *(void *)(v85 + 24) = v60;
        swift_release();
        unint64_t v4 = (uint64_t (*)())sub_1BFE0FB90;
      }
      else
      {
        uint64_t v62 = swift_allocObject();
        *(void *)(v62 + 16) = v58;
        *(void *)(v62 + 24) = v60;
        swift_release();
        unint64_t v4 = (uint64_t (*)())sub_1BFF7C018;
      }
      break;
    case 8uLL:
      uint64_t v63 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v64 = sub_1BFF273E0(a1);
      uint64_t v66 = v65;
      char v68 = v67;
      *(void *)&long long v107 = v63;
      uint64_t v70 = sub_1BFF273E0(v64);
      uint64_t v72 = v71;
      if (v68)
      {
        if (v69)
        {
          int v90 = (void *)swift_allocObject();
          v90[2] = v64;
          v90[3] = v66;
          v90[4] = v70;
          v90[5] = v72;
          unint64_t v4 = (uint64_t (*)())sub_1C1496C90;
        }
        else
        {
          uint64_t v86 = (void *)swift_allocObject();
          v86[2] = v64;
          v86[3] = v66;
          v86[4] = v70;
          v86[5] = v72;
          unint64_t v4 = (uint64_t (*)())sub_1C1496CA0;
        }
      }
      else if (v69)
      {
        uint64_t v89 = (void *)swift_allocObject();
        v89[2] = v64;
        v89[3] = v66;
        v89[4] = v70;
        v89[5] = v72;
        unint64_t v4 = (uint64_t (*)())sub_1BFF51F24;
      }
      else
      {
        uint64_t v73 = (void *)swift_allocObject();
        v73[2] = v64;
        v73[3] = v66;
        v73[4] = v70;
        v73[5] = v72;
        unint64_t v4 = (uint64_t (*)())sub_1BFF2B0D0;
      }
      break;
    case 9uLL:
      uint64_t v19 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v20 = sub_1BFF273E0(a1);
      uint64_t v22 = v21;
      char v24 = v23;
      *(void *)&long long v107 = v19;
      uint64_t v26 = sub_1BFF273E0(v20);
      uint64_t v28 = v27;
      if (v24)
      {
        if (v25)
        {
          uint64_t v88 = (void *)swift_allocObject();
          v88[2] = v20;
          v88[3] = v22;
          v88[4] = v26;
          v88[5] = v28;
          unint64_t v4 = (uint64_t (*)())sub_1C1496C5C;
        }
        else
        {
          uint64_t v84 = (void *)swift_allocObject();
          v84[2] = v20;
          v84[3] = v22;
          uint64_t v84[4] = v26;
          v84[5] = v28;
          unint64_t v4 = (uint64_t (*)())sub_1C1496C6C;
        }
      }
      else if (v25)
      {
        uint64_t v87 = (void *)swift_allocObject();
        v87[2] = v20;
        v87[3] = v22;
        v87[4] = v26;
        v87[5] = v28;
        unint64_t v4 = (uint64_t (*)())sub_1C1496C7C;
      }
      else
      {
        uint64_t v29 = (void *)swift_allocObject();
        v29[2] = v20;
        v29[3] = v22;
        v29[4] = v26;
        uint64_t v29[5] = v28;
        unint64_t v4 = (uint64_t (*)())sub_1BFF2F850;
      }
      break;
    case 0xAuLL:
      uint64_t v74 = v2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v75 = *(void *)(v74 + 16);
      __int16 v76 = *(_WORD *)(v74 + 24);
      char v77 = *(unsigned char *)(v74 + 26);
      uint64_t v78 = swift_allocObject();
      *(void *)(v78 + 16) = v75;
      *(_WORD *)(v78 + 24) = v76;
      *(unsigned char *)(v78 + 26) = v77;
      unint64_t v4 = sub_1BFF46750;
      break;
    case 0xBuLL:
      char v30 = *(unsigned char *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *(unsigned char *)(swift_allocObject() + 16) = v30;
      unint64_t v4 = sub_1C1496C40;
      break;
    case 0xCuLL:
      uint64_t v31 = v2 & 0xFFFFFFFFFFFFFFFLL;
      long long v32 = *(_OWORD *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v107 = *(_OWORD *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      *(_OWORD *)int v108 = v32;
      *(_OWORD *)&v108[9] = *(_OWORD *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x29);
      uint64_t v33 = swift_allocObject();
      uint64_t v34 = *(void *)(v31 + 48);
      long long v36 = *(_OWORD *)(v31 + 16);
      long long v35 = *(_OWORD *)(v31 + 32);
      *(unsigned char *)(v33 + 56) = *(unsigned char *)(v31 + 56);
      *(void *)(v33 + 48) = v34;
      *(_OWORD *)(v33 + 16) = v36;
      *(_OWORD *)(v33 + 32) = v35;
      sub_1C0884264((uint64_t)&v107);
      unint64_t v4 = (uint64_t (*)())sub_1C1496C28;
      break;
    case 0xDuLL:
      uint64_t v79 = (void *)(v2 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v81 = v79[2];
      uint64_t v80 = v79[3];
      uint64_t v82 = v79[4];
      char v83 = (void *)swift_allocObject();
      v83[2] = v81;
      v83[3] = v80;
      v83[4] = v82;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v4 = (uint64_t (*)())sub_1C003007C;
      break;
    case 0xEuLL:
      uint64_t v37 = v2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v39 = *(void *)(v37 + 16);
      uint64_t v38 = *(void *)(v37 + 24);
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v39;
      *(void *)(v40 + 24) = v38;
      swift_bridgeObjectRetain();
      unint64_t v4 = (uint64_t (*)())sub_1BFF55EC0;
      break;
    default:
      char v3 = *(unsigned char *)(v2 + 16);
      *(unsigned char *)(swift_allocObject() + 16) = v3;
      unint64_t v4 = (uint64_t (*)())sub_1BFE0FBC8;
      break;
  }
  return v4;
}

uint64_t sub_1BFF27EB4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_WORD *)(a2 + 32) = *((_WORD *)a1 + 16);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_1BFF27ECC()
{
  unint64_t result = qword_1EB879BA0;
  if (!qword_1EB879BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879BA0);
  }
  return result;
}

uint64_t sub_1BFF27F20()
{
  return swift_release();
}

uint64_t sub_1BFF27F28(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_1BFF27F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  if (a5 < 0)
  {
    return swift_bridgeObjectRetain();
  }
  else
  {
    char v8 = a5 & 1;
    swift_bridgeObjectRetain();
    return sub_1BFF27F28(a3, a4, v8);
  }
}

uint64_t sub_1BFF27FA8(uint64_t a1)
{
  return sub_1BFF25EC8(a1, (long long *)(v1 + 16));
}

uint64_t sub_1BFF27FB0@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v79 = a2;
  *(void *)&long long v78 = a1;
  uint64_t v2 = sub_1C1515FDC();
  *(void *)&long long v77 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2918C();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF29220();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v13);
  unsigned int v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(v15 >> 60)
  {
    case 1uLL:
      long long v23 = *(_OWORD *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v84 = *(_OWORD *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v85 = v23;
      uint64_t v86 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      unint64_t v24 = v15;
      sub_1BFF29920((uint64_t)&v81);
      uint64_t v25 = v82;
      long long v77 = v83;
      long long v78 = v81;
      uint64_t v26 = swift_allocObject();
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v78;
      *(void *)(v27 + 32) = v25;
      *(_OWORD *)(v27 + 40) = v77;
      uint64_t v28 = v27 | 0x1000000000000000;
      *(void *)(v26 + 16) = v24;
      goto LABEL_7;
    case 2uLL:
      unint64_t v76 = v15;
      uint64_t v29 = swift_projectBox();
      sub_1C0E5720C(v29, (uint64_t)v17, (uint64_t (*)(void))sub_1BFF29220);
      sub_1C0270B7C(v12);
      uint64_t v30 = swift_allocObject();
      uint64_t v31 = swift_allocBox();
      uint64_t v33 = v32;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v32, v12, v9);
      *(void *)(v33 + *(int *)(v14 + 36)) = MEMORY[0x1E4FBC860];
      uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
      swift_retain();
      v34(v12, v9);
      uint64_t result = sub_1C0E570EC((uint64_t)v17, (uint64_t (*)(void))sub_1BFF29220);
      *(void *)(v30 + 16) = v76;
      *(void *)(v30 + 24) = v31 | 0x2000000000000000;
      unint64_t v36 = v30 | 0x8000000000000000;
      goto LABEL_13;
    case 3uLL:
      unint64_t v37 = v15;
      sub_1C027145C(v78, *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x18));
      uint64_t v39 = v38;
      uint64_t v26 = swift_allocObject();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v39;
      *(void *)(v40 + 24) = MEMORY[0x1E4FBC860];
      uint64_t v28 = v40 | 0x3000000000000000;
      *(void *)(v26 + 16) = v37;
LABEL_7:
      *(void *)(v26 + 24) = v28;
      unint64_t v41 = v26 | 0x8000000000000000;
      goto LABEL_10;
    case 4uLL:
      unint64_t v42 = v15;
      uint64_t v43 = sub_1BFFB5A18(v78, *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10), *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x18));
      uint64_t v44 = swift_allocObject();
      uint64_t v45 = swift_allocObject();
      uint64_t v46 = MEMORY[0x1E4FBC860];
      *(void *)(v45 + 16) = v43;
      *(void *)(v45 + 24) = v46;
      *(void *)(v44 + 16) = v42;
      *(void *)(v44 + 24) = v45 | 0x4000000000000000;
      unint64_t v41 = v44 | 0x8000000000000000;
      goto LABEL_10;
    case 5uLL:
      unint64_t v47 = v15;
      uint64_t v48 = sub_1BFF582FC(v78, *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10), *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x18), *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x20));
      uint64_t v50 = v49;
      uint64_t v51 = swift_allocObject();
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v48;
      *(void *)(v52 + 24) = v50;
      *(void *)(v52 + 32) = MEMORY[0x1E4FBC860];
      *(void *)(v51 + 16) = v47;
      *(void *)(v51 + 24) = v52 | 0x5000000000000000;
      unint64_t v41 = v51 | 0x8000000000000000;
LABEL_10:
      *uint64_t v79 = v41;
      return swift_retain();
    case 6uLL:
      uint64_t v75 = v15 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v76 = v15;
      uint64_t v53 = swift_projectBox();
      sub_1C0E5720C(v53, (uint64_t)v8, (uint64_t (*)(void))sub_1BFF2918C);
      sub_1C00386C8(v4);
      uint64_t v54 = swift_allocObject();
      uint64_t v55 = swift_allocBox();
      uint64_t v57 = v56;
      uint64_t v58 = v77;
      (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v56, v4, v2);
      *(void *)(v57 + *(int *)(v6 + 36)) = MEMORY[0x1E4FBC860];
      uint64_t v59 = *(void (**)(char *, uint64_t))(v58 + 8);
      swift_retain();
      v59(v4, v2);
      uint64_t result = sub_1C0E570EC((uint64_t)v8, (uint64_t (*)(void))sub_1BFF2918C);
      *(void *)(v54 + 16) = v76;
      *(void *)(v54 + 24) = v55 | 0x6000000000000000;
      unint64_t v36 = v54 | 0x8000000000000000;
LABEL_13:
      *uint64_t v79 = v36;
      return result;
    case 7uLL:
      unint64_t v60 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v61 = swift_allocObject();
      uint64_t v62 = v80;
      uint64_t result = sub_1C027A3C0(v78, v60, (uint64_t *)(v61 + 16));
      if (v62) {
        return swift_deallocUninitializedObject();
      }
      unint64_t v63 = v61 | 0x7000000000000000;
      uint64_t v64 = v79;
      goto LABEL_23;
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xDuLL:
      *uint64_t v79 = v15;
      return swift_retain();
    case 0xCuLL:
      unint64_t v65 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v66 = swift_allocObject();
      uint64_t v67 = v66;
      if (v65 >> 61 == 3)
      {
        uint64_t v68 = v65 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v69 = *(void *)((v65 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v70 = *(void *)(v68 + 24);
        uint64_t v71 = *(void *)(v68 + 32);
        char v72 = *(unsigned char *)(v68 + 40);
        sub_1BFF67F78(v69, v70, v71, v72);
        uint64_t v73 = v80;
        sub_1C021D6F0(v78, v69, v70, v71, v72, (uint64_t *)&v81);
        if (v73)
        {
          sub_1BFF05CCC(v69, v70, v71, v72);
          return swift_deallocUninitializedObject();
        }
        uint64_t v74 = v81;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v69;
        *(void *)(result + 24) = v70;
        *(void *)(result + 32) = v71;
        *(unsigned char *)(result + 40) = v72;
        *(void *)(result + 48) = v74;
        *(void *)(v67 + 16) = result | 0x8000000000000000;
      }
      else
      {
        *(void *)(v66 + 16) = v65;
        uint64_t result = swift_retain();
      }
      uint64_t v64 = v79;
      unint64_t v63 = v67 | 0xC000000000000000;
LABEL_23:
      *uint64_t v64 = v63;
      return result;
    default:
      unint64_t v18 = v15;
      char v19 = sub_1BFF2B030(v78, *(unsigned __int8 *)(v15 + 16), *(void *)(v15 + 24));
      uint64_t v20 = swift_allocObject();
      uint64_t v21 = swift_allocObject();
      uint64_t v22 = MEMORY[0x1E4FBC860];
      *(unsigned char *)(v21 + 16) = v19 & 1;
      *(void *)(v21 + 24) = v22;
      *(void *)(v20 + 16) = v18;
      *(void *)(v20 + 24) = v21;
      *uint64_t v79 = v20 | 0x8000000000000000;
      return swift_retain();
  }
}

void sub_1BFF2871C(unint64_t *a1, uint64_t a2)
{
  sub_1BFF2918C();
  MEMORY[0x1F4188790](v6 - 8);
  char v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF29220();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)(a2 + 80);
  v24[4] = *(_OWORD *)(a2 + 64);
  v24[5] = v12;
  uint64_t v25 = *(void *)(a2 + 96);
  long long v13 = *(_OWORD *)(a2 + 16);
  v24[0] = *(_OWORD *)a2;
  v24[1] = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  uint64_t v15 = *v2;
  unint64_t v16 = (unint64_t)*v2 >> 60;
  v24[2] = *(_OWORD *)(a2 + 32);
  v24[3] = v14;
  switch(v16)
  {
    case 2uLL:
      uint64_t v17 = swift_projectBox();
      sub_1BFF83CC4(v17, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF29220);
      sub_1C05DDC60((uint64_t)v11, (uint64_t (*)(void))sub_1BFF29220);
      break;
    case 6uLL:
      uint64_t v18 = swift_projectBox();
      sub_1BFF83CC4(v18, (uint64_t)v8, (uint64_t (*)(void))sub_1BFF2918C);
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))sub_1BFF2918C);
      break;
    case 7uLL:
      uint64_t v26 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFF79540((uint64_t)a1, a2);
      break;
    case 8uLL:
      uint64_t v19 = v15 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v20 = *(void *)(v19 + 24);
      uint64_t v26 = *(void *)(v19 + 16);
      swift_retain();
      swift_retain();
      sub_1BFF2871C(a1, a2);
      if (!v3)
      {
        uint64_t v26 = v20;
        sub_1BFF2871C(a1, a2);
      }
      swift_release();
      swift_release();
      break;
    case 9uLL:
      uint64_t v26 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFF5B7F4(a1, a2);
      break;
    case 0xAuLL:
      uint64_t v26 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1C05D3050((uint64_t)a1, a2);
      break;
    case 0xCuLL:
      uint64_t v26 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFF79C34(a1, (uint64_t *)a2);
      break;
    case 0xDuLL:
      uint64_t v21 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      if ((v21 & 0x8000000000000000) == 0)
      {
        uint64_t v22 = *(void *)(v21 + 16);
        uint64_t v23 = *(void *)(v21 + 24);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C00389F8((uint64_t)a1, (uint64_t)v24, v22, v23);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      break;
    default:
      return;
  }
}

uint64_t sub_1BFF28A20@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v79 = a2;
  *(void *)&long long v78 = a1;
  uint64_t v2 = sub_1C1515FDC();
  *(void *)&long long v77 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2918C();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v5);
  char v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C151631C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF29220();
  uint64_t v14 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(v15 >> 60)
  {
    case 1uLL:
      long long v23 = *(_OWORD *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      long long v84 = *(_OWORD *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      long long v85 = v23;
      uint64_t v86 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      unint64_t v24 = v15;
      sub_1BFF29920((uint64_t)&v81);
      uint64_t v25 = v82;
      long long v77 = v83;
      long long v78 = v81;
      uint64_t v26 = swift_allocObject();
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = v78;
      *(void *)(v27 + 32) = v25;
      *(_OWORD *)(v27 + 40) = v77;
      uint64_t v28 = v27 | 0x1000000000000000;
      *(void *)(v26 + 16) = v24;
      goto LABEL_7;
    case 2uLL:
      unint64_t v76 = v15;
      uint64_t v29 = swift_projectBox();
      sub_1C0E5720C(v29, (uint64_t)v17, (uint64_t (*)(void))sub_1BFF29220);
      sub_1C026DF08(v12);
      uint64_t v30 = swift_allocObject();
      uint64_t v31 = swift_allocBox();
      uint64_t v33 = v32;
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v32, v12, v9);
      *(void *)(v33 + *(int *)(v14 + 36)) = MEMORY[0x1E4FBC860];
      uint64_t v34 = *(void (**)(char *, uint64_t))(v10 + 8);
      swift_retain();
      v34(v12, v9);
      uint64_t result = sub_1C0E570EC((uint64_t)v17, (uint64_t (*)(void))sub_1BFF29220);
      *(void *)(v30 + 16) = v76;
      *(void *)(v30 + 24) = v31 | 0x2000000000000000;
      unint64_t v36 = v30 | 0x8000000000000000;
      goto LABEL_13;
    case 3uLL:
      unint64_t v37 = v15;
      sub_1C026DF68(v78, *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x18));
      uint64_t v39 = v38;
      uint64_t v26 = swift_allocObject();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v39;
      *(void *)(v40 + 24) = MEMORY[0x1E4FBC860];
      uint64_t v28 = v40 | 0x3000000000000000;
      *(void *)(v26 + 16) = v37;
LABEL_7:
      *(void *)(v26 + 24) = v28;
      unint64_t v41 = v26 | 0x8000000000000000;
      goto LABEL_10;
    case 4uLL:
      unint64_t v42 = v15;
      uint64_t v43 = sub_1C026DFC8(v78, *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10), *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x18));
      uint64_t v44 = swift_allocObject();
      uint64_t v45 = swift_allocObject();
      uint64_t v46 = MEMORY[0x1E4FBC860];
      *(void *)(v45 + 16) = v43;
      *(void *)(v45 + 24) = v46;
      *(void *)(v44 + 16) = v42;
      *(void *)(v44 + 24) = v45 | 0x4000000000000000;
      unint64_t v41 = v44 | 0x8000000000000000;
      goto LABEL_10;
    case 5uLL:
      unint64_t v47 = v15;
      uint64_t v48 = sub_1BFF2F8B8(v78, *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10), *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x18), *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x20));
      uint64_t v50 = v49;
      uint64_t v51 = swift_allocObject();
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v48;
      *(void *)(v52 + 24) = v50;
      *(void *)(v52 + 32) = MEMORY[0x1E4FBC860];
      *(void *)(v51 + 16) = v47;
      *(void *)(v51 + 24) = v52 | 0x5000000000000000;
      unint64_t v41 = v51 | 0x8000000000000000;
LABEL_10:
      *uint64_t v79 = v41;
      return swift_retain();
    case 6uLL:
      uint64_t v75 = v15 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v76 = v15;
      uint64_t v53 = swift_projectBox();
      sub_1C0E5720C(v53, (uint64_t)v8, (uint64_t (*)(void))sub_1BFF2918C);
      sub_1BFFE6BB8(v4);
      uint64_t v54 = swift_allocObject();
      uint64_t v55 = swift_allocBox();
      uint64_t v57 = v56;
      uint64_t v58 = v77;
      (*(void (**)(uint64_t, char *, uint64_t))(v77 + 16))(v56, v4, v2);
      *(void *)(v57 + *(int *)(v6 + 36)) = MEMORY[0x1E4FBC860];
      uint64_t v59 = *(void (**)(char *, uint64_t))(v58 + 8);
      swift_retain();
      v59(v4, v2);
      uint64_t result = sub_1C0E570EC((uint64_t)v8, (uint64_t (*)(void))sub_1BFF2918C);
      *(void *)(v54 + 16) = v76;
      *(void *)(v54 + 24) = v55 | 0x6000000000000000;
      unint64_t v36 = v54 | 0x8000000000000000;
LABEL_13:
      *uint64_t v79 = v36;
      return result;
    case 7uLL:
      unint64_t v60 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v61 = swift_allocObject();
      uint64_t v62 = v80;
      uint64_t result = sub_1BFF64090(v78, v60, (uint64_t *)(v61 + 16));
      if (v62) {
        return swift_deallocUninitializedObject();
      }
      unint64_t v63 = v61 | 0x7000000000000000;
      uint64_t v64 = v79;
      goto LABEL_23;
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xDuLL:
      *uint64_t v79 = v15;
      return swift_retain();
    case 0xCuLL:
      unint64_t v65 = *(void *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v66 = swift_allocObject();
      uint64_t v67 = v66;
      if (v65 >> 61 == 3)
      {
        uint64_t v68 = v65 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v69 = *(void *)((v65 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v70 = *(void *)(v68 + 24);
        uint64_t v71 = *(void *)(v68 + 32);
        char v72 = *(unsigned char *)(v68 + 40);
        sub_1BFF67F78(v69, v70, v71, v72);
        uint64_t v73 = v80;
        sub_1C021CDF8(v78, v69, v70, v71, v72, (uint64_t *)&v81);
        if (v73)
        {
          sub_1BFF05CCC(v69, v70, v71, v72);
          return swift_deallocUninitializedObject();
        }
        uint64_t v74 = v81;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v69;
        *(void *)(result + 24) = v70;
        *(void *)(result + 32) = v71;
        *(unsigned char *)(result + 40) = v72;
        *(void *)(result + 48) = v74;
        *(void *)(v67 + 16) = result | 0x8000000000000000;
      }
      else
      {
        *(void *)(v66 + 16) = v65;
        uint64_t result = swift_retain();
      }
      uint64_t v64 = v79;
      unint64_t v63 = v67 | 0xC000000000000000;
LABEL_23:
      *uint64_t v64 = v63;
      return result;
    default:
      unint64_t v18 = v15;
      char v19 = sub_1BFF298C0(v78, *(unsigned __int8 *)(v15 + 16), *(void *)(v15 + 24));
      uint64_t v20 = swift_allocObject();
      uint64_t v21 = swift_allocObject();
      uint64_t v22 = MEMORY[0x1E4FBC860];
      *(unsigned char *)(v21 + 16) = v19 & 1;
      *(void *)(v21 + 24) = v22;
      *(void *)(v20 + 16) = v18;
      *(void *)(v20 + 24) = v21;
      *uint64_t v79 = v20 | 0x8000000000000000;
      return swift_retain();
  }
}

void sub_1BFF2918C()
{
  if (!qword_1EB876928)
  {
    sub_1C1515FDC();
    sub_1C0065A48(&qword_1EB884CF0, MEMORY[0x1E4F276F0]);
    unint64_t v0 = type metadata accessor for FormatSelectorValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB876928);
    }
  }
}

void sub_1BFF29220()
{
  if (!qword_1EB876930)
  {
    sub_1C151631C();
    sub_1BFC39690();
    unint64_t v0 = type metadata accessor for FormatSelectorValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB876930);
    }
  }
}

uint64_t sub_1BFF29284(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v72 = *MEMORY[0x1E4F143B8];
  uint64_t v62 = *(void *)(a3 + 16);
  if (!v62) {
    return a2 & 1;
  }
  sub_1C1517EFC();
  uint64_t v5 = *(void *)(*(void *)(v71 + 40) + 16);
  swift_beginAccess();
  uint64_t v6 = *(void *)(*(void *)(v5 + 16) + 16);
  int v60 = a2;
  if (v6)
  {
    v70[0] = *(void *)(v71 + 56);
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BFEF3B08(v7);
    sub_1BFEF3808(v8);
    swift_release();
    uint64_t v68 = v70[0];
  }
  else
  {
    uint64_t v68 = sub_1BFEF3784();
    swift_release();
  }
  uint64_t v61 = a3 + 32;
  v59[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
LABEL_8:
  uint64_t v10 = v61 + 24 * v9;
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *(void *)(v10 + 8);
  int v63 = *(unsigned __int8 *)(v10 + 16);
  uint64_t v13 = qword_1EB87F148;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1EB93C770;
  uint64_t v15 = *(void *)(qword_1EB93C770 + 24);
  swift_bridgeObjectRetain();
  sub_1C1517E7C();
  uint64_t v16 = (uint64_t *)(v14 + 16);
  swift_beginAccess();
  uint64_t v17 = *(void *)(v14 + 16);
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v66 = v9;
  if (v18)
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1BFEF2D8C(v12, v11);
    if (v20)
    {
      uint64_t v21 = *(void *)(*(void *)(v17 + 56) + 24 * v19 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v45 = *(void *)(v21 + 16);
      if (!v45)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      uint64_t v65 = v11;
      uint64_t v67 = v21;
      uint64_t v46 = (uint64_t *)(v21 + 64);
      while (1)
      {
        uint64_t v47 = *(v46 - 1);
        uint64_t v48 = *v46;
        char v49 = *(unsigned char *)(v47 + 32);
        unsigned int v50 = v49 & 0x3F;
        unint64_t v51 = (unint64_t)((1 << v49) + 63) >> 6;
        size_t v52 = 8 * v51;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v50 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v52);
          uint64_t v54 = sub_1BFEFB09C((uint64_t)v59 - ((v52 + 15) & 0x3FFFFFFFFFFFFFF0), v51, v47, v68);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v55 = (void *)swift_slowAlloc();
          bzero(v55, v52);
          uint64_t v54 = sub_1BFEFB09C((uint64_t)v55, v51, v47, v68);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v55, -1, -1);
        }
        char v56 = sub_1BFEFAE14(v54, v47);
        swift_release();
        if (v56)
        {
          char v57 = sub_1BFEFB810(v68, v48);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v57)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            int v60 = v63;
LABEL_7:
            uint64_t v9 = v66 + 1;
            if (v66 + 1 == v62)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              LOBYTE(a2) = v60;
              return a2 & 1;
            }
            goto LABEL_8;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 += 5;
        if (!--v45) {
          goto LABEL_6;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v64 = v15;
  swift_endAccess();
  v69[0] = v12;
  v69[1] = v11;
  swift_bridgeObjectRetain();
  sub_1BFF04A00(v69, v70);
  uint64_t v22 = v70[1];
  uint64_t v65 = v70[0];
  uint64_t v23 = v70[2];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v67 = v23;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = v12;
  char v26 = isUniquelyReferenced_nonNull_native;
  v69[0] = *v16;
  uint64_t v27 = v69[0];
  *uint64_t v16 = 0x8000000000000000;
  uint64_t v28 = v25;
  uint64_t v29 = v11;
  unint64_t v31 = sub_1BFEF2D8C(v25, v11);
  uint64_t v32 = *(void *)(v27 + 16);
  BOOL v33 = (v30 & 1) == 0;
  uint64_t v34 = v32 + v33;
  if (__OFADD__(v32, v33))
  {
    __break(1u);
LABEL_41:
    __break(1u);
  }
  char v35 = v30;
  if (*(void *)(v27 + 24) >= v34)
  {
    if (v26)
    {
      uint64_t v38 = (void *)v69[0];
      if (v30) {
        goto LABEL_21;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v38 = (void *)v69[0];
      if (v35) {
        goto LABEL_21;
      }
    }
LABEL_23:
    v38[(v31 >> 6) + 8] |= 1 << v31;
    uint64_t v40 = (uint64_t *)(v38[6] + 16 * v31);
    *uint64_t v40 = v28;
    v40[1] = v29;
    unint64_t v41 = (uint64_t *)(v38[7] + 24 * v31);
    *unint64_t v41 = v65;
    v41[1] = v22;
    uint64_t v21 = v67;
    v41[2] = v67;
    uint64_t v42 = v38[2];
    BOOL v43 = __OFADD__(v42, 1);
    uint64_t v44 = v42 + 1;
    if (v43) {
      goto LABEL_41;
    }
    uint64_t v11 = v29;
    v38[2] = v44;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  sub_1BFFDF158(v34, v26);
  unint64_t v36 = sub_1BFEF2D8C(v28, v29);
  if ((v35 & 1) == (v37 & 1))
  {
    unint64_t v31 = v36;
    uint64_t v38 = (void *)v69[0];
    if ((v35 & 1) == 0) {
      goto LABEL_23;
    }
LABEL_21:
    uint64_t v39 = (uint64_t *)(v38[7] + 24 * v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *uint64_t v39 = v65;
    v39[1] = v22;
    uint64_t v21 = v67;
    void v39[2] = v67;
    uint64_t v11 = v29;
LABEL_25:
    *uint64_t v16 = (uint64_t)v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_26;
  }
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1BFF298C0(uint64_t a1, int a2, uint64_t a3)
{
  return sub_1BFF29284(a1, a2, a3);
}

uint64_t sub_1BFF29920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v77 = v3;
  uint64_t v69 = *(void *)(v3 + 16);
  if (v69)
  {
    sub_1C1517EFC();
    uint64_t v4 = *(void *)(*(void *)(v79 + 40) + 16);
    swift_beginAccess();
    uint64_t v5 = *(void *)(*(void *)(v4 + 16) + 16);
    uint64_t v65 = (void *)a1;
    if (v5)
    {
      v78[0] = *(void *)(v79 + 56);
      uint64_t v6 = swift_bridgeObjectRetain();
      uint64_t v7 = sub_1BFEF3B08(v6);
      sub_1BFEF3808(v7);
      swift_release();
      uint64_t v75 = v78[0];
    }
    else
    {
      uint64_t v75 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v68 = v3 + 32;
    uint64_t v64 = (uint64_t *)v1;
    uint64_t v10 = *(void *)(v1 + 24);
    uint64_t v66 = *(void *)(v1 + 16);
    sub_1BFFAF7A4((uint64_t)&v77);
    swift_bridgeObjectRetain_n();
    sub_1BFFAF7A4((uint64_t)&v77);
    uint64_t v11 = 0;
    v63[1] = v10;
    uint64_t v67 = v10;
    while (1)
    {
      uint64_t v74 = v11;
      uint64_t v13 = (uint64_t *)(v68 + 32 * v11);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      uint64_t v16 = v13[3];
      uint64_t v70 = v13[2];
      uint64_t v17 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      uint64_t v73 = v16;
      swift_bridgeObjectRetain();
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v18 = qword_1EB93C770;
      uint64_t v19 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      char v20 = (uint64_t *)(v18 + 16);
      swift_beginAccess();
      uint64_t v21 = *(void *)(v18 + 16);
      if (!*(void *)(v21 + 16)) {
        goto LABEL_17;
      }
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1BFEF2D8C(v15, v14);
      if ((v23 & 1) == 0) {
        break;
      }
      uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 24 * v22 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v46 = *(void *)(v24 + 16);
      if (!v46)
      {
LABEL_9:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v74;
        goto LABEL_10;
      }
      uint64_t v71 = v24;
      uint64_t v72 = v14;
      uint64_t v47 = (uint64_t *)(v24 + 64);
      while (1)
      {
        uint64_t v48 = *(v47 - 1);
        uint64_t v49 = *v47;
        char v50 = *(unsigned char *)(v48 + 32);
        unsigned int v51 = v50 & 0x3F;
        unint64_t v52 = (unint64_t)((1 << v50) + 63) >> 6;
        size_t v53 = 8 * v52;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v51 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v53);
          uint64_t v55 = sub_1BFEFB09C((uint64_t)v63 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v52, v48, v75);
          swift_bridgeObjectRelease();
        }
        else
        {
          char v56 = (void *)swift_slowAlloc();
          bzero(v56, v53);
          uint64_t v55 = sub_1BFEFB09C((uint64_t)v56, v52, v48, v75);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v56, -1, -1);
        }
        char v57 = sub_1BFEFAE14(v55, v48);
        swift_release();
        if (v57) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_32:
        v47 += 5;
        if (!--v46) {
          goto LABEL_9;
        }
      }
      char v58 = sub_1BFEFB810(v75, v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v58 & 1) == 0) {
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v74;
      uint64_t v66 = v70;
      uint64_t v67 = v73;
LABEL_10:
      swift_bridgeObjectRelease();
      uint64_t v11 = v12 + 1;
      if (v11 == v69)
      {
        sub_1BFCA59C8((uint64_t)&v77);
        swift_bridgeObjectRelease();
        sub_1BFCA59C8((uint64_t)&v77);
        uint64_t v60 = *v64;
        uint64_t v59 = v64[1];
        swift_bridgeObjectRetain();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v61 = v65;
        *uint64_t v65 = v60;
        v61[1] = v59;
        uint64_t v62 = v67;
        v61[2] = v66;
        v61[3] = v62;
        void v61[4] = MEMORY[0x1E4FBC860];
        return result;
      }
    }
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v71 = v19;
    swift_endAccess();
    v76[0] = v15;
    v76[1] = v14;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v76, v78);
    uint64_t v25 = v78[1];
    uint64_t v72 = v78[0];
    uint64_t v26 = v78[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = v26;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v76[0] = *v20;
    uint64_t v29 = v76[0];
    *char v20 = 0x8000000000000000;
    uint64_t v30 = v15;
    unint64_t v32 = sub_1BFEF2D8C(v15, v14);
    uint64_t v33 = *(void *)(v29 + 16);
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_43:
      __break(1u);
    }
    char v36 = v31;
    if (*(void *)(v29 + 24) < v35)
    {
      sub_1BFFDF158(v35, isUniquelyReferenced_nonNull_native);
      unint64_t v37 = sub_1BFEF2D8C(v30, v14);
      if ((v36 & 1) != (v38 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v32 = v37;
      uint64_t v39 = (void *)v76[0];
      if ((v36 & 1) == 0) {
        goto LABEL_26;
      }
LABEL_24:
      uint64_t v40 = (uint64_t *)(v39[7] + 24 * v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v40 = v72;
      v40[1] = v25;
      v40[2] = v27;
      uint64_t v24 = v27;
LABEL_28:
      *char v20 = (uint64_t)v39;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_29;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v39 = (void *)v76[0];
      if (v31) {
        goto LABEL_24;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v39 = (void *)v76[0];
      if (v36) {
        goto LABEL_24;
      }
    }
LABEL_26:
    v39[(v32 >> 6) + 8] |= 1 << v32;
    unint64_t v41 = (uint64_t *)(v39[6] + 16 * v32);
    *unint64_t v41 = v30;
    v41[1] = v14;
    uint64_t v42 = (uint64_t *)(v39[7] + 24 * v32);
    *uint64_t v42 = v72;
    v42[1] = v25;
    v42[2] = v27;
    uint64_t v43 = v39[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_43;
    }
    uint64_t v24 = v27;
    void v39[2] = v45;
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  long long v8 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v8;
  *(void *)(a1 + 32) = *(void *)(v1 + 32);
  return sub_1BFF2A03C(v1);
}

uint64_t sub_1BFF2A03C(uint64_t a1)
{
  return a1;
}

unint64_t *sub_1BFF2A084(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = *result;
  uint64_t v6 = *v4;
  unint64_t v7 = (unint64_t)*v4 >> 60;
  switch(v7)
  {
    case 1uLL:
      uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v14 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v13 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      uint64_t v15 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      if (v5 >> 60 == 1)
      {
        long long v25 = *(_OWORD *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v26 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v35 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v36 = v12;
        uint64_t v37 = v14;
        *(void *)&long long v38 = v13;
        *((void *)&v38 + 1) = v15;
        long long v32 = v25;
        uint64_t v33 = v26;
        long long v34 = *(_OWORD *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
        swift_retain();
        swift_retain();
        sub_1BFFD4B48((uint64_t *)&v32, a2);
        swift_release();
        return (unint64_t *)swift_release();
      }
      if (v5 >> 60 != 5) {
        goto LABEL_27;
      }
      uint64_t v16 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v17 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v18 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v35 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v36 = v12;
      uint64_t v37 = v14;
      *(void *)&long long v38 = v13;
      *((void *)&v38 + 1) = v15;
      *(void *)&long long v32 = v11;
      *((void *)&v32 + 1) = v12;
      uint64_t v33 = v16;
      *(void *)&long long v34 = v17;
      *((void *)&v34 + 1) = v18;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFFD4B48((uint64_t *)&v32, a2);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (unint64_t *)swift_bridgeObjectRelease();
    case 2uLL:
      if (v5 >> 60 != 2) {
        goto LABEL_27;
      }
      return result;
    case 3uLL:
      if (v5 >> 60 != 3) {
        goto LABEL_27;
      }
      return result;
    case 4uLL:
      if (v5 >> 60 != 4) {
        goto LABEL_27;
      }
      return result;
    case 5uLL:
      if (v5 >> 60 == 1)
      {
        uint64_t v27 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v28 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v29 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v30 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v31 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v35 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v36 = v30;
        uint64_t v37 = v31;
        long long v38 = *(_OWORD *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
        *(void *)&long long v32 = v35;
        *((void *)&v32 + 1) = v30;
        uint64_t v33 = v29;
        *(void *)&long long v34 = v27;
        *((void *)&v34 + 1) = v28;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFFD4B48((uint64_t *)&v32, a2);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (unint64_t *)swift_bridgeObjectRelease();
      }
      else if (v5 >> 60 != 5)
      {
        goto LABEL_27;
      }
      return result;
    case 6uLL:
      if (v5 >> 60 != 6) {
        goto LABEL_27;
      }
      return result;
    case 7uLL:
      if (v5 >> 60 != 7) {
        goto LABEL_27;
      }
      return result;
    case 8uLL:
      goto LABEL_27;
    case 9uLL:
      if (v5 >> 60 == 9) {
        return result;
      }
      goto LABEL_27;
    case 0xAuLL:
      if (v5 >> 60 == 10) {
        return result;
      }
      goto LABEL_27;
    case 0xBuLL:
      goto LABEL_32;
    case 0xCuLL:
      if (v5 >> 60 == 12) {
        return result;
      }
      goto LABEL_27;
    case 0xDuLL:
      if (v5 >> 60 != 13) {
        goto LABEL_27;
      }
      return result;
    default:
      if (!(v5 >> 60)) {
        return result;
      }
LABEL_27:
      if (v5 >> 60 == 11)
      {
LABEL_32:
        type metadata accessor for FormatLayoutError();
        sub_1C0281748((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        *unint64_t v22 = a3;
        v22[1] = a4;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        return (unint64_t *)swift_willThrow();
      }
      if (v5 >> 60 == 8)
      {
        if (v7 == 8)
        {
          uint64_t v20 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v19 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v35 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          *(void *)&long long v32 = v19;
          uint64_t v21 = v20 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain_n();
          swift_retain_n();
          swift_retain();
          swift_retain();
          swift_retain();
          uint64_t v39 = v21;
          swift_retain();
          sub_1BFF2A084(&v32, a2, a3, a4);
          swift_release();
          swift_release();
          swift_release_n();
        }
        else
        {
          uint64_t v23 = *(void *)((v5 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v35 = *v4;
          *(void *)&long long v32 = v23;
          swift_retain_n();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1BFF2A084(&v32, a2, a3, a4);
          swift_release();
        }
        swift_release();
        swift_release_n();
        return (unint64_t *)swift_release();
      }
      if (v7 != 8)
      {
        type metadata accessor for FormatLayoutError();
        sub_1C0281748((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        *uint64_t v24 = v6;
        v24[1] = v5;
        swift_storeEnumTagMultiPayload();
        swift_retain();
        swift_retain();
        return (unint64_t *)swift_willThrow();
      }
      uint64_t v35 = *(void *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      *(void *)&long long v32 = v5;
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1BFF2A084(&v32, a2, a3, a4);
      swift_release();
      swift_release();
      swift_release_n();
      return (unint64_t *)swift_release();
  }
}

uint64_t initializeWithCopy for FormatOptionsNodeStatementValue(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v4 = *(void *)a2;
      uint64_t v5 = *(void *)(a2 + 8);
      uint64_t v6 = *(void *)(a2 + 16);
      char v7 = *(unsigned char *)(a2 + 24);
      sub_1BFDEB94C(v4, v5, v6, v7);
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v6;
      *(unsigned char *)(a1 + 24) = v7;
      break;
    case 3u:
      uint64_t v8 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v9 = *(void *)a2;
      uint64_t v10 = *(void *)(a2 + 8);
      uint64_t v11 = *(void *)(a2 + 16);
      uint64_t v12 = *(void *)(a2 + 24);
      uint64_t v13 = *(void *)(a2 + 32);
      uint64_t v14 = *(void *)(a2 + 40);
      uint64_t v15 = *(unsigned __int16 *)(a2 + 48);
      sub_1C05DD0F4(v9, v10, v11, v12, v13, v14, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = v10;
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v12;
      *(void *)(a1 + 32) = v13;
      *(void *)(a1 + 40) = v14;
      *(_WORD *)(a1 + 48) = v15;
      break;
    case 5u:
      uint64_t v16 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v16;
      uint64_t v17 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v17;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 6u:
      unint64_t v18 = *(void *)a2;
      sub_1BFF58F10(v18);
      *(void *)a1 = v18;
      break;
    case 7u:
      type metadata accessor for FormatURL();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v21 = *(void *)a2;
        uint64_t v22 = *(void *)(a2 + 8);
        uint64_t v23 = *(void *)(a2 + 16);
        char v24 = *(unsigned char *)(a2 + 24);
        sub_1BFE86E48(v21, v22, v23, v24);
        *(void *)a1 = v21;
        *(void *)(a1 + 8) = v22;
        *(void *)(a1 + 16) = v23;
        *(unsigned char *)(a1 + 24) = v24;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v20 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v20;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v25 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
          uint64_t v26 = type metadata accessor for FormatAbsoluteURL();
          *(void *)(a1 + *(int *)(v26 + 20)) = *(void *)(a2 + *(int *)(v26 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      break;
    case 8u:
      *(void *)a1 = *(void *)a2;
      swift_retain();
      break;
    default:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BFF2A99C(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  switch((2 * a8) | ((a7 & 8) != 0))
  {
    case 0:
      uint64_t result = sub_1BFF2B138(result, a2, a3, a4, a5, a6, a7);
      break;
    case 2:
      uint64_t result = sub_1BFF58ECC(result, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void))sub_1BFF2B138, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1C02240D4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))sub_1C02240C4);
      break;
    case 3:
    case 4:
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 8:
      uint64_t result = sub_1C02240C4(result, a2, a3, a4, a5, a6, a7);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatOptionValue.type.getter@<X0>(char *a1@<X8>)
{
  switch(*v1 >> 60)
  {
    case 1:
      char v2 = 2;
      goto LABEL_16;
    case 2:
      char v2 = 1;
      goto LABEL_16;
    case 3:
      char v2 = 3;
      goto LABEL_16;
    case 4:
      char v2 = 4;
      goto LABEL_16;
    case 5:
      char v2 = 5;
      goto LABEL_16;
    case 6:
      char v2 = 6;
      goto LABEL_16;
    case 7:
      char v2 = 7;
      goto LABEL_16;
    case 8:
      return FormatOptionValue.type.getter();
    case 9:
      char v2 = 8;
      goto LABEL_16;
    case 0xALL:
      char v2 = 9;
      goto LABEL_16;
    case 0xBLL:
      char v2 = *(unsigned char *)((*v1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      goto LABEL_16;
    case 0xCLL:
      char v2 = 10;
      goto LABEL_16;
    case 0xDLL:
      char v2 = 11;
LABEL_16:
      *a1 = v2;
      break;
    default:
      *a1 = 0;
      break;
  }
  return result;
}

uint64_t sub_1BFF2AB84(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1C1520DBC();
    FormatOptionType.rawValue.getter();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C1520E0C();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE700000000000000;
        uint64_t v10 = 0x6E61656C6F6F62;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v9 = 0xE400000000000000;
            uint64_t v10 = 1702125924;
            break;
          case 2:
            unint64_t v9 = 0xE400000000000000;
            uint64_t v10 = 1836412517;
            break;
          case 3:
            unint64_t v9 = 0xE500000000000000;
            uint64_t v10 = 0x74616F6C66;
            break;
          case 4:
            uint64_t v10 = 0x72656765746E69;
            break;
          case 5:
            unint64_t v9 = 0xE600000000000000;
            uint64_t v10 = 0x676E69727473;
            break;
          case 6:
            unint64_t v9 = 0xE300000000000000;
            uint64_t v10 = 7107189;
            break;
          case 7:
            unint64_t v9 = 0xE500000000000000;
            uint64_t v10 = 0x726F6C6F63;
            break;
          case 8:
            unint64_t v9 = 0xE500000000000000;
            uint64_t v10 = 0x6567616D69;
            break;
          case 9:
            unint64_t v9 = 0xE500000000000000;
            uint64_t v10 = 0x6F65646976;
            break;
          case 0xA:
            unint64_t v9 = 0xE400000000000000;
            uint64_t v10 = 1953394534;
            break;
          case 0xB:
            uint64_t v10 = 0x616C506F65646976;
            unint64_t v9 = 0xEB00000000726579;
            break;
          default:
            break;
        }
        unint64_t v11 = 0xE700000000000000;
        uint64_t v12 = 0x6E61656C6F6F62;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xE400000000000000;
            if (v10 == 1702125924) {
              goto LABEL_37;
            }
            goto LABEL_38;
          case 2:
            unint64_t v11 = 0xE400000000000000;
            if (v10 != 1836412517) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x74616F6C66) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 4:
            if (v10 != 0x72656765746E69) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 5:
            unint64_t v11 = 0xE600000000000000;
            if (v10 != 0x676E69727473) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 6:
            unint64_t v11 = 0xE300000000000000;
            if (v10 != 7107189) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 7:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x726F6C6F63) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 8:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x6567616D69) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 9:
            unint64_t v11 = 0xE500000000000000;
            if (v10 != 0x6F65646976) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 10:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1953394534;
            goto LABEL_36;
          case 11:
            unint64_t v11 = 0xEB00000000726579;
            if (v10 != 0x616C506F65646976) {
              goto LABEL_38;
            }
            goto LABEL_37;
          default:
LABEL_36:
            if (v10 != v12) {
              goto LABEL_38;
            }
LABEL_37:
            if (v9 == v11)
            {
              swift_bridgeObjectRelease_n();
              char v13 = 1;
              return v13 & 1;
            }
LABEL_38:
            char v13 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v13) {
              return v13 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v13 & 1;
            }
            break;
        }
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t FormatOptionType.rawValue.getter()
{
  uint64_t result = 0x6E61656C6F6F62;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1702125924;
      break;
    case 2:
      uint64_t result = 1836412517;
      break;
    case 3:
      uint64_t result = 0x74616F6C66;
      break;
    case 4:
      uint64_t result = 0x72656765746E69;
      break;
    case 5:
      uint64_t result = 0x676E69727473;
      break;
    case 6:
      uint64_t result = 7107189;
      break;
    case 7:
      uint64_t result = 0x726F6C6F63;
      break;
    case 8:
      uint64_t result = 0x6567616D69;
      break;
    case 9:
      uint64_t result = 0x6F65646976;
      break;
    case 0xA:
      uint64_t result = 1953394534;
      break;
    case 0xB:
      uint64_t result = 0x616C506F65646976;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF2B030(uint64_t a1, int a2, uint64_t a3)
{
  return sub_1BFF29284(a1, a2, a3);
}

uint64_t sub_1BFF2B090(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  switch((a7 >> 21) & 7)
  {
    case 0u:
    case 1u:
    case 2u:
    case 4u:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 5u:
      uint64_t result = sub_1BFF2A99C(result, a2, a3, a4, a5, a6, a7, SBYTE1(a7));
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF2B0D0(uint64_t a1)
{
  return sub_1BFF2B0DC(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_1BFF2B0DC(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if (a2()) {
    return a4(a1) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1BFF2B138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 <= 1u) {
    return sub_1BFF523A4(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1BFF2B14C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v45 = a3;
  sub_1C12451C4(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v41 - v7;
  uint64_t v44 = v3;
  FormatOptionCollection.subscript.getter(a1, a2, (uint64_t)&v41 - v7);
  uint64_t v9 = type metadata accessor for FormatOption();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    sub_1C1245104((uint64_t)v8, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
    goto LABEL_5;
  }
  uint64_t v10 = *((void *)v8 + 3);
  sub_1BFEF95A8(v10);
  uint64_t result = sub_1C12450A4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatOption);
  if (!v10)
  {
    char v12 = 0;
    return v12 & 1;
  }
  if (v10 == 1)
  {
LABEL_5:
    v46[0] = a1;
    v46[1] = a2;
    v46[9] = 0x797274656D6F6567;
    v46[10] = 0xE800000000000000;
    sub_1BFF27ECC();
    char v12 = sub_1C151FF0C();
    return v12 & 1;
  }
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(v10 + 56);
  uint64_t v42 = v10 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(v10 + 32);
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  int64_t v43 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_29;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v20 >= v43) {
      goto LABEL_47;
    }
    unint64_t v21 = *(void *)(v42 + 8 * v20);
    ++v13;
    if (!v21)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v43) {
        goto LABEL_47;
      }
      unint64_t v21 = *(void *)(v42 + 8 * v13);
      if (!v21)
      {
        int64_t v13 = v20 + 2;
        if (v20 + 2 >= v43) {
          goto LABEL_47;
        }
        unint64_t v21 = *(void *)(v42 + 8 * v13);
        if (!v21) {
          break;
        }
      }
    }
LABEL_28:
    unint64_t v17 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_29:
    uint64_t v23 = v10;
    char v24 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v19);
    uint64_t v26 = *v24;
    uint64_t v25 = v24[1];
    uint64_t v27 = *v45;
    if (!*(void *)(*v45 + 16))
    {
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t v28 = sub_1C1520E0C();
    uint64_t v29 = -1 << *(unsigned char *)(v27 + 32);
    unint64_t v30 = v28 & ~v29;
    uint64_t v31 = v27 + 56;
    if ((*(void *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30))
    {
      uint64_t v32 = *(void *)(v27 + 48);
      uint64_t v33 = (void *)(v32 + 16 * v30);
      BOOL v34 = *v33 == v26 && v33[1] == v25;
      if (!v34 && (sub_1C1520A9C() & 1) == 0)
      {
        uint64_t v35 = ~v29;
        for (unint64_t i = v30 + 1; ; unint64_t i = v37 + 1)
        {
          uint64_t v37 = i & v35;
          if (((*(void *)(v31 + (((i & v35) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v35)) & 1) == 0) {
            break;
          }
          long long v38 = (void *)(v32 + 16 * v37);
          BOOL v39 = *v38 == v26 && v38[1] == v25;
          if (v39 || (sub_1C1520A9C() & 1) != 0) {
            goto LABEL_12;
          }
        }
        goto LABEL_45;
      }
LABEL_12:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = v23;
    }
    else
    {
LABEL_45:
      swift_bridgeObjectRetain();
      uint64_t v40 = (uint64_t)v45;
      sub_1BFEFFC1C(v46, v26, v25);
      swift_bridgeObjectRelease();
      LOBYTE(v40) = sub_1BFF2B14C(v26, v25, v40);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v10 = v23;
      if (v40)
      {
        swift_release();
        char v12 = 1;
        return v12 & 1;
      }
    }
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v43)
  {
LABEL_47:
    swift_release();
    char v12 = 0;
    return v12 & 1;
  }
  unint64_t v21 = *(void *)(v42 + 8 * v22);
  if (v21)
  {
    int64_t v13 = v22;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v13 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v13 >= v43) {
      goto LABEL_47;
    }
    unint64_t v21 = *(void *)(v42 + 8 * v13);
    ++v22;
    if (v21) {
      goto LABEL_28;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1BFF2B584(uint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  switch((a6 >> 1) & 0xF)
  {
    case 2u:
      uint64_t result = sub_1C05D8B28(result, a2, a3, a4, a5, a6 & 0xE1, (uint64_t (*)(void))sub_1C0223C2C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t))sub_1BFF61744, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0223C2C);
      break;
    case 3u:
      uint64_t result = sub_1C0223C2C(result, a2);
      break;
    case 7u:
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 8u:
      uint64_t result = sub_1C05D8BC0(result, a2, a3, a4, a5, a6 & 1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C0223C2C);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF2B688(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 26)) {
    int v2 = 0x10000;
  }
  else {
    int v2 = 0;
  }
  return sub_1BFF2B6A8(a1, *(void *)(v1 + 16), v2 | *(unsigned __int16 *)(v1 + 24));
}

uint64_t sub_1BFF2B6A8(uint64_t a1, uint64_t a2, int a3)
{
  return (((a3 & 0x10000) == 0) ^ sub_1BFF2B70C(a1, a2, a3, &OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack)) & 1;
}

uint64_t sub_1BFF2B70C(uint64_t a1, uint64_t a2, unsigned __int16 a3, void *a4)
{
  uint64_t v9 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v15 - 8);
  unint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a3 >> 13)
  {
    case 1:
      sub_1BFF23670(*(void *)(a1 + *a4), (uint64_t)v14);
      if (!v4)
      {
        LOBYTE(v31) = a2;
        LOBYTE(a2) = sub_1BFF2DB04((uint64_t)v14);
        sub_1BFEEB460((uint64_t)v14, type metadata accessor for FeedHeadline);
      }
      break;
    case 2:
      sub_1BFFB5F74(*(void *)(a1 + *a4), (uint64_t)&v31);
      if (!v4)
      {
        long long v29 = v37;
        v30[0] = v38[0];
        *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)((char *)v38 + 9);
        long long v23 = v31;
        long long v24 = v32;
        long long v25 = v33;
        long long v26 = v34;
        long long v27 = v35;
        long long v28 = v36;
        switch((char)a2)
        {
          case 1:
            unsigned __int8 v18 = objc_msgSend((id)v31, sel_isPaid, (void)v23, *((void *)&v23 + 1), (void)v24, *((void *)&v24 + 1), (void)v25, *((void *)&v25 + 1), (void)v26, *((void *)&v26 + 1), (void)v27, *((void *)&v27 + 1), (void)v28, *((void *)&v28 + 1), (void)v29, *((void *)&v29 + 1), *(void *)&v30[0], *((void *)&v30[0] + 1), *(void *)&v30[1],
                                     *((void *)&v30[1] + 1));
            goto LABEL_27;
          case 2:
            unsigned __int8 v18 = objc_msgSend((id)v31, sel_isBundlePaid, (void)v23, *((void *)&v23 + 1), (void)v24, *((void *)&v24 + 1), (void)v25, *((void *)&v25 + 1), (void)v26, *((void *)&v26 + 1), (void)v27, *((void *)&v27 + 1), (void)v28, *((void *)&v28 + 1), (void)v29, *((void *)&v29 + 1), *(void *)&v30[0], *((void *)&v30[0] + 1), *(void *)&v30[1],
                                     *((void *)&v30[1] + 1));
            goto LABEL_27;
          case 3:
            LOBYTE(a2) = BYTE9(v24) != 0;
            goto LABEL_28;
          case 4:
            unsigned __int8 v18 = objc_msgSend((id)v31, sel_isDraft, (void)v23, *((void *)&v23 + 1), (void)v24, *((void *)&v24 + 1), (void)v25, *((void *)&v25 + 1), (void)v26, *((void *)&v26 + 1), (void)v27, *((void *)&v27 + 1), (void)v28, *((void *)&v28 + 1), (void)v29, *((void *)&v29 + 1), *(void *)&v30[0], *((void *)&v30[0] + 1), *(void *)&v30[1],
                                     *((void *)&v30[1] + 1));
            goto LABEL_27;
          default:
            unsigned __int8 v18 = objc_msgSend((id)v31, sel_isCurrent, (void)v23, *((void *)&v23 + 1), (void)v24, *((void *)&v24 + 1), (void)v25, *((void *)&v25 + 1), (void)v26, *((void *)&v26 + 1), (void)v27, *((void *)&v27 + 1), (void)v28, *((void *)&v28 + 1), (void)v29, *((void *)&v29 + 1), *(void *)&v30[0], *((void *)&v30[0] + 1), *(void *)&v30[1],
                                     *((void *)&v30[1] + 1));
LABEL_27:
            LOBYTE(a2) = v18;
LABEL_28:
            sub_1C01880A4((uint64_t)&v23);
            break;
        }
      }
      break;
    case 3:
      char v19 = sub_1C1508398(a1, a2, a3 & 0x1FFF, a4);
      if (!v4) {
        LOBYTE(a2) = v19;
      }
      break;
    case 4:
      sub_1C0E473E0(*(void *)(a1 + *a4), (uint64_t)&v31);
      if (!v4)
      {
        LOBYTE(v23) = a2;
        a2 = v32;
        uint64_t ObjectType = swift_getObjectType();
        LOBYTE(a2) = sub_1C0F80D28((id)a2, &v23, ObjectType);
        sub_1BFEA4290((uint64_t)&v31);
      }
      break;
    case 5:
      sub_1C0E4755C(*(void *)(a1 + *a4), (uint64_t)&v31);
      if (!v4)
      {
        *(void *)&long long v23 = a2;
        BYTE8(v23) = a3;
        sub_1C017D3F0((uint64_t)&v31);
        LOBYTE(a2) = v21;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 6:
      sub_1C0E47688(*(void *)(a1 + *a4), &v31);
      if (!v4)
      {
        if (a2) {
          LOBYTE(a2) = objc_msgSend(*((id *)&v34 + 1), sel_ignoreFromStatsAndStreaks);
        }
        else {
          LOBYTE(a2) = (BYTE8(v35) & 0xFE) != 2;
        }
        sub_1C01F0A74((uint64_t)&v31);
      }
      break;
    case 7:
      sub_1C0E47B90(*(void *)(a1 + *a4), (uint64_t)v11);
      if (!v4)
      {
        LOBYTE(v31) = a2;
        LOBYTE(a2) = sub_1C04654B0((uint64_t)v11);
        sub_1BFEEB460((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      }
      break;
    default:
      sub_1BFF7DD68(*(void *)(a1 + *a4), (uint64_t)v17);
      if (!v4)
      {
        LOBYTE(v31) = a2;
        LOBYTE(a2) = FormatWebEmbedBinding.Bool.BOOL(from:)((uint64_t)v17);
        sub_1BFEEB460((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      }
      break;
  }
  return a2 & 1;
}

void sub_1BFF2BB80(uint64_t a1)
{
  uint64_t v219 = a1;
  uint64_t v203 = sub_1C1515FDC();
  uint64_t v253 = *(void *)(v203 - 8);
  MEMORY[0x1F4188790](v203);
  uint64_t v200 = (uint64_t)&v192 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  char v202 = (char *)&v192 - v4;
  uint64_t v210 = sub_1C1515BDC();
  uint64_t KeyPath = *(void *)(v210 - 8);
  MEMORY[0x1F4188790](v210);
  uint64_t v211 = (char *)&v192 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v213 = (char *)&v192 - v7;
  uint64_t v226 = sub_1C15159AC();
  MEMORY[0x1F4188790](v226);
  uint64_t v225 = (char *)&v192 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v224 = sub_1C1515CBC();
  uint64_t v232 = *(void (***)(char *, uint64_t))(v224 - 8);
  MEMORY[0x1F4188790](v224);
  uint64_t v223 = (char *)&v192 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2F030();
  uint64_t v228 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v201 = (char *)&v192 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v227 = (char *)&v192 - v13;
  sub_1BFF2E9EC(0, &qword_1EB88E3A0, (void (*)(uint64_t))type metadata accessor for FormatAttributedStringAttachment);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v207 = (uint64_t)&v192 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v209 = (void **)((char *)&v192 - v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v214 = (uint64_t)&v192 - v19;
  sub_1BFF2F0C4();
  uint64_t v255 = v20;
  uint64_t v216 = *(void (***)(char *, char *, uint64_t))(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v208 = (char *)&v192 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v254 = (char *)&v192 - v23;
  uint64_t v257 = sub_1C1515ABC();
  char v215 = *(void (***)(char *, uint64_t))(v257 - 8);
  MEMORY[0x1F4188790](v257);
  uint64_t v252 = (char *)&v192 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2E9EC(0, &qword_1EB884CC0, MEMORY[0x1E4F27350]);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v245 = (char *)&v192 - v26;
  uint64_t v243 = sub_1C1515ACC();
  uint64_t v248 = *(void *)(v243 - 8);
  MEMORY[0x1F4188790](v243);
  uint64_t v251 = (char *)&v192 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v274 = (char *)&v192 - v29;
  uint64_t v30 = sub_1C1515ADC();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v249 = v30;
  uint64_t v250 = v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v247 = (char *)&v192 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1C1515B3C();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  long long v36 = (char *)&v192 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  BOOL v39 = (char *)&v192 - v38;
  MEMORY[0x1F4188790](v40);
  uint64_t v42 = (char *)&v192 - v41;
  sub_1BFF2EF9C();
  MEMORY[0x1F4188790](v43);
  uint64_t v45 = (char *)&v192 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v46);
  if (v1[OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_buildType] != 1)
  {
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1C0);
    uint64_t v172 = &v1[OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v36, v172, v33);
    swift_getKeyPath();
    sub_1C151593C();
    sub_1BFF2F120();
LABEL_79:
    sub_1C151F5DC();
    return;
  }
  char v242 = v39;
  uint64_t v212 = v1;
  uint64_t v49 = &v1[OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString];
  char v50 = (char *)&v192 - v48;
  uint64_t v244 = (char *)v47;
  swift_beginAccess();
  unsigned int v51 = *(void (**)(void, void, void))(v34 + 16);
  unsigned int v229 = v49;
  uint64_t v205 = (void (*)(uint64_t, char *, uint64_t))v51;
  uint64_t v206 = v34 + 16;
  v51(v42, v49, v33);
  unint64_t v52 = v247;
  sub_1C1515AFC();
  size_t v53 = *(void (**)(void, void))(v34 + 8);
  uint64_t v246 = v42;
  uint64_t v218 = v33;
  uint64_t v204 = v34 + 8;
  long long v199 = (void (*)(char *, uint64_t))v53;
  v53(v42, v33);
  uint64_t v54 = v249;
  uint64_t v55 = v250;
  long long v237 = *(void (**)(char *, char *, uint64_t))(v250 + 16);
  uint64_t v238 = v250 + 16;
  v237(v45, v52, v249);
  uint64_t v56 = sub_1C0E867FC();
  char v57 = v274;
  uint64_t v256 = v56;
  sub_1C151F09C();
  char v58 = *(void (**)(void, void))(v55 + 8);
  uint64_t v250 = v55 + 8;
  uint64_t v236 = (void (*)(char *, uint64_t))v58;
  v58(v52, v54);
  uint64_t v59 = v243;
  uint64_t v60 = (uint64_t)v244;
  uint64_t v61 = v248;
  (*(void (**)(char *, char *, uint64_t))(v248 + 32))(&v45[*((int *)v244 + 9)], v57, v243);
  sub_1C0A5ADAC((uint64_t)v45, (uint64_t)v50);
  uint64_t v62 = *(int *)(v60 + 36);
  uint64_t v244 = v50;
  int v63 = &v50[v62];
  uint64_t v230 = &v212[OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle];
  long long v197 = (void *)(v219 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  uint64_t v64 = *(void (**)(void, void, void))(v61 + 16);
  v61 += 16;
  long long v239 = (void (**)(char *, uint64_t))(v61 - 8);
  uint64_t v240 = (void (*)(char *, char *, uint64_t))v64;
  unsigned int v241 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v215 + 7);
  uint64_t v234 = (uint64_t (**)(char *, uint64_t, uint64_t))(v215 + 6);
  unsigned __int8 v235 = (void (**)(char *))(v215 + 2);
  uint64_t v221 = v232 + 1;
  uint64_t v231 = (void (**)(char *, uint64_t))(v216 + 1);
  uint64_t v232 = v215 + 1;
  uint64_t v233 = (void (**)(char *, char *, uint64_t))(v215 + 4);
  long long v198 = (void (**)(char *, char *, uint64_t))(KeyPath + 16);
  char v215 = (void (**)(char *, uint64_t))(KeyPath + 8);
  v216 += 2;
  uint64_t v194 = (void (**)(uint64_t, uint64_t, uint64_t))(v253 + 16);
  uint64_t v195 = (void (**)(uint64_t, uint64_t))(v253 + 8);
  uint64_t v196 = (void (**)(char *, uint64_t, uint64_t))(v253 + 32);
  uint64_t v253 = MEMORY[0x1E4FBC868];
  uint64_t v65 = v59;
  uint64_t v66 = v251;
  uint64_t v67 = v57;
  uint64_t v248 = v61;
  uint64_t v222 = v63;
  v64(v57, v63, v65);
  while (1)
  {
    uint64_t v69 = v67;
    uint64_t v70 = v63;
    uint64_t v71 = (uint64_t)v244;
    uint64_t v72 = v249;
    sub_1C151F0EC();
    sub_1C0E868F8(&qword_1EB862830, MEMORY[0x1E4F27358]);
    char v73 = sub_1C151E5CC();
    uint64_t v74 = v66;
    uint64_t v75 = *v239;
    (*v239)(v74, v65);
    v75(v69, v65);
    if (v73) {
      break;
    }
    unint64_t v76 = v70;
    uint64_t v77 = (void (*)(long long *, void))sub_1C151F19C();
    long long v78 = v245;
    uint64_t v79 = v257;
    (*v235)(v245);
    v77(&v263, 0);
    uint64_t v80 = v247;
    v237(v247, (char *)v71, v72);
    sub_1C151F0FC();
    v236(v80, v72);
    (*v241)(v78, 0, 1, v79);
    int v81 = (*v234)(v78, 1, v79);
    uint64_t v82 = v242;
    long long v83 = v246;
    if (v81 == 1) {
      goto LABEL_53;
    }
    int v63 = v76;
    long long v84 = v252;
    (*v233)(v252, v78, v79);
    swift_getKeyPath();
    sub_1C0078880();
    sub_1C1515A9C();
    swift_release();
    swift_getKeyPath();
    sub_1C0E86844();
    sub_1C1515D4C();
    swift_release();
    uint64_t v85 = v263;
    if (v263 == 18)
    {
      uint64_t v86 = *((void *)v230 + 13);
      uint64_t v87 = *(void *)(v86 + 288);
      if (v87 && *(void *)(v87 + 16))
      {
        uint64_t v88 = (uint64_t)v227;
        sub_1C1515AAC();
        swift_beginAccess();
        uint64_t v89 = sub_1C0E868F8(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
        int v90 = v223;
        sub_1C1515B6C();
        swift_endAccess();
        sub_1C0E86898(v88, (uint64_t (*)(void))sub_1BFF2F030);
        sub_1C1515C7C();
        (*v221)(v90, v224);
        sub_1C0E868F8(&qword_1EA19CAB0, MEMORY[0x1E4F27270]);
        uint64_t v91 = sub_1C151E8CC();
        uint64_t v93 = v92;
        uint64_t v94 = *(void *)(v86 + 288);
        uint64_t v66 = v251;
        if (!v94 || (uint64_t v95 = *(void *)(v94 + 16)) == 0)
        {
          uint64_t v68 = v257;
          uint64_t v67 = v274;
          goto LABEL_28;
        }
        uint64_t v96 = v91;
        uint64_t KeyPath = v89;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v97 = 0;
        uint64_t v98 = v93;
        uint64_t v99 = v96;
        do
        {
          int v103 = *(unsigned __int8 *)(v94 + v97 + 32);
          if (*(unsigned char *)(v94 + v97 + 32))
          {
            *(void *)&long long v263 = v99;
            *((void *)&v263 + 1) = v98;
            if (v103 == 1)
            {
              sub_1BFF27ECC();
              uint64_t v100 = sub_1C151FE7C();
            }
            else
            {
              sub_1BFF27ECC();
              uint64_t v100 = sub_1C151FEAC();
            }
          }
          else
          {
            *(void *)&long long v263 = v99;
            *((void *)&v263 + 1) = v98;
            sub_1BFF27ECC();
            uint64_t v100 = sub_1C151FE8C();
          }
          uint64_t v99 = v100;
          uint64_t v102 = v101;
          swift_bridgeObjectRelease();
          uint64_t v98 = v102;
          uint64_t v67 = v274;
          ++v97;
        }
        while (v95 != v97);
        swift_bridgeObjectRelease();
        BOOL v104 = v96 == v99 && v93 == v98;
        uint64_t v68 = v257;
        if (v104)
        {
          swift_bridgeObjectRelease();
          uint64_t v66 = v251;
          long long v84 = v252;
LABEL_28:
          int v63 = v222;
          swift_bridgeObjectRelease();
        }
        else
        {
          char v105 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          if (v105)
          {
            uint64_t v66 = v251;
            long long v84 = v252;
            uint64_t v67 = v274;
            goto LABEL_28;
          }
          uint64_t v106 = (uint64_t)v227;
          long long v107 = v252;
          sub_1C1515AAC();
          sub_1C1515A7C();
          int v108 = v246;
          long long v84 = v107;
          uint64_t v68 = v257;
          sub_1C1515B4C();
          swift_beginAccess();
          sub_1C0E868F8(&qword_1EA1A8090, MEMORY[0x1E4F273A8]);
          uint64_t v109 = v218;
          sub_1C15159EC();
          swift_endAccess();
          v199(v108, v109);
          sub_1C0E86898(v106, (uint64_t (*)(void))sub_1BFF2F030);
          uint64_t v66 = v251;
          uint64_t v67 = v274;
          int v63 = v222;
        }
      }
      else
      {
        uint64_t v68 = v257;
        uint64_t v66 = v251;
        uint64_t v67 = v274;
      }
      (*v231)(v254, v255);
      (*v232)(v84, v68);
      uint64_t v65 = v243;
      goto LABEL_5;
    }
    swift_getKeyPath();
    sub_1C0E86940();
    int v110 = v254;
    uint64_t v111 = v255;
    sub_1C1515D4C();
    swift_release();
    uint64_t v112 = v220;
    sub_1C0E8588C(v85, v270, v271);
    uint64_t v220 = v112;
    if (v112)
    {
      swift_bridgeObjectRelease();
      (*v231)(v110, v111);
      sub_1C0E86898((uint64_t)v244, (uint64_t (*)(void))sub_1BFF2EF9C);
      swift_bridgeObjectRelease();
      (*v232)(v252, v79);
      return;
    }
    long long v267 = v271[4];
    long long v268 = v271[5];
    v269[0] = v272[0];
    *(_OWORD *)((char *)v269 + 9) = *(_OWORD *)((char *)v272 + 9);
    long long v263 = v271[0];
    long long v264 = v271[1];
    long long v265 = v271[2];
    long long v266 = v271[3];
    swift_bridgeObjectRelease();
    uint64_t v113 = (uint64_t)v208;
    (*v216)(v208, v110, v111);
    swift_retain();
    uint64_t v114 = v214;
    sub_1C0B324C0(v113, v214);
    uint64_t v115 = v114;
    uint64_t v116 = v209;
    sub_1C0E86994(v115, (uint64_t)v209);
    uint64_t v117 = type metadata accessor for FormatAttributedStringAttachment();
    uint64_t v118 = *(void *)(v117 - 8);
    uint64_t v119 = *(uint64_t (**)(void, void))(v118 + 48);
    uint64_t KeyPath = v117;
    unsigned __int8 v192 = (void (*)(uint64_t, uint64_t))(v118 + 48);
    uint64_t v193 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v119;
    int v120 = v119(v116, 1);
    uint64_t v121 = (uint64_t)v213;
    uint64_t v122 = v252;
    uint64_t v123 = v218;
    uint64_t v124 = (uint64_t)v246;
    if (v120 == 1) {
      goto LABEL_36;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      sub_1C0E86898((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for FormatAttributedStringAttachment);
      uint64_t v122 = v252;
LABEL_36:
      v205(v124, v229, v123);
      sub_1BFF669D0(v124, v121);
      uint64_t v134 = ((uint64_t (*)(uint64_t, uint64_t))v199)(v124, v123);
      MEMORY[0x1F4188790](v134);
      *(&v192 - 2) = (void (*)(uint64_t, uint64_t))v212;
      *(&v192 - 1) = (void (*)(uint64_t, uint64_t))v122;
      v261[4] = v267;
      v261[5] = v268;
      v262[0] = v269[0];
      *(_OWORD *)((char *)v262 + 9) = *(_OWORD *)((char *)v269 + 9);
      v261[0] = v263;
      v261[1] = v264;
      v261[2] = v265;
      v261[3] = v266;
      nullsub_1(v261);
      sub_1C0E86A1C((uint64_t)v261, (uint64_t)v273);
      sub_1BFF6364C((uint64_t)v271);
      uint64_t v135 = v220;
      sub_1C0E854A8((uint64_t (*)(uint64_t))sub_1C0E86A14, (uint64_t)(&v192 - 4), (uint64_t)v273);
      uint64_t v220 = v135;
      if (v135)
      {
        sub_1BFF630AC((uint64_t)v271);
        sub_1BFF630AC((uint64_t)v271);
        (*v215)(v213, v210);
        sub_1C0E86AA4(v214);
        (*v231)(v254, v255);
        sub_1C0E86898((uint64_t)v244, (uint64_t (*)(void))sub_1BFF2EF9C);
        swift_bridgeObjectRelease();
        (*v232)(v252, v257);
        return;
      }
      uint64_t v137 = v136;
      sub_1BFF630AC((uint64_t)v271);
      if (v137)
      {
        uint64_t v138 = v227;
        sub_1C1515AAC();
        uint64_t v139 = v213;
        (*v198)(v211, v213, v210);
        sub_1C1515B4C();
        swift_beginAccess();
        sub_1C0E868F8(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
        sub_1C0E868F8(&qword_1EA1A8090, MEMORY[0x1E4F273A8]);
        uint64_t v140 = v218;
        sub_1C15159EC();
        swift_endAccess();
        v199((char *)v124, v140);
        uint64_t v141 = (uint64_t)v138;
      }
      else
      {
        uint64_t v142 = v227;
        sub_1C1515AAC();
        swift_beginAccess();
        sub_1C0E868F8(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
        uint64_t v143 = (void (*)(unsigned char *, void))sub_1C1515B5C();
        uint64_t v139 = v213;
        sub_1C1515CAC();
        v143(v260, 0);
        swift_endAccess();
        uint64_t v141 = (uint64_t)v142;
      }
      uint64_t v144 = v214;
      uint64_t v145 = KeyPath;
      sub_1C0E86898(v141, (uint64_t (*)(void))sub_1BFF2F030);
      uint64_t v146 = v207;
      sub_1C0E86994(v144, v207);
      if (v193(v146, 1, v145) == 1)
      {
        sub_1BFF630AC((uint64_t)v271);
        (*v215)(v139, v210);
        sub_1C0E86AA4(v144);
        (*v231)(v254, v255);
        (*v232)(v252, v257);
        sub_1C0E86AA4(v146);
      }
      else if (swift_getEnumCaseMultiPayload())
      {
        sub_1BFF630AC((uint64_t)v271);
        (*v215)(v139, v210);
        sub_1C0E86AA4(v144);
        (*v231)(v254, v255);
        (*v232)(v252, v257);
        sub_1C0E86898(v146, (uint64_t (*)(void))type metadata accessor for FormatAttributedStringAttachment);
      }
      else
      {
        uint64_t v152 = (uint64_t)v202;
        uint64_t v153 = v146;
        uint64_t v154 = v203;
        (*v196)(v202, v153, v203);
        sub_1C1515AAC();
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v193 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))swift_getKeyPath();
        uint64_t v155 = v197[2];
        if (v155)
        {
          uint64_t v156 = v197[3];
          uint64_t v157 = v197[4];
          uint64_t v158 = v197[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v159 = v200;
          sub_1C0C5D594(v152, v158, v155, v156, v157, v200);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v159 = v200;
          (*v194)(v200, v152, v154);
        }
        uint64_t v160 = (objc_class *)type metadata accessor for FormatAttributedStringLink();
        id v161 = objc_allocWithZone(v160);
        uint64_t v162 = sub_1C1515E8C();
        uint64_t v163 = v159;
        unint64_t v165 = v164;
        uint64_t v166 = (void *)sub_1C151605C();
        sub_1BFE95664(v162, v165);
        v259.receiver = v161;
        v259.super_class = v160;
        id v167 = objc_msgSendSuper2(&v259, sel_initWithData_ofType_, v166, 0);

        unsigned __int8 v192 = *v195;
        uint64_t v168 = v203;
        v192(v163, v203);
        v258[7] = v167;
        swift_beginAccess();
        sub_1C0E868F8(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
        uint64_t v169 = (uint64_t)v201;
        uint64_t v170 = (void (*)(unsigned char *, void))sub_1C1515B5C();
        sub_1C151593C();
        sub_1BFF2F120();
        unsigned int v171 = (void (*)(void *, void))sub_1C1515C9C();
        sub_1C0E8677C(0, (unint64_t *)&qword_1EB884CE8, MEMORY[0x1E4FB0D88], sub_1BFF2F120, MEMORY[0x1E4F27658]);
        sub_1C0E86B38();
        sub_1C1515D5C();
        v171(v258, 0);
        v170(v260, 0);
        swift_endAccess();
        swift_release();
        sub_1BFF630AC((uint64_t)v271);
        sub_1C0E86898(v169, (uint64_t (*)(void))sub_1BFF2F030);
        v192((uint64_t)v202, v168);
        (*v215)(v213, v210);
        sub_1C0E86AA4(v214);
        (*v231)(v254, v255);
        (*v232)(v252, v257);
      }
      goto LABEL_50;
    }
    uint64_t v126 = *v116;
    uint64_t v127 = (uint64_t)v227;
    uint64_t v128 = v252;
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C1515AAC();
      swift_beginAccess();
      sub_1C0E868F8(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
      int v129 = v223;
      sub_1C1515B6C();
      swift_endAccess();
      sub_1C0E86898(v127, (uint64_t (*)(void))sub_1BFF2F030);
      sub_1C1515C7C();
      (*v221)(v129, v224);
      sub_1C0E868F8(&qword_1EA19CAB0, MEMORY[0x1E4F27270]);
      uint64_t v130 = sub_1C151E8CC();
      uint64_t v132 = v131;
      id v133 = sub_1C0609380(v126);
    }
    else
    {
      sub_1C1515AAC();
      swift_beginAccess();
      sub_1C0E868F8(&qword_1EB863388, (void (*)(uint64_t))sub_1BFF2F030);
      uint64_t v147 = v223;
      sub_1C1515B6C();
      swift_endAccess();
      sub_1C0E86898(v127, (uint64_t (*)(void))sub_1BFF2F030);
      sub_1C1515C7C();
      (*v221)(v147, v224);
      sub_1C0E868F8(&qword_1EA19CAB0, MEMORY[0x1E4F27270]);
      uint64_t v130 = sub_1C151E8CC();
      uint64_t v132 = v148;
      id v133 = sub_1C06097FC((uint64_t)v126);
    }
    uint64_t v149 = (uint64_t)v133;
    uint64_t v150 = v253;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v261[0] = v150;
    sub_1C10660B8(v149, v130, v132, isUniquelyReferenced_nonNull_native);
    uint64_t v253 = *(void *)&v261[0];

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFF630AC((uint64_t)v271);
    sub_1C0E86AA4(v214);
    (*v231)(v254, v255);
    (*v232)(v128, v257);
LABEL_50:
    uint64_t v65 = v243;
    uint64_t v66 = v251;
    uint64_t v67 = v274;
    int v63 = v222;
LABEL_5:
    v240(v67, v63, v65);
  }
  (*v241)(v245, 1, 1, v257);
  uint64_t v82 = v242;
  long long v83 = v246;
LABEL_53:
  sub_1C0E86898((uint64_t)v244, (uint64_t (*)(void))sub_1BFF2EF9C);
  uint64_t v173 = v253;
  if (!*(void *)(v253 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A1C0);
    v205((uint64_t)v82, v229, v218);
    swift_getKeyPath();
    sub_1C151593C();
    sub_1BFF2F120();
    goto LABEL_79;
  }
  sub_1BFC39268(0, (unint64_t *)&unk_1EB87A260);
  v205((uint64_t)v83, v229, v218);
  uint64_t v174 = (void *)sub_1C151F5EC();
  uint64_t v175 = 0;
  uint64_t v176 = *(void *)(v173 + 64);
  uint64_t v257 = v173 + 64;
  uint64_t v177 = 1 << *(unsigned char *)(v173 + 32);
  uint64_t v178 = -1;
  if (v177 < 64) {
    uint64_t v178 = ~(-1 << v177);
  }
  unint64_t v179 = v178 & v176;
  uint64_t v274 = (char *)((unint64_t)(v177 + 63) >> 6);
  while (2)
  {
    if (v179)
    {
      unint64_t v180 = __clz(__rbit64(v179));
      v179 &= v179 - 1;
      unint64_t v181 = v180 | (v175 << 6);
LABEL_71:
      uint64_t v185 = *(void **)(*(void *)(v173 + 56) + 8 * v181);
      swift_bridgeObjectRetain();
      id v186 = v185;
      id v187 = objc_msgSend(v174, sel_mutableString);
      uint64_t v188 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      id v189 = objc_msgSend(v187, sel_rangeOfString_, v188);
      uint64_t v191 = v190;

      if (v189 != (id)sub_1C15151CC()) {
        objc_msgSend(v174, sel_replaceCharactersInRange_withAttributedString_, v189, v191, v186);
      }

      uint64_t v173 = v253;
      continue;
    }
    break;
  }
  if (__OFADD__(v175++, 1))
  {
    __break(1u);
    goto LABEL_83;
  }
  if (v175 >= (uint64_t)v274) {
    goto LABEL_77;
  }
  unint64_t v183 = *(void *)(v257 + 8 * v175);
  if (v183)
  {
LABEL_70:
    unint64_t v179 = (v183 - 1) & v183;
    unint64_t v181 = __clz(__rbit64(v183)) + (v175 << 6);
    goto LABEL_71;
  }
  uint64_t v184 = v175 + 1;
  if (v175 + 1 >= (uint64_t)v274) {
    goto LABEL_77;
  }
  unint64_t v183 = *(void *)(v257 + 8 * v184);
  if (v183) {
    goto LABEL_69;
  }
  uint64_t v184 = v175 + 2;
  if (v175 + 2 >= (uint64_t)v274) {
    goto LABEL_77;
  }
  unint64_t v183 = *(void *)(v257 + 8 * v184);
  if (v183) {
    goto LABEL_69;
  }
  uint64_t v184 = v175 + 3;
  if (v175 + 3 >= (uint64_t)v274)
  {
LABEL_77:
    swift_release();
    return;
  }
  unint64_t v183 = *(void *)(v257 + 8 * v184);
  if (v183)
  {
LABEL_69:
    uint64_t v175 = v184;
    goto LABEL_70;
  }
  while (1)
  {
    uint64_t v175 = v184 + 1;
    if (__OFADD__(v184, 1)) {
      break;
    }
    if (v175 >= (uint64_t)v274) {
      goto LABEL_77;
    }
    unint64_t v183 = *(void *)(v257 + 8 * v175);
    ++v184;
    if (v183) {
      goto LABEL_70;
    }
  }
LABEL_83:
  __break(1u);
}

uint64_t sub_1BFF2DB04(uint64_t a1)
{
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2EE3C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v57 - v7;
  uint64_t v9 = (int *)type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (id *)((char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFF2EE3C(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v57 - v16;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v57 - v19;
  *(void *)&double v23 = MEMORY[0x1F4188790](v21).n128_u64[0];
  uint64_t v24 = (char *)&v57 - v22;
  switch(*v1)
  {
    case 1:
    case 0xA:
      uint64_t v25 = a1 + v9[10];
      return *(unsigned __int8 *)(v25 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 32)) == 2;
    case 2:
      uint64_t v27 = a1 + v9[10];
      return *(unsigned char *)(v27 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 32)) == 0;
    case 3:
      uint64_t v28 = *(void **)(a1 + v9[14]);
      if (!v28) {
        return 0;
      }
      uint64_t v29 = *(void **)(a1 + 40);
      if ((objc_msgSend(v29, sel_respondsToSelector_, sel_narrativeTrack, v23) & 1) == 0) {
        return 0;
      }
      id v30 = v28;
      uint64_t v26 = (uint64_t)objc_msgSend(v29, sel_narrativeTrack);
      if (v26)
      {
        sub_1C1445A14();
        id v31 = v30;
        id v32 = (id)v26;
        char v33 = sub_1C151FB6C();

        return v33 & 1;
      }

      return v26;
    case 4:
      uint64_t v35 = *(void **)(a1 + 40);
      if ((objc_msgSend(v35, sel_respondsToSelector_, sel_narrativeTrack, v23) & 1) == 0) {
        return 0;
      }
      id v36 = objc_msgSend(v35, sel_narrativeTrack);
      if (!v36) {
        return 0;
      }

      return 1;
    case 5:
      return *(void *)(a1 + v9[14]) != 0;
    case 6:
      sub_1BFEE91C4(a1 + v9[11], (uint64_t)&v57 - v22);
      uint64_t v37 = sub_1C151D2DC();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v24, 1, v37) == 1) {
        goto LABEL_51;
      }
      sub_1BFEE91C4((uint64_t)v24, (uint64_t)v20);
      int v39 = (*(uint64_t (**)(char *, uint64_t))(v38 + 88))(v20, v37);
      if (v39 == *MEMORY[0x1E4F7A858] || v39 == *MEMORY[0x1E4F7A848])
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v37);
        uint64_t v41 = (void (*)(uint64_t))MEMORY[0x1E4F7A860];
        uint64_t v42 = (uint64_t)v24;
        goto LABEL_45;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v37);
LABEL_51:
      uint64_t v55 = (void (*)(uint64_t))MEMORY[0x1E4F7A860];
      uint64_t v56 = (uint64_t)v24;
      goto LABEL_55;
    case 7:
      return (uint64_t)objc_msgSend(*(id *)(a1 + 40), sel_hasVideo, v23, v57, v58);
    case 8:
      unsigned __int8 v44 = objc_msgSend(*(id *)(a1 + 40), sel_isSponsored, v23);
      sub_1BFF96680(a1, (uint64_t)v11);
      if (v44) {
        uint64_t v26 = 1;
      }
      else {
        uint64_t v26 = (uint64_t)objc_msgSend(v11[5], sel_isDisplayingAsNativeAd);
      }
      sub_1BFF2F7F4((uint64_t)v11);
      return v26;
    case 9:
      return (uint64_t)objc_msgSend(*(id *)(a1 + 40), sel_isAIGenerated, v23, v57, v58);
    case 0xB:
      uint64_t v45 = a1 + v9[10];
      return *(unsigned __int8 *)(v45 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 32)) == 1;
    case 0xC:
      return (uint64_t)objc_msgSend(*(id *)(a1 + 40), sel_isDeleted, v23, v57, v58);
    case 0xD:
      return (uint64_t)objc_msgSend(*(id *)(a1 + 40), sel_isDraft, v23, v57, v58);
    case 0xE:
      uint64_t v46 = *(void **)(a1 + 40);
      if ((objc_msgSend(v46, sel_respondsToSelector_, sel_isLocalDraft, v23) & 1) == 0) {
        return 0;
      }
      uint64_t v47 = sel_isLocalDraft;
      goto LABEL_37;
    case 0xF:
      return (uint64_t)objc_msgSend(*(id *)(a1 + 40), sel_isPressRelease, v23, v57, v58);
    case 0x10:
      id v48 = objc_msgSend(*(id *)(a1 + 40), sel_routeURL, v23);
      if (v48)
      {
        uint64_t v49 = v48;
        sub_1C1515F1C();

        uint64_t v51 = v57;
        uint64_t v50 = v58;
        (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v8, v5, v58);
        uint64_t v26 = 1;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v8, 0, 1, v50);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v8, 1, v50) != 1) {
          goto LABEL_50;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v57 + 56))(v8, 1, 1, v58);
      }
      uint64_t v26 = 0;
LABEL_50:
      sub_1BFEE9328((uint64_t)v8, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      return v26;
    case 0x11:
      uint64_t v46 = *(void **)(a1 + 40);
      if ((objc_msgSend(v46, sel_respondsToSelector_, sel_isEvergreen, v23) & 1) == 0) {
        return 0;
      }
      uint64_t v47 = sel_isEvergreen;
      goto LABEL_37;
    case 0x12:
      uint64_t v46 = *(void **)(a1 + 40);
      if ((objc_msgSend(v46, sel_respondsToSelector_, sel_isIssueOnly, v23) & 1) == 0) {
        return 0;
      }
      uint64_t v47 = sel_isIssueOnly;
LABEL_37:
      unint64_t v52 = v46;
      return (uint64_t)objc_msgSend(v52, v47, v23, v57, v58);
    case 0x13:
      return (uint64_t)objc_msgSend(*(id *)(a1 + 40), sel_isExplicitContent, v23, v57, v58);
    case 0x14:
      unint64_t v52 = *(void **)(a1 + 40);
      uint64_t v47 = sel_isBlockedExplicitContent;
      return (uint64_t)objc_msgSend(v52, v47, v23, v57, v58);
    case 0x15:
      sub_1BFEE91C4(a1 + v9[11], (uint64_t)v17);
      uint64_t v53 = sub_1C151D2DC();
      uint64_t v54 = *(void *)(v53 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v17, 1, v53) == 1) {
        goto LABEL_54;
      }
      sub_1BFEE91C4((uint64_t)v17, (uint64_t)v14);
      if ((*(unsigned int (**)(char *, uint64_t))(v54 + 88))(v14, v53) == *MEMORY[0x1E4F7A858])
      {
        (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v53);
        uint64_t v41 = (void (*)(uint64_t))MEMORY[0x1E4F7A860];
        uint64_t v42 = (uint64_t)v17;
LABEL_45:
        sub_1BFEE9328(v42, (unint64_t *)&unk_1EB8716B0, v41);
        return 1;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v53);
LABEL_54:
        uint64_t v55 = (void (*)(uint64_t))MEMORY[0x1E4F7A860];
        uint64_t v56 = (uint64_t)v17;
LABEL_55:
        sub_1BFEE9328(v56, (unint64_t *)&unk_1EB8716B0, v55);
        return 0;
      }
    default:
      return *(unsigned char *)(a1 + 56) != 0;
  }
}

void sub_1BFF2E3AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2E400(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2E454(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2E4B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2E51C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2E580(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1515FDC();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1BFF2E5E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2E634(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2E698(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2E6FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2E760(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2E7B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2E818(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2E86C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2E8D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2E934(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2E988(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2E9EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2EA40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2EAA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2EB08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2EB6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2EBC0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2EC14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2EC78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2ECDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2ED30(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2ED84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2EDE8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2EE3C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2EE90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2EEE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF2EF38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF2EF9C()
{
  if (!qword_1EB8902E0)
  {
    sub_1C1515ADC();
    sub_1BFF6770C(&qword_1EB884CC8, MEMORY[0x1E4F27368]);
    unint64_t v0 = sub_1C152037C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8902E0);
    }
  }
}

void sub_1BFF2F030()
{
  if (!qword_1EB890130)
  {
    sub_1C1515B0C();
    sub_1BFF6770C(&qword_1EB884CD0, MEMORY[0x1E4F27388]);
    unint64_t v0 = sub_1C151F1EC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890130);
    }
  }
}

void sub_1BFF2F0C4()
{
  if (!qword_1EB884CE0)
  {
    sub_1C0078880();
    unint64_t v0 = sub_1C1515D6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884CE0);
    }
  }
}

uint64_t sub_1BFF2F120()
{
  return sub_1C0E868F8(&qword_1EB884CB8, MEMORY[0x1E4FB0D88]);
}

uint64_t sub_1BFF2F154(uint64_t a1)
{
  return sub_1BFF895CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1BFF2F15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v76 = *MEMORY[0x1E4F143B8];
  uint64_t v65 = *(void *)(a4 + 16);
  if (v65)
  {
    sub_1C1517EFC();
    uint64_t v7 = *(void *)(*(void *)(v75 + 40) + 16);
    swift_beginAccess();
    uint64_t v8 = *(void *)(*(void *)(v7 + 16) + 16);
    uint64_t v62 = a2;
    if (v8)
    {
      v74[0] = *(void *)(v75 + 56);
      uint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v10 = sub_1BFEF3B08(v9);
      sub_1BFEF3808(v10);
      swift_release();
      uint64_t v72 = v74[0];
    }
    else
    {
      uint64_t v72 = sub_1BFEF3784();
      swift_release();
    }
    uint64_t v64 = a4 + 32;
    v61[0] = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v11 = 0;
    v61[1] = a3;
    uint64_t v63 = a3;
    while (1)
    {
      uint64_t v13 = (uint64_t *)(v64 + 32 * v11);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      uint64_t v16 = v13[3];
      uint64_t v66 = v13[2];
      uint64_t v17 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      uint64_t v69 = v16;
      swift_bridgeObjectRetain();
      if (v17 != -1) {
        swift_once();
      }
      uint64_t v18 = qword_1EB93C770;
      uint64_t v19 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      uint64_t v20 = (uint64_t *)(v18 + 16);
      swift_beginAccess();
      uint64_t v21 = *(void *)(v18 + 16);
      uint64_t v22 = *(void *)(v21 + 16);
      uint64_t v70 = v11;
      if (!v22) {
        goto LABEL_15;
      }
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1BFEF2D8C(v15, v14);
      if ((v24 & 1) == 0) {
        break;
      }
      uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 24 * v23 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v47 = *(void *)(v25 + 16);
      if (!v47)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v70;
        goto LABEL_8;
      }
      uint64_t v68 = v14;
      uint64_t v71 = v25;
      id v48 = (uint64_t *)(v25 + 64);
      while (1)
      {
        uint64_t v49 = *(v48 - 1);
        uint64_t v50 = *v48;
        char v51 = *(unsigned char *)(v49 + 32);
        unsigned int v52 = v51 & 0x3F;
        unint64_t v53 = (unint64_t)((1 << v51) + 63) >> 6;
        size_t v54 = 8 * v53;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v52 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1F4188790](isStackAllocationSafe);
          bzero((char *)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v54);
          uint64_t v56 = sub_1BFEFB09C((uint64_t)v61 - ((v54 + 15) & 0x3FFFFFFFFFFFFFF0), v53, v49, v72);
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v57 = (void *)swift_slowAlloc();
          bzero(v57, v54);
          uint64_t v56 = sub_1BFEFB09C((uint64_t)v57, v53, v49, v72);
          swift_bridgeObjectRelease();
          MEMORY[0x1C18C9B00](v57, -1, -1);
        }
        char v58 = sub_1BFEFAE14(v56, v49);
        swift_release();
        if (v58) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v48 += 5;
        if (!--v47) {
          goto LABEL_7;
        }
      }
      char v59 = sub_1BFEFB810(v72, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v59 & 1) == 0) {
        goto LABEL_30;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v70;
      uint64_t v62 = v66;
      uint64_t v63 = v69;
LABEL_8:
      swift_bridgeObjectRelease();
      uint64_t v11 = v12 + 1;
      if (v11 == v65)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v62;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v67 = v19;
    swift_endAccess();
    v73[0] = v15;
    v73[1] = v14;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v73, v74);
    uint64_t v26 = v74[1];
    uint64_t v68 = v74[0];
    uint64_t v27 = v74[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v71 = v27;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v73[0] = *v20;
    uint64_t v29 = v73[0];
    *uint64_t v20 = 0x8000000000000000;
    uint64_t v30 = v15;
    uint64_t v31 = v14;
    unint64_t v33 = sub_1BFEF2D8C(v15, v14);
    uint64_t v34 = *(void *)(v29 + 16);
    BOOL v35 = (v32 & 1) == 0;
    uint64_t v36 = v34 + v35;
    if (__OFADD__(v34, v35))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    char v37 = v32;
    if (*(void *)(v29 + 24) < v36)
    {
      sub_1BFFDF158(v36, isUniquelyReferenced_nonNull_native);
      unint64_t v38 = sub_1BFEF2D8C(v30, v31);
      if ((v37 & 1) != (v39 & 1))
      {
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v33 = v38;
      uint64_t v40 = (void *)v73[0];
      if ((v37 & 1) == 0) {
        goto LABEL_24;
      }
LABEL_22:
      uint64_t v41 = (uint64_t *)(v40[7] + 24 * v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v41 = v68;
      v41[1] = v26;
      uint64_t v25 = v71;
      v41[2] = v71;
      uint64_t v14 = v31;
LABEL_26:
      *uint64_t v20 = (uint64_t)v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v40 = (void *)v73[0];
      if (v32) {
        goto LABEL_22;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v40 = (void *)v73[0];
      if (v37) {
        goto LABEL_22;
      }
    }
LABEL_24:
    v40[(v33 >> 6) + 8] |= 1 << v33;
    uint64_t v42 = (uint64_t *)(v40[6] + 16 * v33);
    *uint64_t v42 = v30;
    v42[1] = v31;
    uint64_t v43 = (uint64_t *)(v40[7] + 24 * v33);
    *uint64_t v43 = v68;
    v43[1] = v26;
    uint64_t v25 = v71;
    _OWORD v43[2] = v71;
    uint64_t v44 = v40[2];
    BOOL v45 = __OFADD__(v44, 1);
    uint64_t v46 = v44 + 1;
    if (v45) {
      goto LABEL_42;
    }
    uint64_t v14 = v31;
    v40[2] = v46;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1BFF2F7F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFF2F850(uint64_t a1)
{
  return sub_1BFF2F85C(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

uint64_t sub_1BFF2F85C(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  if (a2()) {
    return 1;
  }
  else {
    return a4(a1) & 1;
  }
}

uint64_t sub_1BFF2F8B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFF2F15C(a1, a2, a3, a4);
}

unint64_t sub_1BFF2F918()
{
  unint64_t result = qword_1EB875408;
  if (!qword_1EB875408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875408);
  }
  return result;
}

uint64_t sub_1BFF2F96C(uint64_t a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t v50 = a3;
  char v51 = a4;
  uint64_t v5 = v4;
  sub_1BFF31DC0(0, &qword_1EB8712A0, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FAB678]);
  uint64_t v58 = v8;
  size_t v54 = *(void (***)(char *, uint64_t))(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v49 = (char *)v45 - v9;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v59 = v10;
  uint64_t v52 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v57 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v60 = (char *)v45 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (void *)((char *)v45 - v15);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)v45 - v18;
  uint64_t v62 = a1;
  swift_beginAccess();
  uint64_t v20 = v5[2];
  uint64_t v21 = v5[3];
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1BFF303E0(v20, v21);
  uint64_t v24 = v23;
  uint64_t v25 = v16;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v26 = v5[5];
  swift_beginAccess();
  unint64_t v61 = v5[4];
  unint64_t v27 = v61;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF35EA4(v27);
  uint64_t v28 = (uint64_t)v56;
  sub_1BFF30600(a2, v22, v24, v25);
  if (v28)
  {
    swift_bridgeObjectRelease_n();
    sub_1BFF322A8(v27);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v47 = v22;
    id v48 = v19;
    uint64_t v56 = a2;
    sub_1BFF322A8(v27);
    swift_bridgeObjectRelease();
    uint64_t v30 = v52;
    uint64_t v31 = v59;
    (*(void (**)(char *, uint64_t *, uint64_t))(v52 + 16))(v60, v25, v59);
    uint64_t v55 = *(void *)(v26 + 16);
    if (v55)
    {
      v45[1] = v24;
      uint64_t v46 = v25;
      unint64_t v53 = (void (**)(uint64_t, uint64_t))(v54 + 1);
      size_t v54 = (void (**)(char *, uint64_t))(v30 + 8);
      char v32 = (void (**)(char *, char *, uint64_t))(v30 + 32);
      uint64_t v33 = swift_bridgeObjectRetain();
      uint64_t v34 = 0;
      v45[0] = (v30 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      uint64_t v35 = (uint64_t)v49;
      uint64_t v36 = v57;
      uint64_t v37 = v59;
      do
      {
        uint64_t v38 = v33;
        unint64_t v39 = *(void *)(v33 + 8 * v34 + 32);
        unint64_t v61 = v39;
        sub_1BFF32264(v39);
        sub_1BFF34310((uint64_t)v56, v35);
        ++v34;
        uint64_t v40 = v60;
        sub_1C1517C2C();
        (*v53)(v35, v58);
        sub_1BFF31E90(v39);
        (*v54)(v40, v37);
        uint64_t v41 = *v32;
        (*v32)(v40, v36, v37);
        uint64_t v33 = v38;
      }
      while (v55 != v34);
      swift_bridgeObjectRelease();
      uint64_t v42 = v59;
      uint64_t v30 = v52;
      uint64_t v25 = v46;
    }
    else
    {
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
      uint64_t v42 = v31;
    }
    uint64_t v43 = v48;
    v41(v48, v60, v42);
    uint64_t v44 = *(void (**)(uint64_t *, uint64_t))(v30 + 8);
    v44(v25, v42);
    swift_bridgeObjectRelease();
    v50(0);
    v51();
    sub_1C151738C();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(char *, uint64_t))v44)(v43, v42);
  }
}

uint64_t sub_1BFF2FEF8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void, __n128), uint64_t (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t *, void, uint64_t *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))
{
  id v48 = a7;
  uint64_t v46 = a5;
  BOOL v45 = a4;
  uint64_t v10 = v8;
  uint64_t v11 = v7;
  uint64_t v44 = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v15 = v14;
  uint64_t v49 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v51 = (uint64_t *)((char *)&v41 - v16);
  uint64_t v59 = a1;
  uint64_t v52 = a2;
  uint64_t v17 = *(uint64_t *)((char *)a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  uint64_t v18 = *(void *)(v11 + 16);
  uint64_t v19 = *(void *)(v11 + 24);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1BFF303E0(v18, v19);
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v11 + 80);
  uint64_t v47 = a6;
  if (v23)
  {
    uint64_t v24 = *(void *)(v11 + 72);
    uint64_t v25 = *(void *)(v17 + 24);
    if (v25)
    {
      uint64_t v57 = *(void *)(v17 + 16);
      uint64_t v58 = v25;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease_n();
      uint64_t v24 = v57;
      uint64_t v23 = v58;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    uint64_t v24 = 0;
  }
  uint64_t v43 = v24;
  uint64_t v50 = v20;
  swift_beginAccess();
  if (*(unsigned char *)(v11 + 104) == 1)
  {
    swift_bridgeObjectRetain();
    int v42 = 1;
  }
  else
  {
    uint64_t v41 = v15;
    swift_beginAccess();
    uint64_t v27 = *(void *)(v11 + 120);
    char v28 = *(unsigned char *)(v11 + 128);
    uint64_t v54 = *(void *)(v11 + 112);
    uint64_t v26 = v54;
    uint64_t v55 = v27;
    char v56 = v28;
    swift_bridgeObjectRetain();
    sub_1BFE94AB4(v26, v27, v28);
    sub_1C1517EFC();
    int v29 = FormatBoolean.value(contextLayoutOptions:)(v53);
    if (v10)
    {
      swift_release();
      sub_1BFE94AD4(v26, v27, v28);
LABEL_13:
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    int v42 = v29;
    swift_release();
    sub_1BFE94AD4(v26, v27, v28);
    uint64_t v15 = v41;
  }
  swift_beginAccess();
  unint64_t v30 = *(void *)(v11 + 64);
  unint64_t v53 = v30;
  sub_1BFF35EA4(v30);
  uint64_t v31 = v52;
  sub_1BFF30600(v52, v50, (uint64_t)v22, v51);
  if (v10)
  {
    sub_1BFF322A8(v30);
    goto LABEL_13;
  }
  sub_1BFF322A8(v30);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_retain();
  uint64_t v33 = swift_bridgeObjectRetain();
  uint64_t v34 = sub_1C12A4C68(v33, (uint64_t)v31);
  swift_bridgeObjectRelease();
  uint64_t v35 = swift_release();
  uint64_t v41 = (uint64_t)&v41;
  __n128 v36 = MEMORY[0x1F4188790](v35);
  *(&v41 - 6) = v11;
  *(&v41 - 5) = (uint64_t)v31;
  *(&v41 - 4) = v43;
  *(&v41 - 3) = v23;
  uint64_t v37 = v45(0, v36);
  uint64_t v38 = v46();
  uint64_t v52 = v22;
  unint64_t v39 = v22;
  uint64_t v40 = v51;
  v48(v50, v39, v42 & 1, v51, v34, v47, &v41 - 8, v37, v38);
  (*(void (**)(uint64_t *, uint64_t))(v49 + 8))(v40, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFF303E0(uint64_t a1, uint64_t a2)
{
  if (!v2[3])
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v2[7];
    if (!v5) {
      return a1;
    }
    goto LABEL_3;
  }
  uint64_t v11 = v2[2];
  uint64_t v12 = v2[3];
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  sub_1C151E80C();
  a1 = v11;
  a2 = v12;
  uint64_t v5 = v2[7];
  if (v5)
  {
LABEL_3:
    uint64_t v6 = *(void *)(v5 + 32);
    uint64_t v7 = v2[6];
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *(void *)(v6 + 16);
    *(void *)(v6 + 16) = 0x8000000000000000;
    sub_1C1065DA0(v7, a1, a2, isUniquelyReferenced_nonNull_native);
    *(void *)(v6 + 16) = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1BFF30528(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF30570(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF305B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF30600@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unsigned int v229 = a1;
  uint64_t v228 = a4;
  uint64_t v7 = sub_1C151962C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v228 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C15179CC();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (double *)((char *)&v228 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v228 - v16;
  uint64_t v18 = *v4;
  switch(((unint64_t)*v4 >> 59) & 0x1E | (*v4 >> 2) & 1)
  {
    case 1uLL:
      uint64_t v25 = v18 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v27 = *(void *)(v25 + 16);
      uint64_t v26 = *(void *)(v25 + 24);
      if (!v26)
      {
        char v28 = (unsigned int *)MEMORY[0x1E4FAB4E8];
        goto LABEL_71;
      }
      if (v26 == 1)
      {
        char v28 = (unsigned int *)MEMORY[0x1E4FAB4E0];
LABEL_71:
        uint64_t v176 = *v28;
        uint64_t v177 = v15;
        uint64_t v178 = sub_1C151729C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v178 - 8) + 104))(v17, v176, v178);
        uint64_t v179 = v177;
        (*(void (**)(char *, void, uint64_t))(v177 + 104))(v17, *MEMORY[0x1E4FAB848], v11);
        uint64_t v180 = v230;
LABEL_72:
        sub_1C14BD820();
        uint64_t v182 = v181;
        uint64_t v183 = swift_allocBox();
        uint64_t v185 = v184;
        swift_bridgeObjectRetain();
        sub_1C1517EFC();
        double v186 = sub_1BFF493E4((uint64_t)v231, v27);
        if (v180)
        {
          swift_bridgeObjectRelease();
          swift_release();
          (*(void (**)(char *, uint64_t))(v179 + 8))(v17, v11);
          return swift_deallocBox();
        }
        double v196 = v186;
        swift_release();
        long long v197 = (char *)v185 + *(int *)(v182 + 48);
        *uint64_t v185 = v196;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *, uint64_t))(v179 + 32))(v197, v17, v11);
        uint64_t v23 = v228;
        *uint64_t v228 = v183;
        uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB970];
        goto LABEL_101;
      }
      uint64_t v179 = v15;
      sub_1C1517EFC();
      uint64_t v187 = v230;
      double v188 = sub_1BFF493E4((uint64_t)v231, v26);
      uint64_t v180 = v187;
      uint64_t result = swift_release();
      if (!v187)
      {
        *uint64_t v13 = v188;
        (*(void (**)(double *, void, uint64_t))(v179 + 104))(v13, *MEMORY[0x1E4FAB850], v11);
        (*(void (**)(char *, double *, uint64_t))(v179 + 32))(v17, v13, v11);
        goto LABEL_72;
      }
      return result;
    case 2uLL:
      uint64_t v29 = v18 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v30 = *(void *)(v29 + 16);
      unint64_t v31 = *(void *)(v29 + 24);
      uint64_t v231 = (uint64_t *)v30;
      unint64_t v232 = v31;
      sub_1BFF35BC8(v30);
      sub_1BFF35BC8(v31);
      sub_1BFF35498(a2, a3, (uint64_t)v229, v228);
      sub_1BFF35C00(v30);
      return sub_1BFF35C00(v31);
    case 3uLL:
      uint64_t v33 = *(void *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v34 = swift_allocObject();
      sub_1C1517EFC();
      uint64_t v35 = v230;
      double v36 = sub_1BFF493E4((uint64_t)v231, v33);
      swift_release();
      if (v35) {
        return swift_deallocUninitializedObject();
      }
      *(double *)(v34 + 16) = v36;
      uint64_t v23 = v228;
      *uint64_t v228 = v34;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FABA00];
      goto LABEL_101;
    case 4uLL:
      uint64_t v37 = *(void *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v38 = swift_allocObject();
      sub_1C1517EFC();
      uint64_t v39 = v230;
      double v40 = sub_1BFF493E4((uint64_t)v231, v37);
      swift_release();
      if (v39) {
        return swift_deallocUninitializedObject();
      }
      *(double *)(v38 + 16) = v40;
      uint64_t v23 = v228;
      *uint64_t v228 = v38;
      goto LABEL_63;
    case 5uLL:
      uint64_t v41 = *(void *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v42 = swift_allocObject();
      sub_1C1517EFC();
      uint64_t v43 = v230;
      double v44 = sub_1BFF493E4((uint64_t)v231, v41);
      if (v43) {
        goto LABEL_44;
      }
      double v45 = v44;
      swift_release();
      *(double *)(v42 + 16) = v45;
      uint64_t v23 = v228;
      *uint64_t v228 = v42;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB950];
      goto LABEL_101;
    case 6uLL:
      uint64_t v46 = *(void *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v47 = swift_allocObject();
      sub_1C1517EFC();
      uint64_t v48 = v230;
      double v49 = sub_1BFF493E4((uint64_t)v231, v46);
      if (v48) {
        goto LABEL_44;
      }
      double v50 = v49;
      swift_release();
      *(double *)(v47 + 16) = v50;
      uint64_t v23 = v228;
      *uint64_t v228 = v47;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB958];
      goto LABEL_101;
    case 7uLL:
      uint64_t v51 = v18 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v52 = *(void *)(v51 + 16);
      int v53 = *(unsigned __int8 *)(v51 + 24);
      if (v53 == 12)
      {
        uint64_t v54 = swift_allocObject();
        uint64_t v55 = self;
        swift_bridgeObjectRetain();
        *(void *)(v54 + 16) = objc_msgSend(v55, sel_defaultMetrics);
        sub_1C1517EFC();
        uint64_t v56 = v230;
        double v57 = sub_1BFF493E4((uint64_t)v231, v52);
        if (v56) {
          goto LABEL_21;
        }
        double v58 = v57;
      }
      else
      {
        LOBYTE(v231) = v53;
        swift_bridgeObjectRetain();
        id v154 = sub_1BFF68690();
        uint64_t v54 = swift_allocObject();
        *(void *)(v54 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, v154);
        sub_1C1517EFC();
        uint64_t v155 = v230;
        double v156 = sub_1BFF493E4((uint64_t)v231, v52);
        if (v155) {
          goto LABEL_56;
        }
        double v58 = v156;
      }
      swift_release();
      *(double *)(v54 + 24) = v58;
      swift_bridgeObjectRelease();
      uint64_t v23 = v228;
      *uint64_t v228 = v54;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB980];
      goto LABEL_101;
    case 8uLL:
      uint64_t v59 = v18 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v60 = *(void *)(v59 + 16);
      int v61 = *(unsigned __int8 *)(v59 + 24);
      if (v61 == 12)
      {
        uint64_t v54 = swift_allocObject();
        uint64_t v62 = self;
        swift_bridgeObjectRetain();
        *(void *)(v54 + 16) = objc_msgSend(v62, sel_defaultMetrics);
        sub_1C1517EFC();
        uint64_t v63 = v230;
        double v64 = sub_1BFF493E4((uint64_t)v231, v60);
        if (v63)
        {
LABEL_21:
          swift_bridgeObjectRelease();
LABEL_57:
          swift_release();

          return swift_deallocUninitializedObject();
        }
        double v198 = v64;
      }
      else
      {
        LOBYTE(v231) = v61;
        swift_bridgeObjectRetain();
        id v154 = sub_1BFF68690();
        uint64_t v54 = swift_allocObject();
        *(void *)(v54 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, v154);
        sub_1C1517EFC();
        uint64_t v157 = v230;
        double v158 = sub_1BFF493E4((uint64_t)v231, v60);
        if (v157)
        {
LABEL_56:
          swift_bridgeObjectRelease();

          goto LABEL_57;
        }
        double v198 = v158;
      }
      swift_release();
      *(double *)(v54 + 24) = v198;
      swift_bridgeObjectRelease();
      uint64_t v23 = v228;
      *uint64_t v228 = v54;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB998];
      goto LABEL_101;
    case 9uLL:
      uint64_t v65 = v18 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v66 = *(uint64_t **)(v65 + 16);
      unint64_t v67 = *(void *)(v65 + 24);
      uint64_t v68 = swift_allocObject();
      uint64_t v231 = v66;
      unint64_t v232 = v67;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v69 = v230;
      sub_1C0DA7A28(v229);
      if (v69) {
        goto LABEL_23;
      }
      uint64_t v163 = v70;
      swift_bridgeObjectRelease();
      swift_release();
      *(void *)(v68 + 16) = v163;
      uint64_t v23 = v228;
      *uint64_t v228 = v68;
LABEL_63:
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FABA08];
      goto LABEL_101;
    case 0xAuLL:
      uint64_t v71 = v18 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v72 = *(void *)(v71 + 16);
      int v73 = *(unsigned __int8 *)(v71 + 24);
      if (v73)
      {
        if (v73 == 1)
        {
          uint64_t v74 = sub_1C1517A8C();
          uint64_t v75 = swift_allocBox();
          uint64_t v77 = v76;
          sub_1C1517EFC();
          uint64_t v78 = v230;
          double v79 = sub_1BFF493E4((uint64_t)v231, v72);
          if (v78) {
            goto LABEL_79;
          }
          double v80 = v79;
          swift_release();
          *uint64_t v77 = v80;
          int v81 = (unsigned int *)MEMORY[0x1E4FAB8E8];
        }
        else
        {
          uint64_t v74 = sub_1C1517A8C();
          uint64_t v75 = swift_allocBox();
          uint64_t v77 = v193;
          sub_1C1517EFC();
          uint64_t v194 = v230;
          double v195 = sub_1BFF493E4((uint64_t)v231, v72);
          if (v194) {
            goto LABEL_79;
          }
          double v222 = v195;
          swift_release();
          *uint64_t v77 = v222;
          uint64_t v223 = *MEMORY[0x1E4FAB8D0];
          uint64_t v224 = sub_1C1517A7C();
          (*(void (**)(double *, uint64_t, uint64_t))(*(void *)(v224 - 8) + 104))(v77, v223, v224);
          int v81 = (unsigned int *)MEMORY[0x1E4FAB8E0];
        }
      }
      else
      {
        uint64_t v74 = sub_1C1517A8C();
        uint64_t v75 = swift_allocBox();
        uint64_t v77 = v189;
        sub_1C1517EFC();
        uint64_t v190 = v230;
        double v191 = sub_1BFF493E4((uint64_t)v231, v72);
        if (v190) {
          goto LABEL_79;
        }
        double v192 = v191;
        swift_release();
        *uint64_t v77 = v192;
        int v81 = (unsigned int *)MEMORY[0x1E4FAB8B0];
      }
      (*(void (**)(double *, void, uint64_t))(*(void *)(v74 - 8) + 104))(v77, *v81, v74);
      goto LABEL_100;
    case 0xBuLL:
      uint64_t v82 = v18 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v83 = *(void *)(v82 + 16);
      char v84 = *(unsigned char *)(v82 + 24);
      uint64_t v85 = swift_allocObject();
      *(void *)(v85 + 16) = v83;
      uint64_t v86 = v228;
      *uint64_t v228 = v85;
      sub_1BFF31E28(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
      uint64_t v88 = v87;
      uint64_t v89 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 104);
      if (v84) {
        int v90 = (unsigned int *)MEMORY[0x1E4FABA10];
      }
      else {
        int v90 = (unsigned int *)MEMORY[0x1E4FAB9B8];
      }
      uint64_t v159 = *v90;
      uint64_t v160 = v86;
      return v89(v160, v159, v88);
    case 0xCuLL:
      uint64_t v91 = v18 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v92 = *(void *)(v91 + 16);
      char v93 = *(unsigned char *)(v91 + 24);
      uint64_t v94 = swift_allocObject();
      if ((v93 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1C1517EFC();
        uint64_t v161 = v230;
        double v162 = sub_1BFF493E4((uint64_t)v231, v92);
        if (!v161)
        {
          double v199 = v162;
          swift_release();
          *(double *)(v94 + 16) = v199;
          swift_bridgeObjectRelease();
          uint64_t v23 = v228;
          *uint64_t v228 = v94;
          uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB9D0];
          goto LABEL_101;
        }
LABEL_23:
        swift_bridgeObjectRelease();
        swift_release();
        return swift_deallocUninitializedObject();
      }
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      uint64_t v95 = v230;
      double v96 = sub_1BFF493E4((uint64_t)v231, v92);
      if (v95) {
        goto LABEL_23;
      }
      double v97 = v96;
      swift_release();
      *(double *)(v94 + 16) = v97;
      swift_bridgeObjectRelease();
      uint64_t v23 = v228;
      *uint64_t v228 = v94;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB988];
LABEL_101:
      uint64_t v225 = *v24;
      sub_1BFF31E28(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v226 - 8) + 104))(v23, v225, v226);
    case 0xDuLL:
      uint64_t v98 = v18 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v99 = *(void *)(v98 + 16);
      uint64_t v100 = *(void *)(v98 + 24);
      sub_1C0386118();
      uint64_t v102 = v101;
      uint64_t v103 = swift_allocBox();
      char v105 = v104;
      *(void *)BOOL v104 = v99;
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      uint64_t v106 = v230;
      double v107 = sub_1BFF493E4((uint64_t)v231, v100);
      if (!v106)
      {
        double v164 = v107;
        uint64_t v165 = *(int *)(v102 + 48);
        swift_bridgeObjectRelease();
        swift_release();
        *(double *)&v105[v165] = v164;
        uint64_t v166 = *MEMORY[0x1E4FAB8D0];
        uint64_t v167 = sub_1C1517A7C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v167 - 8) + 104))(&v105[v165], v166, v167);
        uint64_t v23 = v228;
        *uint64_t v228 = v103;
        uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB960];
        goto LABEL_101;
      }
      swift_bridgeObjectRelease();
LABEL_79:
      swift_release();
      return swift_deallocBox();
    case 0xEuLL:
      uint64_t v108 = v18 & 0xFFFFFFFFFFFFFFBLL;
      char v109 = *(unsigned char *)(v108 + 16);
      unint64_t v110 = *(void *)(v108 + 24);
      int v111 = *(unsigned __int8 *)(v108 + 32);
      uint64_t v231 = (uint64_t *)v110;
      sub_1BFF58908(v110);
      uint64_t v113 = v229;
      uint64_t v112 = v230;
      double v114 = sub_1BFF591BC();
      if (v112) {
        return sub_1BFF58918(v110);
      }
      double v168 = v114;
      sub_1BFF58918(v110);
      LOBYTE(v231) = v109;
      id v169 = sub_1BFF58F34((uint64_t)v113);
      if (v111 == 12)
      {
        id v170 = objc_msgSend(self, sel_defaultMetrics);
      }
      else
      {
        LOBYTE(v231) = v111;
        id v227 = sub_1BFF68690();
        id v170 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, v227);
      }
      sub_1BFF594A4(v169, v170, (uint64_t)v228, v168);

      return swift_unknownObjectRelease();
    case 0xFuLL:
      uint64_t v115 = v18 & 0xFFFFFFFFFFFFFFBLL;
      unint64_t v117 = *(void *)(v115 + 16);
      unint64_t v116 = *(void *)(v115 + 24);
      uint64_t v231 = (uint64_t *)v117;
      unint64_t v232 = v116;
      sub_1BFF35EA4(v117);
      sub_1C05D88D4(v116);
      sub_1C12F3964((uint64_t)v229, a2, a3, v228);
      sub_1BFF322A8(v117);
      return sub_1C05D88E8(v116);
    case 0x10uLL:
      uint64_t v118 = v18 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v120 = *(void *)(v118 + 16);
      unint64_t v119 = *(void *)(v118 + 24);
      uint64_t v121 = swift_allocObject();
      uint64_t v122 = (void *)swift_allocObject();
      v122[2] = v120;
      v122[3] = v119;
      uint64_t v123 = v228;
      v122[4] = v229;
      v122[5] = a2;
      v122[6] = a3;
      *(void *)(v121 + 16) = sub_1BFD728B0;
      *(void *)(v121 + 24) = v122;
      *uint64_t v123 = v121;
      uint64_t v124 = *MEMORY[0x1E4FABA18];
      sub_1BFF31E28(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v125 - 8) + 104))(v123, v124, v125);
      swift_bridgeObjectRetain();
      sub_1BFF35EA4(v119);
      swift_retain();
      return swift_bridgeObjectRetain();
    case 0x11uLL:
      uint64_t v126 = *(void *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v127 = swift_allocObject();
      sub_1C1517EFC();
      uint64_t v128 = v230;
      double v129 = sub_1BFF493E4((uint64_t)v231, v126);
      if (v128) {
        goto LABEL_44;
      }
      double v130 = v129;
      swift_release();
      *(double *)(v127 + 16) = v130;
      uint64_t v23 = v228;
      *uint64_t v228 = v127;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB9B0];
      goto LABEL_101;
    case 0x12uLL:
      uint64_t v131 = *(void *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v132 = swift_allocObject();
      sub_1C1517EFC();
      uint64_t v133 = v230;
      double v134 = sub_1BFF493E4((uint64_t)v231, v131);
      if (v133) {
        goto LABEL_44;
      }
      double v135 = v134;
      swift_release();
      *(double *)(v132 + 16) = v135;
      uint64_t v23 = v228;
      *uint64_t v228 = v132;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB9A8];
      goto LABEL_101;
    case 0x13uLL:
      uint64_t v136 = *(void *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v137 = swift_allocObject();
      sub_1C1517EFC();
      uint64_t v138 = v230;
      double v139 = sub_1BFF493E4((uint64_t)v231, v136);
      if (v138) {
        goto LABEL_44;
      }
      double v171 = v139;
      swift_release();
      *(double *)(v137 + 16) = v171;
      uint64_t v23 = v228;
      *uint64_t v228 = v137;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB990];
      goto LABEL_101;
    case 0x14uLL:
      uint64_t v140 = v18 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v141 = *(void *)(v140 + 16);
      uint64_t v142 = *(void *)(v140 + 24);
      uint64_t v143 = swift_allocObject();
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      uint64_t v144 = v230;
      double v145 = sub_1BFF493E4((uint64_t)v231, v141);
      if (!v144)
      {
        double v172 = v145;
        swift_release();
        *(double *)(v143 + 16) = v172;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1C1517EFC();
        double v200 = sub_1BFF493E4((uint64_t)v231, v142);
        swift_release();
        *(double *)(v143 + 24) = v200;
        swift_bridgeObjectRelease();
        uint64_t v23 = v228;
        *uint64_t v228 = v143;
        uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB978];
        goto LABEL_101;
      }
      swift_bridgeObjectRelease();
LABEL_44:
      swift_release();
      return swift_deallocUninitializedObject();
    case 0x15uLL:
      char v146 = *(unsigned char *)((v18 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v147 = sub_1C1517A8C();
      uint64_t v75 = swift_allocBox();
      uint64_t v149 = v148;
      uint64_t v233 = type metadata accessor for FormatNodeContext();
      uint64_t v234 = &off_1F1BFC148;
      uint64_t v231 = v229;
      char v235 = v146;
      swift_retain();
      uint64_t v150 = v230;
      double v151 = sub_1C09A6F7C(&v231);
      if (!v150)
      {
        double v173 = v151;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v231);
        double *v149 = v173;
        uint64_t v174 = *MEMORY[0x1E4FAB8D0];
        uint64_t v175 = sub_1C1517A7C();
        (*(void (**)(double *, uint64_t, uint64_t))(*(void *)(v175 - 8) + 104))(v149, v174, v175);
        (*(void (**)(double *, void, uint64_t))(*(void *)(v147 - 8) + 104))(v149, *MEMORY[0x1E4FAB8E0], v147);
LABEL_100:
        uint64_t v23 = v228;
        *uint64_t v228 = v75;
        uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB9F8];
        goto LABEL_101;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v231);
      return swift_deallocBox();
    case 0x16uLL:
      *((void *)&v152 + 1) = *v4;
      *(void *)&long long v152 = v18 + 0x5000000000000000;
      switch((unint64_t)(v152 >> 3))
      {
        case 1uLL:
          uint64_t v153 = (unsigned int *)MEMORY[0x1E4FABA28];
          goto LABEL_95;
        case 2uLL:
          sub_1BFF35C38();
          uint64_t v202 = v201;
          uint64_t v203 = swift_allocBox();
          uint64_t v205 = v204;
          uint64_t v206 = v204 + *(int *)(v202 + 48);
          uint64_t v207 = *MEMORY[0x1E4FAB788];
          uint64_t v208 = sub_1C151786C();
          uint64_t v209 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v208 - 8) + 104);
          v209(v205, v207, v208);
          v209(v206, v207, v208);
          uint64_t v210 = v228;
          *uint64_t v228 = v203;
          uint64_t v211 = (unsigned int *)MEMORY[0x1E4FAB9E8];
          goto LABEL_91;
        case 3uLL:
          uint64_t v212 = sub_1C151729C();
          uint64_t v213 = swift_allocBox();
          uint64_t v215 = v214;
          uint64_t v216 = (unsigned int *)MEMORY[0x1E4FAB4E8];
          goto LABEL_90;
        case 4uLL:
          uint64_t v212 = sub_1C151729C();
          uint64_t v213 = swift_allocBox();
          uint64_t v215 = v217;
          uint64_t v216 = (unsigned int *)MEMORY[0x1E4FAB4E0];
LABEL_90:
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v212 - 8) + 104))(v215, *v216, v212);
          uint64_t v210 = v228;
          *uint64_t v228 = v213;
          uint64_t v211 = (unsigned int *)MEMORY[0x1E4FAB940];
LABEL_91:
          uint64_t v218 = *v211;
          sub_1BFF31E28(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
          uint64_t v88 = v219;
          uint64_t v89 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v219 - 8) + 104);
          uint64_t v160 = v210;
          goto LABEL_96;
        case 5uLL:
          uint64_t v153 = (unsigned int *)MEMORY[0x1E4FAB9F0];
          goto LABEL_95;
        case 6uLL:
          uint64_t v220 = (void *)sub_1C15176CC();
          sub_1C151961C();
          (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E4F93E28], v7);
          MEMORY[0x1C18C1140](v10, v220, 0.0, 0.0);
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

          sub_1BFF597F8();
          return sub_1C1517C3C();
        case 7uLL:
          uint64_t v153 = (unsigned int *)MEMORY[0x1E4FABA20];
          goto LABEL_95;
        default:
          uint64_t v153 = (unsigned int *)MEMORY[0x1E4FAB9E0];
LABEL_95:
          uint64_t v218 = *v153;
          sub_1BFF31E28(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
          uint64_t v88 = v221;
          uint64_t v89 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v221 - 8) + 104);
          uint64_t v160 = v228;
LABEL_96:
          uint64_t v159 = v218;
          break;
      }
      return v89(v160, v159, v88);
    default:
      uint64_t v19 = *(void *)(v18 + 16);
      uint64_t v20 = swift_allocObject();
      sub_1C1517EFC();
      uint64_t v21 = v230;
      double v22 = sub_1BFF493E4((uint64_t)v231, v19);
      swift_release();
      if (v21) {
        return swift_deallocUninitializedObject();
      }
      *(double *)(v20 + 16) = v22;
      uint64_t v23 = v228;
      *uint64_t v228 = v20;
      uint64_t v24 = (unsigned int *)MEMORY[0x1E4FAB948];
      goto LABEL_101;
  }
}

void sub_1BFF31D5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFF597F8();
    unint64_t v7 = a3(a1, &type metadata for FormatLayout, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1BFF31DC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFF31E28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1BFF31E90(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF31ED4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF31EF4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1BFF31EF4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1BFF321A0();
  sub_1C060815C(0, &qword_1EB8712A0, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FAB678]);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_1C060815C(0, &qword_1EB8712A0, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FAB678]);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (char *)v13 + v18;
  uint64_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  double v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1BFF321A0()
{
  if (!qword_1EB87A580)
  {
    sub_1C060815C(255, &qword_1EB8712A0, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FAB678]);
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A580);
    }
  }
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatAdjustment(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFF32264(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1BFF32264(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
    case 0x16uLL:
    case 0x17uLL:
    case 0x18uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFF322A8(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for FormatVBoxNode()
{
  return self;
}

unint64_t sub_1BFF32310()
{
  unint64_t result = qword_1EB888B30;
  if (!qword_1EB888B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888B30);
  }
  return result;
}

unint64_t sub_1BFF32364()
{
  unint64_t result = qword_1EB8875C8;
  if (!qword_1EB8875C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8875C8);
  }
  return result;
}

uint64_t sub_1BFF323B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  sub_1C151726C();
  unint64_t v12 = (uint64_t *)sub_1BFF33E40(a4, a5);
  uint64_t v13 = *(void *)(a2 + 96);
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14) {
    return swift_release();
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = 32; ; i += 40)
  {
    long long v16 = *(_OWORD *)(v13 + i);
    long long v17 = *(_OWORD *)(v13 + i + 16);
    uint64_t v20 = *(void *)(v13 + i + 32);
    v19[0] = v16;
    v19[1] = v17;
    sub_1BFF1BDBC((uint64_t)v19);
    sub_1BFF324EC(a1, v12, a6);
    if (v6) {
      break;
    }
    sub_1BFF1BD7C((uint64_t)v19);
    if (!--v14)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1BFF1BD7C((uint64_t)v19);
}

uint64_t sub_1BFF324EC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v29[4] = a1;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) + 16);
  if (v6)
  {
    uint64_t v8 = *(void *)(v6 + 24);
    sub_1C12A7D78(v3, (uint64_t)v31);
    sub_1C12A7D78((uint64_t)v31, (uint64_t)v29);
    uint64_t v9 = sub_1C11523CC();
    uint64_t v11 = v10;
    sub_1C12A7D78((uint64_t)v31, (uint64_t)v29);
    char v12 = sub_1C1150A2C();
    uint64_t v13 = *(uint64_t *)((char *)a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    sub_1BFF8874C(v4 + 8, (uint64_t)v30, &qword_1EA1ADB40, (uint64_t)&type metadata for FormatSourceMap);
    sub_1BFF8874C((uint64_t)v30, (uint64_t)v29, &qword_1EA1ADB40, (uint64_t)&type metadata for FormatSourceMap);
    type metadata accessor for FormatNodeDebugRecord();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1BFF59A8C((uint64_t)v30);
    swift_bridgeObjectRetain();
    sub_1BFF59A8C((uint64_t)v30);
    swift_retain();
    swift_retain();
    uint64_t v14 = sub_1C093678C(v9, v11, v12, v13, v29);
    if (v14)
    {
      swift_beginAccess();
      uint64_t v15 = swift_retain();
      MEMORY[0x1C18C66D0](v15);
      if (*(void *)((*(void *)(v8 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v8 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        sub_1C151EC8C();
      sub_1C151ECEC();
      sub_1C151EBEC();
      swift_endAccess();
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BFF5E6C8((uint64_t)v30);
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v16 = *(void *)(a3 + 80);
  uint64_t v17 = *(void *)(v4 + 8);
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v20 = *(void *)(v4 + 24);
  uint64_t v19 = *(void *)(v4 + 32);
  if (v16)
  {
    if (v18)
    {
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = a2;
      *(void *)(v21 + 24) = v17;
      *(void *)(v21 + 32) = v18;
      *(void *)(v21 + 40) = v20;
      *(void *)(v21 + 48) = v19;
      long long v22 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(v21 + 56) = *(_OWORD *)v4;
      *(_OWORD *)(v21 + 72) = v22;
      *(void *)(v21 + 88) = *(void *)(v4 + 32);
      *(void *)(v21 + 96) = v16;
      *(void *)(v21 + 104) = a3;
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_1BFF1BDBC(v4);
      sub_1BFF33DEC(0);
      sub_1BFF33E0C();
      swift_retain();
      sub_1C15172FC();
      swift_bridgeObjectRelease();
      swift_release_n();
      goto LABEL_14;
    }
  }
  else if (v18)
  {
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a2;
    *(void *)(v23 + 24) = v17;
    *(void *)(v23 + 32) = v18;
    *(void *)(v23 + 40) = v20;
    *(void *)(v23 + 48) = v19;
    long long v24 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v23 + 56) = *(_OWORD *)v4;
    *(_OWORD *)(v23 + 72) = v24;
    *(void *)(v23 + 88) = *(void *)(v4 + 32);
    *(void *)(v23 + 96) = a3;
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_1BFF1BDBC(v4);
    sub_1BFF33DEC(0);
    sub_1BFF33E0C();
    swift_retain();
    sub_1C15172FC();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  unint64_t v25 = *(void *)v4;
  swift_retain();
  sub_1BFF328E0(a1, a2, (char *)a3, v25);
LABEL_14:
  uint64_t result = swift_release();
  if (v14)
  {
    if (*(unsigned char *)(v14 + 96) == 1)
    {
      *(CFTimeInterval *)(v14 + 88) = CACurrentMediaTime();
      *(unsigned char *)(v14 + 96) = 0;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFF328E0(uint64_t a1, uint64_t *a2, char *a3, unint64_t a4)
{
  switch((a4 >> 58) & 0x3C | (a4 >> 1) & 3)
  {
    case 1uLL:
      swift_retain();
      uint64_t v8 = (void (*)(uint64_t, uint64_t *, void, uint64_t *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))MEMORY[0x1E4FAB508];
      goto LABEL_4;
    case 2uLL:
      swift_retain();
      uint64_t v9 = (void (*)(uint64_t, uint64_t, void, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t))MEMORY[0x1E4FAB510];
      goto LABEL_7;
    case 3uLL:
      swift_retain();
      uint64_t v9 = (void (*)(uint64_t, uint64_t, void, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t))MEMORY[0x1E4FAB518];
LABEL_7:
      sub_1BFF486EC(a1, a2, (uint64_t)a3, (uint64_t (*)(void, __n128))sub_1BFF33DEC, sub_1BFF33E0C, (uint64_t)sub_1BFD61410, v9);
      return swift_release();
    case 4uLL:
      swift_retain();
      sub_1BFF4ACFC(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C250B0, sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C);
      return swift_release();
    case 5uLL:
      swift_retain();
      sub_1BFF437A4(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25240, sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C);
      return swift_release();
    case 6uLL:
      swift_retain();
      sub_1BFF44304(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25268, sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C);
      return swift_release();
    case 7uLL:
      swift_retain();
      sub_1BFFF3894(a1, (uint64_t)a2, (uint64_t)a3, (unint64_t)sub_1C12A8490, (uint64_t)&unk_1F1C25290, (uint64_t (*)(void))sub_1BFF33DEC, sub_1BFF33E0C, (uint64_t)sub_1C12A84AC, (uint64_t)&unk_1F1C252B8, (unint64_t)sub_1C12A84F0);
      return swift_release();
    case 8uLL:
      swift_retain();
      sub_1BFF2F96C(a1, a2, sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C);
      return swift_release();
    case 9uLL:
      swift_retain();
      sub_1BFF1A018(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF324EC);
      return swift_release();
    case 0xAuLL:
      swift_retain();
      sub_1BFFF2840(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)sub_1BFC5CB0C, (uint64_t)&unk_1F1C252E0, (uint64_t (*)(void))sub_1BFF33DEC, sub_1BFF33E0C, (uint64_t)sub_1BFFFA26C);
      return swift_release();
    case 0xBuLL:
    case 0x1EuLL:
      uint64_t v26 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v27 = *(void *)(v26 + 16);
      uint64_t v28 = *(void *)(v26 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF303E0(v27, v28);
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_unownedRetain();
      swift_release();
      uint64_t v29 = (void *)swift_allocObject();
      v29[2] = v26;
      v29[3] = a2;
      v29[4] = a3;
      sub_1BFF33DEC(0);
      sub_1BFF33E0C();
      swift_retain();
      swift_retain();
      goto LABEL_34;
    case 0xCuLL:
      swift_retain();
      sub_1BFFC002C(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF324EC);
      return swift_release();
    case 0xDuLL:
      uint64_t v10 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 16);
      uint64_t v12 = *(void *)(v10 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1BFF303E0(v11, v12);
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_unownedRetain();
      swift_unownedRetain();
      swift_bridgeObjectRetain();
      swift_unownedRelease();
      swift_unownedRelease();
      swift_unownedRetain();
      swift_release();
      uint64_t v16 = (void *)swift_allocObject();
      v16[2] = v10;
      v16[3] = a2;
      v16[4] = v13;
      v16[5] = v15;
      v16[6] = a3;
      sub_1BFF33DEC(0);
      sub_1BFF33E0C();
      swift_retain();
      swift_retain();
      goto LABEL_34;
    case 0xEuLL:
      swift_retain();
      sub_1BFF7C308(a1, a2, (uint64_t)a3, (uint64_t)&unk_1F1C25308, (uint64_t *)sub_1BFF33DEC, (uint64_t)sub_1BFF33E0C, (uint64_t)sub_1BFC37370, (uint64_t)sub_1BFDA01C4, (uint64_t)&unk_1F1C25330, (uint64_t)sub_1BFD6B1E0, (uint64_t)sub_1BFDA01C4, (char *)sub_1BFCDE4EC);
      return swift_release();
    case 0xFuLL:
      swift_retain();
      sub_1BFF54F6C(a1, a2, (uint64_t)a3, (uint64_t)sub_1BFDA01F0, (void (*)(char *, uint64_t))&unk_1F1C253A8, (uint64_t (*)(void))sub_1BFF33DEC, sub_1BFF33E0C, (uint64_t)sub_1BFCEB1B0, (uint64_t)sub_1C12A86F8);
      return swift_release();
    case 0x10uLL:
      swift_retain();
      sub_1C129CA64(a1, (uint64_t)a2, a3, (uint64_t)&unk_1F1C253D0, (uint64_t (*)(void))sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C, (uint64_t)sub_1C12A8714);
      return swift_release();
    case 0x11uLL:
      swift_retain();
      sub_1C12A79CC(a1, a2, (uint64_t)&unk_1F1C253F8, (uint64_t (*)(void))sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C, (uint64_t)sub_1C12A8758);
      return swift_release();
    case 0x12uLL:
      swift_retain();
      sub_1C003F948(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF324EC);
      return swift_release();
    case 0x13uLL:
      uint64_t v17 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v18 = *(void *)(v17 + 16);
      uint64_t v19 = *(void *)(v17 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF303E0(v18, v19);
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_retain();
      swift_unownedRetain();
      swift_release();
      uint64_t v20 = (void *)swift_allocObject();
      v20[2] = a2;
      v20[3] = v17;
      v20[4] = a3;
      sub_1BFF33DEC(0);
      sub_1BFF33E0C();
      swift_retain();
LABEL_34:
      sub_1C15173AC();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 0x14uLL:
      swift_retain();
      sub_1C129D2BC(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)sub_1C12A8778, (uint64_t)&unk_1F1C25420, (uint64_t (*)(void))sub_1BFF33DEC, sub_1BFF33E0C, (uint64_t)sub_1C12A87D0);
      return swift_release();
    case 0x15uLL:
      swift_retain();
      sub_1C1296210(a1, a2, (uint64_t)a3, (uint64_t)&unk_1F1C25448, sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C, (uint64_t)sub_1C12A87F8);
      return swift_release();
    case 0x16uLL:
      uint64_t v21 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      long long v22 = (void *)swift_allocObject();
      v22[2] = v21;
      v22[3] = a3;
      v22[4] = a2;
      sub_1BFF33DEC(0);
      sub_1BFF33E0C();
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_1C15173BC();
      swift_release();
      return swift_release();
    case 0x17uLL:
      swift_retain();
      sub_1C1290F40(a1, a2, (uint64_t)a3, (uint64_t)&unk_1F1C25470, sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C, (uint64_t)sub_1C12A88C0);
      return swift_release();
    case 0x18uLL:
      swift_retain();
      sub_1C129E54C(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25498, (uint64_t (*)(void))sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C, (uint64_t)sub_1C12A88E8);
      return swift_release();
    case 0x19uLL:
      swift_retain();
      sub_1C129F028(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C254C0, (uint64_t (*)(void))sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C, (uint64_t)sub_1C12A8918);
      return swift_release();
    case 0x1AuLL:
      swift_retain();
      sub_1C129FC70(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25510, sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C);
      return swift_release();
    case 0x1BuLL:
      swift_retain();
      sub_1C129355C(a1, (uint64_t)a2, (uint64_t (*)(uint64_t))a3);
      return swift_release();
    case 0x1CuLL:
      long long v23 = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x40);
      v41[2] = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x30);
      v41[3] = v23;
      v41[4] = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x50);
      uint64_t v42 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x60);
      long long v24 = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x20);
      v41[0] = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v41[1] = v24;
      sub_1C089E4F4((uint64_t)v41);
      sub_1C129AA98(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25560, sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C, (uint64_t)sub_1C12A8C20);
      return sub_1C089E568((uint64_t)v41);
    case 0x1DuLL:
      swift_retain();
      sub_1BFF902C0(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF324EC);
      return swift_release();
    case 0x1FuLL:
      swift_retain();
      sub_1C129C180(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25588, sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C);
      return swift_release();
    case 0x20uLL:
      swift_retain();
      sub_1C1299EAC(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C255B0, (uint64_t (*)(void))sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C, (uint64_t)sub_1C12A8C70);
      return swift_release();
    case 0x21uLL:
      swift_retain();
      sub_1C129BC0C(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF324EC);
      return swift_release();
    case 0x22uLL:
      swift_retain();
      sub_1C12A01D4(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF324EC);
      return swift_release();
    case 0x23uLL:
      uint64_t v30 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      uint64_t v31 = sub_1C0F0D63C((uint64_t)a2);
      swift_beginAccess();
      uint64_t v32 = *(void *)(v30 + 48);
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 32; ; i += 40)
        {
          long long v35 = *(_OWORD *)(v32 + i);
          long long v36 = *(_OWORD *)(v32 + i + 16);
          uint64_t v44 = *(void *)(v32 + i + 32);
          v43[0] = v35;
          v43[1] = v36;
          sub_1BFF1BDBC((uint64_t)v43);
          sub_1BFF324EC(a1, v31, a3);
          if (v4) {
            break;
          }
          sub_1BFF1BD7C((uint64_t)v43);
          if (!--v33)
          {
            swift_release();
            swift_release();
            return swift_bridgeObjectRelease();
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        sub_1BFF1BD7C((uint64_t)v43);
      }
      else
      {
        swift_release();
      }
      return swift_release();
    case 0x24uLL:
      uint64_t v37 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v38 = *(void *)(v37 + 16);
      uint64_t v39 = *(void *)(v37 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF303E0(v38, v39);
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_unownedRetain();
      swift_release();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v37;
      *(void *)(v40 + 24) = a2;
      sub_1BFF33DEC(0);
      sub_1BFF33E0C();
      swift_retain();
      sub_1C15173AC();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 0x25uLL:
      swift_retain();
      sub_1C129470C(a1, (uint64_t)a2, (uint64_t)a3);
      return swift_release();
    case 0x26uLL:
      swift_retain();
      sub_1C1296EA8(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25600, (uint64_t (*)(void))sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C, (uint64_t)sub_1C12A8CB0);
      return swift_release();
    case 0x27uLL:
      swift_retain();
      sub_1C129B458(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25628, sub_1BFF33DEC, (void (*)(void))sub_1BFF33E0C, (uint64_t)sub_1C12A8D38);
      return swift_release();
    default:
      swift_retain();
      uint64_t v8 = (void (*)(uint64_t, uint64_t *, void, uint64_t *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))MEMORY[0x1E4FAB500];
LABEL_4:
      sub_1BFF2FEF8(a1, a2, (uint64_t)a3, (uint64_t (*)(void, __n128))sub_1BFF33DEC, sub_1BFF33E0C, (uint64_t)sub_1BFD33A74, v8);
      return swift_release();
  }
}

void sub_1BFF33D2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for FormatLayout;
    v8[1] = type metadata accessor for FormatLayoutAttributes();
    v8[2] = sub_1BFF597F8();
    v8[3] = sub_1BFF30570(&qword_1EB88A8A0, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFF33DEC(uint64_t a1)
{
}

uint64_t sub_1BFF33E0C()
{
  return sub_1BFF30570(&qword_1EB884D60, sub_1BFF33DEC);
}

uint64_t sub_1BFF33E40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  if (a2)
  {
    uint64_t v55 = a1;
    uint64_t v56 = (uint64_t)&v33 - v8;
    sub_1BFF1ECB0(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, (uint64_t)&v33 - v8, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
    char v9 = *(unsigned char *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
    char v10 = *(unsigned char *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
    uint64_t v11 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
    uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
    uint64_t v43 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
    uint64_t v51 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
    uint64_t v50 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
    uint64_t v49 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
    uint64_t v48 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
    v64[0] = v9;
    v64[1] = v10;
    uint64_t v65 = v11;
    long long v41 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
    long long v66 = v41;
    uint64_t v67 = v43;
    uint64_t v68 = v12;
    uint64_t v69 = v51;
    uint64_t v70 = v50;
    uint64_t v71 = v49;
    uint64_t v72 = v48;
    uint64_t v57 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
    uint64_t v52 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    long long v13 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
    long long v14 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
    long long v15 = *(_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
    uint64_t v73[2] = *(_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
    v73[3] = v15;
    uint64_t v46 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
    v73[0] = v13;
    v73[1] = v14;
    uint64_t v47 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
    uint64_t v44 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
    sub_1BFF1F7AC(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v63, qword_1EB873870, MEMORY[0x1E4FBB718]);
    uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
    uint64_t v17 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
    uint64_t v36 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
    uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
    uint64_t v35 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
    uint64_t v19 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
    uint64_t v20 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
    uint64_t v42 = a2;
    uint64_t v34 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
    *(void *)&long long v58 = v36;
    *((void *)&v58 + 1) = v35;
    uint64_t v59 = v18;
    uint64_t v60 = v19;
    uint64_t v61 = v20;
    uint64_t v62 = v34;
    uint64_t v40 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
    uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
    uint64_t v54 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
    uint64_t v38 = v21;
    uint64_t v39 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
    uint64_t v22 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
    uint64_t v45 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
    uint64_t v37 = v22;
    uint64_t v53 = swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E730(v12, v51);
    swift_retain();
    uint64_t v23 = v52;
    swift_retain();
    sub_1BFF1E79C((uint64_t)v73);
    uint64_t v24 = v46;
    swift_bridgeObjectRetain();
    uint64_t v25 = v47;
    swift_retain();
    uint64_t v26 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v36, v35);
    uint64_t v27 = v42;
    swift_bridgeObjectRetain();
    uint64_t v28 = v40;
    swift_bridgeObjectRetain();
    uint64_t v29 = v38;
    swift_bridgeObjectRetain();
    uint64_t v30 = v39;
    swift_retain();
    uint64_t v31 = swift_bridgeObjectRetain();
    return sub_1C0DAFA8C(v56, v64, v57, v23, v73, v24, v25, v26, (uint64_t)v63, v16, v17, &v58, v28, v54, v29, v30, v45, v31, v55,
             v27);
  }
  else
  {
    swift_retain();
  }
  return v3;
}

void sub_1BFF34310(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = sub_1C1517A3C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)v163 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  long long v13 = (char *)v163 - v12;
  uint64_t v14 = *v2;
  switch(((unint64_t)*v2 >> 59) & 0x1E | (*v2 >> 2) & 1)
  {
    case 1uLL:
      switch(*(unsigned char *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10))
      {
        case 1:
          uint64_t v21 = (unsigned int *)MEMORY[0x1E4FAB5E8];
          break;
        case 2:
          uint64_t v21 = (unsigned int *)MEMORY[0x1E4FAB600];
          break;
        case 3:
          uint64_t v21 = (unsigned int *)MEMORY[0x1E4FAB610];
          break;
        case 4:
          uint64_t v21 = (unsigned int *)MEMORY[0x1E4FAB5F0];
          break;
        case 5:
          uint64_t v21 = (unsigned int *)MEMORY[0x1E4FAB5F8];
          break;
        case 6:
          uint64_t v21 = (unsigned int *)MEMORY[0x1E4FAB608];
          break;
        default:
          uint64_t v21 = (unsigned int *)MEMORY[0x1E4FAB5E0];
          break;
      }
      uint64_t v152 = *v21;
      sub_1BFF35434(0, &qword_1EB871290, MEMORY[0x1E4FAB618]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 104))(a2, v152, v153);
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB620];
      goto LABEL_91;
    case 2uLL:
      v163[0] = *(_OWORD *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      double v22 = sub_1BFF71C54();
      if (v3) {
        return;
      }
      *(double *)a2 = v22;
      *(void *)(a2 + 8) = v23;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB630];
      goto LABEL_91;
    case 3uLL:
      uint64_t v24 = *(void *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C1517EFC();
      double v25 = sub_1BFF493E4(*(uint64_t *)&v163[0], v24);
      swift_release();
      if (v3) {
        return;
      }
      *(double *)a2 = v25;
      uint64_t v26 = *MEMORY[0x1E4FAB7E8];
      uint64_t v27 = sub_1C15178EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(a2, v26, v27);
      uint64_t v28 = (unsigned int *)MEMORY[0x1E4FAB858];
      goto LABEL_40;
    case 4uLL:
      uint64_t v29 = *(void *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C1517EFC();
      double v30 = sub_1BFF493E4(*(uint64_t *)&v163[0], v29);
      swift_release();
      if (v3) {
        return;
      }
      *(double *)a2 = v30;
      uint64_t v31 = *MEMORY[0x1E4FAB7E8];
      uint64_t v32 = sub_1C15178EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(a2, v31, v32);
      uint64_t v33 = (unsigned int *)MEMORY[0x1E4FAB858];
      goto LABEL_20;
    case 5uLL:
      uint64_t v72 = *(void *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C1517EFC();
      double v73 = sub_1BFF493E4(*(uint64_t *)&v163[0], v72);
      swift_release();
      if (v3) {
        return;
      }
      *(double *)a2 = v73;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB660];
      goto LABEL_91;
    case 6uLL:
      uint64_t v74 = *(void *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C1517EFC();
      double v75 = sub_1BFF493E4(*(uint64_t *)&v163[0], v74);
      swift_release();
      if (v3) {
        return;
      }
      *(double *)a2 = v75;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB658];
      goto LABEL_91;
    case 7uLL:
      uint64_t v34 = *(void *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C1517EFC();
      double v35 = sub_1BFF493E4(*(uint64_t *)&v163[0], v34);
      swift_release();
      if (v3) {
        return;
      }
      *(double *)a2 = v35;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB670];
      goto LABEL_91;
    case 8uLL:
      uint64_t v76 = *(void *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C1517EFC();
      double v77 = sub_1BFF493E4(*(uint64_t *)&v163[0], v76);
      swift_release();
      if (v3) {
        return;
      }
      *(double *)a2 = v77;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB668];
      goto LABEL_91;
    case 9uLL:
      uint64_t v36 = v14 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v37 = *(void *)(v36 + 16);
      int v38 = *(unsigned __int8 *)(v36 + 24);
      if (v38)
      {
        if (v38 == 1)
        {
          sub_1C1517EFC();
          double v39 = sub_1BFF493E4(*(uint64_t *)&v163[0], v37);
          if (v3) {
            goto LABEL_68;
          }
          double v40 = v39;
          swift_release();
          *(double *)a2 = v40;
          long long v41 = (unsigned int *)MEMORY[0x1E4FAB8E8];
        }
        else
        {
          sub_1C1517EFC();
          double v148 = sub_1BFF493E4(*(uint64_t *)&v163[0], v37);
          if (v3) {
            goto LABEL_68;
          }
          double v156 = v148;
          swift_release();
          *(double *)a2 = v156;
          uint64_t v157 = *MEMORY[0x1E4FAB8D0];
          uint64_t v158 = sub_1C1517A7C();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 104))(a2, v157, v158);
          long long v41 = (unsigned int *)MEMORY[0x1E4FAB8E0];
        }
      }
      else
      {
        sub_1C1517EFC();
        double v146 = sub_1BFF493E4(*(uint64_t *)&v163[0], v37);
        if (v3) {
          goto LABEL_68;
        }
        double v147 = v146;
        swift_release();
        *(double *)a2 = v147;
        long long v41 = (unsigned int *)MEMORY[0x1E4FAB8B0];
      }
      uint64_t v159 = *v41;
      uint64_t v160 = sub_1C1517A8C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v160 - 8) + 104))(a2, v159, v160);
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB598];
      goto LABEL_91;
    case 0xAuLL:
      uint64_t v78 = *(void *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C1517EFC();
      double v79 = sub_1BFF493E4(*(uint64_t *)&v163[0], v78);
      if (v3) {
        goto LABEL_68;
      }
      double v80 = v79;
      swift_release();
      *(double *)a2 = v80;
      uint64_t v81 = *MEMORY[0x1E4FAB7E8];
      uint64_t v82 = sub_1C15178EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 104))(a2, v81, v82);
      uint64_t v28 = (unsigned int *)MEMORY[0x1E4FAB860];
LABEL_40:
      uint64_t v83 = *v28;
      uint64_t v84 = sub_1C15179EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 104))(a2, v83, v84);
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB550];
      goto LABEL_91;
    case 0xBuLL:
      uint64_t v42 = *(void *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C1517EFC();
      double v43 = sub_1BFF493E4(*(uint64_t *)&v163[0], v42);
      if (v3) {
        goto LABEL_68;
      }
      double v44 = v43;
      swift_release();
      *(double *)a2 = v44;
      uint64_t v45 = *MEMORY[0x1E4FAB7E8];
      uint64_t v46 = sub_1C15178EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104))(a2, v45, v46);
      uint64_t v33 = (unsigned int *)MEMORY[0x1E4FAB860];
LABEL_20:
      uint64_t v47 = *v33;
      uint64_t v48 = sub_1C15179EC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 104))(a2, v47, v48);
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB560];
      goto LABEL_91;
    case 0xCuLL:
      switch(*(unsigned char *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10))
      {
        case 1:
          uint64_t v49 = (unsigned int *)MEMORY[0x1E4FAB5E8];
          break;
        case 2:
          uint64_t v49 = (unsigned int *)MEMORY[0x1E4FAB600];
          break;
        case 3:
          uint64_t v49 = (unsigned int *)MEMORY[0x1E4FAB610];
          break;
        case 4:
          uint64_t v49 = (unsigned int *)MEMORY[0x1E4FAB5F0];
          break;
        case 5:
          uint64_t v49 = (unsigned int *)MEMORY[0x1E4FAB5F8];
          break;
        case 6:
          uint64_t v49 = (unsigned int *)MEMORY[0x1E4FAB608];
          break;
        default:
          uint64_t v49 = (unsigned int *)MEMORY[0x1E4FAB5E0];
          break;
      }
      uint64_t v154 = *v49;
      sub_1BFF35434(0, &qword_1EB871290, MEMORY[0x1E4FAB618]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 104))(a2, v154, v155);
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB580];
      goto LABEL_91;
    case 0xDuLL:
      uint64_t v85 = v14 & 0xFFFFFFFFFFFFFFBLL;
      int v86 = *(unsigned __int8 *)(v85 + 16);
      uint64_t v87 = sub_1BFF303E0(*(void *)(v85 + 24), *(void *)(v85 + 32));
      uint64_t v89 = v88;
      uint64_t v90 = sub_1C151789C();
      uint64_t v91 = (unsigned int *)MEMORY[0x1E4FAB7E0];
      if (!v86) {
        uint64_t v91 = (unsigned int *)MEMORY[0x1E4FAB7D8];
      }
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v90 - 8) + 104))(a2, *v91, v90);
      sub_1C003F3A8();
      char v93 = (uint64_t *)(a2 + *(int *)(v92 + 48));
      *char v93 = v87;
      v93[1] = v89;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB5B0];
      goto LABEL_91;
    case 0xEuLL:
      uint64_t v50 = swift_retain();
      uint64_t v51 = sub_1BFF7DFFC(v50, a1);
      if (v3) {
        goto LABEL_68;
      }
      uint64_t v52 = v51;
      swift_release();
      *(void *)a2 = v52;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB588];
      goto LABEL_91;
    case 0xFuLL:
      uint64_t v53 = swift_retain();
      uint64_t v54 = sub_1BFF7DFFC(v53, a1);
      if (v3) {
        goto LABEL_68;
      }
      uint64_t v144 = v54;
      swift_release();
      *(void *)a2 = v144;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB648];
      goto LABEL_91;
    case 0x10uLL:
      uint64_t v55 = (void *)(v14 & 0xFFFFFFFFFFFFFFBLL);
      uint64_t v56 = v55[2];
      uint64_t v57 = v55[3];
      uint64_t v58 = v55[4];
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v59 = sub_1BFF303E0(v56, v57);
      uint64_t v61 = v60;
      uint64_t v62 = sub_1BFF7DFFC(v58, a1);
      if (v4) {
        goto LABEL_49;
      }
      uint64_t v63 = v62;
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)a2 = v59;
      *(void *)(a2 + 8) = v61;
      *(void *)(a2 + 16) = v63;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB5A8];
      goto LABEL_91;
    case 0x11uLL:
      uint64_t v94 = (void *)(v14 & 0xFFFFFFFFFFFFFFBLL);
      uint64_t v95 = v94[2];
      uint64_t v96 = v94[3];
      uint64_t v97 = v94[4];
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v98 = sub_1BFF303E0(v95, v96);
      uint64_t v100 = v99;
      uint64_t v101 = sub_1BFF7DFFC(v97, a1);
      if (v4) {
        goto LABEL_49;
      }
      uint64_t v102 = v101;
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)a2 = v98;
      *(void *)(a2 + 8) = v100;
      *(void *)(a2 + 16) = v102;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB5D0];
      goto LABEL_91;
    case 0x12uLL:
      uint64_t v103 = (void *)(v14 & 0xFFFFFFFFFFFFFFBLL);
      uint64_t v104 = v103[2];
      uint64_t v105 = v103[3];
      uint64_t v106 = v103[4];
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v107 = sub_1BFF303E0(v104, v105);
      uint64_t v109 = v108;
      unint64_t v110 = sub_1BFF7DFFC(v106, a1);
      if (v4) {
        goto LABEL_49;
      }
      int v111 = v110;
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)a2 = v107;
      *(void *)(a2 + 8) = v109;
      *(void *)(a2 + 16) = v111;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB590];
      goto LABEL_91;
    case 0x13uLL:
      uint64_t v112 = (void *)(v14 & 0xFFFFFFFFFFFFFFBLL);
      uint64_t v113 = v112[2];
      uint64_t v114 = v112[3];
      uint64_t v115 = v112[4];
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v116 = sub_1BFF303E0(v113, v114);
      uint64_t v118 = v117;
      unint64_t v119 = sub_1BFF7DFFC(v115, a1);
      if (v4)
      {
LABEL_49:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      double v145 = v119;
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)a2 = v116;
      *(void *)(a2 + 8) = v118;
      *(void *)(a2 + 16) = v145;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB5C0];
      goto LABEL_91;
    case 0x14uLL:
      uint64_t v120 = *(void *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C1517EFC();
      unint64_t v121 = sub_1BFF45118(*(uint64_t *)&v163[0], v120);
      if (v3) {
        goto LABEL_68;
      }
      unint64_t v122 = v121;
      swift_release();
      *(void *)a2 = v122;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB578];
      goto LABEL_91;
    case 0x15uLL:
      uint64_t v123 = *(void *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      sub_1C1517EFC();
      unint64_t v124 = sub_1BFF45118(*(uint64_t *)&v163[0], v123);
      if (v3) {
        goto LABEL_68;
      }
      unint64_t v125 = v124;
      swift_release();
      *(void *)a2 = v125;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB570];
      goto LABEL_91;
    case 0x16uLL:
      uint64_t v126 = v14 & 0xFFFFFFFFFFFFFFBLL;
      char v127 = *(unsigned char *)(v126 + 16);
      int v128 = *(unsigned __int8 *)(v126 + 32);
      if ((v127 & 1) == 0)
      {
        int v141 = v128;
        uint64_t v142 = swift_retain();
        uint64_t v143 = sub_1BFF7DFFC(v142, a1);
        if (!v3)
        {
          uint64_t v149 = v143;
          swift_release();
          *(void *)a2 = v149;
          uint64_t v150 = (unsigned int *)MEMORY[0x1E4FAB8A8];
          if (!v141) {
            uint64_t v150 = (unsigned int *)MEMORY[0x1E4FAB8A0];
          }
          (*(void (**)(char *, void, uint64_t))(v8 + 104))(v13, *v150, v7);
          sub_1BFFB4650();
          (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2 + *(int *)(v151 + 48), v13, v7);
          uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB5A0];
          goto LABEL_91;
        }
LABEL_68:
        swift_release();
        return;
      }
      int v129 = v128;
      uint64_t v130 = swift_retain();
      uint64_t v131 = sub_1BFF7DFFC(v130, a1);
      if (v3) {
        goto LABEL_68;
      }
      uint64_t v132 = v131;
      swift_release();
      *(void *)a2 = v132;
      uint64_t v133 = (unsigned int *)MEMORY[0x1E4FAB8A8];
      if (!v129) {
        uint64_t v133 = (unsigned int *)MEMORY[0x1E4FAB8A0];
      }
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *v133, v7);
      sub_1BFFB4650();
      (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2 + *(int *)(v134 + 48), v10, v7);
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB5B8];
LABEL_91:
      uint64_t v161 = *v20;
      sub_1BFF35434(0, &qword_1EB8712A0, MEMORY[0x1E4FAB678]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v162 - 8) + 104))(a2, v161, v162);
      return;
    case 0x17uLL:
      uint64_t v135 = v14 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v136 = *(void *)(v135 + 16);
      uint64_t v137 = *(void *)(v135 + 24);
      uint64_t v138 = (void *)swift_allocObject();
      v138[2] = v136;
      v138[3] = v137;
      v138[4] = a1;
      *(void *)a2 = sub_1BFE0FAD8;
      *(void *)(a2 + 8) = v138;
      uint64_t v139 = *MEMORY[0x1E4FAB640];
      sub_1BFF35434(0, &qword_1EB8712A0, MEMORY[0x1E4FAB678]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 104))(a2, v139, v140);
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_60;
    case 0x18uLL:
      double v64 = (void *)(v14 & 0xFFFFFFFFFFFFFFBLL);
      uint64_t v65 = v64[2];
      uint64_t v66 = v64[3];
      uint64_t v68 = v64[4];
      uint64_t v67 = v64[5];
      uint64_t v69 = (void *)swift_allocObject();
      uint64_t v69[2] = v65;
      v69[3] = v66;
      _OWORD v69[4] = v68;
      v69[5] = v67;
      v69[6] = a1;
      *(void *)a2 = sub_1C045E394;
      *(void *)(a2 + 8) = v69;
      uint64_t v70 = *MEMORY[0x1E4FAB650];
      sub_1BFF35434(0, &qword_1EB8712A0, MEMORY[0x1E4FAB678]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 104))(a2, v70, v71);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_60:
      swift_bridgeObjectRetain();
      return;
    case 0x19uLL:
      switch(__ROR8__(v14 + 0x3FFFFFFFFFFFFFFCLL, 3))
      {
        case 1:
          uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB638];
          break;
        case 2:
          uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB548];
          break;
        case 3:
          uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB568];
          break;
        default:
          uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB628];
          break;
      }
      goto LABEL_91;
    default:
      long long v15 = *(_OWORD *)(v14 + 32);
      v163[0] = *(_OWORD *)(v14 + 16);
      v163[1] = v15;
      double v16 = sub_1BFF49274();
      if (v3) {
        return;
      }
      *(double *)a2 = v16;
      *(void *)(a2 + 8) = v17;
      *(void *)(a2 + 16) = v18;
      *(void *)(a2 + 24) = v19;
      uint64_t v20 = (unsigned int *)MEMORY[0x1E4FAB5D8];
      goto LABEL_91;
  }
}

void sub_1BFF35434(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1BFF597F8();
    unint64_t v7 = a3(a1, &type metadata for FormatLayout, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1BFF35498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v10 = v4[1];
  unint64_t v33 = *v4;
  uint64_t v11 = a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext;
  uint64_t v12 = *(void *)(*(void *)(v11 + *(int *)(type metadata accessor for GroupLayoutContext() + 48)) + 16);
  double v30 = a4;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_7;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1BFEF2D8C(a1, a2);
  if ((v14 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_7:
    double v18 = 0.0;
    double v32 = 0.0;
    char v17 = 1;
    char v31 = 1;
    goto LABEL_8;
  }
  long long v15 = (double *)(*(void *)(v12 + 56) + 16 * v13);
  double v16 = *v15;
  double v32 = v15[1];
  swift_release();
  swift_bridgeObjectRelease();
  char v31 = 0;
  char v17 = (v10 & 0xE000000000000000) != 0xA000000000000000;
  if ((v10 & 0xE000000000000000) == 0xA000000000000000) {
    double v18 = v16;
  }
  else {
    double v18 = 0.0;
  }
LABEL_8:
  sub_1BFF35C38();
  uint64_t v20 = v19;
  uint64_t v21 = swift_allocBox();
  uint64_t v23 = v22;
  sub_1BFF35BC8(v10);
  sub_1BFF35700(a3, v18, v17, v23);
  if (v5)
  {
    sub_1BFF35C00(v10);
    return swift_deallocBox();
  }
  else
  {
    if ((v33 & 0xE000000000000000) == 0xA000000000000000) {
      char v24 = v31;
    }
    else {
      char v24 = 1;
    }
    if ((v33 & 0xE000000000000000) == 0xA000000000000000) {
      double v25 = v32;
    }
    else {
      double v25 = 0.0;
    }
    sub_1BFF35C00(v10);
    uint64_t v26 = (uint64_t *)((char *)v23 + *(int *)(v20 + 48));
    sub_1BFF35BC8(v33);
    sub_1BFF35700(a3, v25, v24, v26);
    sub_1BFF35C00(v33);
    *double v30 = v21;
    uint64_t v28 = *MEMORY[0x1E4FAB9E8];
    sub_1BFF35CA0();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v30, v28, v29);
  }
}

uint64_t sub_1BFF35700@<X0>(uint64_t a1@<X0>, double a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = a3 & 1;
  uint64_t v8 = *v4;
  uint64_t v9 = v5;
  switch((unint64_t)*v4 >> 61)
  {
    case 1uLL:
      uint64_t v15 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v16 = swift_allocObject();
      sub_1C1517EFC();
      double v17 = sub_1BFF493E4(v37, v15);
      swift_release();
      if (v5) {
        return swift_deallocUninitializedObject();
      }
      *(double *)(v16 + 16) = v17;
      *a4 = v16;
      goto LABEL_26;
    case 2uLL:
      sub_1C151728C();
      uint64_t v18 = swift_allocBox();
      sub_1C151727C();
      *a4 = v18;
      goto LABEL_26;
    case 3uLL:
      unint64_t v19 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v20 = sub_1C151786C();
      uint64_t v21 = swift_allocBox();
      sub_1BFF35BC8(v19);
      sub_1BFF35700(a1, *(void *)&a2, v7);
      if (v5)
      {
        sub_1BFF35C00(v19);
        return swift_deallocBox();
      }
      sub_1BFF35C00(v19);
      *a4 = v21;
      uint64_t v34 = *(uint64_t (**)(void))(*(void *)(v20 - 8) + 104);
      return v34();
    case 4uLL:
      uint64_t v23 = v8 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v24 = *(void *)(v23 + 16);
      int v25 = *(unsigned __int8 *)(v23 + 24);
      if (v25 == 12)
      {
        uint64_t v26 = swift_allocObject();
        uint64_t v27 = self;
        swift_bridgeObjectRetain();
        *(void *)(v26 + 16) = objc_msgSend(v27, sel_defaultMetrics);
        sub_1C1517EFC();
        double v28 = sub_1BFF493E4(v37, v24);
        if (v9)
        {
          swift_bridgeObjectRelease();
LABEL_17:
          swift_release();

          return swift_deallocUninitializedObject();
        }
        double v35 = v28;
      }
      else
      {
        LOBYTE(v37) = v25;
        swift_bridgeObjectRetain();
        id v32 = sub_1BFF68690();
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17A8]), sel_initForTextStyle_, v32);
        sub_1C1517EFC();
        double v33 = sub_1BFF493E4(v37, v24);
        if (v5)
        {
          swift_bridgeObjectRelease();

          goto LABEL_17;
        }
        double v35 = v33;
      }
      swift_release();
      *(double *)(v26 + 24) = v35;
      swift_bridgeObjectRelease();
      *a4 = v26;
LABEL_26:
      uint64_t v34 = *(uint64_t (**)(void))(*(void *)(sub_1C151786C() - 8) + 104);
      return v34();
    case 5uLL:
      uint64_t v29 = *(void *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v30 = swift_allocObject();
      if (!v7) {
        goto LABEL_25;
      }
      sub_1C1517EFC();
      double v31 = sub_1BFF493E4(v37, v29);
      if (!v5)
      {
        double v36 = v31;
        swift_release();
        a2 = v36;
LABEL_25:
        *(double *)(v30 + 16) = a2;
        *a4 = v30;
        goto LABEL_26;
      }
      swift_release();
      return swift_deallocUninitializedObject();
    case 6uLL:
      goto LABEL_26;
    default:
      uint64_t v12 = *(void *)(v8 + 16);
      uint64_t v13 = swift_allocObject();
      sub_1C1517EFC();
      double v14 = sub_1BFF493E4(v37, v12);
      swift_release();
      if (v5) {
        return swift_deallocUninitializedObject();
      }
      *(double *)(v13 + 16) = v14;
      *a4 = v13;
      goto LABEL_26;
  }
}

unint64_t sub_1BFF35BC8(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFF35C00(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BFF35C38()
{
  if (!qword_1EB871320)
  {
    sub_1C151786C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB871320);
    }
  }
}

void sub_1BFF35CA0()
{
  if (!qword_1EB871360)
  {
    sub_1BFF597F8();
    unint64_t v0 = sub_1C1517C4C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871360);
    }
  }
}

uint64_t sub_1BFF35CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t)@<X4>, void (*a6)(uint64_t)@<X5>, void *a7@<X8>)
{
  uint64_t v7 = *(void *)(a3 + 16);
  if (v7)
  {
    uint64_t v19 = a4;
    uint64_t v20 = a7;
    swift_bridgeObjectRetain();
    uint64_t v12 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v13 = *v12;
      swift_retain();
      a5(v13);
      uint64_t v14 = swift_retain();
      uint64_t v15 = sub_1BFF273E0(v14);
      char v17 = (v16 & 1) != 0
          ? ((uint64_t (*)(uint64_t, uint64_t))v15)(a2, a1)
          : ((uint64_t (*)(uint64_t))v15)(a2);
      sub_1BFF27F20();
      swift_release();
      if (v17) {
        break;
      }
      v12 += 2;
      swift_release();
      a6(v13);
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        a7 = v20;
        a4 = v19;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    a5(v13);
    swift_release();
    uint64_t result = ((uint64_t (*)(uint64_t))a6)(v13);
    *uint64_t v20 = v13;
  }
  else
  {
LABEL_9:
    *a7 = a4;
    return ((uint64_t (*)(uint64_t))a5)(a4);
  }
  return result;
}

unint64_t sub_1BFF35EA4(unint64_t result)
{
  switch((result >> 59) & 0x1E | (result >> 2) & 1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
    case 0x14uLL:
    case 0x15uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFF35EE8()
{
  unint64_t result = qword_1EB887498;
  if (!qword_1EB887498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887498);
  }
  return result;
}

uint64_t sub_1BFF35F3C(uint64_t a1)
{
  return sub_1BFF4E77C(a1, v1 + 16);
}

void *initializeWithCopy for HeadlineViewLayout.Context(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  uint64_t v6 = *(void *)((char *)a2 + v3 + 8);
  *(void *)uint64_t v4 = *(void *)((char *)a2 + v3);
  *((void *)v4 + 1) = v6;
  v4[24] = *((unsigned char *)a2 + v3 + 24);
  *((void *)v4 + 2) = *(void *)((char *)a2 + v3 + 16);
  uint64_t v7 = *(void *)((char *)a2 + v3 + 40);
  *((void *)v4 + 4) = *(void *)((char *)a2 + v3 + 32);
  *((void *)v4 + 5) = v7;
  *((void *)v4 + 6) = *(void *)((char *)a2 + v3 + 48);
  v4[56] = *((unsigned char *)a2 + v3 + 56);
  uint64_t v52 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v8 = v52[10];
  uint64_t v9 = &v4[v8];
  unint64_t v10 = &v5[v8];
  *uint64_t v9 = v5[v8];
  v9[1] = v5[v8 + 1];
  uint64_t v11 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v12 = v11[6];
  __dst = &v9[v12];
  uint64_t v13 = &v10[v12];
  uint64_t v14 = (int *)type metadata accessor for SharedItem();
  uint64_t v47 = *((void *)v14 - 1);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, int *))(v47 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v15(v13, 1, v14))
  {
    uint64_t v16 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(__dst, v13, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(__dst, v13, v17);
    __dst[v14[5]] = v13[v14[5]];
    uint64_t v18 = v14[6];
    uint64_t v19 = *(void **)&v13[v18];
    *(void *)&__dst[v18] = v19;
    uint64_t v20 = v14[7];
    uint64_t v49 = &v13[v20];
    uint64_t v50 = &__dst[v20];
    uint64_t v21 = sub_1C1515FDC();
    uint64_t v48 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    id v22 = v19;
    v48(v50, v49, v21);
    (*(void (**)(char *, void, uint64_t, int *))(v47 + 56))(__dst, 0, 1, v14);
  }
  v9[v11[7]] = v10[v11[7]];
  v9[v11[8]] = v10[v11[8]];
  v9[v11[9]] = v10[v11[9]];
  v9[v11[10]] = v10[v11[10]];
  uint64_t v23 = v52[11];
  uint64_t v24 = &v4[v23];
  int v25 = &v5[v23];
  uint64_t v26 = sub_1C151D2DC();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1BFEEA038(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v29 = v52[12];
  uint64_t v30 = &v4[v29];
  double v31 = &v5[v29];
  unint64_t v32 = *((void *)v31 + 1);
  if (v32 >= 0x11)
  {
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  }
  uint64_t v33 = v52[13];
  unint64_t v34 = *(void *)&v5[v33];
  if (v34 >= 2)
  {
    if (v34 == 2)
    {
      *(void *)&v4[v33] = 2;
    }
    else
    {
      *(void *)&v4[v33] = v34;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    *(void *)&v4[v33] = v34;
  }
  uint64_t v35 = v52[14];
  double v36 = *(void **)&v5[v35];
  *(void *)&v4[v35] = v36;
  uint64_t v37 = a3[6];
  int v38 = (char *)a1 + v37;
  double v39 = (char *)a2 + v37;
  long long v40 = *(_OWORD *)((char *)a2 + v37 + 24);
  *(_OWORD *)((char *)a1 + v37 + 24) = v40;
  uint64_t v41 = v40;
  uint64_t v42 = **(void (***)(char *, char *, uint64_t))(v40 - 8);
  id v43 = v36;
  v42(v38, v39, v41);
  uint64_t v44 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v44) = *(void *)((char *)a2 + v44);
  uint64_t v45 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v45) = *(void *)((char *)a2 + v45);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BFF363F4(uint64_t a1)
{
  return sub_1BFF363FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1BFF363FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1517EFC();
  uint64_t v5 = *(void *)(*(void *)(v20 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v5 + 16) + 16))
  {
    v19[0] = *(void *)(v20 + 56);
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_1BFEF3B08(v6);
    sub_1BFEF3808(v7);
    swift_release();
    uint64_t v8 = v19[0];
  }
  else
  {
    uint64_t v8 = sub_1BFEF3784();
    swift_release();
  }
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  v19[0] = a2;
  v19[1] = a3;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1BFEF53C0(v19);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10)
  {
LABEL_13:
    uint64_t v17 = 0;
    goto LABEL_14;
  }
  uint64_t v11 = (uint64_t *)(v9 + 64);
  while (1)
  {
    uint64_t v12 = *(v11 - 1);
    uint64_t v13 = *v11;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1BFF36784(v8, v12);
    char v15 = sub_1BFEFAE14(v14, v12);
    swift_release();
    if (v15) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_9:
    v11 += 5;
    if (!--v10) {
      goto LABEL_13;
    }
  }
  char v16 = sub_1BFEFB810(v8, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v17 = 1;
LABEL_14:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1BFF365E8(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a2 + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a3((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a2, v5);
    swift_release();
  }
  else
  {
    uint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v9 = a3((char *)v10, v7, a2, v5);
    swift_release();
    MEMORY[0x1C18C9B00](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_1BFF36784(uint64_t a1, uint64_t a2)
{
  return sub_1BFF365E8(a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_1BFEFB09C);
}

void sub_1BFF367F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v94 = a1;
  sub_1BFF31D5C(0, (unint64_t *)&qword_1EB871360, MEMORY[0x1E4FABA30]);
  uint64_t v95 = v15;
  uint64_t v96 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v106 = (uint64_t *)((char *)&v87 - v16);
  sub_1BFF3D95C();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v98 = (uint64_t)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v99 = (uint64_t)&v87 - v20;
  uint64_t v97 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v107 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v100 = (uint64_t *)((char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_unownedRetainStrong();
  uint64_t v22 = a3[9];
  swift_retain();
  swift_release();
  uint64_t v109 = v22;
  uint64_t v104 = a4;
  uint64_t v102 = a5;
  sub_1BFF41010(a4, a5, (uint64_t)a6);
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v105 = a6;
  uint64_t v103 = a2;
  uint64_t v101 = a8;
  uint64_t v23 = v108;
  sub_1BFF4D720((uint64_t)a3, a6, a2, a8);
  if (v23)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v108 = 0;
    uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = (uint64_t)v100;
    *uint64_t v100 = v25;
    uint64_t v27 = v97;
    swift_storeEnumTagMultiPayload();
    uint64_t v90 = a7;
    uint64_t v28 = *(void *)(a7 + 24);
    uint64_t v29 = v99;
    sub_1BFF376C4(v26, v99, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    uint64_t v30 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v107 + 56);
    v107 += 56;
    uint64_t v91 = v30;
    v30(v29, 0, 1, v27);
    uint64_t v31 = v98;
    sub_1BFF376C4(v29, v98, (uint64_t (*)(void))sub_1BFF3D95C);
    uint64_t v92 = v28;
    swift_beginAccess();
    swift_retain();
    uint64_t v32 = v102;
    swift_bridgeObjectRetain();
    uint64_t v33 = v104;
    uint64_t v89 = v28 + 24;
    sub_1BFF3D9D4(v31, v104, v32);
    swift_endAccess();
    sub_1BFF3BECC(v29, (uint64_t (*)(void))sub_1BFF3D95C);
    sub_1BFF3BECC(v26, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    swift_unownedRetainStrong();
    unint64_t v34 = a3[4];
    sub_1BFF415D4(v34);
    swift_release();
    uint64_t v109 = v34;
    uint64_t v35 = v105;
    sub_1BFF4175C(v33, v32, (uint64_t)v105);
    uint64_t v93 = v36;
    sub_1BFF4160C(v34);
    swift_unownedRetainStrong();
    unint64_t v37 = a3[4];
    swift_bridgeObjectRetain();
    sub_1BFF415D4(v37);
    swift_release();
    uint64_t v109 = v37;
    id v38 = *(id *)(*(void *)(v25 + 16) + 32);
    double v39 = v108;
    sub_1BFF41A20(v38, v35, v103, v101, v33, v32, v106);
    if (v39)
    {
      sub_1BFF4160C(v37);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v88 = v25;
      sub_1BFF4160C(v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v40 = (uint64_t)v105;
      uint64_t v41 = (uint64_t *)(*(uint64_t *)((char *)v105 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
      swift_beginAccess();
      uint64_t v43 = *v41;
      uint64_t v42 = v41[1];
      swift_unownedRetainStrong();
      uint64_t v44 = a3[8];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v45 = sub_1BFF416D8(v44, v40, v43, v42);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (v45 && (swift_beginAccess(), (uint64_t v46 = *(void *)(v45 + 72)) != 0) && *(void *)(v46 + 16))
      {
        uint64_t v108 = a3;
        uint64_t v47 = *(void *)(v45 + 48);
        uint64_t v48 = *(void *)(v45 + 56);
        int v49 = *(unsigned __int8 *)(v45 + 64);
        swift_retain();
        swift_retain();
        uint64_t v50 = swift_bridgeObjectRetain();
        uint64_t v68 = sub_1C12A4950(v50, v40);
        swift_bridgeObjectRelease();
        swift_release();
        if (v49) {
          uint64_t v69 = 0;
        }
        else {
          uint64_t v69 = v48;
        }
        if (v49) {
          uint64_t v70 = 0;
        }
        else {
          uint64_t v70 = v47;
        }
        type metadata accessor for FormatAnimationData();
        uint64_t v71 = swift_allocObject();
        uint64_t v93 = v45;
        *(void *)(v71 + 16) = v45;
        *(void *)(v71 + 24) = v70;
        *(void *)(v71 + 32) = v69;
        *(unsigned char *)(v71 + 40) = v49;
        uint64_t v72 = v92;
        *(void *)(v71 + 48) = v68;
        swift_beginAccess();
        swift_retain_n();
        uint64_t v73 = v102;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v114 = *(void *)(v72 + 32);
        *(void *)(v72 + 32) = 0x8000000000000000;
        uint64_t v51 = v104;
        sub_1C0062D34(v71, v104, v73, isUniquelyReferenced_nonNull_native);
        *(void *)(v72 + 32) = v114;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release_n();
        a3 = v108;
      }
      else
      {
        uint64_t v93 = v45;
        uint64_t v51 = v104;
      }
      uint64_t v52 = v103;
      swift_unownedRetainStrong();
      swift_beginAccess();
      uint64_t v53 = a3[20];
      swift_bridgeObjectRetain();
      uint64_t v54 = swift_release();
      MEMORY[0x1F4188790](v54);
      uint64_t v85 = v40;
      uint64_t v86 = v52;
      uint64_t v55 = v40;
      uint64_t v56 = a3;
      unint64_t v57 = sub_1C02834C0((void (*)(uint64_t *))sub_1C01742B0, (uint64_t)(&v87 - 4), v53);
      swift_bridgeObjectRelease();
      uint64_t v58 = v92;
      swift_beginAccess();
      uint64_t v59 = v102;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      char v60 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v113 = *(void *)(v58 + 40);
      *(void *)(v58 + 40) = 0x8000000000000000;
      sub_1C10660D0(v51, v59, v57, v51, v59, v60);
      *(void *)(v58 + 40) = v113;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v109 = v94;
      swift_getKeyPath();
      swift_unownedRetainStrong();
      swift_beginAccess();
      uint64_t v61 = v56[6];
      swift_bridgeObjectRetain();
      swift_release();
      swift_retain();
      sub_1C12A4C68(v61, v55);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v62 = (void *)swift_allocObject();
      v62[2] = v51;
      v62[3] = v59;
      _OWORD v62[4] = v90;
      v62[5] = v88;
      v62[6] = v55;
      uint64_t v63 = v101;
      v62[7] = v56;
      v62[8] = v63;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_unownedRetain();
      sub_1BFF1D63C();
      uint64_t v64 = sub_1BFF41644(&qword_1EB884D70, 255, (void (*)(uint64_t))sub_1BFF1D63C);
      swift_retain();
      uint64_t v85 = v64;
      sub_1C15172EC();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_unownedRetainStrong();
      uint64_t v65 = *((unsigned __int8 *)v56 + 129);
      swift_release();
      char v66 = 18;
      uint64_t v67 = v91;
      switch(v65)
      {
        case 1:
          char v66 = 19;
          goto LABEL_22;
        case 2:
          char v66 = 20;
          goto LABEL_22;
        case 3:
          char v66 = 21;
          goto LABEL_22;
        case 4:
          char v66 = 22;
          goto LABEL_22;
        case 5:
        case 6:
        case 7:
          goto LABEL_23;
        default:
LABEL_22:
          swift_unownedRetainStrong();
          sub_1BFF52070(v88, &v109);
          swift_release();
          uint64_t v75 = v109;
          if ((~v109 & 0xF000000000000007) != 0)
          {
            uint64_t v109 = 0;
            unint64_t v110 = 0xE000000000000000;
            sub_1C15200FC();
            unint64_t v76 = v102;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v109 = v104;
            unint64_t v110 = v76;
            sub_1C151E80C();
            uint64_t v108 = 0;
            uint64_t v78 = v109;
            uint64_t v77 = v110;
            uint64_t v79 = type metadata accessor for FormatAccessibilityLayoutValue();
            uint64_t v80 = swift_allocObject();
            *(void *)(v80 + 16) = v78;
            *(void *)(v80 + 24) = v77;
            *(unsigned char *)(v80 + 32) = v66;
            uint64_t v115 = v94;
            swift_getKeyPath();
            uint64_t v111 = v79;
            uint64_t v112 = sub_1BFF41644(&qword_1EB88D700, 255, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue);
            uint64_t v109 = v80;
            sub_1BFF41644(&qword_1EB884D90, 255, (void (*)(uint64_t))sub_1BFE13A64);
            swift_bridgeObjectRetain();
            swift_retain();
            sub_1C151732C();
            swift_release();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
            uint64_t v81 = (uint64_t)v100;
            *uint64_t v100 = v75;
            uint64_t v82 = v97;
            swift_storeEnumTagMultiPayload();
            uint64_t v83 = v99;
            sub_1BFF376C4(v81, v99, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
            v67(v83, 0, 1, v82);
            uint64_t v84 = v98;
            sub_1BFF376C4(v83, v98, (uint64_t (*)(void))sub_1BFF3D95C);
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_1BFF51F0C(v75);
            sub_1BFF3D9D4(v84, v78, v77);
            swift_endAccess();
            sub_1BFF3BECC(v83, (uint64_t (*)(void))sub_1BFF3D95C);
            sub_1BFE14324(v75);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            sub_1BFF3BECC(v81, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
            (*(void (**)(uint64_t *, uint64_t))(v96 + 8))(v106, v95);
          }
          else
          {
LABEL_23:
            (*(void (**)(uint64_t *, uint64_t))(v96 + 8))(v106, v95);
            swift_release();
            swift_release();
          }
          break;
      }
    }
  }
}

uint64_t sub_1BFF376C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF3772C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF37794(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF377FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_1C151D2DC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_299;
    case 1u:
    case 2u:
    case 3u:
    case 7u:
    case 8u:
    case 0x13u:
      *(void *)a1 = *(void *)a2;
      swift_retain();
      goto LABEL_299;
    case 4u:
      uint64_t v7 = type metadata accessor for FeedItem(0);
      uint64_t v682 = a1;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v8 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v8;
          uint64_t v9 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v9;
          *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
          uint64_t v10 = (void *)(a2 + 40);
          unint64_t v11 = *(void *)(a2 + 48);
          swift_bridgeObjectRetain();
          if (v11 >= 0x11)
          {
            *(void *)(a1 + 40) = *v10;
            *(void *)(a1 + 48) = v11;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 40) = *(_OWORD *)v10;
          }
          goto LABEL_286;
        case 1u:
          uint64_t v162 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v162;
          uint64_t v163 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v163;
          *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
          uint64_t v164 = *(void *)(a2 + 48);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = v164;
          uint64_t v165 = *(void *)(a2 + 64);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = v165;
          uint64_t v166 = (void *)(a2 + 72);
          unint64_t v167 = *(void *)(a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v167 >= 0x11)
          {
            *(void *)(a1 + 72) = *v166;
            *(void *)(a1 + 80) = v167;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 72) = *(_OWORD *)v166;
          }
          goto LABEL_286;
        case 2u:
          uint64_t v168 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v168;
          id v169 = (int *)type metadata accessor for FeedBannerAd();
          uint64_t v170 = v169[5];
          uint64_t v171 = a1 + v170;
          uint64_t v172 = a2 + v170;
          uint64_t v173 = a2;
          uint64_t v174 = sub_1C151DBAC();
          uint64_t v175 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v174 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v176 = v174;
          a2 = v173;
          v175(v171, v172, v176);
          *(void *)(a1 + v169[6]) = *(void *)(v173 + v169[6]);
          uint64_t v177 = v169[7];
          uint64_t v178 = a1 + v177;
          uint64_t v179 = v173 + v177;
          *(void *)uint64_t v178 = *(void *)v179;
          *(unsigned char *)(v178 + 8) = *(unsigned char *)(v179 + 8);
          uint64_t v180 = v169[8];
          uint64_t v181 = a1 + v180;
          uint64_t v182 = v173 + v180;
          unint64_t v183 = *(void *)(v182 + 8);
          if (v183 >= 0x11) {
            goto LABEL_84;
          }
          *(_OWORD *)uint64_t v181 = *(_OWORD *)v182;
          goto LABEL_286;
        case 3u:
          uint64_t v184 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v184;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          uint64_t v185 = *(void *)(a2 + 40);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = v185;
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
          v660 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v669 = a2;
          uint64_t v186 = v660[10];
          uint64_t v187 = (unsigned char *)(a1 + v186);
          uint64_t v188 = a2 + v186;
          *uint64_t v187 = *(unsigned char *)(a2 + v186);
          v187[1] = *(unsigned char *)(a2 + v186 + 1);
          id v189 = (int *)type metadata accessor for FeedHeadline.State(0);
          uint64_t v190 = v189[6];
          __dst = &v187[v190];
          double v191 = (char *)(v188 + v190);
          double v192 = (int *)type metadata accessor for SharedItem();
          uint64_t v653 = *((void *)v192 - 1);
          uint64_t v193 = *(unsigned int (**)(char *, uint64_t, int *))(v653 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v193(v191, 1, v192))
          {
            uint64_t v194 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v191, *(void *)(*(void *)(v194 - 8) + 64));
          }
          else
          {
            uint64_t v315 = sub_1C151631C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v315 - 8) + 16))(__dst, v191, v315);
            __dst[v192[5]] = v191[v192[5]];
            uint64_t v316 = v192[6];
            unsigned int v317 = *(void **)&v191[v316];
            *(void *)&__dst[v316] = v317;
            uint64_t v318 = v192[7];
            v650 = &__dst[v318];
            uint64_t v319 = &v191[v318];
            uint64_t v320 = sub_1C1515FDC();
            char v321 = *(void (**)(char *, char *, uint64_t))(*(void *)(v320 - 8) + 16);
            id v322 = v317;
            v321(v650, v319, v320);
            (*(void (**)(char *, void, uint64_t, int *))(v653 + 56))(__dst, 0, 1, v192);
          }
          v187[v189[7]] = *(unsigned char *)(v188 + v189[7]);
          v187[v189[8]] = *(unsigned char *)(v188 + v189[8]);
          v187[v189[9]] = *(unsigned char *)(v188 + v189[9]);
          v187[v189[10]] = *(unsigned char *)(v188 + v189[10]);
          a2 = v669;
          uint64_t v323 = v660[11];
          a1 = v682;
          unsigned int v324 = (void *)(v682 + v323);
          unsigned int v325 = (const void *)(v669 + v323);
          uint64_t v326 = sub_1C151D2DC();
          uint64_t v327 = *(void *)(v326 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v327 + 48))(v325, 1, v326))
          {
            sub_1BFEEF440(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
            memcpy(v324, v325, *(void *)(*(void *)(v328 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v327 + 16))(v324, v325, v326);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v327 + 56))(v324, 0, 1, v326);
          }
          uint64_t v357 = v660[12];
          uint64_t v358 = (void *)(v682 + v357);
          uint64_t v359 = (void *)(v669 + v357);
          unint64_t v360 = v359[1];
          if (v360 >= 0x11)
          {
            *uint64_t v358 = *v359;
            v358[1] = v360;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v358 = *(_OWORD *)v359;
          }
          uint64_t v361 = v660[13];
          unint64_t v362 = *(void *)(v669 + v361);
          if (v362 >= 2)
          {
            if (v362 == 2)
            {
              *(void *)(v682 + v361) = 2;
            }
            else
            {
              *(void *)(v682 + v361) = v362;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(void *)(v682 + v361) = v362;
          }
          uint64_t v420 = v660[14];
          uint64_t v421 = *(void **)(v669 + v420);
          *(void *)(v682 + v420) = v421;
          id v422 = v421;
          goto LABEL_286;
        case 4u:
          uint64_t v195 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v195;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          double v196 = (void *)(a2 + 24);
          unint64_t v197 = *(void *)(a2 + 32);
          if (v197 >= 0x11)
          {
            *(void *)(a1 + 24) = *v196;
            *(void *)(a1 + 32) = v197;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v196;
          }
          uint64_t v275 = *(void *)(a2 + 48);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = v275;
          uint64_t v276 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v277 = v276[8];
          uint64_t v278 = a1 + v277;
          uint64_t v279 = a2 + v277;
          uint64_t v280 = sub_1C1515FDC();
          uint64_t v281 = *(void *)(v280 - 8);
          uint64_t v282 = *(void (**)(uint64_t, uint64_t, uint64_t))(v281 + 16);
          swift_bridgeObjectRetain();
          v282(v278, v279, v280);
          uint64_t v283 = v276[9];
          long long v284 = (void *)(a1 + v283);
          long long v285 = (const void *)(a2 + v283);
          __dstb = (void *)v280;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v281 + 48))(a2 + v283, 1, v280))
          {
            sub_1BFEEF440(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            memcpy(v284, v285, *(void *)(*(void *)(v286 - 8) + 64));
          }
          else
          {
            v282((uint64_t)v284, (uint64_t)v285, v280);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v281 + 56))(v284, 0, 1, v280);
          }
          *(void *)(a1 + v276[10]) = *(void *)(a2 + v276[10]);
          *(void *)(a1 + v276[11]) = *(void *)(a2 + v276[11]);
          v662 = v276;
          uint64_t v343 = v276[12];
          uint64_t v344 = (void *)(a1 + v343);
          uint64_t v345 = (void *)(a2 + v343);
          uint64_t v346 = type metadata accessor for FeedHeadline(0);
          uint64_t v347 = *(void *)(v346 - 8);
          uint64_t v348 = *(unsigned int (**)(void *, uint64_t, int *))(v347 + 48);
          unsigned __int8 v349 = (int *)v346;
          swift_retain();
          swift_retain();
          v651 = (void (*)(char *, char *, void *))v282;
          if (v348(v345, 1, v349))
          {
            sub_1BFEEF440(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v344, v345, *(void *)(*(void *)(v350 - 8) + 64));
            uint64_t v351 = v662;
          }
          else
          {
            v648 = v349;
            uint64_t v649 = v347;
            uint64_t v672 = a2;
            uint64_t v368 = v345[1];
            *uint64_t v344 = *v345;
            v344[1] = v368;
            v344[2] = v345[2];
            *((unsigned char *)v344 + 24) = *((unsigned char *)v345 + 24);
            uint64_t v369 = v345[5];
            v344[4] = v345[4];
            v344[5] = v369;
            v344[6] = v345[6];
            *((unsigned char *)v344 + 56) = *((unsigned char *)v345 + 56);
            uint64_t v370 = v349[10];
            uint64_t v371 = (char *)v344 + v370;
            uint64_t v372 = (char *)v345 + v370;
            *uint64_t v371 = *((unsigned char *)v345 + v370);
            v371[1] = *((unsigned char *)v345 + v370 + 1);
            v647 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v373 = v647[6];
            v646 = &v371[v373];
            uint64_t v374 = &v372[v373];
            uint64_t v375 = (int *)type metadata accessor for SharedItem();
            uint64_t v645 = *((void *)v375 - 1);
            uint64_t v376 = *(unsigned int (**)(char *, uint64_t, int *))(v645 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v376(v374, 1, v375))
            {
              uint64_t v377 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v646, v374, *(void *)(*(void *)(v377 - 8) + 64));
            }
            else
            {
              uint64_t v448 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v448 - 8) + 16))(v646, v374, v448);
              v646[v375[5]] = v374[v375[5]];
              uint64_t v449 = v375[6];
              v450 = *(void **)&v374[v449];
              *(void *)&v646[v449] = v450;
              uint64_t v451 = v375[7];
              v452 = &v646[v451];
              v453 = &v374[v451];
              id v454 = v450;
              v651(v452, v453, __dstb);
              (*(void (**)(char *, void, uint64_t, int *))(v645 + 56))(v646, 0, 1, v375);
            }
            v371[v647[7]] = v372[v647[7]];
            v371[v647[8]] = v372[v647[8]];
            v371[v647[9]] = v372[v647[9]];
            v371[v647[10]] = v372[v647[10]];
            uint64_t v455 = v648[11];
            v456 = (char *)v344 + v455;
            v457 = (char *)v345 + v455;
            uint64_t v458 = sub_1C151D2DC();
            uint64_t v459 = *(void *)(v458 - 8);
            a2 = v672;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v459 + 48))(v457, 1, v458))
            {
              sub_1BFEEF440(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v456, v457, *(void *)(*(void *)(v460 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v459 + 16))(v456, v457, v458);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v459 + 56))(v456, 0, 1, v458);
            }
            a1 = v682;
            uint64_t v351 = v662;
            uint64_t v461 = v648[12];
            v462 = (void *)((char *)v344 + v461);
            v463 = (void *)((char *)v345 + v461);
            unint64_t v464 = v463[1];
            if (v464 >= 0x11)
            {
              void *v462 = *v463;
              v462[1] = v464;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v462 = *(_OWORD *)v463;
            }
            uint64_t v465 = v648[13];
            unint64_t v466 = *(void *)((char *)v345 + v465);
            if (v466 >= 2)
            {
              if (v466 == 2)
              {
                *(void *)((char *)v344 + v465) = 2;
              }
              else
              {
                *(void *)((char *)v344 + v465) = v466;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(void *)((char *)v344 + v465) = v466;
            }
            uint64_t v495 = v648[14];
            v496 = *(void **)((char *)v345 + v495);
            *(void *)((char *)v344 + v495) = v496;
            v497 = *(void (**)(void *, void, uint64_t, int *))(v649 + 56);
            id v498 = v496;
            v497(v344, 0, 1, v648);
          }
          uint64_t v499 = v351[13];
          v500 = (void *)(a1 + v499);
          v501 = (uint64_t *)(a2 + v499);
          uint64_t v502 = type metadata accessor for WebEmbedDataVisualization();
          uint64_t v503 = *(void *)(v502 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v503 + 48))(v501, 1, v502))
          {
            sub_1BFEEF440(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v500, v501, *(void *)(*(void *)(v504 - 8) + 64));
          }
          else
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v506 = *v501;
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v507 = v501[1];
              void *v500 = v506;
              v500[1] = v507;
              uint64_t v508 = type metadata accessor for GenericDataVisualization();
              uint64_t v509 = *(int *)(v508 + 20);
              uint64_t v510 = a2;
              v511 = (char *)v500 + v509;
              uint64_t v512 = a1;
              v513 = (char *)v501 + v509;
              swift_bridgeObjectRetain();
              v514 = v511;
              a2 = v510;
              v515 = v513;
              a1 = v512;
              v651(v514, v515, __dstb);
              *(void *)((char *)v500 + *(int *)(v508 + 24)) = *(uint64_t *)((char *)v501 + *(int *)(v508 + 24));
              swift_bridgeObjectRetain();
            }
            else
            {
              void *v500 = v506;
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(void *, void, uint64_t, uint64_t))(v503 + 56))(v500, 0, 1, v502);
          }
          *(unsigned char *)(a1 + v662[14]) = *(unsigned char *)(a2 + v662[14]);
          goto LABEL_286;
        case 5u:
          double v198 = *(void **)a2;
          uint64_t v199 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v199;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
          double v200 = *(void **)(a2 + 56);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = v200;
          *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
          uint64_t v201 = *(void *)(a2 + 80);
          id v202 = v198;
          swift_bridgeObjectRetain();
          id v203 = v200;
          if (v201 == 1)
          {
            long long v204 = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
            *(_OWORD *)(a1 + 88) = v204;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
          }
          else
          {
            *(void *)(a1 + 72) = *(void *)(a2 + 72);
            *(void *)(a1 + 80) = v201;
            uint64_t v287 = *(void *)(a2 + 96);
            *(void *)(a1 + 88) = *(void *)(a2 + 88);
            *(void *)(a1 + 96) = v287;
            uint64_t v289 = *(void **)(a2 + 104);
            uint64_t v288 = *(void *)(a2 + 112);
            *(void *)(a1 + 104) = v289;
            *(void *)(a1 + 112) = v288;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v290 = v289;
          }
          uint64_t v291 = (void *)(a2 + 120);
          unint64_t v292 = *(void *)(a2 + 128);
          if (v292 >= 0x11)
          {
            *(void *)(a1 + 120) = *v291;
            *(void *)(a1 + 128) = v292;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v291;
          }
          *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
          goto LABEL_286;
        case 6u:
          int v205 = *(unsigned __int8 *)(a2 + 281);
          if (v205 == 2)
          {
            uint64_t v385 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v385;
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
            uint64_t v386 = *(void *)(a2 + 56);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = v386;
            uint64_t v387 = *(void *)(a2 + 72);
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
            *(void *)(a1 + 72) = v387;
            uint64_t v388 = *(void *)(a2 + 88);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v388 != 1)
            {
              *(void *)(a1 + 80) = *(void *)(a2 + 80);
              *(void *)(a1 + 88) = v388;
              uint64_t v430 = *(void *)(a2 + 120);
              swift_bridgeObjectRetain();
              if (v430)
              {
                uint64_t v431 = *(void *)(a2 + 128);
                *(void *)(a1 + 120) = v430;
                *(void *)(a1 + 128) = v431;
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v430 - 8))(a1 + 96, a2 + 96, v430);
                *(void *)(a1 + 136) = *(void *)(a2 + 136);
              }
              else
              {
                long long v533 = *(_OWORD *)(a2 + 112);
                *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
                *(_OWORD *)(a1 + 112) = v533;
                *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
              }
              *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
              goto LABEL_222;
            }
            v389 = (_OWORD *)(a1 + 80);
            uint64_t v390 = (_OWORD *)(a2 + 80);
            long long v391 = *(_OWORD *)(a2 + 128);
            *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
            *(_OWORD *)(a1 + 128) = v391;
            *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
          }
          else
          {
            if (v205 != 1)
            {
              uint64_t v392 = *(void **)a2;
              uint64_t v393 = *(void *)(a2 + 8);
              *(void *)a1 = *(void *)a2;
              *(void *)(a1 + 8) = v393;
              *(void *)(a1 + 16) = *(void *)(a2 + 16);
              *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
              *(void *)(a1 + 32) = *(void *)(a2 + 32);
              *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
              uint64_t v394 = *(void **)(a2 + 56);
              *(void *)(a1 + 48) = *(void *)(a2 + 48);
              *(void *)(a1 + 56) = v394;
              *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
              uint64_t v395 = *(void *)(a2 + 80);
              id v396 = v392;
              swift_bridgeObjectRetain();
              id v397 = v394;
              if (v395 == 1)
              {
                long long v398 = *(_OWORD *)(a2 + 88);
                *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
                *(_OWORD *)(a1 + 88) = v398;
                *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
              }
              else
              {
                *(void *)(a1 + 72) = *(void *)(a2 + 72);
                *(void *)(a1 + 80) = v395;
                uint64_t v432 = *(void *)(a2 + 96);
                *(void *)(a1 + 88) = *(void *)(a2 + 88);
                *(void *)(a1 + 96) = v432;
                v434 = *(void **)(a2 + 104);
                uint64_t v433 = *(void *)(a2 + 112);
                *(void *)(a1 + 104) = v434;
                *(void *)(a1 + 112) = v433;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v435 = v434;
              }
              v436 = (void *)(a2 + 120);
              unint64_t v437 = *(void *)(a2 + 128);
              if (v437 >= 0x11)
              {
                *(void *)(a1 + 120) = *v436;
                *(void *)(a1 + 128) = v437;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 120) = *(_OWORD *)v436;
              }
              *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
              goto LABEL_222;
            }
            uint64_t v206 = *(void **)a2;
            uint64_t v207 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v207;
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
            uint64_t v208 = *(void **)(a2 + 56);
            *(void *)(a1 + 48) = *(void *)(a2 + 48);
            *(void *)(a1 + 56) = v208;
            *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
            uint64_t v209 = *(void *)(a2 + 80);
            id v210 = v206;
            swift_bridgeObjectRetain();
            id v211 = v208;
            if (v209 == 1)
            {
              long long v212 = *(_OWORD *)(a2 + 88);
              *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
              *(_OWORD *)(a1 + 88) = v212;
              *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
            }
            else
            {
              *(void *)(a1 + 72) = *(void *)(a2 + 72);
              *(void *)(a1 + 80) = v209;
              uint64_t v424 = *(void *)(a2 + 96);
              *(void *)(a1 + 88) = *(void *)(a2 + 88);
              *(void *)(a1 + 96) = v424;
              v426 = *(void **)(a2 + 104);
              uint64_t v425 = *(void *)(a2 + 112);
              *(void *)(a1 + 104) = v426;
              *(void *)(a1 + 112) = v425;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v427 = v426;
            }
            v428 = (void *)(a2 + 120);
            unint64_t v429 = *(void *)(a2 + 128);
            if (v429 >= 0x11)
            {
              *(void *)(a1 + 120) = *v428;
              *(void *)(a1 + 128) = v429;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 120) = *(_OWORD *)v428;
            }
            uint64_t v390 = (_OWORD *)(a2 + 144);
            v438 = *(void **)(a2 + 144);
            *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
            if (v438)
            {
              uint64_t v439 = *(void *)(a2 + 152);
              uint64_t v440 = *(void *)(a2 + 160);
              *(void *)(a1 + 144) = v438;
              *(void *)(a1 + 152) = v439;
              *(void *)(a1 + 160) = v440;
              *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
              *(void *)(a1 + 176) = *(void *)(a2 + 176);
              *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
              v441 = *(void **)(a2 + 200);
              *(void *)(a1 + 192) = *(void *)(a2 + 192);
              *(void *)(a1 + 200) = v441;
              *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
              uint64_t v442 = *(void *)(a2 + 224);
              id v443 = v438;
              swift_bridgeObjectRetain();
              id v444 = v441;
              if (v442 == 1)
              {
                long long v445 = *(_OWORD *)(a2 + 232);
                *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
                *(_OWORD *)(a1 + 232) = v445;
                *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
              }
              else
              {
                *(void *)(a1 + 216) = *(void *)(a2 + 216);
                *(void *)(a1 + 224) = v442;
                uint64_t v471 = *(void *)(a2 + 240);
                *(void *)(a1 + 232) = *(void *)(a2 + 232);
                *(void *)(a1 + 240) = v471;
                v473 = *(void **)(a2 + 248);
                uint64_t v472 = *(void *)(a2 + 256);
                *(void *)(a1 + 248) = v473;
                *(void *)(a1 + 256) = v472;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v474 = v473;
              }
              v475 = (void *)(a2 + 264);
              unint64_t v476 = *(void *)(a2 + 272);
              if (v476 >= 0x11)
              {
                *(void *)(a1 + 264) = *v475;
                *(void *)(a1 + 272) = v476;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(a1 + 264) = *(_OWORD *)v475;
              }
              *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
LABEL_222:
              *(unsigned char *)(a1 + 281) = v205;
              goto LABEL_286;
            }
            v389 = (_OWORD *)(a1 + 144);
            long long v467 = *(_OWORD *)(a2 + 256);
            *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
            *(_OWORD *)(a1 + 256) = v467;
            *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
            long long v468 = *(_OWORD *)(a2 + 192);
            *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
            *(_OWORD *)(a1 + 192) = v468;
            long long v469 = *(_OWORD *)(a2 + 224);
            *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
            *(_OWORD *)(a1 + 224) = v469;
          }
          long long v470 = v390[1];
          _OWORD *v389 = *v390;
          v389[1] = v470;
          goto LABEL_222;
        case 7u:
          uint64_t v213 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v213;
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
          uint64_t v214 = *(void *)(a2 + 56);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          *(void *)(a1 + 56) = v214;
          uint64_t v215 = *(void *)(a2 + 72);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = v215;
          uint64_t v216 = *(void *)(a2 + 88);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v216 == 1)
          {
            long long v217 = *(_OWORD *)(a2 + 128);
            *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
            *(_OWORD *)(a1 + 128) = v217;
            *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
            long long v218 = *(_OWORD *)(a2 + 96);
            *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 96) = v218;
          }
          else
          {
            *(void *)(a1 + 80) = *(void *)(a2 + 80);
            *(void *)(a1 + 88) = v216;
            uint64_t v293 = *(void *)(a2 + 120);
            swift_bridgeObjectRetain();
            if (v293)
            {
              uint64_t v294 = *(void *)(a2 + 128);
              *(void *)(a1 + 120) = v293;
              *(void *)(a1 + 128) = v294;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v293 - 8))(a1 + 96, a2 + 96, v293);
              *(void *)(a1 + 136) = *(void *)(a2 + 136);
            }
            else
            {
              long long v423 = *(_OWORD *)(a2 + 112);
              *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
              *(_OWORD *)(a1 + 112) = v423;
              *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
            }
            *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
          }
          goto LABEL_286;
        case 8u:
          uint64_t v219 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v219;
          uint64_t v220 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          uint64_t v221 = (void *)(a1 + v220);
          uint64_t v670 = a2;
          double v222 = (void *)(a2 + v220);
          uint64_t v223 = *(void *)(a2 + v220);
          uint64_t v224 = v222[1];
          *uint64_t v221 = v223;
          v221[1] = v224;
          uint64_t v225 = v222[3];
          v221[2] = v222[2];
          v221[3] = v225;
          uint64_t v226 = type metadata accessor for FormatCustomItem.Resolved();
          uint64_t v227 = *(int *)(v226 + 24);
          __dsta = (char *)v221 + v227;
          v661 = (int *)v226;
          uint64_t v228 = (char *)v222 + v227;
          uint64_t v229 = type metadata accessor for FormatCustomItem.Action();
          uint64_t v230 = *(void *)(v229 - 8);
          uint64_t v231 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v230 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v231(v228, 1, v229))
          {
            sub_1BFEEF440(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(__dsta, v228, *(void *)(*(void *)(v232 - 8) + 64));
          }
          else
          {
            uint64_t v329 = sub_1C1515FDC();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v329 - 8) + 16))(__dsta, v228, v329);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v230 + 56))(__dsta, 0, 1, v229);
          }
          *(void *)((char *)v221 + v661[7]) = *(void *)((char *)v222 + v661[7]);
          swift_bridgeObjectRetain();
          a1 = v682;
          goto LABEL_116;
        case 9u:
          uint64_t v233 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v233;
          uint64_t v234 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v234;
          uint64_t v235 = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v235)
          {
            uint64_t v236 = *(void *)(a2 + 64);
            *(void *)(a1 + 56) = v235;
            *(void *)(a1 + 64) = v236;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v235 - 8))(a1 + 32, a2 + 32, v235);
          }
          else
          {
            long long v330 = *(_OWORD *)(a2 + 48);
            *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
            *(_OWORD *)(a1 + 48) = v330;
            *(void *)(a1 + 64) = *(void *)(a2 + 64);
          }
          uint64_t v331 = (_OWORD *)(a1 + 72);
          char v332 = (_OWORD *)(a2 + 72);
          uint64_t v333 = *(void *)(a2 + 96);
          if (v333)
          {
            uint64_t v334 = *(void *)(a2 + 104);
            *(void *)(a1 + 96) = v333;
            *(void *)(a1 + 104) = v334;
            (**(void (***)(_OWORD *, _OWORD *))(v333 - 8))(v331, v332);
          }
          else
          {
            long long v363 = *(_OWORD *)(a2 + 88);
            *uint64_t v331 = *v332;
            *(_OWORD *)(a1 + 88) = v363;
            *(void *)(a1 + 104) = *(void *)(a2 + 104);
          }
          uint64_t v364 = (_OWORD *)(a1 + 112);
          unsigned int v365 = (_OWORD *)(a2 + 112);
          uint64_t v366 = *(void *)(a2 + 136);
          if (v366)
          {
            uint64_t v367 = *(void *)(a2 + 144);
            *(void *)(a1 + 136) = v366;
            *(void *)(a1 + 144) = v367;
            (**(void (***)(_OWORD *, _OWORD *))(v366 - 8))(v364, v365);
          }
          else
          {
            long long v383 = *(_OWORD *)(a2 + 128);
            *uint64_t v364 = *v365;
            *(_OWORD *)(a1 + 128) = v383;
            *(void *)(a1 + 144) = *(void *)(a2 + 144);
          }
          goto LABEL_286;
        case 0xAu:
          uint64_t v237 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v237;
          uint64_t v238 = (int *)type metadata accessor for FeedEngagementBanner();
          uint64_t v239 = v238[5];
          uint64_t v240 = a1 + v239;
          uint64_t v241 = a2 + v239;
          uint64_t v242 = sub_1C151959C();
          uint64_t v243 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v242 - 8) + 16);
          swift_bridgeObjectRetain();
          v243(v240, v241, v242);
          *(void *)(a1 + v238[6]) = *(void *)(a2 + v238[6]);
          uint64_t v244 = v238[7];
          uint64_t v245 = a1 + v244;
          uint64_t v246 = a2 + v244;
          *(void *)uint64_t v245 = *(void *)v246;
          *(unsigned char *)(v245 + 8) = *(unsigned char *)(v246 + 8);
          uint64_t v247 = v238[8];
          uint64_t v181 = a1 + v247;
          uint64_t v182 = a2 + v247;
          unint64_t v183 = *(void *)(v182 + 8);
          if (v183 >= 0x11)
          {
LABEL_84:
            *(void *)uint64_t v181 = *(void *)v182;
            *(void *)(v181 + 8) = v183;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)uint64_t v181 = *(_OWORD *)v182;
          }
          goto LABEL_286;
        case 0xBu:
          *(void *)a1 = *(void *)a2;
          swift_retain();
          goto LABEL_286;
        case 0xCu:
          uint64_t v248 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v248;
          uint64_t v249 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v249;
          *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_286;
        case 0xDu:
          uint64_t v250 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v250;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v251 = (void *)(a2 + 24);
          unint64_t v252 = *(void *)(a2 + 32);
          if (v252 >= 0x11)
          {
            *(void *)(a1 + 24) = *v251;
            *(void *)(a1 + 32) = v252;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v251;
          }
          uint64_t v295 = *(void *)(a2 + 48);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = v295;
          unsigned int v296 = *(void **)(a2 + 64);
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = v296;
          *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          uint64_t v297 = *(void *)(a2 + 112);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          id v298 = v296;
          swift_bridgeObjectRetain();
          if (v297)
          {
            uint64_t v299 = *(void *)(a2 + 120);
            *(void *)(a1 + 112) = v297;
            *(void *)(a1 + 120) = v299;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v297 - 8))(a1 + 88, a2 + 88, v297);
          }
          else
          {
            long long v352 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v352;
            *(void *)(a1 + 120) = *(void *)(a2 + 120);
          }
          uint64_t v353 = (_OWORD *)(a1 + 128);
          uint64_t v354 = (_OWORD *)(a2 + 128);
          uint64_t v355 = *(void *)(a2 + 152);
          if (v355)
          {
            uint64_t v356 = *(void *)(a2 + 160);
            *(void *)(a1 + 152) = v355;
            *(void *)(a1 + 160) = v356;
            (**(void (***)(_OWORD *, _OWORD *))(v355 - 8))(v353, v354);
          }
          else
          {
            long long v378 = *(_OWORD *)(a2 + 144);
            *uint64_t v353 = *v354;
            *(_OWORD *)(a1 + 144) = v378;
            *(void *)(a1 + 160) = *(void *)(a2 + 160);
          }
          uint64_t v379 = (_OWORD *)(a1 + 168);
          unsigned int v380 = (_OWORD *)(a2 + 168);
          uint64_t v381 = *(void *)(a2 + 192);
          if (v381)
          {
            uint64_t v382 = *(void *)(a2 + 200);
            *(void *)(a1 + 192) = v381;
            *(void *)(a1 + 200) = v382;
            (**(void (***)(_OWORD *, _OWORD *))(v381 - 8))(v379, v380);
          }
          else
          {
            long long v384 = *(_OWORD *)(a2 + 184);
            *uint64_t v379 = *v380;
            *(_OWORD *)(a1 + 184) = v384;
            *(void *)(a1 + 200) = *(void *)(a2 + 200);
          }
          goto LABEL_286;
        case 0xEu:
          uint64_t v253 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v253;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v254 = (void *)(a2 + 24);
          unint64_t v255 = *(void *)(a2 + 32);
          if (v255 >= 0x11)
          {
            *(void *)(a1 + 24) = *v254;
            *(void *)(a1 + 32) = v255;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v254;
          }
          uint64_t v300 = *(void *)(a2 + 48);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = v300;
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_286;
        case 0xFu:
          uint64_t v256 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v256;
          *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          uint64_t v257 = (void *)(a2 + 24);
          unint64_t v258 = *(void *)(a2 + 32);
          if (v258 >= 0x11)
          {
            *(void *)(a1 + 24) = *v257;
            *(void *)(a1 + 32) = v258;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 24) = *(_OWORD *)v257;
          }
          break;
        case 0x10u:
          uint64_t v259 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v259;
          uint64_t v260 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v260;
          uint64_t v261 = *(void *)(a2 + 40);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = v261;
          *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
          uint64_t v262 = *(void *)(a2 + 80);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = v262;
          uint64_t v263 = *(void *)(a2 + 96);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = v263;
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
          uint64_t v264 = a1;
          uint64_t v265 = *(void *)(a2 + 128);
          *(void *)(v264 + 120) = *(void *)(a2 + 120);
          *(void *)(v264 + 128) = v265;
          *(unsigned char *)(v264 + 136) = *(unsigned char *)(a2 + 136);
          uint64_t v266 = *(void *)(a2 + 152);
          *(void *)(v264 + 144) = *(void *)(a2 + 144);
          *(void *)(v264 + 152) = v266;
          uint64_t v267 = *(void *)(a2 + 168);
          *(void *)(v264 + 160) = *(void *)(a2 + 160);
          *(void *)(v264 + 168) = v267;
          *(unsigned char *)(v264 + 184) = *(unsigned char *)(a2 + 184);
          *(void *)(v264 + 176) = *(void *)(a2 + 176);
          uint64_t v268 = *(void *)(a2 + 200);
          *(void *)(v264 + 192) = *(void *)(a2 + 192);
          *(void *)(v264 + 200) = v268;
          *(unsigned char *)(v264 + 224) = *(unsigned char *)(a2 + 224);
          uint64_t v269 = *(void *)(a2 + 216);
          *(void *)(v264 + 208) = *(void *)(a2 + 208);
          *(void *)(v264 + 216) = v269;
          uint64_t v270 = (void *)(a2 + 232);
          uint64_t v670 = a2;
          unint64_t v271 = *(void *)(a2 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v271 >= 0x11)
          {
            *(void *)(v264 + 232) = *v270;
            *(void *)(v264 + 240) = v271;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v264 + 232) = *(_OWORD *)v270;
          }
          a1 = v264;
LABEL_116:
          swift_storeEnumTagMultiPayload();
          a2 = v670;
          goto LABEL_287;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
          goto LABEL_287;
      }
      break;
    case 5u:
      uint64_t v12 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v12;
      uint64_t v13 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v13;
      uint64_t v14 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v14;
      uint64_t v15 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v15;
      uint64_t v16 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v16;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      uint64_t v17 = a1;
      uint64_t v18 = *(void *)(a2 + 96);
      *(void *)(v17 + 88) = *(void *)(a2 + 88);
      *(void *)(v17 + 96) = v18;
      *(unsigned char *)(v17 + 104) = *(unsigned char *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = v17;
      swift_bridgeObjectRetain();
      goto LABEL_299;
    case 6u:
      uint64_t v19 = type metadata accessor for FormatAction();
      uint64_t v678 = v19;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(void *)a1 = *(void *)a2;
          uint64_t v20 = (void **)(a2 + 8);
          unsigned int v21 = *(unsigned __int8 *)(a2 + 16);
          swift_bridgeObjectRetain();
          if (v21 <= 0xFD)
          {
            uint64_t v161 = *v20;
            sub_1BFF43A68(v161, v21);
            *(void *)(a1 + 8) = v161;
            *(unsigned char *)(a1 + 16) = v21;
          }
          else
          {
            *(void *)(a1 + 8) = *v20;
            *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
          }
          goto LABEL_227;
        case 1u:
          uint64_t v113 = *(void **)a2;
          uint64_t v114 = *(void *)(a2 + 8);
          uint64_t v115 = *(void *)(a2 + 16);
          uint64_t v116 = *(void *)(a2 + 24);
          uint64_t v117 = *(void *)(a2 + 32);
          uint64_t v118 = a2;
          char v119 = *(unsigned char *)(a2 + 41);
          uint64_t v120 = a1;
          unsigned __int8 v121 = *(unsigned char *)(v118 + 40);
          sub_1BFF43AA4(v113, v114, v115, v116, v117, v121, v119);
          *(void *)uint64_t v120 = v113;
          *(void *)(v120 + 8) = v114;
          *(void *)(v120 + 16) = v115;
          *(void *)(v120 + 24) = v116;
          *(void *)(v120 + 32) = v117;
          *(unsigned char *)(v120 + 40) = v121;
          a1 = v120;
          *(unsigned char *)(v120 + 41) = v119;
          a2 = v118;
          unint64_t v122 = *(void **)(v118 + 56);
          *(void *)(v120 + 48) = *(void *)(v118 + 48);
          LOBYTE(v114) = *(unsigned char *)(v118 + 64);
          swift_bridgeObjectRetain();
          sub_1BFF43A68(v122, v114);
          *(void *)(v120 + 56) = v122;
          *(unsigned char *)(v120 + 64) = v114;
          goto LABEL_227;
        case 2u:
          *(void *)a1 = *(void *)a2;
          swift_retain();
          goto LABEL_227;
        case 4u:
          uint64_t v123 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v123;
          uint64_t v124 = *(void *)(a2 + 24);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = v124;
          uint64_t v125 = *(void *)(a2 + 40);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = v125;
          uint64_t v126 = *(void *)(a2 + 48);
          uint64_t v127 = *(void *)(a2 + 56);
          uint64_t v128 = a1;
          uint64_t v129 = *(void *)(a2 + 64);
          uint64_t v130 = *(void *)(a2 + 72);
          char v131 = *(unsigned char *)(a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BFF429DC(v126, v127, v129, v130, v131);
          *(void *)(v128 + 48) = v126;
          *(void *)(v128 + 56) = v127;
          *(void *)(v128 + 64) = v129;
          *(void *)(v128 + 72) = v130;
          a1 = v128;
          *(unsigned char *)(v128 + 80) = v131;
          uint64_t v132 = *(void *)(a2 + 96);
          *(void *)(v128 + 88) = *(void *)(a2 + 88);
          *(void *)(v128 + 96) = v132;
          uint64_t v133 = *(void *)(a2 + 112);
          *(void *)(v128 + 104) = *(void *)(a2 + 104);
          *(void *)(v128 + 112) = v133;
          *(void *)(v128 + 120) = *(void *)(a2 + 120);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_227;
        case 5u:
          uint64_t v134 = type metadata accessor for FormatPurchaseData(0);
          int v135 = swift_getEnumCaseMultiPayload();
          if (v135 == 1)
          {
            uint64_t v272 = type metadata accessor for FormatPurchaseLandingPageData();
            uint64_t v273 = *(void *)(v272 - 8);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(a2, 1, v272))
            {
              sub_1BFEEF440(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v274 - 8) + 64));
            }
            else
            {
              uint64_t v683 = a1;
              uint64_t v335 = *(void *)(a2 + 8);
              *(void *)a1 = *(void *)a2;
              *(void *)(a1 + 8) = v335;
              uint64_t v336 = *(int *)(v272 + 20);
              uint64_t v337 = (void *)(a1 + v336);
              uint64_t v671 = a2;
              uint64_t v338 = (const void *)(a2 + v336);
              uint64_t v339 = type metadata accessor for FormatPostPurchaseData();
              uint64_t v340 = *(void *)(v339 - 8);
              uint64_t v341 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v340 + 48);
              swift_bridgeObjectRetain();
              if (v341(v338, 1, v339))
              {
                sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                memcpy(v337, v338, *(void *)(*(void *)(v342 - 8) + 64));
                a1 = v683;
              }
              else
              {
                uint64_t v446 = sub_1C1515FDC();
                uint64_t v447 = *(void *)(v446 - 8);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v447 + 48))(v338, 2, v446))
                {
                  memcpy(v337, v338, *(void *)(v340 + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v447 + 16))(v337, v338, v446);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v447 + 56))(v337, 0, 2, v446);
                }
                a1 = v683;
                (*(void (**)(void *, void, uint64_t, uint64_t))(v340 + 56))(v337, 0, 1, v339);
              }
              a2 = v671;
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v273 + 56))(a1, 0, 1, v272);
            }
          }
          else
          {
            if (v135)
            {
              memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v134 - 8) + 64));
              goto LABEL_227;
            }
            uint64_t v136 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v136;
            uint64_t v137 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
            uint64_t v138 = (void *)(a1 + v137);
            uint64_t v139 = a2;
            uint64_t v140 = (const void *)(a2 + v137);
            uint64_t v141 = type metadata accessor for FormatPostPurchaseData();
            uint64_t v142 = *(void *)(v141 - 8);
            uint64_t v143 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v142 + 48);
            swift_bridgeObjectRetain();
            if (v143(v140, 1, v141))
            {
              sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(v138, v140, *(void *)(*(void *)(v144 - 8) + 64));
              a2 = v139;
            }
            else
            {
              uint64_t v313 = sub_1C1515FDC();
              uint64_t v314 = *(void *)(v313 - 8);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v314 + 48))(v140, 2, v313))
              {
                memcpy(v138, v140, *(void *)(v142 + 64));
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v314 + 16))(v138, v140, v313);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v314 + 56))(v138, 0, 2, v313);
              }
              a2 = v139;
              (*(void (**)(void *, void, uint64_t, uint64_t))(v142 + 56))(v138, 0, 1, v141);
            }
          }
          swift_storeEnumTagMultiPayload();
LABEL_227:
          swift_storeEnumTagMultiPayload();
LABEL_228:
          uint64_t v534 = type metadata accessor for FormatButtonNodeDataAction();
          uint64_t v535 = *(int *)(v534 + 20);
          v536 = *(void **)(a2 + v535);
          *(void *)(a1 + v535) = v536;
          uint64_t v537 = *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
          v538 = (void *)(a1 + v537);
          v539 = (void *)(a2 + v537);
          uint64_t v540 = *(void *)(v534 - 8);
          v541 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v540 + 48);
          id v542 = v536;
          if (v541(v539, 1, v534))
          {
            sub_1BFEEF440(0, &qword_1EB88C058, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
            memcpy(v538, v539, *(void *)(*(void *)(v543 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                void *v538 = *v539;
                v544 = (void **)(v539 + 1);
                unsigned int v545 = *((unsigned __int8 *)v539 + 16);
                swift_bridgeObjectRetain();
                if (v545 <= 0xFD)
                {
                  v570 = *v544;
                  sub_1BFF43A68(v570, v545);
                  v538[1] = v570;
                  *((unsigned char *)v538 + 16) = v545;
                }
                else
                {
                  v538[1] = *v544;
                  *((unsigned char *)v538 + 16) = *((unsigned char *)v539 + 16);
                }
                goto LABEL_297;
              case 1u:
                uint64_t v546 = *v539;
                uint64_t v547 = v539[1];
                uint64_t v676 = v539[2];
                uint64_t v684 = a1;
                uint64_t v548 = v539[3];
                uint64_t v549 = v539[4];
                char v550 = *((unsigned char *)v539 + 41);
                unsigned __int8 v551 = *((unsigned char *)v539 + 40);
                sub_1BFF43AA4((id)*v539, v547, v676, v548, v549, v551, v550);
                void *v538 = v546;
                v538[1] = v547;
                v538[2] = v676;
                v538[3] = v548;
                v538[4] = v549;
                *((unsigned char *)v538 + 40) = v551;
                a1 = v684;
                *((unsigned char *)v538 + 41) = v550;
                v552 = (void *)v539[7];
                v538[6] = v539[6];
                LOBYTE(v547) = *((unsigned char *)v539 + 64);
                swift_bridgeObjectRetain();
                sub_1BFF43A68(v552, v547);
                v538[7] = v552;
                *((unsigned char *)v538 + 64) = v547;
                goto LABEL_297;
              case 2u:
                void *v538 = *v539;
                swift_retain();
                goto LABEL_297;
              case 4u:
                uint64_t v553 = v539[1];
                void *v538 = *v539;
                v538[1] = v553;
                uint64_t v554 = v539[3];
                v538[2] = v539[2];
                v538[3] = v554;
                uint64_t v685 = a1;
                uint64_t v555 = v539[5];
                v538[4] = v539[4];
                v538[5] = v555;
                uint64_t v556 = v539[6];
                uint64_t v557 = v539[7];
                uint64_t v558 = v539[8];
                uint64_t v677 = v539[9];
                char v663 = *((unsigned char *)v539 + 80);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                sub_1BFF429DC(v556, v557, v558, v677, v663);
                v538[6] = v556;
                v538[7] = v557;
                v538[8] = v558;
                v538[9] = v677;
                a1 = v685;
                *((unsigned char *)v538 + 80) = v663;
                uint64_t v559 = v539[12];
                v538[11] = v539[11];
                v538[12] = v559;
                uint64_t v560 = v539[14];
                v538[13] = v539[13];
                v538[14] = v560;
                v538[15] = v539[15];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_297;
              case 5u:
                uint64_t v561 = type metadata accessor for FormatPurchaseData(0);
                int v562 = swift_getEnumCaseMultiPayload();
                if (v562 == 1)
                {
                  uint64_t v687 = a1;
                  uint64_t v571 = type metadata accessor for FormatPurchaseLandingPageData();
                  v572 = *(unsigned int (***)(void *, uint64_t, uint64_t))(v571 - 8);
                  if (v572[6](v539, 1, v571))
                  {
                    sub_1BFEEF440(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
                    memcpy(v538, v539, *(void *)(*(void *)(v573 - 8) + 64));
                  }
                  else
                  {
                    v665 = v572;
                    uint64_t v576 = v539[1];
                    void *v538 = *v539;
                    v538[1] = v576;
                    uint64_t v577 = *(int *)(v571 + 20);
                    __dstc = (char *)v538 + v577;
                    v578 = (char *)v539 + v577;
                    uint64_t v579 = type metadata accessor for FormatPostPurchaseData();
                    uint64_t v654 = *(void *)(v579 - 8);
                    v580 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v654 + 48);
                    swift_bridgeObjectRetain();
                    uint64_t v652 = v579;
                    if (v580(v578, 1, v579))
                    {
                      sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                      memcpy(__dstc, v578, *(void *)(*(void *)(v581 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v582 = sub_1C1515FDC();
                      uint64_t v583 = *(void *)(v582 - 8);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v583 + 48))(v578, 2, v582))
                      {
                        uint64_t v584 = v654;
                        memcpy(__dstc, v578, *(void *)(v654 + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(v583 + 16))(__dstc, v578, v582);
                        (*(void (**)(char *, void, uint64_t, uint64_t))(v583 + 56))(__dstc, 0, 2, v582);
                        uint64_t v584 = v654;
                      }
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v584 + 56))(__dstc, 0, 1, v652);
                    }
                    (*((void (**)(void *, void, uint64_t, uint64_t))v665 + 7))(v538, 0, 1, v571);
                  }
                  swift_storeEnumTagMultiPayload();
                  a1 = v687;
                }
                else if (v562)
                {
                  memcpy(v538, v539, *(void *)(*(void *)(v561 - 8) + 64));
                }
                else
                {
                  uint64_t v686 = a1;
                  uint64_t v563 = v539[1];
                  void *v538 = *v539;
                  v538[1] = v563;
                  uint64_t v564 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
                  v664 = (char *)v538 + v564;
                  v565 = (char *)v539 + v564;
                  uint64_t v566 = type metadata accessor for FormatPostPurchaseData();
                  uint64_t v567 = *(void *)(v566 - 8);
                  v568 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v567 + 48);
                  swift_bridgeObjectRetain();
                  if (v568(v565, 1, v566))
                  {
                    sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
                    memcpy(v664, v565, *(void *)(*(void *)(v569 - 8) + 64));
                    a1 = v686;
                  }
                  else
                  {
                    uint64_t v574 = sub_1C1515FDC();
                    uint64_t v575 = *(void *)(v574 - 8);
                    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v575 + 48))(v565, 2, v574))
                    {
                      memcpy(v664, v565, *(void *)(v567 + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v575 + 16))(v664, v565, v574);
                      (*(void (**)(char *, void, uint64_t, uint64_t))(v575 + 56))(v664, 0, 2, v574);
                    }
                    (*(void (**)(char *, void, uint64_t, uint64_t))(v567 + 56))(v664, 0, 1, v566);
                    a1 = v686;
                  }
                  swift_storeEnumTagMultiPayload();
                }
LABEL_297:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v538, v539, *(void *)(*(void *)(v678 - 8) + 64));
                break;
            }
            uint64_t v640 = *(int *)(v534 + 20);
            v641 = *(void **)((char *)v539 + v640);
            *(void *)((char *)v538 + v640) = v641;
            v642 = *(void (**)(void *, void, uint64_t, uint64_t))(v540 + 56);
            id v643 = v641;
            v642(v538, 0, 1, v534);
          }
          break;
        default:
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v19 - 8) + 64));
          goto LABEL_228;
      }
      goto LABEL_299;
    case 0xAu:
      uint64_t v22 = type metadata accessor for FormatViewBackground(0);
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
      {
        sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B9B8, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        int v94 = swift_getEnumCaseMultiPayload();
        if (v94 == 2)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v145 = *(void *)(a2 + 16);
          uint64_t v667 = *(void *)(a2 + 24);
          uint64_t v146 = *(void *)(a2 + 32);
          uint64_t v147 = *(void *)(a2 + 40);
          uint64_t v149 = *(void *)(a2 + 48);
          uint64_t v148 = *(void *)(a2 + 56);
          uint64_t v150 = a1;
          uint64_t v151 = *(void *)(a2 + 64);
          v659 = *(void **)(a2 + 72);
          char v680 = *(unsigned char *)(a2 + 80);
          sub_1C03A98B4(v145, v667, v146, v147, v149, v148, v151, (uint64_t)v659, v680);
          *(void *)(v150 + 16) = v145;
          *(void *)(v150 + 24) = v667;
          *(void *)(v150 + 32) = v146;
          *(void *)(v150 + 40) = v147;
          *(void *)(v150 + 48) = v149;
          *(void *)(v150 + 56) = v148;
          *(void *)(v150 + 64) = v151;
          *(void *)(v150 + 72) = v659;
          *(unsigned char *)(v150 + 80) = v680;
          uint64_t v152 = *(void *)(a2 + 88);
          uint64_t v153 = *(void *)(a2 + 104);
          uint64_t v154 = *(void *)(a2 + 112);
          uint64_t v156 = *(void *)(a2 + 120);
          uint64_t v155 = *(void *)(a2 + 128);
          uint64_t v158 = *(void *)(a2 + 136);
          uint64_t v157 = *(void *)(a2 + 144);
          uint64_t v668 = v157;
          uint64_t v681 = *(void *)(a2 + 96);
          char v159 = *(unsigned char *)(a2 + 152);
          sub_1C03A98B4(v152, v681, v153, v154, v156, v155, v158, v157, v159);
          *(void *)(v150 + 88) = v152;
          *(void *)(v150 + 96) = v681;
          *(void *)(v150 + 104) = v153;
          *(void *)(v150 + 112) = v154;
          *(void *)(v150 + 120) = v156;
          *(void *)(v150 + 128) = v155;
          *(void *)(v150 + 136) = v158;
          a1 = v150;
          *(void *)(v150 + 144) = v668;
          *(unsigned char *)(v150 + 152) = v159;
        }
        else if (v94 == 1)
        {
          *(void *)a1 = *(void *)a2;
          uint64_t v95 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
          uint64_t v96 = (void *)(a1 + v95);
          uint64_t v97 = (const void *)(a2 + v95);
          uint64_t v98 = sub_1C151A8EC();
          uint64_t v99 = *(void *)(v98 - 8);
          uint64_t v100 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v99 + 48);
          swift_retain();
          if (v100(v97, 1, v98))
          {
            sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
            memcpy(v96, v97, *(void *)(*(void *)(v101 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v99 + 16))(v96, v97, v98);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
          }
        }
        else
        {
          uint64_t v160 = *(void *)(a2 + 8);
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = v160;
          swift_retain();
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
      }
      goto LABEL_299;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      uint64_t v25 = type metadata accessor for FormatMicaData();
      uint64_t v26 = *(int *)(v25 + 20);
      uint64_t v27 = (void *)(a1 + v26);
      uint64_t v28 = a2;
      uint64_t v29 = (const void *)(a2 + v26);
      uint64_t v30 = sub_1C151A8EC();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48);
      swift_retain();
      if (v32(v29, 1, v30))
      {
        sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
        memcpy(v27, v29, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v27, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v27, 0, 1, v30);
      }
      uint64_t v102 = *(int *)(v25 + 24);
      uint64_t v103 = a1 + v102;
      uint64_t v104 = v28 + v102;
      *(_DWORD *)uint64_t v103 = *(_DWORD *)v104;
      *(unsigned char *)(v103 + 4) = *(unsigned char *)(v104 + 4);
      goto LABEL_299;
    case 0xCu:
      uint64_t v34 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v34;
      uint64_t v35 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v35;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_299;
    case 0xDu:
      uint64_t v36 = sub_1C1515FDC();
      uint64_t v37 = *(void *)(v36 - 8);
      id v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
      v38(a1, a2, v36);
      uint64_t v39 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
      uint64_t v40 = (void *)(a1 + v39);
      uint64_t v41 = (const void *)(a2 + v39);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(a2 + v39, 1, v36))
      {
        sub_1BFEEF440(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        v38((uint64_t)v40, (uint64_t)v41, v36);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v36);
      }
      uint64_t v105 = *(int *)(type metadata accessor for FormatVideoData(0) + 20);
      uint64_t v106 = a1 + v105;
      uint64_t v107 = a2 + v105;
      uint64_t v108 = *(void **)v107;
      *(void *)uint64_t v106 = *(void *)v107;
      *(unsigned char *)(v106 + 8) = *(unsigned char *)(v107 + 8);
      *(void *)(v106 + 16) = *(void *)(v107 + 16);
      *(_WORD *)(v106 + 24) = *(_WORD *)(v107 + 24);
      unint64_t v110 = *(void **)(v107 + 32);
      uint64_t v109 = *(void *)(v107 + 40);
      *(void *)(v106 + 32) = v110;
      *(void *)(v106 + 40) = v109;
      id v111 = v108;
      id v112 = v110;
      goto LABEL_299;
    case 0xEu:
      uint64_t v43 = *(void **)a2;
      uint64_t v44 = *(void *)(a2 + 8);
      uint64_t v45 = *(void **)(a2 + 16);
      uint64_t v46 = *(void *)(a2 + 24);
      uint64_t v47 = *(void **)(a2 + 32);
      uint64_t v48 = *(void *)(a2 + 40);
      uint64_t v49 = a2;
      uint64_t v50 = *(void **)(a2 + 48);
      char v51 = *(unsigned char *)(v49 + 56);
      sub_1C00FA170(v43, v44, v45, v46, v47, v48, v50, v51);
      *(void *)a1 = v43;
      *(void *)(a1 + 8) = v44;
      *(void *)(a1 + 16) = v45;
      *(void *)(a1 + 24) = v46;
      *(void *)(a1 + 32) = v47;
      *(void *)(a1 + 40) = v48;
      *(void *)(a1 + 48) = v50;
      *(unsigned char *)(a1 + 56) = v51;
      goto LABEL_299;
    case 0xFu:
      uint64_t v52 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(a1, a2, v52);
      uint64_t v53 = (int *)type metadata accessor for SharedItem();
      *(unsigned char *)(a1 + v53[5]) = *(unsigned char *)(a2 + v53[5]);
      uint64_t v54 = v53[6];
      uint64_t v55 = *(void **)(a2 + v54);
      *(void *)(a1 + v54) = v55;
      uint64_t v56 = v53[7];
      uint64_t v57 = a1 + v56;
      uint64_t v58 = a2 + v56;
      uint64_t v59 = sub_1C1515FDC();
      char v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16);
      id v61 = v55;
      v60(v57, v58, v59);
      goto LABEL_299;
    case 0x10u:
      uint64_t v62 = *(void **)a2;
      uint64_t v63 = *(void *)(a2 + 8);
      uint64_t v64 = *(void *)(a2 + 16);
      uint64_t v65 = *(void *)(a2 + 24);
      uint64_t v66 = *(void *)(a2 + 32);
      uint64_t v67 = *(void *)(a2 + 40);
      uint64_t v68 = a2;
      uint64_t v69 = *(void *)(a2 + 48);
      uint64_t v70 = a1;
      uint64_t v71 = *(void *)(v68 + 56);
      char v72 = *(unsigned char *)(v68 + 64);
      sub_1C00364B0(v62, v63, v64, v65, v66, v67, v69, v71, v72);
      *(void *)uint64_t v70 = v62;
      *(void *)(v70 + 8) = v63;
      *(void *)(v70 + 16) = v64;
      *(void *)(v70 + 24) = v65;
      *(void *)(v70 + 32) = v66;
      *(void *)(v70 + 40) = v67;
      *(void *)(v70 + 48) = v69;
      *(void *)(v70 + 56) = v71;
      a1 = v70;
      *(unsigned char *)(v70 + 64) = v72;
      goto LABEL_299;
    case 0x11u:
      uint64_t v73 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v73;
      uint64_t v74 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v74;
      uint64_t v75 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v75;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      unint64_t v76 = (int *)type metadata accessor for FormatVideoPlayerData();
      uint64_t v77 = v76[9];
      uint64_t v666 = a2 + v77;
      uint64_t v679 = a1 + v77;
      uint64_t v78 = a1;
      uint64_t v79 = sub_1C1515FDC();
      uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v81 = v79;
      a1 = v78;
      v80(v679, v666, v81);
      *(void *)(v78 + v76[10]) = *(void *)(a2 + v76[10]);
      *(unsigned char *)(v78 + v76[11]) = *(unsigned char *)(a2 + v76[11]);
      uint64_t v82 = v76[12];
      uint64_t v83 = v78 + v82;
      uint64_t v84 = a2 + v82;
      *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
      uint64_t v85 = *(void *)(v84 + 24);
      *(void *)(v83 + 16) = *(void *)(v84 + 16);
      *(void *)(v83 + 24) = v85;
      *(unsigned char *)(v83 + 32) = *(unsigned char *)(v84 + 32);
      uint64_t v86 = *(void *)(v84 + 48);
      *(void *)(v83 + 40) = *(void *)(v84 + 40);
      *(void *)(v83 + 48) = v86;
      *(unsigned char *)(v78 + v76[13]) = *(unsigned char *)(a2 + v76[13]);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_299;
    case 0x12u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v87 = *(void *)(a2 + 8);
      sub_1C00F804C(v87);
      *(void *)(a1 + 8) = v87;
      goto LABEL_299;
    case 0x14u:
      uint64_t v88 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v88;
      uint64_t v89 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      uint64_t v90 = a1 + v89;
      uint64_t v91 = a2 + v89;
      uint64_t v92 = sub_1C151D6DC();
      uint64_t v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 16);
      swift_bridgeObjectRetain();
      v93(v90, v91, v92);
      goto LABEL_299;
    default:
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
  uint64_t v301 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v301;
  uint64_t v302 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v303 = a1 + v302;
  uint64_t v304 = a2 + v302;
  *(void *)(a1 + v302) = *(void *)(a2 + v302);
  uint64_t v305 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v306 = (void *)(v303 + v305);
  uint64_t v307 = (void *)(v304 + v305);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v399 = type metadata accessor for PuzzleStatisticValue(0);
      int v400 = swift_getEnumCaseMultiPayload();
      uint64_t v673 = v399;
      if (v400 == 5)
      {
        uint64_t v529 = type metadata accessor for PuzzleStreak();
        uint64_t v530 = *(void *)(v529 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v530 + 48))(v307, 1, v529))
        {
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v306, v307, *(void *)(*(void *)(v531 - 8) + 64));
        }
        else
        {
          uint64_t v593 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v593 - 8) + 16))(v306, v307, v593);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v530 + 56))(v306, 0, 1, v529);
        }
        uint64_t v532 = a1;
        uint64_t v399 = v673;
      }
      else
      {
        if (v400 != 4)
        {
          uint64_t v532 = a1;
          memcpy(v306, v307, *(void *)(*(void *)(v399 - 8) + 64));
          goto LABEL_263;
        }
        uint64_t v401 = type metadata accessor for PuzzleStreak();
        uint64_t v402 = *(void *)(v401 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v402 + 48))(v307, 1, v401))
        {
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v306, v307, *(void *)(*(void *)(v403 - 8) + 64));
        }
        else
        {
          uint64_t v591 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v591 - 8) + 16))(v306, v307, v591);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v402 + 56))(v306, 0, 1, v401);
        }
        uint64_t v532 = a1;
        uint64_t v399 = v673;
      }
      swift_storeEnumTagMultiPayload();
LABEL_263:
      uint64_t v594 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v595 = *(int *)(v594 + 20);
      v596 = (char *)v306 + v595;
      v597 = (char *)v307 + v595;
      int v598 = swift_getEnumCaseMultiPayload();
      if (v598 == 5)
      {
        uint64_t v603 = a2;
        uint64_t v604 = type metadata accessor for PuzzleStreak();
        uint64_t v605 = *(void *)(v604 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v605 + 48))(v597, 1, v604))
        {
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v596, v597, *(void *)(*(void *)(v606 - 8) + 64));
        }
        else
        {
          uint64_t v608 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v608 - 8) + 16))(v596, v597, v608);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v605 + 56))(v596, 0, 1, v604);
        }
        a2 = v603;
        uint64_t v399 = v673;
      }
      else
      {
        if (v598 != 4)
        {
          memcpy(v596, v597, *(void *)(*(void *)(v399 - 8) + 64));
          goto LABEL_275;
        }
        uint64_t v599 = a2;
        uint64_t v600 = type metadata accessor for PuzzleStreak();
        uint64_t v601 = *(void *)(v600 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v601 + 48))(v597, 1, v600))
        {
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v596, v597, *(void *)(*(void *)(v602 - 8) + 64));
        }
        else
        {
          uint64_t v607 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v607 - 8) + 16))(v596, v597, v607);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v601 + 56))(v596, 0, 1, v600);
        }
        a2 = v599;
        uint64_t v399 = v673;
      }
      swift_storeEnumTagMultiPayload();
LABEL_275:
      uint64_t v609 = *(int *)(v594 + 24);
      v610 = (char *)v306 + v609;
      v611 = (char *)v307 + v609;
      int v612 = swift_getEnumCaseMultiPayload();
      if (v612 == 5)
      {
        uint64_t v613 = type metadata accessor for PuzzleStreak();
        uint64_t v614 = *(void *)(v613 - 8);
        a1 = v532;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v614 + 48))(v611, 1, v613)) {
          goto LABEL_278;
        }
LABEL_283:
        uint64_t v616 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v616 - 8) + 16))(v610, v611, v616);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v614 + 56))(v610, 0, 1, v613);
        goto LABEL_284;
      }
      a1 = v532;
      if (v612 == 4)
      {
        uint64_t v613 = type metadata accessor for PuzzleStreak();
        uint64_t v614 = *(void *)(v613 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v614 + 48))(v611, 1, v613))
        {
LABEL_278:
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v610, v611, *(void *)(*(void *)(v615 - 8) + 64));
          goto LABEL_284;
        }
        goto LABEL_283;
      }
      size_t v407 = *(void *)(*(void *)(v399 - 8) + 64);
      unsigned int v408 = v610;
      uint64_t v409 = v611;
LABEL_282:
      memcpy(v408, v409, v407);
      goto LABEL_285;
    case 2u:
      uint64_t v404 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v405 = *((void *)v404 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v405 + 48))(v307, 1, v404))
      {
        sub_1BFEEF440(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        size_t v407 = *(void *)(*(void *)(v406 - 8) + 64);
        unsigned int v408 = (char *)v306;
        uint64_t v409 = (char *)v307;
        goto LABEL_282;
      }
      uint64_t v675 = a2;
      uint64_t v477 = sub_1C151631C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v477 - 8) + 16))(v306, v307, v477);
      v478 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v479 = v478[5];
      v480 = (void *)((char *)v306 + v479);
      v481 = (void *)((char *)v307 + v479);
      uint64_t v482 = v481[1];
      void *v480 = *v481;
      v480[1] = v482;
      uint64_t v483 = v478[6];
      v484 = v306;
      v485 = (char *)v306 + v483;
      v486 = (void *)((char *)v307 + v483);
      uint64_t v487 = v486[1];
      *(void *)v485 = *v486;
      *((void *)v485 + 1) = v487;
      v488 = v486 + 2;
      unint64_t v489 = v486[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v489 >> 60 == 15)
      {
        *((_OWORD *)v485 + 1) = *(_OWORD *)v488;
      }
      else
      {
        uint64_t v585 = *v488;
        sub_1BFE95820(*v488, v489);
        *((void *)v485 + 2) = v585;
        *((void *)v485 + 3) = v489;
      }
      a2 = v675;
      *(void *)((char *)v484 + v478[7]) = *(void *)((char *)v307 + v478[7]);
      *(void *)((char *)v484 + v478[8]) = *(void *)((char *)v307 + v478[8]);
      *(void *)((char *)v484 + v404[5]) = *(void *)((char *)v307 + v404[5]);
      *(void *)((char *)v484 + v404[6]) = *(void *)((char *)v307 + v404[6]);
      uint64_t v586 = v404[7];
      v587 = (void *)((char *)v484 + v586);
      v588 = (void *)((char *)v307 + v586);
      uint64_t v589 = v588[1];
      void *v587 = *v588;
      v587[1] = v589;
      v590 = *(void (**)(void *, void, uint64_t, int *))(v405 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v590(v484, 0, 1, v404);
      goto LABEL_285;
    case 3u:
      uint64_t v674 = a2;
      uint64_t v410 = v307[1];
      *uint64_t v306 = *v307;
      v306[1] = v410;
      *((unsigned char *)v306 + 16) = *((unsigned char *)v307 + 16);
      long long v411 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v412 = v411[6];
      long long v413 = v306;
      long long v414 = (char *)v306 + v412;
      long long v415 = (char *)v307 + v412;
      uint64_t v416 = type metadata accessor for PuzzleStreak();
      uint64_t v417 = *(void *)(v416 - 8);
      uint64_t v418 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v417 + 48);
      if (v418(v415, 1, v416))
      {
        sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v414, v415, *(void *)(*(void *)(v419 - 8) + 64));
      }
      else
      {
        uint64_t v490 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v490 - 8) + 16))(v414, v415, v490);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v417 + 56))(v414, 0, 1, v416);
      }
      uint64_t v491 = v411[7];
      v492 = (char *)v413 + v491;
      v493 = (char *)v307 + v491;
      if (v418((char *)v307 + v491, 1, v416))
      {
        sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v492, v493, *(void *)(*(void *)(v494 - 8) + 64));
      }
      else
      {
        uint64_t v516 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v516 - 8) + 16))(v492, v493, v516);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v417 + 56))(v492, 0, 1, v416);
      }
      uint64_t v517 = v411[8];
      v518 = (_OWORD *)((char *)v413 + v517);
      v519 = (_OWORD *)((char *)v307 + v517);
      long long v520 = v519[1];
      _OWORD *v518 = *v519;
      v518[1] = v520;
      *(_OWORD *)((char *)v518 + 25) = *(_OWORD *)((char *)v519 + 25);
      uint64_t v521 = v411[9];
      v522 = (_OWORD *)((char *)v413 + v521);
      v523 = (_OWORD *)((char *)v307 + v521);
      *(_OWORD *)((char *)v522 + 25) = *(_OWORD *)((char *)v523 + 25);
      long long v524 = v523[1];
      _OWORD *v522 = *v523;
      v522[1] = v524;
      uint64_t v525 = v411[10];
      v526 = (_OWORD *)((char *)v413 + v525);
      v527 = (_OWORD *)((char *)v307 + v525);
      long long v528 = v527[1];
      _OWORD *v526 = *v527;
      v526[1] = v528;
      *(_OWORD *)((char *)v526 + 25) = *(_OWORD *)((char *)v527 + 25);
      a1 = v682;
      a2 = v674;
      goto LABEL_285;
    default:
      uint64_t v308 = type metadata accessor for PuzzleStatisticValue(0);
      int v309 = swift_getEnumCaseMultiPayload();
      if (v309 == 5)
      {
        uint64_t v310 = type metadata accessor for PuzzleStreak();
        uint64_t v311 = *(void *)(v310 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v311 + 48))(v307, 1, v310)) {
          goto LABEL_104;
        }
      }
      else
      {
        if (v309 != 4)
        {
          memcpy(v306, v307, *(void *)(*(void *)(v308 - 8) + 64));
          goto LABEL_285;
        }
        uint64_t v310 = type metadata accessor for PuzzleStreak();
        uint64_t v311 = *(void *)(v310 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v311 + 48))(v307, 1, v310))
        {
LABEL_104:
          sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v306, v307, *(void *)(*(void *)(v312 - 8) + 64));
          goto LABEL_284;
        }
      }
      uint64_t v592 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v592 - 8) + 16))(v306, v307, v592);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v311 + 56))(v306, 0, 1, v310);
LABEL_284:
      swift_storeEnumTagMultiPayload();
LABEL_285:
      swift_storeEnumTagMultiPayload();
LABEL_286:
      swift_storeEnumTagMultiPayload();
LABEL_287:
      v617 = (int *)type metadata accessor for FormatItemNodeData();
      uint64_t v618 = v617[5];
      uint64_t v619 = a1 + v618;
      uint64_t v620 = a2 + v618;
      uint64_t v621 = *(void *)(a2 + v618 + 8);
      *(void *)uint64_t v619 = *(void *)(a2 + v618);
      *(void *)(v619 + 8) = v621;
      uint64_t v622 = *(void *)(a2 + v618 + 24);
      *(void *)(v619 + 16) = *(void *)(a2 + v618 + 16);
      *(void *)(v619 + 24) = v622;
      uint64_t v623 = *(void *)(a2 + v618 + 40);
      *(void *)(v619 + 32) = *(void *)(a2 + v618 + 32);
      *(void *)(v619 + 40) = v623;
      v624 = (void *)(a2 + v618 + 48);
      unint64_t v625 = *(void *)(a2 + v618 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v626 = a2;
      if (v625 >= 0xF)
      {
        *(void *)(v619 + 48) = *v624;
        *(void *)(v619 + 56) = v625;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v619 + 48) = *(_OWORD *)v624;
      }
      uint64_t v627 = *(void *)(v620 + 72);
      *(void *)(v619 + 64) = *(void *)(v620 + 64);
      *(void *)(v619 + 72) = v627;
      uint64_t v628 = *(void *)(v620 + 88);
      *(void *)(v619 + 80) = *(void *)(v620 + 80);
      *(void *)(v619 + 88) = v628;
      uint64_t v629 = *(void *)(v620 + 104);
      *(void *)(v619 + 96) = *(void *)(v620 + 96);
      *(void *)(v619 + 104) = v629;
      *(void *)(v619 + 112) = *(void *)(v620 + 112);
      *(unsigned char *)(v619 + 120) = *(unsigned char *)(v620 + 120);
      uint64_t v630 = v617[6];
      unint64_t v631 = *(void *)(v626 + v630);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF45054(v631);
      a1 = v682;
      *(void *)(v682 + v630) = v631;
      uint64_t v632 = v617[7];
      uint64_t v633 = v682 + v632;
      uint64_t v634 = v626 + v632;
      uint64_t v635 = sub_1C151AC1C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v635 - 8) + 16))(v633, v634, v635);
      uint64_t v636 = v617[8];
      v637 = (void *)(v682 + v636);
      v638 = (void *)(v626 + v636);
      uint64_t v639 = v638[1];
      if (v639)
      {
        void *v637 = *v638;
        v637[1] = v639;
        v637[2] = v638[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v637 = *(_OWORD *)v638;
        v637[2] = v638[2];
      }
LABEL_299:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t sub_1BFF3BECC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF3BF2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF47094(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF3BF88(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF4713C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF3BFE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1BFF3C044(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v11 = sub_1C151D2DC();
      goto LABEL_33;
    case 1u:
    case 2u:
    case 3u:
    case 7u:
    case 8u:
    case 0x13u:
      goto LABEL_23;
    case 4u:
      type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 48) < 0x11uLL) {
            goto LABEL_116;
          }
          goto LABEL_115;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 80) < 0x11uLL) {
            goto LABEL_116;
          }
          goto LABEL_115;
        case 2u:
          swift_bridgeObjectRelease();
          uint64_t v33 = type metadata accessor for FeedBannerAd();
          uint64_t v34 = a1 + *(int *)(v33 + 20);
          uint64_t v35 = sub_1C151DBAC();
          goto LABEL_96;
        case 3u:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v36 = (int *)type metadata accessor for FeedHeadline(0);
          uint64_t v37 = a1 + v36[10];
          uint64_t v38 = v37 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          uint64_t v39 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v38, 1, v39))
          {
            uint64_t v40 = sub_1C151631C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v38, v40);

            uint64_t v41 = v38 + *(int *)(v39 + 28);
            uint64_t v42 = sub_1C1515FDC();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
          }
          uint64_t v43 = a1 + v36[11];
          uint64_t v44 = sub_1C151D2DC();
          uint64_t v45 = *(void *)(v44 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44)) {
            (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
          }
          if (*(void *)(a1 + v36[12] + 8) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          if (*(void *)(a1 + v36[13]) >= 3uLL) {
            swift_unknownObjectRelease();
          }

          goto LABEL_116;
        case 4u:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v46 = (int *)type metadata accessor for FeedWebEmbed();
          uint64_t v47 = a1 + v46[8];
          uint64_t v48 = sub_1C1515FDC();
          uint64_t v49 = *(void *)(v48 - 8);
          uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
          v50(v47, v48);
          uint64_t v51 = a1 + v46[9];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v51, 1, v48)) {
            v50(v51, v48);
          }
          swift_release();
          swift_release();
          uint64_t v52 = a1 + v46[12];
          uint64_t v53 = (int *)type metadata accessor for FeedHeadline(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v53 - 1) + 48))(v52, 1, v53))
          {
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v54 = v53[10];
            uint64_t v55 = v52 + v54 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
            uint64_t v56 = type metadata accessor for SharedItem();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v55, 1, v56))
            {
              uint64_t v57 = sub_1C151631C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v55, v57);

              v50(v55 + *(int *)(v56 + 28), v48);
            }
            uint64_t v58 = v52 + v53[11];
            uint64_t v59 = sub_1C151D2DC();
            uint64_t v60 = *(void *)(v59 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59)) {
              (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
            }
            if (*(void *)(v52 + v53[12] + 8) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
            if (*(void *)(v52 + v53[13]) >= 3uLL) {
              swift_unknownObjectRelease();
            }
          }
          uint64_t v61 = a1 + v46[13];
          uint64_t v62 = type metadata accessor for WebEmbedDataVisualization();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v61, 1, v62)) {
            goto LABEL_116;
          }
          if (swift_getEnumCaseMultiPayload() != 1) {
            goto LABEL_98;
          }
          swift_bridgeObjectRelease();
          uint64_t v63 = type metadata accessor for GenericDataVisualization();
          v50(v61 + *(int *)(v63 + 20), v48);
          goto LABEL_115;
        case 5u:
          goto LABEL_79;
        case 6u:
          int v64 = *(unsigned __int8 *)(a1 + 281);
          if (v64 == 2) {
            goto LABEL_83;
          }
          if (v64 == 1)
          {

            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (*(void *)(a1 + 128) >= 0x11uLL) {
              swift_bridgeObjectRelease();
            }
            uint64_t v90 = *(void **)(a1 + 144);
            if (!v90) {
              goto LABEL_116;
            }

            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 224) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (*(void *)(a1 + 272) < 0x11uLL) {
              goto LABEL_116;
            }
LABEL_115:
            swift_bridgeObjectRelease();
            goto LABEL_116;
          }
          if (*(unsigned char *)(a1 + 281)) {
            goto LABEL_116;
          }
LABEL_79:

          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (*(void *)(a1 + 128) >= 0x11uLL) {
            goto LABEL_115;
          }
LABEL_116:
          uint64_t v71 = (int *)type metadata accessor for FormatItemNodeData();
          uint64_t v72 = a1 + v71[5];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v72 + 56) >= 0xFuLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFF44AC4(*(void *)(a1 + v71[6]));
          uint64_t v73 = a1 + v71[7];
          uint64_t v74 = sub_1C151AC1C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 - 8) + 8))(v73, v74);
          if (*(void *)(a1 + v71[8] + 8))
          {
            swift_bridgeObjectRelease();
LABEL_120:
            swift_bridgeObjectRelease();
          }
          return;
        case 7u:
LABEL_83:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 88) != 1)
          {
            swift_bridgeObjectRelease();
            if (*(void *)(a1 + 120)) {
              __swift_destroy_boxed_opaque_existential_1(a1 + 96);
            }
          }
          goto LABEL_116;
        case 8u:
          swift_bridgeObjectRelease();
          uint64_t v65 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v66 = v65 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
          uint64_t v67 = type metadata accessor for FormatCustomItem.Action();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48))(v66, 1, v67))
          {
            uint64_t v68 = sub_1C1515FDC();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v66, v68);
          }
          goto LABEL_115;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 56)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 32);
          }
          if (*(void *)(a1 + 96)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 72);
          }
          if (*(void *)(a1 + 136)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 112);
          }
          goto LABEL_116;
        case 0xAu:
          swift_bridgeObjectRelease();
          uint64_t v33 = type metadata accessor for FeedEngagementBanner();
          uint64_t v34 = a1 + *(int *)(v33 + 20);
          uint64_t v35 = sub_1C151959C();
LABEL_96:
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
          if (*(void *)(a1 + *(int *)(v33 + 32) + 8) < 0x11uLL) {
            goto LABEL_116;
          }
          goto LABEL_115;
        case 0xBu:
LABEL_98:
          swift_release();
          goto LABEL_116;
        case 0xCu:
          goto LABEL_109;
        case 0xDu:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 112)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 88);
          }
          if (*(void *)(a1 + 152)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 128);
          }
          if (*(void *)(a1 + 192)) {
            __swift_destroy_boxed_opaque_existential_1(a1 + 168);
          }
          goto LABEL_116;
        case 0xEu:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
LABEL_109:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          goto LABEL_116;
        case 0xFu:
          if (*(void *)(a1 + 32) >= 0x11uLL) {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v69 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          swift_unknownObjectRelease();
          uint64_t v70 = v69 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              type metadata accessor for PuzzleStatisticValue(0);
              goto LABEL_166;
            case 1u:
              type metadata accessor for PuzzleStatisticValue(0);
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
              {
                uint64_t v92 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 48))(v70, 1, v92))
                {
                  uint64_t v93 = sub_1C151555C();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v93 - 8) + 8))(v70, v93);
                }
              }
              uint64_t v94 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              uint64_t v95 = v70 + *(int *)(v94 + 20);
              int v96 = swift_getEnumCaseMultiPayload();
              if (v96 == 5 || v96 == 4)
              {
                uint64_t v97 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 48))(v95, 1, v97))
                {
                  uint64_t v98 = sub_1C151555C();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v98 - 8) + 8))(v95, v98);
                }
              }
              v70 += *(int *)(v94 + 24);
LABEL_166:
              int v99 = swift_getEnumCaseMultiPayload();
              if (v99 == 5 || v99 == 4)
              {
                uint64_t v100 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 48))(v70, 1, v100))goto LABEL_177; {
              }
                }
              goto LABEL_116;
            case 2u:
              uint64_t v101 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 48))(v70, 1, v101))
              {
                goto LABEL_116;
              }
              uint64_t v102 = sub_1C151631C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v102 - 8) + 8))(v70, v102);
              uint64_t v103 = type metadata accessor for PuzzleLeaderboardEntry();
              swift_bridgeObjectRelease();
              uint64_t v104 = v70 + *(int *)(v103 + 24);
              swift_bridgeObjectRelease();
              unint64_t v105 = *(void *)(v104 + 24);
              if (v105 >> 60 != 15) {
                sub_1BFE95664(*(void *)(v104 + 16), v105);
              }
              swift_bridgeObjectRelease();
              goto LABEL_115;
            case 3u:
              uint64_t v106 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
              uint64_t v107 = v70 + *(int *)(v106 + 24);
              uint64_t v108 = type metadata accessor for PuzzleStreak();
              uint64_t v109 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48);
              if (!v109(v107, 1, v108))
              {
                uint64_t v110 = sub_1C151555C();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v110 - 8) + 8))(v107, v110);
              }
              v70 += *(int *)(v106 + 28);
              if (!v109(v70, 1, v108))
              {
LABEL_177:
                uint64_t v111 = sub_1C151555C();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v111 - 8) + 8))(v70, v111);
              }
              goto LABEL_116;
            default:
              goto LABEL_116;
          }
        case 0x10u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 240) >= 0x11uLL) {
            goto LABEL_115;
          }
          goto LABEL_116;
        default:
          goto LABEL_116;
      }
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_120;
    case 6u:
      type metadata accessor for FormatAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          unsigned int v12 = *(unsigned __int8 *)(a1 + 16);
          if (v12 <= 0xFD) {
            sub_1BFF43600(*(void **)(a1 + 8), v12);
          }
          goto LABEL_128;
        case 1u:
          sub_1BFF4363C(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(unsigned char *)(a1 + 41));
          swift_bridgeObjectRelease();
          sub_1BFF43600(*(void **)(a1 + 56), *(unsigned char *)(a1 + 64));
          goto LABEL_128;
        case 2u:
          swift_release();
          goto LABEL_128;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEC41E8(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_128;
        case 5u:
          type metadata accessor for FormatPurchaseData(0);
          int v31 = swift_getEnumCaseMultiPayload();
          if (v31 == 1)
          {
            uint64_t v75 = type metadata accessor for FormatPurchaseLandingPageData();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 48))(a1, 1, v75)) {
              goto LABEL_128;
            }
            swift_bridgeObjectRelease();
            uint64_t v32 = *(int *)(v75 + 20);
          }
          else
          {
            if (v31) {
              goto LABEL_128;
            }
            swift_bridgeObjectRelease();
            uint64_t v32 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          }
          uint64_t v76 = a1 + v32;
          uint64_t v77 = type metadata accessor for FormatPostPurchaseData();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 48))(v76, 1, v77))
          {
            uint64_t v78 = sub_1C1515FDC();
            uint64_t v79 = *(void *)(v78 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v76, 2, v78)) {
              (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v76, v78);
            }
          }
LABEL_128:
          uint64_t v80 = type metadata accessor for FormatButtonNodeDataAction();

          uint64_t v81 = a1 + *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 48))(v81, 1, v80)) {
            return;
          }
          break;
        default:
          goto LABEL_128;
      }
      break;
    case 0xAu:
      uint64_t v2 = type metadata accessor for FormatViewBackground(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2)) {
        return;
      }
      int v3 = swift_getEnumCaseMultiPayload();
      switch(v3)
      {
        case 2:
          sub_1C03596EC(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
          sub_1C03596EC(*(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(unsigned char *)(a1 + 152));
          break;
        case 1:
          swift_release();
          uint64_t v13 = type metadata accessor for FormatViewBackground.Mica(0);
LABEL_27:
          uint64_t v14 = a1 + *(int *)(v13 + 20);
          uint64_t v15 = sub_1C151A8EC();
          uint64_t v112 = *(void *)(v15 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v14, 1, v15))
          {
            uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
            uint64_t v17 = v14;
            uint64_t v18 = v15;
LABEL_34:
            v16(v17, v18);
          }
          break;
        case 0:
          swift_release();
LABEL_23:
          swift_release();
          break;
      }
      return;
    case 0xBu:
      swift_release();
      uint64_t v13 = type metadata accessor for FormatMicaData();
      goto LABEL_27;
    case 0xCu:
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 0xDu:
      uint64_t v4 = sub_1C1515FDC();
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v6(a1, v4);
      uint64_t v7 = a1 + *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
        v6(v7, v4);
      }
      uint64_t v8 = a1 + *(int *)(type metadata accessor for FormatVideoData(0) + 20);

      uint64_t v9 = *(void **)(v8 + 32);
      goto LABEL_145;
    case 0xEu:
      id v19 = *(id *)a1;
      uint64_t v20 = *(void *)(a1 + 8);
      unsigned int v21 = *(void **)(a1 + 16);
      uint64_t v22 = *(void *)(a1 + 24);
      uint64_t v23 = *(void **)(a1 + 32);
      uint64_t v24 = *(void *)(a1 + 40);
      uint64_t v25 = *(void **)(a1 + 48);
      char v26 = *(unsigned char *)(a1 + 56);
      sub_1C00FA1F0(v19, v20, v21, v22, v23, v24, v25, v26);
      return;
    case 0xFu:
      uint64_t v27 = sub_1C151631C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(a1, v27);
      uint64_t v28 = type metadata accessor for SharedItem();

      a1 += *(int *)(v28 + 28);
      uint64_t v11 = sub_1C1515FDC();
      goto LABEL_33;
    case 0x10u:
      sub_1C0036570(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
      return;
    case 0x11u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v29 = a1 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 36);
      uint64_t v30 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_120;
    case 0x12u:
      uint64_t v10 = *(void *)(a1 + 8);
      sub_1C00F80E0(v10);
      return;
    case 0x14u:
      swift_bridgeObjectRelease();
      a1 += *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      uint64_t v11 = sub_1C151D6DC();
LABEL_33:
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      uint64_t v18 = v11;
      uint64_t v17 = a1;
      goto LABEL_34;
    default:
      return;
  }
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      unsigned int v82 = *(unsigned __int8 *)(v81 + 16);
      if (v82 <= 0xFD) {
        sub_1BFF43600(*(void **)(v81 + 8), v82);
      }
      goto LABEL_144;
    case 1u:
      sub_1BFF4363C(*(void **)v81, *(void *)(v81 + 8), *(void *)(v81 + 16), *(void *)(v81 + 24), *(void *)(v81 + 32), *(unsigned __int8 *)(v81 + 40), *(unsigned char *)(v81 + 41));
      swift_bridgeObjectRelease();
      sub_1BFF43600(*(void **)(v81 + 56), *(unsigned char *)(v81 + 64));
      goto LABEL_144;
    case 2u:
      swift_release();
      goto LABEL_144;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEC41E8(*(void *)(v81 + 48), *(void *)(v81 + 56), *(void *)(v81 + 64), *(void *)(v81 + 72), *(unsigned char *)(v81 + 80));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_144;
    case 5u:
      type metadata accessor for FormatPurchaseData(0);
      int v83 = swift_getEnumCaseMultiPayload();
      if (v83 == 1)
      {
        uint64_t v85 = type metadata accessor for FormatPurchaseLandingPageData();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v81, 1, v85)) {
          goto LABEL_144;
        }
        swift_bridgeObjectRelease();
        uint64_t v84 = *(int *)(v85 + 20);
      }
      else
      {
        if (v83) {
          goto LABEL_144;
        }
        swift_bridgeObjectRelease();
        uint64_t v84 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      }
      uint64_t v86 = v81 + v84;
      uint64_t v87 = type metadata accessor for FormatPostPurchaseData();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 48))(v86, 1, v87))
      {
        uint64_t v88 = sub_1C1515FDC();
        uint64_t v89 = *(void *)(v88 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v86, 2, v88)) {
          (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v86, v88);
        }
      }
LABEL_144:
      uint64_t v9 = *(void **)(v81 + *(int *)(v80 + 20));
LABEL_145:

      return;
    default:
      goto LABEL_144;
  }
}

void sub_1BFF3D95C()
{
  if (!qword_1EB884A48)
  {
    type metadata accessor for FormatNodeStateData.Data();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884A48);
    }
  }
}

uint64_t type metadata accessor for FormatViewBackground(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB87B020);
}

uint64_t sub_1BFF3D9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1BFEFD268(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for FormatNodeStateData.Data();
  __n128 v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v15 + 48))(a1, 1, v12) == 1)
  {
    sub_1BFE546A8(a1, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1C03537EC(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1BFE546A8((uint64_t)v10, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  }
  else
  {
    sub_1C02F5C80(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1BFF3DD0C((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BFF3DBF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF3DC58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FormatNodeStateData.Data()
{
  uint64_t result = qword_1EB882A80;
  if (!qword_1EB882A80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFF3DD0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t v20 = type metadata accessor for FormatNodeStateData.Data();
      return sub_1BFF3DFEC(a1, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v12, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C00310C8((uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data, (void (*)(void, __n128))sub_1BFF6DB3C, (void (*)(unint64_t, char *))sub_1C0079BF0, (void (*)(char *, unint64_t))sub_1BFF5F618);
    goto LABEL_7;
  }
  sub_1BFF5F250(v15, a4 & 1, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data, (void (*)(void, __n128))sub_1BFF6DB3C, (void (*)(unint64_t, char *))sub_1BFF5F618, (void (*)(unint64_t, char *))sub_1C0079BF0);
  unint64_t v22 = sub_1BFEF2D8C(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1C106A24C(v12, a2, a3, a1, v18, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data, (uint64_t (*)(uint64_t, unint64_t))sub_1BFF5F618);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FormatButtonNodeDataAction()
{
  uint64_t result = qword_1EB88C020;
  if (!qword_1EB88C020) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatButtonNodeDataAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0D75F68);
}

uint64_t type metadata accessor for FormatButtonNodeData()
{
  uint64_t result = qword_1EB8894E8;
  if (!qword_1EB8894E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFF3DFEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF3E054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BFF40FB4(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_1C151D2DC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_161;
      case 4u:
        uint64_t v7 = type metadata accessor for FeedItem(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v8 = (int *)type metadata accessor for FeedBannerAd();
            uint64_t v9 = v8[5];
            uint64_t v10 = a1 + v9;
            uint64_t v11 = a2 + v9;
            uint64_t v12 = sub_1C151DBAC();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
            *(void *)(a1 + v8[6]) = *(void *)(a2 + v8[6]);
            uint64_t v13 = v8[7];
            uint64_t v14 = a1 + v13;
            uint64_t v15 = a2 + v13;
            *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
            *(void *)uint64_t v14 = *(void *)v15;
            *(_OWORD *)(a1 + v8[8]) = *(_OWORD *)(a2 + v8[8]);
            goto LABEL_153;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *(void *)(a1 + 16) = *(void *)(a2 + 16);
            *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
            *(void *)(a1 + 32) = *(void *)(a2 + 32);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
            uint64_t v304 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v78 = v304[10];
            uint64_t v79 = (unsigned char *)(a1 + v78);
            uint64_t v80 = a2 + v78;
            *uint64_t v79 = *(unsigned char *)(a2 + v78);
            v79[1] = *(unsigned char *)(a2 + v78 + 1);
            uint64_t v81 = (int *)type metadata accessor for FeedHeadline.State(0);
            uint64_t v82 = v81[6];
            int v83 = &v79[v82];
            uint64_t v84 = (char *)(v80 + v82);
            uint64_t v85 = (int *)type metadata accessor for SharedItem();
            uint64_t v86 = *((void *)v85 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v86 + 48))(v84, 1, v85))
            {
              uint64_t v87 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
            }
            else
            {
              uint64_t v137 = sub_1C151631C();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v83, v84, v137);
              v83[v85[5]] = v84[v85[5]];
              *(void *)&v83[v85[6]] = *(void *)&v84[v85[6]];
              uint64_t v138 = v85[7];
              uint64_t v300 = &v83[v138];
              uint64_t v139 = &v84[v138];
              uint64_t v140 = sub_1C1515FDC();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v300, v139, v140);
              (*(void (**)(char *, void, uint64_t, int *))(v86 + 56))(v83, 0, 1, v85);
            }
            v79[v81[7]] = *(unsigned char *)(v80 + v81[7]);
            v79[v81[8]] = *(unsigned char *)(v80 + v81[8]);
            v79[v81[9]] = *(unsigned char *)(v80 + v81[9]);
            v79[v81[10]] = *(unsigned char *)(v80 + v81[10]);
            uint64_t v141 = v304[11];
            uint64_t v142 = (void *)(a1 + v141);
            uint64_t v143 = (const void *)(a2 + v141);
            uint64_t v144 = sub_1C151D2DC();
            uint64_t v145 = *(void *)(v144 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v145 + 48))(v143, 1, v144))
            {
              sub_1BFEEF440(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
              memcpy(v142, v143, *(void *)(*(void *)(v146 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v145 + 32))(v142, v143, v144);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
            }
            *(_OWORD *)(a1 + v304[12]) = *(_OWORD *)(a2 + v304[12]);
            uint64_t v155 = v304[13];
            uint64_t v156 = *(void *)(a2 + v155);
            if (v156 == 2) {
              uint64_t v156 = 2;
            }
            *(void *)(a1 + v155) = v156;
            *(void *)(a1 + v304[14]) = *(void *)(a2 + v304[14]);
            goto LABEL_153;
          case 4u:
            uint64_t v88 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v88;
            *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
            *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            uint64_t v89 = (int *)type metadata accessor for FeedWebEmbed();
            uint64_t v90 = v89[8];
            uint64_t v91 = a1 + v90;
            uint64_t v92 = a2 + v90;
            uint64_t v93 = sub_1C1515FDC();
            uint64_t v94 = *(void *)(v93 - 8);
            uint64_t v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32);
            v95(v91, v92, v93);
            uint64_t v96 = v89[9];
            uint64_t v97 = (void *)(a1 + v96);
            uint64_t v98 = (const void *)(a2 + v96);
            uint64_t v299 = v93;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(a2 + v96, 1, v93))
            {
              sub_1BFEEF440(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
              memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
            }
            else
            {
              v95((uint64_t)v97, (uint64_t)v98, v93);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v94 + 56))(v97, 0, 1, v93);
            }
            uint64_t v147 = (void (*)(char *, char *, uint64_t))v95;
            *(void *)(a1 + v89[10]) = *(void *)(a2 + v89[10]);
            *(void *)(a1 + v89[11]) = *(void *)(a2 + v89[11]);
            uint64_t v305 = v89;
            uint64_t v148 = v89[12];
            uint64_t v149 = (_OWORD *)(a1 + v148);
            uint64_t v150 = (_OWORD *)(a2 + v148);
            uint64_t v151 = (int *)type metadata accessor for FeedHeadline(0);
            uint64_t v152 = *((void *)v151 - 1);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v152 + 48))(v150, 1, v151))
            {
              sub_1BFEEF440(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
              memcpy(v149, v150, *(void *)(*(void *)(v153 - 8) + 64));
            }
            else
            {
              uint64_t v288 = v152;
              unint64_t v292 = (void (*)(char *, char *, uint64_t))v95;
              _OWORD *v149 = *v150;
              *((void *)v149 + 2) = *((void *)v150 + 2);
              *((unsigned char *)v149 + 24) = *((unsigned char *)v150 + 24);
              *((void *)v149 + 4) = *((void *)v150 + 4);
              *(_OWORD *)((char *)v149 + 40) = *(_OWORD *)((char *)v150 + 40);
              *((unsigned char *)v149 + 56) = *((unsigned char *)v150 + 56);
              uint64_t v157 = v151[10];
              uint64_t v158 = (char *)v149 + v157;
              char v159 = (char *)v150 + v157;
              *uint64_t v158 = *((unsigned char *)v150 + v157);
              v158[1] = *((unsigned char *)v150 + v157 + 1);
              id v290 = (int *)type metadata accessor for FeedHeadline.State(0);
              uint64_t v160 = v290[6];
              uint64_t v294 = &v158[v160];
              uint64_t v161 = &v159[v160];
              uint64_t v162 = (int *)type metadata accessor for SharedItem();
              uint64_t v287 = *((void *)v162 - 1);
              if ((*(unsigned int (**)(char *, uint64_t, int *))(v287 + 48))(v161, 1, v162))
              {
                uint64_t v163 = type metadata accessor for FeedItem.SharedState(0);
                memcpy(v294, v161, *(void *)(*(void *)(v163 - 8) + 64));
              }
              else
              {
                uint64_t v182 = sub_1C151631C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v294, v161, v182);
                v294[v162[5]] = v161[v162[5]];
                *(void *)&v294[v162[6]] = *(void *)&v161[v162[6]];
                v292(&v294[v162[7]], &v161[v162[7]], v299);
                (*(void (**)(char *, void, uint64_t, int *))(v287 + 56))(v294, 0, 1, v162);
              }
              v158[v290[7]] = v159[v290[7]];
              v158[v290[8]] = v159[v290[8]];
              v158[v290[9]] = v159[v290[9]];
              v158[v290[10]] = v159[v290[10]];
              uint64_t v183 = v151[11];
              uint64_t v184 = (char *)v149 + v183;
              uint64_t v185 = (char *)v150 + v183;
              uint64_t v186 = sub_1C151D2DC();
              uint64_t v187 = *(void *)(v186 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v187 + 48))(v185, 1, v186))
              {
                sub_1BFEEF440(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
                memcpy(v184, v185, *(void *)(*(void *)(v188 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v184, v185, v186);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v187 + 56))(v184, 0, 1, v186);
              }
              *(_OWORD *)((char *)v149 + v151[12]) = *(_OWORD *)((char *)v150 + v151[12]);
              uint64_t v189 = v151[13];
              uint64_t v190 = *(void *)((char *)v150 + v189);
              uint64_t v147 = v292;
              if (v190 == 2) {
                uint64_t v190 = 2;
              }
              *(void *)((char *)v149 + v189) = v190;
              *(void *)((char *)v149 + v151[14]) = *(void *)((char *)v150 + v151[14]);
              (*(void (**)(_OWORD *, void, uint64_t, int *))(v288 + 56))(v149, 0, 1, v151);
            }
            uint64_t v191 = v305[13];
            double v192 = (_OWORD *)(a1 + v191);
            uint64_t v193 = (_OWORD *)(a2 + v191);
            uint64_t v194 = type metadata accessor for WebEmbedDataVisualization();
            uint64_t v195 = *(void *)(v194 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194))
            {
              sub_1BFEEF440(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
              memcpy(v192, v193, *(void *)(*(void *)(v196 - 8) + 64));
            }
            else
            {
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *double v192 = *v193;
                uint64_t v197 = type metadata accessor for GenericDataVisualization();
                double v198 = v147;
                uint64_t v199 = v197;
                v198((char *)v192 + *(int *)(v197 + 20), (char *)v193 + *(int *)(v197 + 20), v299);
                *(void *)((char *)v192 + *(int *)(v199 + 24)) = *(void *)((char *)v193 + *(int *)(v199 + 24));
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v192, v193, *(void *)(v195 + 64));
              }
              (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
            }
            *(unsigned char *)(a1 + v305[14]) = *(unsigned char *)(a2 + v305[14]);
            goto LABEL_153;
          case 8u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v100 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
            uint64_t v101 = (_OWORD *)(a1 + v100);
            uint64_t v102 = a2 + v100;
            long long v103 = *(_OWORD *)(a2 + v100 + 16);
            *uint64_t v101 = *(_OWORD *)(a2 + v100);
            v101[1] = v103;
            uint64_t v104 = type metadata accessor for FormatCustomItem.Resolved();
            uint64_t v105 = *(int *)(v104 + 24);
            uint64_t v106 = (char *)v101 + v105;
            uint64_t v107 = (const void *)(v102 + v105);
            uint64_t v108 = type metadata accessor for FormatCustomItem.Action();
            uint64_t v109 = *(void *)(v108 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
            {
              sub_1BFEEF440(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
              memcpy(v106, v107, *(void *)(*(void *)(v110 - 8) + 64));
            }
            else
            {
              uint64_t v154 = sub_1C1515FDC();
              (*(void (**)(char *, const void *, uint64_t))(*(void *)(v154 - 8) + 32))(v106, v107, v154);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
            }
            *(void *)((char *)v101 + *(int *)(v104 + 28)) = *(void *)(v102 + *(int *)(v104 + 28));
            goto LABEL_153;
          case 0xAu:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v111 = (int *)type metadata accessor for FeedEngagementBanner();
            uint64_t v112 = v111[5];
            uint64_t v113 = a1 + v112;
            uint64_t v114 = a2 + v112;
            uint64_t v115 = sub_1C151959C();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 32))(v113, v114, v115);
            *(void *)(a1 + v111[6]) = *(void *)(a2 + v111[6]);
            uint64_t v116 = v111[7];
            uint64_t v117 = a1 + v116;
            uint64_t v118 = a2 + v116;
            *(unsigned char *)(v117 + 8) = *(unsigned char *)(v118 + 8);
            *(void *)uint64_t v117 = *(void *)v118;
            *(_OWORD *)(a1 + v111[8]) = *(_OWORD *)(a2 + v111[8]);
            goto LABEL_153;
          case 0xFu:
            uint64_t v119 = *(void *)(a2 + 8);
            *(void *)a1 = *(void *)a2;
            *(void *)(a1 + 8) = v119;
            *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
            *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
            *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
            uint64_t v120 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
            uint64_t v121 = a1 + v120;
            uint64_t v122 = a2 + v120;
            *(void *)(a1 + v120) = *(void *)(a2 + v120);
            uint64_t v123 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
            uint64_t v124 = (void *)(v121 + v123);
            uint64_t v125 = (void *)(v122 + v123);
            type metadata accessor for PuzzleStatisticCategory(0);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v164 = type metadata accessor for PuzzleStatisticValue(0);
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                if (EnumCaseMultiPayload == 5)
                {
                  uint64_t v166 = type metadata accessor for PuzzleStreak();
                  uint64_t v167 = *(void *)(v166 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v167 + 48))(v125, 1, v166))
                  {
LABEL_103:
                    sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v124, v125, *(void *)(*(void *)(v224 - 8) + 64));
                    goto LABEL_133;
                  }
                }
                else
                {
                  if (EnumCaseMultiPayload != 4)
                  {
                    memcpy(v124, v125, *(void *)(*(void *)(v164 - 8) + 64));
                    goto LABEL_134;
                  }
                  uint64_t v166 = type metadata accessor for PuzzleStreak();
                  uint64_t v167 = *(void *)(v166 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v167 + 48))(v125, 1, v166)) {
                    goto LABEL_103;
                  }
                }
                uint64_t v253 = sub_1C151555C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v253 - 8) + 32))(v124, v125, v253);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v167 + 56))(v124, 0, 1, v166);
LABEL_133:
                swift_storeEnumTagMultiPayload();
LABEL_134:
                uint64_t v254 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
                uint64_t v255 = *(int *)(v254 + 20);
                uint64_t v310 = (char *)v124;
                uint64_t v256 = (char *)v124 + v255;
                uint64_t v257 = (char *)v125 + v255;
                int v258 = swift_getEnumCaseMultiPayload();
                if (v258 == 5)
                {
                  uint64_t v259 = type metadata accessor for PuzzleStreak();
                  uint64_t v260 = *(void *)(v259 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v260 + 48))(v257, 1, v259))
                  {
LABEL_139:
                    sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v256, v257, *(void *)(*(void *)(v261 - 8) + 64));
                    goto LABEL_142;
                  }
                }
                else
                {
                  if (v258 != 4)
                  {
                    memcpy(v256, v257, *(void *)(*(void *)(v164 - 8) + 64));
                    goto LABEL_143;
                  }
                  uint64_t v259 = type metadata accessor for PuzzleStreak();
                  uint64_t v260 = *(void *)(v259 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v260 + 48))(v257, 1, v259)) {
                    goto LABEL_139;
                  }
                }
                uint64_t v262 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v262 - 8) + 32))(v256, v257, v262);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v260 + 56))(v256, 0, 1, v259);
LABEL_142:
                swift_storeEnumTagMultiPayload();
LABEL_143:
                uint64_t v263 = *(int *)(v254 + 24);
                uint64_t v264 = &v310[v263];
                uint64_t v265 = (char *)v125 + v263;
                int v266 = swift_getEnumCaseMultiPayload();
                if (v266 == 5)
                {
                  uint64_t v267 = type metadata accessor for PuzzleStreak();
                  uint64_t v268 = *(void *)(v267 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v268 + 48))(v265, 1, v267))
                  {
LABEL_148:
                    sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v264, v265, *(void *)(*(void *)(v269 - 8) + 64));
                    goto LABEL_151;
                  }
                }
                else
                {
                  if (v266 != 4)
                  {
                    memcpy(v264, v265, *(void *)(*(void *)(v164 - 8) + 64));
                    goto LABEL_152;
                  }
                  uint64_t v267 = type metadata accessor for PuzzleStreak();
                  uint64_t v268 = *(void *)(v267 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v268 + 48))(v265, 1, v267)) {
                    goto LABEL_148;
                  }
                }
                uint64_t v270 = sub_1C151555C();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 32))(v264, v265, v270);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v264, 0, 1, v267);
                goto LABEL_151;
              case 2u:
                uint64_t v168 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
                uint64_t v169 = *((void *)v168 - 1);
                if ((*(unsigned int (**)(void *, uint64_t, int *))(v169 + 48))(v125, 1, v168))
                {
                  sub_1BFEEF440(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
                  memcpy(v124, v125, *(void *)(*(void *)(v170 - 8) + 64));
                }
                else
                {
                  uint64_t v200 = sub_1C151631C();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v200 - 8) + 32))(v124, v125, v200);
                  uint64_t v201 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
                  *(_OWORD *)((char *)v124 + v201[5]) = *(_OWORD *)((char *)v125 + v201[5]);
                  uint64_t v202 = v201[6];
                  id v203 = (_OWORD *)((char *)v124 + v202);
                  long long v204 = (_OWORD *)((char *)v125 + v202);
                  long long v205 = v204[1];
                  *id v203 = *v204;
                  v203[1] = v205;
                  *(void *)((char *)v124 + v201[7]) = *(void *)((char *)v125 + v201[7]);
                  *(void *)((char *)v124 + v201[8]) = *(void *)((char *)v125 + v201[8]);
                  *(void *)((char *)v124 + v168[5]) = *(void *)((char *)v125 + v168[5]);
                  *(void *)((char *)v124 + v168[6]) = *(void *)((char *)v125 + v168[6]);
                  *(_OWORD *)((char *)v124 + v168[7]) = *(_OWORD *)((char *)v125 + v168[7]);
                  (*(void (**)(void *, void, uint64_t, int *))(v169 + 56))(v124, 0, 1, v168);
                }
                goto LABEL_152;
              case 3u:
                uint64_t v171 = v125[1];
                void *v124 = *v125;
                v124[1] = v171;
                *((unsigned char *)v124 + 16) = *((unsigned char *)v125 + 16);
                uint64_t v172 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
                uint64_t v173 = v172[6];
                uint64_t v306 = (char *)v124;
                uint64_t v174 = (char *)v124 + v173;
                uint64_t v175 = (char *)v125 + v173;
                uint64_t v176 = type metadata accessor for PuzzleStreak();
                uint64_t v177 = *(void *)(v176 - 8);
                uint64_t v295 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48);
                if (v295(v175, 1, v176))
                {
                  sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v174, v175, *(void *)(*(void *)(v178 - 8) + 64));
                }
                else
                {
                  uint64_t v206 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 32))(v174, v175, v206);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v174, 0, 1, v176);
                }
                uint64_t v207 = v172[7];
                uint64_t v208 = &v306[v207];
                uint64_t v209 = (char *)v125 + v207;
                if (v295((char *)v125 + v207, 1, v176))
                {
                  sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                  memcpy(v208, v209, *(void *)(*(void *)(v210 - 8) + 64));
                }
                else
                {
                  uint64_t v211 = sub_1C151555C();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 32))(v208, v209, v211);
                  (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v208, 0, 1, v176);
                }
                uint64_t v212 = v172[8];
                uint64_t v213 = &v306[v212];
                uint64_t v214 = (_OWORD *)((char *)v125 + v212);
                long long v215 = v214[1];
                *(_OWORD *)uint64_t v213 = *v214;
                *((_OWORD *)v213 + 1) = v215;
                *(_OWORD *)(v213 + 25) = *(_OWORD *)((char *)v214 + 25);
                uint64_t v216 = v172[9];
                long long v217 = &v306[v216];
                long long v218 = (_OWORD *)((char *)v125 + v216);
                *(_OWORD *)(v217 + 25) = *(_OWORD *)((char *)v218 + 25);
                long long v219 = v218[1];
                *(_OWORD *)long long v217 = *v218;
                *((_OWORD *)v217 + 1) = v219;
                uint64_t v220 = v172[10];
                uint64_t v221 = &v306[v220];
                double v222 = (_OWORD *)((char *)v125 + v220);
                long long v223 = v222[1];
                *(_OWORD *)uint64_t v221 = *v222;
                *((_OWORD *)v221 + 1) = v223;
                *(_OWORD *)(v221 + 25) = *(_OWORD *)((char *)v222 + 25);
                goto LABEL_152;
              default:
                uint64_t v126 = type metadata accessor for PuzzleStatisticValue(0);
                int v127 = swift_getEnumCaseMultiPayload();
                if (v127 == 5)
                {
                  uint64_t v128 = type metadata accessor for PuzzleStreak();
                  uint64_t v129 = *(void *)(v128 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v129 + 48))(v125, 1, v128)) {
                    goto LABEL_45;
                  }
                }
                else
                {
                  if (v127 != 4)
                  {
                    memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
                    goto LABEL_152;
                  }
                  uint64_t v128 = type metadata accessor for PuzzleStreak();
                  uint64_t v129 = *(void *)(v128 - 8);
                  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v129 + 48))(v125, 1, v128))
                  {
LABEL_45:
                    sub_1BFEEF440(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
                    memcpy(v124, v125, *(void *)(*(void *)(v130 - 8) + 64));
                    goto LABEL_151;
                  }
                }
                uint64_t v252 = sub_1C151555C();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v252 - 8) + 32))(v124, v125, v252);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v124, 0, 1, v128);
LABEL_151:
                swift_storeEnumTagMultiPayload();
LABEL_152:
                swift_storeEnumTagMultiPayload();
LABEL_153:
                swift_storeEnumTagMultiPayload();
LABEL_154:
                unint64_t v271 = (int *)type metadata accessor for FormatItemNodeData();
                uint64_t v272 = v271[5];
                uint64_t v273 = (_OWORD *)(a1 + v272);
                uint64_t v274 = (_OWORD *)(a2 + v272);
                long long v275 = v274[3];
                v273[2] = v274[2];
                v273[3] = v275;
                long long v276 = v274[1];
                *uint64_t v273 = *v274;
                v273[1] = v276;
                *(_OWORD *)((char *)v273 + 105) = *(_OWORD *)((char *)v274 + 105);
                long long v277 = v274[6];
                long long v278 = v274[4];
                v273[5] = v274[5];
                v273[6] = v277;
                v273[4] = v278;
                *(void *)(a1 + v271[6]) = *(void *)(a2 + v271[6]);
                uint64_t v279 = v271[7];
                uint64_t v280 = a1 + v279;
                uint64_t v281 = a2 + v279;
                uint64_t v282 = sub_1C151AC1C();
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v282 - 8) + 32))(v280, v281, v282);
                uint64_t v283 = v271[8];
                uint64_t v284 = a1 + v283;
                uint64_t v285 = a2 + v283;
                *(_OWORD *)uint64_t v284 = *(_OWORD *)v285;
                *(void *)(v284 + 16) = *(void *)(v285 + 16);
LABEL_161:
                swift_storeEnumTagMultiPayload();
                break;
            }
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
            goto LABEL_154;
        }
        break;
      case 6u:
        uint64_t v16 = type metadata accessor for FormatAction();
        if (swift_getEnumCaseMultiPayload() != 5)
        {
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v16 - 8) + 64));
          goto LABEL_110;
        }
        uint64_t v17 = type metadata accessor for FormatPurchaseData(0);
        int v18 = swift_getEnumCaseMultiPayload();
        if (v18 == 1)
        {
          uint64_t v75 = type metadata accessor for FormatPurchaseLandingPageData();
          uint64_t v76 = *(void *)(v75 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(a2, 1, v75))
          {
            sub_1BFEEF440(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v77 - 8) + 64));
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v132 = *(int *)(v75 + 20);
            __dsta = (void *)(a1 + v132);
            uint64_t v133 = (const void *)(a2 + v132);
            uint64_t v134 = type metadata accessor for FormatPostPurchaseData();
            uint64_t v135 = *(void *)(v134 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v135 + 48))(v133, 1, v134))
            {
              sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(__dsta, v133, *(void *)(*(void *)(v136 - 8) + 64));
            }
            else
            {
              uint64_t v179 = sub_1C1515FDC();
              uint64_t v301 = *(void *)(v179 - 8);
              uint64_t v307 = (void *)v179;
              if ((*(unsigned int (**)(const void *, uint64_t))(v301 + 48))(v133, 2))
              {
                uint64_t v180 = v133;
                uint64_t v181 = __dsta;
                memcpy(__dsta, v180, *(void *)(v135 + 64));
              }
              else
              {
                uint64_t v181 = __dsta;
                (*(void (**)(void))(v301 + 32))();
                (*(void (**)(void *, void, uint64_t, void *))(v301 + 56))(__dsta, 0, 2, v307);
              }
              (*(void (**)(void *, void, uint64_t, uint64_t))(v135 + 56))(v181, 0, 1, v134);
            }
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v76 + 56))(a1, 0, 1, v75);
          }
        }
        else
        {
          if (v18)
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v17 - 8) + 64));
            goto LABEL_109;
          }
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v19 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          uint64_t v20 = (void *)(a1 + v19);
          unsigned int v21 = (const void *)(a2 + v19);
          uint64_t v22 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v23 = *(void *)(v22 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
          {
            sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
          }
          else
          {
            uint64_t v131 = sub_1C1515FDC();
            __dst = *(void (***)(void *, const void *, uint64_t))(v131 - 8);
            if (((unsigned int (*)(const void *, uint64_t, uint64_t))__dst[6])(v21, 2, v131))
            {
              memcpy(v20, v21, *(void *)(v23 + 64));
            }
            else
            {
              __dst[4](v20, v21, v131);
              ((void (*)(void *, void, uint64_t, uint64_t))__dst[7])(v20, 0, 2, v131);
            }
            (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_109:
        swift_storeEnumTagMultiPayload();
LABEL_110:
        uint64_t v225 = type metadata accessor for FormatButtonNodeDataAction();
        *(void *)(a1 + *(int *)(v225 + 20)) = *(void *)(a2 + *(int *)(v225 + 20));
        uint64_t v226 = *(int *)(type metadata accessor for FormatButtonNodeData() + 20);
        uint64_t v227 = (_OWORD *)(a1 + v226);
        uint64_t v228 = (_OWORD *)(a2 + v226);
        uint64_t v229 = *(void *)(v225 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v229 + 48))(v228, 1, v225))
        {
          sub_1BFEEF440(0, &qword_1EB88C058, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
          memcpy(v227, v228, *(void *)(*(void *)(v230 - 8) + 64));
          goto LABEL_161;
        }
        if (swift_getEnumCaseMultiPayload() != 5)
        {
          memcpy(v227, v228, *(void *)(*(void *)(v16 - 8) + 64));
          goto LABEL_160;
        }
        uint64_t v231 = type metadata accessor for FormatPurchaseData(0);
        int v232 = swift_getEnumCaseMultiPayload();
        if (v232 == 1)
        {
          uint64_t v238 = type metadata accessor for FormatPurchaseLandingPageData();
          uint64_t v239 = *(unsigned int (***)(_OWORD *, uint64_t, uint64_t))(v238 - 8);
          if (v239[6](v228, 1, v238))
          {
            sub_1BFEEF440(0, &qword_1EB87BBB8, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy(v227, v228, *(void *)(*(void *)(v240 - 8) + 64));
          }
          else
          {
            unsigned int v296 = v239;
            *uint64_t v227 = *v228;
            uint64_t v244 = *(int *)(v238 + 20);
            uint64_t v303 = v238;
            int v309 = (char *)v227 + v244;
            uint64_t v245 = (char *)v228 + v244;
            uint64_t v246 = type metadata accessor for FormatPostPurchaseData();
            uint64_t v293 = *(void *)(v246 - 8);
            id v298 = v245;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v293 + 48))(v245, 1, v246))
            {
              sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(v309, v245, *(void *)(*(void *)(v247 - 8) + 64));
              uint64_t v248 = (void (**)(_OWORD *, void, uint64_t, uint64_t))v296;
            }
            else
            {
              uint64_t v291 = v246;
              uint64_t v249 = sub_1C1515FDC();
              uint64_t v250 = *(void *)(v249 - 8);
              uint64_t v289 = v249;
              if ((*(unsigned int (**)(char *, uint64_t))(v250 + 48))(v245, 2))
              {
                uint64_t v251 = v293;
                memcpy(v309, v298, *(void *)(v293 + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v250 + 32))(v309, v245, v289);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v250 + 56))(v309, 0, 2, v289);
                uint64_t v251 = v293;
              }
              uint64_t v248 = (void (**)(_OWORD *, void, uint64_t, uint64_t))v296;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v251 + 56))(v309, 0, 1, v291);
            }
            v248[7](v227, 0, 1, v303);
          }
        }
        else
        {
          if (v232)
          {
            memcpy(v227, v228, *(void *)(*(void *)(v231 - 8) + 64));
            goto LABEL_159;
          }
          *uint64_t v227 = *v228;
          uint64_t v233 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          uint64_t v308 = (char *)v227 + v233;
          uint64_t v234 = (char *)v228 + v233;
          uint64_t v235 = type metadata accessor for FormatPostPurchaseData();
          uint64_t v236 = *(void *)(v235 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v236 + 48))(v234, 1, v235))
          {
            sub_1BFEEF440(0, &qword_1EB87F600, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v308, v234, *(void *)(*(void *)(v237 - 8) + 64));
          }
          else
          {
            uint64_t v241 = sub_1C1515FDC();
            uint64_t v297 = *(void (***)(void))(v241 - 8);
            uint64_t v302 = v241;
            if (((unsigned int (*)(char *, uint64_t))v297[6])(v234, 2))
            {
              uint64_t v242 = v234;
              uint64_t v243 = v308;
              memcpy(v308, v242, *(void *)(v236 + 64));
            }
            else
            {
              uint64_t v243 = v308;
              v297[4]();
              ((void (*)(char *, void, uint64_t, uint64_t))v297[7])(v308, 0, 2, v302);
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v236 + 56))(v243, 0, 1, v235);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_159:
        swift_storeEnumTagMultiPayload();
LABEL_160:
        *(void *)((char *)v227 + *(int *)(v225 + 20)) = *(void *)((char *)v228 + *(int *)(v225 + 20));
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v229 + 56))(v227, 0, 1, v225);
        goto LABEL_161;
      case 0xAu:
        uint64_t v25 = type metadata accessor for FormatViewBackground(0);
        uint64_t v26 = *(void *)(v25 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(a2, 1, v25))
        {
          sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B9B8, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
          memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(void *)a1 = *(void *)a2;
            uint64_t v62 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
            uint64_t v63 = (void *)(a1 + v62);
            int v64 = (const void *)(a2 + v62);
            uint64_t v65 = sub_1C151A8EC();
            uint64_t v66 = *(void *)(v65 - 8);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65))
            {
              sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
              memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v66 + 32))(v63, v64, v65);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
            }
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy((void *)a1, (const void *)a2, *(void *)(v26 + 64));
          }
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v25);
        }
        goto LABEL_161;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        uint64_t v28 = type metadata accessor for FormatMicaData();
        uint64_t v29 = *(int *)(v28 + 20);
        uint64_t v30 = (void *)(a1 + v29);
        int v31 = (const void *)(a2 + v29);
        uint64_t v32 = sub_1C151A8EC();
        uint64_t v33 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
          sub_1BFEEF440(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
          memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v30, v31, v32);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        }
        uint64_t v68 = *(int *)(v28 + 24);
        uint64_t v69 = a1 + v68;
        uint64_t v70 = a2 + v68;
        *(_DWORD *)uint64_t v69 = *(_DWORD *)v70;
        *(unsigned char *)(v69 + 4) = *(unsigned char *)(v70 + 4);
        goto LABEL_161;
      case 0xDu:
        uint64_t v35 = sub_1C1515FDC();
        uint64_t v36 = *(void *)(v35 - 8);
        uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32);
        v37(a1, a2, v35);
        uint64_t v38 = *(int *)(type metadata accessor for FormatVideoData.Assets(0) + 20);
        uint64_t v39 = (void *)(a1 + v38);
        uint64_t v40 = (const void *)(a2 + v38);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(a2 + v38, 1, v35))
        {
          sub_1BFEEF440(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
          memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          v37((uint64_t)v39, (uint64_t)v40, v35);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
        }
        uint64_t v71 = *(int *)(type metadata accessor for FormatVideoData(0) + 20);
        uint64_t v72 = (_OWORD *)(a1 + v71);
        uint64_t v73 = (_OWORD *)(a2 + v71);
        long long v74 = v73[1];
        *uint64_t v72 = *v73;
        v72[1] = v74;
        v72[2] = v73[2];
        goto LABEL_161;
      case 0xFu:
        uint64_t v42 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(a1, a2, v42);
        uint64_t v43 = (int *)type metadata accessor for SharedItem();
        *(unsigned char *)(a1 + v43[5]) = *(unsigned char *)(a2 + v43[5]);
        *(void *)(a1 + v43[6]) = *(void *)(a2 + v43[6]);
        uint64_t v44 = v43[7];
        uint64_t v45 = a1 + v44;
        uint64_t v46 = a2 + v44;
        uint64_t v47 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
        goto LABEL_161;
      case 0x11u:
        long long v48 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v48;
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        uint64_t v49 = (int *)type metadata accessor for FormatVideoPlayerData();
        uint64_t v50 = v49[9];
        uint64_t v51 = a1 + v50;
        uint64_t v52 = a2 + v50;
        uint64_t v53 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
        *(void *)(a1 + v49[10]) = *(void *)(a2 + v49[10]);
        *(unsigned char *)(a1 + v49[11]) = *(unsigned char *)(a2 + v49[11]);
        uint64_t v54 = v49[12];
        uint64_t v55 = a1 + v54;
        uint64_t v56 = a2 + v54;
        long long v57 = *(_OWORD *)(v56 + 16);
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
        *(_OWORD *)(v55 + 16) = v57;
        *(_OWORD *)(v55 + 32) = *(_OWORD *)(v56 + 32);
        *(void *)(v55 + 48) = *(void *)(v56 + 48);
        *(unsigned char *)(a1 + v49[13]) = *(unsigned char *)(a2 + v49[13]);
        goto LABEL_161;
      case 0x14u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v58 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
        uint64_t v59 = a1 + v58;
        uint64_t v60 = a2 + v58;
        uint64_t v61 = sub_1C151D6DC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
        goto LABEL_161;
      default:
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_1BFF40FB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatNodeStateData.Data();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFF41010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (void *)((char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *v3;
  switch((unint64_t)*v3 >> 60)
  {
    case 3uLL:
      uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      sub_1C0D0E698();
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
      uint64_t v57 = v12;
      uint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFLL;
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1BFF41010(a1, a2, a3);
      uint64_t v17 = v16;
      char v19 = v18;
      swift_release();
      *(void *)(inited + 32) = v15;
      *(void *)(inited + 40) = v17;
      *(unsigned char *)(inited + 48) = v19 & 1;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C11329B8(v20, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v57 = inited;
      sub_1BFF62538(v21);
      uint64_t v22 = v57;
      uint64_t v23 = *(void *)(v57 + 16);
      if (v23)
      {
        uint64_t v54 = v14;
        swift_bridgeObjectRetain();
        a1 = 0;
        uint64_t v24 = v22 + 40;
        unint64_t v25 = 0xE000000000000000;
        uint64_t v26 = v23;
        do
        {
          uint64_t v57 = a1;
          unint64_t v58 = v25;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a1 = v57;
          unint64_t v25 = v58;
          v24 += 24;
          --v26;
        }
        while (v26);
        swift_bridgeObjectRelease();
        int v27 = 0;
        uint64_t v28 = (unsigned __int8 *)(v22 + 48);
        do
        {
          int v29 = *v28;
          v28 += 24;
          v27 |= v29;
          --v23;
        }
        while (v23);
      }
      else
      {
        a1 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      break;
    case 5uLL:
      uint64_t v30 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v31 = *(void *)(v30 + 16);
      if (!v31) {
        goto LABEL_2;
      }
      swift_retain();
      swift_bridgeObjectRetain_n();
      uint64_t v32 = swift_bridgeObjectRetain();
      uint64_t v33 = 32;
      do
      {
        uint64_t v57 = *(void *)(v30 + v33);
        sub_1BFF273E0(v32);
        char v35 = v34;
        uint64_t v32 = sub_1BFF27F20();
        if (v35) {
          break;
        }
        v33 += 16;
        --v31;
      }
      while (v31);
      swift_release();
      swift_bridgeObjectRelease_n();
      break;
    case 7uLL:
      uint64_t v36 = swift_projectBox();
      sub_1C1132B20(v36, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      uint64_t v57 = *v9;
      swift_retain();
      a1 = sub_1BFF41010(a1, a2, a3);
      swift_release();
      sub_1C1132B88((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      break;
    case 9uLL:
      uint64_t v37 = v10 & 0xFFFFFFFFFFFFFFFLL;
      unint64_t v39 = *(void *)(v37 + 24);
      uint64_t v57 = *(void *)(v37 + 16);
      uint64_t v38 = v57;
      unint64_t v58 = v39;
      sub_1C0D0E698();
      uint64_t v40 = swift_initStackObject();
      *(_OWORD *)(v40 + 16) = xmmword_1C1527210;
      swift_retain();
      swift_bridgeObjectRetain();
      *(void *)(v40 + 32) = sub_1BFF41010(a1, a2, a3);
      *(void *)(v40 + 40) = v41;
      *(unsigned char *)(v40 + 48) = v42 & 1;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v43 = swift_bridgeObjectRetain();
      uint64_t v44 = sub_1C1132874(v43, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v45 = *(void *)(v44 + 16);
      if (v45)
      {
        v53[1] = v40 + 32;
        uint64_t v54 = v38 & 0xFFFFFFFFFFFFFFFLL;
        swift_bridgeObjectRetain();
        uint64_t v46 = 0;
        uint64_t v47 = v44 + 40;
        unint64_t v48 = 0xE000000000000000;
        uint64_t v49 = v45;
        do
        {
          uint64_t v55 = v46;
          unint64_t v56 = v48;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v46 = v55;
          unint64_t v48 = v56;
          v47 += 24;
          --v49;
        }
        while (v49);
        swift_bridgeObjectRelease();
        char v50 = 0;
        uint64_t v51 = (char *)(v44 + 48);
        do
        {
          char v52 = *v51;
          v51 += 24;
          v50 |= v52;
          --v45;
        }
        while (v45);
      }
      else
      {
        char v50 = 0;
        uint64_t v46 = 0;
        unint64_t v48 = 0xE000000000000000;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v40 + 56) = v46;
      *(void *)(v40 + 64) = v48;
      *(unsigned char *)(v40 + 72) = v50 & 1;
      swift_bridgeObjectRetain();
      uint64_t v55 = 0;
      unint64_t v56 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v55;
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      swift_release();
      break;
    default:
LABEL_2:
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

unint64_t sub_1BFF415D4(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFF4160C(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF41644(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FormatItemNodeData()
{
  uint64_t result = qword_1EB888728;
  if (!qword_1EB888728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFF416D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFEF32C8(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
}

uint64_t sub_1BFF4175C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  switch((unint64_t)*v3 >> 61)
  {
    case 2uLL:
      uint64_t v8 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v9 = sub_1C0FB908C(v8, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        goto LABEL_16;
      }
      swift_bridgeObjectRetain();
      a1 = 0;
      uint64_t v11 = v9 + 40;
      uint64_t v12 = v10;
      do
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v11 += 24;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      int v13 = 0;
      uint64_t v14 = 48;
      do
      {
        v13 |= *(unsigned __int8 *)(v9 + v14);
        v14 += 24;
        --v10;
      }
      while (v10);
      goto LABEL_14;
    case 3uLL:
      uint64_t v15 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v16 = sub_1C0FB908C(v15, a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain();
        a1 = 0;
        uint64_t v18 = v16 + 40;
        uint64_t v19 = v17;
        do
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v18 += 24;
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        int v20 = 0;
        uint64_t v21 = 48;
        do
        {
          v20 |= *(unsigned __int8 *)(v16 + v21);
          v21 += 24;
          --v17;
        }
        while (v17);
LABEL_14:
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_16:
        swift_bridgeObjectRelease();
        a1 = 0;
      }
      break;
    case 4uLL:
    case 5uLL:
      swift_retain();
      a1 = sub_1BFF41010(a1, a2, a3);
      swift_release();
      break;
    default:
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

id sub_1BFF41A20@<X0>(id a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v10 = *v7;
  uint64_t v11 = v8;
  switch((unint64_t)*v7 >> 61)
  {
    case 1uLL:
      uint64_t v19 = v10 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v57 = v11;
      uint64_t v20 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      uint64_t v22 = swift_allocObject();
      uint64_t v23 = (void *)swift_allocObject();
      v23[2] = v20;
      v23[3] = v21;
      v23[4] = a2;
      v23[5] = a1;
      v23[6] = a4;
      v23[7] = a5;
      v23[8] = a6;
      *(void *)(v22 + 16) = sub_1C0FB92F4;
      *(void *)(v22 + 24) = v23;
      *a7 = v22;
      uint64_t v24 = *MEMORY[0x1E4FABA18];
      sub_1BFEFF588(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(a7, v24, v25);
      id v26 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF415D4(v21);
      swift_retain();
      swift_bridgeObjectRetain();
      return (id)swift_retain();
    case 2uLL:
      MEMORY[0x1F4188790](a1);
      uint64_t v54 = a2;
      uint64_t v55 = a3;
      uint64_t v56 = a4;
      id result = (id)sub_1C0183E6C((void (*)(void *, uint64_t *))sub_1BFFDD1F0, (uint64_t)v53, v27);
      if (!v11)
      {
        id v28 = result;
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = a1;
        *(void *)(v29 + 24) = v28;
        *a7 = v29;
        uint64_t v30 = (unsigned int *)MEMORY[0x1E4FAB9A0];
        goto LABEL_16;
      }
      return result;
    case 3uLL:
      MEMORY[0x1F4188790](a1);
      uint64_t v54 = a2;
      uint64_t v55 = a3;
      uint64_t v56 = a4;
      id result = (id)sub_1C0183E6C((void (*)(void *, uint64_t *))sub_1C0FB932C, (uint64_t)v53, v31);
      if (!v11)
      {
        id v32 = result;
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = a1;
        *(void *)(v33 + 24) = v32;
        *a7 = v33;
        uint64_t v30 = (unsigned int *)MEMORY[0x1E4FAB9C8];
        goto LABEL_16;
      }
      return result;
    case 4uLL:
      unint64_t v58 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      uint64_t v34 = sub_1BFF4DC90(a2, a3, a4, 0);
      id result = (id)swift_release();
      if (!v11)
      {
        uint64_t v35 = swift_allocObject();
        *(void *)(v35 + 16) = v34;
        *a7 = v35;
        uint64_t v36 = (unsigned int *)MEMORY[0x1E4FAB9C0];
        goto LABEL_21;
      }
      return result;
    case 5uLL:
      unint64_t v58 = *(void *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      uint64_t v37 = sub_1BFF4DC90(a2, a3, a4, 0);
      id result = (id)swift_release();
      if (!v11)
      {
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = v37;
        *a7 = v38;
        uint64_t v36 = (unsigned int *)MEMORY[0x1E4FAB968];
        goto LABEL_21;
      }
      return result;
    case 6uLL:
      if (v10 == 0xC000000000000000)
      {
        uint64_t v40 = swift_allocObject();
        *(void *)(v40 + 16) = a1;
        *a7 = v40;
        uint64_t v30 = (unsigned int *)MEMORY[0x1E4FAB9C0];
        goto LABEL_16;
      }
      if (v10 == 0xC000000000000008)
      {
        uint64_t v39 = swift_allocObject();
        *(void *)(v39 + 16) = a1;
        *a7 = v39;
        uint64_t v30 = (unsigned int *)MEMORY[0x1E4FAB968];
LABEL_16:
        uint64_t v41 = *v30;
        sub_1BFEFF588(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(a7, v41, v42);
        return a1;
      }
      if ((uint64_t)objc_msgSend(a1, sel_length) < 1)
      {
        uint64_t v50 = swift_allocObject();
        *(void *)(v50 + 16) = 0;
      }
      else
      {
        id v43 = objc_msgSend(a1, sel_attributesAtIndex_effectiveRange_, 0, 0);
        type metadata accessor for Key(0);
        sub_1BFF9A290();
        sub_1C151E33C();

        id v44 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
        uint64_t v45 = (void *)sub_1C151E5EC();
        uint64_t v46 = (void *)sub_1C151E32C();
        swift_bridgeObjectRelease();
        id v47 = objc_msgSend(v44, sel_initWithString_attributes_, v45, v46);

        objc_msgSend(v47, sel_boundingRectWithSize_options_context_, 33, 0, 1.79769313e308, 1.79769313e308);
        uint64_t v49 = v48;

        uint64_t v50 = swift_allocObject();
        *(void *)(v50 + 16) = v49;
      }
      *a7 = v50;
      uint64_t v36 = (unsigned int *)MEMORY[0x1E4FABA08];
LABEL_21:
      uint64_t v51 = *v36;
      sub_1BFEFF588(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
      return (id)(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 104))(a7, v51, v52);
    default:
      unint64_t v58 = *(void *)(v10 + 16);
      sub_1BFF35EA4(v58);
      sub_1BFF30600(a2, a5, a6, a7);
      return (id)sub_1BFF322A8(v58);
  }
}

uint64_t sub_1BFF420A0()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1C1517EFC();
  uint64_t v3 = *(void *)(*(void *)(v8 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v3 + 16) + 16))
  {
    uint64_t v9 = *(void *)(v8 + 56);
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_1BFEF3B08(v4);
    sub_1BFEF3808(v5);
    swift_release();
    uint64_t v6 = v9;
  }
  else
  {
    uint64_t v6 = sub_1BFEF3784();
    swift_release();
  }
  swift_bridgeObjectRetain();
  sub_1BFF896B4(v2, v1, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1C15191FC();
}

uint64_t FormatBindingExpression.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v66 = a2;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v56 - v7;
  unint64_t v9 = *(void *)v2;
  unint64_t v10 = *(void *)(v2 + 8);
  unint64_t v12 = *(void *)(v2 + 16);
  uint64_t v11 = *(void *)(v2 + 24);
  uint64_t v14 = *(void *)(v2 + 32);
  uint64_t v13 = *(void *)(v2 + 40);
  uint64_t v16 = *(void *)(v2 + 48);
  uint64_t v15 = *(void *)(v2 + 56);
  uint64_t v17 = *(void *)(v2 + 64);
  unint64_t v18 = *(void *)(v2 + 72);
  uint64_t v19 = *(void *)(v2 + 80);
  uint64_t v20 = *(void *)(v2 + 88);
  unsigned int v21 = *(unsigned __int8 *)(v2 + 106);
  unsigned int v22 = *(unsigned __int16 *)(v2 + 104);
  unsigned int v23 = v22 | (v21 << 16);
  uint64_t result = *(void *)(v2 + 96);
  switch((v21 >> 2) & 4 | (v22 >> 14))
  {
    case 1u:
      unint64_t v67 = *(void *)v2;
      unint64_t v68 = v10;
      unint64_t v69 = v12;
      uint64_t v70 = v11;
      uint64_t v71 = v14;
      uint64_t v72 = v13;
      __int16 v73 = v16;
      uint64_t v74 = v15;
      uint64_t v75 = v17;
      unint64_t v76 = v18;
      uint64_t v77 = v19;
      uint64_t v78 = v20;
      uint64_t v79 = result;
      __int16 v80 = v22 & 0x3FFF;
      char v81 = (v23 & 0xEF3FFF) >> 16;
      uint64_t result = FormatBindingTextExpression.bind(binder:context:)(a1, v66);
      break;
    case 2u:
      unint64_t v67 = *(void *)v2;
      LOWORD(v68) = v10;
      uint64_t result = FormatBoolBinding.bind(binder:context:)(a1, v66);
      break;
    case 3u:
    case 4u:
      return result;
    case 5u:
      if (!*(void *)(v2 + 24))
      {
        unint64_t v67 = *(void *)v2;
        unint64_t v68 = v10;
        unint64_t v69 = v12;
        char v83 = 6;
        uint64_t v63 = result;
        unsigned int v82 = v22 | (v21 << 16);
        uint64_t v57 = v11;
        uint64_t v26 = v11;
        uint64_t v56 = v14;
        uint64_t v27 = v14;
        uint64_t v28 = v13;
        uint64_t v62 = v16;
        uint64_t v29 = v15;
        unint64_t v64 = v18;
        uint64_t v65 = v17;
        uint64_t v30 = v19;
        sub_1C05D88FC(v9, v10, v12, v26, v27, v13, v16, v15, v17, v18, v19, v20, result, v23);
        uint64_t v59 = v20;
        uint64_t v60 = v30;
        uint64_t v51 = v30;
        uint64_t v31 = v56;
        __int16 v32 = v62;
        uint64_t v58 = v28;
        uint64_t v61 = v29;
        sub_1C05D88FC(v9, v10, v12, v57, v56, v28, v62, v29, v65, v64, v51, v20, v63, v82);
        uint64_t v33 = sub_1C12ECBDC((uint64_t *)&v67, &v83);
        if (!v4)
        {
          unint64_t v47 = v64;
          uint64_t v48 = v65;
          sub_1C0EC63F8(v9, v10, v33, 1, (uint64_t)v8);
          sub_1C05DDCC0((uint64_t)v8, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
          swift_bridgeObjectRelease();
          unsigned int v55 = v82;
          uint64_t v54 = v63;
          uint64_t v53 = v59;
          unint64_t v50 = v47;
          uint64_t v52 = v60;
          uint64_t v49 = v48;
          goto LABEL_9;
        }
        uint64_t result = sub_1BFF77374(v9, v10, v12, v57, v31, v58, v32, v61, v65, v64, v60, v59, v63, v82);
      }
      break;
    case 6u:
      unint64_t v67 = *(void *)v2;
      unint64_t v68 = v10;
      unint64_t v69 = v12;
      uint64_t v62 = v16;
      uint64_t v63 = result;
      uint64_t v61 = v15;
      uint64_t v58 = v13;
      uint64_t v56 = v14;
      uint64_t v57 = v11;
      unint64_t v64 = v18;
      uint64_t v65 = v17;
      uint64_t v34 = v19;
      int v35 = v22 | (v21 << 16);
      sub_1BFF58F10(v9);
      sub_1BFF8401C(v10, v12);
      FormatBindingDateTimeExpression.bind(binder:context:)(a1, v66);
      unsigned int v55 = v35;
      uint64_t v53 = v20;
      uint64_t v54 = v63;
      uint64_t v52 = v34;
      unint64_t v50 = v64;
      uint64_t v49 = v65;
LABEL_9:
      unint64_t v36 = v9;
      unint64_t v37 = v10;
      unint64_t v38 = v12;
      uint64_t v39 = v57;
      uint64_t v40 = v56;
      goto LABEL_14;
    case 7u:
      unint64_t v64 = *(void *)(v2 + 72);
      uint64_t v65 = v17;
      uint64_t v60 = v19;
      uint64_t v59 = v20;
      uint64_t v63 = result;
      if (v10 == 12 || v10 == 13)
      {
        unsigned int v82 = v22 | (v21 << 16);
        uint64_t v41 = v14;
        uint64_t v42 = v14;
        uint64_t v43 = v13;
        __int16 v44 = v16;
        uint64_t v45 = v15;
        sub_1BFF77374(v9, v10, v12, v11, v42, v13, v16, v15, v17, v18, v19, v20, result, v23);
        uint64_t result = sub_1BFF77374(v9, v10, v12, v11, v41, v43, v44, v45, v65, v64, v60, v59, v63, v82);
      }
      else
      {
        int v46 = v22 | (v21 << 16);
        uint64_t v58 = v13;
        uint64_t v61 = v15;
        uint64_t v62 = v16;
        unint64_t v67 = v12;
        sub_1C05D8AD4(v10);
        FormatFloat.bind(binder:context:)(a1, v66);
        unsigned int v55 = v46;
        uint64_t v54 = v63;
        uint64_t v53 = v59;
        uint64_t v52 = v60;
        unint64_t v50 = v64;
        uint64_t v49 = v65;
        unint64_t v36 = v9;
        unint64_t v37 = v10;
        unint64_t v38 = v12;
        uint64_t v39 = v11;
        uint64_t v40 = v14;
LABEL_14:
        uint64_t result = sub_1BFF77374(v36, v37, v38, v39, v40, v58, v62, v61, v49, v50, v52, v53, v54, v55);
      }
      break;
    default:
      unint64_t v67 = *(void *)v2;
      unint64_t v68 = v10;
      unint64_t v69 = v12;
      uint64_t v70 = v11;
      uint64_t v71 = v14;
      LOBYTE(v72) = v13;
      uint64_t v62 = v16;
      uint64_t v63 = result;
      unsigned int v82 = v22 | (v21 << 16);
      uint64_t v25 = v13;
      uint64_t v60 = v19;
      uint64_t v61 = v15;
      unint64_t v64 = v18;
      uint64_t v65 = v17;
      uint64_t v59 = v20;
      sub_1BFF2B584(v9, v10, v12, v11, v14, v13);
      FormatImageNodeBinding.bind(binder:context:)(a1, v66);
      uint64_t result = sub_1BFF77374(v9, v10, v12, v11, v14, v25, v62, v61, v65, v64, v60, v59, v63, v82);
      break;
  }
  return result;
}

uint64_t sub_1BFF427EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v7 = sub_1C15191EC();
  uint64_t v21 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = v3[1];
  uint64_t v22 = *v3;
  swift_retain();
  sub_1BFF17D10(a1, a2);
  uint64_t result = swift_release();
  if (!v4)
  {
    uint64_t v19 = v7;
    uint64_t v15 = v21;
    uint64_t v22 = v13;
    swift_retain();
    sub_1BFF17D10(a1, a2);
    swift_release();
    sub_1C15191BC();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v17 = v19;
    v16(v9, v19);
    return ((uint64_t (*)(char *, uint64_t))v16)(v12, v17);
  }
  return result;
}

uint64_t FormatVBoxNode.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  return sub_1BFF14FC0(a1, a2, (uint64_t)&unk_1F1B6DA00);
}

uint64_t sub_1BFF429DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFF42A2C(uint64_t a1, long long *a2, uint64_t a3)
{
  return sub_1BFF42A80(a1, a2, a3, (void (*)(uint64_t))sub_1BFF35EA4, (void (*)(unint64_t *, long long *))sub_1BFF0D1B8, (void (*)(uint64_t))sub_1BFF322A8);
}

uint64_t sub_1BFF42A80(uint64_t result, long long *a2, uint64_t a3, void (*a4)(uint64_t), void (*a5)(unint64_t *, long long *), void (*a6)(uint64_t))
{
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(a3 + 16);
  if (v8)
  {
    unint64_t v12 = (unint64_t *)result;
    swift_bridgeObjectRetain();
    for (uint64_t i = (uint64_t *)(a3 + 40); ; i += 2)
    {
      uint64_t v14 = *i;
      uint64_t v30 = *(i - 1);
      long long v15 = a2[5];
      long long v27 = a2[4];
      long long v28 = v15;
      uint64_t v29 = *((void *)a2 + 12);
      long long v16 = a2[1];
      long long v23 = *a2;
      long long v24 = v16;
      long long v17 = a2[3];
      long long v25 = a2[2];
      long long v26 = v17;
      swift_retain();
      a4(v14);
      sub_1BFF0C6A0(v12, (uint64_t *)&v23);
      if (v7) {
        break;
      }
      uint64_t v30 = v14;
      long long v18 = a2[5];
      long long v27 = a2[4];
      long long v28 = v18;
      uint64_t v29 = *((void *)a2 + 12);
      long long v19 = a2[1];
      long long v23 = *a2;
      long long v24 = v19;
      long long v20 = a2[3];
      long long v25 = a2[2];
      long long v26 = v20;
      a5(v12, &v23);
      uint64_t v7 = 0;
      swift_release();
      a6(v14);
      if (!--v8) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_release();
    a6(v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BFF42BE0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  long long v7 = *(_OWORD *)(a2 + 80);
  v24[4] = *(_OWORD *)(a2 + 64);
  v24[5] = v7;
  uint64_t v25 = *(void *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 16);
  v24[0] = *(_OWORD *)a2;
  v24[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  v24[2] = *(_OWORD *)(a2 + 32);
  v24[3] = v9;
  sub_1BFF0D1B8(a1, a2);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v10 = v2[6];
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(v10 + 8 * i + 32);
        sub_1BFF32264(v13);
        sub_1BFF0D378((uint64_t)a1, a2);
        sub_1BFF31E90(v13);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7]) {
      sub_1BFF42EB8((unint64_t)a1, a2);
    }
    uint64_t v14 = v2[8];
    if (v14)
    {
      swift_beginAccess();
      uint64_t v15 = *(void *)(v14 + 72);
      if (v15)
      {
        swift_bridgeObjectRetain();
        sub_1C0000E48((uint64_t)a1, (uint64_t)v24, v15);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v16 = *(void *)(v14 + 88);
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain_n();
        long long v18 = (uint64_t *)(v16 + 72);
        do
        {
          uint64_t v19 = *v18;
          if (*v18)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C0000E48((uint64_t)a1, (uint64_t)v24, v19);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v18 += 7;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease_n();
      }
    }
    sub_1BFF5B7F4(a1, (uint64_t)v24);
    swift_beginAccess();
    unint64_t v20 = v4[11];
    if (v20 >> 62 == 1)
    {
      uint64_t v21 = v20 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v22 = *(void *)(v21 + 16);
      uint64_t v23 = *(void *)(v21 + 24);
      sub_1BFE6FA30(v22);
      swift_bridgeObjectRetain();
      sub_1C1144E0C((uint64_t)a1, (uint64_t)v24, v22, v23);
      sub_1BFF0056C(v22);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BFF42EB8(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  long long v7 = *(_OWORD *)(a2 + 80);
  void v50[4] = *(_OWORD *)(a2 + 64);
  v50[5] = v7;
  uint64_t v51 = *(void *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 16);
  v50[0] = *(_OWORD *)a2;
  v50[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  _OWORD v50[2] = *(_OWORD *)(a2 + 32);
  v50[3] = v9;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v2 + 48);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain_n();
    long long v12 = *(_OWORD *)(v10 + 192);
    long long v46 = *(_OWORD *)(v10 + 176);
    long long v47 = v12;
    long long v48 = *(_OWORD *)(v10 + 208);
    uint64_t v49 = *(void *)(v10 + 224);
    long long v13 = *(_OWORD *)(v10 + 128);
    long long v42 = *(_OWORD *)(v10 + 112);
    long long v43 = v13;
    long long v14 = *(_OWORD *)(v10 + 160);
    long long v44 = *(_OWORD *)(v10 + 144);
    long long v45 = v14;
    long long v15 = *(_OWORD *)(v10 + 48);
    long long v16 = *(_OWORD *)(v10 + 80);
    long long v17 = *(_OWORD *)(v10 + 96);
    long long v39 = *(_OWORD *)(v10 + 64);
    long long v40 = v16;
    long long v41 = v17;
    long long v37 = *(_OWORD *)(v10 + 32);
    long long v38 = v15;
    sub_1C05DC8FC((uint64_t)&v37);
    sub_1BFF43310(a1, a2);
    if (v3)
    {
      sub_1C05DCA1C((uint64_t)&v37);
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v18 = 232;
    while (1)
    {
      sub_1C05DCA1C((uint64_t)&v37);
      if (!--v11) {
        break;
      }
      uint64_t v19 = v10 + v18;
      long long v20 = *(_OWORD *)(v10 + v18);
      v18 += 200;
      long long v37 = v20;
      long long v21 = *(_OWORD *)(v19 + 16);
      long long v22 = *(_OWORD *)(v19 + 32);
      long long v23 = *(_OWORD *)(v19 + 64);
      long long v40 = *(_OWORD *)(v19 + 48);
      long long v41 = v23;
      long long v38 = v21;
      long long v39 = v22;
      long long v24 = *(_OWORD *)(v19 + 80);
      long long v25 = *(_OWORD *)(v19 + 96);
      long long v26 = *(_OWORD *)(v19 + 128);
      long long v44 = *(_OWORD *)(v19 + 112);
      long long v45 = v26;
      long long v42 = v24;
      long long v43 = v25;
      long long v27 = *(_OWORD *)(v19 + 144);
      long long v28 = *(_OWORD *)(v19 + 160);
      long long v29 = *(_OWORD *)(v19 + 176);
      uint64_t v49 = *(void *)(v19 + 192);
      long long v47 = v28;
      long long v48 = v29;
      long long v46 = v27;
      sub_1C05DC8FC((uint64_t)&v37);
      sub_1BFF43310(a1, a2);
    }
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t v31 = *(void *)(v2 + 64);
  if (v31)
  {
    swift_bridgeObjectRetain();
    sub_1BFF90BA0(a1, v50, v31);
    if (v3) {
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if ((~*(void *)(v4 + 72) & 0xF000000000000007) == 0 || (uint64_t result = sub_1BFF7ACAC(a1, (uint64_t *)v50), !v3))
  {
    uint64_t result = *(void *)(v4 + 80);
    if (result && (uint64_t v32 = *(void *)(result + 16)) != 0)
    {
      uint64_t v52 = swift_bridgeObjectRetain();
      uint64_t v33 = v52 + 64;
      while (1)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BFF79540(a1, (uint64_t)v50);
        if (v3) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v33 += 40;
        if (!--v32)
        {
          uint64_t result = swift_bridgeObjectRelease();
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release_n();
    }
    else
    {
LABEL_20:
      unint64_t v34 = *(void *)(v4 + 120);
      if (v34 >= 3)
      {
        if (v34 != 3)
        {
          unint64_t v35 = *(void *)(v34 + 16);
          unint64_t v36 = *(void *)(v34 + 24);
          sub_1BFEF6854(*(void *)(v4 + 120));
          sub_1BFEF6A90(v35);
          sub_1BFEF6A90(v36);
          sub_1BFFB3BF0(a1, (uint64_t)v50, v35, v36);
          sub_1BFEF70CC(v35);
          sub_1BFEF70CC(v36);
          uint64_t result = sub_1BFEF68D8(v34);
          if (v3) {
            return result;
          }
        }
      }
      else
      {
        uint64_t result = sub_1BFEF68D8(*(void *)(v4 + 120));
      }
      if (*(unsigned __int8 *)(v4 + 216) == 254 || (uint64_t result = sub_1BFF79540(a1, (uint64_t)v50), !v3))
      {
        if ((~*(void *)(v4 + 224) & 0xF000000000000007) != 0) {
          return sub_1BFF79540(a1, (uint64_t)v50);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BFF43310(unint64_t a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  v28[4] = *(_OWORD *)(a2 + 64);
  v28[5] = v6;
  uint64_t v29 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v28[0] = *(_OWORD *)a2;
  v28[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v28[2] = *(_OWORD *)(a2 + 32);
  v28[3] = v8;
  uint64_t result = *(void *)(v2 + 24);
  uint64_t v10 = *(void *)(v2 + 88);
  int v11 = *(unsigned __int8 *)(v2 + 136);
  uint64_t v12 = *(void *)(v2 + 144);
  unint64_t v13 = *(void *)(v2 + 160);
  uint64_t v14 = *(void *)(v2 + 176);
  if ((~*(void *)(v2 + 16) & 0xF000000000000007) != 0)
  {
    unint64_t v26 = *(void *)(v2 + 160);
    uint64_t v27 = *(void *)(v2 + 24);
    int v24 = *(unsigned __int8 *)(v2 + 136);
    uint64_t v15 = *(void *)(v2 + 176);
    uint64_t v16 = *(void *)(v2 + 88);
    uint64_t v30 = *(void *)(v2 + 16);
    uint64_t result = sub_1BFF7ACAC(a1, (uint64_t *)a2);
    if (v3) {
      return result;
    }
    uint64_t v10 = v16;
    uint64_t v14 = v15;
    int v11 = v24;
    unint64_t v13 = v26;
    uint64_t result = v27;
  }
  if (!result)
  {
LABEL_10:
    if (v11 == 254) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v23 = v12;
  uint64_t v17 = *(void *)(result + 16);
  if (v17)
  {
    int v25 = v11;
    uint64_t v22 = v10;
    uint64_t v18 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      uint64_t v30 = *(void *)(v18 - 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFF79540(a1, a2);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v18 += 40;
      if (!--v17)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v10 = v22;
        uint64_t v12 = v23;
        int v11 = v25;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  uint64_t v12 = v23;
  if (v11 != 254)
  {
LABEL_13:
    uint64_t v30 = v10;
    uint64_t result = sub_1BFF79540(a1, a2);
    if (v3) {
      return result;
    }
  }
LABEL_14:
  if ((~v12 & 0xF000000000000007) == 0 || (uint64_t v30 = v12, result = sub_1BFF79540(a1, a2), !v3))
  {
    if (v13 >= 3)
    {
      if (v13 != 3)
      {
        unint64_t v19 = v13;
        unint64_t v20 = *(void *)(v13 + 16);
        unint64_t v21 = *(void *)(v13 + 24);
        sub_1BFEF6854(v19);
        sub_1BFEF6A90(v20);
        sub_1BFEF6A90(v21);
        sub_1BFFB3BF0(a1, (uint64_t)v28, v20, v21);
        sub_1BFEF70CC(v20);
        sub_1BFEF70CC(v21);
        uint64_t result = sub_1BFEF68D8(v19);
        if (v3) {
          return result;
        }
      }
    }
    else
    {
      uint64_t result = sub_1BFEF68D8(v13);
    }
    if (v14) {
      return sub_1BFF90BA0(a1, v28, v14);
    }
  }
  return result;
}

void sub_1BFF43600(void *a1, unsigned __int8 a2)
{
  switch(a2 >> 4)
  {
    case 0:
    case 2:
      swift_unknownObjectRelease();
      break;
    case 1:

      break;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      swift_release();
      break;
    default:
      return;
  }
}

void sub_1BFF4363C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
      swift_unknownObjectRelease();
      goto LABEL_7;
    case 1:
    case 4:
    case 14:
      goto LABEL_11;
    case 2:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
LABEL_7:
      swift_bridgeObjectRelease();
      return;
    case 3:

      swift_bridgeObjectRelease();
LABEL_11:
      swift_unknownObjectRelease();
      break;
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      swift_release();
      break;
    case 12:

      break;
    case 13:
      swift_unknownObjectRelease();
      sub_1C04B3A80(a2, a3, a4, a5);
      break;
    default:
      return;
  }
}

uint64_t sub_1BFF437A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  long long v8 = v6;
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1BFF1B2E4(v10, 0);
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t *)(*(void *)(v11 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  uint64_t v15 = v8[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1C128F0D8(v15, v11, v14, v13, (void (*)(uint64_t))sub_1BFF02C9C, sub_1BFF02214, (uint64_t (*)(uint64_t, uint64_t))sub_1BFF01F54, (void (*)(void))type metadata accessor for FormatTextNodeStyle, (void (*)(uint64_t))sub_1BFEF75C8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v7)
  {
    swift_beginAccess();
    uint64_t v17 = v8[2];
    uint64_t v18 = v8[3];
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1BFF303E0(v17, v18);
    uint64_t v21 = v20;
    swift_release();
    swift_bridgeObjectRelease();
    swift_unownedRetainStrong();
    swift_unownedRetain();
    swift_unownedRetain();
    swift_bridgeObjectRetain();
    swift_unownedRelease();
    swift_unownedRelease();
    swift_unownedRetain();
    swift_release();
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = v8;
    v22[3] = v19;
    v22[4] = v21;
    uint64_t v22[5] = v11;
    v22[6] = a3;
    v22[7] = v16;
    a5(0);
    a6();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1C15173AC();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_release();
}

id sub_1BFF43A68(id result, unsigned __int8 a2)
{
  switch(a2 >> 4)
  {
    case 0:
    case 2:
      uint64_t result = (id)swift_unknownObjectRetain();
      break;
    case 1:
      uint64_t result = result;
      break;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      uint64_t result = (id)swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

id sub_1BFF43AA4(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 1:
    case 4:
    case 14:
LABEL_6:
      return (id)swift_unknownObjectRetain();
    case 2:
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_11;
    case 3:
      id v12 = result;
      swift_unknownObjectRetain();
      id v10 = v12;
LABEL_11:
      uint64_t result = (id)swift_bridgeObjectRetain();
      break;
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      uint64_t result = (id)swift_retain();
      break;
    case 12:
      uint64_t result = result;
      break;
    case 13:
      swift_unknownObjectRetain();
      uint64_t result = (id)sub_1C04B13C8(a2, a3, a4, a5);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF43C40(uint64_t a1, uint64_t a2)
{
  return sub_1BFF44B38(a1, a2, (long long *)(v2 + 16));
}

void sub_1BFF43C48(unint64_t *a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  v17[4] = *(_OWORD *)(a2 + 64);
  v17[5] = v6;
  uint64_t v18 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v17[0] = *(_OWORD *)a2;
  v17[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v17[2] = *(_OWORD *)(a2 + 32);
  v17[3] = v8;
  sub_1BFF0D1B8(a1, a2);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v9 = v2[6];
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v10; ++i)
      {
        unint64_t v12 = *(void *)(v9 + 8 * i + 32);
        sub_1BFF32264(v12);
        sub_1BFF0D378((uint64_t)a1, a2);
        sub_1BFF31E90(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7]) {
      sub_1BFF43E18((uint64_t)a1, a2);
    }
    if (v2[8]) {
      sub_1C05C7514((uint64_t)a1, a2);
    }
    swift_beginAccess();
    unint64_t v13 = v2[10];
    if (v13 >> 62 == 1)
    {
      uint64_t v14 = v13 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = *(void *)(v14 + 24);
      sub_1BFE6FA30(v15);
      swift_bridgeObjectRetain();
      sub_1C1144E0C((uint64_t)a1, (uint64_t)v17, v15, v16);
      sub_1BFF0056C(v15);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BFF43E18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  long long v6 = *(_OWORD *)(a2 + 80);
  v14[4] = *(_OWORD *)(a2 + 64);
  v14[5] = v6;
  uint64_t v15 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v14[2] = *(_OWORD *)(a2 + 32);
  v14[3] = v8;
  swift_beginAccess();
  uint64_t v9 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  uint64_t v13 = a1;
  sub_1BFF44010(a1, v14, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v3)
  {
    if ((~*(void *)(v4 + 64) & 0xF000000000000007) != 0)
    {
      uint64_t v16 = *(void *)(v4 + 64);
      sub_1BFF7ACAC(a1, (uint64_t *)v14);
    }
    uint64_t result = *(void *)(v4 + 72);
    if (result)
    {
      uint64_t v11 = *(void *)(result + 16);
      if (v11)
      {
        uint64_t v12 = swift_bridgeObjectRetain() + 64;
        do
        {
          uint64_t v16 = *(void *)(v12 - 24);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BFF79540(v13, (uint64_t)v14);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v12 += 40;
          --v11;
        }
        while (v11);
        uint64_t result = swift_bridgeObjectRelease();
      }
    }
    if (*(unsigned __int8 *)(v4 + 184) != 254)
    {
      uint64_t v16 = *(void *)(v4 + 136);
      return sub_1BFF79540(v13, (uint64_t)v14);
    }
  }
  return result;
}

uint64_t sub_1BFF44010(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v34 = result;
  uint64_t v32 = *(void *)(a3 + 16);
  if (v32)
  {
    uint64_t v33 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      long long v6 = (long long *)(v33 + 160 * v5);
      long long v7 = v6[7];
      long long v48 = v6[6];
      long long v49 = v7;
      v50[0] = v6[8];
      *(_OWORD *)((char *)v50 + 9) = *(long long *)((char *)v6 + 137);
      long long v8 = v6[3];
      long long v44 = v6[2];
      long long v45 = v8;
      long long v9 = v6[5];
      long long v46 = v6[4];
      long long v47 = v9;
      long long v10 = v6[1];
      long long v42 = *v6;
      long long v43 = v10;
      if ((~(void)v10 & 0xF000000000000007) != 0)
      {
        uint64_t v51 = v10;
        long long v11 = a2[5];
        long long v39 = a2[4];
        long long v40 = v11;
        uint64_t v41 = *((void *)a2 + 12);
        long long v12 = a2[1];
        long long v35 = *a2;
        long long v36 = v12;
        long long v13 = a2[3];
        long long v37 = a2[2];
        long long v38 = v13;
        sub_1C05DD5B8((uint64_t)&v42);
        sub_1BFF7ACAC(v34, (uint64_t *)&v35);
        if (v3) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_1C05DD5B8((uint64_t)&v42);
      }
      if (*((void *)&v43 + 1))
      {
        uint64_t v14 = *(void *)(*((void *)&v43 + 1) + 16);
        if (v14) {
          break;
        }
      }
LABEL_13:
      unsigned __int8 v19 = BYTE8(v50[0]);
      if (BYTE8(v50[0]) != 254)
      {
        uint64_t v28 = *((void *)&v49 + 1);
        uint64_t v29 = *(void *)&v50[0];
        uint64_t v31 = v49;
        uint64_t v20 = *((void *)&v47 + 1);
        long long v30 = v48;
        uint64_t v21 = *((void *)&v46 + 1);
        uint64_t v27 = v47;
        uint64_t v23 = *((void *)&v45 + 1);
        uint64_t v22 = v46;
        uint64_t v51 = *((void *)&v47 + 1);
        long long v24 = a2[5];
        long long v39 = a2[4];
        long long v40 = v24;
        uint64_t v41 = *((void *)a2 + 12);
        long long v25 = a2[1];
        long long v35 = *a2;
        long long v36 = v25;
        long long v26 = a2[3];
        long long v37 = a2[2];
        long long v38 = v26;
        swift_retain();
        sub_1BFF79540(v34, (uint64_t)&v35);
        sub_1BFEF8738(v23, v22, v21, v27, v20, v30, *((uint64_t *)&v30 + 1), v31, v28, v29, v19);
        if (v3) {
          goto LABEL_17;
        }
      }
      ++v5;
      sub_1C05DD698((uint64_t)&v42);
      if (v5 == v32) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v15 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      uint64_t v51 = *(void *)(v15 - 24);
      long long v16 = a2[5];
      long long v39 = a2[4];
      long long v40 = v16;
      uint64_t v41 = *((void *)a2 + 12);
      long long v17 = a2[1];
      long long v35 = *a2;
      long long v36 = v17;
      long long v18 = a2[3];
      long long v37 = a2[2];
      long long v38 = v18;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFF79540(v34, (uint64_t)&v35);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v15 += 40;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
LABEL_17:
    sub_1C05DD698((uint64_t)&v42);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFF44304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  long long v8 = v6;
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1BFF1B2E4(v10, 0);
  swift_bridgeObjectRelease();
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  long long v13 = (uint64_t *)(*(void *)(v11 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v16 = v8[7];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C128F0D8(v16, v11, v15, v14, (void (*)(uint64_t))sub_1BFEF4BB8, sub_1BFEF40F8, (uint64_t (*)(uint64_t, uint64_t))sub_1BFF015D8, (void (*)(void))type metadata accessor for FormatImageNodeStyle, (void (*)(uint64_t))sub_1BFEF554C);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v7) {
    return swift_release();
  }
  uint64_t v46 = a2;
  uint64_t v47 = v17;
  swift_beginAccess();
  uint64_t v19 = v8[2];
  uint64_t v20 = v8[3];
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1BFF303E0(v19, v20);
  uint64_t v23 = v22;
  swift_release();
  swift_bridgeObjectRelease();
  long long v24 = (uint64_t *)(*(void *)(v11 + v12) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  uint64_t v27 = v8[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1BFEF32C8(v27, v11, v25, v26, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
  uint64_t v44 = v21;
  uint64_t v45 = v23;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v28 && (swift_beginAccess(), (uint64_t v29 = *(void *)(v28 + 72)) != 0) && *(void *)(v29 + 16))
  {
    uint64_t v30 = *(void *)(v28 + 48);
    uint64_t v31 = *(void *)(v28 + 56);
    int v32 = *(unsigned __int8 *)(v28 + 64);
    swift_retain();
    swift_retain();
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v38 = sub_1C12A4950(v33, v11);
    swift_bridgeObjectRelease();
    swift_release();
    if (v32) {
      uint64_t v39 = 0;
    }
    else {
      uint64_t v39 = v31;
    }
    if (v32) {
      uint64_t v40 = 0;
    }
    else {
      uint64_t v40 = v30;
    }
    type metadata accessor for FormatAnimationData();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v28;
    *(void *)(v41 + 24) = v40;
    *(void *)(v41 + 32) = v39;
    *(unsigned char *)(v41 + 40) = v32;
    *(void *)(v41 + 48) = v38;
    uint64_t v42 = *(void *)(a3 + 24);
    swift_beginAccess();
    swift_retain_n();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v51 = *(void *)(v42 + 32);
    *(void *)(v42 + 32) = 0x8000000000000000;
    sub_1C0062D34(v41, v44, v45, isUniquelyReferenced_nonNull_native);
    *(void *)(v42 + 32) = v51;
    uint64_t v35 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release_n();
    uint64_t v34 = v46;
  }
  else
  {
    uint64_t v35 = v23;
    uint64_t v34 = v46;
  }
  swift_unownedRetainStrong();
  swift_bridgeObjectRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v36 = v35;
  long long v37 = (void *)swift_allocObject();
  v37[2] = v44;
  v37[3] = v36;
  v37[4] = v8;
  v37[5] = v11;
  v37[6] = v47;
  v37[7] = v34;
  v37[8] = a3;
  a5(0);
  a6();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C15173AC();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t FormatSwitchNodeDefault.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v9 = v7 + 64;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(a1, a2);
      if (v3) {
        break;
      }
      v9 += 40;
      swift_bridgeObjectRelease();
      swift_release();
      if (!--v8) {
        return swift_bridgeObjectRelease_n();
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_1BFF44988(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  unint64_t v4 = ((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)((((v4 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BFF44A40()
{
  unint64_t result = qword_1EB876948;
  if (!qword_1EB876948)
  {
    sub_1C08FC718(255, &qword_1EB876950, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876948);
  }
  return result;
}

unint64_t sub_1BFF44AC4(unint64_t result)
{
  if (!(result >> 62)) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFF44AD4(uint64_t a1, uint64_t a2)
{
  sub_1BFF97C98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFF44B38(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v6 = sub_1C151769C();
  type metadata accessor for FormatImageNodeContext();
  unint64_t v7 = swift_allocObject();
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v7 + 16) = _Q0;
  *(void *)(v7 + 32) = 0x3FF0000000000000;
  *(void *)(v7 + 40) = v6;
  *(_OWORD *)(v7 + 48) = 0u;
  *(_OWORD *)(v7 + 64) = 0u;
  *(_OWORD *)(v7 + 80) = 0u;
  *(_OWORD *)(v7 + 96) = 0u;
  *(_OWORD *)(v7 + 112) = 0u;
  *(unsigned char *)(v7 + 128) = 0;
  sub_1BFF44C98((uint64_t)a3, (uint64_t)v18);
  sub_1BFF44C98((uint64_t)v18, (uint64_t)&v15);
  sub_1BFD385F4((uint64_t)a3, (void (*)(void, void, void, void, void, void))sub_1BFF2B584);
  sub_1BFF966E4(a1, a2, v7, &v17);
  sub_1BFD385F4((uint64_t)a3, (void (*)(void, void, void, void, void, void))sub_1BFF01078);
  long long v13 = a3[1];
  long long v15 = *a3;
  v16[0] = v13;
  *(_OWORD *)((char *)v16 + 10) = *(long long *)((char *)a3 + 26);
  LOBYTE(a1) = sub_1BFF44CF4(a1, &v17);
  swift_release();
  swift_release();
  return a1 & 1;
}

uint64_t sub_1BFF44C98(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1BFF44CF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  char v10 = *((unsigned char *)v2 + 40);
  int v11 = *((unsigned __int8 *)v2 + 41);
  uint64_t v12 = v3;
  switch((unint64_t)*a2 >> 61)
  {
    case 1uLL:
      uint64_t v14 = (_OWORD *)(v4 & 0x1FFFFFFFFFFFFFFFLL);
      long long v15 = v14[7];
      long long v41 = v14[6];
      long long v16 = v14[8];
      long long v17 = v14[9];
      long long v42 = v15;
      long long v43 = v16;
      long long v44 = v17;
      long long v18 = v14[3];
      long long v37 = v14[2];
      long long v38 = v18;
      long long v19 = v14[5];
      long long v39 = v14[4];
      long long v40 = v19;
      long long v36 = v14[1];
      uint64_t v20 = self;
      sub_1C0494FB8((uint64_t)&v36);
      id v21 = objc_msgSend(v20, sel_currentTraitCollection);
      ((void (*)(void *__return_ptr))v44)(v34);

      sub_1C0494FF0((uint64_t)&v36);
      if (v11) {
        LOBYTE(v11) = v35 != 0;
      }
      else {
        LOBYTE(v11) = v35 == 0;
      }
      sub_1BFF44FE0((uint64_t)v34);
      break;
    case 4uLL:
      char v31 = *((unsigned char *)v2 + 40);
      uint64_t v45 = v12;
      uint64_t v24 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v25 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v26 = self;
      uint64_t v32 = v24;
      swift_retain();
      swift_retain();
      id v27 = objc_msgSend(v26, sel_currentTraitCollection);
      id v28 = objc_msgSend(v27, sel_userInterfaceStyle);

      if ((unint64_t)v28 >= 2)
      {
        uint64_t v29 = v32;
        if (v28 == (id)2)
        {
          *(void *)&long long v36 = v5;
          *((void *)&v36 + 1) = v6;
          *(void *)&long long v37 = v8;
          *((void *)&v37 + 1) = v7;
          *(void *)&long long v38 = v9;
          BYTE8(v38) = v31;
          BYTE9(v38) = v11;
          v34[0] = v25;
          LOBYTE(v11) = sub_1BFF44CF4(a1, v34);
          swift_release();
          goto LABEL_16;
        }
        *(void *)&long long v36 = v5;
        *((void *)&v36 + 1) = v6;
        *(void *)&long long v37 = v8;
        *((void *)&v37 + 1) = v7;
        *(void *)&long long v38 = v9;
        BYTE8(v38) = v31;
        BYTE9(v38) = v11;
      }
      else
      {
        *(void *)&long long v36 = v5;
        *((void *)&v36 + 1) = v6;
        *(void *)&long long v37 = v8;
        *((void *)&v37 + 1) = v7;
        *(void *)&long long v38 = v9;
        BYTE8(v38) = v31;
        BYTE9(v38) = v11;
        uint64_t v29 = v32;
      }
      v34[0] = v29;
      LOBYTE(v11) = sub_1BFF44CF4(a1, v34);
      swift_release();
      goto LABEL_16;
    case 5uLL:
      uint64_t v22 = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)&long long v36 = *v2;
      *((void *)&v36 + 1) = v6;
      *(void *)&long long v37 = v8;
      *((void *)&v37 + 1) = v7;
      *(void *)&long long v38 = v9;
      BYTE8(v38) = v10;
      BYTE9(v38) = v11;
      v34[0] = v22;
      swift_retain();
      char v23 = sub_1BFF44CF4(a1, v34);
      if (!v12) {
        LOBYTE(v11) = v23;
      }
LABEL_16:
      swift_release();
      break;
    case 6uLL:
      LOBYTE(v11) = v11 ^ 1;
      break;
    default:
      return v11 & 1;
  }
  return v11 & 1;
}

uint64_t sub_1BFF44FE0(uint64_t a1)
{
  sub_1BFE4D1E4(0, (unint64_t *)&qword_1EB882B80, (unint64_t *)&qword_1EB871530);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BFF45054(unint64_t result)
{
  if (!(result >> 62)) {
    return swift_retain();
  }
  return result;
}

id sub_1BFF45064@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for FeedHeadline(0);
  return sub_1BFF6C244(a1);
}

unint64_t sub_1BFF45118(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = a1;
  sub_1C00AB000();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v57 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for FormatOption();
  uint64_t v6 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v51 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v50 = (uint64_t)&v49 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v56 = (uint64_t)&v49 - v11;
  sub_1BFF4993C(0, &qword_1EB871450);
  uint64_t v13 = v12;
  uint64_t v14 = swift_allocBox();
  uint64_t v16 = v15;
  sub_1C1518E4C();
  sub_1BFF4993C(0, &qword_1EB871448);
  unint64_t v67 = v17;
  uint64_t v18 = swift_allocBox();
  sub_1C1518E4C();
  uint64_t v62 = *(void *)(a2 + 16);
  if (!v62)
  {
    unint64_t v20 = v67;
    goto LABEL_43;
  }
  uint64_t v59 = v16;
  uint64_t v60 = v13;
  uint64_t v54 = v14;
  uint64_t v55 = v18;
  uint64_t v63 = a2 + 32;
  uint64_t v53 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  unint64_t v20 = v67;
  uint64_t v52 = a2;
  while (1)
  {
    uint64_t v22 = v63 + 24 * v19;
    uint64_t v23 = *(void *)v22;
    if (*(unsigned char *)(v22 + 17))
    {
      unsigned int v24 = *(void *)v22;
      swift_beginAccess();
      sub_1C1518E0C();
      swift_endAccess();
      if ((char)v64 == 6)
      {
        LOBYTE(v64) = v23;
LABEL_9:
        swift_beginAccess();
        goto LABEL_39;
      }
      if (v24 >= 4)
      {
        if (v24 == 4)
        {
          LOBYTE(v64) = 4;
          goto LABEL_9;
        }
        int v34 = 1;
        if ((char)v64 <= 3)
        {
LABEL_16:
          unint64_t v35 = qword_1C152AA08[(char)v64];
          if (v24 > 3)
          {
LABEL_17:
            unint64_t v20 = 2;
            goto LABEL_30;
          }
LABEL_29:
          unint64_t v20 = qword_1C152AA08[(char)v23];
LABEL_30:
          if (((v35 >= v20) & ~v34) == 0)
          {
            while (1)
            {
              swift_beginAccess();
              sub_1C1518E0C();
              swift_endAccess();
              if ((unint64_t)(char)v64 > 3 || qword_1C152AA08[(char)v64] >= v20) {
                break;
              }
              sub_1C00A9F60();
              if (v2)
              {
                swift_release();
                goto LABEL_56;
              }
            }
            if (v24 == 5)
            {
              swift_beginAccess();
              unint64_t v20 = v67;
              sub_1C1518E0C();
              swift_endAccess();
              if (v64 != 4)
              {
                swift_bridgeObjectRelease();
                type metadata accessor for FormatLayoutError();
                sub_1BFE7E51C();
                swift_allocError();
                uint64_t v47 = v46;
                *uint64_t v46 = sub_1C0BA95DC(a2);
                v47[1] = v48;
                swift_storeEnumTagMultiPayload();
                swift_willThrow();
                swift_release();
LABEL_51:
                swift_release();
                return v20;
              }
              swift_beginAccess();
              sub_1C1518DFC();
              goto LABEL_40;
            }
          }
          LOBYTE(v64) = v23;
          swift_beginAccess();
          unint64_t v20 = v67;
LABEL_39:
          sub_1C1518E1C();
LABEL_40:
          swift_endAccess();
          goto LABEL_5;
        }
      }
      else
      {
        int v34 = 0;
        if ((char)v64 <= 3) {
          goto LABEL_16;
        }
      }
      unint64_t v35 = 2;
      if (v24 > 3) {
        goto LABEL_17;
      }
      goto LABEL_29;
    }
    unint64_t v20 = *(void *)(v22 + 8);
    char v25 = *(unsigned char *)(v22 + 16);
    if (v25) {
      break;
    }
    uint64_t v21 = *(void *)v22;
LABEL_4:
    unint64_t v64 = v21;
    swift_beginAccess();
    sub_1C1518E1C();
    swift_endAccess();
    sub_1BFF45B38(v23, v20, v25, 0);
    unint64_t v20 = v67;
LABEL_5:
    if (++v19 == v62)
    {
      swift_bridgeObjectRelease();
LABEL_43:
      while (1)
      {
        swift_beginAccess();
        char v39 = sub_1C1518E2C();
        swift_endAccess();
        if (v39) {
          break;
        }
        sub_1C00A9F60();
        if (v2) {
          goto LABEL_50;
        }
      }
      swift_beginAccess();
      sub_1C1518DFC();
      swift_endAccess();
      if ((v65 & 1) == 0)
      {
        unint64_t v20 = v64;
        swift_beginAccess();
        char v40 = sub_1C1518E2C();
        swift_endAccess();
        if (v40)
        {
          swift_release();
          swift_release();
          return v20;
        }
      }
      type metadata accessor for FormatLayoutError();
      sub_1BFE7E51C();
      swift_allocError();
      unint64_t v20 = (unint64_t)v41;
      *long long v41 = sub_1C0BA95DC(a2);
      *(void *)(v20 + 8) = v42;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
LABEL_50:
      swift_release();
      goto LABEL_51;
    }
  }
  uint64_t v26 = *(void *)(v61 + 40);
  uint64_t v27 = *(void *)(v26 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v27 + 16) + 16))
  {
    sub_1C00AB058(v23, v20, v25, 0);
    swift_bridgeObjectRetain_n();
    sub_1BFEF2D8C(v23, v20);
    if (v28)
    {
      swift_endAccess();
      swift_retain();
      sub_1BFF45B38(v23, v20, v25, 0);
      swift_retain();
      swift_release();
      uint64_t v29 = v51;
      sub_1BFEF9524(v51);
      swift_release();
      uint64_t v30 = v29;
      uint64_t v31 = v50;
      sub_1C00AB068(v30, v50);
      uint64_t v32 = v31;
      uint64_t v33 = v57;
      sub_1C00AB068(v32, v57);
LABEL_25:
      (*v53)(v33, 0, 1, v58);
      sub_1BFF45B38(v23, v20, v25, 0);
      uint64_t v37 = v56;
      sub_1C00AB068(v33, v56);
      v66[0] = *(void *)(v37 + 16);
      swift_retain();
      uint64_t v38 = sub_1BFF5EAFC(v66, v61, v37);
      if (v2)
      {
        swift_release();
        sub_1C00AB0CC(v37, (uint64_t (*)(void))type metadata accessor for FormatOption);
        sub_1BFF45B38(v23, v20, v25, 0);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return v20;
      }
      uint64_t v21 = v38;
      swift_release();
      sub_1C00AB0CC(v37, (uint64_t (*)(void))type metadata accessor for FormatOption);
      a2 = v52;
      goto LABEL_4;
    }
    swift_endAccess();
    sub_1BFF45B38(v23, v20, v25, 0);
  }
  else
  {
    swift_endAccess();
    sub_1C00AB058(v23, v20, v25, 0);
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  if (!*(void *)(*(void *)(v26 + 24) + 16))
  {
    swift_endAccess();
    goto LABEL_55;
  }
  swift_bridgeObjectRetain();
  sub_1BFEF2D8C(v23, v20);
  if (v36)
  {
    swift_endAccess();
    swift_retain();
    sub_1BFF45B38(v23, v20, v25, 0);
    swift_retain();
    swift_release();
    uint64_t v33 = v57;
    sub_1BFEF9524(v57);
    swift_release();
    goto LABEL_25;
  }
  swift_endAccess();
  sub_1BFF45B38(v23, v20, v25, 0);
LABEL_55:
  uint64_t v43 = v57;
  (*v53)(v57, 1, 1, v58);
  sub_1C00AB0CC(v43, (uint64_t (*)(void))sub_1C00AB000);
  type metadata accessor for FormatLayoutError();
  sub_1BFE7E51C();
  swift_allocError();
  uint64_t *v44 = v23;
  v44[1] = v20;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_1BFF45B38(v23, v20, v25, 0);
  swift_release();
LABEL_56:
  swift_release();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1BFF45B38(uint64_t result, uint64_t a2, char a3, char a4)
{
  if ((a4 & 1) == 0) {
    return sub_1BFE94AD4(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_1BFF45B48(uint64_t a1, uint64_t *a2)
{
  uint64_t v21 = *a2;
  char v19 = *((unsigned char *)a2 + 9);
  char v20 = *((unsigned char *)a2 + 8);
  uint64_t v17 = a2[3];
  uint64_t v18 = a2[2];
  uint64_t v15 = a2[5];
  uint64_t v16 = a2[4];
  uint64_t v13 = a2[7];
  uint64_t v14 = a2[6];
  uint64_t v4 = a2[10];
  uint64_t v11 = a2[9];
  uint64_t v12 = a2[8];
  uint64_t v6 = a2[11];
  uint64_t v5 = a2[12];
  uint64_t result = swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 88);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v10 = v8 + 48;
    while (1)
    {
      uint64_t v37 = *(void *)(v10 - 16);
      uint64_t v23 = v21;
      char v24 = v20;
      char v25 = v19;
      uint64_t v26 = v18;
      uint64_t v27 = v17;
      uint64_t v28 = v16;
      uint64_t v29 = v15;
      uint64_t v30 = v14;
      uint64_t v31 = v13;
      uint64_t v32 = v12;
      uint64_t v33 = v11;
      uint64_t v34 = v4;
      uint64_t v35 = v6;
      uint64_t v36 = v5;
      swift_bridgeObjectRetain();
      swift_retain_n();
      sub_1BFF0B0B8(a1, &v23);
      if (v3) {
        break;
      }
      v10 += 40;
      swift_bridgeObjectRelease();
      swift_release_n();
      if (!--v9) {
        return swift_bridgeObjectRelease_n();
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1BFF45CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = a2;
  uint64_t v4 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v54 - v17;
  sub_1C086A198(v2, (uint64_t)v86);
  switch((2 * v88) | ((v87 & 8) != 0))
  {
    case 1:
      v87 &= ~8u;
      uint64_t v2 = LOBYTE(v86[0]);
      uint64_t v23 = v96;
      sub_1BFFB5F74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)v75);
      if (!v23)
      {
        long long v72 = v77;
        v73[0] = v78[0];
        *(_OWORD *)((char *)v73 + 9) = *(_OWORD *)((char *)v78 + 9);
        long long v68 = v75[2];
        long long v69 = v75[3];
        long long v70 = v75[4];
        long long v71 = v76;
        unsigned long long v66 = v75[0];
        long long v67 = v75[1];
        long long v62 = v77;
        v63[0] = v78[0];
        *(_OWORD *)((char *)v63 + 9) = *(_OWORD *)((char *)v78 + 9);
        long long v58 = v75[2];
        long long v59 = v75[3];
        long long v60 = v75[4];
        long long v61 = v76;
        char v65 = v2;
        long long v56 = v75[0];
        long long v57 = v75[1];
        uint64_t v2 = sub_1C0D77FA4(&v56);
        sub_1C01880A4((uint64_t)&v66);
      }
      break;
    case 2:
      v87 &= ~8u;
      sub_1C022425C((uint64_t)v86, (uint64_t)v91);
      uint64_t v2 = (uint64_t)v91;
      uint64_t v24 = v96;
      uint64_t v25 = sub_1C10BE620(a1, v55);
      if (!v24) {
        uint64_t v2 = v25;
      }
      break;
    case 3:
    case 4:
      v87 &= ~8u;
      uint64_t v19 = v86[2];
      unint64_t v20 = v86[1];
      uint64_t v21 = v86[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C10C08B8(v2, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF2A99C);
      uint64_t v2 = sub_1BFF5244C(a1, v21, v20, v19, v21, v20, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 5:
      v87 &= ~8u;
      sub_1C10C0AA0((uint64_t)v86, (uint64_t)&v90);
      uint64_t v26 = v96;
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)v15);
      if (!v26)
      {
        sub_1C10C0AA0((uint64_t)&v90, (uint64_t)v75);
        uint64_t v2 = FormatAudioTrackBinding.Text.text(from:)((uint64_t)v15);
        sub_1BFF4F410((uint64_t)v15, type metadata accessor for FeedHeadline);
      }
      break;
    case 6:
      v87 &= ~8u;
      uint64_t v2 = LOBYTE(v86[0]);
      uint64_t v27 = v96;
      sub_1C0E473E0(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)v75);
      if (!v27)
      {
        LOBYTE(v66) = v2;
        uint64_t v28 = *(void **)&v75[1];
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_1C10C0BA8;
        *(void *)(v29 + 24) = a1;
        uint64_t ObjectType = swift_getObjectType();
        swift_retain_n();
        uint64_t v2 = sub_1BFFDCA34(v28, (void (*)(uint64_t))sub_1C10C0BAC, v29, &v66, ObjectType);
        swift_release();
        swift_release();
        sub_1BFEA4290((uint64_t)v75);
      }
      break;
    case 7:
      v87 &= ~8u;
      sub_1C10C0A04((uint64_t)v86, (uint64_t)&v92);
      uint64_t v31 = v96;
      sub_1BFF7DD68(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)v12);
      if (!v31)
      {
        sub_1C10C0A04((uint64_t)&v92, (uint64_t)v75);
        uint64_t v2 = FormatWebEmbedBinding.Text.text(from:)((uint64_t)v12);
        sub_1BFF4F410((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      }
      break;
    case 8:
      v87 &= ~8u;
      sub_1C0224024((uint64_t)v86, (uint64_t)v93);
      uint64_t v32 = v96;
      sub_1C0E47688(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), v75);
      if (!v32)
      {
        sub_1C0224024((uint64_t)v93, (uint64_t)&v66);
        swift_retain();
        uint64_t v2 = FormatPuzzleBinding.Text.text(from:computedContext:selectors:)((uint64_t)v75, v55, (uint64_t (*)(void))sub_1C10C0BA8, a1);
        swift_release();
        sub_1C01F0A74((uint64_t)v75);
      }
      break;
    case 9:
      v87 &= ~8u;
      sub_1C10C09A8((uint64_t)v86, (uint64_t)v94);
      uint64_t v33 = a1;
      uint64_t v34 = v96;
      sub_1C0E472AC(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)v75);
      if (!v34)
      {
        unint64_t v36 = *((void *)&v75[0] + 1);
        unint64_t v35 = *(void *)&v75[0];
        LODWORD(v55) = LOBYTE(v75[1]);
        uint64_t v37 = *((void *)&v75[1] + 1);
        long long v38 = v75[2];
        uint64_t v39 = *(void *)&v75[3];
        uint64_t v96 = 0;
        uint64_t v40 = *((void *)&v75[3] + 1);
        sub_1C10C09A8((uint64_t)v94, (uint64_t)&v56);
        unsigned long long v66 = __PAIR128__(v36, v35);
        LOBYTE(v67) = v55;
        *((void *)&v67 + 1) = v37;
        long long v68 = v38;
        *(void *)&long long v69 = v39;
        *((void *)&v69 + 1) = v40;
        char v41 = *(unsigned char *)(v33 + 49);
        uint64_t v42 = *(void *)(v33 + 120);
        LOBYTE(v75[0]) = *(unsigned char *)(v33 + 48);
        BYTE1(v75[0]) = v41;
        *(_OWORD *)((char *)v75 + 8) = *(_OWORD *)(v33 + 56);
        *(_OWORD *)((char *)&v75[1] + 8) = *(_OWORD *)(v33 + 72);
        *(_OWORD *)((char *)&v75[2] + 8) = *(_OWORD *)(v33 + 88);
        *(_OWORD *)((char *)&v75[3] + 8) = *(_OWORD *)(v33 + 104);
        *((void *)&v75[4] + 1) = v42;
        uint64_t v2 = FormatPuzzleTypeBinding.Text.text(from:config:)((uint64_t)&v66, (uint64_t)v75);
        sub_1BFEEFC20(v37, v38);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 10:
      v87 &= ~8u;
      uint64_t v2 = LOBYTE(v86[0]);
      uint64_t v43 = v96;
      sub_1C0E47B90(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)v9);
      if (!v43)
      {
        LOBYTE(v75[0]) = v2;
        uint64_t v2 = FormatPuzzleStatisticBinding.Text.text(from:)((uint64_t)v9);
        sub_1BFF4F410((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      }
      break;
    case 11:
      v87 &= ~8u;
      uint64_t v2 = LOBYTE(v86[0]);
      uint64_t v44 = v96;
      sub_1C0E47960(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)v6);
      if (!v44)
      {
        if (v2) {
          uint64_t v52 = (uint64_t *)((char *)v6 + *(int *)(v4 + 20) + 16);
        }
        else {
          uint64_t v52 = v6;
        }
        uint64_t v2 = *v52;
        swift_bridgeObjectRetain();
        sub_1BFF4F410((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      }
      break;
    case 12:
      v87 &= ~8u;
      sub_1C10C094C((uint64_t)v86, (uint64_t)v95);
      uint64_t v45 = v96;
      sub_1C0E4755C(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)v75);
      if (!v45)
      {
        unint64_t v47 = *((void *)&v75[0] + 1);
        unint64_t v46 = *(void *)&v75[0];
        long long v48 = v75[1];
        char v49 = v75[2];
        sub_1C10C094C((uint64_t)v95, (uint64_t)&v66);
        v75[0] = __PAIR128__(v47, v46);
        v75[1] = v48;
        LOBYTE(v75[2]) = v49;
        sub_1C09FE810((uint64_t)v75);
        uint64_t v2 = v53;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 13:
      v87 &= ~8u;
      uint64_t v2 = LOBYTE(v86[0]);
      uint64_t v50 = v96;
      sub_1C0E47814(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)v75);
      if (!v50)
      {
        v73[5] = v82;
        v73[6] = v83;
        v73[7] = v84;
        v73[1] = v78[1];
        uint64_t v73[2] = v79;
        v73[3] = v80;
        _OWORD v73[4] = v81;
        long long v70 = v75[4];
        long long v71 = v76;
        long long v72 = v77;
        v73[0] = v78[0];
        unsigned long long v66 = v75[0];
        long long v67 = v75[1];
        long long v68 = v75[2];
        long long v69 = v75[3];
        v63[5] = v82;
        v63[6] = v83;
        v63[7] = v84;
        v63[1] = v78[1];
        void v63[2] = v79;
        v63[3] = v80;
        v63[4] = v81;
        long long v60 = v75[4];
        long long v61 = v76;
        long long v62 = v77;
        v63[0] = v78[0];
        long long v56 = v75[0];
        long long v57 = v75[1];
        uint64_t v74 = v85;
        char v65 = v2;
        uint64_t v64 = v85;
        long long v58 = v75[2];
        long long v59 = v75[3];
        swift_retain();
        uint64_t v2 = FormatPaywallBinding.Text.text(from:selectors:)((uint64_t)&v56, (void (*)(uint64_t))sub_1C10C0BA8);
        swift_release();
        sub_1C01F0AC8((uint64_t)&v66);
      }
      break;
    default:
      v87 &= ~8u;
      sub_1C0223E44((uint64_t)v86, (uint64_t)v89);
      uint64_t v22 = v96;
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), (uint64_t)v18);
      if (!v22)
      {
        sub_1C0223E44((uint64_t)v89, (uint64_t)v75);
        swift_retain();
        uint64_t v2 = FormatHeadlineBinding.Text.text(from:computedContext:selectors:)((uint64_t)v18, v55, (uint64_t (*)(uint64_t))sub_1C10C0BA8, a1);
        swift_release();
        sub_1BFF4F410((uint64_t)v18, type metadata accessor for FeedHeadline);
      }
      break;
  }
  return v2;
}

uint64_t initializeWithCopy for FormatSupplementary(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFF4681C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, double a10@<D0>, double a11@<D1>, CGFloat a12@<D2>, CGFloat a13@<D3>)
{
  uint64_t v61 = a8;
  unsigned long long v66 = (char *)a7;
  uint64_t v65 = a3;
  uint64_t v64 = a9;
  sub_1BFF4713C(0, (unint64_t *)&qword_1EB884A48, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v62 = (uint64_t)v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v59 = (uint64_t)v56 - v25;
  uint64_t v58 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v60 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v27 = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for FormatViewData(0);
  MEMORY[0x1F4188790](v28 - 8);
  uint64_t v30 = (char *)v56 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF4713C(0, (unint64_t *)&qword_1EB87B9B8, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v33 = (char *)v56 - v32;
  unint64_t v63 = a2;
  uint64_t v34 = v65;
  uint64_t v65 = a4;
  uint64_t v35 = (uint64_t)v67;
  uint64_t result = sub_1BFF479B0(a1, a2, v34, a4, a5, a6, (double *)((char *)v56 - v32), a10, a11, a12, a13);
  if (!v35)
  {
    v56[1] = 0;
    v56[0] = a1;
    unsigned long long v66 = v33;
    sub_1BFF46FD4((uint64_t)v33, (uint64_t)v30, (unint64_t *)&qword_1EB87B9B8, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
    long long v67 = v30;
    sub_1BFF47254((uint64_t)v30, (uint64_t)v27, type metadata accessor for FormatViewData);
    uint64_t v37 = v58;
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = v59;
    sub_1BFF47254((uint64_t)v27, v59, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v38, 0, 1, v37);
    uint64_t v39 = v62;
    sub_1BFF46FD4(v38, v62, (unint64_t *)&qword_1EB884A48, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1BFF3D9D4(v39, v65, a5);
    swift_endAccess();
    sub_1BFF3BF88(v38, (unint64_t *)&qword_1EB884A48, (void (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    sub_1BFF471F4((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    unint64_t v40 = v63;
    uint64_t v41 = *(void *)(v63 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    swift_unownedRetainStrong();
    swift_beginAccess();
    uint64_t v43 = *(void *)(a6 + 16);
    uint64_t v42 = *(void *)(a6 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v44 = *(void *)(v41 + 40);
    if (v44)
    {
      uint64_t v72 = *(void *)(v41 + 32);
      uint64_t v73 = v44;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v43 = v72;
      uint64_t v42 = v73;
    }
    swift_unownedRetainStrong();
    swift_beginAccess();
    uint64_t v45 = *(void *)(a6 + 24);
    uint64_t v61 = *(void *)(a6 + 16);
    uint64_t v60 = v45;
    swift_bridgeObjectRetain();
    swift_release();
    swift_unownedRetainStrong();
    uint64_t v46 = *(void *)(a6 + 40);
    swift_retain();
    swift_release();
    uint64_t v57 = a5;
    uint64_t v62 = v43;
    if (v46)
    {
      uint64_t v47 = *(void *)(v46 + 16);
      swift_retain();
      swift_release();
    }
    else
    {
      uint64_t v47 = 0;
    }
    uint64_t v48 = swift_allocObject();
    uint64_t v74 = v47;
    swift_unownedRetainStrong();
    swift_beginAccess();
    uint64_t v59 = *(void *)(a6 + 72);
    swift_release();
    swift_unownedRetainStrong();
    swift_beginAccess();
    unint64_t v49 = *(void *)(a6 + 80);
    sub_1BFE6FA30(v49);
    swift_release();
    unint64_t v70 = v49;
    sub_1BFE6EF70(v40, &v71);
    sub_1BFF0056C(v49);
    swift_unownedRetainStrong();
    swift_beginAccess();
    LOBYTE(v49) = *(unsigned char *)(a6 + 88);
    swift_release();
    sub_1C1517EFC();
    uint64_t v50 = v68;
    swift_unownedRetainStrong();
    uint64_t v51 = *(void *)(a6 + 96);
    char v52 = *(unsigned char *)(a6 + 104);
    swift_release();
    uint64_t v68 = v51;
    char v69 = v52;
    type metadata accessor for FormatViewNodeLayoutAttributes();
    swift_allocObject();
    uint64_t v53 = v56[0];
    swift_retain();
    uint64_t v54 = v57;
    swift_bridgeObjectRetain();
    uint64_t v55 = FormatViewNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(v65, v54, v62, v42, v61, v60, v53, &v74, a10, a11, a12, a13, v59, &v71, v49, v50, &v68);
    sub_1BFF471F4((uint64_t)v67, type metadata accessor for FormatViewData);
    uint64_t result = sub_1BFF3BF88((uint64_t)v66, (unint64_t *)&qword_1EB87B9B8, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
    *(void *)(v48 + 16) = v55;
    *uint64_t v64 = v48 | 4;
  }
  return result;
}

uint64_t sub_1BFF46F6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF46FD4(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFF4713C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BFF47040(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF47094(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF470E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF4713C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF47190(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFF471F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF47254(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FormatViewNodeLayoutAttributes()
{
  return self;
}

uint64_t destroy for FormatViewData(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatViewBackground(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch(result)
    {
      case 2:
        sub_1C03596EC(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
        return sub_1C03596EC(*(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(unsigned char *)(a1 + 152));
      case 1:
        swift_release();
        uint64_t v4 = a1 + *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
        uint64_t v5 = sub_1C151A8EC();
        uint64_t v7 = *(void *)(v5 - 8);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5);
        if (!result)
        {
          uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
          return v6(v4, v5);
        }
        break;
      case 0:
        swift_release();
        return swift_release();
    }
  }
  return result;
}

_OWORD *initializeWithCopy for FormatViewData(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = type metadata accessor for FormatViewBackground(0);
  uint64_t v5 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    sub_1BFF477D4(0, (unint64_t *)&qword_1EB87B9B8, (void (*)(uint64_t))type metadata accessor for FormatViewBackground);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v15 = *((void *)a2 + 2);
      uint64_t v16 = *((void *)a2 + 3);
      uint64_t v17 = *((void *)a2 + 4);
      uint64_t v18 = *((void *)a2 + 5);
      uint64_t v19 = *((void *)a2 + 6);
      uint64_t v20 = *((void *)a2 + 7);
      uint64_t v32 = *((void *)a2 + 9);
      uint64_t v33 = *((void *)a2 + 8);
      char v35 = *((unsigned char *)a2 + 80);
      sub_1C03A98B4(v15, v16, v17, v18, v19, v20, v33, v32, v35);
      *((void *)a1 + 2) = v15;
      *((void *)a1 + 3) = v16;
      *((void *)a1 + 4) = v17;
      *((void *)a1 + 5) = v18;
      *((void *)a1 + 6) = v19;
      *((void *)a1 + 7) = v20;
      *((void *)a1 + 8) = v33;
      *((void *)a1 + 9) = v32;
      *((unsigned char *)a1 + 80) = v35;
      uint64_t v21 = *((void *)a2 + 12);
      uint64_t v22 = *((void *)a2 + 13);
      uint64_t v23 = *((void *)a2 + 14);
      uint64_t v24 = *((void *)a2 + 15);
      uint64_t v25 = *((void *)a2 + 16);
      uint64_t v27 = *((void *)a2 + 17);
      uint64_t v26 = *((void *)a2 + 18);
      uint64_t v34 = v26;
      uint64_t v36 = *((void *)a2 + 11);
      char v28 = *((unsigned char *)a2 + 152);
      sub_1C03A98B4(v36, v21, v22, v23, v24, v25, v27, v26, v28);
      *((void *)a1 + 11) = v36;
      *((void *)a1 + 12) = v21;
      *((void *)a1 + 13) = v22;
      *((void *)a1 + 14) = v23;
      *((void *)a1 + 15) = v24;
      *((void *)a1 + 16) = v25;
      *((void *)a1 + 17) = v27;
      *((void *)a1 + 18) = v34;
      *((unsigned char *)a1 + 152) = v28;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v8 = *(int *)(type metadata accessor for FormatViewBackground.Mica(0) + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C151A8EC();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      swift_retain();
      if (v13(v10, 1, v11))
      {
        sub_1BFF477D4(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
        memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
    }
    else
    {
      uint64_t v29 = *(void *)a2;
      uint64_t v30 = *((void *)a2 + 1);
      *(void *)a1 = v29;
      *((void *)a1 + 1) = v30;
      swift_retain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void sub_1BFF477D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t FormatViewNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17)
{
  uint64_t v18 = *a8;
  uint64_t v19 = *a14;
  uint64_t v20 = *a17;
  char v21 = *((unsigned char *)a17 + 8);
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = a4;
  *(void *)(v17 + 48) = a5;
  *(void *)(v17 + 56) = a6;
  *(double *)(v17 + 64) = a9;
  *(double *)(v17 + 72) = a10;
  *(double *)(v17 + 80) = a11;
  *(double *)(v17 + 88) = a12;
  *(void *)(v17 + 96) = a7;
  *(void *)(v17 + 104) = v18;
  *(void *)(v17 + 112) = a13;
  *(void *)(v17 + 120) = v19;
  *(unsigned char *)(v17 + 128) = a15;
  *(void *)(v17 + 136) = a16;
  *(void *)(v17 + 144) = v20;
  *(unsigned char *)(v17 + 152) = v21;
  if (a7)
  {
    sub_1BFE6FE30(0, (unint64_t *)&qword_1EB87A888, (uint64_t (*)(uint64_t))sub_1C0399F9C, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    uint64_t v24 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v25 = *(void *)(a7 + 64);
    if ((~v25 & 0xF000000000000007) != 0)
    {
      char v28 = &protocol witness table for FormatBackground;
      uint64_t v27 = &type metadata for FormatBackground;
      uint64_t v26 = *(void *)(a7 + 64);
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      char v28 = 0;
      *(void *)(inited + 40) = 0;
      *(void *)(inited + 48) = 0;
    }
    *(void *)(inited + 32) = v26;
    *(void *)(inited + 56) = v27;
    *(void *)(inited + 64) = v28;
    swift_retain_n();
    swift_retain();
    sub_1BFEF683C(v25);
    uint64_t v29 = sub_1BFE6FEF0(v24);
    swift_setDeallocating();
    sub_1C0399F9C(0);
    swift_arrayDestroy();
    swift_release();
    swift_release_n();
  }
  else
  {
    uint64_t v29 = MEMORY[0x1E4FBC870];
  }
  *(void *)(v17 + 160) = v29;
  return v17;
}

uint64_t sub_1BFF479B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, double *a7@<X8>, double a8@<D0>, double a9@<D1>, CGFloat a10@<D2>, CGFloat a11@<D3>)
{
  uint64_t v12 = v11;
  uint64_t v118 = a6;
  uint64_t v119 = a2;
  uint64_t v120 = a7;
  sub_1BFF4713C(0, (unint64_t *)&qword_1EB87B0F0, MEMORY[0x1E4FAC080]);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v106 - v22;
  if (a1 && (unint64_t v24 = *(void *)(a1 + 64), (~v24 & 0xF000000000000007) != 0))
  {
    switch(v24 >> 61)
    {
      case 4uLL:
        uint64_t v30 = (_OWORD *)(v24 & 0x1FFFFFFFFFFFFFFFLL);
        long long v31 = v30[8];
        long long v135 = v30[7];
        long long v136 = v31;
        v137[0] = v30[9];
        *(_OWORD *)((char *)v137 + 9) = *(_OWORD *)((char *)v30 + 153);
        long long v32 = v30[4];
        long long v131 = v30[3];
        long long v132 = v32;
        long long v33 = v30[6];
        long long v133 = v30[5];
        long long v134 = v33;
        long long v34 = v30[2];
        long long v129 = v30[1];
        long long v130 = v34;
        uint64_t v35 = v129;
        sub_1C0445120((uint64_t)&v129);
        swift_bridgeObjectRetain();
        sub_1C1517EFC();
        double v36 = sub_1BFF493E4(*(uint64_t *)&v127[0], v35);
        if (v11)
        {
          swift_release();
          sub_1C05D9B78((uint64_t)&v129);
          return swift_bridgeObjectRelease();
        }
        double v60 = v36;
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v61 = *((void *)&v129 + 1);
        swift_bridgeObjectRetain();
        sub_1C1517EFC();
        double v71 = sub_1BFF493E4(*(uint64_t *)&v127[0], v61);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v117 = *((void *)&v130 + 1);
        uint64_t v118 = v130;
        uint64_t v114 = *((void *)&v131 + 1);
        unint64_t v115 = v131;
        uint64_t v119 = 0;
        uint64_t v112 = *((void *)&v132 + 1);
        uint64_t v113 = v132;
        uint64_t v116 = *((void *)&v133 + 1);
        uint64_t v111 = v133;
        LODWORD(v110) = v134;
        uint64_t v72 = *((void *)&v134 + 1);
        long long v74 = v135;
        uint64_t v73 = v136;
        uint64_t v108 = v136;
        uint64_t v109 = *((void *)&v134 + 1);
        uint64_t v75 = *((void *)&v136 + 1);
        uint64_t v76 = *(void *)&v137[0];
        uint64_t v77 = *(void *)&v137[1];
        uint64_t v107 = *((void *)&v137[0] + 1);
        LOBYTE(v61) = BYTE8(v137[1]);
        sub_1C03A98B4(v130, *((uint64_t *)&v130 + 1), v131, *((uint64_t *)&v131 + 1), v132, *((uint64_t *)&v132 + 1), v133, *((uint64_t *)&v133 + 1), v134);
        uint64_t v78 = v72;
        uint64_t v79 = v107;
        sub_1C03A98B4(v78, v74, *((uint64_t *)&v74 + 1), v73, v75, v76, v107, v77, v61);
        sub_1C05D9B78((uint64_t)&v129);
        char v80 = v110;
        LOBYTE(v127[0]) = v110;
        LOBYTE(v125[0]) = v61;
        long long v81 = v120;
        *uint64_t v120 = v60;
        v81[1] = v71;
        uint64_t v82 = v117;
        *((void *)v81 + 2) = v118;
        *((void *)v81 + 3) = v82;
        uint64_t v83 = v114;
        *((void *)v81 + 4) = v115;
        *((void *)v81 + 5) = v83;
        uint64_t v84 = v112;
        *((void *)v81 + 6) = v113;
        *((void *)v81 + 7) = v84;
        uint64_t v85 = v116;
        *((void *)v81 + 8) = v111;
        *((void *)v81 + 9) = v85;
        *((unsigned char *)v81 + 80) = v80;
        *((void *)v81 + 11) = v109;
        *((void *)v81 + 12) = v74;
        uint64_t v86 = v108;
        v81[13] = *((double *)&v74 + 1);
        *((void *)v81 + 14) = v86;
        *((void *)v81 + 15) = v75;
        *((void *)v81 + 16) = v76;
        *((void *)v81 + 17) = v79;
        *((void *)v81 + 18) = v77;
        *((unsigned char *)v81 + 152) = v125[0];
        uint64_t v87 = type metadata accessor for FormatViewBackground(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v26 = *(uint64_t (**)(double *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56);
        uint64_t v27 = v81;
        goto LABEL_31;
      case 5uLL:
        uint64_t v37 = v24 & 0x1FFFFFFFFFFFFFFFLL;
        uint64_t v38 = *(void *)(v37 + 16);
        uint64_t v39 = *(void *)(v37 + 24);
        uint64_t v116 = v38;
        uint64_t v117 = v39;
        if (v39 && (uint64_t v40 = *(void *)(v39 + 240), v40 != 1))
        {
          unint64_t v64 = *(void *)(v39 + 248);
          *(void *)&v127[0] = *(void *)(v39 + 240);
          *((void *)&v127[0] + 1) = v64;
          uint64_t v65 = v38 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain();
          swift_retain();
          unint64_t v115 = v64;
          sub_1BFEF6864(v40);
          sub_1BFCD96EC(v119, (uint64_t)&v129, a10, a11);
          if (v12)
          {
            swift_release();
            swift_release();
            return sub_1BFEF68E8(v40);
          }
          sub_1BFEF68E8(v40);
          uint64_t v114 = *((void *)&v129 + 1);
          unint64_t v115 = v129;
          uint64_t v112 = *((void *)&v130 + 1);
          uint64_t v113 = v130;
          uint64_t v110 = *((void *)&v131 + 1);
          uint64_t v111 = v131;
          uint64_t v108 = *((void *)&v132 + 1);
          uint64_t v109 = v132;
          uint64_t v106 = *((void *)&v133 + 1);
          uint64_t v107 = v133;
          uint64_t v41 = v65;
          char v42 = v134;
        }
        else
        {
          uint64_t v41 = v38 & 0xFFFFFFFFFFFFFFFLL;
          swift_retain();
          swift_retain();
          uint64_t v114 = 0;
          unint64_t v115 = 0;
          uint64_t v112 = 0;
          uint64_t v113 = 0;
          uint64_t v110 = 0;
          uint64_t v111 = 0;
          uint64_t v108 = 0;
          uint64_t v109 = 0;
          uint64_t v106 = 0;
          uint64_t v107 = 0;
          char v42 = 0;
        }
        uint64_t v43 = v119;
        swift_retain();
        sub_1C15176EC();
        uint64_t v45 = v44;
        uint64_t v46 = sub_1C151769C();
        swift_release();
        type metadata accessor for FormatImageNodeContext();
        uint64_t v47 = swift_allocObject();
        *(CGFloat *)(v47 + 16) = a10;
        *(CGFloat *)(v47 + 24) = a11;
        *(void *)(v47 + 32) = v45;
        unint64_t v48 = v115;
        *(void *)(v47 + 40) = v46;
        *(void *)(v47 + 48) = v48;
        uint64_t v49 = v113;
        *(void *)(v47 + 56) = v114;
        *(void *)(v47 + 64) = v49;
        uint64_t v50 = v111;
        *(void *)(v47 + 72) = v112;
        *(void *)(v47 + 80) = v50;
        uint64_t v51 = v109;
        *(void *)(v47 + 88) = v110;
        *(void *)(v47 + 96) = v51;
        uint64_t v52 = v107;
        *(void *)(v47 + 104) = v108;
        *(void *)(v47 + 112) = v52;
        *(void *)(v47 + 120) = v106;
        *(unsigned char *)(v47 + 128) = v42;
        unint64_t v53 = v47;
        *(void *)&long long v129 = v116;
        swift_retain();
        sub_1BFF5BD8C(v43, a3, v53, &v126);
        if (v12)
        {
          swift_release_n();
          swift_release();
          return swift_release();
        }
        unint64_t v115 = v53;
        uint64_t v116 = v41;
        swift_release();
        uint64_t v114 = v126;
        *(void *)&long long v129 = 0;
        *((void *)&v129 + 1) = 0xE000000000000000;
        sub_1C15200FC();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&long long v129 = a4;
        *((void *)&v129 + 1) = a5;
        sub_1C151E80C();
        uint64_t v113 = *((void *)&v129 + 1);
        uint64_t v111 = v129;
        *(void *)&long long v129 = 0;
        *((void *)&v129 + 1) = 0xE000000000000000;
        sub_1C15200FC();
        uint64_t v66 = *(void *)(v43 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
        uint64_t v67 = v118;
        swift_unownedRetainStrong();
        swift_beginAccess();
        uint64_t v69 = *(void *)(v67 + 16);
        uint64_t v68 = *(void *)(v67 + 24);
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v70 = *(void *)(v66 + 40);
        if (v70)
        {
          *(void *)&v127[0] = *(void *)(v66 + 32);
          *((void *)&v127[0] + 1) = v70;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v68 = *((void *)&v127[0] + 1);
          uint64_t v69 = *(void *)&v127[0];
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v88 = v117;
        *(void *)&v127[0] = v69;
        *((void *)&v127[0] + 1) = v68;
        sub_1C151E80C();
        uint64_t v112 = *((void *)&v127[0] + 1);
        uint64_t v110 = *(void *)&v127[0];
        uint64_t v89 = v118;
        swift_unownedRetainStrong();
        swift_beginAccess();
        uint64_t v90 = *(void *)(v89 + 24);
        uint64_t v109 = *(void *)(v89 + 16);
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v91 = v119;
        char v92 = (uint64_t *)(*(void *)(v119 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                        + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
        swift_beginAccess();
        uint64_t v93 = *v92;
        uint64_t v94 = v92[1];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v95 = sub_1BFF5CA40(v88, v91, v93, v94);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_unownedRetainStrong();
        uint64_t v96 = *(void *)(v89 + 40);
        swift_retain();
        swift_release();
        if (v96)
        {
          uint64_t v97 = *(void *)(v96 + 16);
          swift_retain();
          swift_release();
        }
        else
        {
          uint64_t v97 = 0;
        }
        uint64_t v123 = 0x8000000000000000;
        uint64_t v124 = v97;
        swift_unownedRetainStrong();
        swift_beginAccess();
        char v101 = *(unsigned char *)(v89 + 88);
        swift_release();
        sub_1C1517EFC();
        uint64_t v102 = v121;
        uint64_t v121 = 0;
        char v122 = -2;
        swift_unownedRetainStrong();
        uint64_t v104 = *(void *)(v89 + 120);
        uint64_t v103 = *(void *)(v89 + 128);
        swift_bridgeObjectRetain();
        swift_release();
        type metadata accessor for FormatImageNodeLayoutAttributes();
        swift_allocObject();
        uint64_t v105 = FormatImageNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:shouldCancelContextMenu:)(v111, v113, v110, v112, v109, v90, v95, &v124, a8, a9, a10, a11, 0, &v123, v101, v102, &v121, v104, v103,
                 0);
        swift_release();
        swift_release();
        swift_release();
        uint64_t v100 = v120;
        *(void *)uint64_t v120 = v114;
        *((void *)v100 + 1) = v105;
        uint64_t v87 = type metadata accessor for FormatViewBackground(0);
        goto LABEL_30;
      case 6uLL:
        uint64_t v54 = v24 & 0x1FFFFFFFFFFFFFFFLL;
        long long v55 = *(_OWORD *)(v54 + 128);
        long long v135 = *(_OWORD *)(v54 + 112);
        long long v136 = v55;
        v137[0] = *(_OWORD *)(v54 + 144);
        LOBYTE(v137[1]) = *(unsigned char *)(v54 + 160);
        long long v56 = *(_OWORD *)(v54 + 64);
        long long v131 = *(_OWORD *)(v54 + 48);
        long long v132 = v56;
        long long v57 = *(_OWORD *)(v54 + 96);
        long long v133 = *(_OWORD *)(v54 + 80);
        long long v134 = v57;
        long long v58 = *(_OWORD *)(v54 + 32);
        long long v129 = *(_OWORD *)(v54 + 16);
        long long v130 = v58;
        unint64_t v59 = v129;
        sub_1C0445048((uint64_t)&v129);
        swift_retain();
        sub_1C11137C8(v119, v59, v125);
        if (v11)
        {
          sub_1C05D9AA0((uint64_t)&v129);
          return swift_release();
        }
        swift_release();
        uint64_t v62 = v125[0];
        sub_1C1114A50((uint64_t)&v129 + 8, (uint64_t)v127, (uint64_t)&qword_1EB85EAE0, (uint64_t)&type metadata for FormatMediaTiming, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFC77FBC);
        if (sub_1C00F6584((uint64_t *)v127) == 1)
        {
          uint64_t v63 = sub_1C151A8EC();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v23, 1, 1, v63);
        }
        else
        {
          v138[5] = v127[5];
          v138[6] = v127[6];
          v139[0] = v128[0];
          *(_OWORD *)((char *)v139 + 9) = *(_OWORD *)((char *)v128 + 9);
          v138[2] = v127[2];
          v138[3] = v127[3];
          v138[4] = v127[4];
          v138[0] = v127[0];
          v138[1] = v127[1];
          sub_1C1114AC0((uint64_t)&v129 + 8);
          swift_retain();
          sub_1C1112D20((uint64_t)v138);
          uint64_t v98 = sub_1C151A8EC();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v23, 0, 1, v98);
        }
        sub_1C05D9AA0((uint64_t)&v129);
        uint64_t v99 = type metadata accessor for FormatViewBackground.Mica(0);
        uint64_t v100 = v120;
        sub_1C1114A50((uint64_t)v23, (uint64_t)v120 + *(int *)(v99 + 20), (uint64_t)&qword_1EB87B0F0, MEMORY[0x1E4FAC080], (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF4713C);
        *(void *)uint64_t v100 = v62;
        uint64_t v87 = type metadata accessor for FormatViewBackground(0);
LABEL_30:
        swift_storeEnumTagMultiPayload();
        uint64_t v26 = *(uint64_t (**)(double *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56);
        uint64_t v27 = v100;
LABEL_31:
        uint64_t v28 = 0;
        uint64_t v25 = v87;
        break;
      default:
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    uint64_t v25 = type metadata accessor for FormatViewBackground(0);
    uint64_t v26 = *(uint64_t (**)(double *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
    uint64_t v27 = v120;
    uint64_t v28 = 1;
  }
  return v26(v27, v28, 1, v25);
}

uint64_t sub_1BFF48580(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v5 + v3 <= *(void *)(v4 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v4 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v3) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v4 + 16);
  if ((*(void *)(v4 + 24) >> 1) - v8 < v3)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v9 = v4 + 24 * v8 + 32;
  if (a1 + 32 < v9 + 24 * v3 && v9 < a1 + 32 + 24 * v3) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v3)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v4;
    return result;
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v11, v3);
  uint64_t v13 = v11 + v3;
  if (!v12)
  {
    *(void *)(v4 + 16) = v13;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFF486EC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void, __n128), uint64_t (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t, void, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t))
{
  uint64_t v45 = a7;
  uint64_t v44 = a6;
  uint64_t v43 = a5;
  char v42 = a4;
  uint64_t v9 = v8;
  uint64_t v10 = v7;
  uint64_t v41 = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v47 = v13;
  uint64_t v46 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v48 = (uint64_t *)&v37[-v14];
  v55[12] = a1;
  swift_beginAccess();
  uint64_t v15 = *(void *)(v10 + 16);
  uint64_t v16 = *(void *)(v10 + 24);
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1BFF303E0(v15, v16);
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v10 + 32);
  uint64_t v20 = *(void *)(v10 + 40);
  swift_beginAccess();
  uint64_t v21 = *(void *)(v10 + 48);
  v55[0] = (uint64_t)a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v50 = sub_1C128EE58(v21, v55);
  uint64_t v22 = v9;
  swift_retain();
  uint64_t v40 = sub_1BFF303E0(v19, v20);
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_beginAccess();
  if (*(unsigned char *)(v10 + 112) == 1)
  {
    swift_bridgeObjectRetain();
    int v38 = 1;
  }
  else
  {
    uint64_t v39 = v24;
    swift_beginAccess();
    uint64_t v25 = *(void *)(v10 + 128);
    char v27 = *(unsigned char *)(v10 + 136);
    uint64_t v52 = *(void *)(v10 + 120);
    uint64_t v26 = v52;
    uint64_t v53 = v25;
    char v54 = v27;
    swift_bridgeObjectRetain();
    sub_1BFE94AB4(v26, v25, v27);
    sub_1C1517EFC();
    int v28 = FormatBoolean.value(contextLayoutOptions:)(v51);
    if (v22)
    {
      swift_release();
      sub_1BFE94AD4(v26, v25, v27);
      swift_bridgeObjectRelease();
LABEL_8:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease_n();
    }
    int v38 = v28;
    swift_release();
    sub_1BFE94AD4(v26, v25, v27);
    uint64_t v24 = v39;
  }
  swift_beginAccess();
  unint64_t v29 = *(void *)(v10 + 88);
  unint64_t v51 = v29;
  sub_1BFF35EA4(v29);
  uint64_t v30 = v48;
  sub_1BFF30600(a2, v49, v18, v48);
  if (v22)
  {
    sub_1BFF322A8(v29);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_1BFF322A8(v29);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_retain();
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v39 = sub_1C12A4C68(v32, (uint64_t)a2);
  swift_bridgeObjectRelease();
  uint64_t v33 = swift_release();
  __n128 v34 = MEMORY[0x1F4188790](v33);
  uint64_t v35 = v42(0, v34);
  uint64_t v36 = v43();
  v45(v49, v18, v38 & 1, v30, v39, v40, v24, v50, v44, &v37[-48], v35, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v46 + 8))(v30, v47);
}

uint64_t FormatBoolBinding.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int16 *)(v2 + 8);
  if (((1 << (v3 >> 13)) & 0xD7) == 0)
  {
    uint64_t v5 = result;
    if (v3 >> 13 == 3)
    {
      if ((v3 & 0x80) == 0 || ((v3 >> 7) & 0x3E | (v3 >> 5) & 1) != 7) {
        return result;
      }
    }
    else if ((v3 & 0x80) == 0)
    {
      return result;
    }
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
    if (swift_dynamicCast())
    {
      uint64_t v6 = *((void *)&v9 + 1);
      uint64_t v7 = v10;
      __swift_project_boxed_opaque_existential_1(&v8, *((uint64_t *)&v9 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v5, a2, v6, v7);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v8);
    }
    else
    {
      uint64_t v10 = 0;
      long long v8 = 0u;
      long long v9 = 0u;
      return sub_1BFE4D118((uint64_t)&v8, qword_1EB874940, (unint64_t *)&qword_1EB874938);
    }
  }
  return result;
}

void sub_1BFF48D94(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for FormatOption();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = *(_OWORD *)(a2 + 80);
  v60[4] = *(_OWORD *)(a2 + 64);
  v60[5] = v11;
  uint64_t v61 = *(void *)(a2 + 96);
  long long v12 = *(_OWORD *)(a2 + 16);
  v60[0] = *(_OWORD *)a2;
  v60[1] = v12;
  long long v13 = *(_OWORD *)(a2 + 48);
  v60[2] = *(_OWORD *)(a2 + 32);
  v60[3] = v13;
  unint64_t v52 = v2[6];
  sub_1BFF0D1B8(a1, a2);
  uint64_t v14 = v3;
  if (!v3)
  {
    uint64_t v62 = a2;
    uint64_t v44 = v10;
    swift_beginAccess();
    uint64_t v15 = v2[8];
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v45 = v8;
    if (v16)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v16; ++i)
      {
        unint64_t v18 = *(void *)(v15 + 8 * i + 32);
        unint64_t v52 = v18;
        sub_1BFF32264(v18);
        sub_1BFF0D378((uint64_t)a1, v62);
        sub_1BFF31E90(v18);
      }
      swift_bridgeObjectRelease_n();
      uint64_t v8 = v45;
    }
    swift_beginAccess();
    uint64_t v19 = v2[9];
    uint64_t v20 = *(void *)(v19 + 16);
    uint64_t v43 = v4;
    if (v20)
    {
      uint64_t v46 = a1;
      uint64_t v50 = 0;
      swift_bridgeObjectRetain_n();
      uint64_t v42 = v19;
      uint64_t v21 = (uint64_t *)(v19 + 48);
      while (1)
      {
        uint64_t v47 = v20;
        uint64_t v22 = *(v21 - 2);
        uint64_t v23 = *(v21 - 1);
        uint64_t v25 = *v21;
        uint64_t v24 = v21[1];
        uint64_t v26 = v21[2];
        uint64_t v27 = v21[3];
        unint64_t v28 = v21[4];
        uint64_t v29 = v21[5];
        unint64_t v52 = v22;
        uint64_t v53 = v23;
        uint64_t v54 = v25;
        uint64_t v55 = v24;
        uint64_t v56 = v26;
        uint64_t v57 = v27;
        unint64_t v58 = v28;
        uint64_t v59 = v29;
        uint64_t v48 = v29;
        unint64_t v49 = v28;
        sub_1BFF95098(v22, v23, v25, v24, v26, v27, v28);
        uint64_t v30 = v50;
        sub_1C05D2144(v46, v62);
        uint64_t v50 = v30;
        if (v30) {
          break;
        }
        v21 += 8;
        sub_1BFF94FE4(v22, v23, v25, v24, v26, v27, v49);
        uint64_t v20 = v47 - 1;
        if (v47 == 1)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v14 = v50;
          uint64_t v8 = v45;
          a1 = v46;
          uint64_t v4 = v43;
          uint64_t v31 = (uint64_t)v44;
          goto LABEL_12;
        }
      }
      sub_1BFF94FE4(v22, v23, v25, v24, v26, v27, v49);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v31 = (uint64_t)v44;
LABEL_12:
      swift_beginAccess();
      uint64_t v32 = v4[11];
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        uint64_t v34 = v32 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
        uint64_t v35 = *(void *)(v8 + 72);
        uint64_t v62 = v4[11];
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BFF83CC4(v34, v31, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v51 = *(void *)(v31 + 16);
          swift_retain();
          sub_1BFF2871C(a1, (uint64_t)v60);
          if (v14) {
            break;
          }
          swift_release();
          sub_1C05DDC60(v31, (uint64_t (*)(void))type metadata accessor for FormatOption);
          v34 += v35;
          if (!--v33)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_17;
          }
        }
        swift_release();
        sub_1C05DDC60(v31, (uint64_t (*)(void))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_17:
        uint64_t v36 = v43;
        swift_beginAccess();
        unint64_t v37 = v36[12];
        swift_bridgeObjectRetain();
        sub_1BFF0CA38(a1, v60, v37);
        swift_bridgeObjectRelease();
        if (!v14)
        {
          swift_beginAccess();
          unint64_t v38 = v36[14];
          if (v38 >> 62 == 1)
          {
            unint64_t v39 = *(void *)((v38 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
            uint64_t v40 = *(void *)((v38 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
            sub_1BFE6FA30(v36[14]);
            sub_1BFE6FA30(v39);
            swift_bridgeObjectRetain();
            sub_1C1144E0C((uint64_t)a1, (uint64_t)v60, v39, v40);
            sub_1BFF0056C(v39);
            swift_bridgeObjectRelease();
            sub_1BFF0056C(v38);
          }
          swift_beginAccess();
          uint64_t v41 = v36[15];
          swift_bridgeObjectRetain();
          sub_1C11402C0(a1, v60, v41);
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

double sub_1BFF49274()
{
  uint64_t v3 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v5 = v0[2];
  uint64_t v4 = v0[3];
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  double v6 = sub_1BFF493E4(v8, v3);
  swift_bridgeObjectRelease();
  swift_release();
  if (!v1)
  {
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    sub_1BFF493E4(v8, v2);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    sub_1BFF493E4(v8, v5);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    sub_1BFF493E4(v8, v4);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v6;
}

double sub_1BFF493E4(uint64_t a1, uint64_t a2)
{
  sub_1BFF4993C(0, &qword_1EB871440);
  swift_allocBox();
  sub_1C1518E4C();
  sub_1BFF4993C(0, &qword_1EB871448);
  swift_allocBox();
  sub_1C1518E4C();
  uint64_t v23 = *(void *)(a2 + 16);
  if (v23)
  {
    uint64_t v5 = a2 + 32;
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = v5 + 16 * v6;
      uint64_t v8 = *(void *)v7;
      if (*(unsigned char *)(v7 + 8)) {
        break;
      }
      uint64_t v24 = *(void *)v7;
      swift_retain();
      FormatFloat.value(contextLayoutOptions:)(a1);
      if (v2)
      {
        sub_1BFF49984(v8, 0);
LABEL_36:
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return v3;
      }
      swift_beginAccess();
      sub_1C1518E1C();
      swift_endAccess();
      sub_1BFF49984(v8, 0);
LABEL_6:
      if (++v6 == v23)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    unsigned int v9 = *(void *)v7;
    swift_beginAccess();
    sub_1C1518E0C();
    swift_endAccess();
    if ((char)v24 == 6)
    {
LABEL_3:
      LOBYTE(v24) = v9;
LABEL_4:
      swift_beginAccess();
      sub_1C1518E1C();
LABEL_5:
      swift_endAccess();
      uint64_t v5 = a2 + 32;
      goto LABEL_6;
    }
    if (v9 >= 4)
    {
      if (v9 == 4)
      {
        LOBYTE(v24) = 4;
        goto LABEL_4;
      }
      int v10 = 1;
      if ((char)v24 <= 3)
      {
LABEL_11:
        unint64_t v11 = qword_1C152AA08[(char)v24];
        if (v9 > 3)
        {
LABEL_12:
          unint64_t v12 = 2;
LABEL_20:
          if (((v11 >= v12) & ~v10) == 0)
          {
            while (1)
            {
              swift_beginAccess();
              sub_1C1518E0C();
              swift_endAccess();
              if ((unint64_t)(char)v24 > 3 || qword_1C152AA08[(char)v24] >= v12) {
                break;
              }
              sub_1BFF4A950();
              if (v2) {
                goto LABEL_36;
              }
            }
            if (v9 == 5)
            {
              swift_beginAccess();
              sub_1C1518E0C();
              swift_endAccess();
              if (v24 != 4)
              {
                swift_bridgeObjectRelease();
                type metadata accessor for FormatLayoutError();
                sub_1BFE7E51C();
                swift_allocError();
                uint64_t v20 = v19;
                *uint64_t v19 = sub_1C0BA9458(a2);
                v20[1] = v21;
                swift_storeEnumTagMultiPayload();
                swift_willThrow();
                swift_release();
                goto LABEL_39;
              }
              swift_beginAccess();
              sub_1C1518DFC();
              goto LABEL_5;
            }
          }
          goto LABEL_3;
        }
LABEL_19:
        unint64_t v12 = qword_1C152AA08[(char)v8];
        goto LABEL_20;
      }
    }
    else
    {
      int v10 = 0;
      if ((char)v24 <= 3) {
        goto LABEL_11;
      }
    }
    unint64_t v11 = 2;
    if (v9 > 3) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_29:
  while (1)
  {
    swift_beginAccess();
    char v13 = sub_1C1518E2C();
    swift_endAccess();
    if (v13) {
      break;
    }
    sub_1BFF4A950();
    if (v2) {
      goto LABEL_38;
    }
  }
  swift_beginAccess();
  sub_1C1518DFC();
  swift_endAccess();
  if ((v25 & 1) == 0)
  {
    double v3 = *(double *)&v24;
    swift_beginAccess();
    char v14 = sub_1C1518E2C();
    swift_endAccess();
    if (v14)
    {
      swift_release();
      swift_release();
      return v3;
    }
  }
  type metadata accessor for FormatLayoutError();
  sub_1BFE7E51C();
  swift_allocError();
  uint64_t v16 = v15;
  *uint64_t v15 = sub_1C0BA9458(a2);
  v16[1] = v17;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
LABEL_38:
  swift_release();
LABEL_39:
  swift_release();
  return v3;
}

void sub_1BFF4993C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C1518E5C();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1BFF49984(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

double FormatFloat.value(contextLayoutOptions:)(uint64_t a1)
{
  sub_1C02D3ED0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = type metadata accessor for FormatOption();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      uint64_t v13 = v12 & 0x1FFFFFFFFFFFFFFFLL;
      double v14 = *(double *)(a1 + 24);
      if (v14 == 0.0) {
        double v14 = 1.0;
      }
      double v3 = *(double *)(v13 + 16) / v14;
      break;
    case 2uLL:
      uint64_t v22 = *(void *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      double v3 = FormatFloat.value(contextLayoutOptions:)(a1);
      swift_release();
      if (!v2) {
        double v3 = v3 * *(double *)(a1 + 32);
      }
      break;
    case 3uLL:
      uint64_t v22 = *(void *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      double v3 = FormatFloat.value(contextLayoutOptions:)(a1);
      swift_release();
      break;
    case 4uLL:
      uint64_t v15 = v12 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v16 = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      FormatOptionCollection.subscript.getter(v17, v16, (uint64_t)v7);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_1C02D3D00((uint64_t)v7, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
        type metadata accessor for FormatLayoutError();
        sub_1BFE7E51C();
        swift_allocError();
        *unint64_t v18 = v17;
        v18[1] = v16;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C00AB068((uint64_t)v7, (uint64_t)v11);
        uint64_t v22 = *((void *)v11 + 2);
        swift_retain();
        sub_1BFF49CBC(&v22, a1, (uint64_t)v11);
        double v3 = v19;
        swift_release();
        sub_1BFEFE9E8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOption);
      }
      break;
    default:
      double v3 = *(double *)(v12 + 16);
      break;
  }
  return v3;
}

uint64_t *sub_1BFF49CBC(uint64_t *result, uint64_t a2, uint64_t a3)
{
  v134[3] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *result;
  switch((unint64_t)*result >> 60)
  {
    case 3uLL:
      uint64_t v13 = v3 & 0xFFFFFFFFFFFFFFFLL;
      if (!*(void *)(*(void *)(v13 + 24) + 16)) {
        return result;
      }
      uint64_t v120 = *(void *)(v13 + 24);
      uint64_t v14 = *(void *)(*(void *)(a2 + 40) + 16);
      swift_beginAccess();
      if (*(void *)(*(void *)(v14 + 16) + 16))
      {
        uint64_t v131 = *(void *)(a2 + 56);
        uint64_t v15 = swift_bridgeObjectRetain();
        uint64_t v16 = sub_1BFEF3B08(v15);
        sub_1BFEF3808(v16);
        uint64_t v127 = v131;
      }
      else
      {
        uint64_t v127 = sub_1BFEF3784();
      }
      uint64_t v122 = *(void *)(v120 + 16);
      if (!v122) {
        return (uint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t v121 = v120 + 32;
      swift_bridgeObjectRetain();
      uint64_t v68 = 0;
      while (1)
      {
        uint64_t v69 = (uint64_t *)(v121 + 24 * v68);
        uint64_t v71 = *v69;
        uint64_t v70 = v69[1];
        uint64_t v72 = qword_1EB87F148;
        swift_bridgeObjectRetain();
        if (v72 != -1) {
          swift_once();
        }
        uint64_t v73 = qword_1EB93C770;
        uint64_t v74 = *(void *)(qword_1EB93C770 + 24);
        swift_bridgeObjectRetain();
        sub_1C1517E7C();
        uint64_t v75 = (uint64_t *)(v73 + 16);
        swift_beginAccess();
        uint64_t v76 = *(void *)(v73 + 16);
        uint64_t v77 = *(void *)(v76 + 16);
        uint64_t v125 = v68;
        if (!v77) {
          goto LABEL_61;
        }
        swift_bridgeObjectRetain();
        unint64_t v78 = sub_1BFEF2D8C(v71, v70);
        if ((v79 & 1) == 0) {
          break;
        }
        uint64_t v80 = *(void *)(*(void *)(v76 + 56) + 24 * v78 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_73:
        swift_bridgeObjectRelease();
        sub_1C1517E8C();
        swift_bridgeObjectRelease();
        uint64_t v101 = *(void *)(v80 + 16);
        if (v101)
        {
          uint64_t v124 = v70;
          uint64_t v126 = v80;
          uint64_t v102 = (uint64_t *)(v80 + 64);
          do
          {
            uint64_t v103 = *(v102 - 1);
            uint64_t v104 = *v102;
            char v105 = *(unsigned char *)(v103 + 32);
            unsigned int v106 = v105 & 0x3F;
            unint64_t v107 = (unint64_t)((1 << v105) + 63) >> 6;
            size_t v108 = 8 * v107;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
            if (v106 <= 0xD
              || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
            {
              MEMORY[0x1F4188790](isStackAllocationSafe);
              uint64_t v61 = (char *)&v117 - ((v108 + 15) & 0x3FFFFFFFFFFFFFF0);
              bzero(v61, v108);
              id v110 = v128;
              uint64_t v111 = sub_1BFEFB09C((uint64_t)v61, v107, v103, v127);
              swift_bridgeObjectRelease();
              id v128 = v110;
              if (v110) {
                goto LABEL_93;
              }
            }
            else
            {
              uint64_t v61 = (char *)swift_slowAlloc();
              bzero(v61, v108);
              id v112 = v128;
              uint64_t v113 = sub_1BFEFB09C((uint64_t)v61, v107, v103, v127);
              id v128 = v112;
              if (v112) {
                goto LABEL_94;
              }
              uint64_t v111 = v113;
              swift_bridgeObjectRelease();
              MEMORY[0x1C18C9B00](v61, -1, -1);
            }
            char v114 = sub_1BFEFAE14(v111, v103);
            swift_release();
            if (v114)
            {
              char v115 = sub_1BFEFB810(v127, v104);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v115) {
                break;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v102 += 5;
            --v101;
          }
          while (v101);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v68 = v125 + 1;
        if (v125 + 1 == v122)
        {
          swift_bridgeObjectRelease();
          return (uint64_t *)swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
LABEL_61:
      uint64_t v123 = v74;
      swift_endAccess();
      long long v129 = (void *)v71;
      uint64_t v130 = v70;
      swift_bridgeObjectRetain();
      sub_1BFF04A00((uint64_t *)&v129, &v131);
      uint64_t v81 = v132;
      uint64_t v124 = v131;
      uint64_t v82 = v133;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v126 = v82;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      long long v129 = (void *)*v75;
      uint64_t v84 = (uint64_t)v129;
      *uint64_t v75 = 0x8000000000000000;
      uint64_t v85 = v71;
      uint64_t v86 = v70;
      unint64_t v88 = sub_1BFEF2D8C(v71, v70);
      uint64_t v89 = *(void *)(v84 + 16);
      BOOL v90 = (v87 & 1) == 0;
      uint64_t v91 = v89 + v90;
      if (__OFADD__(v89, v90)) {
        goto LABEL_90;
      }
      char v92 = v87;
      if (*(void *)(v84 + 24) < v91)
      {
        sub_1BFFDF158(v91, isUniquelyReferenced_nonNull_native);
        unint64_t v93 = sub_1BFEF2D8C(v85, v86);
        if ((v92 & 1) != (v94 & 1)) {
          goto LABEL_95;
        }
        unint64_t v88 = v93;
        uint64_t v95 = v129;
        if ((v92 & 1) == 0) {
          goto LABEL_70;
        }
LABEL_68:
        uint64_t v96 = (uint64_t *)(v95[7] + 24 * v88);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *uint64_t v96 = v124;
        v96[1] = v81;
        uint64_t v80 = v126;
        v96[2] = v126;
        uint64_t v70 = v86;
LABEL_72:
        *uint64_t v75 = (uint64_t)v95;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_73;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v95 = v129;
        if (v87) {
          goto LABEL_68;
        }
      }
      else
      {
        sub_1C106B39C();
        uint64_t v95 = v129;
        if (v92) {
          goto LABEL_68;
        }
      }
LABEL_70:
      v95[(v88 >> 6) + 8] |= 1 << v88;
      uint64_t v97 = (uint64_t *)(v95[6] + 16 * v88);
      *uint64_t v97 = v85;
      v97[1] = v86;
      uint64_t v98 = (uint64_t *)(v95[7] + 24 * v88);
      *uint64_t v98 = v124;
      v98[1] = v81;
      uint64_t v80 = v126;
      v98[2] = v126;
      uint64_t v99 = v95[2];
      BOOL v50 = __OFADD__(v99, 1);
      uint64_t v100 = v99 + 1;
      if (v50) {
        goto LABEL_92;
      }
      uint64_t v70 = v86;
      v95[2] = v100;
      swift_bridgeObjectRetain();
      goto LABEL_72;
    case 4uLL:
      uint64_t v8 = v3 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v9 = *(void *)(v8 + 16);
      if (!*(void *)(*(void *)(v8 + 24) + 16)) {
        return result;
      }
      uint64_t v118 = *(void *)(v8 + 24);
      uint64_t v119 = v9;
      uint64_t v10 = *(void *)(*(void *)(a2 + 40) + 16);
      swift_beginAccess();
      if (*(void *)(*(void *)(v10 + 16) + 16))
      {
        uint64_t v131 = *(void *)(a2 + 56);
        uint64_t v11 = swift_bridgeObjectRetain();
        uint64_t v12 = sub_1BFEF3B08(v11);
        sub_1BFEF3808(v12);
        uint64_t v127 = v131;
      }
      else
      {
        uint64_t v127 = sub_1BFEF3784();
      }
      uint64_t v121 = *(void *)(v118 + 16);
      if (!v121) {
        return (uint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t v120 = v118 + 32;
      swift_bridgeObjectRetain();
      uint64_t v17 = 0;
LABEL_16:
      unint64_t v18 = (uint64_t *)(v120 + 24 * v17);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      uint64_t v21 = v18[2];
      uint64_t v22 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      if (v22 != -1) {
        swift_once();
      }
      uint64_t v23 = qword_1EB93C770;
      uint64_t v24 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      char v25 = (uint64_t *)(v23 + 16);
      swift_beginAccess();
      uint64_t v26 = *(void *)(v23 + 16);
      uint64_t v27 = *(void *)(v26 + 16);
      uint64_t v125 = v17;
      uint64_t v122 = v21;
      if (!v27) {
        goto LABEL_22;
      }
      swift_bridgeObjectRetain();
      unint64_t v28 = sub_1BFEF2D8C(v20, v19);
      if (v29)
      {
        uint64_t v30 = *(void *)(*(void *)(v26 + 56) + 24 * v28 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_34;
      }
      swift_bridgeObjectRelease();
LABEL_22:
      uint64_t v123 = v24;
      swift_endAccess();
      long long v129 = (void *)v20;
      uint64_t v130 = v19;
      swift_bridgeObjectRetain();
      sub_1BFF04A00((uint64_t *)&v129, &v131);
      uint64_t v31 = v132;
      uint64_t v124 = v131;
      uint64_t v32 = v133;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v126 = v32;
      swift_bridgeObjectRetain();
      char v33 = swift_isUniquelyReferenced_nonNull_native();
      long long v129 = (void *)*v25;
      uint64_t v34 = (uint64_t)v129;
      *char v25 = 0x8000000000000000;
      uint64_t v35 = v20;
      uint64_t v36 = v19;
      unint64_t v38 = sub_1BFEF2D8C(v20, v19);
      uint64_t v39 = *(void *)(v34 + 16);
      BOOL v40 = (v37 & 1) == 0;
      uint64_t v41 = v39 + v40;
      if (__OFADD__(v39, v40))
      {
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
      }
      char v42 = v37;
      if (*(void *)(v34 + 24) >= v41)
      {
        if (v33)
        {
          uint64_t v45 = v129;
          if ((v37 & 1) == 0) {
            goto LABEL_31;
          }
        }
        else
        {
          sub_1C106B39C();
          uint64_t v45 = v129;
          if ((v42 & 1) == 0) {
            goto LABEL_31;
          }
        }
LABEL_29:
        uint64_t v46 = (uint64_t *)(v45[7] + 24 * v38);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *uint64_t v46 = v124;
        v46[1] = v31;
        uint64_t v30 = v126;
        v46[2] = v126;
        uint64_t v19 = v36;
        goto LABEL_33;
      }
      sub_1BFFDF158(v41, v33);
      unint64_t v43 = sub_1BFEF2D8C(v35, v36);
      if ((v42 & 1) != (v44 & 1)) {
        goto LABEL_95;
      }
      unint64_t v38 = v43;
      uint64_t v45 = v129;
      if (v42) {
        goto LABEL_29;
      }
LABEL_31:
      v45[(v38 >> 6) + 8] |= 1 << v38;
      uint64_t v47 = (uint64_t *)(v45[6] + 16 * v38);
      *uint64_t v47 = v35;
      v47[1] = v36;
      uint64_t v48 = (uint64_t *)(v45[7] + 24 * v38);
      *uint64_t v48 = v124;
      v48[1] = v31;
      uint64_t v30 = v126;
      v48[2] = v126;
      uint64_t v49 = v45[2];
      BOOL v50 = __OFADD__(v49, 1);
      uint64_t v51 = v49 + 1;
      if (v50) {
        goto LABEL_91;
      }
      uint64_t v19 = v36;
      void v45[2] = v51;
      swift_bridgeObjectRetain();
LABEL_33:
      *char v25 = (uint64_t)v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
LABEL_34:
      swift_bridgeObjectRelease();
      sub_1C1517E8C();
      swift_bridgeObjectRelease();
      uint64_t v52 = *(void *)(v30 + 16);
      if (!v52)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      uint64_t v124 = v19;
      uint64_t v126 = v30;
      uint64_t v53 = (uint64_t *)(v30 + 64);
      while (1)
      {
        uint64_t v54 = *(v53 - 1);
        uint64_t v55 = *v53;
        char v56 = *(unsigned char *)(v54 + 32);
        unsigned int v57 = v56 & 0x3F;
        unint64_t v58 = (unint64_t)((1 << v56) + 63) >> 6;
        size_t v59 = 8 * v58;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v60 = swift_bridgeObjectRetain();
        if (v57 <= 0xD) {
          break;
        }
        uint64_t v60 = swift_stdlib_isStackAllocationSafe();
        if (v60) {
          break;
        }
        uint64_t v61 = (char *)swift_slowAlloc();
        bzero(v61, v59);
        id v64 = v128;
        uint64_t v65 = sub_1BFEFB09C((uint64_t)v61, v58, v54, v127);
        id v128 = v64;
        if (v64) {
          goto LABEL_94;
        }
        uint64_t v63 = v65;
        swift_bridgeObjectRelease();
        MEMORY[0x1C18C9B00](v61, -1, -1);
LABEL_44:
        char v66 = sub_1BFEFAE14(v63, v54);
        swift_release();
        if (v66)
        {
          char v67 = sub_1BFEFB810(v127, v55);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v67)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v119 = v122;
LABEL_15:
            uint64_t v17 = v125 + 1;
            if (v125 + 1 == v121)
            {
              swift_bridgeObjectRelease();
              return (uint64_t *)swift_bridgeObjectRelease();
            }
            goto LABEL_16;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v53 += 5;
        if (!--v52) {
          goto LABEL_14;
        }
      }
      MEMORY[0x1F4188790](v60);
      uint64_t v61 = (char *)&v117 - ((v59 + 15) & 0x3FFFFFFFFFFFFFF0);
      bzero(v61, v59);
      id v62 = v128;
      uint64_t v63 = sub_1BFEFB09C((uint64_t)v61, v58, v54, v127);
      swift_bridgeObjectRelease();
      id v128 = v62;
      if (!v62) {
        goto LABEL_44;
      }
LABEL_93:
      id v116 = v128;
      swift_willThrow();

      __break(1u);
LABEL_94:
      swift_bridgeObjectRelease();

      MEMORY[0x1C18C9B00](v61, -1, -1);
      __break(1u);
LABEL_95:
      uint64_t result = (uint64_t *)sub_1C1520CFC();
      __break(1u);
      return result;
    case 8uLL:
      v134[0] = *(void *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      sub_1BFF49CBC(v134, a2, a3);
      swift_release_n();
      return (uint64_t *)swift_release();
    default:
      type metadata accessor for FormatLayoutError();
      sub_1BFE7E51C();
      uint64_t v6 = (void *)swift_allocError();
      sub_1C019FFF0(a3, v7);
      swift_storeEnumTagMultiPayload();
      id v128 = v6;
      return (uint64_t *)swift_willThrow();
  }
}

uint64_t sub_1BFF4A950()
{
  sub_1BFF4993C(0, &qword_1EB871440);
  swift_projectBox();
  sub_1BFF4993C(0, &qword_1EB871448);
  swift_projectBox();
  swift_beginAccess();
  sub_1C1518DFC();
  swift_endAccess();
  if (v8)
  {
LABEL_3:
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    uint64_t v1 = v0;
    uint64_t v2 = swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C0BA9458(v2);
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    v1[1] = v5;
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    sub_1C1518DFC();
    swift_endAccess();
    swift_beginAccess();
    sub_1C1518DFC();
    swift_endAccess();
    switch(v7)
    {
      case 4:
      case 5:
      case 6:
        goto LABEL_3;
      default:
        swift_beginAccess();
        sub_1C1518E1C();
        uint64_t result = swift_endAccess();
        break;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FormatEquationOperator(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_1BFF4ACFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v8 = v7;
  uint64_t v9 = v6;
  swift_beginAccess();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1BFF1B2E4(v11, 0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v13 = *(void *)(v6 + 16);
  uint64_t v14 = *(void *)(v6 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v49 = sub_1BFF303E0(v13, v14);
  uint64_t v16 = v15;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  unint64_t v18 = (uint64_t *)(*(void *)(v12 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  uint64_t v21 = *(void *)(v9 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C128F0D8(v21, v12, v20, v19, (void (*)(uint64_t))sub_1BFF06678, sub_1BFF06050, (uint64_t (*)(uint64_t, uint64_t))sub_1BFF070E0, (void (*)(void))type metadata accessor for FormatViewNodeStyle, (void (*)(uint64_t))sub_1BFF036B8);
  if (v8)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v44 = v16;
    uint64_t v45 = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v23 = (uint64_t *)(*(void *)(v12 + v17) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    uint64_t v26 = *(void *)(v9 + 64);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_1BFEF32C8(v26, v12, v25, v24, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v28 && (swift_beginAccess(), (uint64_t v29 = *(void *)(v28 + 72)) != 0) && *(void *)(v29 + 16))
    {
      uint64_t v30 = *(void *)(v28 + 56);
      uint64_t v43 = *(void *)(v28 + 48);
      int v31 = *(unsigned __int8 *)(v28 + 64);
      swift_retain();
      swift_retain();
      uint64_t v32 = swift_bridgeObjectRetain();
      uint64_t v36 = sub_1C12A4950(v32, v12);
      swift_bridgeObjectRelease();
      swift_release();
      char v37 = v31;
      if (v31) {
        uint64_t v38 = 0;
      }
      else {
        uint64_t v38 = v30;
      }
      if (v31) {
        uint64_t v39 = 0;
      }
      else {
        uint64_t v39 = v43;
      }
      type metadata accessor for FormatAnimationData();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v28;
      *(void *)(v40 + 24) = v39;
      *(void *)(v40 + 32) = v38;
      *(unsigned char *)(v40 + 40) = v37;
      *(void *)(v40 + 48) = v36;
      uint64_t v33 = a3;
      uint64_t v41 = *(void *)(a3 + 24);
      swift_beginAccess();
      swift_retain_n();
      uint64_t v34 = v44;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v50 = *(void *)(v41 + 32);
      *(void *)(v41 + 32) = 0x8000000000000000;
      sub_1C0062D34(v40, v49, v44, isUniquelyReferenced_nonNull_native);
      *(void *)(v41 + 32) = v50;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release_n();
    }
    else
    {
      uint64_t v33 = a3;
      uint64_t v34 = v44;
    }
    swift_unownedRetainStrong();
    swift_bridgeObjectRetain();
    swift_unownedRetain();
    swift_release();
    uint64_t v35 = (void *)swift_allocObject();
    void v35[2] = v49;
    v35[3] = v34;
    v35[4] = v9;
    v35[5] = v12;
    v35[6] = v45;
    v35[7] = a2;
    v35[8] = v33;
    a5(0);
    a6();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1C15173AC();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t FormatAccessibilityNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v43 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v42 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v42 - v11;
  sub_1C08666F8();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1C0866820();
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C085F050(&qword_1EB892030, (void (*)(uint64_t))sub_1C0866820);
  sub_1BFEFBD78(v4, v21, v16, v4, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v15, v20, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v23 = v2[2];
  uint64_t v22 = v2[3];
  uint64_t v24 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v24 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_1C151928C();
  uint64_t v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1EB93CAB0);
  uint64_t v27 = *(void *)(v25 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  uint64_t v44 = v27 + 16;
  uint64_t v45 = v28;
  v28(v12, v26, v25);
  uint64_t v46 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = v47;
  sub_1C06CE300(v23, v22, 0, 0, 0, (uint64_t)v12, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v29)
  {
    uint64_t v32 = (uint64_t)v15;
  }
  else
  {
    swift_beginAccess();
    unint64_t v30 = v2[4];
    char v31 = *((unsigned char *)v2 + 40);
    v45(v9, v26, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BFF4CEEC(v30, v31);
    sub_1C06B5F30(v30, v31, 1, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
    sub_1BFF4BCA0(v30, v31);
    uint64_t v34 = v45;
    uint64_t v47 = v15;
    swift_beginAccess();
    uint64_t v35 = v2[6];
    uint64_t v36 = v2[7];
    uint64_t v37 = v2[8];
    __int16 v38 = *((_WORD *)v2 + 36);
    sub_1BFF4DC7C(v35, v36, v37, v38);
    if (qword_1EB8875F8 != -1) {
      swift_once();
    }
    uint64_t v39 = __swift_project_value_buffer(v25, (uint64_t)qword_1EB93C9F0);
    uint64_t v40 = (uint64_t)v43;
    v34(v43, v39, v25);
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = (uint64_t)v47;
    sub_1C06FD85C(v35, v36, v37, v38, 2, 0, 0, v40);
    sub_1BFEFEB68(v40, type metadata accessor for FormatVersionRequirement);
    sub_1BFF4BC8C(v35, v36, v37, v38);
    uint64_t v32 = v41;
  }
  return sub_1BFEFEB68(v32, (uint64_t (*)(void))sub_1C08666F8);
}

uint64_t sub_1BFF4B7A0(void *a1)
{
  uint64_t v2 = v1;
  sub_1C0906084();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0866820();
  sub_1C085F050(&qword_1EB892030, (void (*)(uint64_t))sub_1C0866820);
  sub_1C1520EBC();
  if (v1)
  {
LABEL_10:
    sub_1C0038728(a1, v2);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v2;
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = sub_1C1520EAC();
  char v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  if (v10)
  {
    uint64_t v11 = sub_1C152070C();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v13 = (unsigned char *)(v11 + 48);
      while (*v13 != 1)
      {
        v13 += 24;
        if (!--v12) {
          goto LABEL_7;
        }
      }
      uint64_t v17 = *((void *)v13 - 1);
      uint64_t v33 = *((void *)v13 - 2);
      swift_bridgeObjectRetain_n();
      uint64_t v18 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v18);
      *(void *)&v28[-32] = &_s10CodingKeysON_241;
      *(void *)&v28[-24] = sub_1C08668A4();
      *(void *)&v28[-16] = sub_1BFF4BCD4();
      *(void *)&v28[-8] = sub_1C08668F8();
      swift_getKeyPath();
      swift_retain();
      uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B6DCC0);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v2 = swift_allocError();
      uint64_t v20 = v33;
      *(void *)uint64_t v21 = v33;
      *(void *)(v21 + 8) = v17;
      *(void *)(v21 + 16) = v19;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v17, 1);
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = sub_1C07F0DDC((uint64_t)v8, 0, 0, 0, (void (*)(void, __n128))sub_1C0906084);
  uint64_t v16 = v15;
  long long v36 = xmmword_1C153AB20;
  LOBYTE(v37) = 0;
  sub_1BFF4D12C();
  sub_1C15206EC();
  uint64_t v33 = v34;
  int v23 = BYTE8(v34);
  long long v34 = xmmword_1C1557FA0;
  char v35 = 0;
  sub_1BFE3D014();
  sub_1C152065C();
  long long v31 = v36;
  uint64_t v30 = v37;
  int v32 = v38;
  type metadata accessor for FormatAccessibilityNode();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  int v29 = v23;
  *(void *)(v2 + 48) = 0;
  *(_WORD *)(v2 + 72) = -1024;
  swift_beginAccess();
  *(void *)(v2 + 16) = v14;
  *(void *)(v2 + 24) = v16;
  *(void *)(v2 + 32) = v33;
  *(unsigned char *)(v2 + 40) = v29;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v2 + 48);
  uint64_t v25 = *(void *)(v2 + 56);
  uint64_t v26 = *(void *)(v2 + 64);
  *(_OWORD *)(v2 + 48) = v31;
  *(void *)(v2 + 64) = v30;
  __int16 v27 = *(_WORD *)(v2 + 72);
  *(_WORD *)(v2 + 72) = v32;
  sub_1BFF4BC8C(v24, v25, v26, v27);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t sub_1BFF4BC8C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if ((unsigned __int16)((unsigned __int16)a4 >> 10) <= 0x3Eu) {
    return sub_1BFF51E5C(a1, a2, a3, a4);
  }
  return a1;
}

unint64_t sub_1BFF4BCA0(unint64_t result, char a2)
{
  if (a2) {
    int v2 = 4;
  }
  else {
    int v2 = 0;
  }
  if (((result >> 60) & 3 | v2) <= 5) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1BFF4BCD4()
{
  unint64_t result = qword_1EB88ACD0;
  if (!qword_1EB88ACD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88ACD0);
  }
  return result;
}

unint64_t sub_1BFF4BD28(uint64_t a1, uint64_t a2)
{
  return sub_1BFF4BD4C(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

unint64_t sub_1BFF4BD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v88 = a4;
  uint64_t v85 = a7;
  uint64_t v86 = a2;
  uint64_t v87 = a1;
  sub_1BFF3D95C();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v76 - v14;
  uint64_t v79 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v16 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v18 = (uint64_t *)((char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_unownedRetainStrong();
  swift_beginAccess();
  unsigned int v19 = *(unsigned __int16 *)(a3 + 72);
  uint64_t v82 = v15;
  uint64_t v83 = v18;
  uint64_t v81 = v12;
  uint64_t v80 = v16;
  if (v19 >> 10 < 0x3F)
  {
    uint64_t v21 = a6;
    uint64_t v22 = v89;
    uint64_t v23 = a5;
    uint64_t v24 = *(void *)(a3 + 48);
    uint64_t v25 = *(void *)(a3 + 56);
    uint64_t v26 = *(void *)(a3 + 64);
    sub_1BFF523F0(v24, v25, v26, v19);
    swift_release();
    if ((v19 & 0x8000) != 0)
    {
      uint64_t v91 = v24;
      uint64_t v92 = v25;
      uint64_t v93 = v26;
      LOWORD(v94) = v19 & 0x7FFF;
      sub_1C032E7BC(v24, v25, v26, v19, BYTE1(v19) & 0x7F, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
      uint64_t v28 = sub_1BFF5AB10(v88);
      uint64_t v89 = v22;
      if (v22)
      {
        sub_1BFF4BC8C(v24, v25, v26, v19);
        return sub_1BFF4BC8C(v24, v25, v26, v19);
      }
      uint64_t v31 = v28;
      sub_1BFF4BC8C(v24, v25, v26, v19);
      sub_1BFF4BC8C(v24, v25, v26, v19);
      int v84 = 1;
      uint64_t v20 = v31;
    }
    else
    {
      sub_1C1517EFC();
      double v27 = sub_1BFF493E4(v91, v24);
      uint64_t v89 = v22;
      if (v22)
      {
        swift_release();
        return sub_1BFF4BC8C(v24, v25, v26, v19);
      }
      uint64_t v30 = *(void *)&v27;
      swift_release();
      sub_1BFF4BC8C(v24, v25, v26, v19);
      int v84 = 0;
      uint64_t v20 = v30;
    }
    a5 = v23;
    a6 = v21;
    goto LABEL_12;
  }
  swift_release();
  uint64_t v20 = 0;
  int v84 = 255;
LABEL_12:
  swift_unownedRetainStrong();
  swift_beginAccess();
  unint64_t v32 = *(void *)(a3 + 32);
  int v33 = *(unsigned __int8 *)(a3 + 40);
  if (*(unsigned char *)(a3 + 40)) {
    int v34 = 4;
  }
  else {
    int v34 = 0;
  }
  sub_1BFF4CEEC(*(void *)(a3 + 32), *(unsigned char *)(a3 + 40));
  swift_release();
  switch((v32 >> 60) & 3 | v34)
  {
    case 1uLL:
      int v78 = v33;
      uint64_t v77 = v20;
      unint64_t v43 = v32 & 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v44 = type metadata accessor for FormatAccessibilityLayoutValue();
      uint64_t v45 = swift_allocObject();
      uint64_t v46 = v45;
      *(void *)(v45 + 16) = a5;
      *(void *)(v45 + 24) = a6;
      char v47 = 19;
      goto LABEL_26;
    case 2uLL:
      int v78 = v33;
      uint64_t v77 = v20;
      unint64_t v43 = v32 & 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v44 = type metadata accessor for FormatAccessibilityLayoutValue();
      uint64_t v45 = swift_allocObject();
      uint64_t v46 = v45;
      *(void *)(v45 + 16) = a5;
      *(void *)(v45 + 24) = a6;
      char v47 = 20;
      goto LABEL_26;
    case 3uLL:
      int v78 = v33;
      uint64_t v77 = v20;
      uint64_t v48 = type metadata accessor for FormatAccessibilityLayoutValue();
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = a5;
      *(void *)(v49 + 24) = a6;
      *(unsigned char *)(v49 + 32) = 21;
      uint64_t v96 = v87;
      swift_getKeyPath();
      uint64_t v94 = v48;
      uint64_t v95 = sub_1BFF4CF20(&qword_1EB88D700, 255, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue);
      uint64_t v91 = v49;
      sub_1BFF1D63C();
      sub_1BFF4CF20(&qword_1EB884D70, 255, (void (*)(uint64_t))sub_1BFF1D63C);
      uint64_t v50 = a5;
      sub_1BFF4CF20(&qword_1EB884D90, 255, (void (*)(uint64_t))sub_1BFE13A64);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C151732C();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
      uint64_t v51 = v77;
      unint64_t v90 = v32 & 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v91 = v77;
      unsigned __int8 v52 = v84;
      LOBYTE(v92) = v84;
      uint64_t v53 = v89;
      sub_1BFF4D180(v88, v86, (uint64_t)&v91, (unint64_t *)&v96);
      uint64_t v89 = v53;
      if (v53)
      {
        swift_release();
        sub_1BFF4D0F0(v51, v52);
        return sub_1BFF4BCA0(v32, v78);
      }
      uint64_t v88 = v96;
      char v67 = v83;
      *uint64_t v83 = v96;
      uint64_t v68 = v79;
      swift_storeEnumTagMultiPayload();
      uint64_t v69 = (uint64_t)v67;
      uint64_t v70 = (uint64_t)v82;
      sub_1BFF376C4(v69, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v70, 0, 1, v68);
      uint64_t v71 = (uint64_t)v81;
      sub_1BFF376C4(v70, (uint64_t)v81, (uint64_t (*)(void))sub_1BFF3D95C);
      swift_beginAccess();
      v88 &= ~0x8000000000000000;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF3D9D4(v71, v50, a6);
      swift_endAccess();
      sub_1BFF3BECC(v70, (uint64_t (*)(void))sub_1BFF3D95C);
      sub_1BFF4D0F0(v51, v52);
      sub_1BFF4BCA0(v32, v78);
      swift_release();
      swift_release();
      uint64_t v72 = (uint64_t)v83;
      goto LABEL_34;
    case 4uLL:
      int v78 = v33;
      uint64_t v54 = type metadata accessor for FormatAccessibilityLayoutValue();
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = a5;
      *(void *)(v55 + 24) = a6;
      *(unsigned char *)(v55 + 32) = 22;
      uint64_t v96 = v87;
      swift_getKeyPath();
      uint64_t v94 = v54;
      uint64_t v95 = sub_1BFF4CF20(&qword_1EB88D700, 255, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue);
      uint64_t v91 = v55;
      sub_1BFF1D63C();
      sub_1BFF4CF20(&qword_1EB884D70, 255, (void (*)(uint64_t))sub_1BFF1D63C);
      sub_1BFF4CF20(&qword_1EB884D90, 255, (void (*)(uint64_t))sub_1BFE13A64);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v87 = a5;
      sub_1C151732C();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
      unint64_t v90 = v32;
      uint64_t v91 = v20;
      unsigned __int8 v37 = v84;
      LOBYTE(v92) = v84;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v56 = v89;
      sub_1BFF4D180(v88, v86, (uint64_t)&v91, (unint64_t *)&v96);
      uint64_t v89 = v56;
      if (!v56)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v88 = v96;
        uint64_t v39 = (uint64_t)v83;
        *uint64_t v83 = v96;
        uint64_t v73 = v79;
        swift_storeEnumTagMultiPayload();
        uint64_t v74 = (uint64_t)v82;
        sub_1BFF376C4(v39, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v74, 0, 1, v73);
        uint64_t v75 = (uint64_t)v81;
        sub_1BFF376C4(v74, (uint64_t)v81, (uint64_t (*)(void))sub_1BFF3D95C);
        swift_beginAccess();
        v88 &= ~0x8000000000000000;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BFF3D9D4(v75, v87, a6);
        swift_endAccess();
        sub_1BFF3BECC(v74, (uint64_t (*)(void))sub_1BFF3D95C);
        uint64_t v63 = v20;
        unsigned __int8 v64 = v37;
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
LABEL_24:
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BFF4BCA0(v32, v78);
      unint64_t result = sub_1BFF4D0F0(v20, v37);
      break;
    case 5uLL:
      int v78 = v33;
      uint64_t v77 = v20;
      unint64_t v43 = v32 & 0xCFFFFFFFFFFFFFFFLL;
      uint64_t v44 = type metadata accessor for FormatAccessibilityLayoutValue();
      uint64_t v45 = swift_allocObject();
      uint64_t v46 = v45;
      *(void *)(v45 + 16) = a5;
      *(void *)(v45 + 24) = a6;
      char v47 = 23;
LABEL_26:
      *(unsigned char *)(v45 + 32) = v47;
      uint64_t v96 = v87;
      swift_getKeyPath();
      uint64_t v94 = v44;
      uint64_t v95 = sub_1BFF4CF20(&qword_1EB88D700, 255, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue);
      uint64_t v91 = v46;
      sub_1BFF1D63C();
      sub_1BFF4CF20(&qword_1EB884D70, 255, (void (*)(uint64_t))sub_1BFF1D63C);
      sub_1BFF4CF20(&qword_1EB884D90, 255, (void (*)(uint64_t))sub_1BFE13A64);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v87 = a5;
      sub_1C151732C();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
      uint64_t v57 = v77;
      unint64_t v90 = v43;
      uint64_t v91 = v77;
      unsigned __int8 v58 = v84;
      LOBYTE(v92) = v84;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v59 = v89;
      sub_1BFF4D180(v88, v86, (uint64_t)&v91, (unint64_t *)&v96);
      uint64_t v89 = v59;
      if (v59)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1BFF4BCA0(v32, v78);
        unint64_t result = sub_1BFF4D0F0(v57, v58);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v88 = v96;
        uint64_t v39 = (uint64_t)v83;
        *uint64_t v83 = v96;
        uint64_t v60 = v79;
        swift_storeEnumTagMultiPayload();
        uint64_t v61 = (uint64_t)v82;
        sub_1BFF376C4(v39, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v61, 0, 1, v60);
        uint64_t v62 = (uint64_t)v81;
        sub_1BFF376C4(v61, (uint64_t)v81, (uint64_t (*)(void))sub_1BFF3D95C);
        swift_beginAccess();
        v88 &= ~0x8000000000000000;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BFF3D9D4(v62, v87, a6);
        swift_endAccess();
        sub_1BFF3BECC(v61, (uint64_t (*)(void))sub_1BFF3D95C);
        uint64_t v63 = v57;
        unsigned __int8 v64 = v58;
LABEL_32:
        sub_1BFF4D0F0(v63, v64);
        sub_1BFF4BCA0(v32, v78);
LABEL_33:
        swift_release();
        swift_release();
        uint64_t v72 = v39;
LABEL_34:
        unint64_t result = sub_1BFF3BECC(v72, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
      }
      break;
    case 6uLL:
      uint64_t v65 = type metadata accessor for FormatAccessibilityLayoutValue();
      uint64_t v66 = swift_allocObject();
      *(void *)(v66 + 16) = a5;
      *(void *)(v66 + 24) = a6;
      *(unsigned char *)(v66 + 32) = v32;
      uint64_t v96 = v87;
      swift_getKeyPath();
      uint64_t v94 = v65;
      uint64_t v95 = sub_1BFF4CF20(&qword_1EB88D700, 255, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue);
      uint64_t v91 = v66;
      sub_1BFF1D63C();
      sub_1BFF4CF20(&qword_1EB884D70, 255, (void (*)(uint64_t))sub_1BFF1D63C);
      sub_1BFF4CF20(&qword_1EB884D90, 255, (void (*)(uint64_t))sub_1BFE13A64);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C151732C();
      sub_1BFF4D0F0(v20, v84);
      swift_release();
      swift_release();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
    default:
      int v78 = v33;
      uint64_t v35 = type metadata accessor for FormatAccessibilityLayoutValue();
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = a5;
      *(void *)(v36 + 24) = a6;
      *(unsigned char *)(v36 + 32) = 18;
      uint64_t v96 = v87;
      swift_getKeyPath();
      uint64_t v94 = v35;
      uint64_t v95 = sub_1BFF4CF20(&qword_1EB88D700, 255, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue);
      uint64_t v91 = v36;
      sub_1BFF1D63C();
      sub_1BFF4CF20(&qword_1EB884D70, 255, (void (*)(uint64_t))sub_1BFF1D63C);
      sub_1BFF4CF20(&qword_1EB884D90, 255, (void (*)(uint64_t))sub_1BFE13A64);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v87 = a5;
      sub_1C151732C();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
      unint64_t v90 = v32;
      uint64_t v91 = v20;
      unsigned __int8 v37 = v84;
      LOBYTE(v92) = v84;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v38 = v89;
      sub_1BFF4D180(v88, v86, (uint64_t)&v91, (unint64_t *)&v96);
      swift_bridgeObjectRelease();
      uint64_t v89 = v38;
      if (v38) {
        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
      uint64_t v88 = v96;
      uint64_t v39 = (uint64_t)v83;
      *uint64_t v83 = v96;
      uint64_t v40 = v79;
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = (uint64_t)v82;
      sub_1BFF376C4(v39, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v41, 0, 1, v40);
      uint64_t v42 = (uint64_t)v81;
      sub_1BFF376C4(v41, (uint64_t)v81, (uint64_t (*)(void))sub_1BFF3D95C);
      swift_beginAccess();
      v88 &= ~0x8000000000000000;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF3D9D4(v42, v87, a6);
      swift_endAccess();
      sub_1BFF3BECC(v41, (uint64_t (*)(void))sub_1BFF3D95C);
      sub_1BFF4BCA0(v32, v78);
      sub_1BFF4D0F0(v20, v37);
      goto LABEL_33;
  }
  return result;
}

unint64_t sub_1BFF4CEEC(unint64_t result, char a2)
{
  if (a2) {
    int v2 = 4;
  }
  else {
    int v2 = 0;
  }
  if (((result >> 60) & 3 | v2) <= 5) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BFF4CF20(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatComputed.__deallocating_deinit()
{
  FormatComputed.deinit();
  return swift_deallocClassInstance();
}

uint64_t *FormatComputed.deinit()
{
  uint64_t v1 = *v0;
  sub_1BFF4D0F0(v0[2], *((unsigned char *)v0 + 24));
  uint64_t v2 = *(void *)(v1 + 80);
  int v3 = *(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8);
  v3((char *)v0 + *(void *)(*v0 + 96), v2);
  uint64_t v4 = (uint64_t)v0 + *(void *)(*v0 + 104);
  uint64_t v5 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  v3((char *)v0 + *(void *)(*v0 + 112), v2);
  sub_1BFC3E5C0(*(uint64_t *)((char *)v0 + *(void *)(*v0 + 120)));
  return v0;
}

uint64_t sub_1BFF4D0F0(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1BFF51CE0(result, a2 & 1);
  }
  return result;
}

uint64_t type metadata accessor for FormatAccessibilityLayoutValue()
{
  return self;
}

unint64_t sub_1BFF4D12C()
{
  unint64_t result = qword_1EB878A20;
  if (!qword_1EB878A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878A20);
  }
  return result;
}

uint64_t sub_1BFF4D180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v61 - v16;
  uint64_t v18 = *(void *)a3;
  int v19 = *(unsigned __int8 *)(a3 + 8);
  uint64_t v20 = *v4;
  unint64_t v21 = (unint64_t)*v4 >> 62;
  if (v21)
  {
    if (v21 == 1)
    {
      uint64_t v22 = (void *)(v20 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v23 = v22[2];
      uint64_t v24 = v22[3];
      uint64_t v25 = v22[4];
      MEMORY[0x1F4188790](v15);
      *(&v61 - 4) = a1;
      *(&v61 - 3) = a2;
      *(&v61 - 2) = v26;
      *((unsigned char *)&v61 - 8) = v19;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      double v27 = sub_1C125C29C(a1, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C11E44D4, (uint64_t)(&v61 - 6), v23, v24, v25);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      if (!v5)
      {
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v27;
        *a4 = result | 0x8000000000000000;
      }
    }
    else
    {
      uint64_t v66 = (uint64_t *)a4;
      uint64_t v61 = v18;
      uint64_t v62 = v5;
      uint64_t v34 = v20 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v36 = *(void *)(v34 + 16);
      uint64_t v35 = *(void *)(v34 + 24);
      uint64_t v63 = v15;
      uint64_t v64 = v11;
      swift_bridgeObjectRetain();
      int v37 = v19;
      uint64_t v38 = sub_1BFF4E2E4();
      uint64_t v39 = (uint64_t *)(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
      swift_beginAccess();
      uint64_t v41 = *v39;
      uint64_t v40 = v39[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_1BFF5177C(v36, v35, a1, v41, v40);
      uint64_t v44 = v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v45 = (uint64_t (*)@<X0>(uint64_t *@<X8>))swift_allocObject();
      *((void *)v45 + 2) = v38;
      *((void *)v45 + 3) = v36;
      *((void *)v45 + 4) = v35;
      uint64_t v46 = v61;
      sub_1BFF4E2CC(v61, v37);
      swift_retain();
      sub_1C151630C();
      sub_1BFF51C3C();
      char v47 = (char *)swift_allocObject();
      *((void *)v47 + 4) = v42;
      *((void *)v47 + 5) = v44;
      uint64_t v48 = (uint64_t *)&v47[*(void *)(*(void *)v47 + 112)];
      *uint64_t v48 = v42;
      v48[1] = v44;
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v47[*(void *)(*(void *)v47 + 104)], v13, v63);
      *((void *)v47 + 2) = v46;
      v47[24] = v37;
      swift_bridgeObjectRetain();
      if (v37 == 255)
      {
        swift_release();
        uint64_t v49 = 0;
        uint64_t v45 = 0;
      }
      else
      {
        uint64_t v49 = sub_1C11E447C;
      }
      uint64_t v57 = swift_allocObject();
      unsigned __int8 v58 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v47[*(void *)(*(void *)v47 + 120)];
      *unsigned __int8 v58 = v49;
      v58[1] = v45;
      uint64_t result = swift_release();
      *(void *)(v57 + 16) = v47;
      *uint64_t v66 = v57;
    }
  }
  else
  {
    uint64_t v63 = v15;
    uint64_t v64 = v11;
    uint64_t v29 = v18;
    uint64_t v66 = (uint64_t *)a4;
    sub_1C086A198(v20 + 16, (uint64_t)v65);
    sub_1C086A1F4((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF2A99C);
    uint64_t v30 = sub_1BFF4E2E4();
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = sub_1BFF4E948(a1, 0);
    if (v5)
    {
      swift_release();
      sub_1C086A1F4((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF0084C);
      return swift_deallocUninitializedObject();
    }
    else
    {
      uint64_t v50 = v32;
      uint64_t v51 = v33;
      uint64_t v62 = v31;
      uint64_t v52 = swift_allocObject();
      sub_1C086A198((uint64_t)v65, v52 + 16);
      *(void *)(v52 + 72) = v30;
      swift_retain();
      uint64_t v53 = v29;
      sub_1BFF4E2CC(v29, v19);
      sub_1C151630C();
      sub_1BFF51C3C();
      uint64_t v54 = (char *)swift_allocObject();
      *((void *)v54 + 4) = v50;
      *((void *)v54 + 5) = v51;
      uint64_t v55 = (uint64_t *)&v54[*(void *)(*(void *)v54 + 112)];
      *uint64_t v55 = v50;
      v55[1] = v51;
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v54[*(void *)(*(void *)v54 + 104)], v17, v63);
      *((void *)v54 + 2) = v53;
      v54[24] = v19;
      swift_bridgeObjectRetain();
      if (v19 == 255)
      {
        swift_release();
        uint64_t v56 = 0;
        uint64_t v52 = 0;
      }
      else
      {
        uint64_t v56 = sub_1C11E4574;
      }
      uint64_t v59 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v54[*(void *)(*(void *)v54 + 120)];
      *uint64_t v59 = v56;
      v59[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v52;
      uint64_t result = swift_release();
      uint64_t v60 = v62;
      *(void *)(v62 + 16) = v54;
      *uint64_t v66 = v60;
    }
  }
  return result;
}

void sub_1BFF4D720(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v60 = a4;
  uint64_t v7 = sub_1C151631C();
  uint64_t v57 = *(void *)(v7 - 8);
  uint64_t v58 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v56 = &v47[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFF31D5C(0, (unint64_t *)&qword_1EB871380, MEMORY[0x1E4FABA40]);
  uint64_t v54 = *(v9 - 1);
  id v55 = v9;
  uint64_t v10 = *(void *)(v54 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v47[-v11];
  swift_unownedRetainStrong();
  uint64_t v13 = *(void *)(a1 + 72);
  swift_retain();
  swift_release();
  uint64_t v61 = v13;
  uint64_t v14 = a2;
  uint64_t v15 = v59;
  uint64_t v16 = sub_1BFF4DC90(a2, a3, v60, 0);
  swift_release();
  if (v15) {
    return;
  }
  uint64_t v59 = (void *)v16;
  uint64_t v17 = (uint64_t)v14;
  uint64_t v51 = a3;
  uint64_t v52 = v10;
  uint64_t v50 = v12;
  swift_unownedRetainStrong();
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v18 = *(void *)(a1 + 88);
  uint64_t v20 = *(void *)(a1 + 96);
  unsigned int v21 = *(unsigned __int16 *)(a1 + 104);
  sub_1BFF4DC7C(v19, v18, v20, *(_WORD *)(a1 + 104));
  swift_release();
  if (v21 >> 10 <= 0x3E)
  {
    if ((v21 & 0x8000) == 0)
    {
      sub_1C1517EFC();
      double v42 = sub_1BFF493E4(v61, v19);
      swift_release();
      sub_1BFF4BC8C(v19, v18, v20, v21);
      unsigned int v48 = v21 >> 10;
      uint64_t v49 = 0;
      int v53 = 0;
      uint64_t v22 = *(void *)&v42;
      goto LABEL_5;
    }
    uint64_t v61 = v19;
    uint64_t v62 = v18;
    uint64_t v63 = v20;
    __int16 v64 = v21 & 0x7FFF;
    sub_1C0379F0C(v19, v18, v20, v21, BYTE1(v21) & 0x7F, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
    uint64_t v22 = sub_1BFF5AB10(v17);
    sub_1BFF4BC8C(v19, v18, v20, v21);
    sub_1BFF4BC8C(v19, v18, v20, v21);
    unsigned int v48 = v21 >> 10;
    uint64_t v49 = 0;
    int v23 = 1;
  }
  else
  {
    unsigned int v48 = v21 >> 10;
    uint64_t v49 = 0;
    uint64_t v22 = 0;
    int v23 = 255;
  }
  int v53 = v23;
LABEL_5:
  uint64_t v25 = v54;
  id v24 = v55;
  uint64_t v26 = v50;
  double v27 = v59;
  uint64_t v59 = (void *)v22;
  uint64_t v28 = sub_1BFF4E2E4();
  uint64_t v29 = swift_allocObject();
  swift_unownedRetainStrong();
  swift_weakInit();
  id v55 = v27;
  uint64_t v30 = v22;
  char v31 = v53;
  sub_1BFF4E2CC(v30, v53);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t, id))(v25 + 16))(v26, v51, v24);
  id v32 = v24;
  unint64_t v33 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v34 = v26;
  unint64_t v35 = (v52 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v29;
  *(void *)(v36 + 24) = v28;
  int v37 = v55;
  (*(void (**)(unint64_t, unsigned char *, id))(v25 + 32))(v36 + v33, v34, v32);
  *(void *)(v36 + v35) = v60;
  swift_retain();
  swift_retain();
  uint64_t v38 = v56;
  sub_1C151630C();
  sub_1BFF50EDC();
  uint64_t v39 = (char *)swift_allocObject();
  *((void *)v39 + 4) = v37;
  *(void *)&v39[*(void *)(*(void *)v39 + 112)] = v37;
  (*(void (**)(char *, unsigned char *, uint64_t))(v57 + 32))(&v39[*(void *)(*(void *)v39 + 104)], v38, v58);
  uint64_t v40 = (uint64_t)v59;
  *((void *)v39 + 2) = v59;
  v39[24] = v31;
  if (v48 <= 0x3E)
  {
    uint64_t v43 = v40;
    id v44 = v37;
    swift_release();
    sub_1BFF4D0F0(v43, v53);

    uint64_t v41 = sub_1C037B8E4;
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v41 = 0;
    uint64_t v36 = 0;
  }
  uint64_t v45 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v39[*(void *)(*(void *)v39 + 120)];
  *uint64_t v45 = v41;
  v45[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v36;
  type metadata accessor for FormatText();
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v39;
  *(void *)(v46 + 24) = 0;
}

uint64_t sub_1BFF4DC7C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if ((unsigned __int16)((unsigned __int16)a4 >> 10) <= 0x3Eu) {
    return sub_1BFF523F0(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_1BFF4DC90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v5;
  uint64_t v11 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v4;
  switch((unint64_t)*v4 >> 60)
  {
    case 1uLL:
    case 2uLL:
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v16 = *(void *)(v15 + 24);
      swift_bridgeObjectRetain();
      uint64_t v18 = (uint64_t *)(*(uint64_t *)((char *)a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                      + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
      swift_beginAccess();
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unsigned int v21 = (void *)sub_1BFF5177C(v17, v16, (uint64_t)a1, v20, v19);
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v24 = sub_1BFF62D50(v21, v23, a3, a1);
      if (!v5) {
        goto LABEL_22;
      }
      goto LABEL_12;
    case 3uLL:
      uint64_t v28 = v14 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v29 = *(void *)(v28 + 24);
      *(void *)&long long v62 = *(void *)(v28 + 16);
      *((void *)&v62 + 1) = v29;
      swift_retain();
      swift_bridgeObjectRetain();
      a3 = (uint64_t)sub_1BFF62760(a1, a2, a3, a4);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 4uLL:
      uint64_t v30 = v14 & 0xFFFFFFFFFFFFFFFLL;
      char v31 = *(unsigned char *)(v30 + 24);
      uint64_t v32 = *(void *)(v30 + 32);
      uint64_t v33 = *(void *)(v30 + 40);
      char v34 = *(unsigned char *)(v30 + 48);
      *(void *)&long long v62 = *(void *)(v30 + 16);
      BYTE8(v62) = v31;
      *(void *)&long long v63 = v32;
      *((void *)&v63 + 1) = v33;
      LOBYTE(v64) = v34;
      swift_retain();
      sub_1BFE94AB4(v32, v33, v34);
      a3 = (uint64_t)sub_1BFF987D8((uint64_t)a1, a3);
      swift_release();
      sub_1BFE94AD4(v32, v33, v34);
      return a3;
    case 5uLL:
      uint64_t v35 = v14 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v37 = *(void *)(v35 + 16);
      uint64_t v36 = *(void *)(v35 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF5E6F4(a2, (uint64_t)a1, v37, v36, &v62);
      a3 = sub_1BFF4DC90(a1, a2, a3, a4);
      swift_release();
      swift_bridgeObjectRelease();
LABEL_9:
      swift_release();
      return a3;
    case 6uLL:
      uint64_t v38 = v14 & 0xFFFFFFFFFFFFFFFLL;
      long long v39 = *(_OWORD *)(v38 + 112);
      long long v67 = *(_OWORD *)(v38 + 96);
      long long v68 = v39;
      long long v69 = *(_OWORD *)(v38 + 128);
      char v70 = *(unsigned char *)(v38 + 144);
      long long v40 = *(_OWORD *)(v38 + 48);
      long long v63 = *(_OWORD *)(v38 + 32);
      long long v41 = *(_OWORD *)(v38 + 64);
      long long v42 = *(_OWORD *)(v38 + 80);
      long long v64 = v40;
      long long v65 = v41;
      long long v66 = v42;
      long long v62 = *(_OWORD *)(v38 + 16);
      uint64_t v25 = sub_1C01EED4C((uint64_t)a1);
      uint64_t v27 = v5;
      if (!v5) {
        goto LABEL_11;
      }
      return a3;
    case 7uLL:
      uint64_t v43 = swift_projectBox();
      sub_1C1132B20(v43, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      id v44 = sub_1C0D80014((uint64_t)a1, a2, a3, a4);
      if (!v5) {
        a3 = (uint64_t)v44;
      }
      sub_1C1132B88((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      return a3;
    case 8uLL:
      uint64_t v60 = a3;
      uint64_t v45 = (void *)(v14 & 0xFFFFFFFFFFFFFFFLL);
      a3 = v45[2];
      uint64_t v46 = v45[3];
      uint64_t v48 = v45[4];
      uint64_t v47 = v45[5];
      uint64_t v50 = v45[6];
      uint64_t v49 = v45[7];
      unint64_t v51 = v45[8];
      *(void *)&long long v62 = a3;
      *((void *)&v62 + 1) = v46;
      *(void *)&long long v63 = v48;
      *((void *)&v63 + 1) = v47;
      *(void *)&long long v64 = v50;
      *((void *)&v64 + 1) = v49;
      *(void *)&long long v65 = v51;
      sub_1BFF58F10(a3);
      uint64_t v61 = v46;
      sub_1BFF523A4(v46, v48, v47);
      uint64_t v52 = (void *)sub_1C0FDCF08((uint64_t)a1);
      if (v5)
      {
        sub_1BFF07CD8(a3);
      }
      else
      {
        v59[0] = a3;
        v59[1] = v51;
        a3 = (uint64_t)sub_1BFF62D50(v52, v53, v60, a1);
        swift_bridgeObjectRelease();
        sub_1BFF07CD8(v59[0]);
      }
      sub_1BFF51C94(v61, v48, v47);
      return a3;
    case 9uLL:
      uint64_t v54 = v14 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v55 = *(void *)(v54 + 16);
      uint64_t v56 = *(void *)(v54 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C0272590(v55, v56, (uint64_t *)&v62);
      uint64_t v72 = v62;
      uint64_t v57 = sub_1BFF4DC90(a1, a2, a3, a4);
      if (!v6) {
        a3 = v57;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return a3;
    default:
      sub_1C086A198(v14 + 16, (uint64_t)v71);
      uint64_t v25 = (void *)sub_1BFF4E948((uint64_t)a1, a4);
      uint64_t v27 = v5;
      if (!v5)
      {
LABEL_11:
        id v24 = sub_1BFF62D50(v25, v26, a3, a1);
        if (v27)
        {
LABEL_12:
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_22:
          a3 = (uint64_t)v24;
          swift_bridgeObjectRelease();
        }
      }
      return a3;
  }
}

uint64_t sub_1BFF4E2CC(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_1BFF6BF20(result, a2 & 1);
  }
  return result;
}

uint64_t sub_1BFF4E2E4()
{
  uint64_t v1 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v49 = (uint64_t)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF1ECB0(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v49, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
  char v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  char v4 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
  uint64_t v46 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
  uint64_t v45 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
  uint64_t v44 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
  uint64_t v43 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
  uint64_t v42 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
  v57[0] = v3;
  v57[1] = v4;
  uint64_t v58 = v5;
  long long v38 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
  long long v59 = v38;
  uint64_t v60 = v6;
  uint64_t v61 = v46;
  long long v62 = v45;
  uint64_t v63 = v44;
  uint64_t v64 = v43;
  uint64_t v65 = v42;
  uint64_t v50 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
  uint64_t v47 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  long long v7 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
  long long v8 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
  long long v9 = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
  v66[2] = *(_OWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  uint64_t v66[3] = v9;
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  v66[0] = v7;
  v66[1] = v8;
  uint64_t v40 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
  sub_1BFF1F7AC(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItem, (uint64_t)v56, qword_1EB873870, MEMORY[0x1E4FBB718]);
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  uint64_t v32 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary);
  uint64_t v31 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 8);
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 24);
  uint64_t v30 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 16);
  uint64_t v15 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 40);
  uint64_t v29 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundItemAuxiliary + 32);
  *(void *)&long long v51 = v32;
  *((void *)&v51 + 1) = v31;
  uint64_t v52 = v30;
  uint64_t v53 = v14;
  uint64_t v54 = v29;
  uint64_t v55 = v15;
  uint64_t v36 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
  uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
  uint64_t v48 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
  uint64_t v34 = v16;
  uint64_t v35 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
  uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
  uint64_t v39 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
  uint64_t v33 = v17;
  uint64_t v18 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
  uint64_t v19 = *(void *)(v0 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
  uint64_t v37 = v18;
  uint64_t v41 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1E730(v46, v45);
  swift_retain();
  uint64_t v20 = v47;
  swift_retain();
  sub_1BFF1E79C((uint64_t)v66);
  swift_bridgeObjectRetain();
  uint64_t v21 = v40;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFF1E6CC(v32, v31);
  uint64_t v22 = v19;
  swift_bridgeObjectRetain();
  uint64_t v23 = v36;
  swift_bridgeObjectRetain();
  uint64_t v24 = v34;
  swift_bridgeObjectRetain();
  uint64_t v25 = v35;
  swift_retain();
  uint64_t v26 = swift_bridgeObjectRetain();
  return sub_1C0DAFA8C(v49, v57, v50, v20, v66, v10, v21, v11, (uint64_t)v56, v12, v13, &v51, v23, v48, v24, v25, v39, v26, v37,
           v22);
}

uint64_t sub_1BFF4E77C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  sub_1C086A198(a2, (uint64_t)v19);
  sub_1C10C08B8((uint64_t)v19, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF2A99C);
  v2 += 56;
  uint64_t v15 = sub_1BFF4E948(a1, 0);
  unint64_t v16 = v4;
  sub_1C10C08B8((uint64_t)v19, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF0084C);
  long long v5 = *(_OWORD *)(v2 + 16);
  v17[0] = *(_OWORD *)v2;
  v17[1] = v5;
  *(_OWORD *)uint64_t v18 = *(_OWORD *)(v2 + 32);
  *(_DWORD *)&v18[15] = *(_DWORD *)(v2 + 47);
  long long v6 = v17[0];
  long long v7 = v5;
  uint64_t v9 = *(void *)v18;
  uint64_t v8 = *(void *)&v18[8];
  char v10 = v18[18];
  __int16 v11 = *(_WORD *)&v18[16];
  unsigned int v14 = *(unsigned __int16 *)&v18[16] | (v18[18] << 16);
  sub_1C10C0900((uint64_t)v17, (void (*)(void, void, void, void, void, void, void))sub_1BFF2B090);
  long long v20 = v6;
  long long v21 = v7;
  uint64_t v22 = v9;
  uint64_t v23 = v8;
  char v25 = v10;
  __int16 v24 = v11;
  char v12 = sub_1BFF4F4D0(a1, v15, v16, sub_1BFF4E948);
  swift_bridgeObjectRelease();
  sub_1BFF00C44(v6, *((uint64_t *)&v6 + 1), v7, *((uint64_t *)&v7 + 1), v9, v8, v14);
  return v12 & 1;
}

uint64_t sub_1BFF4E948(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = a2;
  uint64_t v4 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v4);
  long long v6 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v10 - 8);
  char v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v54 - v17;
  sub_1C086A198(v2, (uint64_t)v86);
  switch((2 * v88) | ((v87 & 8) != 0))
  {
    case 1:
      v87 &= ~8u;
      uint64_t v2 = LOBYTE(v86[0]);
      uint64_t v23 = v96;
      sub_1BFFB5F74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v75);
      if (!v23)
      {
        long long v72 = v77;
        v73[0] = v78[0];
        *(_OWORD *)((char *)v73 + 9) = *(_OWORD *)((char *)v78 + 9);
        long long v68 = v75[2];
        long long v69 = v75[3];
        long long v70 = v75[4];
        long long v71 = v76;
        unsigned long long v66 = v75[0];
        long long v67 = v75[1];
        long long v62 = v77;
        v63[0] = v78[0];
        *(_OWORD *)((char *)v63 + 9) = *(_OWORD *)((char *)v78 + 9);
        long long v58 = v75[2];
        long long v59 = v75[3];
        long long v60 = v75[4];
        long long v61 = v76;
        char v65 = v2;
        long long v56 = v75[0];
        long long v57 = v75[1];
        uint64_t v2 = sub_1C0D77FA4(&v56);
        sub_1C01880A4((uint64_t)&v66);
      }
      break;
    case 2:
      v87 &= ~8u;
      sub_1C022425C((uint64_t)v86, (uint64_t)v91);
      uint64_t v2 = (uint64_t)v91;
      uint64_t v24 = v96;
      uint64_t v25 = sub_1BFFDA390(a1, v55);
      if (!v24) {
        uint64_t v2 = v25;
      }
      break;
    case 3:
    case 4:
      v87 &= ~8u;
      uint64_t v19 = v86[2];
      unint64_t v20 = v86[1];
      uint64_t v21 = v86[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C10C08B8(v2, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF2A99C);
      uint64_t v2 = sub_1BFF68780(a1, v21, v20, v19, v21, v20, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 5:
      v87 &= ~8u;
      sub_1C10C0AA0((uint64_t)v86, (uint64_t)&v90);
      uint64_t v26 = v96;
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v15);
      if (!v26)
      {
        sub_1C10C0AA0((uint64_t)&v90, (uint64_t)v75);
        uint64_t v2 = FormatAudioTrackBinding.Text.text(from:)((uint64_t)v15);
        sub_1BFF4F410((uint64_t)v15, type metadata accessor for FeedHeadline);
      }
      break;
    case 6:
      v87 &= ~8u;
      uint64_t v2 = LOBYTE(v86[0]);
      uint64_t v27 = v96;
      sub_1C0E473E0(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v75);
      if (!v27)
      {
        LOBYTE(v66) = v2;
        uint64_t v28 = *(void **)&v75[1];
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_1BFFB49B8;
        *(void *)(v29 + 24) = a1;
        uint64_t ObjectType = swift_getObjectType();
        swift_retain_n();
        uint64_t v2 = sub_1BFFDCA34(v28, (void (*)(uint64_t))sub_1C10C0A98, v29, &v66, ObjectType);
        swift_release();
        swift_release();
        sub_1BFEA4290((uint64_t)v75);
      }
      break;
    case 7:
      v87 &= ~8u;
      sub_1C10C0A04((uint64_t)v86, (uint64_t)&v92);
      uint64_t v31 = v96;
      sub_1BFF7DD68(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v12);
      if (!v31)
      {
        sub_1C10C0A04((uint64_t)&v92, (uint64_t)v75);
        uint64_t v2 = FormatWebEmbedBinding.Text.text(from:)((uint64_t)v12);
        sub_1BFF4F410((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      }
      break;
    case 8:
      v87 &= ~8u;
      sub_1C0224024((uint64_t)v86, (uint64_t)v93);
      uint64_t v32 = v96;
      sub_1C0E47688(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), v75);
      if (!v32)
      {
        sub_1C0224024((uint64_t)v93, (uint64_t)&v66);
        swift_retain();
        uint64_t v2 = FormatPuzzleBinding.Text.text(from:computedContext:selectors:)((uint64_t)v75, v55, (uint64_t (*)(void))sub_1BFFB49B8, a1);
        swift_release();
        sub_1C01F0A74((uint64_t)v75);
      }
      break;
    case 9:
      v87 &= ~8u;
      sub_1C10C09A8((uint64_t)v86, (uint64_t)v94);
      uint64_t v33 = a1;
      uint64_t v34 = v96;
      sub_1C0E472AC(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v75);
      if (!v34)
      {
        unint64_t v36 = *((void *)&v75[0] + 1);
        unint64_t v35 = *(void *)&v75[0];
        LODWORD(v55) = LOBYTE(v75[1]);
        uint64_t v37 = *((void *)&v75[1] + 1);
        long long v38 = v75[2];
        uint64_t v39 = *(void *)&v75[3];
        uint64_t v96 = 0;
        uint64_t v40 = *((void *)&v75[3] + 1);
        sub_1C10C09A8((uint64_t)v94, (uint64_t)&v56);
        unsigned long long v66 = __PAIR128__(v36, v35);
        LOBYTE(v67) = v55;
        *((void *)&v67 + 1) = v37;
        long long v68 = v38;
        *(void *)&long long v69 = v39;
        *((void *)&v69 + 1) = v40;
        char v41 = *(unsigned char *)(v33 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
        uint64_t v42 = *(void *)(v33 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
        LOBYTE(v75[0]) = *(unsigned char *)(v33 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
        BYTE1(v75[0]) = v41;
        *(_OWORD *)((char *)v75 + 8) = *(_OWORD *)(v33 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
        *(_OWORD *)((char *)&v75[1] + 8) = *(_OWORD *)(v33 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
        *(_OWORD *)((char *)&v75[2] + 8) = *(_OWORD *)(v33 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
        *(_OWORD *)((char *)&v75[3] + 8) = *(_OWORD *)(v33 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
        *((void *)&v75[4] + 1) = v42;
        uint64_t v2 = FormatPuzzleTypeBinding.Text.text(from:config:)((uint64_t)&v66, (uint64_t)v75);
        sub_1BFEEFC20(v37, v38);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 10:
      v87 &= ~8u;
      uint64_t v2 = LOBYTE(v86[0]);
      uint64_t v43 = v96;
      sub_1C0E47B90(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v9);
      if (!v43)
      {
        LOBYTE(v75[0]) = v2;
        uint64_t v2 = FormatPuzzleStatisticBinding.Text.text(from:)((uint64_t)v9);
        sub_1BFF4F410((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      }
      break;
    case 11:
      v87 &= ~8u;
      uint64_t v2 = LOBYTE(v86[0]);
      uint64_t v44 = v96;
      sub_1C0E47960(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v6);
      if (!v44)
      {
        if (v2) {
          uint64_t v52 = (uint64_t *)((char *)v6 + *(int *)(v4 + 20) + 16);
        }
        else {
          uint64_t v52 = v6;
        }
        uint64_t v2 = *v52;
        swift_bridgeObjectRetain();
        sub_1BFF4F410((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      }
      break;
    case 12:
      v87 &= ~8u;
      sub_1C10C094C((uint64_t)v86, (uint64_t)v95);
      uint64_t v45 = v96;
      sub_1C0E4755C(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v75);
      if (!v45)
      {
        unint64_t v47 = *((void *)&v75[0] + 1);
        unint64_t v46 = *(void *)&v75[0];
        long long v48 = v75[1];
        char v49 = v75[2];
        sub_1C10C094C((uint64_t)v95, (uint64_t)&v66);
        v75[0] = __PAIR128__(v47, v46);
        v75[1] = v48;
        LOBYTE(v75[2]) = v49;
        sub_1C09FE810((uint64_t)v75);
        uint64_t v2 = v53;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 13:
      v87 &= ~8u;
      uint64_t v2 = LOBYTE(v86[0]);
      uint64_t v50 = v96;
      sub_1C0E47814(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v75);
      if (!v50)
      {
        v73[5] = v82;
        v73[6] = v83;
        v73[7] = v84;
        v73[1] = v78[1];
        uint64_t v73[2] = v79;
        v73[3] = v80;
        _OWORD v73[4] = v81;
        long long v70 = v75[4];
        long long v71 = v76;
        long long v72 = v77;
        v73[0] = v78[0];
        unsigned long long v66 = v75[0];
        long long v67 = v75[1];
        long long v68 = v75[2];
        long long v69 = v75[3];
        v63[5] = v82;
        v63[6] = v83;
        v63[7] = v84;
        v63[1] = v78[1];
        void v63[2] = v79;
        v63[3] = v80;
        v63[4] = v81;
        long long v60 = v75[4];
        long long v61 = v76;
        long long v62 = v77;
        v63[0] = v78[0];
        long long v56 = v75[0];
        long long v57 = v75[1];
        uint64_t v74 = v85;
        char v65 = v2;
        uint64_t v64 = v85;
        long long v58 = v75[2];
        long long v59 = v75[3];
        swift_retain();
        uint64_t v2 = FormatPaywallBinding.Text.text(from:selectors:)((uint64_t)&v56, (void (*)(uint64_t))sub_1BFFB49B8);
        swift_release();
        sub_1C01F0AC8((uint64_t)&v66);
      }
      break;
    default:
      v87 &= ~8u;
      sub_1C0223E44((uint64_t)v86, (uint64_t)v89);
      uint64_t v22 = v96;
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v18);
      if (!v22)
      {
        sub_1C0223E44((uint64_t)v89, (uint64_t)v75);
        swift_retain();
        uint64_t v2 = FormatHeadlineBinding.Text.text(from:computedContext:selectors:)((uint64_t)v18, v55, (uint64_t (*)(uint64_t))sub_1BFFB49B8, a1);
        swift_release();
        sub_1BFF4F410((uint64_t)v18, type metadata accessor for FeedHeadline);
      }
      break;
  }
  return v2;
}

uint64_t sub_1BFF4F3B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF4F410(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF4F470(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF4F4D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t, void))
{
  uint64_t v7 = v4;
  sub_1C10C085C(v4, (uint64_t)&v28);
  uint64_t v11 = v28;
  int v12 = *(unsigned __int16 *)&v30[16] | (v30[18] << 16);
  switch(v30[18] >> 5)
  {
    case 1:
      v30[18] = BYTE2(v12) & 0x1F;
      LOBYTE(v11) = sub_1C151E89C();
      break;
    case 2:
      v30[18] = BYTE2(v12) & 0x1F;
      LOBYTE(v11) = sub_1C151E8AC();
      break;
    case 3:
      v30[18] = BYTE2(v12) & 0x1F;
      switch(BYTE8(v28))
      {
        case 1:
        case 7:
          LOBYTE(v11) = sub_1C151E7AC() != v11;
          break;
        case 2:
        case 8:
          LOBYTE(v11) = sub_1C151E7AC() < v11;
          break;
        case 3:
        case 9:
          LOBYTE(v11) = v11 >= sub_1C151E7AC();
          break;
        case 4:
        case 0xA:
          LOBYTE(v11) = v11 < sub_1C151E7AC();
          break;
        case 5:
        case 0xB:
          LOBYTE(v11) = sub_1C151E7AC() >= v11;
          break;
        default:
          LOBYTE(v11) = sub_1C151E7AC() == v11;
          break;
      }
      break;
    case 4:
      v30[18] = BYTE2(v12) & 0x1F;
      switch((char)v29)
      {
        case 1:
        case 7:
          if ((void)v28 == a2 && *((void *)&v28 + 1) == a3) {
            goto LABEL_55;
          }
          goto LABEL_60;
        case 2:
        case 8:
          if ((void)v28 != a2 || *((void *)&v28 + 1) != a3) {
            goto LABEL_54;
          }
          goto LABEL_55;
        case 3:
        case 9:
          if ((void)v28 != a2 || *((void *)&v28 + 1) != a3) {
            goto LABEL_60;
          }
          goto LABEL_61;
        case 4:
        case 10:
          if ((void)v28 != a2 || *((void *)&v28 + 1) != a3) {
            goto LABEL_54;
          }
LABEL_55:
          LOBYTE(v11) = 0;
          return v11 & 1;
        case 5:
        case 11:
          if ((void)v28 == a2 && *((void *)&v28 + 1) == a3) {
            goto LABEL_61;
          }
LABEL_60:
          LOBYTE(v11) = sub_1C1520A9C() ^ 1;
          break;
        default:
          if ((void)v28 == a2 && *((void *)&v28 + 1) == a3) {
LABEL_61:
          }
            LOBYTE(v11) = 1;
          else {
LABEL_54:
          }
            LOBYTE(v11) = sub_1C1520A9C();
          break;
      }
      break;
    case 5:
      v30[18] = BYTE2(v12) & 0x1F;
      v31[0] = v28;
      v31[1] = v29;
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v30;
      *(_DWORD *)&v32[15] = *(_DWORD *)&v30[15];
      sub_1C086A198((uint64_t)v31, (uint64_t)v33);
      sub_1C10C08B8((uint64_t)v31, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF2A99C);
      uint64_t v11 = a4(a1, 0);
      uint64_t v15 = v14;
      sub_1C10C0900(v7, (void (*)(void, void, void, void, void, void, void))sub_1BFF00C44);
      if (!v5)
      {
        switch(v32[18])
        {
          case 1:
          case 7:
            if (v11 == a2 && v15 == a3) {
              goto LABEL_73;
            }
            goto LABEL_78;
          case 2:
          case 8:
            if (v11 != a2 || v15 != a3) {
              goto LABEL_77;
            }
            goto LABEL_73;
          case 3:
          case 9:
            if (v11 != a2 || v15 != a3) {
              goto LABEL_78;
            }
            goto LABEL_76;
          case 4:
          case 0xA:
            if (v11 != a2 || v15 != a3) {
              goto LABEL_77;
            }
LABEL_73:
            swift_bridgeObjectRelease();
            LOBYTE(v11) = 0;
            break;
          case 5:
          case 0xB:
            if (v11 == a2 && v15 == a3) {
              goto LABEL_76;
            }
LABEL_78:
            char v26 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            LOBYTE(v11) = v26 ^ 1;
            break;
          default:
            if (v11 == a2 && v15 == a3)
            {
LABEL_76:
              swift_bridgeObjectRelease();
              LOBYTE(v11) = 1;
            }
            else
            {
LABEL_77:
              LOBYTE(v11) = sub_1C1520A9C();
              swift_bridgeObjectRelease();
            }
            break;
        }
      }
      break;
    case 6:
      uint64_t v16 = HIBYTE(a3) & 0xF;
      if ((a3 & 0x2000000000000000) != 0) {
        uint64_t v17 = HIBYTE(a3) & 0xF;
      }
      else {
        uint64_t v17 = a2 & 0xFFFFFFFFFFFFLL;
      }
      BOOL v18 = v17 == 0;
      if ((a3 & 0x2000000000000000) == 0) {
        uint64_t v16 = a2 & 0xFFFFFFFFFFFFLL;
      }
      BOOL v19 = v16 != 0;
      if (v12 == 12582912
        && (*(void *)v30 | *(void *)&v30[8] | (unint64_t)v28 | *((void *)&v29 + 1) | (unint64_t)v29 | *((void *)&v28 + 1)) == 0)
      {
        LOBYTE(v11) = v18;
      }
      else
      {
        LOBYTE(v11) = v19;
      }
      break;
    default:
      v30[18] = BYTE2(v12) & 0x1F;
      sub_1BFF27ECC();
      LOBYTE(v11) = sub_1C151FF0C();
      break;
  }
  return v11 & 1;
}

uint64_t FormatHeadlineBinding.Text.text(from:computedContext:selectors:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v166 = a4;
  uint64_t v167 = a3;
  uint64_t v172 = a2;
  uint64_t v175 = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFF2EC78(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v164 = (char *)&v158 - v7;
  uint64_t v163 = sub_1C1515FDC();
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x1F4188790](v163);
  uint64_t v160 = (char *)&v158 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v161 = (char *)&v158 - v10;
  sub_1BFF2EC78(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, v5);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v171 = (uint64_t)&v158 - v12;
  uint64_t v13 = type metadata accessor for FeedHeadline(0);
  double v170 = *(double *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v168 = (uint64_t)&v158 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v165 = (uint64_t)&v158 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v169 = (uint64_t)&v158 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (id *)((char *)&v158 - v20);
  uint64_t v22 = sub_1C151631C();
  uint64_t v174 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v173 = (char *)&v158 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2EC78(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v5);
  MEMORY[0x1F4188790](v24 - 8);
  char v26 = (char *)&v158 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  long long v29 = (char *)&v158 - v28;
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v158 - v31;
  MEMORY[0x1F4188790](v33);
  unint64_t v35 = (char *)&v158 - v34;
  MEMORY[0x1F4188790](v36);
  long long v38 = (char *)&v158 - v37;
  *(void *)&double v40 = MEMORY[0x1F4188790](v39).n128_u64[0];
  uint64_t v42 = (char *)&v158 - v41;
  uint64_t v44 = *(uint64_t *)v4;
  uint64_t v43 = *(void *)(v4 + 8);
  uint64_t v45 = *(void *)(v4 + 24);
  uint64_t v46 = *(void *)(v4 + 32);
  uint64_t v47 = *(void *)(v4 + 40);
  switch(*(unsigned char *)(v4 + 48))
  {
    case 1:
      uint64_t v159 = *(void *)(v4 + 16);
      uint64_t v168 = v43;
      uint64_t v169 = v45;
      uint64_t v171 = v47;
      uint64_t v172 = v46;
      double v170 = *(double *)&v44;
      uint64_t v55 = v175;
      id v56 = objc_msgSend(*(id *)(v175 + 40), sel_displayDate, v40);
      if (v56)
      {
        long long v57 = v56;
        long long v58 = v173;
        sub_1C15162BC();

        uint64_t v59 = v174;
        (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v38, v58, v22);
        long long v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
        v60(v38, 0, 1, v22);
      }
      else
      {
        uint64_t v59 = v174;
        long long v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v174 + 56);
        v60(v38, 1, 1, v22);
      }
      sub_1BFF96680(v55, (uint64_t)v21);
      char v90 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
      if (v90(v38, 1, v22) == 1)
      {
        id v91 = objc_msgSend(v21[5], sel_publishDate);
        if (v91)
        {
          char v92 = v91;
          sub_1C15162BC();

          uint64_t v93 = 0;
        }
        else
        {
          uint64_t v93 = 1;
        }
        v60(v35, v93, 1, v22);
        sub_1BFCB311C((uint64_t)v35, (uint64_t)v42);
        sub_1BFF5141C((uint64_t)v38, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v42, v38, v22);
        v60(v42, 0, 1, v22);
      }
      sub_1BFF2F7F4((uint64_t)v21);
      sub_1BFF97B80((uint64_t)v42, (uint64_t)v32);
      if (v90(v32, 1, v22) == 1)
      {
        uint64_t v96 = 0;
      }
      else
      {
        uint64_t v98 = (uint64_t)v173;
        uint64_t v97 = v174;
        (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v173, v32, v22);
        uint64_t v100 = v169;
        uint64_t v99 = *(void *)&v170;
        uint64_t v101 = v168;
        double v176 = v170;
        unint64_t v177 = v168;
        uint64_t v178 = v159;
        uint64_t v179 = v169;
        uint64_t v103 = v171;
        uint64_t v102 = v172;
        uint64_t v180 = v172;
        uint64_t v181 = v171;
        sub_1BFF2B138(*(uint64_t *)&v170, v168, v159, v169, v172, v171, 1u);
        uint64_t v175 = FormatDateFormat.format(_:)(v98);
        (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v98, v22);
        uint64_t v104 = v101;
        uint64_t v96 = v175;
        sub_1BFF01064(v99, v104, v159, v100, v102, v103, 1u);
      }
      sub_1BFF5141C((uint64_t)v42, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      return v96;
    case 2:
      uint64_t v61 = v175;
      long long v62 = *(void **)(v175 + *(int *)(v13 + 56));
      if (!v62) {
        return 0;
      }
      uint64_t v63 = *(void *)v4;
      objc_msgSend(v62, sel_duration, v40);
      double v65 = v64;
      double v66 = 0.0;
      if (v172)
      {
        swift_getObjectType();
        uint64_t v67 = qword_1EB885308;
        swift_retain();
        if (v67 != -1) {
          swift_once();
        }
        uint64_t v68 = v61;
        uint64_t v69 = v171;
        sub_1BFF96680(v68, v171);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)&v170 + 56))(v69, 0, 1, v13);
        sub_1C0088B70();
        sub_1C151AD7C();
        sub_1BFF5141C(v69, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
        swift_release();
        if ((v177 & 0x100) == 0)
        {
          if (v177) {
            double v66 = 0.0;
          }
          else {
            double v66 = v176;
          }
        }
      }
      double v176 = COERCE_DOUBLE(sub_1C13949D8((v63 & 1) != 0, v66, v65));
      unint64_t v177 = v95;
      uint64_t v184 = 44;
      unint64_t v185 = 0xE100000000000000;
      uint64_t v182 = 0;
      unint64_t v183 = 0xE000000000000000;
      sub_1BFF27ECC();
      uint64_t v96 = sub_1C151FEBC();
      swift_bridgeObjectRelease();
      return v96;
    case 3:
      uint64_t v70 = v175;
      long long v71 = *(void **)(v175 + *(int *)(v13 + 56));
      if (!v71) {
        return 0;
      }
      objc_msgSend(v71, sel_duration, v40);
      double v73 = v72;
      if (v172)
      {
        swift_getObjectType();
        uint64_t v74 = qword_1EB885308;
        swift_retain();
        if (v74 != -1) {
          swift_once();
        }
        uint64_t v75 = v70;
        uint64_t v76 = v171;
        sub_1BFF96680(v75, v171);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)&v170 + 56))(v76, 0, 1, v13);
        sub_1C0088B70();
        sub_1C151AD7C();
        sub_1BFF5141C(v76, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
        swift_release();
        if ((v177 & 0x100) == 0 && (v177 & 1) == 0) {
          double v73 = v73 - v176;
        }
      }
      double v77 = 0.0;
      if (v73 < 0.0) {
        goto LABEL_25;
      }
      if (v73 >= 3600.0)
      {
        uint64_t v78 = 224;
        if (qword_1EB85EC70 == -1) {
          goto LABEL_26;
        }
        goto LABEL_54;
      }
      double v77 = v73;
LABEL_25:
      uint64_t v78 = 192;
      double v73 = v77;
      if (qword_1EB85EC70 != -1) {
LABEL_54:
      }
        swift_once();
LABEL_26:
      objc_msgSend((id)qword_1EB85D748, sel_setAllowedUnits_, v78);
      if (qword_1EB85EC70 != -1) {
        swift_once();
      }
      id v79 = objc_msgSend((id)qword_1EB85D748, sel_stringFromTimeInterval_, v73);
      if (!v79) {
        return 0;
      }
      long long v80 = v79;
      sub_1C151E62C();

      *(void *)&double v176 = 45;
      unint64_t v177 = 0xE100000000000000;
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      return *(void *)&v176;
    case 4:
      uint64_t v81 = *(void *)(v4 + 16) | v43;
      if (!(v81 | v44 | v45 | v46 | v47))
      {
        id v94 = objc_msgSend(*(id *)(v175 + 40), sel_identifier, v40);
LABEL_62:
        char v105 = v94;
        uint64_t v96 = sub_1C151E62C();

        return v96;
      }
      uint64_t v82 = v81 | v45 | v46 | v47;
      uint64_t v83 = v175;
      if (v44 == 1 && !v82)
      {
        id v84 = objc_msgSend(*(id *)(v175 + 40), sel_title, v40);
        goto LABEL_61;
      }
      if (v44 == 2 && !v82)
      {
        id v84 = objc_msgSend(*(id *)(v175 + 40), sel_titleCompact, v40);
        goto LABEL_61;
      }
      if (v44 == 3 && !v82)
      {
        id v84 = objc_msgSend(*(id *)(v175 + 40), sel_excerpt, v40);
        goto LABEL_61;
      }
      if (v44 == 4 && !v82)
      {
        id v84 = objc_msgSend(*(id *)(v175 + 40), sel_shortExcerpt, v40);
        goto LABEL_61;
      }
      if (v44 == 5 && !v82)
      {
        id v106 = objc_msgSend(*(id *)(v175 + 40), sel_authors, v40);
        if (v106)
        {
          unint64_t v107 = v106;
          uint64_t v108 = sub_1C151EBCC();

          uint64_t v96 = Array<A>.localizedOxfordCommaSeparatedList.getter(v108);
          uint64_t v110 = v109;
          swift_bridgeObjectRelease();
          if (v110) {
            return v96;
          }
        }
        goto LABEL_67;
      }
      if (v44 == 6 && !v82)
      {
        id v112 = objc_msgSend(*(id *)(v175 + 40), sel_authors, v40);
        if (v112)
        {
          uint64_t v113 = v112;
          uint64_t v114 = sub_1C151EBCC();

          uint64_t v96 = Array<A>.localizedOxfordCommaSeparatedList.getter(v114);
          uint64_t v116 = v115;
          swift_bridgeObjectRelease();
          uint64_t v117 = v169;
          sub_1BFF96680(v83, v169);
          if (v116)
          {
LABEL_90:
            sub_1BFF2F7F4(v117);
            return v96;
          }
        }
        else
        {
          uint64_t v117 = v169;
          sub_1BFF96680(v83, v169);
        }
        id v120 = objc_msgSend(*(id *)(v117 + 40), sel_accessoryText);
        if (v120)
        {
          uint64_t v121 = v120;
          uint64_t v96 = sub_1C151E62C();
        }
        else
        {
          uint64_t v96 = 0;
        }
        goto LABEL_90;
      }
      if (v44 == 7 && !v82)
      {
        id v84 = objc_msgSend(*(id *)(v175 + 40), sel_accessoryText, v40);
        goto LABEL_61;
      }
      if (v44 == 8 && !v82)
      {
        id v118 = objc_msgSend(*(id *)(v175 + 40), sel_sourceChannel, v40);
        if (v118)
        {
          id v119 = objc_msgSend(v118, sel_name);
          swift_unknownObjectRelease();
LABEL_82:
          uint64_t v96 = sub_1C151E62C();

          return v96;
        }
        return 0;
      }
      if (v44 != 9 || v82)
      {
        if (v44 == 10 && !v82)
        {
          uint64_t v122 = *(void **)(v175 + 40);
          if ((char *)objc_msgSend(v122, sel_storyType, v40) - 1 <= (char *)3)
          {
            id v123 = objc_msgSend(v122, sel_storyStyle);
            if (v123)
            {
              uint64_t v124 = v123;
              id v119 = objc_msgSend(v123, sel_label);

              if (v119) {
                goto LABEL_82;
              }
            }
          }
          return 0;
        }
        if (v44 != 11 || v82)
        {
          uint64_t v125 = v168;
          if (v44 == 12 && !v82)
          {
            uint64_t v126 = v165;
            sub_1BFF96680(v175, v165);
            uint64_t v127 = (void *)swift_unknownObjectRetain();
            ArticleAutomation.init(headline:)(v127, (uint64_t)&v176);
            uint64_t v128 = sub_1BFF2F7F4(v126);
            uint64_t v129 = *(void *)&v176;
            unint64_t v130 = v177;
            char v131 = v178;
            char v132 = BYTE1(v178);
            char v133 = BYTE2(v178);
            char v134 = BYTE3(v178);
            char v135 = BYTE4(v178);
            uint64_t v136 = v167(v128);
            double v176 = 9.53372586e-307;
            unint64_t v177 = 0xE700000000000000;
            uint64_t v178 = v129;
            uint64_t v179 = v130;
            LOBYTE(v180) = v131;
            BYTE1(v180) = v132;
            BYTE2(v180) = v133;
            BYTE3(v180) = v134;
            BYTE4(v180) = v135;
            uint64_t v181 = v136;
            sub_1C151536C();
            swift_allocObject();
            sub_1C151535C();
            sub_1BFFB5058();
            sub_1C11AFBB4(&qword_1EB889588, (void (*)(uint64_t))sub_1BFFB5058);
            uint64_t v96 = sub_1C151A4CC();
            uint64_t v154 = v153;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            sub_1BFF96680(v175, v125);
            if (!v154)
            {
              id v137 = objc_msgSend(*(id *)(v125 + 40), sel_identifier);
              uint64_t v96 = sub_1C151E62C();
            }
            sub_1BFF2F7F4(v125);
            return v96;
          }
          if (v44 == 13 && !v82)
          {
            id v138 = objc_msgSend(*(id *)(v175 + 40), sel_narrators, v40);
            if (v138)
            {
              uint64_t v139 = v138;
              uint64_t v140 = sub_1C151EBCC();

              uint64_t v96 = Array<A>.localizedOxfordCommaSeparatedList.getter(v140);
              uint64_t v142 = v141;
              swift_bridgeObjectRelease();
              if (v142) {
                return v96;
              }
            }
LABEL_67:
            swift_bridgeObjectRelease();
            return 0;
          }
          if (v44 == 14 && !v82)
          {
            id v143 = objc_msgSend(*(id *)(v175 + 40), sel_routeURL, v40);
            if (v143)
            {
              uint64_t v144 = v143;
              uint64_t v145 = v160;
              sub_1C1515F1C();

              uint64_t v146 = v162;
              uint64_t v147 = *(void (**)(uint64_t, char *, uint64_t))(v162 + 32);
              uint64_t v148 = (uint64_t)v164;
              uint64_t v149 = v145;
              uint64_t v150 = v163;
              v147((uint64_t)v164, v149, v163);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v146 + 56))(v148, 0, 1, v150);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v146 + 48))(v148, 1, v150) != 1)
              {
                v147((uint64_t)v161, v164, v163);
                uint64_t v151 = (void *)sub_1C1515E9C();
                unsigned int v152 = objc_msgSend(v151, sel_nss_isNewsURL);

                if (v152)
                {
                  (*(void (**)(char *, uint64_t))(v162 + 8))(v161, v163);
                  return 1937204590;
                }
                else
                {
                  uint64_t v155 = v161;
                  uint64_t v156 = (void *)sub_1C1515E9C();
                  unsigned int v157 = objc_msgSend(v156, sel_nss_isStocksURL);

                  (*(void (**)(char *, uint64_t))(v162 + 8))(v155, v163);
                  if (v157) {
                    return 0x736B636F7473;
                  }
                  else {
                    return 0x6E776F6E6B6E75;
                  }
                }
              }
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v162 + 56))(v164, 1, 1, v163);
            }
            sub_1BFF5141C((uint64_t)v164, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
            return 0;
          }
          id v84 = objc_msgSend(*(id *)(v175 + 40), sel_videoType, v40);
        }
        else
        {
          id v84 = objc_msgSend(*(id *)(v175 + 40), sel_language, v40);
        }
      }
      else
      {
        id v84 = objc_msgSend(*(id *)(v175 + 40), sel_sponsoredBy, v40);
      }
LABEL_61:
      id v94 = v84;
      if (!v94) {
        return 0;
      }
      goto LABEL_62;
    default:
      uint64_t v48 = *(void *)(v4 + 16);
      uint64_t v49 = *(void *)(v4 + 8);
      uint64_t v171 = *(void *)(v4 + 40);
      uint64_t v172 = v46;
      uint64_t v50 = v45;
      uint64_t v51 = v44;
      id v52 = objc_msgSend(*(id *)(v175 + 40), sel_publishDate, v40);
      if (v52)
      {
        uint64_t v53 = v52;
        sub_1C15162BC();

        uint64_t v54 = v174;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v174 + 56))(v29, 0, 1, v22);
      }
      else
      {
        uint64_t v54 = v174;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v174 + 56))(v29, 1, 1, v22);
      }
      sub_1BFF97B80((uint64_t)v29, (uint64_t)v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v26, 1, v22) == 1)
      {
        sub_1BFF5141C((uint64_t)v29, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        return 0;
      }
      uint64_t v85 = (uint64_t)v173;
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v173, v26, v22);
      double v176 = *(double *)&v51;
      unint64_t v177 = v49;
      uint64_t v86 = v48;
      uint64_t v159 = v48;
      uint64_t v178 = v48;
      uint64_t v179 = v50;
      uint64_t v88 = v171;
      uint64_t v87 = v172;
      uint64_t v180 = v172;
      uint64_t v181 = v171;
      sub_1BFF2B138(v51, v49, v86, v50, v172, v171, 0);
      uint64_t v175 = FormatDateFormat.format(_:)(v85);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v85, v22);
      uint64_t v89 = v49;
      uint64_t v96 = v175;
      sub_1BFF01064(v51, v89, v159, v50, v87, v88, 0);
      sub_1BFF5141C((uint64_t)v29, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
      return v96;
  }
}

void sub_1BFF50EDC()
{
  if (!qword_1EB8749D0[0])
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A1C0);
    unint64_t v0 = type metadata accessor for FormatComputed();
    if (!v1) {
      atomic_store(v0, qword_1EB8749D0);
    }
  }
}

uint64_t type metadata accessor for FormatText()
{
  return self;
}

uint64_t sub_1BFF50F68(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF2E400(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF50FC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFF2E4B8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF51034(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEE7D1C(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF510A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF51104(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF51164(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFF2E7B4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF511D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFE85638(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF51230(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF51290(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF512F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF2E934(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF5134C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF513AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C0F30548(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF5141C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFF2EC78(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF5148C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF2ECDC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF514E8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFE79E3C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF51544(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF515A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF51604(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF51664(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF5A274(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF516C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFE0E1D8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFF5171C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF5177C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v61 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a5 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1BFEF2D8C(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRetain();
    return a1;
  }
  uint64_t v10 = (uint64_t *)(*(void *)(a5 + 56) + 40 * v8);
  a1 = *v10;
  uint64_t v11 = v10[1];
  uint64_t v12 = v10[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void *)(v12 + 16);
  if (!v46)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return a1;
  }
  uint64_t v47 = v12;
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  uint64_t v13 = *(void *)(*(void *)(v60 + 40) + 16);
  swift_beginAccess();
  uint64_t v14 = *(void *)(*(void *)(v13 + 16) + 16);
  uint64_t v50 = a1;
  if (v14)
  {
    v59[0] = *(void *)(v60 + 56);
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1BFEF3B08(v15);
    sub_1BFEF3808(v16);
    swift_release();
    uint64_t v57 = v59[0];
  }
  else
  {
    uint64_t v57 = sub_1BFEF3784();
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v53 = v11;
  swift_bridgeObjectRelease();
  uint64_t v54 = 0;
  unint64_t v18 = 0;
  id v58 = 0;
  uint64_t v19 = v47;
  uint64_t v45 = v47 + 32;
  while (1)
  {
    if (v18 >= *(void *)(v19 + 16)) {
      goto LABEL_33;
    }
    unint64_t v49 = v18;
    uint64_t v20 = (uint64_t *)(v45 + 32 * v18);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = v20[3];
    uint64_t v51 = v20[2];
    uint64_t v24 = qword_1EB87F148;
    swift_bridgeObjectRetain();
    uint64_t v52 = v23;
    swift_bridgeObjectRetain();
    if (v24 != -1) {
      swift_once();
    }
    v59[0] = v21;
    v59[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1BFEF53C0(v59);
    uint64_t v48 = v22;
    swift_bridgeObjectRelease();
    uint64_t v55 = *(void *)(v25 + 16);
    if (v55) {
      break;
    }
LABEL_12:
    unint64_t v18 = v49 + 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = v47;
    if (v18 == v46)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v50;
    }
  }
  unint64_t v26 = 0;
  uint64_t v27 = (uint64_t *)(v25 + 64);
  while (1)
  {
    if (v26 >= *(void *)(v25 + 16))
    {
      __break(1u);
LABEL_33:
      __break(1u);
    }
    uint64_t v56 = *(v27 - 2);
    uint64_t v28 = *(v27 - 1);
    uint64_t v29 = *v27;
    char v30 = *(unsigned char *)(v28 + 32);
    unsigned int v31 = v30 & 0x3F;
    unint64_t v32 = (unint64_t)((1 << v30) + 63) >> 6;
    size_t v33 = 8 * v32;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v31 > 0xD)
    {
      uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
      if ((isStackAllocationSafe & 1) == 0)
      {
        unint64_t v35 = (char *)swift_slowAlloc();
        bzero(v35, v33);
        uint64_t v39 = v32;
        id v40 = v58;
        uint64_t v38 = sub_1BFEFB09C((uint64_t)v35, v39, v28, v57);
        swift_bridgeObjectRelease();
        id v58 = v40;
        if (v40) {
          goto LABEL_34;
        }
        MEMORY[0x1C18C9B00](v35, -1, -1);
        goto LABEL_27;
      }
    }
    MEMORY[0x1F4188790](isStackAllocationSafe);
    unint64_t v35 = (char *)&v45 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v35, v33);
    uint64_t v36 = v32;
    id v37 = v58;
    uint64_t v38 = sub_1BFEFB09C((uint64_t)v35, v36, v28, v57);
    swift_bridgeObjectRelease();
    id v58 = v37;
    if (v37) {
      break;
    }
LABEL_27:
    char v41 = sub_1BFEFAE14(v38, v28);
    swift_release();
    if (v41 & 1) != 0 && (sub_1BFEFB810(v57, v29))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v42 = v56;
      if (v54 < v56)
      {
        swift_bridgeObjectRelease();
        uint64_t v43 = swift_bridgeObjectRetain();
        uint64_t v50 = v51;
        uint64_t v53 = v43;
        uint64_t v54 = v42;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    ++v26;
    v27 += 5;
    if (v55 == v26) {
      goto LABEL_12;
    }
  }
  id v44 = v58;
  swift_willThrow();

  __break(1u);
LABEL_34:

  uint64_t result = MEMORY[0x1C18C9B00](v35, -1, -1);
  __break(1u);
  return result;
}

void sub_1BFF51C3C()
{
  if (!qword_1EB8749C8)
  {
    unint64_t v0 = type metadata accessor for FormatComputed();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8749C8);
    }
  }
}

uint64_t sub_1BFF51C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((unint64_t)(a3 - 1) >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFF51CE0(uint64_t a1, char a2)
{
  if (a2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFF51CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v16 = a4;
    uint64_t v17 = a5;
    swift_bridgeObjectRetain();
    char v9 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v10 = *v9;
      swift_retain();
      uint64_t v11 = swift_retain_n();
      uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))sub_1BFF273E0(v11);
      char v14 = (v13 & 1) != 0 ? v12(a2, a1) : ((uint64_t (*)(uint64_t))v12)(a2);
      sub_1BFF27F20();
      swift_release();
      if (v14) {
        break;
      }
      v9 += 2;
      swift_release();
      swift_release();
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        a5 = v17;
        a4 = v16;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    void *v17 = v10;
  }
  else
  {
LABEL_9:
    *a5 = a4;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BFF51E5C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (a4 < 0) {
    return sub_1C032E7BC(a1, a2, a3, a4, HIBYTE(a4) & 0x7F, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BFF51EB8()
{
  unint64_t result = qword_1EB85BFB8;
  if (!qword_1EB85BFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BFB8);
  }
  return result;
}

uint64_t sub_1BFF51F0C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BFF51F24(uint64_t a1, uint64_t a2)
{
  return sub_1BFF51F30(a1, a2, *(uint64_t (**)(uint64_t, __n128))(v2 + 16), *(void *)(v2 + 24), *(uint64_t (**)(uint64_t, char *))(v2 + 32));
}

uint64_t sub_1BFF51F30(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, __n128), uint64_t a4, uint64_t (*a5)(uint64_t, char *))
{
  sub_1BFF81FF0();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  __n128 v12 = MEMORY[0x1F4188790](v9);
  char v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = a3(a1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a2, v10);
  if (v15) {
    char v16 = a5(a1, v14);
  }
  else {
    char v16 = 0;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v16 & 1;
}

void sub_1BFF52070(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)&double v7 = MEMORY[0x1F4188790](v5).n128_u64[0];
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned __int8 *)(v2 + 129) >= 5u)
  {
    *a2 = 0xF000000000000007;
  }
  else
  {
    unint64_t v26 = a2;
    uint64_t v10 = *(void *)(a1 + 16);
    id v11 = objc_msgSend(*(id *)(v10 + *(void *)(*(void *)v10 + 112)), sel_string, v7);
    uint64_t v12 = sub_1C151E62C();
    uint64_t v14 = v13;

    uint64_t v15 = v10 + *(void *)(*(void *)v10 + 104);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v15, v5);
    uint64_t v16 = *(void *)(v10 + 16);
    int v17 = *(unsigned __int8 *)(v10 + 24);
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = sub_1C037AFD8;
    v18[3] = 0;
    v18[4] = sub_1C037B0B8;
    v18[5] = v10;
    sub_1BFF52358(0, (unint64_t *)&qword_1EB8749C8, MEMORY[0x1E4FBB1A0], (uint64_t (*)(void, uint64_t))type metadata accessor for FormatComputed);
    uint64_t v19 = (char *)swift_allocObject();
    *((void *)v19 + 4) = v12;
    *((void *)v19 + 5) = v14;
    uint64_t v20 = (uint64_t *)&v19[*(void *)(*(void *)v19 + 112)];
    *uint64_t v20 = v12;
    v20[1] = v14;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v19[*(void *)(*(void *)v19 + 104)], v9, v5);
    uint64_t v21 = v16;
    *((void *)v19 + 2) = v16;
    v19[24] = v17;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v17 == 255)
    {
      swift_release();
      uint64_t v22 = 0;
      uint64_t v18 = 0;
    }
    else
    {
      uint64_t v22 = sub_1C037B130;
    }
    uint64_t v23 = v26;
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = &v19[*(void *)(*(void *)v19 + 120)];
    *(void *)uint64_t v25 = v22;
    *((void *)v25 + 1) = v18;
    *(void *)(v24 + 16) = v19;
    *uint64_t v23 = v24;
    sub_1BFF4E2CC(v21, v17);
  }
}

void sub_1BFF52358(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFF523A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((unint64_t)(a3 - 1) >= 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFF523F0(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  if (a4 < 0) {
    return sub_1C032E7BC(a1, a2, a3, a4, HIBYTE(a4) & 0x7F, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFF5244C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v32 = a7;
  v33[3] = a6;
  v28[0] = a4;
  v28[1] = a5;
  uint64_t v29 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v29);
  char v30 = (uint64_t *)((char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatOption();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  int v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options);
  FormatOptionCollection.subscript.getter(a2, a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    sub_1C00AB068((uint64_t)v13, (uint64_t)v17);
    swift_retain();
    uint64_t v24 = v31;
    sub_1BFF27FB0(v18, v33);
    swift_release();
    if (!v24)
    {
      uint64_t v19 = sub_1BFF68B60(v33[0], a2, a3, v28[0], v18);
      swift_release();
      sub_1C124E840((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    uint64_t v25 = type metadata accessor for FormatOption;
    uint64_t v26 = (uint64_t)v17;
LABEL_8:
    sub_1C124E840(v26, (uint64_t (*)(void))v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  sub_1C124E840((uint64_t)v13, (uint64_t (*)(void))sub_1C00AB000);
  uint64_t v20 = (uint64_t)v30;
  *char v30 = a2;
  *(void *)(v20 + 8) = a3;
  swift_storeEnumTagMultiPayload();
  char v21 = *(unsigned char *)(v18 + 48);
  sub_1BFE7E51C();
  uint64_t v22 = (void *)swift_allocError();
  sub_1C124E8A0(v20, v23, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v25 = type metadata accessor for FormatLayoutError;
    uint64_t v26 = v20;
    goto LABEL_8;
  }
  v33[0] = 0x3A676E697373694DLL;
  v33[1] = 0xEB000000007B7B20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v19 = v33[0];
  sub_1C124E840(v20, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1BFF52820(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  swift_beginAccess();
  uint64_t v15 = *(void *)(a2[11] + 16);
  uint64_t result = v15 + 3;
  if (__OFADD__(v15, 3))
  {
    __break(1u);
  }
  else
  {
    uint64_t v29 = a7;
    sub_1C15175DC();
    swift_getKeyPath();
    uint64_t v33 = MEMORY[0x1E4FBB1A0];
    uint64_t v34 = MEMORY[0x1E4FABA68];
    uint64_t v31 = a3;
    uint64_t v32 = a4;
    int v17 = (uint64_t (*)(uint64_t, void *))MEMORY[0x1E4FAB6F0];
    sub_1BFF54648(0, (unint64_t *)&qword_1EB884D88, MEMORY[0x1E4FAB6F0]);
    sub_1BFF54540(&qword_1EB884D80, (unint64_t *)&qword_1EB884D88, v17);
    sub_1BFF5470C((unint64_t *)&qword_1EB871238, 255, (void (*)(uint64_t))sub_1BFE13AFC);
    swift_bridgeObjectRetain();
    sub_1C151733C();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    uint64_t v37 = a1;
    swift_getKeyPath();
    uint64_t v18 = *(void *)(a5 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    swift_beginAccess();
    uint64_t v20 = a2[2];
    uint64_t v19 = a2[3];
    uint64_t v21 = *(void *)(v18 + 40);
    if (v21)
    {
      uint64_t v31 = *(void *)(v18 + 32);
      uint64_t v32 = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v20 = v31;
      uint64_t v19 = v32;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v33 = MEMORY[0x1E4FBB1A0];
    uint64_t v34 = MEMORY[0x1E4FABA68];
    uint64_t v31 = v20;
    uint64_t v32 = v19;
    sub_1C151733C();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    uint64_t v37 = a1;
    swift_getKeyPath();
    uint64_t v23 = a2[2];
    uint64_t v22 = a2[3];
    uint64_t v33 = MEMORY[0x1E4FBB1A0];
    uint64_t v34 = MEMORY[0x1E4FABA68];
    uint64_t v31 = v23;
    uint64_t v32 = v22;
    swift_bridgeObjectRetain();
    sub_1C151733C();
    swift_release();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
    uint64_t v24 = a2[11];
    uint64_t v25 = *(void *)(v24 + 16);
    if (v25)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 32; ; i += 40)
      {
        long long v27 = *(_OWORD *)(v24 + i);
        long long v28 = *(_OWORD *)(v24 + i + 16);
        uint64_t v36 = *(void *)(v24 + i + 32);
        v35[0] = v27;
        v35[1] = v28;
        sub_1BFF1BDBC((uint64_t)v35);
        sub_1BFF52B88(a1, a6, v29);
        if (v8) {
          break;
        }
        sub_1BFF1BD7C((uint64_t)v35);
        if (!--v25) {
          return swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease();
      return sub_1BFF1BD7C((uint64_t)v35);
    }
  }
  return result;
}

uint64_t sub_1BFF52B88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v29[4] = a1;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) + 16);
  if (v6)
  {
    uint64_t v8 = *(void *)(v6 + 24);
    sub_1C12A7D78(v3, (uint64_t)v31);
    sub_1C12A7D78((uint64_t)v31, (uint64_t)v29);
    uint64_t v9 = sub_1C11523CC();
    uint64_t v11 = v10;
    sub_1C12A7D78((uint64_t)v31, (uint64_t)v29);
    char v12 = sub_1C1150A2C();
    uint64_t v13 = *(uint64_t *)((char *)a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    sub_1BFF8874C(v4 + 8, (uint64_t)v30, &qword_1EA1ADB40, (uint64_t)&type metadata for FormatSourceMap);
    sub_1BFF8874C((uint64_t)v30, (uint64_t)v29, &qword_1EA1ADB40, (uint64_t)&type metadata for FormatSourceMap);
    type metadata accessor for FormatNodeDebugRecord();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1BFF59A8C((uint64_t)v30);
    swift_bridgeObjectRetain();
    sub_1BFF59A8C((uint64_t)v30);
    swift_retain();
    swift_retain();
    uint64_t v14 = sub_1C093678C(v9, v11, v12, v13, v29);
    if (v14)
    {
      swift_beginAccess();
      uint64_t v15 = swift_retain();
      MEMORY[0x1C18C66D0](v15);
      if (*(void *)((*(void *)(v8 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v8 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        sub_1C151EC8C();
      sub_1C151ECEC();
      sub_1C151EBEC();
      swift_endAccess();
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BFF5E6C8((uint64_t)v30);
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v16 = *(void *)(a3 + 80);
  uint64_t v17 = *(void *)(v4 + 8);
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v20 = *(void *)(v4 + 24);
  uint64_t v19 = *(void *)(v4 + 32);
  if (v16)
  {
    if (v18)
    {
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = a2;
      *(void *)(v21 + 24) = v17;
      *(void *)(v21 + 32) = v18;
      *(void *)(v21 + 40) = v20;
      *(void *)(v21 + 48) = v19;
      long long v22 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(v21 + 56) = *(_OWORD *)v4;
      *(_OWORD *)(v21 + 72) = v22;
      *(void *)(v21 + 88) = *(void *)(v4 + 32);
      *(void *)(v21 + 96) = v16;
      *(void *)(v21 + 104) = a3;
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_1BFF1BDBC(v4);
      sub_1BFF543C8();
      sub_1BFF54484();
      swift_retain();
      sub_1C15172FC();
      swift_bridgeObjectRelease();
      swift_release_n();
      goto LABEL_14;
    }
  }
  else if (v18)
  {
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a2;
    *(void *)(v23 + 24) = v17;
    *(void *)(v23 + 32) = v18;
    *(void *)(v23 + 40) = v20;
    *(void *)(v23 + 48) = v19;
    long long v24 = *(_OWORD *)(v4 + 16);
    *(_OWORD *)(v23 + 56) = *(_OWORD *)v4;
    *(_OWORD *)(v23 + 72) = v24;
    *(void *)(v23 + 88) = *(void *)(v4 + 32);
    *(void *)(v23 + 96) = a3;
    swift_bridgeObjectRetain_n();
    swift_retain();
    sub_1BFF1BDBC(v4);
    sub_1BFF543C8();
    sub_1BFF54484();
    swift_retain();
    sub_1C15172FC();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRelease();
  unint64_t v25 = *(void *)v4;
  swift_retain();
  sub_1BFF52F7C(a1, a2, (char *)a3, v25);
LABEL_14:
  uint64_t result = swift_release();
  if (v14)
  {
    if (*(unsigned char *)(v14 + 96) == 1)
    {
      *(CFTimeInterval *)(v14 + 88) = CACurrentMediaTime();
      *(unsigned char *)(v14 + 96) = 0;
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFF52F7C(uint64_t a1, uint64_t *a2, char *a3, unint64_t a4)
{
  switch((a4 >> 58) & 0x3C | (a4 >> 1) & 3)
  {
    case 1uLL:
      swift_retain();
      uint64_t v8 = (void (*)(uint64_t, uint64_t *, void, uint64_t *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))MEMORY[0x1E4FAB508];
      goto LABEL_4;
    case 2uLL:
      swift_retain();
      uint64_t v9 = (void (*)(uint64_t, uint64_t, void, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t))MEMORY[0x1E4FAB510];
      goto LABEL_7;
    case 3uLL:
      swift_retain();
      uint64_t v9 = (void (*)(uint64_t, uint64_t, void, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, uint64_t))MEMORY[0x1E4FAB518];
LABEL_7:
      sub_1BFF486EC(a1, a2, (uint64_t)a3, (uint64_t (*)(void, __n128))sub_1BFF543C8, sub_1BFF54484, (uint64_t)sub_1C12AD4B8, v9);
      return swift_release();
    case 4uLL:
      swift_retain();
      sub_1BFF4ACFC(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25B50, (void (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484);
      return swift_release();
    case 5uLL:
      swift_retain();
      sub_1BFF437A4(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25B78, (void (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484);
      return swift_release();
    case 6uLL:
      swift_retain();
      sub_1BFF44304(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25BA0, (void (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484);
      return swift_release();
    case 7uLL:
      swift_retain();
      sub_1BFFF3894(a1, (uint64_t)a2, (uint64_t)a3, (unint64_t)sub_1C12A8490, (uint64_t)&unk_1F1C25BC8, (uint64_t (*)(void))sub_1BFF543C8, sub_1BFF54484, (uint64_t)sub_1C12A84AC, (uint64_t)&unk_1F1C25BF0, (unint64_t)sub_1C12AD470);
      return swift_release();
    case 8uLL:
      swift_retain();
      sub_1BFF2F96C(a1, a2, (void (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484);
      return swift_release();
    case 9uLL:
      swift_retain();
      sub_1BFF1A018(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF52B88);
      return swift_release();
    case 0xAuLL:
      swift_retain();
      sub_1BFFF2840(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)sub_1BFC5CB0C, (uint64_t)&unk_1F1C25C18, (uint64_t (*)(void))sub_1BFF543C8, sub_1BFF54484, (uint64_t)sub_1C12AD394);
      return swift_release();
    case 0xBuLL:
    case 0x1EuLL:
      uint64_t v26 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v27 = *(void *)(v26 + 16);
      uint64_t v28 = *(void *)(v26 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF303E0(v27, v28);
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_unownedRetain();
      swift_release();
      uint64_t v29 = (void *)swift_allocObject();
      v29[2] = v26;
      v29[3] = a2;
      v29[4] = a3;
      sub_1BFF543C8();
      sub_1BFF54484();
      swift_retain();
      swift_retain();
      goto LABEL_34;
    case 0xCuLL:
      swift_retain();
      sub_1BFFC002C(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF52B88);
      return swift_release();
    case 0xDuLL:
      uint64_t v10 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v11 = *(void *)(v10 + 16);
      uint64_t v12 = *(void *)(v10 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1BFF303E0(v11, v12);
      uint64_t v15 = v14;
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_unownedRetain();
      swift_unownedRetain();
      swift_bridgeObjectRetain();
      swift_unownedRelease();
      swift_unownedRelease();
      swift_unownedRetain();
      swift_release();
      uint64_t v16 = (void *)swift_allocObject();
      _OWORD v16[2] = v10;
      v16[3] = a2;
      v16[4] = v13;
      v16[5] = v15;
      v16[6] = a3;
      sub_1BFF543C8();
      sub_1BFF54484();
      swift_retain();
      swift_retain();
      goto LABEL_34;
    case 0xEuLL:
      swift_retain();
      sub_1BFF7C308(a1, a2, (uint64_t)a3, (uint64_t)&unk_1F1C25C40, (uint64_t *)sub_1BFF543C8, (uint64_t)sub_1BFF54484, (uint64_t)sub_1BFC37370, (uint64_t)sub_1BFDA01C4, (uint64_t)&unk_1F1C25C68, (uint64_t)sub_1C12AD488, (uint64_t)sub_1BFDA01C4, (char *)sub_1BFCDE4EC);
      return swift_release();
    case 0xFuLL:
      swift_retain();
      sub_1BFF54F6C(a1, a2, (uint64_t)a3, (uint64_t)sub_1BFDA01F0, (void (*)(char *, uint64_t))&unk_1F1C25C90, (uint64_t (*)(void))sub_1BFF543C8, sub_1BFF54484, (uint64_t)sub_1C12AD3AC, (uint64_t)sub_1C12A86F8);
      return swift_release();
    case 0x10uLL:
      swift_retain();
      sub_1C129CA64(a1, (uint64_t)a2, a3, (uint64_t)&unk_1F1C25CB8, (uint64_t (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484, (uint64_t)sub_1C12A8714);
      return swift_release();
    case 0x11uLL:
      swift_retain();
      sub_1C12A79CC(a1, a2, (uint64_t)&unk_1F1C25CE0, (uint64_t (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484, (uint64_t)sub_1C12AD3F8);
      return swift_release();
    case 0x12uLL:
      swift_retain();
      sub_1C003F948(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF52B88);
      return swift_release();
    case 0x13uLL:
      uint64_t v17 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v18 = *(void *)(v17 + 16);
      uint64_t v19 = *(void *)(v17 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF303E0(v18, v19);
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_retain();
      swift_unownedRetain();
      swift_release();
      uint64_t v20 = (void *)swift_allocObject();
      v20[2] = a2;
      v20[3] = v17;
      v20[4] = a3;
      sub_1BFF543C8();
      sub_1BFF54484();
      swift_retain();
LABEL_34:
      sub_1C15173AC();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 0x14uLL:
      swift_retain();
      sub_1C129D2BC(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)sub_1C12A8778, (uint64_t)&unk_1F1C25D08, (uint64_t (*)(void))sub_1BFF543C8, sub_1BFF54484, (uint64_t)sub_1C12AD4A0);
      return swift_release();
    case 0x15uLL:
      swift_retain();
      sub_1C1296210(a1, a2, (uint64_t)a3, (uint64_t)&unk_1F1C25D30, (void (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484, (uint64_t)sub_1C12A87F8);
      return swift_release();
    case 0x16uLL:
      uint64_t v21 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      long long v22 = (void *)swift_allocObject();
      v22[2] = v21;
      v22[3] = a3;
      v22[4] = a2;
      sub_1BFF543C8();
      sub_1BFF54484();
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_1C15173BC();
      swift_release();
      return swift_release();
    case 0x17uLL:
      swift_retain();
      sub_1C1290F40(a1, a2, (uint64_t)a3, (uint64_t)&unk_1F1C25D58, (void (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484, (uint64_t)sub_1C12AD410);
      return swift_release();
    case 0x18uLL:
      swift_retain();
      sub_1C129E54C(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25D80, (uint64_t (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484, (uint64_t)sub_1C12A88E8);
      return swift_release();
    case 0x19uLL:
      swift_retain();
      sub_1C129F028(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25DA8, (uint64_t (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484, (uint64_t)sub_1C12A8918);
      return swift_release();
    case 0x1AuLL:
      swift_retain();
      sub_1C129FC70(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25DD0, (void (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484);
      return swift_release();
    case 0x1BuLL:
      swift_retain();
      sub_1C129179C(a1, (uint64_t)a2, (uint64_t (*)(uint64_t))a3);
      return swift_release();
    case 0x1CuLL:
      long long v23 = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x40);
      v41[2] = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x30);
      v41[3] = v23;
      v41[4] = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x50);
      uint64_t v42 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x60);
      long long v24 = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x20);
      v41[0] = *(_OWORD *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v41[1] = v24;
      sub_1C089E4F4((uint64_t)v41);
      sub_1C129AA98(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25E20, (void (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484, (uint64_t)sub_1C12A8C20);
      return sub_1C089E568((uint64_t)v41);
    case 0x1DuLL:
      swift_retain();
      sub_1BFF902C0(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF52B88);
      return swift_release();
    case 0x1FuLL:
      swift_retain();
      sub_1C129C180(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25E48, (void (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484);
      return swift_release();
    case 0x20uLL:
      swift_retain();
      sub_1C1299EAC(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25E70, (uint64_t (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484, (uint64_t)sub_1C12A8C70);
      return swift_release();
    case 0x21uLL:
      swift_retain();
      sub_1C129BC0C(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF52B88);
      return swift_release();
    case 0x22uLL:
      swift_retain();
      sub_1C12A01D4(a1, (uint64_t)a2, (uint64_t)a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFF52B88);
      return swift_release();
    case 0x23uLL:
      uint64_t v30 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      swift_retain();
      uint64_t v31 = sub_1C0F0D63C((uint64_t)a2);
      swift_beginAccess();
      uint64_t v32 = *(void *)(v30 + 48);
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        swift_bridgeObjectRetain();
        for (uint64_t i = 32; ; i += 40)
        {
          long long v35 = *(_OWORD *)(v32 + i);
          long long v36 = *(_OWORD *)(v32 + i + 16);
          uint64_t v44 = *(void *)(v32 + i + 32);
          v43[0] = v35;
          v43[1] = v36;
          sub_1BFF1BDBC((uint64_t)v43);
          sub_1BFF52B88(a1, v31, a3);
          if (v4) {
            break;
          }
          sub_1BFF1BD7C((uint64_t)v43);
          if (!--v33)
          {
            swift_release();
            swift_release();
            return swift_bridgeObjectRelease();
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        sub_1BFF1BD7C((uint64_t)v43);
      }
      else
      {
        swift_release();
      }
      return swift_release();
    case 0x24uLL:
      uint64_t v37 = *(void *)((a4 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v45 = a1;
      swift_beginAccess();
      uint64_t v38 = *(void *)(v37 + 16);
      uint64_t v39 = *(void *)(v37 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF303E0(v38, v39);
      swift_bridgeObjectRelease();
      swift_unownedRetainStrong();
      swift_unownedRetain();
      swift_release();
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v37;
      *(void *)(v40 + 24) = a2;
      sub_1BFF543C8();
      sub_1BFF54484();
      swift_retain();
      sub_1C15173AC();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    case 0x25uLL:
      swift_retain();
      sub_1C129443C(a1, (uint64_t)a2, (uint64_t)a3);
      return swift_release();
    case 0x26uLL:
      swift_retain();
      sub_1C1296EA8(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25EC0, (uint64_t (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484, (uint64_t)sub_1C12A8CB0);
      return swift_release();
    case 0x27uLL:
      swift_retain();
      sub_1C129B458(a1, (uint64_t)a2, (uint64_t)a3, (uint64_t)&unk_1F1C25EE8, (void (*)(void))sub_1BFF543C8, (void (*)(void))sub_1BFF54484, (uint64_t)sub_1C12A8D38);
      return swift_release();
    default:
      swift_retain();
      uint64_t v8 = (void (*)(uint64_t, uint64_t *, void, uint64_t *, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t))MEMORY[0x1E4FAB500];
LABEL_4:
      sub_1BFF2FEF8(a1, a2, (uint64_t)a3, (uint64_t (*)(void, __n128))sub_1BFF543C8, sub_1BFF54484, (uint64_t)sub_1BFD33A74, v8);
      return swift_release();
  }
}

void sub_1BFF543C8()
{
  if (!qword_1EB884D88)
  {
    type metadata accessor for FormatLayoutAttributes();
    sub_1BFF597F8();
    sub_1BFFF7578(&qword_1EB88A8A0, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
    unint64_t v0 = sub_1C15175EC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884D88);
    }
  }
}

uint64_t sub_1BFF54484()
{
  return sub_1BFF30570(&qword_1EB884D80, (void (*)(uint64_t))sub_1BFF543C8);
}

uint64_t sub_1BFF544B8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFF54584(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF544FC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1190448(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF54540(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFF54648(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFF54584(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for FormatLayout;
    v8[1] = type metadata accessor for FormatLayoutAttributes();
    v8[2] = sub_1BFF597F8();
    v8[3] = sub_1BFDA05B0(&qword_1EB88A8A0, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFF54648(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    v8[0] = &type metadata for FormatLayout;
    v8[1] = type metadata accessor for FormatLayoutAttributes();
    v8[2] = sub_1BFF597F8();
    v8[3] = sub_1BFF5470C(&qword_1EB88A8A0, 255, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
    unint64_t v6 = a3(a1, v8);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1BFF5470C(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatHBoxNode.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  return sub_1BFF14FC0(a1, a2, (uint64_t)&unk_1F1B6DA50);
}

uint64_t sub_1BFF54774(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FormatCompilerOptions(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB889E78);
}

uint64_t _s8NewsFeed0B8BannerAdV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v14 - v8;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BFF54980((uint64_t)a1, (uint64_t)&v14 - v8);
    sub_1BFF54980((uint64_t)a2, (uint64_t)v6);
  }
  else
  {
    char v11 = sub_1C1520A9C();
    sub_1BFF54980((uint64_t)a1, (uint64_t)v9);
    sub_1BFF54980((uint64_t)a2, (uint64_t)v6);
    char v12 = 0;
    if ((v11 & 1) == 0) {
      goto LABEL_9;
    }
  }
  char v12 = MEMORY[0x1C18C56B0](&v9[*(int *)(v4 + 20)], &v6[*(int *)(v4 + 20)]);
LABEL_9:
  sub_1BFF54924((uint64_t)v6);
  sub_1BFF54924((uint64_t)v9);
  return v12 & 1;
}

uint64_t sub_1BFF54924(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedBannerAd();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFF54980(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedBannerAd();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *initializeWithCopy for FeedBannerAd(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151DBAC();
  char v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  unint64_t v18 = v17[1];
  if (v18 >= 0x11)
  {
    *uint64_t v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  }
  return a1;
}

uint64_t FormatVOverlayNode.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  return sub_1BFF54B00(a1, a2, (uint64_t)&unk_1F1B6D9B0);
}

uint64_t sub_1BFF54B00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v9 - 8);
  char v11 = (char *)&v27 - v10;
  swift_beginAccess();
  unint64_t v12 = v3[11];
  *(void *)&long long v29 = v12;
  sub_1BFF35EA4(v12);
  FormatSize.bind(binder:context:)(a1, a2);
  uint64_t result = sub_1BFF322A8(v12);
  if (!v4)
  {
    uint64_t v28 = v11;
    uint64_t v32 = a3;
    swift_beginAccess();
    uint64_t v14 = v3[12];
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v15; ++i)
      {
        unint64_t v17 = *(void *)(v14 + 8 * i + 32);
        *(void *)&long long v29 = v17;
        sub_1BFF32264(v17);
        FormatAdjustment.bind(binder:context:)(a1, a2);
        sub_1BFF31E90(v17);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    uint64_t v18 = v3[13];
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v27 = v18;
      uint64_t v20 = (void *)(v18 + 64);
      do
      {
        uint64_t v21 = *v20;
        long long v29 = *((_OWORD *)v20 - 2);
        long long v30 = *((_OWORD *)v20 - 1);
        uint64_t v31 = v21;
        swift_bridgeObjectRetain();
        swift_retain();
        FormatSourceMapNode.bind(binder:context:)(a1, a2);
        v20 += 5;
        swift_bridgeObjectRelease();
        swift_release();
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease_n();
    }
    uint64_t result = swift_beginAccess();
    uint64_t v22 = v32;
    uint64_t v23 = (uint64_t)v28;
    if (*((unsigned char *)v6 + 136) == 1)
    {
      uint64_t v25 = v6[15];
      uint64_t v24 = v6[16];
      sub_1BFE94AB4(v25, v24, 1);
      uint64_t v26 = sub_1C00B857C(v22);
      sub_1C0EC63F8(v25, v24, v26, 1, v23);
      sub_1C05DDCC0(v23, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      return sub_1BFE94AD4(v25, v24, 1);
    }
  }
  return result;
}

uint64_t initializeWithCopy for FormatDecoration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v14 = (uint64_t *)(a2 + 96);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 106);
  int v10 = *(unsigned __int16 *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == 255)
  {
    *(void *)(a1 + 96) = *v14;
    *(_DWORD *)(a1 + 103) = *(_DWORD *)((char *)v14 + 7);
  }
  else
  {
    uint64_t v11 = v10 & 0xFF00FFFF | (v9 << 16);
    uint64_t v12 = *v14;
    sub_1BFFA742C(*v14, v11, SBYTE2(v11), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFE2FD4, (uint64_t (*)(void))sub_1BFFE2FE0);
    *(void *)(a1 + 96) = v12;
    *(_WORD *)(a1 + 104) = v11;
    *(unsigned char *)(a1 + 106) = BYTE2(v11);
  }
  return a1;
}

uint64_t sub_1BFF54F6C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t), uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t a8, uint64_t a9)
{
  uint64_t v82 = a8;
  uint64_t v81 = a7;
  long long v80 = a6;
  id v79 = a5;
  uint64_t v88 = a4;
  uint64_t v11 = v10;
  uint64_t v12 = v9;
  uint64_t v89 = a3;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v84 = v15;
  uint64_t v83 = *(uint64_t **)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v78 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (uint64_t *)((char *)&v75 - v18);
  uint64_t v86 = sub_1C1517A9C();
  uint64_t v85 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v87 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = a1;
  swift_beginAccess();
  uint64_t v21 = v12[2];
  uint64_t v22 = v12[3];
  swift_bridgeObjectRetain();
  uint64_t v90 = sub_1BFF303E0(v21, v22);
  uint64_t v91 = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)v12[2];
  uint64_t v25 = v12[3];
  swift_bridgeObjectRetain();
  sub_1BFF1DD20(v24, v25);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v26 = swift_bridgeObjectRetain();
  sub_1BFF1B2E4(v26, 0);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t *)sub_1BFF1E298(0, 0);
  swift_release();
  uint64_t v28 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
  long long v29 = (uint64_t *)(*(uint64_t *)((char *)v27 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                  + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v30 = *v29;
  uint64_t v31 = v29[1];
  uint64_t v32 = v12[10];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1C128F0D8(v32, (uint64_t)v27, v30, v31, (void (*)(uint64_t))sub_1C02CF77C, sub_1C1294874, (uint64_t (*)(uint64_t, uint64_t))sub_1C12A5804, (void (*)(void))type metadata accessor for FormatGroupNodeStyle, (void (*)(uint64_t))sub_1C02CE7F4);
  if (v11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v76 = v19;
    uint64_t v77 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v35 = (*(uint64_t (**)(char *, void, uint64_t))(v85 + 104))(v87, *MEMORY[0x1E4FAB8F8], v86);
    MEMORY[0x1F4188790](v35);
    uint64_t v36 = v90;
    *(&v75 - 6) = (uint64_t)v12;
    *(&v75 - 5) = v36;
    uint64_t v37 = v91;
    uint64_t v71 = v91;
    double v72 = a2;
    uint64_t v73 = (uint64_t)v27;
    uint64_t v74 = (uint64_t (*)(void))v89;
    sub_1BFF33D2C(0, &qword_1EB884DC8, MEMORY[0x1E4FAB938]);
    swift_allocObject();
    uint64_t v88 = sub_1C1517C0C();
    uint64_t v87 = (char *)a2;
    uint64_t v38 = (uint64_t *)(*(uint64_t *)((char *)v27 + v28) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    uint64_t v39 = *v38;
    uint64_t v40 = v38[1];
    uint64_t v41 = v12[15];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1BFEF32C8(v41, (uint64_t)v27, v39, v40, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v86 = v42;
    if (v42)
    {
      swift_beginAccess();
      uint64_t v43 = *(void *)(v42 + 72);
      uint64_t v44 = v90;
      if (v43 && *(void *)(v43 + 16))
      {
        uint64_t v45 = v86;
        uint64_t v46 = *(void *)(v86 + 48);
        uint64_t v47 = *(void *)(v86 + 56);
        int v48 = *(unsigned __int8 *)(v86 + 64);
        swift_retain();
        swift_retain();
        uint64_t v49 = swift_bridgeObjectRetain();
        uint64_t v85 = sub_1C12A4950(v49, (uint64_t)v27);
        swift_bridgeObjectRelease();
        swift_release();
        if (v48) {
          uint64_t v66 = 0;
        }
        else {
          uint64_t v66 = v47;
        }
        if (v48) {
          uint64_t v67 = 0;
        }
        else {
          uint64_t v67 = v46;
        }
        type metadata accessor for FormatAnimationData();
        uint64_t v68 = swift_allocObject();
        *(void *)(v68 + 16) = v45;
        *(void *)(v68 + 24) = v67;
        *(void *)(v68 + 32) = v66;
        *(unsigned char *)(v68 + 40) = v48;
        *(void *)(v68 + 48) = v85;
        uint64_t v69 = *(void *)(v89 + 24);
        swift_beginAccess();
        swift_retain_n();
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v92 = *(void *)(v69 + 32);
        *(void *)(v69 + 32) = 0x8000000000000000;
        uint64_t v44 = v90;
        sub_1C0062D34(v68, v90, v37, isUniquelyReferenced_nonNull_native);
        *(void *)(v69 + 32) = v92;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release_n();
      }
    }
    else
    {
      uint64_t v44 = v90;
    }
    uint64_t v50 = (_OWORD *)swift_allocObject();
    v50[1] = 0u;
    _OWORD v50[2] = 0u;
    _OWORD v50[3] = 0u;
    void v50[4] = 0u;
    v50[5] = 0u;
    swift_getKeyPath();
    swift_beginAccess();
    unint64_t v92 = v12[4];
    unint64_t v51 = v92;
    swift_bridgeObjectRetain();
    sub_1BFF35EA4(v51);
    sub_1BFF30600(v27, v44, v37, v76);
    sub_1BFF322A8(v51);
    swift_beginAccess();
    swift_retain();
    uint64_t v52 = swift_bridgeObjectRetain();
    uint64_t v75 = sub_1C12A4C68(v52, (uint64_t)v27);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v53 = (void *)swift_allocObject();
    void v53[2] = v50;
    v53[3] = v12;
    uint64_t v54 = v77;
    v53[4] = v27;
    v53[5] = v54;
    uint64_t v55 = v80(0);
    uint64_t v56 = v81();
    swift_retain();
    uint64_t v85 = (uint64_t)v50;
    swift_retain();
    swift_retain();
    swift_retain();
    long long v80 = (uint64_t (*)(void))v56;
    uint64_t v74 = (uint64_t (*)(void))v56;
    uint64_t v81 = (uint64_t (*)(void))v55;
    uint64_t v73 = v55;
    uint64_t v57 = v76;
    sub_1C15173CC();
    uint64_t v82 = 0;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    id v58 = v83;
    uint64_t v59 = (void (*)(uint64_t *, uint64_t))v83[1];
    uint64_t v60 = v84;
    v59(v57, v84);
    swift_beginAccess();
    uint64_t v61 = v12[16];
    if (v61)
    {
      id v79 = (void (*)(char *, uint64_t))v59;
      long long v62 = (uint64_t (*)(char *, void, uint64_t))v58[13];
      uint64_t v63 = v78;
      uint64_t v64 = v62(v78, *MEMORY[0x1E4FAB9E0], v60);
      uint64_t v83 = &v75;
      MEMORY[0x1F4188790](v64);
      *(&v75 - 8) = v90;
      *(&v75 - 7) = v37;
      double v65 = v87;
      *(&v75 - 6) = v61;
      *(&v75 - 5) = (uint64_t)v65;
      swift_retain();
      uint64_t v74 = v80;
      double v72 = &v75 - 10;
      uint64_t v73 = (uint64_t)v81;
      uint64_t v71 = a9;
      sub_1C15172DC();
      v79(v63, v60);
      swift_release();
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BFF55BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = v6 + a1;
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v7 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *v8;
  unsigned __int8 v9 = (void *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v10 = *v9;
  unint64_t v11 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = *(void *)(v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13 < 0xFFFFFFFF)
  {
    long long v14 = *(_OWORD *)v12;
    long long v15 = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(v11 + 16) = *(_OWORD *)(v12 + 16);
    *(_OWORD *)(v11 + 32) = v15;
    *(_OWORD *)unint64_t v11 = v14;
  }
  else
  {
    *(void *)unint64_t v11 = *(void *)v12;
    *(void *)(v11 + 8) = *(void *)(v12 + 8);
    *(void *)(v11 + 16) = *(void *)(v12 + 16);
    *(void *)(v11 + 24) = *(void *)(v12 + 24);
    *(void *)(v11 + 32) = *(void *)(v12 + 32);
    *(void *)(v11 + 40) = *(void *)(v12 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t FormatImageNodeBinding.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v14 - v5;
  uint64_t v7 = *(void *)v2;
  unint64_t v8 = *(void *)(v2 + 8);
  unint64_t v9 = *(void *)(v2 + 16);
  uint64_t v10 = *(void *)(v2 + 24);
  uint64_t v11 = *(void *)(v2 + 32);
  unsigned int v12 = *(unsigned __int8 *)(v2 + 40);
  if ((v12 & 0x1E) == 0xE)
  {
    uint64_t v17 = *(void *)v2;
    unint64_t v18 = v8;
    unint64_t v19 = v9;
    char v23 = 8;
    sub_1BFF2B584(v7, v8, v9, v10, v11, v12);
    uint64_t result = sub_1C12ECBDC(&v17, &v23);
    if (v3) {
      return result;
    }
    v14[1] = result;
    sub_1C0EC63F8(v7, v8, result, 1, (uint64_t)v6);
    sub_1C0E56F54((uint64_t)v6, (uint64_t)&qword_1EB891010, (uint64_t)type metadata accessor for FormatOption, (uint64_t (*)(void))sub_1C0E572B0);
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v7;
  unint64_t v18 = v8;
  unint64_t v19 = v9;
  uint64_t v20 = v10;
  uint64_t v21 = v11;
  char v22 = v12;
  return FormatImageNodeBinding.bindChildren(binder:context:)(v15, v16);
}

uint64_t sub_1BFF55EC0(uint64_t a1)
{
  return sub_1BFF55EC8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1BFF55EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1BFEF2D8C(a2, a3);
    char v6 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1BFF55F38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v28 = a7;
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = type metadata accessor for FormatViewData(0);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF235F0(a1, (uint64_t)v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v19 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v15, 1, v19) == 1)
  {
    sub_1C12AD324((uint64_t)v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 10)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  sub_1BFF23AA4((uint64_t)v15, (uint64_t)v18, type metadata accessor for FormatViewData);
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 1)
  {
    uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1BFD32FB8(0, &qword_1EB887678, (void (*)(uint64_t))type metadata accessor for FormatViewData, (unint64_t *)&unk_1EB88F820, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes);
    uint64_t v22 = v21;
    uint64_t v23 = swift_allocBox();
    uint64_t v25 = (void *)(v24 + *(int *)(v22 + 48));
    sub_1BFF23AA4((uint64_t)v18, v24, type metadata accessor for FormatViewData);
    *uint64_t v25 = v20;
    v25[1] = a3;
    _OWORD v25[2] = a4;
    v25[3] = a5;
    v25[4] = a6;
    *uint64_t v28 = v23 | 0x1000000000000000;
    swift_retain();
    swift_retain();
    return sub_1C017C3D4(a4, a5);
  }
LABEL_7:
  uint64_t result = sub_1BFF1BA48((uint64_t)v18, type metadata accessor for FormatViewData);
  __break(1u);
  return result;
}

uint64_t FormatViewNode.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  unint64_t v21 = v2[4];
  sub_1BFF35EA4(v21);
  FormatSize.bind(binder:context:)(a1, a2);
  if (v3) {
    return sub_1BFF322A8(v21);
  }
  sub_1BFF322A8(v21);
  swift_beginAccess();
  uint64_t v8 = v2[6];
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v9; ++i)
    {
      unint64_t v11 = *(void *)(v8 + 8 * i + 32);
      sub_1BFF32264(v11);
      FormatAdjustment.bind(binder:context:)(a1, a2);
      sub_1BFF31E90(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  if (v2[7]) {
    FormatViewNodeStyle.bind(binder:context:)(a1, a2);
  }
  uint64_t v12 = v2[8];
  if (v12)
  {
    swift_beginAccess();
    uint64_t v13 = *(void *)(v12 + 72);
    if (v13)
    {
      swift_bridgeObjectRetain();
      sub_1C04CFB10(a1, a2, v13);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v14 = *(void *)(v12 + 88);
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v16 = (uint64_t *)(v14 + 72);
      do
      {
        uint64_t v17 = *v16;
        if (*v16)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C04CFB10(a1, a2, v17);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v16 += 7;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease_n();
    }
  }
  uint64_t result = swift_beginAccess();
  unint64_t v18 = v4[10];
  if (v18 >> 62 == 1)
  {
    unint64_t v19 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v20 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    sub_1BFE6FA30(v18);
    sub_1BFE6FA30(v19);
    swift_bridgeObjectRetain();
    sub_1C052A7F4(a1, a2, v19, v20);
    sub_1BFF0056C(v19);
    swift_bridgeObjectRelease();
    return sub_1BFF0056C(v18);
  }
  return result;
}

uint64_t FormatViewNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1BFF568DC(a1, a2, v7);
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v4 + 56);
  if (v9)
  {
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v11 = (unsigned char *)(v9 + 40);
      do
      {
        if ((*v11 & 1) == 0)
        {
          uint64_t v12 = *((void *)v11 - 1);
          swift_retain_n();
          FormatFloat.bind(binder:context:)(a1, a2);
          sub_1BFF49984(v12, 0);
          sub_1BFF49984(v12, 0);
        }
        v11 += 16;
        --v10;
      }
      while (v10);
      uint64_t result = swift_bridgeObjectRelease_n();
    }
  }
  uint64_t v13 = *(void *)(v4 + 64);
  if ((~v13 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatBackground.bind(binder:context:)(a1, a2);
    uint64_t result = sub_1BFEF68C0(v13);
  }
  uint64_t v14 = *(void *)(v4 + 72);
  if (v14) {
    uint64_t result = sub_1C04CDF64(a1, a2, v14);
  }
  int v15 = *(unsigned __int8 *)(v4 + 184);
  if (v15 != 254)
  {
    uint64_t v24 = *(void *)(v4 + 104);
    uint64_t v25 = *(void *)(v4 + 112);
    uint64_t v16 = *(void *)(v4 + 136);
    uint64_t v26 = *(void *)(v4 + 120);
    uint64_t v27 = *(void *)(v4 + 128);
    uint64_t v17 = *(void *)(v4 + 160);
    uint64_t v28 = *(void *)(v4 + 144);
    uint64_t v29 = *(void *)(v4 + 152);
    uint64_t v19 = *(void *)(v4 + 168);
    uint64_t v18 = *(void *)(v4 + 176);
    swift_retain();
    FormatColor.bind(binder:context:)(a1, a2);
    int v20 = v15;
    uint64_t v21 = v17;
    switch(v20)
    {
      case 0:
        return sub_1BFEF8738(v24, v25, v26, v27, v16, v28, v29, v17, v19, v18, 0);
      case 1:
        uint64_t v22 = v29;
        sub_1C053FAE0(a1, a2);
        unsigned __int8 v23 = 1;
        goto LABEL_24;
      case 2:
        uint64_t v22 = v29;
        sub_1C053FAE0(a1, a2);
        sub_1C053FAE0(a1, a2);
        unsigned __int8 v23 = 2;
        goto LABEL_24;
      case 3:
        uint64_t v22 = v29;
        sub_1C053FAE0(a1, a2);
        sub_1C053FAE0(a1, a2);
        unsigned __int8 v23 = 3;
        goto LABEL_24;
      case 4:
        uint64_t v22 = v29;
        sub_1C053FAE0(a1, a2);
        unsigned __int8 v23 = 4;
        goto LABEL_24;
      case 5:
        uint64_t v22 = v29;
        sub_1C053FAE0(a1, a2);
        sub_1C053FAE0(a1, a2);
        unsigned __int8 v23 = 5;
LABEL_24:
        uint64_t result = sub_1BFEF8738(v24, v25, v26, v27, v16, v28, v22, v21, v19, v18, v23);
        break;
      default:
        uint64_t result = sub_1BFEF8738(v24, v25, v26, v27, v16, v28, v29, v17, v19, v18, 0xFFu);
        break;
    }
  }
  return result;
}

uint64_t sub_1BFF568DC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (!v3) {
    return result;
  }
  uint64_t v5 = result;
  uint64_t v6 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v117 = v5;
  uint64_t v118 = a2;
  uint64_t v113 = v3;
  for (i = v6; ; uint64_t v6 = i)
  {
    uint64_t v116 = v7;
    uint64_t v8 = (long long *)(v6 + 160 * v7);
    long long v9 = v8[6];
    long long v10 = v8[8];
    long long v132 = v8[7];
    *(_OWORD *)char v133 = v10;
    *(_OWORD *)&v133[9] = *(long long *)((char *)v8 + 137);
    long long v11 = v8[3];
    long long v127 = v8[2];
    long long v128 = v11;
    long long v12 = v8[5];
    long long v129 = v8[4];
    long long v130 = v12;
    long long v131 = v9;
    long long v13 = v8[1];
    long long v125 = *v8;
    long long v126 = v13;
    uint64_t v14 = v13;
    if ((~(void)v13 & 0xF000000000000007) != 0) {
      break;
    }
    sub_1C05DD5B8((uint64_t)&v125);
    uint64_t v15 = *((void *)&v126 + 1);
    if (*((void *)&v126 + 1)) {
      goto LABEL_8;
    }
LABEL_13:
    int v21 = v133[8];
    if (v133[8] != 254)
    {
      uint64_t v23 = *((void *)&v128 + 1);
      long long v24 = v129;
      long long v25 = v130;
      uint64_t v114 = v131;
      uint64_t v26 = *((void *)&v132 + 1);
      uint64_t v120 = v132;
      uint64_t v121 = *((void *)&v131 + 1);
      uint64_t v27 = v5;
      uint64_t v28 = *(void *)v133;
      *(void *)&long long v122 = *((void *)&v130 + 1);
      swift_retain_n();
      uint64_t v29 = v27;
      uint64_t v30 = v134;
      FormatColor.bind(binder:context:)(v29, v118);
      uint64_t v134 = v30;
      if (v30)
      {
        sub_1BFEF8738(v23, v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v114, v121, v120, v26, v28, v21);
        sub_1BFEF8738(v23, v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v114, v121, v120, v26, v28, v21);
        goto LABEL_113;
      }
      uint64_t v112 = v26;
      sub_1BFEF8738(v23, v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v114, v121, v120, v26, v28, v21);
      switch(v21)
      {
        case 0:
          unsigned __int8 v108 = 0;
          goto LABEL_20;
        case 1:
          uint64_t v31 = v28;
          uint64_t v32 = v23;
          *((void *)&v110 + 1) = *((void *)&v24 + 1);
          long long v111 = v25;
          sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
          if (swift_dynamicCast())
          {
            uint64_t v33 = *((void *)&v123 + 1);
            uint64_t v34 = v124;
            __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
            uint64_t v35 = v134;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8))(v117, v118, v33, v34);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
            uint64_t v36 = v112;
            uint64_t v134 = v35;
            if (v35) {
              goto LABEL_111;
            }
            uint64_t v38 = v120;
            uint64_t v37 = v121;
          }
          else
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
            uint64_t v37 = v121;
            uint64_t v36 = v26;
            uint64_t v38 = v120;
          }
          if (!swift_dynamicCast())
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
            unsigned __int8 v72 = 1;
            goto LABEL_67;
          }
          uint64_t v54 = *((void *)&v123 + 1);
          uint64_t v55 = v124;
          __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
          a2 = v118;
          uint64_t v56 = v134;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8))(v117, v118, v54, v55);
          uint64_t v134 = v56;
          if (!v56)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
            char v57 = 1;
            goto LABEL_52;
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
LABEL_111:
          unsigned __int8 v105 = 1;
          goto LABEL_112;
        case 2:
          uint64_t v39 = v28;
          uint64_t v40 = v23;
          long long v110 = v24;
          long long v111 = v25;
          sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
          if (swift_dynamicCast())
          {
            uint64_t v41 = *((void *)&v123 + 1);
            uint64_t v42 = v124;
            __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
            a2 = v118;
            uint64_t v43 = v134;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8))(v117, v118, v41, v42);
            uint64_t v44 = v112;
            uint64_t v134 = v43;
            if (v43) {
              goto LABEL_105;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          }
          else
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
            a2 = v118;
            uint64_t v44 = v26;
          }
          if (swift_dynamicCast())
          {
            uint64_t v58 = *((void *)&v123 + 1);
            uint64_t v59 = v124;
            __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
            uint64_t v60 = v134;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8))(v117, a2, v58, v59);
            uint64_t v134 = v60;
            if (v60) {
              goto LABEL_105;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          }
          else
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
          }
          uint64_t v73 = v120;
          if (swift_dynamicCast())
          {
            uint64_t v74 = *((void *)&v123 + 1);
            uint64_t v75 = v124;
            __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
            uint64_t v76 = v134;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 8))(v117, a2, v74, v75);
            uint64_t v134 = v76;
            if (v76) {
              goto LABEL_105;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
            uint64_t v73 = v120;
          }
          else
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
          }
          if (!swift_dynamicCast())
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
            char v99 = 2;
            goto LABEL_90;
          }
          uint64_t v83 = *((void *)&v123 + 1);
          uint64_t v84 = v124;
          __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
          uint64_t v85 = v134;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 8))(v117, a2, v83, v84);
          uint64_t v134 = v85;
          if (!v85)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
            char v86 = 2;
            goto LABEL_85;
          }
LABEL_105:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          unsigned __int8 v104 = 2;
          goto LABEL_108;
        case 3:
          uint64_t v39 = v28;
          uint64_t v40 = v23;
          long long v110 = v24;
          long long v111 = v25;
          sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
          if (swift_dynamicCast())
          {
            uint64_t v45 = *((void *)&v123 + 1);
            uint64_t v46 = v124;
            __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
            a2 = v118;
            uint64_t v47 = v134;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8))(v117, v118, v45, v46);
            uint64_t v44 = v112;
            uint64_t v134 = v47;
            if (v47) {
              goto LABEL_106;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          }
          else
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
            a2 = v118;
            uint64_t v44 = v26;
          }
          if (swift_dynamicCast())
          {
            uint64_t v61 = *((void *)&v123 + 1);
            uint64_t v62 = v124;
            __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
            uint64_t v63 = v134;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8))(v117, a2, v61, v62);
            uint64_t v134 = v63;
            if (v63) {
              goto LABEL_106;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          }
          else
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
          }
          uint64_t v73 = v120;
          if (swift_dynamicCast())
          {
            uint64_t v77 = *((void *)&v123 + 1);
            uint64_t v78 = v124;
            __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
            uint64_t v79 = v134;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v78 + 8))(v117, a2, v77, v78);
            uint64_t v134 = v79;
            if (v79) {
              goto LABEL_106;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
            uint64_t v73 = v120;
          }
          else
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
          }
          if (!swift_dynamicCast())
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
            char v99 = 3;
            goto LABEL_90;
          }
          uint64_t v87 = *((void *)&v123 + 1);
          uint64_t v88 = v124;
          __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
          uint64_t v89 = v134;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 8))(v117, a2, v87, v88);
          uint64_t v134 = v89;
          if (!v89)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
            char v86 = 3;
            goto LABEL_85;
          }
LABEL_106:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          unsigned __int8 v104 = 3;
          goto LABEL_108;
        case 4:
          uint64_t v31 = v28;
          uint64_t v32 = v23;
          *((void *)&v110 + 1) = *((void *)&v24 + 1);
          long long v111 = v25;
          sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
          if (swift_dynamicCast())
          {
            uint64_t v48 = *((void *)&v123 + 1);
            uint64_t v49 = v124;
            __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
            uint64_t v50 = v134;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8))(v117, v118, v48, v49);
            uint64_t v36 = v112;
            uint64_t v134 = v50;
            if (v50) {
              goto LABEL_109;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
            uint64_t v38 = v120;
            uint64_t v37 = v121;
          }
          else
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
            uint64_t v37 = v121;
            uint64_t v36 = v26;
            uint64_t v38 = v120;
          }
          if (!swift_dynamicCast())
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
            unsigned __int8 v72 = 4;
LABEL_67:
            sub_1BFEF8738(v32, v24, *((uint64_t *)&v110 + 1), v111, *((uint64_t *)&v111 + 1), v114, v37, v38, v36, v31, v72);
LABEL_68:
            a2 = v118;
            goto LABEL_92;
          }
          uint64_t v64 = *((void *)&v123 + 1);
          uint64_t v65 = v124;
          __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
          a2 = v118;
          uint64_t v66 = v134;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8))(v117, v118, v64, v65);
          uint64_t v134 = v66;
          if (!v66)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
            char v57 = 4;
LABEL_52:
            unsigned __int8 v109 = v57;
            uint64_t v106 = v36;
            uint64_t v107 = v31;
            uint64_t v67 = v32;
            uint64_t v68 = v24;
            goto LABEL_86;
          }
LABEL_109:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          unsigned __int8 v105 = 4;
LABEL_112:
          sub_1BFEF8738(v32, v24, *((uint64_t *)&v110 + 1), v111, *((uint64_t *)&v111 + 1), v114, v121, v120, v36, v31, v105);
          goto LABEL_113;
        case 5:
          uint64_t v39 = v28;
          uint64_t v40 = v23;
          long long v110 = v24;
          long long v111 = v25;
          sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
          if (swift_dynamicCast())
          {
            uint64_t v51 = *((void *)&v123 + 1);
            uint64_t v52 = v124;
            __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
            a2 = v118;
            uint64_t v53 = v134;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8))(v117, v118, v51, v52);
            uint64_t v44 = v112;
            uint64_t v134 = v53;
            if (v53) {
              goto LABEL_107;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          }
          else
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
            a2 = v118;
            uint64_t v44 = v26;
          }
          if (swift_dynamicCast())
          {
            uint64_t v69 = *((void *)&v123 + 1);
            uint64_t v70 = v124;
            __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
            uint64_t v71 = v134;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8))(v117, a2, v69, v70);
            uint64_t v134 = v71;
            if (v71) {
              goto LABEL_107;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          }
          else
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
          }
          uint64_t v73 = v120;
          if (swift_dynamicCast())
          {
            uint64_t v80 = *((void *)&v123 + 1);
            uint64_t v81 = v124;
            __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
            uint64_t v82 = v134;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 8))(v117, a2, v80, v81);
            uint64_t v134 = v82;
            if (v82) {
              goto LABEL_107;
            }
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
            uint64_t v73 = v120;
          }
          else
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
          }
          if (!swift_dynamicCast())
          {
            uint64_t v124 = 0;
            long long v122 = 0u;
            long long v123 = 0u;
            sub_1BFE4D118((uint64_t)&v122, qword_1EB874940, (unint64_t *)&qword_1EB874938);
            char v99 = 5;
LABEL_90:
            unsigned __int8 v109 = v99;
            uint64_t v106 = v44;
            uint64_t v107 = v39;
            uint64_t v67 = v40;
            uint64_t v93 = *((void *)&v110 + 1);
            uint64_t v68 = v110;
            uint64_t v95 = *((void *)&v111 + 1);
            uint64_t v94 = v111;
            uint64_t v96 = v114;
            uint64_t v97 = v121;
            uint64_t v98 = v73;
LABEL_91:
            sub_1BFEF8738(v67, v68, v93, v94, v95, v96, v97, v98, v106, v107, v109);
LABEL_92:
            uint64_t v5 = v117;
            uint64_t v3 = v113;
            uint64_t v22 = *(void *)&v133[16];
            if (!*(void *)&v133[16]) {
              goto LABEL_100;
            }
LABEL_93:
            uint64_t v100 = *(void *)(v22 + 16);
            if (!v100) {
              goto LABEL_100;
            }
            swift_bridgeObjectRetain_n();
            uint64_t v101 = (unsigned char *)(v22 + 40);
            while (1)
            {
              if ((*v101 & 1) == 0)
              {
                *(void *)&long long v122 = *((void *)v101 - 1);
                uint64_t v102 = v122;
                swift_retain_n();
                uint64_t v103 = v134;
                FormatFloat.bind(binder:context:)(v5, a2);
                sub_1BFF49984(v102, 0);
                sub_1BFF49984(v102, 0);
                uint64_t v134 = v103;
                if (v103) {
                  break;
                }
              }
              v101 += 16;
              if (!--v100)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_100;
              }
            }
            swift_bridgeObjectRelease_n();
            goto LABEL_113;
          }
          uint64_t v90 = *((void *)&v123 + 1);
          uint64_t v91 = v124;
          __swift_project_boxed_opaque_existential_1(&v122, *((uint64_t *)&v123 + 1));
          uint64_t v92 = v134;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 8))(v117, a2, v90, v91);
          uint64_t v134 = v92;
          if (!v92)
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
            char v86 = 5;
LABEL_85:
            unsigned __int8 v109 = v86;
            uint64_t v106 = v44;
            uint64_t v107 = v39;
            uint64_t v67 = v40;
            uint64_t v68 = v110;
LABEL_86:
            uint64_t v93 = *((void *)&v110 + 1);
            uint64_t v95 = *((void *)&v111 + 1);
            uint64_t v94 = v111;
            uint64_t v96 = v114;
            uint64_t v98 = v120;
            uint64_t v97 = v121;
            goto LABEL_91;
          }
LABEL_107:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v122);
          unsigned __int8 v104 = 5;
LABEL_108:
          sub_1BFEF8738(v40, v110, *((uint64_t *)&v110 + 1), v111, *((uint64_t *)&v111 + 1), v114, v121, v120, v44, v39, v104);
          goto LABEL_113;
        default:
          unsigned __int8 v108 = -1;
LABEL_20:
          sub_1BFEF8738(v23, v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v114, v121, v120, v26, v28, v108);
          goto LABEL_68;
      }
    }
    a2 = v118;
    uint64_t v22 = *(void *)&v133[16];
    if (*(void *)&v133[16]) {
      goto LABEL_93;
    }
LABEL_100:
    uint64_t v7 = v116 + 1;
    sub_1C05DD698((uint64_t)&v125);
    if (v116 + 1 == v3) {
      return swift_bridgeObjectRelease();
    }
  }
  *(void *)&long long v122 = v13;
  sub_1C05DD5B8((uint64_t)&v125);
  sub_1BFEF683C(v14);
  uint64_t v16 = v134;
  FormatBackground.bind(binder:context:)(v5, a2);
  uint64_t v134 = v16;
  if (!v16)
  {
    sub_1BFEF68C0(v14);
    uint64_t v15 = *((void *)&v126 + 1);
    if (!*((void *)&v126 + 1)) {
      goto LABEL_13;
    }
LABEL_8:
    uint64_t v17 = *(void *)(v15 + 16);
    if (!v17) {
      goto LABEL_13;
    }
    uint64_t v18 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      uint64_t v119 = v17;
      uint64_t v19 = *(void *)(v18 - 16);
      *(void *)&long long v122 = *(void *)(v18 - 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      uint64_t v20 = v134;
      FormatColor.bind(binder:context:)(v117, v118);
      if (v20) {
        break;
      }
      swift_release();
      *(void *)&long long v122 = v19;
      swift_retain();
      FormatFloat.bind(binder:context:)(v117, v118);
      uint64_t v134 = 0;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v18 += 40;
      uint64_t v17 = v119 - 1;
      if (v119 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = v117;
        uint64_t v3 = v113;
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_1C05DD698((uint64_t)&v125);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v134 = v20;
    return result;
  }
  sub_1BFEF68C0(v14);
LABEL_113:
  sub_1C05DD698((uint64_t)&v125);
  return swift_bridgeObjectRelease();
}

uint64_t FormatAccessibilityNode.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  swift_beginAccess();
  unint64_t v18 = *(void *)(v2 + 32);
  char v19 = *(unsigned char *)(v2 + 40);
  sub_1BFF4CEEC(v18, v19);
  FormatAccessibilityProperty.bind(binder:context:)(a1, a2);
  uint64_t result = sub_1BFF4BCA0(v18, v19);
  if (!v3)
  {
    uint64_t result = swift_beginAccess();
    unsigned int v8 = *(unsigned __int16 *)(v2 + 72);
    if (v8 >> 10 <= 0x3E)
    {
      uint64_t v10 = *(void *)(v2 + 48);
      uint64_t v9 = *(void *)(v2 + 56);
      uint64_t v11 = *(void *)(v4 + 64);
      if ((v8 & 0x8000) != 0)
      {
        sub_1C05D881C(v10, v9, v11, v8, BYTE1(v8) & 0x7F, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
        FormatCommandBinding.bind(binder:context:)(a1, a2);
        uint64_t v15 = v10;
        uint64_t v16 = v9;
        uint64_t v17 = v11;
      }
      else
      {
        uint64_t v12 = *(void *)(v10 + 16);
        if (!v12) {
          return result;
        }
        sub_1BFF4DC7C(v10, v9, v11, v8);
        uint64_t v20 = v11;
        sub_1BFFDF514(v10, v9, v11, v8);
        long long v13 = (unsigned char *)(v10 + 40);
        do
        {
          if ((*v13 & 1) == 0)
          {
            uint64_t v14 = *((void *)v13 - 1);
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            sub_1BFF49984(v14, 0);
            sub_1BFF49984(v14, 0);
          }
          v13 += 16;
          --v12;
        }
        while (v12);
        sub_1BFF4BC8C(v10, v9, v20, v8);
        uint64_t v15 = v10;
        uint64_t v16 = v9;
        uint64_t v17 = v20;
      }
      return sub_1BFF4BC8C(v15, v16, v17, v8);
    }
  }
  return result;
}

unint64_t FormatAccessibilityProperty.bind(binder:context:)(unint64_t result, uint64_t a2)
{
  unint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  if (v4) {
    int v5 = 4;
  }
  else {
    int v5 = 0;
  }
  unint64_t v7 = result;
  switch((*(void *)v2 >> 60) & 3 | v5)
  {
    case 1:
      if (!(v3 >> 62)) {
        goto LABEL_15;
      }
      if (v3 >> 62 == 1)
      {
        uint64_t v9 = (void *)(v3 & 0xFFFFFFFFFFFFFFFLL);
        goto LABEL_14;
      }
      break;
    case 2:
    case 3:
    case 5:
      if (!(v3 >> 62))
      {
LABEL_15:
        __int16 v13 = *(_WORD *)((v3 & 0xCFFFFFFFFFFFFFFFLL) + 0x40);
        long long v14 = *(_OWORD *)((v3 & 0xCFFFFFFFFFFFFFFFLL) + 0x20);
        long long v22 = *(_OWORD *)((v3 & 0xCFFFFFFFFFFFFFFFLL) + 0x10);
        long long v23 = v14;
        long long v24 = *(_OWORD *)((v3 & 0xCFFFFFFFFFFFFFFFLL) + 0x30);
        __int16 v25 = v13;
        goto LABEL_24;
      }
      if (v3 >> 62 == 1)
      {
        unsigned int v8 = (void *)(v3 & 0xFFFFFFFFFFFFFFFLL);
        goto LABEL_19;
      }
      break;
    case 4:
      if (!(v3 >> 62)) {
        goto LABEL_23;
      }
      if (v3 >> 62 == 1)
      {
        unsigned int v8 = (void *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
LABEL_19:
        uint64_t v15 = v8[2];
        uint64_t v16 = v8[3];
        unint64_t v17 = v8[4];
        sub_1BFF4CEEC(v3, v4);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C04C8B58(v7, a2, v15, v16, v17);
        goto LABEL_20;
      }
      break;
    case 6:
      char v26 = *(void *)v2;
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
      if (swift_dynamicCast())
      {
        uint64_t v18 = *((void *)&v23 + 1);
        uint64_t v19 = v24;
        __swift_project_boxed_opaque_existential_1(&v22, *((uint64_t *)&v23 + 1));
        (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8))(v7, a2, v18, v19);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
      }
      else
      {
        *(void *)&long long v24 = 0;
        long long v22 = 0u;
        long long v23 = 0u;
        uint64_t result = sub_1BFE4D118((uint64_t)&v22, qword_1EB874940, (unint64_t *)&qword_1EB874938);
      }
      break;
    default:
      if (v3 >> 62)
      {
        if (v3 >> 62 != 1) {
          return result;
        }
        uint64_t v9 = (void *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
LABEL_14:
        uint64_t v10 = v9[2];
        uint64_t v11 = v9[3];
        unint64_t v12 = v9[4];
        sub_1BFF4CEEC(v3, v4);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1C04C8B58(v7, a2, v10, v11, v12);
LABEL_20:
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
LABEL_23:
        __int16 v20 = *(_WORD *)(v3 + 64);
        long long v21 = *(_OWORD *)(v3 + 32);
        long long v22 = *(_OWORD *)(v3 + 16);
        long long v23 = v21;
        long long v24 = *(_OWORD *)(v3 + 48);
        __int16 v25 = v20;
LABEL_24:
        swift_retain();
        FormatTextNodeBinding.bind(binder:context:)(v7, a2);
      }
      uint64_t result = sub_1BFF4BCA0(v3, v4);
      break;
  }
  return result;
}

uint64_t FormatTextNodeBinding.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  sub_1C00AB000();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = *(void *)v2;
  uint64_t v6 = *(void *)(v2 + 8);
  unint64_t v9 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t v10 = *(void *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 40);
  char v12 = *(unsigned char *)(v2 + 48);
  char v13 = *(unsigned char *)(v2 + 49);
  if (((((v12 & 8) != 0) | (2 * v13)) - 3) <= 1u)
  {
    uint64_t v22 = (uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v25 = v7;
    uint64_t v26 = v6;
    unint64_t v27 = v9;
    char v33 = 5;
    uint64_t v14 = v10;
    sub_1BFF2A99C(v7, v6, v9, v8, v10, v11, v12, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C12ECBDC(&v25, &v33);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v19 = v11;
    uint64_t v20 = v8;
    uint64_t v21 = v14;
    uint64_t v17 = v22;
    sub_1C0EC63F8(v7, v6, v15, 1, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C0257E00(v17);
    uint64_t v8 = v20;
    uint64_t v10 = v21;
    uint64_t v11 = v19;
  }
  uint64_t v25 = v7;
  uint64_t v26 = v6;
  unint64_t v27 = v9;
  uint64_t v28 = v8;
  uint64_t v29 = v10;
  uint64_t v30 = v11;
  char v31 = v12;
  char v32 = v13;
  return FormatTextNodeBinding.bindChildren(binder:context:)(v23, v24);
}

uint64_t FormatTextNodeBinding.bindChildren(binder:context:)(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 16);
  unsigned int v5 = *(unsigned __int8 *)(v2 + 48);
  if (((1 << ((2 * (*(unsigned char *)(v2 + 49) & 0x7F)) | ((v5 & 8) != 0))) & 0x2FFB) == 0)
  {
    uint64_t v7 = result;
    if (((2 * (*(unsigned char *)(v2 + 49) & 0x7F)) | (v5 >> 3) & 1) == 2)
    {
      unsigned int v8 = v5 >> 4;
      if (((1 << v8) & 0x777) != 0) {
        return result;
      }
      if (v8 == 3)
      {
        *(void *)&long long v11 = *(void *)v2;
        *((void *)&v11 + 1) = v3;
        LOWORD(v12) = v4;
        return sub_1C05D867C(a2);
      }
    }
    if ((v3 & 0x80) != 0)
    {
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
      if (swift_dynamicCast())
      {
        uint64_t v9 = *((void *)&v12 + 1);
        uint64_t v10 = v13;
        __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v7, a2, v9, v10);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
      }
      else
      {
        uint64_t v13 = 0;
        long long v11 = 0u;
        long long v12 = 0u;
        return sub_1BFE4D118((uint64_t)&v11, qword_1EB874940, (unint64_t *)&qword_1EB874938);
      }
    }
  }
  return result;
}

void sub_1BFF582A4()
{
  if (!qword_1EB87A750)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A750);
    }
  }
}

uint64_t sub_1BFF582FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFF2F15C(a1, a2, a3, a4);
}

uint64_t FeedItemLayoutAttributes.identifier.getter()
{
  uint64_t v1 = type metadata accessor for PluginLayout.Context(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v28[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for EngagementBannerViewLayout.Context();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (void *)((char *)&v28[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (void *)((char *)&v28[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for HeadlineViewLayout.Context(0);
  MEMORY[0x1F4188790](v10);
  long long v12 = (char *)&v28[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedBannerAdViewLayout.Context(0);
  __n128 v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (void *)((char *)&v28[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *v0;
  switch((unint64_t)*v0 >> 60)
  {
    case 1uLL:
      sub_1BFEB1214((v17 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v27);
      uint64_t v18 = v27;
      swift_bridgeObjectRetain();
      sub_1BFEB1174((uint64_t)&v27);
      return v18;
    case 2uLL:
      sub_1C0C47B64((v17 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v27);
      uint64_t v18 = v27;
      swift_bridgeObjectRetain();
      sub_1C0C47BC0((uint64_t)&v27);
      return v18;
    case 3uLL:
      sub_1BFE29A3C();
      uint64_t v19 = swift_projectBox();
      sub_1BFE29638(v19, (uint64_t)v16, type metadata accessor for FeedBannerAdViewLayout.Context);
      uint64_t v18 = *v16;
      swift_bridgeObjectRetain();
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for FeedBannerAd;
      uint64_t v21 = (uint64_t)v16;
      goto LABEL_14;
    case 4uLL:
      sub_1BFE298EC();
      uint64_t v22 = swift_projectBox();
      sub_1BFE29638(v22, (uint64_t)v12, type metadata accessor for HeadlineViewLayout.Context);
      sub_1BFE29638((uint64_t)&v12[*(int *)(v10 + 20)], (uint64_t)v9, type metadata accessor for FeedHeadline);
      sub_1BFE299DC((uint64_t)v12, type metadata accessor for HeadlineViewLayout.Context);
      uint64_t v18 = *v9;
      swift_bridgeObjectRetain();
      uint64_t v20 = type metadata accessor for FeedHeadline;
      uint64_t v21 = (uint64_t)v9;
      goto LABEL_14;
    case 5uLL:
      sub_1C01BC5C8((v17 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v27);
      uint64_t v18 = v28[1];
      swift_bridgeObjectRetain();
      sub_1C01BC710((uint64_t)&v27);
      return v18;
    case 6uLL:
      sub_1C1192E14((v17 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v27);
      sub_1BFEA435C((uint64_t)v28, (uint64_t)&v29);
      sub_1C0FC6680((uint64_t)&v27);
      uint64_t v18 = v29;
      swift_bridgeObjectRetain();
      sub_1BFEA4290((uint64_t)&v29);
      return v18;
    case 7uLL:
      sub_1BFE29960();
      uint64_t v18 = *(void *)(*(void *)(*(void *)(swift_projectBox() + *(int *)(v23 + 48))
                                  + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                      + 48);
      goto LABEL_10;
    case 8uLL:
      sub_1C0F557B4((v17 & 0xFFFFFFFFFFFFFFFLL) + 16, (uint64_t)&v27);
      sub_1C0249E84((uint64_t)v28, (uint64_t)&v29);
      sub_1C1192DC0((uint64_t)&v27);
      uint64_t v18 = v29;
      swift_bridgeObjectRetain();
      sub_1C0249FA4((uint64_t)&v29);
      return v18;
    case 9uLL:
      sub_1C11906EC(0, (unint64_t *)&qword_1EB8608B8, (void (*)(uint64_t))type metadata accessor for EngagementBannerViewLayout.Context);
      uint64_t v24 = swift_projectBox();
      sub_1BFE29638(v24, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for EngagementBannerViewLayout.Context);
      uint64_t v18 = *v6;
      swift_bridgeObjectRetain();
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner;
      uint64_t v21 = (uint64_t)v6;
      goto LABEL_14;
    case 0xAuLL:
      sub_1C11906EC(0, (unint64_t *)&qword_1EB86C4B0, (void (*)(uint64_t))type metadata accessor for PluginLayout.Context);
      uint64_t v25 = swift_projectBox();
      sub_1BFE29638(v25, (uint64_t)v3, type metadata accessor for PluginLayout.Context);
      uint64_t v18 = _s5TeaUI11PluginModelC8NewsFeedE15debugIdentifierSSvg_0();
      uint64_t v20 = type metadata accessor for PluginLayout.Context;
      uint64_t v21 = (uint64_t)v3;
LABEL_14:
      sub_1BFE299DC(v21, v20);
      break;
    case 0xBuLL:
      uint64_t v27 = *(void *)((v17 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v18 = FeedItemLayoutAttributes.identifier.getter(v14);
      break;
    default:
      uint64_t v18 = *(void *)(v17 + 16);
LABEL_10:
      swift_bridgeObjectRetain();
      break;
  }
  return v18;
}

uint64_t type metadata accessor for HeadlineViewLayout.Context(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB8761E8);
}

uint64_t type metadata accessor for FeedBannerAdViewLayout.Context(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB872AC8);
}

uint64_t type metadata accessor for EngagementBannerViewLayout.Context()
{
  uint64_t result = qword_1EB87FDF8;
  if (!qword_1EB87FDF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1BFF58908(unint64_t result)
{
  if (result >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1BFF58918(unint64_t result)
{
  if (result >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for FormatPropertyDefinition(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = &qword_1EB88E9C8;
      uint64_t v4 = MEMORY[0x1E4FBB390];
      uint64_t v5 = &protocol witness table for Bool;
      goto LABEL_11;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(void *)(a1 + 72) & 0xF000000000000007) != 0) {
        swift_release();
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_1EB88E9B8;
      uint64_t v7 = &type metadata for FormatColor;
      uint64_t v8 = sub_1C003F2E8;
      goto LABEL_28;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF71B30();
      uint64_t v10 = v9;
      uint64_t v11 = a1 + *(int *)(v9 + 52);
      uint64_t v12 = sub_1C151631C();
      goto LABEL_13;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
      goto LABEL_30;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_1EB88E990;
      uint64_t v7 = (ValueMetadata *)MEMORY[0x1E4FBC958];
      uint64_t v8 = sub_1C0092008;
      goto LABEL_28;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = &qword_1EB88E9D0;
      uint64_t v4 = MEMORY[0x1E4FBB550];
      uint64_t v5 = &protocol witness table for Int;
      goto LABEL_11;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = &qword_1EB88E9C0;
      uint64_t v4 = MEMORY[0x1E4FBB1A0];
      uint64_t v5 = &protocol witness table for String;
LABEL_11:
      sub_1BFF71970(0, v3, v4, (uint64_t)v5, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
      goto LABEL_29;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF719C0();
      uint64_t v10 = v15;
      uint64_t v11 = a1 + *(int *)(v15 + 52);
      uint64_t v12 = sub_1C1515FDC();
LABEL_13:
      uint64_t v16 = v12;
      uint64_t v17 = *(void *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v11, 1, v12)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v11, v16);
      }
      swift_bridgeObjectRelease();
      uint64_t v13 = *(int *)(v10 + 64);
      goto LABEL_30;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(void *)(a1 + 72) & 0xF000000000000007) != 0) {
        swift_release();
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_1EB88E9A0;
      uint64_t v7 = &type metadata for FormatAsyncImageContent;
      uint64_t v8 = sub_1C0036630;
      goto LABEL_28;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(void *)(a1 + 72) & 0xF000000000000007) != 0) {
        swift_release();
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_1EB88E998;
      uint64_t v7 = &type metadata for FormatVideoNodeContent;
      uint64_t v8 = sub_1C00738F0;
      goto LABEL_28;
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(void *)(a1 + 72) & 0xF000000000000007) != 0) {
        swift_release();
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_1EB88E9B0;
      uint64_t v7 = &type metadata for FormatFont;
      uint64_t v8 = sub_1C0084C58;
      goto LABEL_28;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(void *)(a1 + 72) & 0xF000000000000007) != 0) {
        swift_release();
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_1EB88E9A8;
      uint64_t v7 = &type metadata for FormatVideoPlayerContent;
      uint64_t v8 = sub_1C006F9DC;
LABEL_28:
      sub_1BFF718BC(0, v6, (uint64_t (*)(void))v8, (uint64_t)v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
LABEL_29:
      uint64_t v13 = *(int *)(v14 + 64);
LABEL_30:
      uint64_t v18 = a1 + v13;
      uint64_t v19 = sub_1C1518CDC();
      uint64_t v21 = *(void *)(v19 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v19);
      if (!result)
      {
        uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
        uint64_t result = v20(v18, v19);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF58ECC(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t (*a8)(void), uint64_t (*a9)(uint64_t, uint64_t, unint64_t, unint64_t), uint64_t (*a10)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, void))
{
  int v10 = a7 >> 4;
  if (v10 == 8) {
    return a10(result, a2, a3, a4, a5, a6, a7 & 0xF);
  }
  if (v10 == 3) {
    return a9(result, a2, a3, a3 >> 8);
  }
  if (!(a7 >> 4)) {
    return a8();
  }
  return result;
}

unint64_t sub_1BFF58F10(unint64_t result)
{
  unint64_t v1 = result >> 62;
  if (!(result >> 62) || v1 == 2 || v1 == 1) {
    return swift_retain();
  }
  return result;
}

id sub_1BFF58F34(uint64_t a1)
{
  id v3 = v2;
  uint64_t v5 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (id *)&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  switch(*v1)
  {
    case 1:
      sub_1BFFB5F74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v12);
      if (!v2)
      {
        LOBYTE(v11[0]) = v26;
        *(_OWORD *)((char *)v11 + 1) = v27;
        id v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(objc_retainAutoreleasedReturnValue(objc_msgSend((id)v12, sel_sourceChannel, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25,
                     v11[0],
                     (unint64_t)(v27 >> 56),
                     v11[2])),
                 sel_theme));
        swift_unknownObjectRelease();
        sub_1C01880A4((uint64_t)v10);
      }
      break;
    case 2:
      sub_1C0E473E0(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v12);
      if (!v2)
      {
        id v3 = objc_msgSend(v13, sel_theme);
        sub_1BFEA4290((uint64_t)&v12);
      }
      break;
    case 3:
      sub_1C0E47688(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), &v12);
      if (!v2)
      {
        id v3 = objc_msgSend(objc_msgSend(v18, sel_puzzleType), sel_theme);
        swift_unknownObjectRelease();
        sub_1C01F0A74((uint64_t)&v12);
      }
      break;
    default:
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)]);
      if (!v2)
      {
        id v8 = objc_msgSend(v7[5], sel_sourceChannel);
        if (v8)
        {
          id v3 = objc_msgSend(v8, sel_theme);
          swift_unknownObjectRelease();
        }
        else
        {
          id v3 = 0;
        }
        sub_1BFF2F7F4((uint64_t)v7);
      }
      break;
  }
  return v3;
}

double sub_1BFF591BC()
{
  uint64_t v1 = sub_1C151794C();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v26 - v6;
  MEMORY[0x1F4188790](v8);
  int v10 = (char *)v26 - v9;
  MEMORY[0x1F4188790](v11);
  id v13 = (char *)v26 - v12;
  uint64_t v14 = *v0;
  if (*v0)
  {
    if (v14 == 1)
    {
      sub_1C15176BC();
      sub_1C151793C();
      double v21 = round(v20 * 56.0 * 0.25);
      if (byte_1EA2B53C0) {
        double v17 = v21;
      }
      else {
        double v17 = 14.0;
      }
      id v13 = v10;
    }
    else if (v14 == 2)
    {
      sub_1C15176BC();
      sub_1C151793C();
      double v16 = round(v15 * 80.0 * 0.25);
      if (byte_1EA2B53C0) {
        double v17 = v16;
      }
      else {
        double v17 = 20.0;
      }
      id v13 = v7;
    }
    else
    {
      sub_1C1517EFC();
      uint64_t v23 = v26[0];
      double v17 = sub_1BFF493E4(v26[1], v14);
      swift_release();
      if (v23) {
        return v17;
      }
      sub_1C15176BC();
      sub_1C151793C();
      double v25 = round(v17 * 4.0 * v24 * 0.25);
      if (byte_1EA2B53C0) {
        double v17 = v25;
      }
      id v13 = v4;
    }
  }
  else
  {
    sub_1C15176BC();
    sub_1C151793C();
    double v19 = round(v18 * 48.0 * 0.25);
    if (byte_1EA2B53C0) {
      double v17 = v19;
    }
    else {
      double v17 = 12.0;
    }
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v1);
  return v17;
}

uint64_t sub_1BFF594A4@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v34 = a3;
  sub_1BFF31E28(0, &qword_1EB8712A0, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FAB678]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (double *)((char *)v32 - v10);
  sub_1BFF31E28(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v13 = v12;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  double v16 = (void *)((char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)&double v18 = MEMORY[0x1F4188790](v17).n128_u64[0];
  double v20 = (char *)v32 - v19;
  if (a1)
  {
    objc_msgSend(a1, sel_bannerImageScale, v18);
    double v22 = v21;
    objc_msgSend(a1, sel_bannerImageBaselineOffsetPercentage);
    uint64_t v24 = v23;
  }
  else
  {
    double v22 = 1.0;
    uint64_t v24 = 0;
  }
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  *(double *)(v25 + 24) = a4;
  *double v16 = v25;
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E4FAB998], v13);
  *uint64_t v11 = v22;
  uint64_t v26 = *MEMORY[0x1E4FAB5C8];
  char v33 = *(void (**)(double *, uint64_t, uint64_t))(v9 + 104);
  v33(v11, v26, v8);
  v32[1] = sub_1BFF597F8();
  id v27 = a2;
  sub_1C151795C();
  uint64_t v28 = v20;
  uint64_t v29 = *(void (**)(double *, uint64_t))(v9 + 8);
  v29(v11, v8);
  uint64_t v30 = *(void (**)(uint64_t *, uint64_t))(v14 + 8);
  v30(v16, v13);
  *uint64_t v11 = 0.0;
  *((void *)v11 + 1) = v24;
  v33(v11, *MEMORY[0x1E4FAB558], v8);
  sub_1C151795C();
  v29(v11, v8);
  return ((uint64_t (*)(char *, uint64_t))v30)(v28, v13);
}

unint64_t sub_1BFF597F8()
{
  unint64_t result = qword_1EB8740F0;
  if (!qword_1EB8740F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8740F0);
  }
  return result;
}

uint64_t sub_1BFF5984C(uint64_t a1, uint64_t a2)
{
  sub_1BFF2E760(0, &qword_1EB87A2A0, type metadata accessor for CGRect);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFF598CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>, double a5@<D2>, double a6@<D3>)
{
  sub_1C15176EC();
  uint64_t v13 = v12;
  uint64_t v14 = sub_1C151769C();
  type metadata accessor for FormatImageNodeContext();
  unint64_t v15 = swift_allocObject();
  *(double *)(v15 + 16) = a5;
  *(double *)(v15 + 24) = a6;
  *(void *)(v15 + 32) = v13;
  *(void *)(v15 + 40) = v14;
  sub_1BFF599E0(a2, v15 + 48);
  swift_unownedRetainStrong();
  sub_1BFF59A8C(a2);
  swift_retain();
  swift_release();
  sub_1BFF5BD8C(a1, a3, v15, a4);
  swift_release();
  return swift_release();
}

uint64_t sub_1BFF599E0(uint64_t a1, uint64_t a2)
{
  sub_1BFE4F908(0, (unint64_t *)&qword_1EB88A870, (uint64_t)&type metadata for FormatImageRequestData, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatImageNodeContext()
{
  return self;
}

uint64_t sub_1BFF59A8C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1BFF59AB8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1BFF59C08();
  uint64_t v2 = sub_1C152050C();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BFF59C80(v6, (uint64_t)&v15, (unint64_t *)&qword_1EB879C10, (unint64_t *)&qword_1EB871530);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1BFEF2D8C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1BFC773DC(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1BFF59C08()
{
  if (!qword_1EB87A3D8)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB871530);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A3D8);
    }
  }
}

uint64_t sub_1BFF59C80(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4)
{
  sub_1BFF59CF0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BFF59CF0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1BFC845BC(255, a3);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1BFF59D58(uint64_t a1, void *a2, uint64_t a3, void *a4, double a5, double a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  double v28 = 0.0;
  double v29 = -2.68156159e154;
  if (a1) {
    char v16 = *(unsigned char *)(a1 + 128);
  }
  else {
    char v16 = 4;
  }
  LOBYTE(v32) = v16;
  sub_1BFC77FBC(0, &qword_1EB875648);
  sub_1C151E6AC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  if (a1)
  {
    uint64_t v17 = *(void *)(a1 + 96);
    uint64_t v18 = *(void *)(a1 + 104);
    char v19 = *(unsigned char *)(a1 + 112);
    sub_1BFEF6828(v17, v18, v19);
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    char v19 = -2;
  }
  id v32 = (id)v17;
  uint64_t v33 = v18;
  char v34 = v19;
  sub_1BFC77FBC(0, &qword_1EB875FE0);
  sub_1C151E6AC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v27 = a9;
  if (a1 && (swift_beginAccess(), *(void *)(a1 + 64)))
  {
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = MEMORY[0x1C18C6710](v20, &type metadata for FormatImageAdjustment);
    uint64_t v23 = v22;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = 0;
  }
  id v32 = (id)v21;
  uint64_t v33 = v23;
  sub_1BFC77FBC(0, (unint64_t *)&qword_1EB879C00);
  sub_1C151E6AC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  if (a1)
  {
    swift_beginAccess();
    uint64_t v24 = *(void *)(a1 + 64);
    if (v24)
    {
      if (*(void *)(v24 + 16))
      {
        id v32 = objc_msgSend(a2, sel_userInterfaceStyle);
        sub_1C152088C();
      }
    }
  }
  sub_1BFF599E0(a3, (uint64_t)&v32);
  double v28 = 0.0;
  double v29 = -2.68156159e154;
  sub_1BFF59A8C(a3);
  sub_1C15200FC();
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  __swift_project_boxed_opaque_existential_1(a4, a4[3]);
  sub_1C151A72C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFF5A210(0, &qword_1EB880D60, (uint64_t (*)(uint64_t))type metadata accessor for RenderingMode, MEMORY[0x1E4FBB718]);
  sub_1C151E6AC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  double v28 = a5;
  double v29 = a6;
  type metadata accessor for CGSize(0);
  sub_1C152036C();
  sub_1C151E80C();
  sub_1C151EF4C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1BFF5984C(v27, (uint64_t)&v28);
  sub_1BFF5A210(0, &qword_1EB87A2A0, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, v25);
  sub_1C151E6AC();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  return v30;
}

void sub_1BFF5A210(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5A274(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void FormatAsyncImageContent.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  switch((unint64_t)*v2 >> 60)
  {
    case 1uLL:
      uint64_t v16 = v9 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v72 = a2;
      uint64_t v17 = *(void *)(v16 + 16);
      uint64_t v18 = *(void *)(v16 + 24);
      uint64_t v19 = *(void *)(v16 + 32);
      int v20 = *(unsigned __int8 *)(v16 + 40);
      uint64_t v22 = *(void *)(v16 + 48);
      uint64_t v21 = *(void *)(v16 + 56);
      uint64_t v23 = *(void *)(v16 + 72);
      uint64_t v24 = *(void *)(v16 + 80);
      uint64_t v25 = *(void *)(v16 + 88);
      uint64_t v26 = *(void *)(v16 + 96);
      char v27 = *(unsigned char *)(v16 + 104);
      unint64_t v28 = *(void *)(v16 + 112);
      HIDWORD(v51) = *(unsigned __int16 *)(v16 + 64);
      uint64_t v53 = v19;
      uint64_t v54 = v17;
      uint64_t v59 = v17;
      unint64_t v60 = v18;
      uint64_t v56 = v18;
      uint64_t v57 = v25;
      unint64_t v61 = v19;
      int v55 = v20;
      LOBYTE(v62) = v20;
      uint64_t v63 = v22;
      uint64_t v64 = v21;
      uint64_t v58 = a1;
      uint64_t v29 = v21;
      uint64_t v52 = v21;
      __int16 v65 = WORD2(v51);
      uint64_t v66 = v23;
      uint64_t v67 = v24;
      uint64_t v68 = v25;
      uint64_t v69 = v26;
      char v70 = v27;
      unint64_t v71 = v28;
      sub_1BFDEB94C(v17, v18, v19, v20);
      uint64_t v30 = v29;
      uint64_t v31 = HIDWORD(v51);
      sub_1BFF62358(v22, v30, HIDWORD(v51));
      sub_1BFDEB8B4(v23);
      sub_1BFE94AB4(v25, v26, v27);
      sub_1C00F5B0C(v28);
      FormatSymbolImage.bind(binder:context:)(v58, v72);
      sub_1BFDEB9E0(v54, v56, v53, v55);
      sub_1BFF6179C(v22, v52, v31);
      sub_1BFDEB900(v23);
      sub_1BFE94AD4(v57, v26, v27);
      sub_1C00F5B20(v28);
      return;
    case 2uLL:
      uint64_t v32 = v9 & 0xFFFFFFFFFFFFFFFLL;
      int v33 = *(unsigned __int8 *)(v32 + 64);
      if (v33 != 255)
      {
        uint64_t v35 = *(void *)(v32 + 48);
        uint64_t v34 = *(void *)(v32 + 56);
        uint64_t v59 = v35;
        unint64_t v60 = v34;
        LOBYTE(v61) = v33;
        sub_1BFF9A030(v35, v34, v33);
        FormatBundleImageSize.bind(binder:context:)(a1, a2);
        sub_1BFF9A01C(v35, v34, v33);
      }
      return;
    case 3uLL:
      uint64_t v36 = (void *)(v9 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v37 = v36[2];
      uint64_t v38 = v36[3];
      uint64_t v39 = v36[4];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C04C9058(a1, a2, v37, v38, v39, (void (*)(uint64_t, uint64_t))FormatAsyncImageContent.bind(binder:context:));
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return;
    case 4uLL:
      uint64_t v40 = swift_projectBox();
      sub_1BFF83CC4(v40, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
      sub_1BFD047E8();
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
      return;
    case 5uLL:
      uint64_t v41 = v9 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v42 = *(void *)(v41 + 16);
      uint64_t v43 = *(void *)(v41 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C052A010(a1, a2, v42, v43);
      swift_release();
      swift_bridgeObjectRelease();
      return;
    case 6uLL:
      uint64_t v44 = v9 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v45 = *(void *)(v44 + 24);
      uint64_t v59 = *(void *)(v44 + 16);
      swift_retain();
      swift_retain_n();
      FormatAsyncImageContent.bind(binder:context:)(a1, a2);
      if (!v3)
      {
        swift_release();
        uint64_t v59 = v45;
        swift_retain();
        FormatAsyncImageContent.bind(binder:context:)(a1, a2);
      }
      goto LABEL_16;
    case 7uLL:
      uint64_t v59 = *(void *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      FormatAsyncImageContent.bind(binder:context:)(a1, a2);
      if (!v3)
      {
        swift_release();
        FormatImageNodeStyle.bind(binder:context:)(a1, a2);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      swift_release();
      goto LABEL_17;
    case 8uLL:
      uint64_t v46 = v9 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v47 = *(void *)(v46 + 24);
      uint64_t v59 = *(void *)(v46 + 16);
      uint64_t v48 = v59 & 0xFFFFFFFFFFFFFFFLL;
      swift_retain_n();
      swift_bridgeObjectRetain();
      FormatAsyncImageContent.bind(binder:context:)(a1, a2);
      if (v3)
      {
        swift_bridgeObjectRelease();
LABEL_17:
        swift_release_n();
      }
      else
      {
        swift_release();
        uint64_t v49 = *(void *)(v47 + 16);
        if (v49)
        {
          uint64_t v72 = v48;
          swift_bridgeObjectRetain_n();
          uint64_t v50 = (uint64_t *)(v47 + 48);
          do
          {
            uint64_t v59 = *v50;
            swift_retain_n();
            swift_bridgeObjectRetain();
            FormatAsyncImageContent.bind(binder:context:)(a1, a2);
            swift_bridgeObjectRelease();
            swift_release_n();
            v50 += 3;
            --v49;
          }
          while (v49);
          swift_release();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_release();
        }
      }
      return;
    case 9uLL:
      return;
    default:
      uint64_t v10 = *(void *)(v9 + 16);
      unint64_t v11 = *(void *)(v9 + 24);
      uint64_t v72 = a2;
      unint64_t v12 = *(void *)(v9 + 32);
      uint64_t v13 = *(void *)(v9 + 40);
      uint64_t v14 = *(void *)(v9 + 48);
      unsigned int v15 = *(unsigned __int8 *)(v9 + 56);
      uint64_t v59 = v10;
      unint64_t v60 = v11;
      unint64_t v61 = v12;
      uint64_t v62 = v13;
      uint64_t v63 = v14;
      LOBYTE(v64) = v15;
      sub_1BFF2B584(v10, v11, v12, v13, v14, v15);
      FormatImageNodeBinding.bind(binder:context:)(a1, v72);
      sub_1BFF01078(v10, v11, v12, v13, v14, v15);
      return;
  }
}

void *sub_1BFF5A8C0(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(a4 + 32);
  char v10 = *(unsigned char *)(a4 + 41);
  unsigned int v11 = *(unsigned __int8 *)(a4 + 40);
  v19[0] = *(void *)(a4 + 16);
  v19[1] = v8;
  uint64_t v19[2] = v9;
  char v20 = v11;
  char v21 = v10;
  swift_retain();
  sub_1C125CCB0(v19[0], v8, v9, v11, v10, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
  uint64_t v12 = sub_1BFF5AB10(a1);
  sub_1C125CCB0(v19[0], v8, v9, v11, v10, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
  unint64_t result = (void *)swift_release();
  if (!v6)
  {
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C125D054(v14, a2);
    swift_bridgeObjectRelease();
    uint64_t v22 = a6;
    swift_retain();
    a2(v19, &v22);
    swift_release();
    uint64_t v16 = v19[0];
    sub_1BFF5AAC4(0, &qword_1EB88B3F0, (uint64_t)&type metadata for FormatImage, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatCommandActionValue);
    unint64_t result = (void *)swift_allocObject();
    result[3] = v15;
    result[4] = v16;
    result[2] = v12;
  }
  return result;
}

void sub_1BFF5AAC4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFF5AB10(uint64_t a1)
{
  sub_1BFF5B538(0, &qword_1EB88C550, (void (*)(uint64_t))type metadata accessor for LiveActivityCommandContext);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v62 = (char *)&v61 - v4;
  uint64_t v5 = sub_1C151976C();
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF5B538(0, &qword_1EB8869A0, (void (*)(uint64_t))type metadata accessor for FeedHeadlineAudioCommandContext);
  MEMORY[0x1F4188790](v8 - 8);
  char v10 = (char *)&v61 - v9;
  uint64_t v11 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (uint64_t *)((char *)&v61 - v15);
  uint64_t v17 = *(void *)v1;
  uint64_t v18 = *(void *)(v1 + 8);
  uint64_t v19 = *(void *)(v1 + 16);
  unsigned int v20 = *(unsigned __int8 *)(v1 + 24);
  char v21 = *(unsigned char *)(v1 + 25);
  switch((4 * v21) | (*(unsigned char *)(v1 + 24) >> 2) & 3)
  {
    case 1:
      uint64_t v1 = *(void *)v1;
      uint64_t v28 = v77;
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v61 - v15);
      if (!v28)
      {
        uint64_t v1 = sub_1BFF5CD28(v16, v1);
        sub_1BFF5B5EC((uint64_t)v16, type metadata accessor for FeedHeadline);
      }
      break;
    case 2:
      uint64_t v29 = v77;
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v13);
      if (!v29)
      {
        if (qword_1EB8852F0 != -1) {
          swift_once();
        }
        sub_1BFDB5EBC((uint64_t)v13, (uint64_t)v10, type metadata accessor for FeedHeadline);
        uint64_t v30 = type metadata accessor for FeedHeadlineAudioCommandContext();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v10, 0, 1, v30);
        type metadata accessor for FormatCommandAction();
        swift_allocObject();
        uint64_t v31 = swift_retain();
        uint64_t v1 = sub_1C0A3C828(v31, (uint64_t)v10);
        swift_release();
        sub_1BFF5B5EC((uint64_t)v13, type metadata accessor for FeedHeadline);
      }
      break;
    case 3:
      uint64_t v32 = a1;
      uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
      uint64_t v33 = v17;
      uint64_t v34 = v18;
      uint64_t v64 = v19;
      sub_1C00AB56C(v17, v18, v19);
      uint64_t v35 = v77;
      sub_1C0E473E0(v1, (uint64_t)&v65);
      if (v35) {
        goto LABEL_17;
      }
      uint64_t v36 = v33;
      uint64_t v37 = v33;
      uint64_t v38 = v64;
      uint64_t v1 = (uint64_t)sub_1C002B228((void *)v66, v32, v37, v34, v64);
      sub_1BFEA4290((uint64_t)&v65);
      uint64_t v25 = v36;
      uint64_t v26 = v34;
      uint64_t v27 = v38;
      goto LABEL_11;
    case 4:
      uint64_t v1 = *(void *)v1;
      uint64_t v39 = v77;
      sub_1BFFB5F74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v65);
      if (!v39)
      {
        v73[6] = v71;
        v74[0] = v72[0];
        *(_OWORD *)((char *)v74 + 9) = *(_OWORD *)((char *)v72 + 9);
        uint64_t v73[2] = v67;
        v73[3] = v68;
        _OWORD v73[4] = v69;
        v73[5] = v70;
        v73[0] = v65;
        v73[1] = v66;
        uint64_t v1 = sub_1C0AF3B2C((void **)v73, v1);
        sub_1C01880A4((uint64_t)v73);
      }
      break;
    case 5:
      uint64_t v1 = *(void *)v1;
      uint64_t v40 = v77;
      sub_1C0E47688(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), &v65);
      if (!v40)
      {
        uint64_t v1 = sub_1C0AF4188((uint64_t)&v65, v1);
        sub_1C01F0A74((uint64_t)&v65);
      }
      break;
    case 6:
      uint64_t v1 = v20 & 0xFFFFFFF3;
      uint64_t v41 = a1;
      uint64_t v42 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
      uint64_t v33 = v17;
      uint64_t v34 = v18;
      uint64_t v64 = v19;
      sub_1C00AB750(v17, v18, v19, v20 & 0xF3, (uint64_t (*)(void))sub_1C00AB56C);
      uint64_t v43 = v77;
      sub_1C0E4755C(v42, (uint64_t)&v65);
      if (v43)
      {
LABEL_17:
        sub_1C0AF3824(v33, v34, v64, v20, v21, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
      }
      else
      {
        v75[0] = v65;
        v75[1] = v66;
        char v76 = v67;
        uint64_t v48 = v33;
        uint64_t v49 = v33;
        uint64_t v50 = v64;
        sub_1C0AF27A4((uint64_t)v75, v41, v49, v34, v64, v20 & 0xF3);
        uint64_t v1 = v60;
        sub_1C04C5A14((uint64_t)v75);
        sub_1C0AF3824(v48, v34, v50, v20, v21, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
      }
      break;
    case 7:
      uint64_t v44 = v77;
      sub_1C0AF2B18(a1, v17, v18, v19, v20 & 1);
      if (!v44)
      {
        sub_1C151975C();
        if (qword_1EB885318 != -1) {
          swift_once();
        }
        uint64_t v51 = (uint64_t)v62;
        uint64_t v52 = v63;
        (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v62, v7, v64);
        uint64_t v53 = type metadata accessor for LiveActivityCommandContext();
        uint64_t v54 = v51 + *(int *)(v53 + 20);
        uint64_t v55 = *MEMORY[0x1E4F81CC0];
        uint64_t v56 = sub_1C15196AC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 104))(v54, v55, v56);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v51, 0, 1, v53);
        type metadata accessor for FormatCommandAction();
        swift_allocObject();
        uint64_t v57 = swift_retain();
        uint64_t v1 = sub_1C0A3DAAC(v57, v51);
        swift_release();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v7, v64);
      }
      break;
    case 8:
      if (*(void *)v1)
      {
        if (*(void *)v1 == 1)
        {
          if (qword_1EB86FA30 != -1) {
            swift_once();
          }
          type metadata accessor for FormatCommandAction();
          swift_allocObject();
          uint64_t v46 = swift_retain();
          uint64_t v47 = sub_1C0A3E0D8(v46, 1);
        }
        else
        {
          if (qword_1EB86FA18 != -1) {
            swift_once();
          }
          type metadata accessor for FormatCommandAction();
          swift_allocObject();
          uint64_t v59 = swift_retain();
          uint64_t v47 = sub_1C0A3E394(v59, 1);
        }
      }
      else
      {
        if (qword_1EB86FA48 != -1) {
          swift_once();
        }
        type metadata accessor for FormatCommandAction();
        swift_allocObject();
        uint64_t v58 = swift_retain();
        uint64_t v47 = sub_1C0A3DE1C(v58, 1);
      }
      uint64_t v1 = v47;
      swift_release();
      break;
    default:
      *(void *)&long long v65 = *(void *)v1;
      *((void *)&v65 + 1) = v18;
      *(void *)&long long v66 = v19;
      BYTE8(v66) = v20;
      uint64_t v22 = v17;
      uint64_t v23 = v18;
      uint64_t v24 = v19;
      sub_1C00AB700(v17, v18, v19, v20, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C);
      uint64_t v1 = sub_1C0025C18(a1);
      uint64_t v25 = v22;
      uint64_t v26 = v23;
      uint64_t v27 = v24;
LABEL_11:
      sub_1C0AF3824(v25, v26, v27, v20, v21, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
      break;
  }
  return v1;
}

void sub_1BFF5B538(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1BFF5B58C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF5B5EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF5B64C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF5B6AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF5B70C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF5B76C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF5B7CC(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFF5B7E0(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1BFF5B7F4(unint64_t *a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *(_OWORD *)(a2 + 80);
  v53[4] = *(_OWORD *)(a2 + 64);
  v53[5] = v9;
  uint64_t v54 = *(void *)(a2 + 96);
  long long v10 = *(_OWORD *)(a2 + 16);
  v53[0] = *(_OWORD *)a2;
  v53[1] = v10;
  long long v11 = *(_OWORD *)(a2 + 48);
  uint64_t v12 = *v2;
  unint64_t v13 = (unint64_t)*v2 >> 60;
  void v53[2] = *(_OWORD *)(a2 + 32);
  v53[3] = v11;
  switch(v13)
  {
    case 1uLL:
      uint64_t v20 = v12 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v21 = *(void *)(v20 + 32);
      char v22 = *(unsigned char *)(v20 + 40);
      __int16 v23 = *(_WORD *)(v20 + 64);
      char v24 = *(unsigned char *)(v20 + 104);
      uint64_t v25 = *(void *)(v20 + 112);
      long long v48 = *(_OWORD *)(v20 + 16);
      *(void *)&long long v49 = v21;
      BYTE8(v49) = v22;
      long long v50 = *(_OWORD *)(v20 + 48);
      LOWORD(v51[0]) = v23;
      *(_OWORD *)((char *)v51 + 8) = *(_OWORD *)(v20 + 72);
      *(_OWORD *)((char *)&v51[1] + 8) = *(_OWORD *)(v20 + 88);
      BYTE8(v51[2]) = v24;
      uint64_t v52 = v25;
      sub_1BFF5E044(a1, a2);
      return;
    case 2uLL:
    case 9uLL:
      return;
    case 3uLL:
      uint64_t v26 = (void *)(v12 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v27 = v26[2];
      uint64_t v28 = v26[3];
      uint64_t v29 = v26[4];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF84328(a1, (uint64_t)v53, v27, v28, v29, (void (*)(unint64_t *, uint64_t))sub_1BFF5B7F4);
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    case 4uLL:
      uint64_t v35 = swift_projectBox();
      sub_1BFF83CC4(v35, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
      long long v36 = *(_OWORD *)(a2 + 80);
      v51[1] = *(_OWORD *)(a2 + 64);
      v51[2] = v36;
      uint64_t v52 = *(void *)(a2 + 96);
      long long v37 = *(_OWORD *)(a2 + 16);
      long long v48 = *(_OWORD *)a2;
      long long v49 = v37;
      long long v38 = *(_OWORD *)(a2 + 48);
      long long v50 = *(_OWORD *)(a2 + 32);
      v51[0] = v38;
      sub_1BFFAE9AC(a1);
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
      return;
    case 5uLL:
      uint64_t v39 = v12 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v41 = *(void *)(v39 + 16);
      uint64_t v40 = *(void *)(v39 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFFB4740((uint64_t)a1, v53, v41);
      if (!v3)
      {
        *(void *)&long long v48 = v40;
        sub_1BFF5B7F4(a1, v53);
      }
      swift_release();
      swift_bridgeObjectRelease();
      return;
    case 6uLL:
      uint64_t v30 = v12 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v31 = *(void *)(v30 + 24);
      *(void *)&long long v48 = *(void *)(v30 + 16);
      swift_retain();
      swift_retain();
      sub_1BFF5B7F4(a1, a2);
      if (!v3)
      {
        *(void *)&long long v48 = v31;
        sub_1BFF5B7F4(a1, a2);
      }
      goto LABEL_17;
    case 7uLL:
      *(void *)&long long v48 = *(void *)((v12 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF5B7F4(a1, a2);
      if (!v3) {
        sub_1BFF42EB8((unint64_t)a1, a2);
      }
      swift_bridgeObjectRelease();
LABEL_17:
      swift_release();
      goto LABEL_18;
    case 8uLL:
      uint64_t v32 = v12 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v33 = *(void *)(v32 + 24);
      *(void *)&long long v48 = *(void *)(v32 + 16);
      uint64_t v34 = v48 & 0xFFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF5B7F4(a1, a2);
      if (v3 || (uint64_t v42 = *(void *)(v33 + 16)) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_18:
        swift_release();
      }
      else
      {
        v47[1] = v34;
        swift_bridgeObjectRetain_n();
        uint64_t v55 = v33;
        uint64_t v43 = (void *)(v33 + 48);
        do
        {
          *(void *)&long long v48 = *v43;
          swift_retain_n();
          swift_bridgeObjectRetain();
          sub_1BFF5B7F4(a1, a2);
          swift_bridgeObjectRelease();
          swift_release_n();
          v43 += 3;
          --v42;
        }
        while (v42);
        swift_release();
        swift_bridgeObjectRelease_n();
      }
      return;
    default:
      uint64_t v15 = *(void *)(v12 + 16);
      uint64_t v14 = *(void *)(v12 + 24);
      uint64_t v17 = *(void *)(v12 + 32);
      uint64_t v16 = *(void *)(v12 + 40);
      uint64_t v18 = *(void *)(v12 + 48);
      unsigned int v19 = *(unsigned __int8 *)(v12 + 56);
      switch((v19 >> 1) & 0xF)
      {
        case 2u:
          *(void *)&long long v48 = v15;
          *((void *)&v48 + 1) = v14;
          *(void *)&long long v49 = v17;
          *((void *)&v49 + 1) = v16;
          *(void *)&long long v50 = v18;
          BYTE8(v50) = v19 & 0xE1;
          sub_1C002603C(a1, a2);
          break;
        case 3u:
          v47[2] = v15;
          v47[3] = v14;
          v47[4] = v17;
          v47[5] = v16;
          long long v44 = *(_OWORD *)(a2 + 80);
          v51[1] = *(_OWORD *)(a2 + 64);
          v51[2] = v44;
          uint64_t v52 = *(void *)(a2 + 96);
          long long v45 = *(_OWORD *)(a2 + 16);
          long long v48 = *(_OWORD *)a2;
          long long v49 = v45;
          long long v46 = *(_OWORD *)(a2 + 48);
          long long v50 = *(_OWORD *)(a2 + 32);
          v51[0] = v46;
          sub_1C003030C(a1, (uint64_t *)&v48);
          break;
        case 8u:
          *(void *)&long long v48 = v15;
          *((void *)&v48 + 1) = v14;
          *(void *)&long long v49 = v17;
          *((void *)&v49 + 1) = v16;
          *(void *)&long long v50 = v18;
          BYTE8(v50) = v19 & 1;
          sub_1C05CC5B0(a1, a2);
          break;
        default:
          return;
      }
      return;
  }
}

uint64_t sub_1BFF5BD54()
{
  return sub_1BFF5BD8C(v0[2], v0[3], v0[4]);
}

void sub_1BFF5BD8C(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v119 = a3;
  sub_1BFF5C9E8();
  MEMORY[0x1F4188790](v8 - 8);
  long long v10 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FormatRemoteImage();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *v4;
  switch((unint64_t)*v4 >> 60)
  {
    case 1uLL:
      uint64_t v118 = a4;
      uint64_t v26 = v19 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v27 = *(void *)(v26 + 16);
      uint64_t v28 = *(void *)(v26 + 24);
      uint64_t v29 = *(void *)(v26 + 32);
      int v30 = *(unsigned __int8 *)(v26 + 40);
      uint64_t v32 = *(void *)(v26 + 48);
      uint64_t v31 = *(void *)(v26 + 56);
      uint64_t v33 = *(void *)(v26 + 72);
      uint64_t v34 = *(void *)(v26 + 80);
      uint64_t v35 = *(void *)(v26 + 88);
      uint64_t v36 = *(void *)(v26 + 96);
      char v37 = *(unsigned char *)(v26 + 104);
      unint64_t v38 = *(void *)(v26 + 112);
      uint64_t v39 = *(unsigned __int16 *)(v26 + 64);
      uint64_t v117 = v27;
      uint64_t v121 = v27;
      unint64_t v122 = v28;
      uint64_t v114 = v29;
      uint64_t v115 = v28;
      unint64_t v123 = v29;
      int v113 = v30;
      LOBYTE(v124) = v30;
      uint64_t v125 = v32;
      uint64_t v126 = v31;
      __int16 v127 = v39;
      uint64_t v112 = a1;
      uint64_t v40 = v39;
      uint64_t v128 = v33;
      uint64_t v129 = v34;
      uint64_t v116 = v33;
      uint64_t v130 = v35;
      uint64_t v131 = v36;
      char v132 = v37;
      unint64_t v133 = v38;
      uint64_t v119 = v38;
      sub_1BFDEB94C(v27, v28, v29, v30);
      sub_1BFF62358(v32, v31, v40);
      sub_1BFDEB8B4(v33);
      sub_1BFE94AB4(v35, v36, v37);
      sub_1C00F5B0C(v38);
      uint64_t v41 = v120;
      id v42 = sub_1BFF61220(v112);
      sub_1BFDEB9E0(v117, v115, v114, v113);
      sub_1BFF6179C(v32, v31, v40);
      sub_1BFDEB900(v116);
      sub_1BFE94AD4(v35, v36, v37);
      sub_1C00F5B20(v119);
      if (!v41)
      {
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = v42;
        *uint64_t v118 = v43;
      }
      return;
    case 2uLL:
      uint64_t v118 = a4;
      uint64_t v44 = v19 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v46 = *(void *)(v44 + 16);
      uint64_t v45 = *(void *)(v44 + 24);
      uint64_t v48 = *(void *)(v44 + 32);
      uint64_t v47 = *(void *)(v44 + 40);
      if (v47)
      {
        uint64_t v49 = *(void *)(v44 + 48);
        uint64_t v50 = *(void *)(v44 + 56);
        unsigned __int8 v51 = *(unsigned char *)(v44 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF9A0E8(v49, v50, v51);
        unint64_t v52 = v119;
        if (qword_1EB8881F8 != -1) {
          swift_once();
        }
        id v53 = sub_1BFF9A0FC(v48, v47);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFF9A01C(v49, v50, v51);
        if (!v53) {
          goto LABEL_29;
        }
      }
      else
      {
        id v53 = objc_msgSend(self, sel_mainBundle);
        unint64_t v52 = v119;
        if (!v53)
        {
LABEL_29:
          type metadata accessor for FormatLayoutError();
          sub_1BFFBA9AC((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
          swift_allocError();
          *unsigned __int8 v109 = v48;
          v109[1] = v47;
          swift_storeEnumTagMultiPayload();
          goto LABEL_30;
        }
      }
      char v86 = *(void **)(v52 + 40);
      swift_bridgeObjectRetain();
      id v87 = v53;
      id v88 = v86;
      uint64_t v89 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      id v90 = objc_msgSend(self, sel_imageNamed_inBundle_compatibleWithTraitCollection_, v89, v87, v88);

      if (v90)
      {

        uint64_t v91 = swift_allocObject();
        *(void *)(v91 + 16) = v90;
        *uint64_t v118 = v91;
        return;
      }
      type metadata accessor for FormatLayoutError();
      sub_1BFFBA9AC((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      *unsigned __int8 v108 = v87;
      v108[1] = v46;
      v108[2] = v45;
      swift_storeEnumTagMultiPayload();
LABEL_30:
      swift_bridgeObjectRetain();
      swift_willThrow();
      return;
    case 3uLL:
      uint64_t v54 = a4;
      uint64_t v55 = (void *)(v19 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v56 = v55[2];
      uint64_t v57 = v55[3];
      uint64_t v58 = v55[4];
      MEMORY[0x1F4188790](v16);
      *(&v112 - 4) = a1;
      *(&v112 - 3) = a2;
      *(&v112 - 2) = v119;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v59 = v58;
      uint64_t v60 = v120;
      uint64_t v61 = sub_1BFF5A8C0(a1, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BFF5BD54, (uint64_t)(&v112 - 6), v56, v57, v59);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      if (!v60)
      {
        uint64_t v62 = swift_allocObject();
        *(void *)(v62 + 16) = v61;
        uint64_t *v54 = v62 | 0x4000000000000000;
      }
      return;
    case 4uLL:
      uint64_t v63 = swift_projectBox();
      sub_1BFF83D94(v63, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
      sub_1C15176EC();
      double v65 = v64;
      type metadata accessor for GroupLayoutContext();
      sub_1C151752C();
      uint64_t v66 = sub_1C1517ADC();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v10, 0, 1, v66);
      uint64_t v67 = v120;
      sub_1C0039058(a1, (uint64_t)v10, (uint64_t)v14, v65);
      sub_1C0FE43F4((uint64_t)v10, (uint64_t (*)(void))sub_1BFF5C9E8);
      sub_1C0FE43F4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FormatRemoteImage);
      if (!v67)
      {
        sub_1C003F414();
        uint64_t v92 = a4;
        uint64_t v94 = v93;
        uint64_t v95 = swift_allocBox();
        uint64_t v97 = v96 + *(int *)(v94 + 48);
        (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v96, v14, v11);
        uint64_t v98 = *(void *)(v119 + 120);
        char v99 = *(unsigned char *)(v119 + 128);
        long long v100 = *(_OWORD *)(v119 + 56);
        long long v101 = *(_OWORD *)(v119 + 72);
        long long v102 = *(_OWORD *)(v119 + 88);
        long long v103 = *(_OWORD *)(v119 + 104);
        *(void *)uint64_t v97 = *(void *)(v119 + 48);
        *(_OWORD *)(v97 + 8) = v100;
        *(_OWORD *)(v97 + 24) = v101;
        *(_OWORD *)(v97 + 40) = v102;
        *(_OWORD *)(v97 + 56) = v103;
        *(void *)(v97 + 72) = v98;
        *(unsigned char *)(v97 + 80) = v99;
        *uint64_t v92 = v95 | 0x6000000000000000;
        swift_bridgeObjectRetain();
      }
      return;
    case 5uLL:
      uint64_t v68 = v19 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v69 = *(void *)(v68 + 16);
      uint64_t v70 = *(void *)(v68 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF51CEC(a2, a1, v69, v70, &v121);
      sub_1BFF5BD8C(a1, a2, v119);
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 6uLL:
      uint64_t v118 = a4;
      uint64_t v71 = v19 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v72 = *(void *)(v71 + 16);
      uint64_t v73 = *(void *)(v71 + 24);
      uint64_t v74 = swift_allocObject();
      uint64_t v121 = v72;
      swift_retain();
      swift_retain_n();
      unint64_t v76 = v119;
      uint64_t v75 = v120;
      sub_1BFF5BD8C(a1, a2, v119);
      swift_release();
      if (v75)
      {
        swift_release_n();
        swift_deallocUninitializedObject();
      }
      else
      {
        uint64_t v121 = v73;
        swift_retain();
        sub_1BFF5BD8C(a1, a2, v76);
        swift_release_n();
        swift_release();
        *uint64_t v118 = v74 | 0x8000000000000000;
      }
      return;
    case 7uLL:
      uint64_t v77 = a4;
      uint64_t v78 = v19 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v79 = *(void *)(v78 + 16);
      uint64_t v80 = *(void *)(v78 + 32);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain_n();
      uint64_t v81 = sub_1BFF1B2E4(v80, 0);
      swift_bridgeObjectRelease();
      uint64_t v134 = v79;
      swift_retain();
      uint64_t v82 = v120;
      sub_1BFF5BD8C(v81, a2, v119);
      if (v82)
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release_n();
LABEL_20:
        swift_release();
      }
      else
      {
        swift_release();
        uint64_t v120 = v121;
        unsigned __int8 v104 = (uint64_t *)(*(void *)(v81 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                         + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
        swift_beginAccess();
        uint64_t v105 = *v104;
        uint64_t v106 = v104[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v107 = swift_retain();
        uint64_t v110 = sub_1BFF5CA40(v107, v81, v105, v106);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release();
        uint64_t v111 = swift_allocObject();
        *(void *)(v111 + 16) = v120;
        *(void *)(v111 + 24) = v110;
        *uint64_t v77 = v111 | 0xA000000000000000;
      }
      return;
    case 8uLL:
      uint64_t v83 = v19 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v84 = *(void *)(v83 + 16);
      uint64_t v85 = *(void *)(v83 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C0272590(v84, v85, &v121);
      uint64_t v134 = v121;
      sub_1BFF5BD8C(a1, a2, v119);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_20;
    case 9uLL:
      *a4 = 0xC000000000000000;
      return;
    default:
      uint64_t v118 = a4;
      uint64_t v20 = *(void *)(v19 + 16);
      unint64_t v21 = *(void *)(v19 + 24);
      unint64_t v22 = *(void *)(v19 + 32);
      uint64_t v23 = *(void *)(v19 + 40);
      uint64_t v24 = *(void *)(v19 + 48);
      unsigned int v25 = *(unsigned __int8 *)(v19 + 56);
      uint64_t v121 = v20;
      unint64_t v122 = v21;
      unint64_t v123 = v22;
      uint64_t v124 = v23;
      uint64_t v125 = v24;
      LOBYTE(v126) = v25;
      sub_1BFF2B584(v20, v21, v22, v23, v24, v25);
      sub_1BFF966E4(a1, a2, v119);
      sub_1BFF01078(v20, v21, v22, v23, v24, v25);
      return;
  }
}

uint64_t type metadata accessor for FormatRemoteImage()
{
  uint64_t result = qword_1EB8758E0;
  if (!qword_1EB8758E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BFF5C9E8()
{
  if (!qword_1EB884848)
  {
    sub_1C1517ADC();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884848);
    }
  }
}

uint64_t sub_1BFF5CA40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C128F0D8(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BFEF4BB8, sub_1BFEF40F8, (uint64_t (*)(uint64_t, uint64_t))sub_1BFF015D8, (void (*)(void))type metadata accessor for FormatImageNodeStyle, (void (*)(uint64_t))sub_1BFEF554C);
}

uint64_t sub_1BFF5CAC4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF5CAFC(a1, a2, a3, (void *)*v3, &qword_1EB883248, qword_1EB88B360, (uint64_t)&type metadata for FormatImage);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1BFF5CAFC(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, unint64_t *a6, uint64_t a7)
{
  if (a3)
  {
    unint64_t v11 = a4[3];
    int64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v12 = a2;
      }
    }
  }
  else
  {
    int64_t v12 = a2;
  }
  uint64_t v13 = a4[2];
  if (v12 <= v13) {
    uint64_t v14 = a4[2];
  }
  else {
    uint64_t v14 = v12;
  }
  if (v14)
  {
    sub_1BFF5CCCC(0, a5, a6, a7, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    uint64_t v15 = (void *)swift_allocObject();
    int64_t v16 = _swift_stdlib_malloc_size(v15);
    uint64_t v17 = v16 - 32;
    if (v16 < 32) {
      uint64_t v17 = v16 - 1;
    }
    v15[2] = v13;
    v15[3] = 2 * (v17 >> 5);
  }
  else
  {
    uint64_t v15 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v18 = (unint64_t)(v15 + 4);
  unint64_t v19 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v15 != a4 || v18 >= v19 + 32 * v13) {
      memmove(v15 + 4, a4 + 4, 32 * v13);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v19 >= v18 + 32 * v13 || v18 >= v19 + 32 * v13)
  {
    sub_1BFF66364(0, a6, a7, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatCommandActionValue.CaseValue);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v15;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1BFF5CCCC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  if (!*a2)
  {
    sub_1BFF66364(255, a3, a4, a5);
    unint64_t v6 = sub_1C152089C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1BFF5CD28(uint64_t *a1, char a2)
{
  return sub_1BFF5CD40(a1, a2);
}

uint64_t sub_1BFF5CD40(uint64_t *a1, char a2)
{
  sub_1BFF5D8CC(0, &qword_1EB8869A0, (void (*)(uint64_t))type metadata accessor for FeedHeadlineAudioCommandContext);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v48[-1] - v5;
  sub_1BFF5D8CC(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v48[-1] - v8;
  switch(a2)
  {
    case 1:
      if (qword_1EB85F120 != -1) {
        swift_once();
      }
      uint64_t v13 = qword_1EB85F110;
      goto LABEL_11;
    case 2:
      if (qword_1EB87CA88 != -1) {
        swift_once();
      }
      uint64_t v16 = qword_1EB87CA80;
      uint64_t v17 = a1[5];
      uint64_t v18 = *a1;
      uint64_t v19 = a1[1];
      v48[0] = v17;
      memset(&v48[1], 0, 24);
      v48[4] = v18;
      v48[5] = v19;
      char v49 = 0;
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_retain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_1C0A37280(v16, (uint64_t)v48);
      goto LABEL_55;
    case 3:
      if (qword_1EB87C8F8 != -1) {
        swift_once();
      }
      uint64_t v20 = qword_1EB87BDD0;
      goto LABEL_43;
    case 4:
      if (qword_1EB87B150 != -1) {
        swift_once();
      }
      uint64_t v21 = qword_1EB87CA60;
      uint64_t v22 = a1[5];
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v23 = sub_1BFF5E2EC(v21, v22, 2);
      goto LABEL_53;
    case 5:
      if (qword_1EB87B0C8 != -1) {
        swift_once();
      }
      uint64_t v24 = qword_1EB885350;
      goto LABEL_27;
    case 6:
      if (qword_1EB87B140 != -1) {
        swift_once();
      }
      uint64_t v24 = qword_1EB885358;
LABEL_27:
      uint64_t v25 = a1[5];
      uint64_t v27 = *a1;
      uint64_t v26 = a1[1];
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_retain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1BFF5DC00(v24, v25, v27, v26);
      goto LABEL_53;
    case 7:
      if (qword_1EB87C910 != -1) {
        swift_once();
      }
      uint64_t v28 = qword_1EB87C900;
      uint64_t v29 = (void *)a1[5];
      swift_retain();
      id v30 = objc_msgSend(v29, sel_sourceChannel);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_unknownObjectRetain();
      return sub_1C0A36C14(v28, (uint64_t)v30, 0, (uint64_t)v29);
    case 8:
      if (qword_1EB87B198 != -1) {
        swift_once();
      }
      uint64_t v31 = qword_1EB885460;
      uint64_t v32 = (void *)a1[5];
      swift_retain();
      id v33 = objc_msgSend(v32, sel_sourceChannel);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v23 = sub_1C0A3C1CC(v31, (uint64_t)v33, (v33 != 0) << 8);
      goto LABEL_53;
    case 9:
      if (qword_1EB87B188 != -1) {
        swift_once();
      }
      uint64_t v34 = qword_1EB8716A0;
      uint64_t v35 = (void *)a1[5];
      swift_retain();
      id v36 = objc_msgSend(v35, sel_sourceChannel);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v23 = sub_1C0A3BBEC(v34, (uint64_t)v36);
      goto LABEL_53;
    case 10:
      if (qword_1EB87C920 != -1) {
        swift_once();
      }
      uint64_t v20 = qword_1EB87BDE0;
      goto LABEL_43;
    case 11:
      if (qword_1EB87BDF0 != -1) {
        swift_once();
      }
      uint64_t v20 = qword_1EB87CA90;
LABEL_43:
      uint64_t v37 = a1[5];
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_retain();
      swift_unknownObjectRetain();
      return sub_1C0A36F8C(v20, v37);
    case 12:
      if (qword_1EB87CAB0 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_1EB87CAA0;
      uint64_t v39 = (void *)a1[5];
      swift_retain();
      id v40 = objc_msgSend(v39, sel_identifier);
      uint64_t v41 = sub_1C151E62C();
      uint64_t v43 = v42;

      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      return sub_1C0A36944(v38, v41, v43);
    case 13:
      if (qword_1EB85F540 != -1) {
        swift_once();
      }
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v44 = swift_retain();
      return sub_1C0A36690(v44, 1);
    case 14:
    case 16:
    case 17:
      if (qword_1EB8852F0 != -1) {
        swift_once();
      }
      sub_1BFF96680((uint64_t)a1, (uint64_t)v6);
      uint64_t v10 = type metadata accessor for FeedHeadlineAudioCommandContext();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v11 = swift_retain();
      uint64_t v12 = sub_1C0A3C828(v11, (uint64_t)v6);
      goto LABEL_54;
    case 15:
      if (qword_1EB885308 != -1) {
        swift_once();
      }
      sub_1BFF96680((uint64_t)a1, (uint64_t)v9);
      uint64_t v45 = type metadata accessor for FeedHeadline(0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v9, 0, 1, v45);
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      uint64_t v46 = swift_retain();
      uint64_t v23 = sub_1C0A3C4B8(v46, (uint64_t)v9);
LABEL_53:
      uint64_t v12 = v23;
LABEL_54:
      swift_release();
LABEL_55:
      uint64_t result = v12;
      break;
    default:
      if (qword_1EB86BD40 != -1) {
        swift_once();
      }
      uint64_t v13 = qword_1EB86BD30;
LABEL_11:
      uint64_t v14 = (void *)a1[5];
      type metadata accessor for FormatCommandAction();
      swift_allocObject();
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t result = sub_1C0A37610(v13, v14, 0, 1);
      break;
  }
  return result;
}

void sub_1BFF5D620(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5D684(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5D6E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5D74C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5D7B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5D814(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF5D868(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5D8CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF5D920(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5D984(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5D9E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5DA4C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5DAB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5DB14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFF5DB78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for FormatCommandAction()
{
  return self;
}

uint64_t sub_1BFF5DC00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  swift_retain();
  *(void *)(v5 + 16) = sub_1C151C99C();
  *(void *)(v5 + 24) = v10;
  *(unsigned char *)(v5 + 32) = 1;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v11 + 24, &qword_1EB889D50, (uint64_t)&type metadata for LikingCommandContext);
  *(void *)(v5 + 40) = sub_1C0A40098;
  *(void *)(v5 + 48) = v11;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v12 + 24, &qword_1EB889D50, (uint64_t)&type metadata for LikingCommandContext);
  *(void *)(v5 + 56) = sub_1C0A400C8;
  *(void *)(v5 + 64) = v12;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v13 + 24, &qword_1EB889D50, (uint64_t)&type metadata for LikingCommandContext);
  *(void *)(v5 + 72) = sub_1BFE6ADF8;
  *(void *)(v5 + 80) = v13;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v14 + 24, &qword_1EB889D50, (uint64_t)&type metadata for LikingCommandContext);
  *(void *)(v5 + 88) = sub_1C0A400F8;
  *(void *)(v5 + 96) = v14;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v15 + 24, &qword_1EB889D50, (uint64_t)&type metadata for LikingCommandContext);
  *(void *)(v5 + 136) = sub_1C0A40154;
  *(void *)(v5 + 144) = v15;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v16 + 24, &qword_1EB889D50, (uint64_t)&type metadata for LikingCommandContext);
  *(void *)(v5 + 104) = sub_1C0A401B0;
  *(void *)(v5 + 112) = v16;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v17 + 24, &qword_1EB889D50, (uint64_t)&type metadata for LikingCommandContext);
  *(void *)(v5 + 120) = sub_1C0A401F0;
  *(void *)(v5 + 128) = v17;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a1;
  sub_1BFF5DF80((uint64_t)&v20, v18 + 24, &qword_1EB889D50, (uint64_t)&type metadata for LikingCommandContext);
  *(void *)(v5 + 152) = sub_1C0A4024C;
  *(void *)(v5 + 160) = v18;
  swift_retain();
  sub_1BFF5E000(a2);
  swift_retain();
  sub_1BFF5E000(a2);
  swift_retain();
  sub_1BFF5E000(a2);
  swift_retain();
  sub_1BFF5E000(a2);
  swift_retain();
  sub_1BFF5E000(a2);
  swift_retain();
  sub_1BFF5E000(a2);
  swift_retain();
  sub_1BFF5E000(a2);
  return v5;
}

uint64_t sub_1BFF5DF80(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1C0A41508(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFF5E000(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

void sub_1BFF5E044(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)a2;
  char v6 = *(unsigned char *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 9);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v11 = *(void *)(a2 + 40);
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v15 = *(void *)(a2 + 72);
  uint64_t v16 = *(void *)(a2 + 80);
  uint64_t v17 = *(void *)(a2 + 88);
  uint64_t v18 = *(void *)(a2 + 96);
  uint64_t v19 = *(void *)(v2 + 56);
  uint64_t v20 = *(void *)(v2 + 64);
  uint64_t v23 = *(void *)(v2 + 96);
  uint64_t v24 = v18;
  uint64_t v26 = v10;
  uint64_t v31 = v12;
  uint64_t v32 = v11;
  uint64_t v29 = v14;
  uint64_t v30 = v13;
  uint64_t v27 = v16;
  uint64_t v28 = v15;
  if (*(unsigned __int16 *)(v2 + 48) > 0xFFu)
  {
    uint64_t v22 = v8;
    char v21 = v6;
  }
  else
  {
    uint64_t v47 = *(void *)(v2 + 32);
    uint64_t v33 = v5;
    char v21 = v6;
    char v34 = v6;
    char v35 = v7;
    uint64_t v36 = v9;
    uint64_t v37 = v8;
    uint64_t v22 = v8;
    uint64_t v38 = v10;
    uint64_t v39 = v11;
    uint64_t v40 = v12;
    uint64_t v41 = v13;
    uint64_t v42 = v14;
    uint64_t v43 = v15;
    uint64_t v44 = v16;
    uint64_t v45 = v17;
    uint64_t v46 = v18;
    sub_1BFF79C34(a1, &v33);
    if (v4) {
      return;
    }
  }
  if ((~v19 & 0xF000000000000007) != 0)
  {
    uint64_t v47 = v19;
    uint64_t v33 = v5;
    char v34 = v21;
    char v35 = v7;
    uint64_t v36 = v9;
    uint64_t v37 = v22;
    uint64_t v38 = v26;
    uint64_t v39 = v32;
    uint64_t v40 = v31;
    uint64_t v41 = v30;
    uint64_t v42 = v29;
    uint64_t v43 = v28;
    uint64_t v44 = v27;
    uint64_t v45 = v17;
    uint64_t v46 = v24;
    swift_retain();
    swift_retain();
    sub_1BFF79540((uint64_t)a1, (uint64_t)&v33);
    if (v4)
    {
      sub_1BFDEB900(v19);
      return;
    }
    uint64_t v47 = v20;
    uint64_t v33 = v5;
    char v34 = v21;
    char v35 = v7;
    uint64_t v36 = v9;
    uint64_t v37 = v22;
    uint64_t v38 = v26;
    uint64_t v39 = v32;
    uint64_t v40 = v31;
    uint64_t v41 = v30;
    uint64_t v42 = v29;
    uint64_t v43 = v28;
    uint64_t v44 = v27;
    uint64_t v45 = v17;
    uint64_t v46 = v24;
    sub_1BFF79540((uint64_t)a1, (uint64_t)&v33);
    sub_1BFDEB900(v19);
  }
  if ((~v23 & 0xF000000000000007) != 0)
  {
    uint64_t v47 = v23;
    uint64_t v33 = v5;
    char v34 = v21;
    char v35 = v7;
    uint64_t v36 = v9;
    uint64_t v37 = v22;
    uint64_t v38 = v26;
    uint64_t v39 = v32;
    uint64_t v40 = v31;
    uint64_t v41 = v30;
    uint64_t v42 = v29;
    uint64_t v43 = v28;
    uint64_t v44 = v27;
    uint64_t v45 = v17;
    uint64_t v46 = v24;
    sub_1C05D6858((uint64_t)a1, (uint64_t)&v33);
  }
}

uint64_t sub_1BFF5E2EC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  swift_retain();
  *(void *)(v4 + 16) = sub_1C151C99C();
  *(void *)(v4 + 24) = v8;
  *(unsigned char *)(v4 + 32) = 1;
  uint64_t v18 = a2;
  char v19 = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v9 + 24, (uint64_t (*)(void))sub_1BFF5E61C);
  *(void *)(v4 + 40) = sub_1C0A3FE8C;
  *(void *)(v4 + 48) = v9;
  uint64_t v18 = a2;
  char v19 = a3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v10 + 24, (uint64_t (*)(void))sub_1BFF5E61C);
  *(void *)(v4 + 56) = sub_1C0A3FEB4;
  *(void *)(v4 + 64) = v10;
  uint64_t v18 = a2;
  char v19 = a3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v11 + 24, (uint64_t (*)(void))sub_1BFF5E61C);
  *(void *)(v4 + 72) = sub_1BFE6DA9C;
  *(void *)(v4 + 80) = v11;
  uint64_t v18 = a2;
  char v19 = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v12 + 24, (uint64_t (*)(void))sub_1BFF5E61C);
  *(void *)(v4 + 88) = sub_1C0A3FF0C;
  *(void *)(v4 + 96) = v12;
  uint64_t v18 = a2;
  char v19 = a3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v13 + 24, (uint64_t (*)(void))sub_1BFF5E61C);
  *(void *)(v4 + 136) = sub_1C0A3FF80;
  *(void *)(v4 + 144) = v13;
  uint64_t v18 = a2;
  char v19 = a3;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v14 + 24, (uint64_t (*)(void))sub_1BFF5E61C);
  *(void *)(v4 + 104) = sub_1C0A3FFF4;
  *(void *)(v4 + 112) = v14;
  uint64_t v18 = a2;
  char v19 = a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v15 + 24, (uint64_t (*)(void))sub_1BFF5E61C);
  *(void *)(v4 + 120) = sub_1C0A40028;
  *(void *)(v4 + 128) = v15;
  uint64_t v18 = a2;
  char v19 = a3;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  sub_1BFF5E5B4((uint64_t)&v18, v16 + 24, (uint64_t (*)(void))sub_1BFF5E61C);
  *(void *)(v4 + 152) = sub_1C0A40050;
  *(void *)(v4 + 160) = v16;
  swift_unknownObjectRetain_n();
  swift_retain_n();
  return v4;
}

uint64_t sub_1BFF5E5B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1BFF5E61C()
{
  if (!qword_1EB87C3A0[0])
  {
    sub_1BFE6DC1C(255, &qword_1EB87ED58, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SaveCommandContext);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, qword_1EB87C3A0);
    }
  }
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t sub_1BFF5E6C8(uint64_t a1)
{
  return a1;
}

void sub_1BFF5E6F8(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  long long v7 = *(_OWORD *)(a2 + 80);
  v27[4] = *(_OWORD *)(a2 + 64);
  v27[5] = v7;
  uint64_t v28 = *(void *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 16);
  v27[0] = *(_OWORD *)a2;
  v27[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  uint64_t v27[2] = *(_OWORD *)(a2 + 32);
  v27[3] = v9;
  swift_beginAccess();
  sub_1BFF0D1B8(a1, a2);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v10 = v2[6];
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(v10 + 8 * i + 32);
        sub_1BFF32264(v13);
        sub_1BFF0D378((uint64_t)a1, a2);
        sub_1BFF31E90(v13);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    unint64_t v14 = v2[8];
    if (v14 >> 62 == 1)
    {
      uint64_t v15 = v14 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      sub_1BFE6FA30(v16);
      swift_bridgeObjectRetain();
      sub_1C1144E0C((uint64_t)a1, (uint64_t)v27, v16, v17);
      sub_1BFF0056C(v16);
      swift_bridgeObjectRelease();
    }
    if (v4[10]) {
      sub_1C0023908((uint64_t)a1, (uint64_t)v27, (void (*)(uint64_t, _OWORD *, uint64_t))sub_1BFFF23FC);
    }
    swift_beginAccess();
    uint64_t v18 = v4[11];
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v29 = v18;
      uint64_t v20 = v18 + 48;
      do
      {
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BFF0B0B8(a1, v27);
        v20 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease_n();
    }
    uint64_t v21 = v4[15];
    if (v21)
    {
      swift_beginAccess();
      uint64_t v22 = *(void *)(v21 + 72);
      if (v22)
      {
        swift_bridgeObjectRetain();
        sub_1C0000E48((uint64_t)a1, (uint64_t)v27, v22);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v23 = *(void *)(v21 + 88);
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v25 = (uint64_t *)(v23 + 72);
        do
        {
          uint64_t v26 = *v25;
          if (*v25)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C0000E48((uint64_t)a1, (uint64_t)v27, v26);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v25 += 7;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease_n();
      }
    }
    swift_beginAccess();
    if (v4[16])
    {
      swift_retain();
      sub_1BFFE6C18(a1, (uint64_t)v27);
      swift_release();
    }
  }
}

uint64_t sub_1BFF5EAFC(void *a1, uint64_t a2, uint64_t a3)
{
  v82[3] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *a1 >> 60;
  if (((1 << v4) & 0x3EEF) != 0)
  {
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA76C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    sub_1BFED37AC(a3, v6, (uint64_t (*)(void))type metadata accessor for FormatOption);
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  id v8 = v3;
  uint64_t v10 = *a1 & 0xFFFFFFFFFFFFFFFLL;
  if (v4 != 4)
  {
    v82[0] = *(void *)((*a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
    swift_retain_n();
    swift_retain();
    uint64_t v14 = sub_1BFF5EAFC(v82, a2, a3);
    swift_release_n();
    uint64_t result = swift_release();
    if (!v3) {
      return v14;
    }
    return result;
  }
  uint64_t result = *(void *)((*a1 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  if (!*(void *)(*(void *)(v10 + 24) + 16)) {
    return result;
  }
  uint64_t v69 = *(void *)(v10 + 24);
  uint64_t v70 = result;
  uint64_t v11 = *(void *)(*(void *)(a2 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v11 + 16) + 16))
  {
    v81[0] = *(void *)(a2 + 56);
    uint64_t v12 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_1BFEF3B08(v12);
    sub_1BFEF3808(v13);
    uint64_t v78 = v81[0];
  }
  else
  {
    uint64_t v78 = sub_1BFEF3784();
  }
  uint64_t v72 = *(void *)(v69 + 16);
  if (!v72)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    return v70;
  }
  uint64_t v71 = v69 + 32;
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
LABEL_15:
  unint64_t v16 = (uint64_t *)(v71 + 24 * v15);
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v19 = v16[2];
  uint64_t v20 = qword_1EB87F148;
  swift_bridgeObjectRetain();
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v21 = qword_1EB93C770;
  uint64_t v22 = *(void *)(qword_1EB93C770 + 24);
  swift_bridgeObjectRetain();
  sub_1C1517E7C();
  uint64_t v23 = (uint64_t *)(v21 + 16);
  swift_beginAccess();
  uint64_t v24 = *(void *)(v21 + 16);
  uint64_t v25 = *(void *)(v24 + 16);
  id v79 = v8;
  uint64_t v77 = v15;
  uint64_t v73 = v19;
  if (!v25)
  {
LABEL_21:
    uint64_t v74 = v22;
    swift_endAccess();
    v80[0] = v17;
    v80[1] = v18;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v80, v81);
    uint64_t v29 = v81[1];
    uint64_t v75 = v81[0];
    uint64_t v30 = v81[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v76 = v29;
    swift_bridgeObjectRetain();
    uint64_t v31 = v30;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v80[0] = *v23;
    uint64_t v33 = v80[0];
    *uint64_t v23 = 0x8000000000000000;
    uint64_t v34 = v18;
    unint64_t v36 = sub_1BFEF2D8C(v17, v18);
    uint64_t v37 = *(void *)(v33 + 16);
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38))
    {
      __break(1u);
LABEL_50:
      __break(1u);
    }
    char v40 = v35;
    if (*(void *)(v33 + 24) < v39)
    {
      sub_1BFFDF158(v39, isUniquelyReferenced_nonNull_native);
      unint64_t v41 = sub_1BFEF2D8C(v17, v34);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_52;
      }
      unint64_t v36 = v41;
      uint64_t v43 = (void *)v80[0];
      if ((v40 & 1) == 0) {
        goto LABEL_30;
      }
LABEL_28:
      uint64_t v44 = (void *)(v43[7] + 24 * v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v45 = v76;
      void *v44 = v75;
      v44[1] = v45;
      v44[2] = v31;
      uint64_t v18 = v34;
      uint64_t v28 = v31;
LABEL_32:
      *uint64_t v23 = (uint64_t)v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_33;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v43 = (void *)v80[0];
      if (v35) {
        goto LABEL_28;
      }
    }
    else
    {
      sub_1C106B39C();
      uint64_t v43 = (void *)v80[0];
      if (v40) {
        goto LABEL_28;
      }
    }
LABEL_30:
    v43[(v36 >> 6) + 8] |= 1 << v36;
    uint64_t v46 = (uint64_t *)(v43[6] + 16 * v36);
    *uint64_t v46 = v17;
    v46[1] = v34;
    uint64_t v18 = v34;
    uint64_t v47 = (void *)(v43[7] + 24 * v36);
    uint64_t v48 = v76;
    *uint64_t v47 = v75;
    v47[1] = v48;
    v47[2] = v31;
    uint64_t v49 = v43[2];
    BOOL v50 = __OFADD__(v49, 1);
    uint64_t v51 = v49 + 1;
    if (v50) {
      goto LABEL_50;
    }
    uint64_t v28 = v31;
    _OWORD v43[2] = v51;
    swift_bridgeObjectRetain();
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  unint64_t v26 = sub_1BFEF2D8C(v17, v18);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  uint64_t v28 = *(void *)(*(void *)(v24 + 56) + 24 * v26 + 16);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_33:
  swift_bridgeObjectRelease();
  sub_1C1517E8C();
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(v28 + 16);
  if (!v52)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v75 = v28;
  uint64_t v76 = v18;
  id v53 = (uint64_t *)(v28 + 64);
  while (1)
  {
    uint64_t v54 = *(v53 - 1);
    uint64_t v55 = *v53;
    char v56 = *(unsigned char *)(v54 + 32);
    unsigned int v57 = v56 & 0x3F;
    unint64_t v58 = (unint64_t)((1 << v56) + 63) >> 6;
    size_t v59 = 8 * v58;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v57 <= 0xD) {
      break;
    }
    uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if (isStackAllocationSafe) {
      break;
    }
    uint64_t v61 = (char *)swift_slowAlloc();
    bzero(v61, v59);
    id v64 = v79;
    uint64_t v65 = sub_1BFEFB09C((uint64_t)v61, v58, v54, v78);
    id v79 = v64;
    if (v64) {
      goto LABEL_51;
    }
    uint64_t v63 = v65;
    swift_bridgeObjectRelease();
    MEMORY[0x1C18C9B00](v61, -1, -1);
LABEL_43:
    char v66 = sub_1BFEFAE14(v63, v54);
    swift_release();
    if (v66)
    {
      char v67 = sub_1BFEFB810(v78, v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v67)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v70 = v73;
LABEL_14:
        uint64_t v15 = v77 + 1;
        id v8 = v79;
        if (v77 + 1 == v72)
        {
          swift_bridgeObjectRelease();
          goto LABEL_48;
        }
        goto LABEL_15;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v53 += 5;
    if (!--v52) {
      goto LABEL_13;
    }
  }
  MEMORY[0x1F4188790](isStackAllocationSafe);
  uint64_t v61 = (char *)&v69 - ((v59 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v61, v59);
  id v62 = v79;
  uint64_t v63 = sub_1BFEFB09C((uint64_t)v61, v58, v54, v78);
  swift_bridgeObjectRelease();
  id v79 = v62;
  if (!v62) {
    goto LABEL_43;
  }
  id v68 = v79;
  swift_willThrow();

  __break(1u);
LABEL_51:
  swift_bridgeObjectRelease();

  MEMORY[0x1C18C9B00](v61, -1, -1);
  __break(1u);
LABEL_52:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1BFF5F250(uint64_t a1, int a2, uint64_t (*a3)(void), void (*a4)(void, __n128), void (*a5)(unint64_t, char *), void (*a6)(unint64_t, char *))
{
  uint64_t v48 = a6;
  uint64_t v51 = a5;
  id v8 = v6;
  uint64_t v10 = a3(0);
  uint64_t v49 = *(void *)(v10 - 8);
  __n128 v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = *v6;
  a4(0, v11);
  int v50 = a2;
  uint64_t v15 = sub_1C15204EC();
  uint64_t v16 = v15;
  if (!*(void *)(v14 + 16)) {
    goto LABEL_41;
  }
  uint64_t v17 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v18 = *(void *)(v14 + 64);
  uint64_t v47 = (void *)(v14 + 64);
  if (v17 < 64) {
    uint64_t v19 = ~(-1 << v17);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v18;
  uint64_t v45 = v6;
  int64_t v46 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v21 = v15 + 64;
  uint64_t result = swift_retain();
  int64_t v23 = 0;
  while (1)
  {
    if (v20)
    {
      unint64_t v26 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v27 = v26 | (v23 << 6);
      goto LABEL_22;
    }
    int64_t v28 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v46) {
      break;
    }
    uint64_t v29 = v47;
    unint64_t v30 = v47[v28];
    ++v23;
    if (!v30)
    {
      int64_t v23 = v28 + 1;
      if (v28 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v30 = v47[v23];
      if (!v30)
      {
        int64_t v31 = v28 + 2;
        if (v31 >= v46)
        {
LABEL_34:
          swift_release();
          id v8 = v45;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v30 = v47[v31];
        if (!v30)
        {
          while (1)
          {
            int64_t v23 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              goto LABEL_43;
            }
            if (v23 >= v46) {
              goto LABEL_34;
            }
            unint64_t v30 = v47[v23];
            ++v31;
            if (v30) {
              goto LABEL_21;
            }
          }
        }
        int64_t v23 = v31;
      }
    }
LABEL_21:
    unint64_t v20 = (v30 - 1) & v30;
    unint64_t v27 = __clz(__rbit64(v30)) + (v23 << 6);
LABEL_22:
    uint64_t v32 = (uint64_t *)(*(void *)(v14 + 48) + 16 * v27);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = *(void *)(v49 + 72);
    unint64_t v36 = *(void *)(v14 + 56) + v35 * v27;
    if (v50)
    {
      v51(v36, v13);
    }
    else
    {
      v48(v36, v13);
      swift_bridgeObjectRetain();
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v37 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v21 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v38) & ~*(void *)(v21 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v21 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v24 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v25 = (void *)(*(void *)(v16 + 48) + 16 * v24);
    *uint64_t v25 = v34;
    v25[1] = v33;
    uint64_t result = ((uint64_t (*)(char *, unint64_t))v51)(v13, *(void *)(v16 + 56) + v35 * v24);
    ++*(void *)(v16 + 16);
  }
  swift_release();
  id v8 = v45;
  uint64_t v29 = v47;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v44 = 1 << *(unsigned char *)(v14 + 32);
  if (v44 >= 64) {
    bzero(v29, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v29 = -1 << v44;
  }
  *(void *)(v14 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v8 = v16;
  return result;
}

uint64_t sub_1BFF5F618(uint64_t a1, uint64_t a2)
{
  return sub_1BFF3DBF0(a1, a2, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
}

uint64_t sub_1BFF5F630(uint64_t a1, uint64_t a2)
{
  sub_1C12030D0(0, (unint64_t *)&qword_1EB8741E0, (uint64_t (*)(void))sub_1C00F6B20, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFF5F6CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  sub_1C1517EFC();
  uint64_t v4 = *(void *)(*(void *)(v22 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v4 + 16) + 16))
  {
    v21[0] = *(void *)(v22 + 56);
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = sub_1BFEF3B08(v5);
    sub_1BFEF3808(v6);
    swift_release();
    uint64_t v7 = v21[0];
  }
  else
  {
    uint64_t v7 = sub_1BFEF3784();
    swift_release();
  }
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  v21[0] = v2;
  v21[1] = v3;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1BFEF53C0(v21);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v8 + 16);
  if (!v9)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = (unsigned int *)MEMORY[0x1E4FAB098];
    goto LABEL_14;
  }
  uint64_t v10 = (uint64_t *)(v8 + 64);
  while (1)
  {
    uint64_t v11 = *(v10 - 1);
    uint64_t v12 = *v10;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1BFF36784(v7, v11);
    char v14 = sub_1BFEFAE14(v13, v11);
    swift_release();
    if (v14) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_9:
    v10 += 5;
    if (!--v9) {
      goto LABEL_13;
    }
  }
  char v15 = sub_1BFEFB810(v7, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0) {
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = (unsigned int *)MEMORY[0x1E4FAB090];
LABEL_14:
  uint64_t v17 = *v16;
  uint64_t v18 = sub_1C15191EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(a1, v17, v18);
}

unint64_t FormatTextNode.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  unint64_t v23 = v2[4];
  sub_1BFF18D70(v23);
  FormatTextSize.bind(binder:context:)(a1, a2);
  if (v3) {
    return sub_1BFF18DA8(v23);
  }
  sub_1BFF18DA8(v23);
  swift_beginAccess();
  uint64_t v8 = v2[6];
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v9; ++i)
    {
      unint64_t v11 = *(void *)(v8 + 8 * i + 32);
      sub_1BFF32264(v11);
      FormatAdjustment.bind(binder:context:)(a1, a2);
      sub_1BFF31E90(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  if (v2[7]) {
    FormatTextNodeStyle.bind(binder:context:)(a1, a2);
  }
  uint64_t v12 = v2[8];
  if (v12)
  {
    swift_beginAccess();
    uint64_t v13 = *(void *)(v12 + 72);
    if (v13)
    {
      swift_bridgeObjectRetain();
      sub_1C04CFB10(a1, a2, v13);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v14 = *(void *)(v12 + 88);
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v16 = (uint64_t *)(v14 + 72);
      do
      {
        uint64_t v17 = *v16;
        if (*v16)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C04CFB10(a1, a2, v17);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v16 += 7;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease_n();
    }
  }
  swift_retain();
  FormatTextContent.bind(binder:context:)(a1, a2);
  swift_release();
  unsigned int v18 = *((unsigned __int16 *)v4 + 52);
  if (v18 >> 10 <= 0x3E)
  {
    uint64_t v24 = v4[10];
    uint64_t v25 = v4[11];
    uint64_t v26 = v4[12];
    sub_1BFFDF514(v24, v25, v26, v18);
    FormatComputedInvalidation.bind(binder:context:)(a1, a2);
    sub_1BFF4BC8C(v24, v25, v26, v18);
  }
  swift_beginAccess();
  unint64_t v19 = v4[15];
  if (v19 >> 62 == 1)
  {
    unint64_t v20 = *(void *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v21 = *(void *)((v19 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    sub_1BFE6FA30(v4[15]);
    sub_1BFE6FA30(v20);
    swift_bridgeObjectRetain();
    sub_1C052A7F4(a1, a2, v20, v21);
    sub_1BFF0056C(v20);
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v19);
  }
  swift_beginAccess();
  uint64_t v22 = v4[20];
  swift_bridgeObjectRetain();
  sub_1C04FC470(a1, a2, v22);
  return swift_bridgeObjectRelease();
}

void FormatTextContent.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for FormatTextNodeLink();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  switch((unint64_t)*v2 >> 60)
  {
    case 1uLL:
    case 2uLL:
      return;
    case 3uLL:
      uint64_t v12 = v9 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v13 = *(void *)(v12 + 24);
      *(void *)&long long v49 = *(void *)(v12 + 16);
      uint64_t v14 = v49 & 0xFFFFFFFFFFFFFFFLL;
      swift_retain_n();
      swift_bridgeObjectRetain();
      FormatTextContent.bind(binder:context:)(a1, a2);
      if (v3) {
        goto LABEL_13;
      }
      swift_release();
      uint64_t v38 = *(void *)(v13 + 16);
      if (!v38) {
        goto LABEL_32;
      }
      uint64_t v47 = v14;
      uint64_t v53 = a2;
      swift_bridgeObjectRetain();
      uint64_t v48 = v13;
      uint64_t v39 = v13 + 64;
      do
      {
        uint64_t v40 = *(void *)(v39 - 8);
        *(void *)&long long v49 = *(void *)(v39 - 16);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        FormatTextContent.bind(binder:context:)(a1, v53);
        swift_release();
        if (v40) {
          FormatTextNodeStyle.bind(binder:context:)(a1, v53);
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        v39 += 40;
        --v38;
      }
      while (v38);
      goto LABEL_33;
    case 4uLL:
      uint64_t v15 = v9 & 0xFFFFFFFFFFFFFFFLL;
      char v16 = *(unsigned char *)(v15 + 24);
      uint64_t v17 = *(void *)(v15 + 32);
      uint64_t v18 = *(void *)(v15 + 40);
      char v19 = *(unsigned char *)(v15 + 48);
      *(void *)&long long v49 = *(void *)(v15 + 16);
      BYTE8(v49) = v16;
      *(void *)&long long v50 = v17;
      *((void *)&v50 + 1) = v18;
      LOBYTE(v51) = v19;
      swift_retain();
      sub_1BFE94AB4(v17, v18, v19);
      FormatTextNodeAttachment.bind(binder:context:)(a1, a2);
      swift_release();
      sub_1BFE94AD4(v17, v18, v19);
      return;
    case 5uLL:
      uint64_t v20 = v9 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v21 = *(void *)(v20 + 16);
      uint64_t v22 = *(void *)(v20 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05297D8(a1, a2, v21, v22, (void (*)(uint64_t, uint64_t))FormatTextContent.bind(binder:context:));
      swift_release();
      swift_bridgeObjectRelease();
      return;
    case 6uLL:
      uint64_t v23 = v9 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v24 = *(void *)(v23 + 16);
      int v25 = *(unsigned __int8 *)(v23 + 24);
      if (!v25)
      {
        uint64_t v44 = *(void *)(v24 + 16);
        if (!v44) {
          return;
        }
        sub_1C01EF338(v24, 0);
        swift_bridgeObjectRetain();
        uint64_t v45 = (unsigned char *)(v24 + 40);
        while (1)
        {
          if ((*v45 & 1) == 0)
          {
            *(void *)&long long v49 = *((void *)v45 - 1);
            uint64_t v46 = v49;
            swift_retain_n();
            FormatFloat.bind(binder:context:)(a1, a2);
            if (v3)
            {
              sub_1BFF49984(v46, 0);
              sub_1BFF49984(v46, 0);
LABEL_31:
              sub_1C01EF35C(v24, 0);
              sub_1C01EF35C(v24, 0);
              return;
            }
            sub_1BFF49984(v46, 0);
            sub_1BFF49984(v46, 0);
          }
          v45 += 16;
          if (!--v44) {
            goto LABEL_31;
          }
        }
      }
      if (v25 == 1)
      {
        sub_1C01EF338(v24, 1u);
        sub_1BFF80048(a2, v24);
        sub_1C01EF35C(v24, 1u);
      }
      return;
    case 7uLL:
      uint64_t v26 = swift_projectBox();
      sub_1BFF83CC4(v26, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      FormatTextNodeLink.bind(binder:context:)(a1, a2);
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatTextNodeLink);
      return;
    case 8uLL:
      unint64_t v27 = (void *)(v9 & 0xFFFFFFFFFFFFFFFLL);
      unint64_t v29 = v27[2];
      uint64_t v28 = v27[3];
      uint64_t v30 = v27[4];
      uint64_t v31 = v27[5];
      uint64_t v53 = a2;
      uint64_t v32 = v27[6];
      uint64_t v33 = v27[7];
      uint64_t v34 = v27[8];
      *(void *)&long long v49 = v29;
      *((void *)&v49 + 1) = v28;
      *(void *)&long long v50 = v30;
      *((void *)&v50 + 1) = v31;
      *(void *)&long long v51 = v32;
      *((void *)&v51 + 1) = v33;
      uint64_t v52 = v34;
      sub_1BFF58F10(v29);
      uint64_t v47 = v34;
      uint64_t v48 = v28;
      sub_1BFF523A4(v28, v30, v31);
      FormatTextNodeDateTimeFormat.bind(binder:context:)(a1, v53);
      sub_1BFF07CD8(v29);
      sub_1BFF51C94(v48, v30, v31);
      return;
    case 9uLL:
      uint64_t v35 = v9 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v36 = *(void *)(v35 + 24);
      *(void *)&long long v49 = *(void *)(v35 + 16);
      uint64_t v37 = v49 & 0xFFFFFFFFFFFFFFFLL;
      swift_retain_n();
      swift_bridgeObjectRetain();
      FormatTextContent.bind(binder:context:)(a1, a2);
      if (v3)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        swift_release_n();
      }
      else
      {
        swift_release();
        uint64_t v41 = *(void *)(v36 + 16);
        if (v41)
        {
          uint64_t v53 = v37;
          uint64_t v42 = a2;
          swift_bridgeObjectRetain_n();
          uint64_t v43 = (void *)(v36 + 48);
          do
          {
            *(void *)&long long v49 = *v43;
            swift_retain_n();
            swift_bridgeObjectRetain();
            FormatTextContent.bind(binder:context:)(a1, v42);
            swift_bridgeObjectRelease();
            swift_release_n();
            v43 += 3;
            --v41;
          }
          while (v41);
LABEL_33:
          swift_release();
          swift_bridgeObjectRelease_n();
        }
        else
        {
LABEL_32:
          swift_bridgeObjectRelease();
          swift_release();
        }
      }
      return;
    default:
      __int16 v10 = *(_WORD *)(v9 + 64);
      long long v11 = *(_OWORD *)(v9 + 32);
      long long v49 = *(_OWORD *)(v9 + 16);
      long long v50 = v11;
      long long v51 = *(_OWORD *)(v9 + 48);
      LOWORD(v52) = v10;
      FormatTextNodeBinding.bind(binder:context:)(a1, a2);
      return;
  }
}

void *FormatTextNodeStyle.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 48);
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    memcpy(__dst, (const void *)(v8 + 32), sizeof(__dst));
    memcpy(v48, __dst, sizeof(v48));
    sub_1C05DC340((uint64_t)__dst);
    FormatTextNodeStyle.Selector.bind(binder:context:)(a1, a2);
    if (v3)
    {
      sub_1C05DC4C4((uint64_t)__dst);
      return (void *)swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = 560; ; i += 528)
    {
      sub_1C05DC4C4((uint64_t)__dst);
      if (!--v9) {
        break;
      }
      memcpy(__dst, (const void *)(v8 + i), sizeof(__dst));
      memcpy(v48, __dst, sizeof(v48));
      sub_1C05DC340((uint64_t)__dst);
      FormatTextNodeStyle.Selector.bind(binder:context:)(a1, a2);
    }
    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = *(void *)(v5 + 56);
  if ((~v12 & 0xF000000000000007) != 0)
  {
    __dst[0] = *(void *)(v5 + 56);
    swift_retain();
    FormatFont.bind(binder:context:)(a1, a2);
    if (v3) {
      return (void *)sub_1BFEF68C0(v12);
    }
    sub_1BFEF68C0(v12);
  }
  uint64_t v13 = MEMORY[0x1E4FBB718];
  sub_1C05DC640(v5 + 64, (uint64_t)v48, (uint64_t)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
  sub_1C05DC640((uint64_t)v48, (uint64_t)__dst, (uint64_t)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill, v13, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
  uint64_t result = (void *)sub_1C044587C((uint64_t)__dst);
  if (result != 1)
  {
    sub_1BFF6530C((uint64_t)__dst, (uint64_t)v46);
    sub_1C05DC640((uint64_t)v48, (uint64_t)v47, (uint64_t)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
    sub_1C05DD52C(v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF87A0);
    FormatFill.bind(binder:context:)(a1, a2);
    if (v3) {
      return sub_1C05DD52C(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
    }
    uint64_t result = sub_1C05DD52C(v48, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
  }
  uint64_t v14 = *(void *)(v5 + 192);
  if (v14)
  {
    uint64_t result = (void *)sub_1C04CDF64(a1, a2, v14);
    if (v3) {
      return result;
    }
  }
  if (*(unsigned __int8 *)(v5 + 280) != 254)
  {
    uint64_t v50 = *(unsigned __int8 *)(v5 + 280);
    uint64_t v40 = *(void *)(v5 + 200);
    uint64_t v41 = *(void *)(v5 + 208);
    uint64_t v19 = *(void *)(v5 + 232);
    uint64_t v44 = *(void *)(v5 + 240);
    uint64_t v45 = *(void *)(v5 + 224);
    uint64_t v20 = *(void *)(v5 + 256);
    uint64_t v42 = *(void *)(v5 + 216);
    uint64_t v43 = *(void *)(v5 + 248);
    uint64_t v22 = *(void *)(v5 + 264);
    uint64_t v21 = *(void *)(v5 + 272);
    v47[0] = v19;
    swift_retain();
    FormatColor.bind(binder:context:)(a1, a2);
    if (v3) {
      return (void *)sub_1BFEF8738(v40, v41, v42, v45, v19, v44, v43, v20, v22, v21, v50);
    }
    uint64_t v39 = v21;
    uint64_t v23 = v22;
    unsigned __int8 v24 = v50;
    uint64_t v25 = v20;
    uint64_t v26 = v43;
    uint64_t v27 = v44;
    uint64_t v28 = v19;
    uint64_t v29 = v45;
    switch((int)v50)
    {
      case 0:
        break;
      case 1:
      case 4:
        uint64_t v38 = v25;
        sub_1C053FAE0(a1, a2);
        goto LABEL_52;
      case 2:
      case 3:
      case 5:
        uint64_t v38 = v25;
        sub_1C053FAE0(a1, a2);
        sub_1C053FAE0(a1, a2);
        uint64_t v4 = 0;
LABEL_52:
        uint64_t v25 = v38;
        unsigned __int8 v24 = v50;
        break;
      default:
        uint64_t v25 = v43;
        uint64_t v26 = v44;
        uint64_t v27 = v28;
        uint64_t v28 = v45;
        uint64_t v29 = v45;
        break;
    }
    uint64_t result = (void *)sub_1BFEF8738(v40, v41, v42, v29, v28, v27, v26, v25, v23, v39, v24);
    uint64_t v15 = *(void *)(v5 + 512);
    if (!v15) {
      goto LABEL_33;
    }
    goto LABEL_21;
  }
  uint64_t v15 = *(void *)(v5 + 512);
  if (v15)
  {
LABEL_21:
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v17 = (unsigned char *)(v15 + 40);
      do
      {
        if ((*v17 & 1) == 0)
        {
          v47[0] = *((void *)v17 - 1);
          uint64_t v18 = v47[0];
          swift_retain_n();
          FormatFloat.bind(binder:context:)(a1, a2);
          if (v4)
          {
            sub_1BFF49984(v18, 0);
            sub_1BFF49984(v18, 0);
            return (void *)swift_bridgeObjectRelease_n();
          }
          sub_1BFF49984(v18, 0);
          sub_1BFF49984(v18, 0);
        }
        v17 += 16;
        --v16;
      }
      while (v16);
      uint64_t result = (void *)swift_bridgeObjectRelease_n();
    }
  }
LABEL_33:
  uint64_t v30 = *(void *)(v5 + 520);
  if (v30 != 9)
  {
    uint64_t v31 = *(void *)(v5 + 528);
    if ((~v31 & 0xF000000000000007) != 0)
    {
      v47[0] = *(void *)(v5 + 528);
      sub_1BFDC11A4(v31);
      FormatColor.bind(binder:context:)(a1, a2);
      if (v4) {
        return (void *)sub_1BFEF8750(v30, v31);
      }
    }
    uint64_t result = (void *)sub_1BFEF8750(v30, v31);
  }
  uint64_t v32 = *(void *)(v5 + 536);
  if (v32 != 9)
  {
    uint64_t v33 = *(void *)(v5 + 544);
    if ((~v33 & 0xF000000000000007) != 0)
    {
      v47[0] = *(void *)(v5 + 544);
      sub_1BFDC11A4(v33);
      FormatColor.bind(binder:context:)(a1, a2);
      uint64_t result = (void *)sub_1BFEF8750(v32, v33);
      if (v4) {
        return result;
      }
    }
    else
    {
      uint64_t result = (void *)sub_1BFEF8750(*(void *)(v5 + 536), *(void *)(v5 + 544));
    }
  }
  uint64_t v34 = *(void *)(v5 + 560);
  if (v34)
  {
    uint64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v36 = (unsigned char *)(v34 + 40);
      do
      {
        if ((*v36 & 1) == 0)
        {
          v47[0] = *((void *)v36 - 1);
          uint64_t v37 = v47[0];
          swift_retain_n();
          FormatFloat.bind(binder:context:)(a1, a2);
          sub_1BFF49984(v37, 0);
          sub_1BFF49984(v37, 0);
          if (v4) {
            break;
          }
        }
        v36 += 16;
        --v35;
      }
      while (v35);
      return (void *)swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t FormatTextSize.bind(binder:context:)(uint64_t result, uint64_t a2)
{
  unint64_t v14 = result;
  uint64_t v4 = *v2;
  unint64_t v6 = result;
  switch((unint64_t)*v2 >> 61)
  {
    case 1uLL:
      uint64_t v7 = v4 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v8 = *(void *)(v7 + 16);
      unint64_t v9 = *(void *)(v7 + 24);
      swift_bridgeObjectRetain();
      sub_1BFF18D70(v9);
      sub_1C0529D70(v6, a2, v8, v9);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFF18DA8(v9);
      break;
    case 2uLL:
      uint64_t result = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)(result + 16);
      if (v10)
      {
        uint64_t v11 = swift_bridgeObjectRetain() + 56;
        do
        {
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          FormatTextContent.bind(binder:context:)(v14, a2);
          if (v3) {
            goto LABEL_15;
          }
          swift_release();
          swift_retain();
          FormatTextNodeAlternativeLogic.bind(binder:context:)(v14, a2);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          v11 += 32;
          --v10;
        }
        while (v10);
        return swift_bridgeObjectRelease();
      }
      break;
    case 3uLL:
      uint64_t result = *(void *)((v4 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v12 = *(void *)(result + 16);
      if (v12)
      {
        for (uint64_t i = swift_bridgeObjectRetain() + 56; ; i += 32)
        {
          swift_retain();
          swift_retain_n();
          swift_bridgeObjectRetain();
          FormatTextContent.bind(binder:context:)(v14, a2);
          if (v3) {
            break;
          }
          swift_release();
          swift_retain();
          FormatTextNodeAlternativeLogic.bind(binder:context:)(v14, a2);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release_n();
          if (!--v12) {
            return swift_bridgeObjectRelease();
          }
        }
LABEL_15:
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t result = swift_release_n();
      }
      break;
    case 4uLL:
    case 5uLL:
      swift_retain();
      FormatTextContent.bind(binder:context:)(v6, a2);
      uint64_t result = swift_release();
      break;
    case 6uLL:
      return result;
    default:
      unint64_t v15 = *(void *)(v4 + 16);
      sub_1BFF35EA4(v15);
      FormatSize.bind(binder:context:)(v6, a2);
      uint64_t result = sub_1BFF322A8(v15);
      break;
  }
  return result;
}

unint64_t FormatSymbolImage.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v40 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v32 - v10;
  int v12 = *(unsigned __int8 *)(v2 + 24);
  uint64_t v14 = *(void *)(v2 + 32);
  uint64_t v13 = *(void *)(v2 + 40);
  uint64_t v15 = *(unsigned __int16 *)(v2 + 48);
  uint64_t v17 = *(void *)(v2 + 56);
  uint64_t v16 = *(void *)(v2 + 64);
  uint64_t v18 = *(void *)(v2 + 80);
  uint64_t v39 = *(void *)(v2 + 72);
  int v44 = *(unsigned __int8 *)(v2 + 88);
  unint64_t v19 = *(void *)(v2 + 96);
  if (v12 == 1)
  {
    uint64_t v32 = v13;
    unint64_t v33 = v19;
    uint64_t v37 = v17;
    uint64_t v38 = v16;
    uint64_t v35 = a2;
    uint64_t v36 = v18;
    uint64_t v34 = a1;
    uint64_t v20 = *(void *)(v2 + 8);
    uint64_t v22 = *(void *)(v2 + 16);
    uint64_t v41 = *(void *)v2;
    uint64_t v21 = v41;
    uint64_t v42 = v20;
    uint64_t v43 = v22;
    char v45 = 5;
    sub_1BFDEB94C(v41, v20, v22, 1);
    sub_1BFDEB94C(v21, v20, v22, 1);
    uint64_t v23 = sub_1C12ECBDC(&v41, &v45);
    if (v3) {
      return sub_1BFDEB9E0(v21, v20, v22, 1);
    }
    uint64_t v24 = v35;
    sub_1C0EC63F8(v21, v20, v23, 1, (uint64_t)v11);
    uint64_t v4 = 0;
    sub_1C05DDCC0((uint64_t)v11, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    sub_1BFDEB9E0(v21, v20, v22, 1);
    a2 = v24;
    unint64_t v19 = v33;
    a1 = v34;
    uint64_t v18 = v36;
    uint64_t v17 = v37;
    uint64_t v16 = v38;
    uint64_t v13 = v32;
  }
  if (v15 >> 8 <= 0xFE)
  {
    uint64_t v37 = v17;
    uint64_t v38 = v16;
    uint64_t v41 = v14;
    uint64_t v42 = v13;
    LOWORD(v43) = v15;
    uint64_t v26 = v13;
    sub_1BFF61744(v14, v13, v15, SBYTE1(v15));
    FormatSymbolConfig.bind(binder:context:)(a1, a2);
    if (v4) {
      return sub_1BFF6179C(v14, v26, v15);
    }
    sub_1BFF6179C(v14, v26, v15);
    uint64_t v17 = v37;
    uint64_t v16 = v38;
  }
  uint64_t v27 = v39;
  uint64_t v28 = (uint64_t)v40;
  if ((~v17 & 0xF000000000000007) != 0)
  {
    uint64_t v36 = v18;
    uint64_t v41 = v17;
    uint64_t v30 = v17;
    uint64_t v31 = v16;
    sub_1BFDEB8B4(v17);
    swift_retain();
    FormatColor.bind(binder:context:)(a1, a2);
    if (v4)
    {
      swift_release();
      return sub_1BFDEB900(v30);
    }
    swift_release();
    uint64_t v41 = v31;
    swift_retain();
    FormatColor.bind(binder:context:)(a1, a2);
    swift_release();
    sub_1BFDEB900(v30);
    uint64_t v18 = v36;
    uint64_t v28 = (uint64_t)v40;
  }
  if (v44)
  {
    sub_1BFE94AB4(v27, v18, 1);
    uint64_t v29 = sub_1C00B857C((uint64_t)&unk_1F1B6DA28);
    sub_1C0EC63F8(v27, v18, v29, 1, v28);
    if (v4)
    {
      swift_bridgeObjectRelease();
      return sub_1BFE94AD4(v27, v18, 1);
    }
    sub_1C05DDCC0(v28, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
  }
  unint64_t result = sub_1BFE94AD4(v27, v18, v44);
  if ((~v19 & 0xF000000000000007) != 0)
  {
    uint64_t v41 = v19;
    sub_1BFF58F10(v19);
    FormatSymbolImageColor.bind(binder:context:)(a1, a2);
    return sub_1C00F5B20(v19);
  }
  return result;
}

id sub_1BFF61220(uint64_t a1)
{
  uint64_t v31 = *(void *)(v1 + 40);
  uint64_t v32 = *(void *)(v1 + 32);
  unsigned int v33 = *(unsigned __int16 *)(v1 + 48);
  uint64_t v27 = *(void *)(v1 + 64);
  uint64_t v28 = *(void *)(v1 + 56);
  uint64_t v29 = *(void *)(v1 + 80);
  uint64_t v30 = *(void *)(v1 + 72);
  char v4 = *(unsigned char *)(v1 + 88);
  unint64_t v5 = *(void *)(v1 + 96);
  uint64_t v34 = *(void *)v1;
  uint64_t v35 = *(void *)(v1 + 8);
  uint64_t v36 = *(void *)(v1 + 16);
  char v37 = *(unsigned char *)(v1 + 24);
  sub_1BFDEB94C(*(void *)v1, v35, v36, v37);
  uint64_t v6 = sub_1BFF61DEC(a1);
  id v8 = v7;
  sub_1BFDEB9E0(v34, v35, v36, v37);
  if (!v2)
  {
    unint64_t v24 = v5;
    uint64_t v26 = (uint64_t)v8;
    if (v33 >> 8 <= 0xFE)
    {
      sub_1BFF61744(v32, v31, v33, SBYTE1(v33));
      uint64_t v25 = sub_1BFF617B0(a1);
      sub_1BFF6179C(v32, v31, v33);
    }
    else
    {
      uint64_t v25 = 0;
    }
    sub_1BFE94AB4(v30, v29, v4);
    sub_1C1517EFC();
    char v9 = FormatBoolean.value(contextLayoutOptions:)(v38);
    char v11 = v9;
    uint64_t v12 = v6;
    uint64_t v13 = a1;
    swift_release();
    sub_1BFE94AD4(v30, v29, v4);
    if (v11)
    {
      uint64_t v14 = v25;
      if (!v25)
      {
        uint64_t v20 = self;
        uint64_t v16 = (void *)sub_1C151E5EC();
        id v8 = objc_msgSend(v20, sel_ts_internalSystemImageNamed_, v16);
LABEL_21:

LABEL_22:
        if (v8)
        {
          swift_bridgeObjectRelease();

          return v8;
        }
LABEL_24:
        id v8 = (id)type metadata accessor for FormatLayoutError();
        sub_1C0281748((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        *uint64_t v23 = v12;
        v23[1] = v26;
        v23[2] = (uint64_t)v14;
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        return v8;
      }
      uint64_t v15 = self;
      uint64_t v16 = v25;
      id v17 = (id)sub_1C151E5EC();
      id v8 = objc_msgSend(v15, sel_ts_internalSystemImageNamed_withConfiguration_, v17, v16);
    }
    else
    {
      if (v25)
      {
        uint64_t v14 = v25;
        uint64_t v18 = v25;
        swift_bridgeObjectRetain();
        unint64_t v19 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v8 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v19, v18);
      }
      else
      {
        uint64_t v14 = 0;
        swift_bridgeObjectRetain();
        unint64_t v19 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v8 = objc_msgSend(self, sel_systemImageNamed_, v19);
      }

      unint64_t v21 = v24;
      if ((~v24 & 0xF000000000000007) == 0)
      {
        if ((~v28 & 0xF000000000000007) == 0) {
          goto LABEL_22;
        }
        unint64_t v21 = swift_allocObject();
        sub_1C02817C8();
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1C1527210;
        *(void *)(v22 + 32) = v28;
        *(void *)(v22 + 40) = v27;
        *(void *)(v21 + 16) = v22;
        swift_retain();
        swift_retain();
      }
      if (!v8)
      {
        sub_1C00F5B0C(v24);
        sub_1C00F5B20(v21);
        goto LABEL_24;
      }
      sub_1C00F5B0C(v24);
      id v17 = v8;
      uint64_t v16 = FormatSymbolImageColor.symbolConfiguration(context:)(v13);
      id v8 = objc_msgSend(v17, sel_imageByApplyingSymbolConfiguration_, v16);
      sub_1C00F5B20(v21);
    }
    goto LABEL_21;
  }
  return v8;
}

uint64_t sub_1BFF61744(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2 || a4 == 1) {
    return swift_bridgeObjectRetain();
  }
  if (!a4) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BFF61770(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2 || a4 == 1) {
    return swift_bridgeObjectRelease();
  }
  if (!a4) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFF6179C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (BYTE1(a3) != 255) {
    return sub_1BFF61770(result, a2, a3, SBYTE1(a3));
  }
  return result;
}

void *sub_1BFF617B0(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v6 = v2;
  switch(*(unsigned char *)(v1 + 17))
  {
    case 1:
      LOBYTE(v11) = *(void *)v1;
      uint64_t v12 = v4;
      char v13 = v5;
      id v8 = &v11;
      char v9 = sub_1C0BAC750();
      if (!v6) {
        goto LABEL_9;
      }
      break;
    case 2:
      uint64_t v11 = *(void *)v1;
      LOWORD(v12) = v4;
      id v8 = &v11;
      char v9 = sub_1BFF618D8(a1);
      if (!v6) {
        goto LABEL_9;
      }
      break;
    case 3:
      LOWORD(v11) = *(void *)v1;
      char v9 = sub_1C0BAE6BC();
      goto LABEL_9;
    case 4:
      LOWORD(v11) = *(void *)v1;
      char v9 = sub_1C0BAE800();
LABEL_9:
      id v8 = v9;
      break;
    default:
      uint64_t v11 = *(void *)v1;
      LOBYTE(v12) = v4;
      swift_retain();
      id v8 = (void *)sub_1C0BAC3A4(a1);
      sub_1BFF61770(v3, v4, v5, 0);
      break;
  }
  return v8;
}

id sub_1BFF618D8(uint64_t a1)
{
  uint64_t v4 = sub_1C151794C();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  char v9 = (char *)&v46 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v46 - v11;
  MEMORY[0x1F4188790](v13);
  id v17 = (char *)&v46 - v16;
  uint64_t v18 = *(void *)v1;
  uint64_t v19 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v20 = *(unsigned __int8 *)(v1 + 9);
  uint64_t v46 = a1;
  if (v19 != 10)
  {
    uint64_t v28 = v15;
    uint64_t v29 = v14;
    if (v20 == 5)
    {
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      id v23 = v47;
      double v30 = sub_1BFF493E4((uint64_t)v47, v18);
      swift_bridgeObjectRelease();
      swift_release();
      if (v2) {
        return v23;
      }
      sub_1C15176BC();
      sub_1C151793C();
      double v32 = round(v30 * 4.0 * v31 * 0.25);
      if (byte_1EA2B53C0) {
        double v30 = v32;
      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);
      id v27 = objc_msgSend(self, sel_configurationWithPointSize_weight_, v19, v30, v46);
    }
    else
    {
      uint64_t v41 = v20;
      swift_bridgeObjectRetain();
      sub_1C1517EFC();
      id v23 = v47;
      double v42 = sub_1BFF493E4((uint64_t)v47, v18);
      swift_bridgeObjectRelease();
      swift_release();
      if (v2) {
        return v23;
      }
      sub_1C15176BC();
      sub_1C151793C();
      double v44 = round(v42 * 4.0 * v43 * 0.25);
      if (byte_1EA2B53C0) {
        double v42 = v44;
      }
      (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v29);
      id v27 = objc_msgSend(self, sel_configurationWithPointSize_weight_scale_, v19, v41 - 1, v42, v46);
    }
    return v27;
  }
  uint64_t v21 = v15;
  uint64_t v22 = v14;
  if (v20 == 5)
  {
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    id v23 = v47;
    double v24 = sub_1BFF493E4((uint64_t)v47, v18);
    swift_bridgeObjectRelease();
    swift_release();
    if (v2) {
      return v23;
    }
    sub_1C15176BC();
    sub_1C151793C();
    double v26 = round(v24 * 4.0 * v25 * 0.25);
    if (byte_1EA2B53C0) {
      double v24 = v26;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
    id v27 = objc_msgSend(self, sel_configurationWithPointSize_, v24, v46);
    return v27;
  }
  uint64_t v33 = v20;
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  id v23 = v47;
  double v34 = sub_1BFF493E4((uint64_t)v47, v18);
  swift_bridgeObjectRelease();
  swift_release();
  if (!v2)
  {
    sub_1C15176BC();
    sub_1C151793C();
    double v36 = round(v34 * 4.0 * v35 * 0.25);
    if (byte_1EA2B53C0) {
      double v34 = v36;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
    char v37 = self;
    uint64_t v38 = v33 - 1;
    id v39 = objc_msgSend(v37, sel_configurationWithPointSize_, v34, v46);
    id v40 = objc_msgSend(v37, sel_configurationWithScale_, v38);
    id v23 = objc_msgSend(v39, sel_configurationByApplyingConfiguration_, v40);
  }
  return v23;
}

uint64_t sub_1BFF61DEC(uint64_t a1)
{
  uint64_t v23 = a1;
  uint64_t v2 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FormatOption();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)v1;
  uint64_t v12 = *(void *)(v1 + 8);
  if (*(unsigned char *)(v1 + 24))
  {
    uint64_t v21 = *(void *)(v1 + 16);
    FormatOptionCollection.subscript.getter(v13, v12, (uint64_t)v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1BFEFEB08((uint64_t)v7, (uint64_t (*)(void))sub_1C00AB000);
      *uint64_t v4 = v13;
      v4[1] = v12;
      swift_storeEnumTagMultiPayload();
      sub_1BFEB6CFC((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      sub_1C04A8F1C((uint64_t)v4, v14);
      swift_bridgeObjectRetain();
      swift_willThrow();
      uint64_t v15 = type metadata accessor for FormatLayoutError;
      uint64_t v16 = (uint64_t)v4;
LABEL_8:
      sub_1BFEFEB08(v16, (uint64_t (*)(void))v15);
      return v13;
    }
    uint64_t v17 = v21;
    sub_1C00AB068((uint64_t)v7, (uint64_t)v11);
    swift_retain();
    uint64_t v18 = v22;
    sub_1BFF28A20(v23, &v24);
    swift_release();
    if (v18)
    {
      uint64_t v15 = type metadata accessor for FormatOption;
      uint64_t v16 = (uint64_t)v11;
      goto LABEL_8;
    }
    uint64_t v13 = sub_1BFF68B60(v24, v13, v12, v17, v23);
    swift_release();
    sub_1BFEFEB08((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOption);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v13;
}

uint64_t FormatBoolean.value(contextLayoutOptions:)(uint64_t a1)
{
  sub_1C00AB000();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)v1;
  if (*(unsigned char *)(v1 + 16))
  {
    uint64_t v11 = *(void *)(v1 + 8);
    swift_bridgeObjectRetain();
    FormatOptionCollection.subscript.getter(v10, v11, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_1C0399974((uint64_t)v5, (uint64_t (*)(void))sub_1C00AB000);
      char v12 = type metadata accessor for FormatLayoutError();
      sub_1BFE7E51C();
      swift_allocError();
      *uint64_t v13 = v10;
      v13[1] = v11;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
    else
    {
      sub_1BFE94AD4(v10, v11, 1);
      sub_1C00AB068((uint64_t)v5, (uint64_t)v9);
      uint64_t v16 = *((void *)v9 + 2);
      swift_retain();
      char v12 = sub_1C0398E14(&v16, a1, (uint64_t)v9);
      swift_release();
      sub_1C0399974((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
    }
  }
  else
  {
    char v12 = v10 & 1;
  }
  return v12 & 1;
}

uint64_t sub_1BFF62358(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (BYTE1(a3) != 255) {
    return sub_1BFF61744(result, a2, a3, SBYTE1(a3));
  }
  return result;
}

uint64_t sub_1BFF6236C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF6239C(a1, a2, a3, *v3, (unint64_t *)&qword_1EB87C438, (uint64_t)&type metadata for FormatNodeCacheKey);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BFF6239C(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1BFF66364(0, a5, a6, MEMORY[0x1E4FBBE00]);
    char v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 24);
  }
  else
  {
    char v12 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v14 = v12 + 32;
  uint64_t v15 = a4 + 32;
  size_t v16 = 24 * v10;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFF62538(uint64_t a1)
{
  return sub_1BFF48580(a1, (uint64_t (*)(void))sub_1C0EE1BAC);
}

void sub_1BFF62558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v17 = sub_1C15191EC();
  MEMORY[0x1F4188790](v17);
  unint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a3 + 16);
  if (v9)
  {
    uint64_t v10 = (void (**)(char *, uint64_t))(v6 + 8);
    swift_bridgeObjectRetain();
    uint64_t v11 = v9 - 1;
    uint64_t v16 = a3;
    uint64_t v12 = a3 + 40;
    do
    {
      uint64_t v13 = v11;
      uint64_t v14 = *(void *)(v12 - 8);
      uint64_t v20 = v14;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFF17D10(v18, v19, (uint64_t)v8);
      if (v4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release_n();
        return;
      }
      swift_release();
      if ((sub_1C15191DC() & 1) == 0)
      {
        uint64_t v20 = v14;
        swift_retain();
        FormatExpression.bind(binder:context:)(v18, v19);
        swift_release();
      }
      char v15 = sub_1C15191CC();
      swift_bridgeObjectRelease();
      swift_release();
      (*v10)(v8, v17);
      if (v15) {
        break;
      }
      uint64_t v11 = v13 - 1;
      v12 += 16;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
}

id sub_1BFF62760(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a3;
  uint64_t v11 = *v4;
  uint64_t v12 = v4[1];
  id v13 = sub_1BFF6B938(v11, v12, a1, a2, a3, a4);
  if (!v5)
  {
    uint64_t v6 = v13;
    uint64_t v15 = *(void *)(v12 + 16);
    if (v15)
    {
      uint64_t v38 = a4;
      double v42 = a1;
      uint64_t v40 = OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory;
      swift_bridgeObjectRetain();
      uint64_t v37 = v12;
      uint64_t v16 = (uint64_t *)(v12 + 64);
      id v39 = v6;
      uint64_t v41 = v8;
      do
      {
        uint64_t v43 = v15;
        uint64_t v17 = *v16;
        swift_retain();
        uint64_t v45 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_retain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        sub_1C151E80C();
        if (v8)
        {
          swift_retain_n();
          swift_retain();
          uint64_t v18 = sub_1BFF636C0(v8, v42);
          sub_1BFF6492C(v18, v8, (objc_class *)v42, 18, v44);
          type metadata accessor for FormatAttributedString();
          swift_allocObject();
          swift_bridgeObjectRetain();
          sub_1BFF6364C((uint64_t)v44);
          sub_1BFF63168(31611, 0xE200000000000000, (uint64_t)v44);
          sub_1BFF630AC((uint64_t)v44);
          sub_1BFF2BB80((uint64_t)v42);
          uint64_t v20 = v19;
          swift_release();
          sub_1BFF630AC((uint64_t)v44);
          swift_bridgeObjectRelease();
          id v21 = objc_msgSend(v20, sel_string);
          sub_1C151E62C();
          swift_release();
        }
        id v22 = objc_msgSend(v6, sel_mutableString, v37);
        uint64_t v23 = (void *)sub_1C151E5EC();
        swift_bridgeObjectRelease();
        id v24 = objc_msgSend(v22, sel_rangeOfString_, v23);
        uint64_t v26 = v25;

        if (v24 != (id)sub_1C15151CC())
        {
          uint64_t v27 = swift_bridgeObjectRetain();
          uint64_t v28 = sub_1BFF1B2E4(v27, 0);
          swift_bridgeObjectRelease();
          uint64_t v29 = (uint64_t *)(*(uint64_t *)((char *)v42 + v40) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
          swift_beginAccess();
          uint64_t v30 = *v29;
          uint64_t v31 = v29[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v32 = swift_retain();
          uint64_t v33 = sub_1BFF6B3AC(v32, v28, v30, v31);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v34 = v33;
          if (!v33)
          {
            uint64_t v34 = v41;
            swift_retain();
          }
          swift_retain();
          swift_retain();
          double v35 = (void *)sub_1BFF4DC90(v28, a2, v34, v38);
          swift_release();
          swift_release();
          objc_msgSend(v39, sel_replaceCharactersInRange_withAttributedString_, v24, v26, v35);
          swift_release();
          uint64_t v6 = v39;
          swift_release();

          uint64_t v8 = v41;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        v16 += 5;
        uint64_t v15 = v43 - 1;
      }
      while (v43 != 1);
      swift_bridgeObjectRelease();
    }
    if (v8)
    {
      swift_retain();
      id v36 = _s8NewsFeed19FormatTextNodeStyleC18reapplyLineSpacing010attributedD07contextSo18NSAttributedStringCAH_AA0cE7ContextCtF_0(v6);

      swift_release();
      return v36;
    }
  }
  return v6;
}

id sub_1BFF62D50(id a1, unint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (sub_1C151E89C())
  {
    uint64_t v9 = sub_1C14FBD70((uint64_t)a1, a2);
    if (!v4)
    {
      uint64_t v10 = (uint64_t)v9;
      type metadata accessor for FormatAttributedStringAnnotator();
      swift_allocObject();
      uint64_t v11 = sub_1C1499BB8(v10);
      uint64_t v13 = v12;
      swift_release();
      swift_release();
      if (a3) {
        uint64_t v14 = a3;
      }
      else {
        uint64_t v14 = sub_1C109CE58();
      }
      swift_retain();
      swift_retain();
      uint64_t v19 = swift_retain();
      uint64_t v20 = sub_1BFF636C0(v19, a4);
      sub_1BFF6492C(v20, v14, (objc_class *)a4, 18, v24);
      type metadata accessor for FormatAttributedString();
      swift_allocObject();
      swift_bridgeObjectRetain();
      sub_1BFF6364C((uint64_t)v24);
      sub_1C0E84D78(v11, v13, v24);
      sub_1BFF2BB80((uint64_t)a4);
      a1 = v22;
      swift_release();
      sub_1BFF630AC((uint64_t)v24);
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else if (a3)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v15 = sub_1BFF636C0(a3, a4);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1BFF6492C(v15, a3, (objc_class *)a4, 18, v23);
      type metadata accessor for FormatAttributedString();
      swift_allocObject();
      swift_bridgeObjectRetain();
      sub_1BFF6364C((uint64_t)v23);
      sub_1BFF63168((uint64_t)a1, a2, (uint64_t)v23);
      sub_1BFF630AC((uint64_t)v23);
      sub_1BFF2BB80((uint64_t)a4);
      a1 = v21;
      swift_release();
      sub_1BFF630AC((uint64_t)v23);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v16 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_1C151E5EC();
    swift_bridgeObjectRelease();
    a1 = objc_msgSend(v16, sel_initWithString_, v17);
  }
  return a1;
}

uint64_t sub_1BFF630AC(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 40);
  uint64_t v6 = *(void **)(a1 + 64);
  swift_release();
  swift_release();

  return a1;
}

uint64_t type metadata accessor for FormatAttributedString()
{
  uint64_t result = qword_1EB88A6F0;
  if (!qword_1EB88A6F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFF63168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = a2;
  uint64_t v57 = a1;
  uint64_t v5 = sub_1C1515A1C();
  uint64_t v52 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C1515BDC();
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  long long v49 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C1515B3C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v42 - v14;
  *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_styles) = MEMORY[0x1E4FBC868];
  id v16 = (_OWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_baseStyle);
  long long v17 = *(_OWORD *)(a3 + 80);
  v16[4] = *(_OWORD *)(a3 + 64);
  v16[5] = v17;
  v16[6] = *(_OWORD *)(a3 + 96);
  *(_OWORD *)((char *)v16 + 105) = *(_OWORD *)(a3 + 105);
  long long v18 = *(_OWORD *)(a3 + 16);
  *id v16 = *(_OWORD *)a3;
  v16[1] = v18;
  long long v19 = *(_OWORD *)(a3 + 48);
  _OWORD v16[2] = *(_OWORD *)(a3 + 32);
  v16[3] = v19;
  uint64_t v20 = v3;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_buildType) = 0;
  uint64_t v21 = *(void *)(*(void *)(a3 + 104) + 288);
  uint64_t v53 = v5;
  uint64_t v51 = v7;
  uint64_t v47 = v12;
  uint64_t v48 = v22;
  if (v21)
  {
    uint64_t v45 = (char *)&v42 - v14;
    uint64_t v23 = *(void *)(v21 + 16);
    if (v23)
    {
      uint64_t v43 = v10;
      uint64_t v44 = v3;
      sub_1BFF6364C(a3);
      uint64_t v24 = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = 0;
      uint64_t v26 = v57;
      do
      {
        int v30 = *(unsigned __int8 *)(v21 + v25 + 32);
        if (*(unsigned char *)(v21 + v25 + 32))
        {
          uint64_t v55 = v26;
          uint64_t v56 = v24;
          if (v30 == 1)
          {
            sub_1BFF27ECC();
            uint64_t v27 = sub_1C151FE7C();
          }
          else
          {
            sub_1BFF27ECC();
            uint64_t v27 = sub_1C151FEAC();
          }
        }
        else
        {
          uint64_t v55 = v26;
          uint64_t v56 = v24;
          sub_1BFF27ECC();
          uint64_t v27 = sub_1C151FE8C();
        }
        uint64_t v26 = v27;
        uint64_t v29 = v28;
        swift_bridgeObjectRelease();
        uint64_t v24 = v29;
        ++v25;
      }
      while (v23 != v25);
      swift_bridgeObjectRelease();
      BOOL v31 = v26 == v57 && v29 == v54;
      uint64_t v10 = v43;
      uint64_t v20 = v44;
      if (v31)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = v45;
        uint64_t v33 = v46;
      }
      else
      {
        char v32 = sub_1C1520A9C();
        uint64_t v15 = v45;
        uint64_t v33 = v46;
        if (v32)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v57 = v26;
        }
      }
    }
    else
    {
      sub_1BFF6364C(a3);
      uint64_t v15 = v45;
      uint64_t v33 = v46;
    }
  }
  else
  {
    sub_1BFF6364C(a3);
    uint64_t v33 = v46;
  }
  uint64_t v34 = (uint64_t)v49;
  sub_1C1515BCC();
  sub_1C1515B4C();
  double v35 = v15;
  uint64_t v36 = v48;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v20 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString, v35, v48);
  uint64_t v37 = v20 + OBJC_IVAR____TtC8NewsFeed22FormatAttributedString_attributedString;
  swift_beginAccess();
  uint64_t v38 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v47, v37, v36);
  sub_1BFF669D0(v38, v34);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v38, v36);
  uint64_t v40 = v52;
  uint64_t v39 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v33, *MEMORY[0x1E4F272C8], v53);
  swift_beginAccess();
  sub_1C15159DC();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v39);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v34, v51);
  return v20;
}

uint64_t sub_1BFF6364C(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a1 + 40);
  id v6 = *(id *)(a1 + 64);
  swift_retain();
  swift_retain();
  id v7 = v2;
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  return a1;
}

uint64_t *sub_1BFF636C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = sub_1C151794C();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C15176BC();
  uint64_t v9 = *(void *)(a1 + 56);
  if ((~v9 & 0xF000000000000007) == 0)
  {
    a2 = (uint64_t *)objc_msgSend(self, sel_systemFontOfSize_, 16.0);
    sub_1C151793C();
    if (byte_1EA2B53C0 == 1)
    {
      double v11 = v10;
      objc_msgSend(a2, sel_pointSize);
      double v13 = round(v11 * (v12 * 4.0) * 0.25);
      if (byte_1EA2B53C0) {
        double v12 = v13;
      }
      uint64_t v14 = (uint64_t *)objc_msgSend(a2, sel_fontWithSize_, v12);

      a2 = v14;
    }
LABEL_13:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return a2;
  }
  v22[1] = v9;
  swift_retain();
  uint64_t v15 = sub_1BFF63944((uint64_t)a2);
  if (!v2)
  {
    a2 = v15;
    sub_1C151793C();
    if (byte_1EA2B53C0 == 1)
    {
      double v17 = v16;
      objc_msgSend(a2, sel_pointSize);
      double v19 = round(v17 * (v18 * 4.0) * 0.25);
      if (byte_1EA2B53C0) {
        double v18 = v19;
      }
      uint64_t v20 = (uint64_t *)objc_msgSend(a2, sel_fontWithSize_, v18);

      sub_1BFEF68C0(v9);
      a2 = v20;
    }
    else
    {
      sub_1BFEF68C0(v9);
    }
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BFEF68C0(v9);
  return a2;
}

uint64_t *sub_1BFF63944(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  switch((unint64_t)*v1 >> 61)
  {
    case 1uLL:
      __int16 v23 = *(_WORD *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      uint64_t v14 = (void *)sub_1C151769C();
      if ((v23 & 0xFF00) == 0xC00)
      {
        sub_1BFF63CD0();
        uint64_t v15 = sub_1C151F89C();
        goto LABEL_10;
      }
      sub_1BFF63CD0();
      LOBYTE(v26[0]) = HIBYTE(v23);
      id v24 = sub_1BFF68690();
      uint64_t v1 = (uint64_t *)sub_1C151F85C();

      break;
    case 2uLL:
      uint64_t v16 = swift_projectBox();
      sub_1C003E258(v16, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      double v17 = (void *)sub_1C151769C();
      uint64_t v1 = (uint64_t *)sub_1C02A4A28();

      sub_1C003E100((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      break;
    case 3uLL:
      sub_1C021CDF8(a1, *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10), *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x18), *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x20), *(unsigned char *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x28), v26);
      if (!v2)
      {
        uint64_t v33 = v26[0];
        uint64_t v1 = (uint64_t *)sub_1BFF63944(a1);
        swift_release();
      }
      break;
    case 4uLL:
      uint64_t v18 = v7 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v19 = *(void *)(v18 + 16);
      uint64_t v20 = *(void *)(v18 + 24);
      uint64_t v21 = *(void *)(v18 + 32);
      char v22 = *(unsigned char *)(v18 + 40);
      v26[0] = *(void *)(v18 + 48);
      sub_1BFF67F78(v19, v20, v21, v22);
      swift_retain_n();
      uint64_t v1 = (uint64_t *)sub_1BFF63944(a1);
      sub_1BFF05CCC(v19, v20, v21, v22);
      swift_release_n();
      break;
    default:
      uint64_t v8 = *(void *)(v7 + 24);
      __int16 v9 = *(_WORD *)(v7 + 32);
      char v10 = *(unsigned char *)(v7 + 34);
      uint64_t v11 = *(void *)(v7 + 40);
      __int16 v12 = *(_WORD *)(v7 + 80);
      v26[0] = *(void *)(v7 + 16);
      v26[1] = v8;
      __int16 v27 = v9;
      char v28 = v10;
      uint64_t v29 = v11;
      long long v13 = *(_OWORD *)(v7 + 64);
      long long v30 = *(_OWORD *)(v7 + 48);
      long long v31 = v13;
      __int16 v32 = v12;
      uint64_t v14 = (void *)sub_1C151769C();
      uint64_t v15 = (uint64_t)sub_1C0EC88BC(v14);
LABEL_10:
      uint64_t v1 = (uint64_t *)v15;

      break;
  }
  return v1;
}

uint64_t sub_1BFF63C74(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_1BFF63CD0()
{
  unint64_t result = qword_1EB87A2B0;
  if (!qword_1EB87A2B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A2B0);
  }
  return result;
}

uint64_t sub_1BFF63D10(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFF63D3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFF63D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFF6530C(v2, (uint64_t)v62);
  switch(sub_1C0444FE8((uint64_t)v62))
  {
    case 1u:
      char v10 = (void *)sub_1C0445038((uint64_t)v62);
      uint64_t v11 = v10[1];
      uint64_t v12 = v10[2];
      uint64_t v13 = v10[3];
      uint64_t v14 = v10[4];
      uint64_t v15 = v10[5];
      uint64_t v17 = v10[6];
      uint64_t v16 = v10[7];
      uint64_t v46 = a1;
      MEMORY[0x1F4188790](v10);
      uint64_t v37 = &v46;
      uint64_t result = sub_1C0182454((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BFF9F260, (uint64_t)v36, v18);
      if (!v3)
      {
        uint64_t v19 = result;
        swift_bridgeObjectRetain();
        if (v17)
        {
          sub_1C129A7C0(v17, v16, v45);
          uint64_t v35 = v45[0];
          uint64_t v16 = v45[1];
        }
        else
        {
          uint64_t v35 = 0;
        }
        uint64_t v46 = v19;
        uint64_t v47 = v11;
        uint64_t v48 = v12;
        uint64_t v49 = v13;
        uint64_t v50 = v14;
        uint64_t v51 = v15;
        uint64_t v52 = v35;
        uint64_t v53 = v16;
        sub_1C0884750((uint64_t)&v46);
        goto LABEL_14;
      }
      break;
    case 2u:
      uint64_t v43 = a2;
      uint64_t v20 = sub_1C0445038((uint64_t)v62);
      uint64_t v21 = *(void *)v20;
      uint64_t v22 = *(void *)(v20 + 8);
      uint64_t v23 = *(void *)(v20 + 16);
      uint64_t v24 = *(void *)(v20 + 24);
      uint64_t v25 = *(void *)(v20 + 32);
      uint64_t v26 = *(void *)(v20 + 40);
      char v27 = *(unsigned char *)(v20 + 48);
      uint64_t v28 = *(void *)(v20 + 56);
      uint64_t v29 = *(void *)(v20 + 64);
      uint64_t v41 = *(void *)(v20 + 72);
      uint64_t v42 = v23;
      uint64_t v30 = *(void *)(v20 + 80);
      uint64_t v39 = *(void *)(v20 + 88);
      uint64_t v40 = v30;
      uint64_t v38 = *(void *)(v20 + 96);
      char v31 = *(unsigned char *)(v20 + 104);
      v45[0] = a1;
      uint64_t v32 = *(void *)(v20 + 120);
      MEMORY[0x1F4188790](v20);
      uint64_t v37 = v45;
      uint64_t result = sub_1C0182454((void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))sub_1BFF9F260, (uint64_t)v36, v33);
      if (!v3)
      {
        LOBYTE(v44) = v27 & 1;
        v62[176] = v31 & 1;
        uint64_t v46 = v21;
        uint64_t v47 = v22;
        uint64_t v48 = v42;
        uint64_t v49 = v24;
        uint64_t v50 = v25;
        uint64_t v51 = v26;
        LOBYTE(v52) = v27 & 1;
        uint64_t v53 = v28;
        uint64_t v54 = v29;
        uint64_t v55 = v41;
        uint64_t v56 = v40;
        uint64_t v57 = v39;
        uint64_t v58 = v38;
        char v59 = v31 & 1;
        uint64_t v60 = result;
        uint64_t v61 = v32;
        sub_1C088473C((uint64_t)&v46);
        sub_1BFF6530C((uint64_t)&v46, v43);
        uint64_t result = swift_bridgeObjectRetain();
      }
      break;
    case 3u:
      uint64_t v34 = (unint64_t *)sub_1C0445038((uint64_t)v62);
      uint64_t result = sub_1C002BB30(a1, *v34, v45);
      if (!v3)
      {
        uint64_t v46 = v45[0];
        sub_1C0884728((uint64_t)&v46);
        goto LABEL_14;
      }
      break;
    default:
      uint64_t v6 = (unint64_t *)sub_1C0445038((uint64_t)v62);
      unint64_t v7 = v6[1];
      uint64_t result = sub_1BFF64090(a1, *v6, v45);
      if (!v3)
      {
        uint64_t v9 = v45[0];
        sub_1BFF64090(a1, v7, &v44);
        uint64_t v46 = v9;
        uint64_t v47 = v44;
        sub_1C0884764((uint64_t)&v46);
LABEL_14:
        uint64_t result = sub_1BFF6530C((uint64_t)&v46, a2);
      }
      break;
  }
  return result;
}

uint64_t sub_1BFF64090@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BFF64114(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1BFF64090, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFF67FC4, (void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1BFF67D44, (void (*)(uint64_t *__return_ptr, unint64_t *, uint64_t *))sub_1BFF67D44, sub_1BFF663B0, a3);
}

uint64_t sub_1BFF64114@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t)@<X2>, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, void (*a5)(uint64_t *__return_ptr, unint64_t *, uint64_t *)@<X5>, void (*a6)(uint64_t *__return_ptr, unint64_t *, uint64_t *)@<X6>, uint64_t (*a7)(id, uint64_t, unint64_t)@<X7>, uint64_t *a8@<X8>)
{
  uint64_t v10 = v8;
  switch(a2 >> 60)
  {
    case 3uLL:
      uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v14 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v16 = swift_allocObject();
      a3(&v96, a1, v15);
      if (v8)
      {
        uint64_t result = swift_deallocUninitializedObject();
      }
      else
      {
        uint64_t result = (uint64_t)((uint64_t (*)(uint64_t *__return_ptr, uint64_t, uint64_t))a3)(&v95, a1, v14);
        uint64_t v31 = v95;
        *(void *)(v16 + 16) = v96;
        *(void *)(v16 + 24) = v31;
        *a8 = v16 | 0x3000000000000000;
      }
      break;
    case 4uLL:
      uint64_t v94 = (unint64_t *)a8;
      uint64_t v20 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_bridgeObjectRetain();
      a3(&v95, a1, v20);
      if (v10)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_release_n();
      }
      else
      {
        swift_release();
        a3(&v96, a1, v95);
        uint64_t v34 = swift_release();
        uint64_t v35 = v96;
        uint64_t v96 = a1;
        MEMORY[0x1F4188790](v34);
        char v86 = &v96;
        uint64_t v36 = sub_1C0181D3C(a5, (uint64_t)v85, v21);
        uint64_t v92 = v35;
        uint64_t v96 = a1;
        MEMORY[0x1F4188790](v36);
        char v86 = &v96;
        uint64_t v93 = sub_1C0181D3C(a6, (uint64_t)v85, v36);
        uint64_t v37 = swift_bridgeObjectRelease();
        uint64_t v38 = v92;
        uint64_t v96 = v92;
        Class v39 = FormatColor.color.getter(v37);
        uint64_t v40 = self;
        id v41 = objc_msgSend(v40, sel_traitCollectionWithUserInterfaceStyle_, 1);
        id v91 = [(objc_class *)v39 resolvedColorWithTraitCollection:v41];

        uint64_t v96 = v38;
        Class v43 = FormatColor.color.getter(v42);
        id v89 = v40;
        id v44 = objc_msgSend(v40, sel_traitCollectionWithUserInterfaceStyle_, 2);
        id v90 = [(objc_class *)v43 resolvedColorWithTraitCollection:v44];

        uint64_t v45 = v93;
        uint64_t v46 = *(void *)(v93 + 16);
        if (v46)
        {
          id v88 = (id)v21;
          id v47 = v91;
          swift_bridgeObjectRetain();
          uint64_t v48 = 0;
          do
          {
            uint64_t v49 = v46;
            uint64_t v50 = v47;
            unint64_t v51 = *(void *)(v45 + 8 * v48++ + 32);
            sub_1BFF65DE8(v51);
            id v47 = (id)a7(v47, a1, v51);
            unint64_t v52 = v51;
            uint64_t v45 = v93;
            sub_1BFF65E20(v52);

            uint64_t v46 = v49;
          }
          while (v49 != v48);
          swift_bridgeObjectRelease();
        }
        else
        {
          id v47 = v91;
        }
        id v53 = objc_msgSend(v89, sel_traitCollectionWithUserInterfaceStyle_, 1);
        id v88 = objc_msgSend(v47, sel_resolvedColorWithTraitCollection_, v53);

        uint64_t v54 = *(void *)(v45 + 16);
        if (v54)
        {
          uint64_t v87 = v20 & 0xFFFFFFFFFFFFFFFLL;
          swift_bridgeObjectRetain();
          id v55 = v90;
          uint64_t v56 = 0;
          do
          {
            uint64_t v57 = v54;
            uint64_t v58 = v55;
            unint64_t v59 = *(void *)(v45 + 8 * v56++ + 32);
            sub_1BFF65DE8(v59);
            id v55 = (id)a7(v55, a1, v59);
            unint64_t v60 = v59;
            uint64_t v45 = v93;
            sub_1BFF65E20(v60);

            uint64_t v54 = v57;
          }
          while (v57 != v56);
          swift_bridgeObjectRelease();
        }
        else
        {
          id v55 = v90;
        }
        id v61 = objc_msgSend(v89, sel_traitCollectionWithUserInterfaceStyle_, 2);
        id v62 = objc_msgSend(v55, sel_resolvedColorWithTraitCollection_, v61);

        uint64_t v63 = v88;
        sub_1C151F9DC();
        double v65 = v64;
        double v67 = v66;
        double v69 = v68;
        uint64_t v71 = v70;
        uint64_t v72 = swift_allocObject();
        *(double *)(v72 + 16) = v65 * 255.0;
        *(double *)(v72 + 24) = v67 * 255.0;
        *(double *)(v72 + 32) = v69 * 255.0;
        *(void *)(v72 + 40) = v71;
        *(unsigned char *)(v72 + 48) = 0;
        uint64_t v73 = v72 | 0x6000000000000000;
        sub_1C151F9DC();
        double v75 = v74;
        double v77 = v76;
        double v79 = v78;
        uint64_t v81 = v80;
        uint64_t v82 = swift_allocObject();
        *(double *)(v82 + 16) = v75 * 255.0;
        *(double *)(v82 + 24) = v77 * 255.0;
        *(double *)(v82 + 32) = v79 * 255.0;
        *(void *)(v82 + 40) = v81;
        *(unsigned char *)(v82 + 48) = 0;
        swift_bridgeObjectRelease();
        swift_release();

        uint64_t v83 = swift_allocObject();
        *(void *)(v83 + 16) = v73;
        *(void *)(v83 + 24) = v82 | 0x6000000000000000;
        uint64_t v84 = v83 | 0x3000000000000000;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v92;
        *(void *)(result + 24) = v45;
        *(void *)(result + 32) = v84;
        *uint64_t v94 = result | 0xA000000000000000;
      }
      break;
    case 7uLL:
      uint64_t v23 = (unint64_t *)a8;
      uint64_t v25 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v26 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v27 = *(unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      sub_1BFF67F78(v25, v24, v26, v27);
      a4(&v95, a1, v25, v24, v26, v27);
      if (!v8)
      {
        a3(&v96, a1, v95);
        swift_release();
        uint64_t v32 = v96;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v25;
        *(void *)(result + 24) = v24;
        *(void *)(result + 32) = v26;
        *(unsigned char *)(result + 40) = v27;
        *(void *)(result + 48) = v32;
        unint64_t v33 = 0x9000000000000000;
        goto LABEL_15;
      }
      uint64_t result = sub_1BFF05CCC(v25, v24, v26, v27);
      break;
    case 8uLL:
      uint64_t v23 = (unint64_t *)a8;
      uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v28 = *(void *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1C0023B88(v29, v28, &v95);
      a3(&v96, a1, v95);
      if (v8)
      {
        swift_bridgeObjectRelease_n();
        swift_release_n();
        uint64_t result = swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t v30 = v96;
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = v29;
        *(void *)(result + 24) = v28;
        *(void *)(result + 32) = v30;
        unint64_t v33 = 0xB000000000000000;
LABEL_15:
        *uint64_t v23 = result | v33;
      }
      break;
    default:
      *a8 = a2;
      uint64_t result = swift_retain();
      break;
  }
  return result;
}

void sub_1BFF6492C(void *a1@<X0>, uint64_t a2@<X1>, objc_class *a3@<X2>, char a4@<W3>, _OWORD *a5@<X8>)
{
  uint64_t v11 = a2 + 64;
  sub_1BFF66964(a2 + 64, (uint64_t)v66, (unint64_t *)&qword_1EB873B18);
  id v12 = a1;
  sub_1BFF64FBC(v66, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
  Class v13 = sub_1BFF65084(v66, a3);
  if (v5)
  {

    swift_release();
    sub_1BFF64FBC(v66, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);

    swift_release();
    return;
  }
  Class v14 = v13;
  char v53 = a4;
  sub_1BFF64FBC(v66, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
  sub_1BFF66964(v11, (uint64_t)v64, (unint64_t *)&qword_1EB873B18);
  sub_1BFF66964((uint64_t)v64, (uint64_t)v65, (unint64_t *)&qword_1EB873B18);
  if (sub_1C044587C((uint64_t)v65) == 1)
  {
    Class v55 = v14;
    uint64_t v15 = v14;
    Class v16 = 0;
  }
  else
  {
    sub_1BFF6530C((uint64_t)v65, (uint64_t)&v56);
    int v23 = sub_1C0444FE8((uint64_t)&v56);
    uint64_t v24 = sub_1C0445038((uint64_t)&v56);
    if (v23)
    {
      uint64_t v26 = self;
      Class v55 = v14;
      uint64_t v27 = v14;
      uint64_t v28 = (objc_class *)objc_msgSend(v26, sel_clearColor);
      uint64_t v17 = *(void *)(a2 + 536);
      unint64_t v18 = *(void *)(a2 + 544);
      Class v54 = v28;
      uint64_t v29 = v28;
      if (v17 == 9) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
    unint64_t v25 = *(void *)(v24 + 8);
    v14;
    sub_1BFF64FBC(v64, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
    swift_retain();
    sub_1BFF64090((uint64_t)a3, v25, &v63);
    Class v55 = v14;
    uint64_t v39 = swift_release();
    Class v40 = FormatColor.color.getter(v39);
    swift_release();
    sub_1BFF64FBC(v64, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
    Class v16 = v40;
  }
  uint64_t v17 = *(void *)(a2 + 536);
  unint64_t v18 = *(void *)(a2 + 544);
  Class v54 = v16;
  uint64_t v19 = v16;
  if (v17 == 9)
  {
LABEL_6:
    unint64_t v51 = a5;
    uint64_t v20 = 0;
    char v21 = 1;
    goto LABEL_7;
  }
LABEL_14:
  unint64_t v51 = a5;
  char v21 = 0;
  uint64_t v20 = 2;
LABEL_7:
  Class v22 = 0;
  if (v17 == 9 || (v18 & 0xF000000000000007) == 0xF000000000000007)
  {
    uint64_t v49 = v20;
    char v50 = v21;
  }
  else
  {
    sub_1BFDC11A4(v18);
    sub_1BFF64090((uint64_t)a3, v18, (uint64_t *)&v56);
    uint64_t v49 = v20;
    char v50 = v21;
    uint64_t v30 = sub_1BFEF8750(v17, v18);
    uint64_t v63 = v56;
    Class v22 = FormatColor.color.getter(v30);
    swift_release();
  }
  uint64_t v31 = *(void *)(a2 + 520);
  BOOL v32 = v31 == 9 || v31 == 8;
  char v33 = v32;
  char v48 = v33;
  if (v32) {
    uint64_t v47 = 0;
  }
  else {
    uint64_t v47 = qword_1C1554D40[(char)v31];
  }
  unint64_t v34 = *(void *)(a2 + 528);
  unint64_t v52 = v22;
  Class v35 = 0;
  if (v31 != 9 && (v34 & 0xF000000000000007) != 0xF000000000000007)
  {
    sub_1BFEF8720(v31, v34);
    sub_1BFF64090((uint64_t)a3, v34, (uint64_t *)&v56);
    uint64_t v36 = sub_1BFEF8750(v31, v34);
    uint64_t v63 = v56;
    Class v35 = FormatColor.color.getter(v36);
    swift_release();
  }
  uint64_t v37 = *(void *)(a2 + 560);
  uint64_t v38 = v35;
  if (v37)
  {
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    double v41 = sub_1BFF493E4(v56, v37);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    double v41 = 0.0;
  }
  uint64_t v42 = *(void *)(a2 + 496);
  char v43 = *(unsigned char *)(a2 + 504);
  *(void *)&long long v56 = v12;
  *((void *)&v56 + 1) = v55;
  *(void *)&long long v57 = v54;
  *((void *)&v57 + 1) = v49;
  LOBYTE(v58) = v50;
  *((void *)&v58 + 1) = v22;
  *(void *)&long long v59 = v47;
  BYTE8(v59) = v48;
  *(void *)&long long v60 = v35;
  *((void *)&v60 + 1) = v42;
  LOBYTE(v61) = v43;
  *((double *)&v61 + 1) = v41;
  v62[0] = v37 == 0;
  *(void *)&v62[8] = a2;
  *(void *)&v62[16] = a3;
  v62[24] = v53;
  sub_1BFF6364C((uint64_t)&v56);

  sub_1BFF630AC((uint64_t)&v56);
  long long v44 = v61;
  v51[4] = v60;
  v51[5] = v44;
  v51[6] = *(_OWORD *)v62;
  *(_OWORD *)((char *)v51 + 105) = *(_OWORD *)&v62[9];
  long long v45 = v57;
  _OWORD *v51 = v56;
  v51[1] = v45;
  long long v46 = v59;
  v51[2] = v58;
  _OWORD v51[3] = v46;
}

void *sub_1BFF64FBC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

void *sub_1BFF65020(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

Class sub_1BFF65084(void *a1, objc_class *a2)
{
  return sub_1BFF6509C(a1, a2);
}

Class sub_1BFF6509C(void *a1, Class a2)
{
  sub_1BFF65D2C((uint64_t)a1, (uint64_t)v14);
  sub_1BFF65D2C((uint64_t)v14, (uint64_t)v18);
  sub_1BFF65D2C((uint64_t)a1, (uint64_t)v15);
  if (sub_1C044587C((uint64_t)v15) == 1) {
    return 0;
  }
  sub_1BFF6530C((uint64_t)v15, (uint64_t)v16);
  sub_1BFF6530C((uint64_t)v16, (uint64_t)v17);
  int v5 = sub_1C0444FE8((uint64_t)v17);
  if ((v5 - 1) >= 2)
  {
    if (v5)
    {
      unint64_t v7 = *(void *)sub_1C0445038((uint64_t)v17);
      sub_1BFF65D2C((uint64_t)v18, (uint64_t)v13);
      sub_1BFF99AB4(v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF87A0);
      uint64_t v8 = sub_1C002BB30((uint64_t)a2, v7, &v12);
      if (v2)
      {
        sub_1BFF99AB4(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
      }
      else
      {
        uint64_t v10 = v12;
        a2 = FormatColor.color.getter(v8);
        sub_1BFF99AB4(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
        sub_1BFF7C0EC(v10);
      }
    }
    else
    {
      unint64_t v6 = *(void *)sub_1C0445038((uint64_t)v17);
      unint64_t v19 = v6;
      sub_1BFF99AB4(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
      sub_1BFF65CFC((uint64_t)&v19);
      sub_1BFF64090((uint64_t)a2, v6, v13);
      if (v2)
      {
        sub_1BFF99AB4(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
        sub_1BFF65CCC((uint64_t)&v19);
      }
      else
      {
        uint64_t v9 = sub_1BFF65CCC((uint64_t)&v19);
        uint64_t v12 = v13[0];
        a2 = FormatColor.color.getter(v9);
        sub_1BFF99AB4(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
        swift_release();
      }
    }
  }
  else
  {
    sub_1C0445038((uint64_t)v17);
    return (Class)objc_msgSend(self, sel_blackColor);
  }
  return a2;
}

uint64_t sub_1BFF6530C(uint64_t a1, uint64_t a2)
{
  return a2;
}

Class FormatColor.color.getter(uint64_t a1)
{
  uint64_t v2 = *v1;
  switch((unint64_t)*v1 >> 60)
  {
    case 1uLL:
      uint64_t v9 = v2 & 0xFFFFFFFFFFFFFFFLL;
      double v10 = *(double *)(v9 + 24);
      char v11 = *(unsigned char *)(v9 + 32);
      LOBYTE(v35[0]) = *(unsigned char *)(v9 + 16);
      id v12 = FormatSystemColor.color.getter();
      id v13 = v12;
      if (v11) {
        goto LABEL_22;
      }
      double v14 = 1.0;
      if (v10 <= 1.0) {
        double v14 = v10;
      }
      if (v14 < 0.0) {
        double v14 = 0.0;
      }
      goto LABEL_18;
    case 2uLL:
      uint64_t v15 = v2 & 0xFFFFFFFFFFFFFFFLL;
      double v16 = *(double *)(v15 + 24);
      char v17 = *(unsigned char *)(v15 + 32);
      LOBYTE(v35[0]) = *(unsigned char *)(v15 + 16);
      id v12 = FormatFixedColor.color.getter();
      id v13 = v12;
      if (v17) {
        goto LABEL_22;
      }
      double v14 = 1.0;
      if (v16 <= 1.0) {
        double v14 = v16;
      }
      if (v14 < 0.0) {
        double v14 = 0.0;
      }
LABEL_18:
      id v18 = objc_msgSend(v12, sel_colorWithAlphaComponent_, v14, v35[0]);

      return (Class)v18;
    case 3uLL:
      uint64_t v19 = v2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v20 = *(void *)(v19 + 16);
      uint64_t v21 = *(void *)(v19 + 24);
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v20;
      *(void *)(v22 + 24) = v21;
      id v23 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      v35[4] = sub_1BFDF2BE8;
      v35[5] = v22;
      v35[0] = MEMORY[0x1E4F143A8];
      v35[1] = 1107296256;
      _OWORD v35[2] = sub_1BFDF2404;
      v35[3] = &block_descriptor_86;
      uint64_t v24 = _Block_copy(v35);
      swift_retain_n();
      swift_retain();
      swift_retain();
      id v13 = objc_msgSend(v23, sel_initWithDynamicProvider_, v24);
      _Block_release(v24);
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_22;
    case 4uLL:
    case 7uLL:
    case 8uLL:
      id v3 = objc_msgSend(self, sel_clearColor);
      return (Class)v3;
    case 5uLL:
      uint64_t v25 = v2 & 0xFFFFFFFFFFFFFFFLL;
      double v26 = *(double *)(v25 + 16);
      if (*(unsigned char *)(v25 + 32)) {
        double v27 = 1.0;
      }
      else {
        double v27 = *(double *)(v25 + 24);
      }
      id v28 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v29 = sel_initWithWhite_alpha_;
      double v30 = v26;
      double v31 = v27;
      return (Class)objc_msgSend(v28, v29, v30, v31);
    case 6uLL:
      uint64_t v32 = v2 & 0xFFFFFFFFFFFFFFFLL;
      double v33 = *(double *)(v32 + 16) / 255.0;
      double v34 = *(double *)(v32 + 24) / 255.0;
      id v28 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      uint64_t v29 = sel_initWithRed_green_blue_alpha_;
      double v30 = v33;
      double v31 = v34;
      return (Class)objc_msgSend(v28, v29, v30, v31);
    case 9uLL:
      uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      goto LABEL_21;
    case 0xAuLL:
    case 0xBuLL:
      uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
LABEL_21:
      v35[0] = v5;
      id v13 = (id)FormatColor.color.getter(a1);
LABEL_22:
      Class result = (Class)v13;
      break;
    default:
      uint64_t v6 = *(void *)(v2 + 16);
      unint64_t v7 = *(void **)(v2 + 24);
      sub_1BFF6B690();
      swift_bridgeObjectRetain();
      v8._countAndFlagsBits = v6;
      v8._object = v7;
      Class result = UIColor.init(hex:)(v8).super.isa;
      break;
  }
  return result;
}

id FormatSystemColor.color.getter()
{
  switch(*v0)
  {
    case 1:
      id v1 = objc_msgSend(self, sel_blackColor);
      goto LABEL_41;
    case 2:
      id v1 = objc_msgSend(self, sel_clearColor);
      goto LABEL_41;
    case 3:
      id v1 = objc_msgSend(self, sel_systemRedColor);
      goto LABEL_41;
    case 4:
      id v1 = objc_msgSend(self, sel_systemGreenColor);
      goto LABEL_41;
    case 5:
      id v1 = objc_msgSend(self, sel_systemBlueColor);
      goto LABEL_41;
    case 6:
      id v1 = objc_msgSend(self, sel_systemOrangeColor);
      goto LABEL_41;
    case 7:
      id v1 = objc_msgSend(self, sel_systemYellowColor);
      goto LABEL_41;
    case 8:
      id v1 = objc_msgSend(self, sel_systemPinkColor);
      goto LABEL_41;
    case 9:
      id v1 = objc_msgSend(self, sel_systemPurpleColor);
      goto LABEL_41;
    case 0xA:
      id v1 = objc_msgSend(self, sel_systemMintColor);
      goto LABEL_41;
    case 0xB:
      id v1 = objc_msgSend(self, sel_systemTealColor);
      goto LABEL_41;
    case 0xC:
      id v1 = objc_msgSend(self, sel_systemCyanColor);
      goto LABEL_41;
    case 0xD:
      id v1 = objc_msgSend(self, sel_systemIndigoColor);
      goto LABEL_41;
    case 0xE:
      id v1 = objc_msgSend(self, sel_systemBrownColor);
      goto LABEL_41;
    case 0xF:
      id v1 = objc_msgSend(self, sel_systemGrayColor);
      goto LABEL_41;
    case 0x10:
      id v1 = objc_msgSend(self, sel_systemGray2Color);
      goto LABEL_41;
    case 0x11:
      id v1 = objc_msgSend(self, sel_systemGray3Color);
      goto LABEL_41;
    case 0x12:
      id v1 = objc_msgSend(self, sel_systemGray4Color);
      goto LABEL_41;
    case 0x13:
      id v1 = objc_msgSend(self, sel_systemGray5Color);
      goto LABEL_41;
    case 0x14:
      id v1 = objc_msgSend(self, sel_systemGray6Color);
      goto LABEL_41;
    case 0x15:
      id v1 = objc_msgSend(self, sel_labelColor);
      goto LABEL_41;
    case 0x16:
      id v1 = objc_msgSend(self, sel_secondaryLabelColor);
      goto LABEL_41;
    case 0x17:
      id v1 = objc_msgSend(self, sel_tertiaryLabelColor);
      goto LABEL_41;
    case 0x18:
      id v1 = objc_msgSend(self, sel_quaternaryLabelColor);
      goto LABEL_41;
    case 0x19:
      id v1 = objc_msgSend(self, sel_linkColor);
      goto LABEL_41;
    case 0x1A:
      id v1 = objc_msgSend(self, sel_placeholderTextColor);
      goto LABEL_41;
    case 0x1B:
      id v1 = objc_msgSend(self, sel_separatorColor);
      goto LABEL_41;
    case 0x1C:
      id v1 = objc_msgSend(self, sel_opaqueSeparatorColor);
      goto LABEL_41;
    case 0x1D:
      id v1 = objc_msgSend(self, sel_systemBackgroundColor);
      goto LABEL_41;
    case 0x1E:
      id v1 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
      goto LABEL_41;
    case 0x1F:
      id v1 = objc_msgSend(self, sel_tertiarySystemBackgroundColor);
      goto LABEL_41;
    case 0x20:
      id v1 = objc_msgSend(self, sel_systemGroupedBackgroundColor);
      goto LABEL_41;
    case 0x21:
      id v1 = objc_msgSend(self, sel_secondarySystemGroupedBackgroundColor);
      goto LABEL_41;
    case 0x22:
      id v1 = objc_msgSend(self, sel_tertiarySystemGroupedBackgroundColor);
      goto LABEL_41;
    case 0x23:
      id v1 = objc_msgSend(self, sel_systemFillColor);
      goto LABEL_41;
    case 0x24:
      id v1 = objc_msgSend(self, sel_secondarySystemFillColor);
      goto LABEL_41;
    case 0x25:
      id v1 = objc_msgSend(self, sel_tertiarySystemFillColor);
      goto LABEL_41;
    case 0x26:
      id v1 = objc_msgSend(self, sel_quaternarySystemFillColor);
      goto LABEL_41;
    case 0x27:
      if (qword_1EA1943F0 != -1) {
        swift_once();
      }
      id v3 = *(void **)(qword_1EA2B4F08 + 16);
      goto LABEL_50;
    case 0x28:
      if (qword_1EA1943F0 != -1) {
        swift_once();
      }
      id v3 = *(void **)(qword_1EA2B4F08 + 24);
LABEL_50:
      id result = v3;
      break;
    default:
      id v1 = objc_msgSend(self, sel_whiteColor);
LABEL_41:
      id result = v1;
      break;
  }
  return result;
}

uint64_t sub_1BFF65CCC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFF65CFC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFF65D2C(uint64_t a1, uint64_t a2)
{
  sub_1BFF65D90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BFF65D90()
{
  if (!qword_1EB873B18)
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB873B18);
    }
  }
}

unint64_t sub_1BFF65DE8(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      id result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFF65E20(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      id result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF65E58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF6602C(a1, a2, a3, *v3, (unint64_t *)&unk_1EB880ED0, (uint64_t)&type metadata for FormatColorProcessor);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1BFF65E88(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB87A818, (uint64_t)&type metadata for FormatStringListSelector, MEMORY[0x1E4FBBE00]);
    double v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    double v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v12 = v10 + 32;
  id v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFF6602C(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1BFF66364(0, a5, a6, MEMORY[0x1E4FBBE00]);
    id v12 = (char *)swift_allocObject();
    int64_t v13 = _swift_stdlib_malloc_size(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 - 25;
    }
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * (v14 >> 3);
  }
  else
  {
    id v12 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v15 = v12 + 32;
  double v16 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v15 >= &v16[8 * v10]) {
      memmove(v15, v16, 8 * v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[8 * v10] || v15 >= &v16[8 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFF661B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF661D8(a1, a2, a3, *v3);
  *id v3 = (char *)result;
  return result;
}

uint64_t sub_1BFF661D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1BFF66364(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFF663B0(void *a1, uint64_t a2, unint64_t a3)
{
  switch(a3 >> 61)
  {
    case 1uLL:
      char v9 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v10 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v11 = swift_allocObject();
      *(unsigned char *)(v11 + 16) = v9;
      *(void *)(v11 + 24) = v10;
      *(void *)(v11 + 32) = a1;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      Class v40 = (uint64_t (*)(uint64_t))sub_1C028292C;
      double v41 = (void *)v11;
      uint64_t v36 = MEMORY[0x1E4F143A8];
      uint64_t v37 = 1107296256;
      uint64_t v8 = &block_descriptor_257;
      goto LABEL_12;
    case 2uLL:
      uint64_t v14 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v15 = (void *)swift_allocObject();
      v15[2] = a1;
      v15[3] = v14;
      v15[4] = v13;
      v15[5] = a2;
      id v16 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      Class v40 = sub_1C0282458;
      double v41 = v15;
      uint64_t v36 = MEMORY[0x1E4F143A8];
      uint64_t v37 = 1107296256;
      uint64_t v38 = sub_1BFDF2404;
      uint64_t v39 = &block_descriptor_250;
      char v17 = _Block_copy(&v36);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      id v18 = a1;
      swift_retain();
      id v19 = objc_msgSend(v16, sel_initWithDynamicProvider_, v17);
      _Block_release(v17);
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3uLL:
      uint64_t v20 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v20;
      id v22 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      Class v40 = (uint64_t (*)(uint64_t))sub_1C0282920;
      double v41 = (void *)v21;
      uint64_t v36 = MEMORY[0x1E4F143A8];
      uint64_t v37 = 1107296256;
      uint64_t v38 = sub_1BFDF2404;
      uint64_t v39 = &block_descriptor_244;
      id v23 = _Block_copy(&v36);
      swift_retain_n();
      id v19 = objc_msgSend(v22, sel_initWithDynamicProvider_, v23);
      _Block_release(v23);
      goto LABEL_7;
    case 4uLL:
      uint64_t v25 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v24 = *(void *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v26 = *(unsigned char *)((a3 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = a1;
      *(void *)(v27 + 24) = v25;
      *(void *)(v27 + 32) = v24;
      *(unsigned char *)(v27 + 40) = v26;
      id v28 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      Class v40 = (uint64_t (*)(uint64_t))sub_1C0281938;
      double v41 = (void *)v27;
      uint64_t v36 = MEMORY[0x1E4F143A8];
      uint64_t v37 = 1107296256;
      uint64_t v38 = sub_1BFDF2404;
      uint64_t v39 = &block_descriptor_237;
      uint64_t v29 = _Block_copy(&v36);
      swift_retain_n();
      id v30 = a1;
      id v19 = objc_msgSend(v28, sel_initWithDynamicProvider_, v29);
      _Block_release(v29);
LABEL_7:
      swift_release();
      goto LABEL_13;
    case 5uLL:
      if (a3 == 0xA000000000000000)
      {
        uint64_t v32 = swift_allocObject();
        *(void *)(v32 + 16) = a1;
        id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
        Class v40 = (uint64_t (*)(uint64_t))sub_1C0282928;
        double v41 = (void *)v32;
        uint64_t v36 = MEMORY[0x1E4F143A8];
        uint64_t v37 = 1107296256;
        uint64_t v8 = &block_descriptor_278;
      }
      else
      {
        if (a3 != 0xA000000000000008) {
          return sub_1C151F9FC();
        }
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = a1;
        id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
        Class v40 = (uint64_t (*)(uint64_t))sub_1C0282924;
        double v41 = (void *)v31;
        uint64_t v36 = MEMORY[0x1E4F143A8];
        uint64_t v37 = 1107296256;
        uint64_t v8 = &block_descriptor_271;
      }
LABEL_12:
      uint64_t v38 = sub_1BFDF2404;
      uint64_t v39 = v8;
      double v33 = _Block_copy(&v36);
      id v34 = a1;
      id v19 = objc_msgSend(v7, sel_initWithDynamicProvider_, v33, v36, v37);
      _Block_release(v33);
LABEL_13:
      swift_release();
      return (uint64_t)v19;
    default:
      char v4 = *(unsigned char *)(a3 + 16);
      uint64_t v5 = *(void *)(a3 + 24);
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = a1;
      *(unsigned char *)(v6 + 24) = v4;
      *(void *)(v6 + 32) = v5;
      id v7 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
      Class v40 = (uint64_t (*)(uint64_t))sub_1C0282930;
      double v41 = (void *)v6;
      uint64_t v36 = MEMORY[0x1E4F143A8];
      uint64_t v37 = 1107296256;
      uint64_t v8 = &block_descriptor_264;
      goto LABEL_12;
  }
}

uint64_t sub_1BFF66964(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1BFC77FBC(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF669D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v44 = a2;
  uint64_t v37 = sub_1C1515A1C();
  uint64_t v36 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  Class v35 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF67628(0, &qword_1EB884CD8, MEMORY[0x1E4F27410]);
  MEMORY[0x1F4188790](v4 - 8);
  double v41 = (char *)&v33 - v5;
  uint64_t v43 = sub_1C1515BDC();
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  id v34 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  double v33 = (char *)&v33 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v33 - v10;
  sub_1C1515BCC();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v12 = *v2;
  uint64_t v39 = v2 + 15;
  v53[0] = v12;
  id v38 = v12;
  sub_1C151593C();
  sub_1BFF6767C(&qword_1EB884CB8, MEMORY[0x1E4FB0D88]);
  uint64_t v13 = (void (*)(unsigned __int8 *, void))sub_1C1515BAC();
  sub_1BFF678F0();
  sub_1BFF67A50();
  sub_1C1515D5C();
  v13(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BFF674B0((uint64_t)(v2 + 1), (uint64_t)&v55);
  sub_1BFF674B0((uint64_t)&v55, (uint64_t)v53);
  sub_1BFF6757C(&v55);
  uint64_t v14 = (void (*)(unsigned __int8 *, void))sub_1C1515BAC();
  sub_1BFF67B4C();
  sub_1C1515D5C();
  v14(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BFF674B0((uint64_t)(v2 + 2), (uint64_t)&v54);
  sub_1BFF674B0((uint64_t)&v54, (uint64_t)v53);
  sub_1BFF6757C(&v54);
  uint64_t v15 = (void (*)(unsigned __int8 *, void))sub_1C1515BAC();
  sub_1BFF67BA0();
  sub_1C1515D5C();
  v15(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BFF66964((uint64_t)(v2 + 9), (uint64_t)v53, &qword_1EB8713C0);
  sub_1BFF66964((uint64_t)v53, (uint64_t)v52, &qword_1EB8713C0);
  id v16 = (void (*)(unsigned __int8 *, void))sub_1C1515BAC();
  sub_1BFF679FC();
  sub_1C1515D5C();
  v16(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BFF675A8((uint64_t)(v2 + 3), (uint64_t)v52);
  sub_1BFF675A8((uint64_t)v52, (uint64_t)v50);
  char v17 = (void (*)(unsigned __int8 *, void))sub_1C1515BAC();
  sub_1BFF67BF4();
  sub_1C1515D5C();
  v17(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BFF674B0((uint64_t)(v2 + 5), (uint64_t)&v51);
  sub_1BFF674B0((uint64_t)&v51, (uint64_t)v50);
  sub_1BFF6757C(&v51);
  id v18 = (void (*)(unsigned __int8 *, void))sub_1C1515BAC();
  sub_1BFF67C48();
  sub_1C1515D5C();
  v18(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BFF675A8((uint64_t)(v2 + 6), (uint64_t)v50);
  sub_1BFF675A8((uint64_t)v50, (uint64_t)v48);
  id v19 = (void (*)(unsigned __int8 *, void))sub_1C1515BAC();
  sub_1BFF67AA4();
  sub_1C1515D5C();
  v19(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BFF674B0((uint64_t)(v2 + 8), (uint64_t)&v49);
  sub_1BFF674B0((uint64_t)&v49, (uint64_t)v48);
  sub_1BFF6757C(&v49);
  uint64_t v20 = (void (*)(unsigned __int8 *, void))sub_1C1515BAC();
  sub_1BFF67AF8();
  sub_1C1515D5C();
  v20(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BFF66964((uint64_t)(v2 + 11), (uint64_t)v48, &qword_1EB8713C0);
  sub_1BFF66964((uint64_t)v48, (uint64_t)v46, &qword_1EB8713C0);
  uint64_t v21 = (void (*)(unsigned __int8 *, void))sub_1C1515BAC();
  sub_1BFF67CF0();
  sub_1C1515D5C();
  v21(v47, 0);
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v45 = v40;
  v46[0] = sub_1BFF67754((void (*)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_1C00353A0);
  id v22 = (void (*)(unsigned __int8 *, void))sub_1C1515BAC();
  sub_1BFF67C9C();
  sub_1C1515D5C();
  v22(v47, 0);
  swift_release();
  sub_1BFF66964((uint64_t)v39, (uint64_t)v46, &qword_1EB88E360);
  sub_1BFF66964((uint64_t)v46, (uint64_t)v47, &qword_1EB88E360);
  if (v47[0] == 18)
  {
    uint64_t v23 = v42;
    uint64_t v24 = (uint64_t)v41;
    uint64_t v25 = v43;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v41, 1, 1, v43);
LABEL_4:
    sub_1BFF67984(v24);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v44, v11, v25);
  }
  uint64_t v24 = (uint64_t)v41;
  sub_1C0A0DC80(v38, v47[0]);
  uint64_t v23 = v42;
  uint64_t v25 = v43;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v24, 0, 1, v43);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1, v25) == 1) {
    goto LABEL_4;
  }
  uint64_t v27 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v33, v24, v25);
  id v28 = v34;
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v34, v11, v25);
  uint64_t v29 = v36;
  id v30 = v35;
  uint64_t v31 = v37;
  (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x1E4F272C8], v37);
  sub_1C1515BBC();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  uint64_t v32 = *(void (**)(char *, uint64_t))(v23 + 8);
  v32(v28, v25);
  v32(v27, v25);
  return ((uint64_t (*)(char *, uint64_t))v32)(v11, v25);
}

void sub_1BFF67464(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFF674B0(uint64_t a1, uint64_t a2)
{
  sub_1BFF67514();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BFF67514()
{
  if (!qword_1EB890270)
  {
    sub_1BFC39268(255, (unint64_t *)&qword_1EB87A2F0);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890270);
    }
  }
}

id *sub_1BFF6757C(id *a1)
{
  id v2 = *a1;
  return a1;
}

uint64_t sub_1BFF675A8(uint64_t a1, uint64_t a2)
{
  sub_1BFF67628(0, &qword_1EB890180, type metadata accessor for NSUnderlineStyle);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BFF67628(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1BFF6767C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF676C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF6770C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1BFF67754(void (*a1)(id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))
{
  id v2 = (void **)v1;
  sub_1BFF66964(*(void *)(v1 + 104) + 296, (uint64_t)v30, (unint64_t *)&qword_1EB876CA0);
  sub_1BFF66964((uint64_t)v30, (uint64_t)v31, (unint64_t *)&qword_1EB876CA0);
  if (sub_1C01CDAD8((uint64_t)v31) == 1) {
    return 0;
  }
  long long v27 = v31[6];
  long long v28 = v31[7];
  uint64_t v29 = v32;
  long long v23 = v31[2];
  long long v24 = v31[3];
  long long v25 = v31[4];
  long long v26 = v31[5];
  long long v21 = v31[0];
  long long v22 = v31[1];
  uint64_t v5 = FormatParagraphStyle.paragraphStyle.getter();
  id v4 = v5;
  if ((v34 & 1) == 0)
  {
    double v6 = v33;
    id v7 = v5;
    a1(v7, v8, v9, v10, v11, v12, v13, v14, v21, *((void *)&v21 + 1), v22, *((void *)&v22 + 1), v23, *((void *)&v23 + 1), v24, *((void *)&v24 + 1), v25, *((void *)&v25 + 1), v26,
      *((void *)&v26 + 1),
      v27,
      *((void *)&v27 + 1),
      v28,
      *((void *)&v28 + 1),
      v29);
    id v4 = v7;
    if (v15)
    {
      id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
      objc_msgSend(v4, sel_setParagraphStyle_, v7);

      id v16 = *v2;
      char v17 = (void *)sub_1C151E5EC();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_ts_tightenedLineSpacingForString_minimumLineSpacingMultiple_, v17, v6);
      double v19 = v18;

      objc_msgSend(v4, sel_setLineSpacing_, v19);
    }
  }
  return v4;
}

void sub_1BFF678F0()
{
  if (!qword_1EB884CE8)
  {
    sub_1C151593C();
    sub_1BFF6767C(&qword_1EB884CB8, MEMORY[0x1E4FB0D88]);
    unint64_t v0 = sub_1C1515D6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884CE8);
    }
  }
}

uint64_t sub_1BFF67984(uint64_t a1)
{
  sub_1BFF67628(0, &qword_1EB884CD8, MEMORY[0x1E4F27410]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BFF679FC()
{
  unint64_t result = qword_1EB884CB0;
  if (!qword_1EB884CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884CB0);
  }
  return result;
}

unint64_t sub_1BFF67A50()
{
  unint64_t result = qword_1EB884CA8;
  if (!qword_1EB884CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884CA8);
  }
  return result;
}

unint64_t sub_1BFF67AA4()
{
  unint64_t result = qword_1EB884CA0;
  if (!qword_1EB884CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884CA0);
  }
  return result;
}

unint64_t sub_1BFF67AF8()
{
  unint64_t result = qword_1EB884C98;
  if (!qword_1EB884C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884C98);
  }
  return result;
}

unint64_t sub_1BFF67B4C()
{
  unint64_t result = qword_1EB884C90;
  if (!qword_1EB884C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884C90);
  }
  return result;
}

unint64_t sub_1BFF67BA0()
{
  unint64_t result = qword_1EB884C88;
  if (!qword_1EB884C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884C88);
  }
  return result;
}

unint64_t sub_1BFF67BF4()
{
  unint64_t result = qword_1EB884C80;
  if (!qword_1EB884C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884C80);
  }
  return result;
}

unint64_t sub_1BFF67C48()
{
  unint64_t result = qword_1EB884C78;
  if (!qword_1EB884C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884C78);
  }
  return result;
}

unint64_t sub_1BFF67C9C()
{
  unint64_t result = qword_1EB884C70;
  if (!qword_1EB884C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884C70);
  }
  return result;
}

unint64_t sub_1BFF67CF0()
{
  unint64_t result = qword_1EB884C68;
  if (!qword_1EB884C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884C68);
  }
  return result;
}

uint64_t sub_1BFF67D44(void *a1, void *a2)
{
  return sub_1C0282484(a1, a2, (uint64_t (*)(void, void))sub_1C02795F4);
}

void *sub_1BFF67D70@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t)@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, void (*a5)(uint64_t *__return_ptr, unint64_t *, uint64_t *)@<X4>, void *a6@<X8>)
{
  switch(a2 >> 61)
  {
    case 2uLL:
      uint64_t v14 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v13 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v15 = swift_allocObject();
      id v16 = a3(&v26, a1, v14);
      if (v6) {
        goto LABEL_9;
      }
      uint64_t v17 = v26;
      uint64_t v25 = a1;
      MEMORY[0x1F4188790](v16);
      v24[2] = &v25;
      unint64_t result = (void *)sub_1C0181D3C(a5, (uint64_t)v24, v13);
      *(void *)(v15 + 16) = v17;
      *(void *)(v15 + 24) = result;
      *a6 = v15 | 0x4000000000000000;
      break;
    case 3uLL:
      uint64_t v18 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v19 = swift_allocObject();
      unint64_t result = (void *)a4(a1, v18);
      if (v6) {
        goto LABEL_9;
      }
      *a6 = v19 | 0x6000000000000000;
      break;
    case 4uLL:
      uint64_t v20 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v21 = *(void *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      char v22 = *(unsigned char *)((a2 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v23 = swift_allocObject();
      unint64_t result = ((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))a4)(&v26, a1, v20);
      if (v6)
      {
LABEL_9:
        unint64_t result = (void *)swift_deallocUninitializedObject();
      }
      else
      {
        *(void *)(v23 + 16) = v26;
        *(void *)(v23 + 24) = v21;
        *(unsigned char *)(v23 + 32) = v22;
        *a6 = v23 | 0x8000000000000000;
      }
      break;
    default:
      *a6 = a2;
      unint64_t result = (void *)sub_1BFF65DE8(a2);
      break;
  }
  return result;
}

uint64_t sub_1BFF67F78(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1BFF67FC4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v36 = a4;
  id v38 = a6;
  uint64_t v39 = a3;
  uint64_t v8 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v8);
  uint64_t v37 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEE9D78(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = type metadata accessor for FormatOption();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  id v16 = (uint64_t *)((char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a5)
  {
    case 1:
      uint64_t v21 = v41;
      sub_1C0E473E0(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v42);
      if (!v21)
      {
        LOBYTE(v52[0]) = v40;
        sub_1C0292B2C((id)v43, v38);
        sub_1BFEA4290((uint64_t)&v42);
      }
      return;
    case 2:
      uint64_t v22 = v41;
      sub_1BFFB5F74(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v42);
      if (!v22)
      {
        v52[6] = v48;
        v53[0] = v49[0];
        *(_OWORD *)((char *)v53 + 9) = *(_OWORD *)((char *)v49 + 9);
        _OWORD v52[2] = v44;
        v52[3] = v45;
        v52[4] = v46;
        v52[5] = v47;
        v52[0] = v42;
        v52[1] = v43;
        long long v50[6] = v48;
        v51[0] = v49[0];
        *(_OWORD *)((char *)v51 + 9) = *(_OWORD *)((char *)v49 + 9);
        _OWORD v50[2] = v44;
        _OWORD v50[3] = v45;
        void v50[4] = v46;
        v50[5] = v47;
        char v54 = v40;
        v50[0] = v42;
        v50[1] = v43;
        sub_1C065F354((void **)v50, v38);
        sub_1C01880A4((uint64_t)v52);
      }
      return;
    case 3:
      uint64_t v23 = v40;
      FormatOptionCollection.subscript.getter(v40, v39, (uint64_t)v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        sub_1BFE5464C((uint64_t)v12, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
        id v16 = v37;
        *uint64_t v37 = v23;
        v16[1] = v39;
        swift_storeEnumTagMultiPayload();
        char v24 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
        sub_1C0281748((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        uint64_t v25 = (void *)swift_allocError();
        sub_1C0282524((uint64_t)v16, v26, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
        if (v24)
        {
          uint64_t v27 = swift_allocObject();
          *(unsigned char *)(v27 + 16) = 2;
          *(void *)(v27 + 24) = 0x3FF0000000000000;
          *(unsigned char *)(v27 + 32) = 0;
          *id v38 = v27 | 0x1000000000000000;
          swift_bridgeObjectRetain();
          sub_1BFF810A4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);

          return;
        }
        swift_bridgeObjectRetain();
        swift_willThrow();
        double v33 = type metadata accessor for FormatLayoutError;
        goto LABEL_21;
      }
      sub_1C028208C((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v30 = v16[2];
      swift_retain();
      uint64_t v31 = v30;
      uint64_t v32 = v41;
      sub_1BFF28A20(&v42, a1, v31);
      swift_release();
      if (v32)
      {
        double v33 = type metadata accessor for FormatOption;
LABEL_21:
        sub_1BFF810A4((uint64_t)v16, (uint64_t (*)(void))v33);
        return;
      }
      sub_1BFF69F88(v42, v23, v39, v36, a1, v38);
      swift_release();
      sub_1BFF810A4((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOption);
      return;
    case 4:
      sub_1C027D90C(a1, v40, v39, &OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack, v38);
      return;
    case 5:
      uint64_t v28 = v41;
      sub_1C0E4755C(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v42);
      if (!v28)
      {
        *(void *)&v52[0] = v40;
        BYTE8(v52[0]) = v39;
        sub_1C0D58474((uint64_t)&v42, v38);
        goto LABEL_19;
      }
      return;
    case 6:
      uint64_t v29 = v41;
      sub_1C0E472AC(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v42);
      if (!v29)
      {
        uint64_t v34 = *((void *)&v43 + 1);
        long long v41 = v44;
        *(void *)&v52[0] = v40;
        BYTE8(v52[0]) = v39;
        sub_1C0D99718((uint64_t)&v42, v38);
        sub_1BFEEFC20(v34, v41);
LABEL_19:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      return;
    default:
      uint64_t v20 = v41;
      sub_1BFF23670(*(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
      if (!v20)
      {
        LOBYTE(v42) = v40;
        sub_1C03EAA1C((uint64_t)v19, v38);
        sub_1BFF810A4((uint64_t)v19, type metadata accessor for FeedHeadline);
      }
      return;
  }
}

id sub_1BFF68690()
{
  switch(*v0)
  {
    case 1:
      id result = (id)*MEMORY[0x1E4FB28D0];
      break;
    case 2:
      id result = (id)*MEMORY[0x1E4FB28D8];
      break;
    case 3:
      id result = (id)*MEMORY[0x1E4FB28E0];
      break;
    case 4:
      id result = (id)*MEMORY[0x1E4FB28F0];
      break;
    case 5:
      id result = (id)*MEMORY[0x1E4FB2908];
      break;
    case 6:
      id result = (id)*MEMORY[0x1E4FB2950];
      break;
    case 7:
      id result = (id)*MEMORY[0x1E4FB2928];
      break;
    case 8:
      id result = (id)*MEMORY[0x1E4FB2988];
      break;
    case 9:
      id result = (id)*MEMORY[0x1E4FB2990];
      break;
    case 0xA:
      id result = (id)*MEMORY[0x1E4FB2998];
      break;
    case 0xB:
      id result = (id)sub_1C151E5EC();
      break;
    default:
      id result = (id)*MEMORY[0x1E4FB28C8];
      break;
  }
  return result;
}

uint64_t sub_1BFF68780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v32 = a7;
  v33[3] = a6;
  v28[0] = a4;
  v28[1] = a5;
  uint64_t v29 = type metadata accessor for FormatLayoutError();
  MEMORY[0x1F4188790](v29);
  uint64_t v30 = (uint64_t *)((char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C00AB000();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FormatOption();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  uint64_t v19 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
  FormatOptionCollection.subscript.getter(a2, a3, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    sub_1C00AB068((uint64_t)v13, (uint64_t)v17);
    swift_retain();
    uint64_t v24 = v31;
    sub_1BFF28A20(v18, v33);
    swift_release();
    if (!v24)
    {
      uint64_t v19 = sub_1BFF68B60(v33[0], a2, a3, v28[0], v18);
      swift_release();
      sub_1C124E840((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatOption);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19;
    }
    uint64_t v25 = type metadata accessor for FormatOption;
    uint64_t v26 = (uint64_t)v17;
LABEL_8:
    sub_1C124E840(v26, (uint64_t (*)(void))v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  sub_1C124E840((uint64_t)v13, (uint64_t (*)(void))sub_1C00AB000);
  uint64_t v20 = (uint64_t)v30;
  *uint64_t v30 = a2;
  *(void *)(v20 + 8) = a3;
  swift_storeEnumTagMultiPayload();
  char v21 = *(unsigned char *)(v18 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
  sub_1BFE7E51C();
  uint64_t v22 = (void *)swift_allocError();
  sub_1C124E8A0(v20, v23, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);
  if ((v21 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t v25 = type metadata accessor for FormatLayoutError;
    uint64_t v26 = v20;
    goto LABEL_8;
  }
  v33[0] = 0x3A676E697373694DLL;
  v33[1] = 0xEB000000007B7B20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  uint64_t v19 = v33[0];
  sub_1C124E840(v20, (uint64_t (*)(void))type metadata accessor for FormatLayoutError);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1BFF68B60(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BFF68BB4(a1, a2, a3, a4, a5, (void (**)(char *, uint64_t))sub_1BFF68B60, (unsigned int (**)(uint64_t, uint64_t, uint64_t))sub_1C002FECC, (void (*)(void))sub_1C002FECC);
}

uint64_t sub_1BFF68BB4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (**a6)(char *, uint64_t), unsigned int (**a7)(uint64_t, uint64_t, uint64_t), void (*a8)(void))
{
  uint64_t v105 = a8;
  uint64_t v120 = a7;
  uint64_t v116 = a6;
  uint64_t v10 = v9;
  uint64_t v118 = a5;
  uint64_t v98 = a3;
  uint64_t v97 = a2;
  sub_1C0E572B0(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v95 - v17;
  uint64_t v113 = sub_1C15156FC();
  uint64_t v19 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  unsigned __int8 v104 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21);
  uint64_t v119 = (char **)((char *)&v95 - v22);
  sub_1C0E572B0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v23 - 8);
  long long v103 = (void (*)(uint64_t *, char *, uint64_t))((char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  unsigned __int8 v108 = (char *)&v95 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v117 = (char *)&v95 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v121 = (char *)&v95 - v30;
  uint64_t v31 = sub_1C1515FDC();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  long long v102 = (char *)&v95 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v107 = (char *)&v95 - v35;
  MEMORY[0x1F4188790](v36);
  MEMORY[0x1F4188790](v37);
  uint64_t v106 = a4;
  switch(a1 >> 60)
  {
    case 1uLL:
      double v66 = (char *)&v95 - v38;
      long long v102 = v39;
      uint64_t v112 = v9;
      uint64_t v67 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v68 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x28);
      v126[3] = MEMORY[0x1E4FBB1A0];
      v126[0] = v67;
      v126[1] = v68;
      sub_1BFF6A008((uint64_t)v126, (uint64_t)&v125);
      uint64_t v69 = MEMORY[0x1E4FBC840];
      uint64_t v116 = *(void (***)(char *, uint64_t))(a4 + 16);
      if (!v116)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_56;
      }
      unsigned __int8 v108 = (char *)(v32 + 56);
      uint64_t v115 = (uint64_t *)(v32 + 48);
      uint64_t v114 = (void (**)(uint64_t *, char *, uint64_t))(v32 + 32);
      unsigned __int8 v104 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
      long long v100 = (void (**)(unsigned int (**)(char *, uint64_t, uint64_t), uint64_t))(v19 + 32);
      char v99 = (void (**)(char **, uint64_t))(v19 + 8);
      uint64_t v107 = (char *)(v32 + 16);
      uint64_t v111 = (void (**)(char *, uint64_t))(v32 + 8);
      uint64_t v70 = a4;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v71 = 0;
      uint64_t v105 = (void (*)(void))(v69 + 8);
      uint64_t v72 = (uint64_t)v121;
      uint64_t v73 = v66;
      uint64_t v96 = v18;
      long long v101 = (void (**)(unsigned int (**)(char *, uint64_t, uint64_t), char *, uint64_t))v66;
      break;
    case 8uLL:
      uint64_t v87 = *(void *)((a1 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      uint64_t v88 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v116)(v87, v97, v98, a4, v118);
      if (!v10) {
        uint64_t v8 = v88;
      }
      swift_release_n();
      swift_release();
      return v8;
    case 0xBuLL:
      uint64_t v8 = type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v89 = v98;
      *id v90 = v97;
      v90[1] = v89;
      v90[2] = 0x676E69727453;
      v90[3] = 0xE600000000000000;
      v90[4] = 0x7463617274736261;
      v90[5] = 0xE800000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      swift_willThrow();
      return v8;
    default:
      *(void *)&long long v125 = a1;
      swift_bridgeObjectRetain();
      sub_1BFF6A064(v126);
      sub_1BFF6A008((uint64_t)v126, (uint64_t)&v125);
      uint64_t v40 = a4;
      uint64_t v121 = *(char **)(a4 + 16);
      if (!v121) {
        goto LABEL_22;
      }
      uint64_t v112 = v9;
      long long v41 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
      uint64_t v120 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
      uint64_t v119 = (char **)(v32 + 32);
      uint64_t v110 = (uint64_t *)(v19 + 48);
      long long v101 = (void (**)(unsigned int (**)(char *, uint64_t, uint64_t), char *, uint64_t))(v19 + 32);
      long long v100 = (void (**)(unsigned int (**)(char *, uint64_t, uint64_t), uint64_t))(v19 + 8);
      uint64_t v114 = (void (**)(uint64_t *, char *, uint64_t))(v32 + 16);
      uint64_t v116 = (void (**)(char *, uint64_t))(v32 + 8);
      swift_bridgeObjectRetain();
      long long v42 = 0;
      uint64_t v111 = (void (**)(char *, uint64_t))(MEMORY[0x1E4FBC840] + 8);
      uint64_t v43 = (uint64_t)v108;
      long long v44 = v107;
      char v99 = (void (**)(char **, uint64_t))v15;
      uint64_t v109 = v31;
      do
      {
        uint64_t v45 = *(void *)(v40 + 8 * (void)v42 + 32);
        if (v45)
        {
          sub_1BFF6A008((uint64_t)&v125, (uint64_t)v122);
          swift_bridgeObjectRetain();
          int v46 = swift_dynamicCast();
          long long v47 = *v41;
          if (!v46)
          {
            v47(v43, 1, 1, v31);
LABEL_28:
            sub_1C0E56F54(v43, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
            uint64_t v8 = type metadata accessor for FormatLayoutError();
            sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
            swift_allocError();
            *double v65 = 5001813;
            v65[1] = 0xE300000000000000;
            v65[2] = 7958081;
            v65[3] = 0xE300000000000000;
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v125);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
            swift_bridgeObjectRelease();
            return v8;
          }
          long long v48 = v41;
          v47(v43, 0, 1, v31);
          id v49 = *v120;
          if ((*v120)(v43, 1, v31) == 1) {
            goto LABEL_28;
          }
          uint64_t v117 = *v119;
          ((void (*)(char *, uint64_t, uint64_t))v117)(v44, v43, v31);
          uint64_t v124 = v31;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v123);
          *(void *)&v122[0] = v118;
          if (*(void *)(v45 + 16))
          {
            uint64_t v115 = boxed_opaque_existential_0;
            sub_1C151564C();
            uint64_t v51 = v113;
            if (((unsigned int (*)(char *, uint64_t, uint64_t))*v110)(v15, 1, v113) == 1)
            {
              sub_1C0E56F54((uint64_t)v15, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
              uint64_t v31 = v109;
              (*v114)(v115, v44, v109);
            }
            else
            {
              unint64_t v52 = v104;
              (*v101)(v104, v15, v51);
              uint64_t v53 = sub_1C15155FC();
              if (v53) {
                uint64_t v54 = v53;
              }
              else {
                uint64_t v54 = MEMORY[0x1E4FBC860];
              }
              MEMORY[0x1F4188790](v53);
              *(&v95 - 2) = (uint64_t)v122;
              uint64_t v55 = v112;
              unint64_t v56 = sub_1C002FB68(v105, (uint64_t)(&v95 - 4), v45);
              uint64_t v112 = v55;
              uint64_t v129 = v54;
              sub_1C002FB3C(v56);
              sub_1C151560C();
              uint64_t v57 = (uint64_t)v103;
              sub_1C151565C();
              (*v100)(v52, v51);
              long long v58 = v102;
              uint64_t v31 = v109;
              (*v114)((uint64_t *)v102, v44, v109);
              if (v49(v57, 1, v31) == 1)
              {
                ((void (*)(uint64_t *, char *, uint64_t))v117)(v115, v58, v31);
                sub_1C0E56F54(v57, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
              }
              else
              {
                (*v116)(v58, v31);
                ((void (*)(uint64_t *, uint64_t, uint64_t))v117)(v115, v57, v31);
              }
              uint64_t v40 = v106;
              uint64_t v15 = (char *)v99;
              uint64_t v43 = (uint64_t)v108;
              long long v44 = v107;
            }
          }
          else
          {
            (*v114)(boxed_opaque_existential_0, v44, v31);
          }
          long long v41 = v48;
          (*v116)(v44, v31);
          swift_bridgeObjectRelease();
        }
        else
        {
          *(void *)&v122[0] = 0;
          *((void *)&v122[0] + 1) = 0xE000000000000000;
          sub_1C152036C();
          uint64_t v124 = MEMORY[0x1E4FBB1A0];
          long long v123 = v122[0];
        }
        ++v42;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v125);
        sub_1BFF993A8(&v123, &v125);
      }
      while (v121 != v42);
      swift_bridgeObjectRelease();
LABEL_22:
      sub_1BFF993A8(&v125, &v127);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
      swift_bridgeObjectRelease();
      sub_1BFF6A008((uint64_t)&v127, (uint64_t)&v125);
      if ((swift_dynamicCast() & 1) == 0)
      {
        uint64_t v8 = type metadata accessor for FormatLayoutError();
        sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
        swift_allocError();
        long long v60 = v59;
        __swift_project_boxed_opaque_existential_1(&v127, v128);
        swift_getDynamicType();
        uint64_t v61 = v98;
        swift_bridgeObjectRetain();
        uint64_t v62 = sub_1C1520FAC();
        void *v60 = v97;
        v60[1] = v61;
        v60[2] = 0x676E69727453;
        v60[3] = 0xE600000000000000;
        v60[4] = v62;
        v60[5] = v63;
        swift_storeEnumTagMultiPayload();
        goto LABEL_25;
      }
LABEL_23:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v127);
      return v123;
  }
  while (1)
  {
    uint64_t v8 = *(void *)(v70 + 8 * (void)v71 + 32);
    if (v8) {
      break;
    }
    *(void *)&v122[0] = 0;
    *((void *)&v122[0] + 1) = 0xE000000000000000;
    sub_1C152036C();
    uint64_t v124 = MEMORY[0x1E4FBB1A0];
    long long v123 = v122[0];
LABEL_32:
    uint64_t v71 = (void (**)(char *, uint64_t))((char *)v71 + 1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v125);
    sub_1BFF993A8(&v123, &v125);
    if (v116 == v71)
    {
      swift_bridgeObjectRelease();
LABEL_56:
      sub_1BFF993A8(&v125, &v127);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
      sub_1BFF6A008((uint64_t)&v127, (uint64_t)&v125);
      if (swift_dynamicCast()) {
        goto LABEL_23;
      }
      uint64_t v8 = type metadata accessor for FormatLayoutError();
      sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      uint64_t v92 = v98;
      *uint64_t v93 = v97;
      v93[1] = v92;
      v93[2] = 0x676E69727453;
      v93[3] = 0xE600000000000000;
      v93[4] = 0x676E69727453;
      v93[5] = 0xE600000000000000;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
LABEL_25:
      swift_willThrow();
      double v64 = (uint64_t *)&v127;
LABEL_26:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
      return v8;
    }
  }
  sub_1BFF6A008((uint64_t)&v125, (uint64_t)v122);
  swift_bridgeObjectRetain();
  int v74 = swift_dynamicCast();
  double v75 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v108;
  if (!v74)
  {
    v75(v72, 1, 1, v31);
LABEL_59:
    sub_1C0E56F54(v72, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA88C((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    *uint64_t v94 = 5001813;
    v94[1] = 0xE300000000000000;
    v94[2] = 7958081;
    v94[3] = 0xE300000000000000;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v125);
    swift_bridgeObjectRelease();
    double v64 = v126;
    goto LABEL_26;
  }
  v75(v72, 0, 1, v31);
  double v76 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*v115;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))*v115)(v72, 1, v31) == 1) {
    goto LABEL_59;
  }
  double v77 = *v114;
  (*v114)((uint64_t *)v73, (char *)v72, v31);
  uint64_t v124 = v31;
  double v78 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v123);
  *(void *)&v122[0] = v118;
  if (*(void *)(v8 + 16))
  {
    uint64_t v110 = v78;
    sub_1C151564C();
    uint64_t v79 = v113;
    if ((*v104)(v18, 1, v113) != 1)
    {
      long long v103 = v77;
      uint64_t v80 = v119;
      ((void (*)(char **, char *, uint64_t))*v100)(v119, v18, v79);
      uint64_t v81 = sub_1C15155FC();
      if (v81) {
        uint64_t v82 = v81;
      }
      else {
        uint64_t v82 = MEMORY[0x1E4FBC860];
      }
      MEMORY[0x1F4188790](v81);
      *(&v95 - 2) = (uint64_t)v122;
      uint64_t v83 = v112;
      unint64_t v84 = sub_1C002FB68((void (*)(void))v120, (uint64_t)(&v95 - 4), v8);
      uint64_t v112 = v83;
      uint64_t v129 = v82;
      sub_1C002FB3C(v84);
      sub_1C151560C();
      uint64_t v85 = (uint64_t)v117;
      sub_1C151565C();
      (*v99)(v80, v79);
      char v86 = v102;
      uint64_t v73 = (char *)v101;
      (*(void (**)(char *, void, uint64_t))v107)(v102, v101, v31);
      if (v76(v85, 1, v31) == 1)
      {
        v103(v110, v86, v31);
        sub_1C0E56F54(v85, (uint64_t)&qword_1EB8948A0, MEMORY[0x1E4F276F0], (uint64_t (*)(void))sub_1C0E572B0);
      }
      else
      {
        (*v111)(v86, v31);
        v103(v110, (char *)v85, v31);
      }
      uint64_t v70 = v106;
      uint64_t v18 = v96;
      uint64_t v72 = (uint64_t)v121;
      goto LABEL_48;
    }
    sub_1C0E56F54((uint64_t)v18, (uint64_t)&unk_1EB8710E0, MEMORY[0x1E4F26ED8], (uint64_t (*)(void))sub_1C0E572B0);
    uint64_t v73 = (char *)v101;
    (*(void (**)(uint64_t *, void, uint64_t))v107)(v110, v101, v31);
  }
  else
  {
    (*(void (**)(uint64_t *, char *, uint64_t))v107)(v78, v73, v31);
  }
  uint64_t v70 = v106;
LABEL_48:
  (*v111)(v73, v31);
  swift_bridgeObjectRelease();
  goto LABEL_32;
}

uint64_t sub_1BFF69F88@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  return sub_1C0E50E00(a1, a2, a3, a4, a5, (void (**)(char *, uint64_t))sub_1BFF69F88, 0x6F4374616D726F46, 0xEB00000000726F6CLL, a6, (uint64_t)&type metadata for FormatColor, (void (*)(void))sub_1C002FECC, (void (*)(void))sub_1C002FECC);
}

uint64_t sub_1BFF6A008(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1BFF6A064(uint64_t *a1@<X8>)
{
  sub_1BFF26C28(0, (unint64_t *)&qword_1EB876928, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v38 - v4;
  sub_1BFF26D60(0, (unint64_t *)&qword_1EB876930, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  __n128 v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v38 - v8;
  uint64_t v10 = *v1;
  switch((unint64_t)*v1 >> 60)
  {
    case 1uLL:
      uint64_t v12 = (void *)(v10 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v14 = v12[2];
      uint64_t v13 = v12[3];
      uint64_t v16 = v12[4];
      uint64_t v15 = v12[5];
      uint64_t v17 = v12[6];
      a1[3] = (uint64_t)&type metadata for FormatOptionEnum;
      uint64_t v18 = (void *)swift_allocObject();
      *a1 = (uint64_t)v18;
      v18[2] = v14;
      v18[3] = v13;
      v18[4] = v16;
      v18[5] = v15;
      long long v18[6] = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 2uLL:
      uint64_t v19 = swift_projectBox();
      uint64_t v20 = sub_1BFF26D60;
      sub_1BFFDA208(v19, (uint64_t)v9, (uint64_t)&qword_1EB876930, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26D60);
      uint64_t v21 = sub_1C151631C();
      a1[3] = v21;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a1);
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(boxed_opaque_existential_0, v9, v21);
      uint64_t v23 = (uint64_t)v9;
      uint64_t v24 = &qword_1EB876930;
      goto LABEL_12;
    case 3uLL:
      uint64_t v25 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      a1[3] = MEMORY[0x1E4FBC958];
      *a1 = v25;
      return;
    case 4uLL:
      uint64_t v26 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      a1[3] = MEMORY[0x1E4FBB550];
      *a1 = v26;
      return;
    case 5uLL:
      uint64_t v27 = v10 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v29 = *(void *)(v27 + 16);
      uint64_t v28 = *(void *)(v27 + 24);
      a1[3] = MEMORY[0x1E4FBB1A0];
      *a1 = v29;
      a1[1] = v28;
LABEL_8:
      swift_bridgeObjectRetain();
      return;
    case 6uLL:
      uint64_t v30 = swift_projectBox();
      uint64_t v20 = sub_1BFF26C28;
      sub_1BFFDA208(v30, (uint64_t)v5, (uint64_t)&qword_1EB876928, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFF26C28);
      uint64_t v31 = sub_1C1515FDC();
      a1[3] = v31;
      uint64_t v32 = __swift_allocate_boxed_opaque_existential_0(a1);
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v32, v5, v31);
      uint64_t v23 = (uint64_t)v5;
      uint64_t v24 = &qword_1EB876928;
LABEL_12:
      sub_1BFFDA0C8(v23, (uint64_t)v24, (uint64_t)type metadata accessor for FormatSelectorValue, (uint64_t (*)(void))v20);
      return;
    case 7uLL:
      uint64_t v33 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v34 = &type metadata for FormatColor;
      goto LABEL_16;
    case 8uLL:
      v38[1] = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      sub_1BFF6A064(v7);
      return;
    case 9uLL:
      uint64_t v33 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v34 = &type metadata for FormatAsyncImageContent;
LABEL_16:
      a1[3] = (uint64_t)v34;
      *a1 = v33;
      goto LABEL_23;
    case 0xAuLL:
      uint64_t v35 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v36 = &type metadata for FormatVideoNodeContent;
      goto LABEL_21;
    case 0xBuLL:
      a1[3] = (uint64_t)&type metadata for FormatAbstract;
      return;
    case 0xCuLL:
      uint64_t v35 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v36 = &type metadata for FormatFont;
LABEL_21:
      a1[3] = (uint64_t)v36;
      *a1 = v35;
      goto LABEL_23;
    case 0xDuLL:
      uint64_t v37 = *(void *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      a1[3] = (uint64_t)&type metadata for FormatVideoPlayerContent;
      *a1 = v37;
LABEL_23:
      swift_retain();
      break;
    default:
      char v11 = *(unsigned char *)(v10 + 16);
      a1[3] = MEMORY[0x1E4FBB390];
      *(unsigned char *)a1 = v11;
      break;
  }
}

UIColor __swiftcall UIColor.init(hex:)(Swift::String hex)
{
  uint64_t v1 = sub_1BFF6A7CC(hex._countAndFlagsBits, (unint64_t)hex._object);
  unint64_t v3 = v2;
  result.super.isa = (Class)swift_bridgeObjectRelease();
  uint64_t v5 = HIBYTE(v3) & 0xF;
  uint64_t v6 = v1 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0) {
    uint64_t v7 = HIBYTE(v3) & 0xF;
  }
  else {
    uint64_t v7 = v1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  if ((v3 & 0x1000000000000000) != 0)
  {
    LODWORD(v1) = sub_1C0B343BC(v1, v3, 16);
    char v10 = v26;
    goto LABEL_48;
  }
  if ((v3 & 0x2000000000000000) == 0)
  {
    if ((v1 & 0x1000000000000000) != 0) {
      uint64_t v8 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v8 = (unsigned __int8 *)sub_1C152020C();
    }
    LODWORD(v1) = sub_1C0B34644(v8, v6, 16);
    char v10 = v9 & 1;
LABEL_48:
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return (UIColor)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithRed_green_blue_alpha_, (double)BYTE3(v1) / 255.0, (double)BYTE2(v1) / 255.0, (double)BYTE1(v1) / 255.0, (double)v1 / 255.0);
    }
LABEL_51:
    id v24 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    uint64_t v31 = sub_1C0B34130;
    uint64_t v32 = 0;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v28 = 1107296256;
    uint64_t v29 = sub_1BFDF2404;
    uint64_t v30 = &block_descriptor_43;
    uint64_t v25 = _Block_copy(&aBlock);
    id v23 = objc_msgSend(v24, sel_initWithDynamicProvider_, v25);
    _Block_release(v25);
    return (UIColor)v23;
  }
  uint64_t aBlock = v1;
  uint64_t v28 = v3 & 0xFFFFFFFFFFFFFFLL;
  if (v1 == 43)
  {
    if (v5)
    {
      uint64_t v16 = v5 - 1;
      if (v16)
      {
        uint64_t v1 = 0;
        uint64_t v17 = (unsigned __int8 *)&aBlock + 1;
        while (1)
        {
          int v18 = *v17;
          unsigned __int8 v19 = v18 - 48;
          if ((v18 - 48) >= 0xA)
          {
            if ((v18 - 65) < 6)
            {
              unsigned __int8 v19 = v18 - 55;
            }
            else
            {
              if ((v18 - 97) > 5) {
                goto LABEL_47;
              }
              unsigned __int8 v19 = v18 - 87;
            }
          }
          if ((unint64_t)(v1 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v15 = __OFADD__(16 * v1, v19);
          uint64_t v1 = 16 * v1 + v19;
          if (v15) {
            break;
          }
          ++v17;
          if (!--v16)
          {
LABEL_46:
            char v10 = 0;
            goto LABEL_48;
          }
        }
      }
      goto LABEL_47;
    }
  }
  else
  {
    if (v1 != 45)
    {
      if (v5)
      {
        uint64_t v1 = 0;
        p_uint64_t aBlock = &aBlock;
        while (1)
        {
          int v21 = *(unsigned __int8 *)p_aBlock;
          unsigned __int8 v22 = v21 - 48;
          if ((v21 - 48) >= 0xA)
          {
            if ((v21 - 65) < 6)
            {
              unsigned __int8 v22 = v21 - 55;
            }
            else
            {
              if ((v21 - 97) > 5) {
                goto LABEL_47;
              }
              unsigned __int8 v22 = v21 - 87;
            }
          }
          if ((unint64_t)(v1 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v15 = __OFADD__(16 * v1, v22);
          uint64_t v1 = 16 * v1 + v22;
          if (v15) {
            break;
          }
          p_uint64_t aBlock = (uint64_t *)((char *)p_aBlock + 1);
          if (!--v5) {
            goto LABEL_46;
          }
        }
      }
      goto LABEL_47;
    }
    if (v5)
    {
      uint64_t v11 = v5 - 1;
      if (v11)
      {
        uint64_t v1 = 0;
        uint64_t v12 = (unsigned __int8 *)&aBlock + 1;
        while (1)
        {
          int v13 = *v12;
          unsigned __int8 v14 = v13 - 48;
          if ((v13 - 48) >= 0xA)
          {
            if ((v13 - 65) < 6)
            {
              unsigned __int8 v14 = v13 - 55;
            }
            else
            {
              if ((v13 - 97) > 5) {
                break;
              }
              unsigned __int8 v14 = v13 - 87;
            }
          }
          if ((unint64_t)(v1 - 0x800000000000000) >> 60 != 15) {
            break;
          }
          BOOL v15 = __OFSUB__(16 * v1, v14);
          uint64_t v1 = 16 * v1 - v14;
          if (v15) {
            break;
          }
          ++v12;
          if (!--v11) {
            goto LABEL_46;
          }
        }
      }
LABEL_47:
      LODWORD(v1) = 0;
      char v10 = 1;
      goto LABEL_48;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFF6A7CC(uint64_t a1, unint64_t a2)
{
  char v4 = sub_1C151E89C();
  swift_bridgeObjectRetain();
  if (v4)
  {
    unint64_t v5 = sub_1C029748C(1uLL, a1, a2);
    uint64_t v7 = v6;
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x1C18C6220](v5, v7, v9, v11);
    swift_bridgeObjectRelease();
  }
  if (sub_1C151E7AC() != 8)
  {
    if (sub_1C151E7AC() == 6)
    {
      uint64_t v13 = a1;
LABEL_10:
      sub_1C151E80C();
      return v13;
    }
    if (sub_1C151E7AC() == 4)
    {
      sub_1C151E7EC();
      sub_1C151E8BC();
      sub_1C151E7EC();
      sub_1C151E8BC();
      sub_1C151E7EC();
      sub_1C151E8BC();
      sub_1C151E7EC();
      sub_1C151E8BC();
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
      sub_1C15200FC();
      sub_1C151E4EC();
      sub_1C151E4EC();
      swift_bridgeObjectRelease();
      sub_1C151E4EC();
      sub_1C151E4EC();
      swift_bridgeObjectRelease();
      sub_1C151E4EC();
      sub_1C151E4EC();
      swift_bridgeObjectRelease();
      sub_1C151E4EC();
      sub_1C151E4EC();
      swift_bridgeObjectRelease();
      return v13;
    }
    if (sub_1C151E7AC() == 3)
    {
      sub_1C151E7EC();
      sub_1C151E8BC();
      sub_1C151E7EC();
      sub_1C151E8BC();
      sub_1C151E7EC();
      sub_1C151E8BC();
      swift_bridgeObjectRelease();
      uint64_t v13 = 0;
      sub_1C151E4EC();
      sub_1C151E4EC();
      swift_bridgeObjectRelease();
      sub_1C151E4EC();
      sub_1C151E4EC();
      swift_bridgeObjectRelease();
      sub_1C151E4EC();
      sub_1C151E4EC();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
  }
  return a1;
}

void *FormatParagraphStyle.paragraphStyle.getter()
{
  uint64_t v1 = *(unsigned __int8 *)v0;
  double v2 = v0[1];
  unsigned __int8 v3 = *((unsigned char *)v0 + 16);
  double v4 = v0[3];
  unsigned __int8 v5 = *((unsigned char *)v0 + 32);
  double v6 = v0[5];
  unsigned __int8 v7 = *((unsigned char *)v0 + 48);
  uint64_t v8 = *((char *)v0 + 49);
  uint64_t v9 = *((unsigned __int8 *)v0 + 50);
  double v10 = v0[7];
  unsigned __int8 v11 = *((unsigned char *)v0 + 64);
  double v12 = v0[9];
  unsigned __int8 v13 = *((unsigned char *)v0 + 80);
  double v14 = v0[11];
  double v15 = v0[13];
  unsigned __int8 v25 = *((unsigned char *)v0 + 96);
  unsigned __int8 v26 = *((unsigned char *)v0 + 112);
  double v16 = v0[17];
  unsigned __int8 v27 = *((unsigned char *)v0 + 144);
  unsigned __int8 v28 = *((unsigned char *)v0 + 176);
  double v23 = v0[21];
  double v24 = v0[23];
  unsigned __int8 v29 = *((unsigned char *)v0 + 192);
  int v17 = *((unsigned __int8 *)v0 + 193);
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB0848]), sel_init);
  unsigned __int8 v19 = v18;
  switch(v1)
  {
    case 1:
      uint64_t v1 = 2;
      goto LABEL_6;
    case 2:
      uint64_t v1 = 1;
      goto LABEL_6;
    case 3:
      uint64_t v1 = 3;
      goto LABEL_6;
    case 4:
      uint64_t v1 = 4;
      goto LABEL_6;
    case 5:
      goto LABEL_7;
    default:
LABEL_6:
      objc_msgSend(v18, sel_setAlignment_, v1);
LABEL_7:
      if (v3)
      {
        if (v5) {
          goto LABEL_9;
        }
      }
      else
      {
        objc_msgSend(v19, sel_setFirstLineHeadIndent_, v2);
        if (v5)
        {
LABEL_9:
          if (v7) {
            break;
          }
          goto LABEL_10;
        }
      }
      objc_msgSend(v19, sel_setHeadIndent_, v4);
      if ((v7 & 1) == 0)
      {
LABEL_10:
        objc_msgSend(v19, sel_setTailIndent_, v6);
        break;
      }
      break;
  }
  objc_msgSend(v19, sel_setLineBreakMode_, qword_1C1531D58[v8]);
  uint64_t v20 = 2;
  switch(v9)
  {
    case 1:
      uint64_t v20 = 1;
      goto LABEL_17;
    case 2:
      uint64_t v20 = 0xFFFFLL;
      goto LABEL_17;
    case 3:
      goto LABEL_18;
    default:
LABEL_17:
      objc_msgSend(v19, sel_setLineBreakStrategy_, v20);
LABEL_18:
      if (v11)
      {
        if (v13) {
          goto LABEL_20;
        }
      }
      else
      {
        objc_msgSend(v19, sel_setMaximumLineHeight_, v20, v10);
        if (v13)
        {
LABEL_20:
          if (v25) {
            goto LABEL_21;
          }
          goto LABEL_30;
        }
      }
      objc_msgSend(v19, sel_setMinimumLineHeight_, v20, v12);
      if (v25)
      {
LABEL_21:
        if (v26) {
          goto LABEL_22;
        }
        goto LABEL_31;
      }
LABEL_30:
      objc_msgSend(v19, sel_setLineSpacing_, v20, v14);
      if (v26)
      {
LABEL_22:
        if (v27) {
          goto LABEL_23;
        }
        goto LABEL_32;
      }
LABEL_31:
      objc_msgSend(v19, sel_setParagraphSpacing_, v20, v15);
      if (v27)
      {
LABEL_23:
        if (v28) {
          goto LABEL_24;
        }
        goto LABEL_33;
      }
LABEL_32:
      objc_msgSend(v19, sel_setLineHeightMultiple_, v20, v16);
      if (v28)
      {
LABEL_24:
        if (v29) {
          goto LABEL_25;
        }
        goto LABEL_34;
      }
LABEL_33:
      objc_msgSend(v19, sel_setDefaultTabInterval_, v20, v23);
      if (v29)
      {
LABEL_25:
        if (v17 == 2) {
          return v19;
        }
        goto LABEL_26;
      }
LABEL_34:
      HIDWORD(v22) = HIDWORD(v24);
      *(float *)&double v22 = v24;
      objc_msgSend(v19, sel_setHyphenationFactor_, v20, v22);
      if (v17 != 2) {
LABEL_26:
      }
        objc_msgSend(v19, sel_setAllowsDefaultTighteningForTruncation_, v17 & 1);
      return v19;
  }
}

void *initializeBufferWithCopyOfBuffer for FeedItemSupplementaryAttributes(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      double v16 = (void *)a2[3];
      a1[2] = a2[2];
      a1[3] = v16;
      int v17 = (void *)a2[4];
      id v18 = (void *)a2[5];
      a1[4] = v17;
      a1[5] = v18;
      unsigned __int8 v19 = (void *)a2[6];
      uint64_t v68 = (void *)a2[7];
      a1[6] = v19;
      a1[7] = v68;
      uint64_t v69 = (void *)a2[8];
      a1[8] = v69;
      uint64_t v20 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
      uint64_t v70 = (void *)((char *)a1 + v20);
      int v21 = (char *)a2 + v20;
      type metadata accessor for InternalErrorViewModel();
      swift_bridgeObjectRetain();
      swift_retain();
      id v22 = v16;
      id v23 = v17;
      id v24 = v18;
      id v25 = v19;
      id v26 = v68;
      id v27 = v69;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v28 = *((void *)v21 + 1);
        *uint64_t v70 = *(void *)v21;
        v70[1] = v28;
        unint64_t v29 = *((void *)v21 + 2);
        swift_bridgeObjectRetain();
        if (v29 >= 0xB)
        {
          uint64_t v34 = *((void *)v21 + 3);
          uint64_t v35 = *((void *)v21 + 4);
          v70[2] = v29;
          void v70[3] = v34;
          uint64_t v36 = *((void *)v21 + 5);
          uint64_t v37 = *((void *)v21 + 6);
          v70[4] = v35;
          v70[5] = v36;
          v70[6] = v37;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v30 = *((_OWORD *)v21 + 2);
          *((_OWORD *)v70 + 1) = *((_OWORD *)v21 + 1);
          *((_OWORD *)v70 + 2) = v30;
          v70[6] = *((void *)v21 + 6);
        }
        uint64_t v38 = *((void *)v21 + 8);
        v70[7] = *((void *)v21 + 7);
        v70[8] = v38;
        v70[9] = *((void *)v21 + 9);
        sub_1C0AEFBB4();
        uint64_t v40 = *(int *)(v39 + 80);
        long long v41 = (char *)v70 + v40;
        long long v42 = &v21[v40];
        *long long v41 = v21[v40];
        uint64_t v43 = (uint64_t)v70 + v40 + 8;
        long long v44 = *((_OWORD *)v42 + 2);
        *((_OWORD *)v41 + 2) = v44;
        uint64_t v45 = v44;
        int v46 = **(void (***)(uint64_t, char *, uint64_t))(v44 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46(v43, v42 + 8, v45);
        uint64_t v47 = *((void *)v42 + 7);
        *((void *)v41 + 6) = *((void *)v42 + 6);
        *((void *)v41 + 7) = v47;
        uint64_t v67 = *((void *)v42 + 9);
        *((void *)v41 + 8) = *((void *)v42 + 8);
        *((void *)v41 + 9) = v67;
        *((void *)v41 + 10) = *((void *)v42 + 10);
        v41[88] = v42[88];
        *((void *)v41 + 12) = *((void *)v42 + 12);
        long long v48 = (int *)type metadata accessor for GroupLayoutBindingContext();
        uint64_t v49 = v48[13];
        double v65 = &v42[v49];
        double v66 = &v41[v49];
        uint64_t v50 = sub_1C151787C();
        uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v51(v66, v65, v50);
        *(void *)&v41[v48[14]] = *(void *)&v42[v48[14]];
        *(void *)&v41[v48[15]] = *(void *)&v42[v48[15]];
        v41[v48[16]] = v42[v48[16]];
        *(void *)&v41[v48[17]] = *(void *)&v42[v48[17]];
        *(void *)&v41[v48[18]] = *(void *)&v42[v48[18]];
        *(void *)&v41[v48[19]] = *(void *)&v42[v48[19]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v31 = *(void *)v21;
        id v32 = *(id *)v21;
        uint64_t v33 = *((void *)v21 + 1);
        *uint64_t v70 = v31;
        v70[1] = v33;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1C0AEF7B8();
      uint64_t v53 = *(int *)(v52 + 48);
      uint64_t v54 = (_OWORD *)((char *)a1 + v53);
      uint64_t v55 = (_OWORD *)((char *)a2 + v53);
      long long v56 = v55[13];
      v54[12] = v55[12];
      v54[13] = v56;
      long long v57 = v55[15];
      v54[14] = v55[14];
      v54[15] = v57;
      long long v58 = v55[9];
      v54[8] = v55[8];
      v54[9] = v58;
      long long v59 = v55[11];
      v54[10] = v55[10];
      v54[11] = v59;
      long long v60 = v55[5];
      v54[4] = v55[4];
      v54[5] = v60;
      long long v61 = v55[7];
      v54[6] = v55[6];
      v54[7] = v61;
      long long v62 = v55[1];
      _OWORD *v54 = *v55;
      v54[1] = v62;
      long long v63 = v55[3];
      v54[2] = v55[2];
      v54[3] = v63;
      goto LABEL_14;
    }
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      uint64_t v9 = a2[3];
      a1[2] = a2[2];
      a1[3] = v9;
      uint64_t v10 = a2[5];
      a1[4] = a2[4];
      a1[5] = v10;
      long long v11 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      *((_OWORD *)a1 + 4) = v11;
      long long v12 = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 6) = v12;
      uint64_t v13 = a2[15];
      a1[14] = a2[14];
      a1[15] = v13;
      a1[16] = a2[16];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_1BFF6B3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C128F0D8(a1, a2, a3, a4, (void (*)(uint64_t))sub_1BFF02C9C, sub_1BFF02214, (uint64_t (*)(uint64_t, uint64_t))sub_1BFF01F54, (void (*)(void))type metadata accessor for FormatTextNodeStyle, (void (*)(uint64_t))sub_1BFEF75C8);
}

uint64_t sub_1BFF6B430(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v38 = a6;
  uint64_t v10 = a3(0);
  MEMORY[0x1F4188790](v10);
  __n128 v14 = MEMORY[0x1F4188790](v11);
  double v16 = (char *)&v31 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 == *(void *)(a2 + 16))
  {
    if (!v17 || a1 == a2)
    {
      char v25 = 1;
    }
    else
    {
      unint64_t v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      uint64_t v19 = v12 + 16;
      uint64_t v35 = v20;
      uint64_t v36 = v13;
      uint64_t v31 = *(void *)(v19 + 56);
      uint64_t v32 = a2;
      uint64_t v37 = v19;
      uint64_t v33 = a1;
      uint64_t v34 = (void (**)(char *, uint64_t))(v19 - 8);
      uint64_t v21 = v17 - 1;
      do
      {
        id v22 = v35;
        ((void (*)(char *, unint64_t, uint64_t, __n128))v35)(v16, a1 + v18, v10, v14);
        id v23 = v16;
        id v24 = v36;
        v22(v36, a2 + v18, v10);
        sub_1BFF6B648(a4, a5);
        char v25 = sub_1C151E5CC();
        id v26 = *v34;
        id v27 = v24;
        double v16 = v23;
        (*v34)(v27, v10);
        v26(v23, v10);
        BOOL v29 = v21-- != 0;
        if ((v25 & 1) == 0) {
          break;
        }
        v18 += v31;
        a2 = v32;
        a1 = v33;
      }
      while (v29);
    }
  }
  else
  {
    char v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_1BFF6B648(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BFF6B690()
{
  unint64_t result = qword_1EB87A2F0;
  if (!qword_1EB87A2F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A2F0);
  }
  return result;
}

id _s8NewsFeed19FormatTextNodeStyleC18reapplyLineSpacing010attributedD07contextSo18NSAttributedStringCAH_AA0cE7ContextCtF_0(void *a1)
{
  sub_1BFF66964(v1 + 296, (uint64_t)v14, (unint64_t *)&qword_1EB876CA0);
  sub_1BFF66964((uint64_t)v14, (uint64_t)v15, (unint64_t *)&qword_1EB876CA0);
  if sub_1C01CDAD8((uint64_t)v15) == 1 || (v17)
  {
    return a1;
  }
  else
  {
    uint64_t v3 = v16;
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, a1);
    uint64_t v5 = *MEMORY[0x1E4FB0738];
    id v6 = objc_msgSend(a1, sel_length);
    unsigned __int8 v7 = (void *)swift_allocObject();
    v7[2] = a1;
    v7[3] = v3;
    v7[4] = v4;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_1C109EF88;
    *(void *)(v8 + 24) = v7;
    aBlock[4] = sub_1BFDA5EF0;
    aBlock[5] = v8;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFDA5E24;
    aBlock[3] = &block_descriptor_83;
    uint64_t v9 = _Block_copy(aBlock);
    id v10 = a1;
    id v11 = v4;
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_enumerateAttribute_inRange_options_usingBlock_, v5, 0, v6, 0x100000, v9);
    _Block_release(v9);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if (v5) {
      __break(1u);
    }
    else {
      return v11;
    }
  }
  return result;
}

id sub_1BFF6B938(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a1;
  id v11 = (id)(a1 & 0xFFFFFFFFFFFFFFFLL);
  swift_retain();
  uint64_t v12 = (void *)sub_1BFF4DC90(a3, a4, a5, a6);
  swift_release();
  if (!v6)
  {
    if (a5)
    {
      swift_retain();
      id v14 = objc_msgSend(v12, sel_string);
      uint64_t v15 = sub_1C151E62C();
      uint64_t v17 = v16;

      swift_retain();
      swift_retain();
      unint64_t v18 = sub_1BFF636C0(a5, a3);
      sub_1BFF6492C(v18, a5, (objc_class *)a3, 18, v21);
      type metadata accessor for FormatAttributedString();
      swift_allocObject();
      swift_bridgeObjectRetain();
      sub_1BFF6364C((uint64_t)v21);
      sub_1BFF63168(v15, v17, (uint64_t)v21);
      sub_1BFF630AC((uint64_t)v21);
      sub_1BFF2BB80((uint64_t)a3);
      uint64_t v20 = v19;
      swift_release();
      sub_1BFF630AC((uint64_t)v21);
      swift_bridgeObjectRelease();
      id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v20);

      swift_release();
    }
    else
    {
      id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28E48]), sel_initWithAttributedString_, v12);
    }
  }
  return v11;
}

uint64_t FormatDateFormat.format(_:)(uint64_t a1)
{
  double v2 = v1;
  sub_1BFC3B15C();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C15166BC();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C15164AC();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v2[2];
  if (v15 == 1) {
    return sub_1C151611C();
  }
  if (v15 == 2) {
    return sub_1C151610C();
  }
  uint64_t v30 = v8;
  uint64_t v17 = v2[4];
  uint64_t v18 = v2[5];
  uint64_t v32 = *((unsigned __int8 *)v2 + 24);
  uint64_t v33 = a1;
  uint64_t v19 = v2[1];
  v29[0] = v17;
  v29[1] = v19;
  uint64_t v31 = *v2;
  id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  sub_1C151644C();
  uint64_t v21 = (void *)sub_1C15163DC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  objc_msgSend(v20, sel_setLocale_, v21);

  if (v18)
  {
    sub_1C151667C();
    uint64_t v22 = v30;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v6, 1, v7) == 1)
    {
      sub_1C0DEDBB8((uint64_t)v6);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v10, v6, v7);
      id v23 = (void *)sub_1C151669C();
      objc_msgSend(v20, sel_setTimeZone_, v23);

      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v7);
    }
  }
  __int16 v24 = v31;
  objc_msgSend(v20, sel_setDateStyle_, qword_1C15AA828[(char)v31]);
  objc_msgSend(v20, sel_setTimeStyle_, qword_1C15AA828[(uint64_t)v24 >> 8]);
  objc_msgSend(v20, sel_setFormattingContext_, v32);
  if (v15)
  {
    char v25 = (void *)sub_1C151E5EC();
    objc_msgSend(v20, sel_setLocalizedDateFormatFromTemplate_, v25);
  }
  id v26 = (void *)sub_1C151621C();
  id v27 = objc_msgSend(v20, sel_stringFromDate_, v26);

  uint64_t v28 = sub_1C151E62C();
  return v28;
}

uint64_t sub_1BFF6BF20(uint64_t a1, char a2)
{
  if (a2) {
    return swift_retain();
  }
  return result;
}

double sub_1BFF6BF2C@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(type metadata accessor for FeedHeadline(0) - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return sub_1BFF6BFB4(a1, a2, v8, a3);
}

double sub_1BFF6BFB4@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (a2 == 2)
  {
    id v6 = objc_msgSend(*(id *)(a3 + 40), sel_sourceChannel);
    if (!v6) {
      goto LABEL_22;
    }
    id v7 = objc_msgSend(v6, sel_theme);
    swift_unknownObjectRelease();
    if (!v7) {
      goto LABEL_22;
    }
    id v8 = objc_msgSend(v7, sel_bannerImageForMask);
    swift_unknownObjectRelease();
    if (!v8) {
      goto LABEL_22;
    }
  }
  else
  {
    id v9 = objc_msgSend(a1, sel_userInterfaceStyle);
    if ((unint64_t)v9 >= 2)
    {
      if (v9 == (id)2)
      {
        id v12 = objc_msgSend(*(id *)(a3 + 40), sel_sourceChannel);
        if (!v12) {
          goto LABEL_22;
        }
        id v13 = objc_msgSend(v12, sel_theme);
        swift_unknownObjectRelease();
        if (!v13) {
          goto LABEL_22;
        }
        id v8 = objc_msgSend(v13, sel_bannerImageForMask);
        swift_unknownObjectRelease();
        if (!v8) {
          goto LABEL_22;
        }
      }
      else
      {
        id v14 = objc_msgSend(*(id *)(a3 + 40), sel_sourceChannel);
        if (!v14) {
          goto LABEL_22;
        }
        id v15 = objc_msgSend(v14, sel_theme);
        swift_unknownObjectRelease();
        if (!v15) {
          goto LABEL_22;
        }
        id v8 = objc_msgSend(v15, sel_bannerImageForWhiteBackground);
        swift_unknownObjectRelease();
        if (!v8) {
          goto LABEL_22;
        }
      }
    }
    else
    {
      id v10 = objc_msgSend(*(id *)(a3 + 40), sel_sourceChannel);
      if (!v10) {
        goto LABEL_22;
      }
      id v11 = objc_msgSend(v10, sel_theme);
      swift_unknownObjectRelease();
      if (!v11) {
        goto LABEL_22;
      }
      id v8 = objc_msgSend(v11, sel_bannerImageForWhiteBackground);
      swift_unknownObjectRelease();
      if (!v8) {
        goto LABEL_22;
      }
    }
  }
  id v16 = objc_msgSend(v8, sel_assetHandle);

  if (v16)
  {
    *(void *)(a4 + 24) = sub_1BFF6C3A8();
    *(void *)(a4 + 32) = sub_1BFF6C3E8();
    *(void *)a4 = v16;
    return result;
  }
LABEL_22:
  *(void *)(a4 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  return result;
}

id sub_1BFF6C244@<X0>(uint64_t a1@<X8>)
{
  id result = (id)FCThumbnailForHeadlineMinimumSize();
  if (result)
  {
    uint64_t v3 = result;
    id result = objc_msgSend(result, sel_thumbnailAssetHandle);
    if (result)
    {
      id v4 = result;
      unint64_t v5 = sub_1BFF6C3A8();
      unint64_t v15 = v5;
      unint64_t v6 = sub_1BFF6C3E8();
      unint64_t v16 = v6;
      *(void *)&long long v14 = v4;
      id v7 = (id)FCCachedThumbnailForHeadline();
      if (v7
        && (id v8 = v7,
            id v9 = objc_msgSend(v7, sel_thumbnailAssetHandle),
            v8,
            v9))
      {
        *((void *)&v12 + 1) = v5;
        unint64_t v13 = v6;

        *(void *)&long long v11 = v9;
      }
      else
      {

        unint64_t v13 = 0;
        long long v11 = 0u;
        long long v12 = 0u;
      }
      *(void *)(a1 + 24) = &type metadata for FormatAssetHandle;
      *(void *)(a1 + 32) = sub_1BFF6C440();
      uint64_t v10 = swift_allocObject();
      *(void *)a1 = v10;
      sub_1BFC773DC(&v14, v10 + 16);
      return (id)sub_1BFF97750((uint64_t)&v11, v10 + 56, (uint64_t (*)(void))sub_1BFF97C98);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1BFF6C3A8()
{
  unint64_t result = qword_1EB87A100;
  if (!qword_1EB87A100)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A100);
  }
  return result;
}

unint64_t sub_1BFF6C3E8()
{
  unint64_t result = qword_1EB890150;
  if (!qword_1EB890150)
  {
    sub_1BFF6C3A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890150);
  }
  return result;
}

unint64_t sub_1BFF6C440()
{
  unint64_t result = qword_1EB882A60;
  if (!qword_1EB882A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB882A60);
  }
  return result;
}

uint64_t sub_1BFF6C494@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v16 = (uint64_t *)((char *)&v22 - v15);
  sub_1BFF235F0(a1, (uint64_t)&v22 - v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v17 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17) == 1)
  {
    sub_1C12AD324((uint64_t)v16, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v18 = *v16;
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 5)
  {
    uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    id v20 = (void *)swift_allocObject();
    v20[2] = v18;
    v20[3] = v19;
    v20[4] = a3;
    v20[5] = a4;
    v20[6] = a5;
    v20[7] = a6;
    *a7 = v20;
    swift_retain();
    swift_retain();
    return sub_1C017C3D4(a4, a5);
  }
LABEL_7:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BFF6C694@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v16 = (uint64_t *)((char *)&v22 - v15);
  sub_1BFF235F0(a1, (uint64_t)&v22 - v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  uint64_t v17 = type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v16, 1, v17) == 1)
  {
    sub_1C12AD324((uint64_t)v16, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_6;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_6:
    sub_1BFF1BA48((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v18 = *v16;
  if (((a2 >> 59) & 0x1E | (a2 >> 2) & 1) == 4)
  {
    uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v18;
    *(void *)(v20 + 24) = v19;
    *(void *)(v20 + 32) = a3;
    *(void *)(v20 + 40) = a4;
    *(void *)(v20 + 48) = a5;
    *(void *)(v20 + 56) = a6;
    *a7 = v20 | 4;
    swift_retain();
    swift_retain();
    return sub_1C017C3D4(a4, a5);
  }
LABEL_7:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BFF6C898(uint64_t a1)
{
  return a1;
}

unint64_t sub_1BFF6C8E4()
{
  unint64_t result = qword_1EB876968;
  if (!qword_1EB876968)
  {
    sub_1C08FC718(255, &qword_1EB876970, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876968);
  }
  return result;
}

void sub_1BFF6C968(unint64_t *a1, uint64_t a2)
{
  id v4 = v2;
  long long v7 = *(_OWORD *)(a2 + 80);
  unsigned char v28[4] = *(_OWORD *)(a2 + 64);
  v28[5] = v7;
  uint64_t v29 = *(void *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 16);
  v28[0] = *(_OWORD *)a2;
  v28[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  uint64_t v28[2] = *(_OWORD *)(a2 + 32);
  v28[3] = v9;
  swift_beginAccess();
  sub_1BFF0D1B8(a1, a2);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v10 = v2[6];
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(v10 + 8 * i + 32);
        sub_1BFF32264(v13);
        sub_1BFF0D378((uint64_t)a1, a2);
        sub_1BFF31E90(v13);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    unint64_t v14 = v2[8];
    if (v14 >> 62 == 1)
    {
      uint64_t v15 = v14 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void *)(v15 + 24);
      sub_1BFE6FA30(v16);
      swift_bridgeObjectRetain();
      sub_1C1144E0C((uint64_t)a1, (uint64_t)v28, v16, v17);
      sub_1BFF0056C(v16);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v18 = v4[10];
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v30 = v18;
      uint64_t v20 = v18 + 48;
      do
      {
        swift_bridgeObjectRetain();
        swift_retain_n();
        sub_1BFF0B0B8(a1, v28);
        v20 += 40;
        swift_bridgeObjectRelease();
        swift_release_n();
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease_n();
    }
    sub_1BFF6CDE8(a1, (uint64_t)v28);
    if ((~v4[13] & 0xF000000000000007) != 0) {
      sub_1BFE2F328(a1, (uint64_t)v28);
    }
    if ((~v4[14] & 0xF000000000000007) != 0) {
      sub_1BFF6CDE8(a1, (uint64_t)v28);
    }
    if ((~v4[15] & 0xF000000000000007) != 0) {
      sub_1BFE2F328(a1, (uint64_t)v28);
    }
    uint64_t v21 = v4[18];
    if (v21)
    {
      swift_beginAccess();
      uint64_t v22 = *(void *)(v21 + 72);
      if (v22)
      {
        swift_bridgeObjectRetain();
        sub_1C0000E48((uint64_t)a1, (uint64_t)v28, v22);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v23 = *(void *)(v21 + 88);
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        swift_bridgeObjectRetain_n();
        char v25 = (uint64_t *)(v23 + 72);
        do
        {
          uint64_t v26 = *v25;
          if (*v25)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C0000E48((uint64_t)a1, (uint64_t)v28, v26);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v25 += 7;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease_n();
      }
    }
    swift_beginAccess();
    uint64_t v27 = v4[23];
    swift_bridgeObjectRetain();
    sub_1C11402C0(a1, v28, v27);
    swift_bridgeObjectRelease();
  }
}

void sub_1BFF6CDE8(unint64_t *a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v18[4] = *(_OWORD *)(a2 + 64);
  v18[5] = v4;
  uint64_t v19 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v18[0] = *(_OWORD *)a2;
  v18[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *v2;
  unint64_t v8 = (unint64_t)*v2 >> 60;
  v18[2] = *(_OWORD *)(a2 + 32);
  v18[3] = v6;
  uint64_t v9 = v3;
  switch(v8)
  {
    case 1uLL:
      sub_1BFF8449C(a1, a2);
      break;
    case 2uLL:
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
      return;
    case 4uLL:
      uint64_t v17 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFFA75C8((uint64_t)a1, (uint64_t)v18, v17);
      if (!v3) {
        sub_1BFF6CDE8(a1, v18);
      }
      swift_release();
      swift_bridgeObjectRelease();
      break;
    default:
      uint64_t v13 = *(void *)(v7 + 16);
      uint64_t v12 = *(void *)(v7 + 24);
      if (v13 && (uint64_t v14 = *(void *)(v13 + 16)) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = 0;
        while (1)
        {
          unint64_t v16 = *(void *)(v13 + 8 * v15 + 32);
          swift_retain();
          sub_1C05CF6A8(a1, a2, v16);
          if (v9) {
            break;
          }
          ++v15;
          swift_release();
          if (v14 == v15)
          {
            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
        }
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
LABEL_9:
        if (v12) {
          sub_1C0001134(a1, v18, v12);
        }
      }
      break;
  }
}

uint64_t FormatImageNode.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  long long v4 = v2;
  unint64_t v21 = v2[4];
  sub_1BFF35EA4(v21);
  FormatSize.bind(binder:context:)(a1, a2);
  if (v3) {
    return sub_1BFF322A8(v21);
  }
  sub_1BFF322A8(v21);
  swift_beginAccess();
  uint64_t v8 = v2[6];
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v9; ++i)
    {
      unint64_t v11 = *(void *)(v8 + 8 * i + 32);
      sub_1BFF32264(v11);
      FormatAdjustment.bind(binder:context:)(a1, a2);
      sub_1BFF31E90(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  if (v2[7]) {
    FormatImageNodeStyle.bind(binder:context:)(a1, a2);
  }
  uint64_t v12 = v2[8];
  if (v12)
  {
    swift_beginAccess();
    uint64_t v13 = *(void *)(v12 + 72);
    if (v13)
    {
      swift_bridgeObjectRetain();
      sub_1C04CFB10(a1, a2, v13);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v14 = *(void *)(v12 + 88);
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain_n();
      unint64_t v16 = (uint64_t *)(v14 + 72);
      do
      {
        uint64_t v17 = *v16;
        if (*v16)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C04CFB10(a1, a2, v17);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v16 += 7;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease_n();
    }
  }
  swift_retain();
  FormatAsyncImageContent.bind(binder:context:)(a1, a2);
  swift_release();
  uint64_t result = swift_beginAccess();
  unint64_t v18 = v4[11];
  if (v18 >> 62 == 1)
  {
    unint64_t v19 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v20 = *(void *)((v18 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    sub_1BFE6FA30(v18);
    sub_1BFE6FA30(v19);
    swift_bridgeObjectRetain();
    sub_1C052A7F4(a1, a2, v19, v20);
    sub_1BFF0056C(v19);
    swift_bridgeObjectRelease();
    return sub_1BFF0056C(v18);
  }
  return result;
}

uint64_t FormatImageNodeStyle.bind(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  long long v5 = v2;
  swift_beginAccess();
  uint64_t v8 = v2[6];
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    long long v10 = *(_OWORD *)(v8 + 192);
    long long v67 = *(_OWORD *)(v8 + 176);
    long long v68 = v10;
    long long v69 = *(_OWORD *)(v8 + 208);
    uint64_t v70 = *(void *)(v8 + 224);
    long long v11 = *(_OWORD *)(v8 + 128);
    long long v63 = *(_OWORD *)(v8 + 112);
    long long v64 = v11;
    long long v12 = *(_OWORD *)(v8 + 160);
    long long v65 = *(_OWORD *)(v8 + 144);
    long long v66 = v12;
    long long v13 = *(_OWORD *)(v8 + 48);
    long long v14 = *(_OWORD *)(v8 + 80);
    long long v15 = *(_OWORD *)(v8 + 96);
    long long v60 = *(_OWORD *)(v8 + 64);
    long long v61 = v14;
    long long v62 = v15;
    long long v58 = *(_OWORD *)(v8 + 32);
    long long v59 = v13;
    sub_1C05DC8FC((uint64_t)&v58);
    FormatImageNodeStyle.Selector.bind(binder:context:)(a1, a2);
    if (v3)
    {
      sub_1C05DCA1C((uint64_t)&v58);
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v16 = 232;
    while (1)
    {
      sub_1C05DCA1C((uint64_t)&v58);
      if (!--v9) {
        break;
      }
      uint64_t v17 = v8 + v16;
      long long v18 = *(_OWORD *)(v8 + v16);
      v16 += 200;
      long long v58 = v18;
      long long v19 = *(_OWORD *)(v17 + 16);
      long long v20 = *(_OWORD *)(v17 + 32);
      long long v21 = *(_OWORD *)(v17 + 64);
      long long v61 = *(_OWORD *)(v17 + 48);
      long long v62 = v21;
      long long v59 = v19;
      long long v60 = v20;
      long long v22 = *(_OWORD *)(v17 + 80);
      long long v23 = *(_OWORD *)(v17 + 96);
      long long v24 = *(_OWORD *)(v17 + 128);
      long long v65 = *(_OWORD *)(v17 + 112);
      long long v66 = v24;
      long long v63 = v22;
      long long v64 = v23;
      long long v25 = *(_OWORD *)(v17 + 144);
      long long v26 = *(_OWORD *)(v17 + 160);
      long long v27 = *(_OWORD *)(v17 + 176);
      uint64_t v70 = *(void *)(v17 + 192);
      long long v68 = v26;
      long long v69 = v27;
      long long v67 = v25;
      sub_1C05DC8FC((uint64_t)&v58);
      FormatImageNodeStyle.Selector.bind(binder:context:)(a1, a2);
    }
    swift_bridgeObjectRelease_n();
  }
  uint64_t v29 = v2[7];
  if (v29)
  {
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v31 = (unsigned char *)(v29 + 40);
      do
      {
        if ((*v31 & 1) == 0)
        {
          *(void *)&long long v58 = *((void *)v31 - 1);
          uint64_t v32 = v58;
          swift_retain_n();
          FormatFloat.bind(binder:context:)(a1, a2);
          if (v3)
          {
            sub_1BFF49984(v32, 0);
            sub_1BFF49984(v32, 0);
            return swift_bridgeObjectRelease_n();
          }
          sub_1BFF49984(v32, 0);
          sub_1BFF49984(v32, 0);
        }
        v31 += 16;
        --v30;
      }
      while (v30);
      swift_bridgeObjectRelease_n();
    }
  }
  uint64_t result = swift_beginAccess();
  uint64_t v33 = v2[8];
  if (v33)
  {
    swift_bridgeObjectRetain();
    sub_1C04DA258(a1, a2, v33);
    if (v3) {
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  uint64_t v34 = v5[9];
  if ((~v34 & 0xF000000000000007) != 0)
  {
    swift_retain();
    FormatBackground.bind(binder:context:)(a1, a2);
    if (v3) {
      return sub_1BFEF68C0(v34);
    }
    uint64_t result = sub_1BFEF68C0(v34);
  }
  uint64_t v35 = v5[10];
  if (!v35 || (uint64_t result = sub_1C04CDF64(a1, a2, v35), !v3))
  {
    unint64_t v36 = v5[15];
    if (v36 >= 3)
    {
      if (v36 != 3)
      {
        unint64_t v37 = *(void *)(v36 + 16);
        unint64_t v38 = *(void *)(v36 + 24);
        sub_1BFEF6854(v5[15]);
        sub_1BFEF6A90(v37);
        sub_1BFEF6A90(v38);
        sub_1BFFB3BF0(a1, a2, v37, v38);
        sub_1BFEF70CC(v37);
        sub_1BFEF70CC(v38);
        uint64_t result = sub_1BFEF68D8(v36);
        if (v3) {
          return result;
        }
      }
    }
    else
    {
      uint64_t result = sub_1BFEF68D8(v5[15]);
    }
    int v39 = *((unsigned __int8 *)v5 + 216);
    if (v39 != 254)
    {
      uint64_t v52 = v5[17];
      uint64_t v53 = v5[18];
      uint64_t v42 = v5[21];
      uint64_t v54 = v5[19];
      uint64_t v55 = v5[20];
      uint64_t v56 = v5[23];
      uint64_t v57 = v5[22];
      uint64_t v43 = v5[25];
      uint64_t v71 = v5[24];
      uint64_t v44 = v5[26];
      swift_retain();
      FormatColor.bind(binder:context:)(a1, a2);
      if (v3) {
        return sub_1BFEF8738(v52, v53, v54, v55, v42, v57, v56, v71, v43, v44, v39);
      }
      uint64_t v51 = v44;
      uint64_t v45 = v43;
      uint64_t v46 = v71;
      uint64_t v47 = v56;
      uint64_t v48 = v57;
      switch(v39)
      {
        case 0:
          break;
        case 1:
          uint64_t v49 = v71;
          sub_1C053FAE0(a1, a2);
          unsigned __int8 v50 = 1;
          goto LABEL_46;
        case 2:
          uint64_t v49 = v71;
          sub_1C053FAE0(a1, a2);
          sub_1C053FAE0(a1, a2);
          uint64_t v4 = 0;
          unsigned __int8 v50 = 2;
LABEL_46:
          uint64_t result = sub_1BFEF8738(v52, v53, v54, v55, v42, v57, v56, v49, v45, v51, v50);
          goto LABEL_33;
        case 3:
        case 5:
          sub_1C053FAE0(a1, a2);
          sub_1C053FAE0(a1, a2);
          uint64_t v4 = 0;
          goto LABEL_47;
        case 4:
          sub_1C053FAE0(a1, a2);
LABEL_47:
          uint64_t v46 = v71;
          break;
        default:
          uint64_t v46 = v56;
          uint64_t v47 = v57;
          uint64_t v48 = v42;
          break;
      }
      uint64_t result = sub_1BFEF8738(v52, v53, v54, v55, v42, v48, v47, v46, v45, v51, v39);
    }
LABEL_33:
    uint64_t v40 = v5[28];
    if ((~v40 & 0xF000000000000007) == 0
      || (swift_retain(), FormatColor.bind(binder:context:)(a1, a2), uint64_t result = sub_1BFDC11BC(v40), !v4))
    {
      uint64_t v41 = v5[30];
      if (v41 != 1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        FormatImageNodeRequest.bind(binder:context:)(a1, a2);
        return sub_1BFEF68E8(v41);
      }
    }
  }
  return result;
}

uint64_t sub_1BFF6D9F0(uint64_t a1)
{
  return sub_1BFF6D9F8(a1, (long long *)(v1 + 16));
}

uint64_t sub_1BFF6D9F8(uint64_t a1, long long *a2)
{
  long long v17 = *a2;
  long long v3 = v17;
  sub_1BFF59A8C((uint64_t)&v17);
  uint64_t v4 = sub_1BFF303E0(v3, *((uint64_t *)&v3 + 1));
  uint64_t v6 = v5;
  sub_1BFF5E6C8((uint64_t)&v17);
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_1BFEF2D8C(v4, v6);
    if (v9)
    {
      uint64_t v10 = *(void *)(v7 + 56) + 40 * v8;
      uint64_t v11 = *(void *)v10;
      unint64_t v12 = *(void *)(v10 + 8);
      uint64_t v13 = *(void *)(v10 + 16);
      uint64_t v14 = *(void *)(v10 + 24);
      int v15 = *(unsigned __int8 *)(v10 + 32);
      sub_1BFF6DB28(*(void *)v10, v12, v13, v14, *(unsigned char *)(v10 + 32));
      swift_bridgeObjectRelease_n();
      if (v15 == 255) {
        return 1;
      }
      sub_1BFF72054(v11, v12, v13, v14, v15);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1BFF6DB28(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_1BFF7D1D4(result, a2, a3, a4, a5);
  }
  return result;
}

void sub_1BFF6DB3C()
{
  if (!qword_1EB884C40)
  {
    type metadata accessor for FormatNodeStateData.Data();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884C40);
    }
  }
}

uint64_t sub_1BFF6DBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatPropertyDefinition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for FormatPropertyDefinition(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v18;
      uint64_t v19 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v19;
      uint64_t v20 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v20;
      uint64_t v21 = *(void *)(a2 + 48);
      uint64_t v22 = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v23 = *(void *)(a2 + 72);
      *(void *)(a1 + 48) = v21;
      *(void *)(a1 + 56) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((~v23 & 0xF000000000000007) != 0) {
        swift_retain();
      }
      *(void *)(a1 + 72) = v23;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      long long v24 = &qword_1EB88E9B8;
      long long v25 = &type metadata for FormatColor;
      long long v26 = sub_1C003F2E8;
      goto LABEL_33;
    case 2u:
      uint64_t v27 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v27;
      uint64_t v28 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v28;
      uint64_t v29 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v29;
      uint64_t v30 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v30;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      sub_1BFF71B30();
      uint64_t v32 = v31[13];
      uint64_t v124 = (void *)(a1 + v32);
      __dsta = v31;
      uint64_t v121 = (const void *)(a2 + v32);
      uint64_t v33 = sub_1C151631C();
      uint64_t v34 = *(void *)(v33 - 8);
      uint64_t v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v35(v121, 1, v33))
      {
        sub_1BFE79B90(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
        size_t v37 = *(void *)(*(void *)(v36 - 8) + 64);
        unint64_t v38 = v124;
        int v39 = v121;
        goto LABEL_20;
      }
      uint64_t v115 = v124;
      (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v124, v121, v33);
      goto LABEL_41;
    case 3u:
      uint64_t v40 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v40;
      uint64_t v41 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v41;
      uint64_t v42 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v42;
      uint64_t v43 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v43;
      uint64_t v44 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = v44;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      uint64_t v45 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v45;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      uint64_t v46 = *(int *)(type metadata accessor for FormatEnumPropertyDefinition(0) + 56);
      __dstb = (void *)(a1 + v46);
      uint64_t v120 = (const void *)(a2 + v46);
      uint64_t v47 = sub_1C1518CDC();
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v119 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v119(v120, 1, v47))
      {
        sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        size_t v15 = *(void *)(*(void *)(v49 - 8) + 64);
        uint64_t v16 = __dstb;
        long long v17 = v120;
        goto LABEL_17;
      }
      (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(__dstb, v120, v47);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(__dstb, 0, 1, v47);
      break;
    case 4u:
      uint64_t v50 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v50;
      uint64_t v51 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v51;
      uint64_t v52 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v52;
      uint64_t v53 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v53;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v54 = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 72) = v54;
      *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
      goto LABEL_13;
    case 5u:
      uint64_t v56 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v56;
      uint64_t v57 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v57;
      uint64_t v58 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v58;
      uint64_t v59 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v59;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v60 = *(void *)(a2 + 72);
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 72) = v60;
      *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
LABEL_13:
      uint64_t v61 = *(int *)(v55 + 64);
      __dstc = (void *)(a1 + v61);
      long long v62 = (const void *)(a2 + v61);
      uint64_t v11 = sub_1C1518CDC();
      uint64_t v12 = *(void *)(v11 - 8);
      long long v63 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v63(v62, 1, v11)) {
        goto LABEL_16;
      }
      long long v64 = __dstc;
      (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dstc, v62, v11);
      goto LABEL_36;
    case 6u:
      uint64_t v65 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v65;
      uint64_t v66 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v66;
      uint64_t v67 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v67;
      uint64_t v68 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v68;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v69 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v69;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
      uint64_t v71 = *(int *)(v70 + 64);
      __dstc = (void *)(a1 + v71);
      long long v62 = (const void *)(a2 + v71);
      uint64_t v72 = sub_1C1518CDC();
      uint64_t v73 = *(void *)(v72 - 8);
      unint64_t v122 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v73 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v122(v62, 1, v72))
      {
LABEL_16:
        sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        size_t v15 = *(void *)(*(void *)(v74 - 8) + 64);
        uint64_t v16 = __dstc;
        long long v17 = v62;
        goto LABEL_17;
      }
      (*(void (**)(void *, const void *, uint64_t))(v73 + 16))(__dstc, v62, v72);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v73 + 56))(__dstc, 0, 1, v72);
      break;
    case 7u:
      uint64_t v75 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v75;
      uint64_t v76 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v76;
      uint64_t v77 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v77;
      uint64_t v78 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v78;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      sub_1BFF719C0();
      uint64_t v80 = v79[13];
      long long v125 = (void *)(a1 + v80);
      __dsta = v79;
      uint64_t v81 = (const void *)(a2 + v80);
      uint64_t v33 = sub_1C1515FDC();
      uint64_t v34 = *(void *)(v33 - 8);
      long long v123 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v123(v81, 1, v33))
      {
        sub_1BFE79B90(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        size_t v37 = *(void *)(*(void *)(v82 - 8) + 64);
        unint64_t v38 = v125;
        int v39 = v81;
LABEL_20:
        memcpy(v38, v39, v37);
      }
      else
      {
        uint64_t v115 = v125;
        (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v125, v81, v33);
LABEL_41:
        (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v115, 0, 1, v33);
      }
      *(unsigned char *)(a1 + __dsta[14]) = *(unsigned char *)(a2 + __dsta[14]);
      *(void *)(a1 + __dsta[15]) = *(void *)(a2 + __dsta[15]);
      uint64_t v116 = __dsta[16];
      uint64_t v109 = (void *)(a1 + v116);
      uint64_t v110 = (const void *)(a2 + v116);
      uint64_t v111 = sub_1C1518CDC();
      uint64_t v112 = *(void *)(v111 - 8);
      uint64_t v117 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v112 + 48);
      swift_bridgeObjectRetain();
      if (v117(v110, 1, v111))
      {
LABEL_34:
        sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        memcpy(v109, v110, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
LABEL_43:
        (*(void (**)(void *, const void *, uint64_t))(v112 + 16))(v109, v110, v111);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
      }
      break;
    case 8u:
      uint64_t v83 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v83;
      uint64_t v84 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v84;
      uint64_t v85 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v85;
      uint64_t v86 = *(void *)(a2 + 48);
      uint64_t v87 = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v88 = *(void *)(a2 + 72);
      *(void *)(a1 + 48) = v86;
      *(void *)(a1 + 56) = v87;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((~v88 & 0xF000000000000007) != 0) {
        swift_retain();
      }
      *(void *)(a1 + 72) = v88;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      long long v24 = &qword_1EB88E9A0;
      long long v25 = &type metadata for FormatAsyncImageContent;
      long long v26 = sub_1C0036630;
      goto LABEL_33;
    case 9u:
      uint64_t v89 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v89;
      uint64_t v90 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v90;
      uint64_t v91 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v91;
      uint64_t v92 = *(void *)(a2 + 48);
      uint64_t v93 = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v94 = *(void *)(a2 + 72);
      *(void *)(a1 + 48) = v92;
      *(void *)(a1 + 56) = v93;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((~v94 & 0xF000000000000007) != 0) {
        swift_retain();
      }
      *(void *)(a1 + 72) = v94;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      long long v24 = &qword_1EB88E998;
      long long v25 = &type metadata for FormatVideoNodeContent;
      long long v26 = sub_1C00738F0;
      goto LABEL_33;
    case 0xAu:
      uint64_t v95 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v95;
      uint64_t v96 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v96;
      uint64_t v97 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v97;
      uint64_t v98 = *(void *)(a2 + 48);
      uint64_t v99 = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v100 = *(void *)(a2 + 72);
      *(void *)(a1 + 48) = v98;
      *(void *)(a1 + 56) = v99;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((~v100 & 0xF000000000000007) != 0) {
        swift_retain();
      }
      *(void *)(a1 + 72) = v100;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      long long v24 = &qword_1EB88E9B0;
      long long v25 = &type metadata for FormatFont;
      long long v26 = sub_1C0084C58;
      goto LABEL_33;
    case 0xBu:
      uint64_t v101 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v101;
      uint64_t v102 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v102;
      uint64_t v103 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v103;
      uint64_t v104 = *(void *)(a2 + 48);
      uint64_t v105 = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v106 = *(void *)(a2 + 72);
      *(void *)(a1 + 48) = v104;
      *(void *)(a1 + 56) = v105;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((~v106 & 0xF000000000000007) != 0) {
        swift_retain();
      }
      *(void *)(a1 + 72) = v106;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      long long v24 = &qword_1EB88E9A8;
      long long v25 = &type metadata for FormatVideoPlayerContent;
      long long v26 = sub_1C006F9DC;
LABEL_33:
      sub_1BFF718BC(0, v24, (uint64_t (*)(void))v26, (uint64_t)v25, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
      uint64_t v108 = *(int *)(v107 + 64);
      uint64_t v109 = (void *)(a1 + v108);
      uint64_t v110 = (const void *)(a2 + v108);
      uint64_t v111 = sub_1C1518CDC();
      uint64_t v112 = *(void *)(v111 - 8);
      uint64_t v113 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v112 + 48);
      swift_bridgeObjectRetain();
      if (v113(v110, 1, v111)) {
        goto LABEL_34;
      }
      goto LABEL_43;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      uint64_t v7 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v7;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
      *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
      uint64_t v9 = *(int *)(v8 + 64);
      __dst = (void *)(a1 + v9);
      uint64_t v10 = (const void *)(a2 + v9);
      uint64_t v11 = sub_1C1518CDC();
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13(v10, 1, v11))
      {
        sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
        size_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
        uint64_t v16 = __dst;
        long long v17 = v10;
LABEL_17:
        memcpy(v16, v17, v15);
      }
      else
      {
        long long v64 = __dst;
        (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
LABEL_36:
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v64, 0, 1, v11);
      }
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t FormatPropertyDefinition.encode(to:)(void *a1)
{
  sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v213 = (uint64_t)&v190 - v3;
  sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v212 = (uint64_t)&v190 - v5;
  sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v211 = (uint64_t)&v190 - v7;
  sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v210 = (uint64_t)&v190 - v9;
  sub_1BFF719C0();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v209 = (uint64_t)&v190 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v208 = (uint64_t)&v190 - v13;
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v207 = (uint64_t)&v190 - v15;
  sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v206 = (uint64_t)&v190 - v17;
  uint64_t v18 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v205 = (uint64_t)&v190 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71B30();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v204 = (uint64_t)&v190 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v203 = (uint64_t)&v190 - v23;
  uint64_t v24 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v202 = (char *)&v190 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v201 = (char *)&v190 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v200 = (char *)&v190 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v199 = (char *)&v190 - v31;
  MEMORY[0x1F4188790](v32);
  double v198 = (char *)&v190 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v196 = (char *)&v190 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v195 = (char *)&v190 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v194 = (char *)&v190 - v39;
  MEMORY[0x1F4188790](v40);
  uint64_t v193 = (char *)&v190 - v41;
  MEMORY[0x1F4188790](v42);
  double v192 = (char *)&v190 - v43;
  MEMORY[0x1F4188790](v44);
  uint64_t v191 = (char *)&v190 - v45;
  MEMORY[0x1F4188790](v46);
  uint64_t v190 = (char *)&v190 - v47;
  sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v48 - 8);
  uint64_t v197 = (uint64_t)&v190 - v49;
  uint64_t v50 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v50);
  uint64_t v52 = (char *)&v190 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF718BC(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v218 = v53;
  uint64_t v214 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v55 = (char *)&v190 - v54;
  uint64_t v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  long long v217 = v55;
  sub_1C1520F0C();
  sub_1BFF6DBA4(v215, (uint64_t)v52);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v66 = v203;
      sub_1C0BD50B8((uint64_t)v52, v203, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor);
      uint64_t v67 = v56;
      uint64_t v68 = v56[3];
      uint64_t v69 = v56[4];
      __swift_project_boxed_opaque_existential_1(v56, v68);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v70 = sub_1C151928C();
      uint64_t v71 = __swift_project_value_buffer(v70, (uint64_t)qword_1EB93CAB0);
      uint64_t v72 = (uint64_t)v191;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16))(v191, v71, v70);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v73 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v73);
      *(&v190 - 2) = (char *)v66;
      uint64_t v74 = v216;
      sub_1BFE97CE8(v72, (uint64_t)sub_1C0BEA410, (uint64_t)(&v190 - 4), v68, v69);
      sub_1C0BF0490(v72, type metadata accessor for FormatVersionRequirement);
      if (v74)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 7;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        uint64_t v163 = v217;
        uint64_t v162 = v218;
        sub_1C152080C();
        sub_1C0BDB91C(v67);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v163, v162);
      }
      uint64_t v164 = &qword_1EB88E9B8;
      uint64_t v165 = &type metadata for FormatColor;
      uint64_t v166 = sub_1C003F2E8;
      uint64_t v167 = v66;
      goto LABEL_76;
    case 2u:
      uint64_t v75 = (uint64_t)v52;
      uint64_t v76 = v204;
      sub_1BFF71A74(v75, v204, (uint64_t (*)(void))sub_1BFF71B30);
      uint64_t v77 = a1[3];
      uint64_t v78 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v77);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v79 = sub_1C151928C();
      uint64_t v80 = __swift_project_value_buffer(v79, (uint64_t)qword_1EB93CAB0);
      uint64_t v81 = (uint64_t)v192;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16))(v192, v80, v79);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v82 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v82);
      *(&v190 - 2) = (char *)v76;
      uint64_t v83 = v216;
      sub_1BFE97CE8(v81, (uint64_t)sub_1C0BEA3C4, (uint64_t)(&v190 - 4), v77, v78);
      sub_1C0BF0490(v81, type metadata accessor for FormatVersionRequirement);
      if (v83)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 1;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        uint64_t v169 = v217;
        uint64_t v168 = v218;
        sub_1C152080C();
        sub_1C0BDC378(v56);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v169, v168);
      }
      double v170 = (uint64_t (*)(void))sub_1BFF71B30;
      return sub_1C0BF0490(v76, v170);
    case 3u:
      uint64_t v84 = (uint64_t)v52;
      uint64_t v76 = v205;
      sub_1BFF71A74(v84, v205, type metadata accessor for FormatEnumPropertyDefinition);
      uint64_t v85 = a1[3];
      uint64_t v86 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v85);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v87 = sub_1C151928C();
      uint64_t v88 = __swift_project_value_buffer(v87, (uint64_t)qword_1EB93CAB0);
      uint64_t v89 = (uint64_t)v193;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 16))(v193, v88, v87);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v90 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v90);
      *(&v190 - 2) = (char *)v76;
      uint64_t v91 = v216;
      sub_1BFE97CE8(v89, (uint64_t)sub_1C0BEA378, (uint64_t)(&v190 - 4), v85, v86);
      sub_1C0BF0490(v89, type metadata accessor for FormatVersionRequirement);
      if (v91)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 2;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        uint64_t v172 = v217;
        uint64_t v171 = v218;
        sub_1C152080C();
        FormatEnumPropertyDefinition.encode(to:)(a1);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v172, v171);
      }
      double v170 = type metadata accessor for FormatEnumPropertyDefinition;
      return sub_1C0BF0490(v76, v170);
    case 4u:
      uint64_t v92 = (uint64_t)v52;
      uint64_t v93 = v206;
      sub_1C0BD50B8(v92, v206, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
      uint64_t v94 = a1[3];
      uint64_t v95 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v94);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v96 = sub_1C151928C();
      uint64_t v97 = __swift_project_value_buffer(v96, (uint64_t)qword_1EB93CAB0);
      uint64_t v98 = (uint64_t)v194;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v96 - 8) + 16))(v194, v97, v96);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v99 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v99);
      *(&v190 - 2) = (char *)v93;
      uint64_t v100 = v216;
      sub_1BFE97CE8(v98, (uint64_t)sub_1C0BEA370, (uint64_t)(&v190 - 4), v94, v95);
      sub_1C0BF0490(v98, type metadata accessor for FormatVersionRequirement);
      if (v100)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 3;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        uint64_t v174 = v217;
        uint64_t v173 = v218;
        sub_1C152080C();
        sub_1C0BDCDB4(a1);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v174, v173);
      }
      uint64_t v164 = &qword_1EB88E990;
      uint64_t v165 = (ValueMetadata *)MEMORY[0x1E4FBC958];
      uint64_t v175 = sub_1C0092008;
      goto LABEL_75;
    case 5u:
      uint64_t v101 = (uint64_t)v52;
      uint64_t v102 = v207;
      sub_1C0BD51AC(v101, v207);
      uint64_t v103 = a1[3];
      uint64_t v104 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v103);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v105 = sub_1C151928C();
      uint64_t v106 = __swift_project_value_buffer(v105, (uint64_t)qword_1EB93CAB0);
      uint64_t v107 = (uint64_t)v195;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v105 - 8) + 16))(v195, v106, v105);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v108 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v108);
      *(&v190 - 2) = (char *)v102;
      uint64_t v109 = v216;
      sub_1BFE97CE8(v107, (uint64_t)sub_1C0BEA368, (uint64_t)(&v190 - 4), v103, v104);
      sub_1C0BF0490(v107, type metadata accessor for FormatVersionRequirement);
      if (v109)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 4;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        unint64_t v177 = v217;
        uint64_t v176 = v218;
        sub_1C152080C();
        sub_1C0BDD814(a1);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v177, v176);
      }
      return sub_1C0BD523C(v102);
    case 6u:
      uint64_t v110 = (uint64_t)v52;
      uint64_t v111 = v208;
      sub_1BFF7C110(v110, v208);
      uint64_t v112 = a1[3];
      uint64_t v113 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v112);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v114 = sub_1C151928C();
      uint64_t v115 = __swift_project_value_buffer(v114, (uint64_t)qword_1EB93CAB0);
      uint64_t v116 = (uint64_t)v196;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v114 - 8) + 16))(v196, v115, v114);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v117 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v117);
      *(&v190 - 2) = (char *)v111;
      uint64_t v118 = v216;
      sub_1BFE97CE8(v116, (uint64_t)sub_1C0BEA360, (uint64_t)(&v190 - 4), v112, v113);
      sub_1C0BF0490(v116, type metadata accessor for FormatVersionRequirement);
      if (v118)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 5;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        uint64_t v179 = v217;
        uint64_t v178 = v218;
        sub_1C152080C();
        sub_1BFFC5284(a1);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v179, v178);
      }
      return sub_1BFFB476C(v111);
    case 7u:
      uint64_t v119 = (uint64_t)v52;
      uint64_t v76 = v209;
      sub_1BFF71A74(v119, v209, (uint64_t (*)(void))sub_1BFF719C0);
      uint64_t v120 = a1[3];
      uint64_t v121 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v120);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v122 = sub_1C151928C();
      uint64_t v123 = __swift_project_value_buffer(v122, (uint64_t)qword_1EB93CAB0);
      uint64_t v124 = (uint64_t)v198;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v122 - 8) + 16))(v198, v123, v122);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v125 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v125);
      *(&v190 - 2) = (char *)v76;
      uint64_t v126 = v216;
      sub_1BFE97CE8(v124, (uint64_t)sub_1C0BEA314, (uint64_t)(&v190 - 4), v120, v121);
      sub_1C0BF0490(v124, type metadata accessor for FormatVersionRequirement);
      if (v126)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 6;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        uint64_t v181 = v217;
        uint64_t v180 = v218;
        sub_1C152080C();
        sub_1BFE7F150(a1);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v181, v180);
      }
      double v170 = (uint64_t (*)(void))sub_1BFF719C0;
      return sub_1C0BF0490(v76, v170);
    case 8u:
      uint64_t v127 = (uint64_t)v52;
      uint64_t v93 = v210;
      sub_1C0BD50B8(v127, v210, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent);
      uint64_t v128 = a1[3];
      uint64_t v129 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v128);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v130 = sub_1C151928C();
      uint64_t v131 = __swift_project_value_buffer(v130, (uint64_t)qword_1EB93CA50);
      uint64_t v132 = (uint64_t)v199;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v130 - 8) + 16))(v199, v131, v130);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v133 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v133);
      *(&v190 - 2) = (char *)v93;
      uint64_t v134 = v216;
      sub_1BFE97CE8(v132, (uint64_t)sub_1C0BEA30C, (uint64_t)(&v190 - 4), v128, v129);
      sub_1C0BF0490(v132, type metadata accessor for FormatVersionRequirement);
      if (v134)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 8;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        unint64_t v183 = v217;
        uint64_t v182 = v218;
        sub_1C152080C();
        sub_1C0BDE268(a1);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v183, v182);
      }
      uint64_t v164 = &qword_1EB88E9A0;
      uint64_t v165 = &type metadata for FormatAsyncImageContent;
      uint64_t v175 = sub_1C0036630;
      goto LABEL_75;
    case 9u:
      uint64_t v135 = (uint64_t)v52;
      uint64_t v93 = v211;
      sub_1C0BD50B8(v135, v211, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent);
      uint64_t v136 = a1[3];
      uint64_t v137 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v136);
      if (qword_1EB887620 != -1) {
        swift_once();
      }
      uint64_t v138 = sub_1C151928C();
      uint64_t v139 = __swift_project_value_buffer(v138, (uint64_t)qword_1EB93CA50);
      uint64_t v140 = (uint64_t)v200;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v138 - 8) + 16))(v200, v139, v138);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v141 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v141);
      *(&v190 - 2) = (char *)v93;
      uint64_t v142 = v216;
      sub_1BFE97CE8(v140, (uint64_t)sub_1C0BEA304, (uint64_t)(&v190 - 4), v136, v137);
      sub_1C0BF0490(v140, type metadata accessor for FormatVersionRequirement);
      if (v142)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 9;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        unint64_t v185 = v217;
        uint64_t v184 = v218;
        sub_1C152080C();
        sub_1C0BDECC4(a1);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v185, v184);
      }
      uint64_t v164 = &qword_1EB88E998;
      uint64_t v165 = &type metadata for FormatVideoNodeContent;
      uint64_t v175 = sub_1C00738F0;
      goto LABEL_75;
    case 0xAu:
      uint64_t v143 = (uint64_t)v52;
      uint64_t v93 = v212;
      sub_1C0BD50B8(v143, v212, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont);
      uint64_t v144 = a1[3];
      uint64_t v145 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v144);
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v146 = sub_1C151928C();
      uint64_t v147 = __swift_project_value_buffer(v146, (uint64_t)qword_1EB93CA98);
      uint64_t v148 = (uint64_t)v201;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v146 - 8) + 16))(v201, v147, v146);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v149 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v149);
      *(&v190 - 2) = (char *)v93;
      uint64_t v150 = v216;
      sub_1BFE97CE8(v148, (uint64_t)sub_1C0BEA2FC, (uint64_t)(&v190 - 4), v144, v145);
      sub_1C0BF0490(v148, type metadata accessor for FormatVersionRequirement);
      if (v150)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 10;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        uint64_t v187 = v217;
        uint64_t v186 = v218;
        sub_1C152080C();
        sub_1C0BDF720(a1);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v187, v186);
      }
      uint64_t v164 = &qword_1EB88E9B0;
      uint64_t v165 = &type metadata for FormatFont;
      uint64_t v175 = sub_1C0084C58;
      goto LABEL_75;
    case 0xBu:
      uint64_t v151 = (uint64_t)v52;
      uint64_t v93 = v213;
      sub_1C0BD50B8(v151, v213, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent);
      uint64_t v152 = a1[3];
      uint64_t v153 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v152);
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v154 = sub_1C151928C();
      uint64_t v155 = __swift_project_value_buffer(v154, (uint64_t)qword_1EB93CAE0);
      uint64_t v156 = (uint64_t)v202;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v154 - 8) + 16))(v202, v155, v154);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v157 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v157);
      *(&v190 - 2) = (char *)v93;
      uint64_t v158 = v216;
      sub_1BFE97CE8(v156, (uint64_t)sub_1C0BEA2F4, (uint64_t)(&v190 - 4), v152, v153);
      sub_1C0BF0490(v156, type metadata accessor for FormatVersionRequirement);
      if (v158)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 11;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        uint64_t v189 = v217;
        uint64_t v188 = v218;
        sub_1C152080C();
        sub_1C0BE017C(a1);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v189, v188);
      }
      uint64_t v164 = &qword_1EB88E9A8;
      uint64_t v165 = &type metadata for FormatVideoPlayerContent;
      uint64_t v175 = sub_1C006F9DC;
LABEL_75:
      uint64_t v166 = v175;
      uint64_t v167 = v93;
LABEL_76:
      uint64_t result = sub_1C0BD513C(v167, v164, (uint64_t (*)(void))v166, (uint64_t)v165);
      break;
    default:
      uint64_t v57 = (uint64_t)v52;
      uint64_t v58 = v197;
      sub_1BFFBFF9C(v57, v197);
      uint64_t v59 = a1[3];
      uint64_t v60 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v59);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v61 = sub_1C151928C();
      uint64_t v62 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93CAB0);
      uint64_t v63 = (uint64_t)v190;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16))(v190, v62, v61);
      type metadata accessor for FormatVersionRequirement.Value(0);
      uint64_t v64 = swift_storeEnumTagMultiPayload();
      MEMORY[0x1F4188790](v64);
      *(&v190 - 2) = (char *)v58;
      uint64_t v65 = v216;
      sub_1BFE97CE8(v63, (uint64_t)sub_1C0BEA418, (uint64_t)(&v190 - 4), v59, v60);
      sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
      if (v65)
      {
        (*(void (**)(char *, uint64_t))(v214 + 8))(v217, v218);
      }
      else
      {
        char v221 = 0;
        sub_1BFF08118();
        uint64_t v219 = 0;
        uint64_t v220 = 0;
        uint64_t v160 = v217;
        uint64_t v159 = v218;
        sub_1C152080C();
        sub_1BFE8789C(a1);
        (*(void (**)(char *, uint64_t))(v214 + 8))(v160, v159);
      }
      uint64_t result = sub_1C001A1B0(v58);
      break;
  }
  return result;
}

uint64_t FormatPropertyDefinition.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  sub_1BFF718BC(0, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v66 = (char *)&v54 - v4;
  sub_1BFF718BC(0, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v64 = (uint64_t)&v54 - v6;
  sub_1BFF718BC(0, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v63 = (uint64_t)&v54 - v8;
  sub_1BFF718BC(0, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v62 = (uint64_t)&v54 - v10;
  sub_1BFF719C0();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v61 = (uint64_t)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v60 = (uint64_t)&v54 - v14;
  sub_1BFF71970(0, &qword_1EB88E9D0, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v59 = (uint64_t)&v54 - v16;
  sub_1BFF718BC(0, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v58 = (uint64_t)&v54 - v18;
  uint64_t v19 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v57 = (uint64_t)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF71B30();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v56 = (uint64_t)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF718BC(0, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v55 = (uint64_t)&v54 - v24;
  sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v54 - v26;
  sub_1BFF718BC(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v29 = v28;
  uint64_t v65 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v54 - v30;
  uint64_t v32 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v54 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a1[3];
  uint64_t v68 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v35);
  sub_1BFEB6A24();
  uint64_t v36 = (uint64_t)v69;
  sub_1C1520EBC();
  if (v36)
  {
    uint64_t v37 = (uint64_t)v68;
  }
  else
  {
    uint64_t v69 = v27;
    uint64_t v38 = v65;
    uint64_t v39 = (uint64_t)v66;
    uint64_t v40 = v67;
    sub_1BFF71ADC();
    v70[0] = 0;
    v70[1] = 0;
    sub_1C15206EC();
    uint64_t v54 = v31;
    uint64_t v37 = (uint64_t)v68;
    uint64_t v41 = v38;
    switch(v71)
    {
      case 1:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        uint64_t v43 = v56;
        sub_1C0BD7500(v70, v56);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v29);
        sub_1BFF71A74(v43, (uint64_t)v34, (uint64_t (*)(void))sub_1BFF71B30);
        break;
      case 2:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        uint64_t v44 = v57;
        FormatEnumPropertyDefinition.init(from:)(v70, v57);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v29);
        sub_1BFF71A74(v44, (uint64_t)v34, type metadata accessor for FormatEnumPropertyDefinition);
        break;
      case 3:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        uint64_t v45 = v58;
        sub_1C0BD7FD4(v70, v58);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v29);
        sub_1C0BD50B8(v45, (uint64_t)v34, &qword_1EB88E990, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
        break;
      case 4:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        uint64_t v46 = v59;
        sub_1C0BD8938(v70, v59);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v29);
        sub_1C0BD51AC(v46, (uint64_t)v34);
        break;
      case 5:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        uint64_t v47 = v60;
        sub_1BFF86280(v70, v60);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v29);
        sub_1BFF7C110(v47, (uint64_t)v34);
        break;
      case 6:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        uint64_t v48 = v61;
        sub_1BFF86C58(v70, v61);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v29);
        sub_1BFF71A74(v48, (uint64_t)v34, (uint64_t (*)(void))sub_1BFF719C0);
        break;
      case 7:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        uint64_t v49 = v55;
        sub_1C0BD6B98(v70, v55);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v29);
        sub_1C0BD50B8(v49, (uint64_t)v34, &qword_1EB88E9B8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor);
        break;
      case 8:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        uint64_t v50 = v62;
        sub_1C0BD9284(v70, v62);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v29);
        sub_1C0BD50B8(v50, (uint64_t)v34, &qword_1EB88E9A0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent);
        break;
      case 9:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        uint64_t v51 = v63;
        sub_1C0BD9BEC(v70, v63);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v29);
        sub_1C0BD50B8(v51, (uint64_t)v34, &qword_1EB88E998, (uint64_t (*)(void))sub_1C00738F0, (uint64_t)&type metadata for FormatVideoNodeContent);
        break;
      case 10:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        uint64_t v52 = v64;
        sub_1C0BDA554(v70, v64);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v29);
        sub_1C0BD50B8(v52, (uint64_t)v34, &qword_1EB88E9B0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont);
        break;
      case 11:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        sub_1C0BDAEBC(v70, v39);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v54, v29);
        sub_1C0BD50B8(v39, (uint64_t)v34, &qword_1EB88E9A8, (uint64_t (*)(void))sub_1C006F9DC, (uint64_t)&type metadata for FormatVideoPlayerContent);
        break;
      default:
        sub_1BFC66384((uint64_t)v68, (uint64_t)v70);
        uint64_t v42 = (uint64_t)v69;
        sub_1BFFE2FF8(v70, (uint64_t)v69);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v54, v29);
        sub_1BFFBFF9C(v42, (uint64_t)v34);
        break;
    }
    swift_storeEnumTagMultiPayload();
    sub_1BFF71A74((uint64_t)v34, v40, type metadata accessor for FormatPropertyDefinition);
  }
  return __swift_destroy_boxed_opaque_existential_1(v37);
}

void sub_1BFF7185C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = type metadata accessor for FormatPrimitivePropertyDefinition();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFF718BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFF71924(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for FormatPrimitivePropertyDefinition();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1BFF71970(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFF719C0()
{
  if (!qword_1EB879428)
  {
    sub_1C1515FDC();
    sub_1BFF87774(&qword_1EB884CF0, MEMORY[0x1E4F276F0]);
    unint64_t v0 = type metadata accessor for FormatPrimitivePropertyDefinition();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879428);
    }
  }
}

uint64_t type metadata accessor for FormatEnumPropertyDefinition(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB88CF00);
}

uint64_t sub_1BFF71A74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1BFF71ADC()
{
  unint64_t result = qword_1EB875428;
  if (!qword_1EB875428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875428);
  }
  return result;
}

void sub_1BFF71B30()
{
  if (!qword_1EB879430)
  {
    sub_1C151631C();
    sub_1BFF87774((unint64_t *)&qword_1EB884D00, MEMORY[0x1E4F27928]);
    unint64_t v0 = type metadata accessor for FormatPrimitivePropertyDefinition();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879430);
    }
  }
}

unint64_t sub_1BFF71BC4()
{
  unint64_t result = qword_1EB876938;
  if (!qword_1EB876938)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&qword_1EB876940, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876938);
  }
  return result;
}

double sub_1BFF71C54()
{
  uint64_t v3 = *v0;
  uint64_t v2 = v0[1];
  swift_bridgeObjectRetain();
  sub_1C1517EFC();
  double v4 = sub_1BFF493E4(v6, v3);
  swift_bridgeObjectRelease();
  swift_release();
  if (!v1)
  {
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    sub_1BFF493E4(v6, v2);
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v4;
}

void *initializeWithCopy for FeedBannerAdViewLayout.Context(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (int *)type metadata accessor for FeedBannerAd();
  uint64_t v6 = v5[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C151DBAC();
  unint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  *(void *)((char *)a1 + v5[6]) = *(void *)((char *)a2 + v5[6]);
  uint64_t v11 = v5[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = v5[8];
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  unint64_t v17 = v16[1];
  if (v17 >= 0x11)
  {
    *uint64_t v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  }
  return a1;
}

void sub_1BFF71E30()
{
  if (!qword_1EB884FE0)
  {
    sub_1C1518CDC();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884FE0);
    }
  }
}

uint64_t sub_1BFF71E88(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  long long v14 = *(_OWORD *)(v2 + 1);
  uint64_t v8 = v2[1];
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1BFF303E0(v5, v8);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  uint64_t v15 = v5;
  long long v16 = v14;
  uint64_t v17 = v6;
  uint64_t v18 = v7;
  sub_1BFF72280(a1, a2, (uint64_t)v19);
  sub_1BFF72224((uint64_t)v19, (uint64_t)&v15);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BFF72014((uint64_t)&v15, (void (*)(void, void, void, void, void))sub_1BFF6DB28);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = 0x8000000000000000;
  sub_1BFF72068((uint64_t)&v15, v9, v11, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 56) = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1BFF72014((uint64_t)&v15, (void (*)(void, void, void, void, void))sub_1BFF72054);
  return sub_1C15191FC();
}

uint64_t sub_1BFF72014(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1BFF72054(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_1BFF77308(result, a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_1BFF72068(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1BFEF2D8C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C106BC28();
      goto LABEL_7;
    }
    sub_1BFF9ADB8(v15, a4 & 1);
    unint64_t v21 = sub_1BFEF2D8C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    return sub_1C1079794(a1, v19);
  }
LABEL_13:
  sub_1BFF721B4(v12, a2, a3, a1, v18);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFF721B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1BFF72224(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1BFF72224(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1BFF72280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = v3[2];
  uint64_t v8 = v3[4];
  uint64_t result = sub_1BFF76714(v3[3], a2);
  uint64_t v40 = a2;
  uint64_t v41 = *(void *)(result + 16);
  if (v41)
  {
    uint64_t v37 = a3;
    uint64_t v38 = a1;
    unint64_t v10 = 0;
    uint64_t v39 = OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_slots;
    uint64_t v42 = result + 32;
    uint64_t v11 = a2;
    while (1)
    {
      if (v10 >= *(void *)(result + 16))
      {
        __break(1u);
        return result;
      }
      uint64_t v12 = result;
      sub_1BFC66384(v42 + 40 * v10, (uint64_t)v45);
      swift_bridgeObjectRetain();
      char v13 = sub_1BFF7EED8(v45, v7);
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v31 = v46;
        uint64_t v32 = v47;
        __swift_project_boxed_opaque_existential_1(v45, v46);
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v32 + 40))(&v44, v31, v32);
        *(_OWORD *)uint64_t v37 = v44;
        *(void *)(v37 + 16) = v7;
        *(void *)(v37 + 24) = 0;
        *(unsigned char *)(v37 + 32) = 0;
        swift_bridgeObjectRetain();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      }
      sub_1BFF7E884(v45, (uint64_t *)&v44);
      uint64_t v14 = *(void *)(v11 + 40);
      if (v14)
      {
        uint64_t v15 = *(void *)(a1 + v39);
        if (*(void *)(v15 + 16))
        {
          uint64_t v16 = *(void *)(v11 + 32);
          swift_bridgeObjectRetain();
          unint64_t v17 = sub_1BFEF2D8C(v16, v14);
          if (v18)
          {
            uint64_t v19 = *(void *)(*(void *)(v15 + 56) + 8 * v17);
            swift_retain();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            if (!*(void *)(v15 + 16)) {
              goto LABEL_19;
            }
            unint64_t v20 = sub_1BFEF2D8C(42, 0xE100000000000000);
            if ((v21 & 1) == 0) {
              goto LABEL_19;
            }
            uint64_t v19 = *(void *)(*(void *)(v15 + 56) + 8 * v20);
            swift_retain();
          }
          uint64_t v22 = *(void *)(v19 + 136);
          __swift_project_boxed_opaque_existential_1(v45, v46);
          swift_bridgeObjectRetain();
          uint64_t v23 = sub_1C151811C();
          if (*(void *)(v22 + 16) && (sub_1BFEF2D8C(v23, v24), (v25 & 1) != 0))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            a1 = v38;
            uint64_t v11 = v40;
            if ((v44 & 0x4000000000) == 0) {
              *(void *)&long long v44 = v44 | 0x4000000000;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            a1 = v38;
            uint64_t v11 = v40;
          }
        }
      }
LABEL_19:
      uint64_t v26 = *(void *)(v8 + 16);
      if (v26)
      {
        uint64_t v27 = v44;
        swift_bridgeObjectRetain();
        uint64_t v28 = 0;
        uint64_t v29 = 0;
        do
        {
          uint64_t v30 = 1;
          switch(*(unsigned char *)(v8 + v28 + 32))
          {
            case 1:
              uint64_t v30 = 2;
              if ((~v29 & 2) != 0) {
                break;
              }
              goto LABEL_22;
            case 2:
              uint64_t v30 = 4;
              if ((~v29 & 4) != 0) {
                break;
              }
              goto LABEL_22;
            case 3:
              uint64_t v30 = 8;
              if ((~v29 & 8) != 0) {
                break;
              }
              goto LABEL_22;
            case 4:
              uint64_t v30 = 16;
              if ((~v29 & 0x10) != 0) {
                break;
              }
              goto LABEL_22;
            case 5:
              uint64_t v30 = 32;
              if ((~v29 & 0x20) != 0) {
                break;
              }
              goto LABEL_22;
            case 6:
              uint64_t v30 = 64;
              if ((~v29 & 0x40) != 0) {
                break;
              }
              goto LABEL_22;
            case 7:
              uint64_t v30 = 128;
              if ((~v29 & 0x80) != 0) {
                break;
              }
              goto LABEL_22;
            case 8:
              uint64_t v30 = 256;
              if ((~v29 & 0x100) != 0) {
                break;
              }
              goto LABEL_22;
            case 9:
              uint64_t v30 = 512;
              if ((~v29 & 0x200) != 0) {
                break;
              }
              goto LABEL_22;
            case 0xA:
              uint64_t v30 = 1024;
              if ((~v29 & 0x400) != 0) {
                break;
              }
              goto LABEL_22;
            case 0xB:
              uint64_t v30 = 2048;
              if ((~v29 & 0x800) != 0) {
                break;
              }
              goto LABEL_22;
            case 0xC:
              uint64_t v30 = 4096;
              if ((~v29 & 0x1000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0xD:
              uint64_t v30 = 0x2000;
              if ((~v29 & 0x2000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0xE:
              if (qword_1EA194C18 != -1) {
                swift_once();
              }
              uint64_t v30 = qword_1EA1AF4C0;
              if ((qword_1EA1AF4C0 & ~v29) != 0) {
                break;
              }
              goto LABEL_22;
            case 0xF:
              if (qword_1EA194C20 != -1) {
                swift_once();
              }
              uint64_t v30 = qword_1EA1AF4C8;
              if ((qword_1EA1AF4C8 & ~v29) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x10:
              if (qword_1EA194C28 != -1) {
                swift_once();
              }
              uint64_t v30 = qword_1EA1AF4D0;
              if ((qword_1EA1AF4D0 & ~v29) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x11:
              uint64_t v30 = 0x8000;
              if ((~v29 & 0x8000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x12:
              uint64_t v30 = 0x10000;
              if ((~v29 & 0x10000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x13:
              uint64_t v30 = 0x20000;
              if ((~v29 & 0x20000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x14:
              uint64_t v30 = 0x40000;
              if ((~v29 & 0x40000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x15:
              uint64_t v30 = 0x80000;
              if ((~v29 & 0x80000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x16:
              uint64_t v30 = 0x200000;
              if ((~v29 & 0x200000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x17:
              uint64_t v30 = 0x400000;
              if ((~v29 & 0x400000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x18:
              uint64_t v30 = 0x800000;
              if ((~v29 & 0x800000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x19:
              uint64_t v30 = 0x1000000;
              if ((~v29 & 0x1000000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x1A:
              uint64_t v30 = 0x2000000;
              if ((~v29 & 0x2000000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x1B:
              uint64_t v30 = 0x4000000;
              if ((~v29 & 0x4000000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x1C:
              uint64_t v30 = 0x8000000;
              if ((~v29 & 0x8000000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x1D:
              uint64_t v30 = 0x10000000;
              if ((~v29 & 0x10000000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x1E:
              uint64_t v30 = 0x20000000;
              if ((~v29 & 0x20000000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x1F:
              uint64_t v30 = 0x200000000;
              if ((~v29 & 0x200000000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x20:
              uint64_t v30 = 0x400000000;
              if ((~v29 & 0x400000000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x21:
              uint64_t v30 = 0x800000000;
              if ((~v29 & 0x800000000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x22:
              uint64_t v30 = 0x1000000000;
              if ((~v29 & 0x1000000000) != 0) {
                break;
              }
              goto LABEL_22;
            case 0x23:
              uint64_t v30 = 0x2000000000;
              goto LABEL_99;
            case 0x24:
              uint64_t v30 = 0x40000000;
              if ((~v29 & 0x40000000) == 0) {
                goto LABEL_22;
              }
              break;
            case 0x25:
              if ((v29 & 0x80000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x80000000;
              break;
            case 0x26:
              if ((v29 & 0x100000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x100000000;
              break;
            case 0x27:
              if ((v29 & 0x4000000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x4000000000;
              break;
            case 0x28:
              if ((v29 & 0x8000000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x8000000000;
              break;
            case 0x29:
              if ((v29 & 0x10000000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x10000000000;
              break;
            case 0x2A:
              if ((v29 & 0x20000000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x20000000000;
              break;
            case 0x2B:
              if ((v29 & 0x80000000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x80000000000;
              break;
            case 0x2C:
              if ((v29 & 0x100000000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x100000000000;
              break;
            case 0x2D:
              if ((v29 & 0x1000000000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x1000000000000;
              break;
            case 0x2E:
              if ((v29 & 0x40000000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x40000000000;
              break;
            case 0x2F:
              if ((v29 & 0x200000000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x200000000000;
              break;
            case 0x30:
              if ((v29 & 0x400000000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x400000000000;
              break;
            case 0x31:
              if ((v29 & 0x800000000000) != 0) {
                goto LABEL_22;
              }
              uint64_t v30 = 0x800000000000;
              break;
            default:
LABEL_99:
              if ((v30 & ~v29) == 0) {
                goto LABEL_22;
              }
              break;
          }
          v29 |= v30;
LABEL_22:
          ++v28;
        }
        while (v26 != v28);
        swift_bridgeObjectRelease();
        uint64_t v11 = v40;
        if ((v29 & ~v27) != 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v33 = *(void *)(v8 + 16);
          if (v33)
          {
            swift_bridgeObjectRetain();
            uint64_t v34 = 0;
            uint64_t v35 = 0;
            do
            {
              sub_1BFF7D240(&v43);
              uint64_t v36 = v43;
              if ((v43 & ~v35) == 0) {
                uint64_t v36 = 0;
              }
              v35 |= v36;
              ++v34;
            }
            while (v33 != v34);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v35 = 0;
          }
          *(void *)uint64_t v37 = v27;
          *(void *)(v37 + 8) = v35;
          *(void *)(v37 + 16) = 0;
          *(void *)(v37 + 24) = 0;
          *(unsigned char *)(v37 + 32) = 1;
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
        }
      }
      ++v10;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
      uint64_t result = v12;
      if (v10 == v41)
      {
        uint64_t result = swift_bridgeObjectRelease();
        a3 = v37;
        goto LABEL_132;
      }
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
LABEL_132:
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(unsigned char *)(a3 + 32) = -1;
  return result;
}

void sub_1BFF72A34(unint64_t *a1, uint64_t a2)
{
  long long v6 = *(_OWORD *)(a2 + 80);
  v17[4] = *(_OWORD *)(a2 + 64);
  v17[5] = v6;
  uint64_t v18 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v17[0] = *(_OWORD *)a2;
  v17[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  _OWORD v17[2] = *(_OWORD *)(a2 + 32);
  v17[3] = v8;
  sub_1BFF0D1B8(a1, a2);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v9 = *(void *)(v2 + 64);
    uint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v10; ++i)
      {
        unint64_t v12 = *(void *)(v9 + 8 * i + 32);
        sub_1BFF32264(v12);
        sub_1BFF0D378((uint64_t)a1, a2);
        sub_1BFF31E90(v12);
      }
      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    unint64_t v13 = *(void *)(v2 + 80);
    if (v13 >> 62 == 1)
    {
      uint64_t v14 = v13 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v15 = *(void *)(v14 + 16);
      uint64_t v16 = *(void *)(v14 + 24);
      sub_1BFE6FA30(v15);
      swift_bridgeObjectRetain();
      sub_1C1144E0C((uint64_t)a1, (uint64_t)v17, v15, v16);
      sub_1BFF0056C(v15);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t destroy for FormatItemNodeData(uint64_t a1, int *a2)
{
  type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 48) < 0x11uLL) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) < 0x11uLL) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for FeedBannerAd();
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = sub_1C151DBAC();
      goto LABEL_53;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      long long v7 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v8 = a1 + v7[10];
      uint64_t v9 = v8 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      uint64_t v10 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
      {
        uint64_t v11 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v9, v11);

        uint64_t v12 = v9 + *(int *)(v10 + 28);
        uint64_t v13 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      uint64_t v14 = a1 + v7[11];
      uint64_t v15 = sub_1C151D2DC();
      uint64_t v16 = *(void *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
      }
      if (*(void *)(a1 + v7[12] + 8) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + v7[13]) >= 3uLL) {
        swift_unknownObjectRelease();
      }

      goto LABEL_73;
    case 4u:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      unint64_t v17 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v18 = a1 + v17[8];
      uint64_t v19 = sub_1C1515FDC();
      uint64_t v20 = *(void *)(v19 - 8);
      char v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v21(v18, v19);
      uint64_t v22 = a1 + v17[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v22, 1, v19)) {
        v21(v22, v19);
      }
      swift_release();
      swift_release();
      uint64_t v23 = a1 + v17[12];
      uint64_t v24 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v24 - 1) + 48))(v23, 1, v24))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v25 = v24[10];
        uint64_t v26 = v23 + v25 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v27 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27))
        {
          uint64_t v28 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v26, v28);

          v21(v26 + *(int *)(v27 + 28), v19);
        }
        uint64_t v68 = v21;
        uint64_t v29 = v23 + v24[11];
        uint64_t v30 = sub_1C151D2DC();
        uint64_t v31 = *(void *)(v30 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30)) {
          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
        }
        if (*(void *)(v23 + v24[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        char v21 = v68;
        if (*(void *)(v23 + v24[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }
      }
      uint64_t v32 = a1 + v17[13];
      uint64_t v33 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33)) {
        goto LABEL_73;
      }
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_55;
      }
      swift_bridgeObjectRelease();
      uint64_t v34 = type metadata accessor for GenericDataVisualization();
      v21(v32 + *(int *)(v34 + 20), v19);
      goto LABEL_72;
    case 5u:
      goto LABEL_36;
    case 6u:
      int v35 = *(unsigned __int8 *)(a1 + 281);
      if (v35 == 2) {
        goto LABEL_40;
      }
      if (v35 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 128) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        uint64_t v46 = *(void **)(a1 + 144);
        if (!v46) {
          goto LABEL_73;
        }

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 272) < 0x11uLL) {
          goto LABEL_73;
        }
LABEL_72:
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
      if (*(unsigned char *)(a1 + 281)) {
        goto LABEL_73;
      }
LABEL_36:

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 128) >= 0x11uLL) {
        goto LABEL_72;
      }
LABEL_73:
      uint64_t v42 = a1 + a2[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v42 + 56) >= 0xFuLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFF44AC4(*(void *)(a1 + a2[6]));
      uint64_t v43 = a1 + a2[7];
      uint64_t v44 = sub_1C151AC1C();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
      uint64_t result = *(void *)(a1 + a2[8] + 8);
      if (result)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      return result;
    case 7u:
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 120)) {
          __swift_destroy_boxed_opaque_existential_1(a1 + 96);
        }
      }
      goto LABEL_73;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v36 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = v36 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v38 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v37, 1, v38))
      {
        uint64_t v39 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v37, v39);
      }
      goto LABEL_72;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 56)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      }
      if (*(void *)(a1 + 96)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 72);
      }
      if (*(void *)(a1 + 136)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 112);
      }
      goto LABEL_73;
    case 0xAu:
      swift_bridgeObjectRelease();
      uint64_t v4 = type metadata accessor for FeedEngagementBanner();
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = sub_1C151959C();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
      if (*(void *)(a1 + *(int *)(v4 + 32) + 8) < 0x11uLL) {
        goto LABEL_73;
      }
      goto LABEL_72;
    case 0xBu:
LABEL_55:
      swift_release();
      goto LABEL_73;
    case 0xCu:
      goto LABEL_66;
    case 0xDu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 112)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      }
      if (*(void *)(a1 + 152)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 128);
      }
      if (*(void *)(a1 + 192)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 168);
      }
      goto LABEL_73;
    case 0xEu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_66:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_73;
    case 0xFu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v40 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      uint64_t v41 = v40 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_98;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v48 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v41, 1, v48))
            {
              uint64_t v49 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v41, v49);
            }
          }
          uint64_t v50 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v51 = v41 + *(int *)(v50 + 20);
          int v52 = swift_getEnumCaseMultiPayload();
          if (v52 == 5 || v52 == 4)
          {
            uint64_t v53 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v51, 1, v53))
            {
              uint64_t v54 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v51, v54);
            }
          }
          v41 += *(int *)(v50 + 24);
LABEL_98:
          int v55 = swift_getEnumCaseMultiPayload();
          if (v55 == 5 || v55 == 4)
          {
            uint64_t v56 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v41, 1, v56))goto LABEL_109; {
          }
            }
          goto LABEL_73;
        case 2u:
          uint64_t v57 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v41, 1, v57)) {
            goto LABEL_73;
          }
          uint64_t v58 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v41, v58);
          uint64_t v59 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v60 = v41 + *(int *)(v59 + 24);
          swift_bridgeObjectRelease();
          unint64_t v61 = *(void *)(v60 + 24);
          if (v61 >> 60 != 15) {
            sub_1BFE95664(*(void *)(v60 + 16), v61);
          }
          swift_bridgeObjectRelease();
          goto LABEL_72;
        case 3u:
          uint64_t v62 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v63 = v41 + *(int *)(v62 + 24);
          uint64_t v64 = type metadata accessor for PuzzleStreak();
          uint64_t v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 48);
          if (!v65(v63, 1, v64))
          {
            uint64_t v66 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v63, v66);
          }
          v41 += *(int *)(v62 + 28);
          if (!v65(v41, 1, v64))
          {
LABEL_109:
            uint64_t v67 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v41, v67);
          }
          goto LABEL_73;
        default:
          goto LABEL_73;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 240) >= 0x11uLL) {
        goto LABEL_72;
      }
      goto LABEL_73;
    default:
      goto LABEL_73;
  }
}

void *initializeWithCopy for FormatItemNodeData(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FeedItem(0);
  id v444 = a2;
  id v443 = a1;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v9 = a2 + 5;
      unint64_t v10 = a2[6];
      swift_bridgeObjectRetain();
      if (v10 >= 0x11)
      {
        a1[5] = *v9;
        a1[6] = v10;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 5) = *(_OWORD *)v9;
      }
      goto LABEL_179;
    case 1u:
      uint64_t v50 = a2[1];
      *a1 = *a2;
      a1[1] = v50;
      uint64_t v51 = a2[3];
      a1[2] = a2[2];
      a1[3] = v51;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v52 = a2[6];
      a1[5] = a2[5];
      a1[6] = v52;
      uint64_t v53 = a2[8];
      a1[7] = a2[7];
      a1[8] = v53;
      uint64_t v54 = a2 + 9;
      unint64_t v55 = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v55 >= 0x11)
      {
        a1[9] = *v54;
        a1[10] = v55;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 9) = *(_OWORD *)v54;
      }
      goto LABEL_179;
    case 2u:
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      uint64_t v12 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v13 = v12[5];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_1C151DBAC();
      unint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v18 = v15;
      a2 = v444;
      v17(v14, v18, v16);
      *(void *)((char *)a1 + v12[6]) = *(void *)((char *)v444 + v12[6]);
      uint64_t v19 = v12[7];
      uint64_t v20 = (char *)a1 + v19;
      char v21 = (char *)v444 + v19;
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v12[8];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)v444 + v22;
      unint64_t v25 = *((void *)v24 + 1);
      if (v25 >= 0x11) {
        goto LABEL_37;
      }
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      goto LABEL_179;
    case 3u:
      unint64_t v437 = a3;
      uint64_t v56 = a2[1];
      *a1 = *a2;
      a1[1] = v56;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v57 = a2[5];
      a1[4] = a2[4];
      a1[5] = v57;
      a1[6] = a2[6];
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      uint64_t v431 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v58 = v431[10];
      uint64_t v59 = (char *)a1 + v58;
      uint64_t v60 = (char *)a2 + v58;
      *uint64_t v59 = *((unsigned char *)a2 + v58);
      v59[1] = *((unsigned char *)a2 + v58 + 1);
      unint64_t v61 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v62 = v61[6];
      uint64_t v63 = &v59[v62];
      uint64_t v64 = &v60[v62];
      uint64_t v65 = (int *)type metadata accessor for SharedItem();
      uint64_t v426 = *((void *)v65 - 1);
      uint64_t v66 = *(unsigned int (**)(char *, uint64_t, int *))(v426 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v66(v64, 1, v65))
      {
        uint64_t v67 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        uint64_t v188 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 16))(v63, v64, v188);
        v63[v65[5]] = v64[v65[5]];
        uint64_t v189 = v65[6];
        uint64_t v190 = *(void **)&v64[v189];
        *(void *)&v63[v189] = v190;
        uint64_t v191 = v65[7];
        double v192 = &v63[v191];
        id v435 = &v64[v191];
        uint64_t v193 = sub_1C1515FDC();
        uint64_t v194 = *(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16);
        id v195 = v190;
        v194(v192, v435, v193);
        (*(void (**)(char *, void, uint64_t, int *))(v426 + 56))(v63, 0, 1, v65);
      }
      a3 = v437;
      a1 = v443;
      v59[v61[7]] = v60[v61[7]];
      v59[v61[8]] = v60[v61[8]];
      v59[v61[9]] = v60[v61[9]];
      v59[v61[10]] = v60[v61[10]];
      uint64_t v196 = v431[11];
      uint64_t v197 = (char *)v443 + v196;
      double v198 = (char *)v444 + v196;
      uint64_t v199 = sub_1C151D2DC();
      uint64_t v200 = *(void *)(v199 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v200 + 48))(v198, 1, v199))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
        memcpy(v197, v198, *(void *)(*(void *)(v201 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v200 + 16))(v197, v198, v199);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v200 + 56))(v197, 0, 1, v199);
      }
      a2 = v444;
      uint64_t v208 = v431[12];
      uint64_t v209 = (void *)((char *)v443 + v208);
      uint64_t v210 = (void *)((char *)v444 + v208);
      unint64_t v211 = v210[1];
      if (v211 >= 0x11)
      {
        *uint64_t v209 = *v210;
        v209[1] = v211;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v209 = *(_OWORD *)v210;
      }
      uint64_t v212 = v431[13];
      unint64_t v213 = *(void *)((char *)v444 + v212);
      if (v213 >= 2)
      {
        if (v213 == 2)
        {
          *(void *)((char *)v443 + v212) = 2;
        }
        else
        {
          *(void *)((char *)v443 + v212) = v213;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)((char *)v443 + v212) = v213;
      }
      uint64_t v252 = v431[14];
      uint64_t v253 = *(void **)((char *)v444 + v252);
      *(void *)((char *)v443 + v252) = v253;
      id v254 = v253;
      goto LABEL_179;
    case 4u:
      uint64_t v26 = a2[1];
      *a1 = *a2;
      a1[1] = v26;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v27 = a2 + 3;
      unint64_t v28 = a2[4];
      if (v28 >= 0x11)
      {
        a1[3] = *v27;
        a1[4] = v28;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v27;
      }
      uint64_t v119 = a2[6];
      a1[5] = a2[5];
      a1[6] = v119;
      uint64_t v120 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v121 = v120[8];
      uint64_t v122 = (char *)a1 + v121;
      uint64_t v123 = (char *)a2 + v121;
      uint64_t v124 = sub_1C1515FDC();
      uint64_t v125 = *(void *)(v124 - 8);
      uint64_t v126 = *(void (**)(char *, char *, uint64_t))(v125 + 16);
      swift_bridgeObjectRetain();
      v126(v122, v123, v124);
      uint64_t v127 = v120[9];
      uint64_t v128 = (char *)a1 + v127;
      uint64_t v129 = (char *)a2 + v127;
      uint64_t v434 = v124;
      id v427 = v126;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))((char *)a2 + v127, 1, v124))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
      }
      else
      {
        v126(v128, v129, v124);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v125 + 56))(v128, 0, 1, v124);
      }
      *(void *)((char *)a1 + v120[10]) = *(void *)((char *)a2 + v120[10]);
      *(void *)((char *)a1 + v120[11]) = *(void *)((char *)a2 + v120[11]);
      uint64_t v163 = v120[12];
      uint64_t v164 = (void *)((char *)a1 + v163);
      uint64_t v165 = (void *)((char *)a2 + v163);
      uint64_t v166 = type metadata accessor for FeedHeadline(0);
      uint64_t v167 = *(void *)(v166 - 8);
      uint64_t v168 = *(unsigned int (**)(void *, uint64_t, int *))(v167 + 48);
      uint64_t v169 = (int *)v166;
      swift_retain();
      swift_retain();
      if (v168(v165, 1, v169))
      {
        sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v164, v165, *(void *)(*(void *)(v170 - 8) + 64));
      }
      else
      {
        uint64_t v425 = v120;
        uint64_t v439 = a3;
        uint64_t v176 = v165[1];
        *uint64_t v164 = *v165;
        v164[1] = v176;
        v164[2] = v165[2];
        *((unsigned char *)v164 + 24) = *((unsigned char *)v165 + 24);
        uint64_t v177 = v165[5];
        v164[4] = v165[4];
        v164[5] = v177;
        v164[6] = v165[6];
        *((unsigned char *)v164 + 56) = *((unsigned char *)v165 + 56);
        uint64_t v424 = v169;
        uint64_t v178 = v169[10];
        uint64_t v179 = (char *)v164 + v178;
        uint64_t v180 = (char *)v165 + v178;
        *uint64_t v179 = *((unsigned char *)v165 + v178);
        v179[1] = *((unsigned char *)v165 + v178 + 1);
        uint64_t v181 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v182 = *(int *)(v181 + 24);
        __dst = &v179[v182];
        long long v423 = (int *)v181;
        unint64_t v183 = &v180[v182];
        uint64_t v184 = (int *)type metadata accessor for SharedItem();
        uint64_t v421 = *((void *)v184 - 1);
        unint64_t v185 = *(unsigned int (**)(char *, uint64_t, int *))(v421 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v185(v183, 1, v184))
        {
          uint64_t v186 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v183, *(void *)(*(void *)(v186 - 8) + 64));
        }
        else
        {
          uint64_t v280 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v280 - 8) + 16))(__dst, v183, v280);
          __dst[v184[5]] = v183[v184[5]];
          uint64_t v281 = v184[6];
          uint64_t v282 = *(void **)&v183[v281];
          *(void *)&__dst[v281] = v282;
          uint64_t v283 = v184[7];
          uint64_t v284 = &__dst[v283];
          uint64_t v285 = &v183[v283];
          id v286 = v282;
          v427(v284, v285, v434);
          (*(void (**)(char *, void, uint64_t, int *))(v421 + 56))(__dst, 0, 1, v184);
        }
        v179[v423[7]] = v180[v423[7]];
        v179[v423[8]] = v180[v423[8]];
        v179[v423[9]] = v180[v423[9]];
        v179[v423[10]] = v180[v423[10]];
        uint64_t v287 = v424[11];
        uint64_t v288 = (char *)v164 + v287;
        uint64_t v289 = (char *)v165 + v287;
        uint64_t v290 = sub_1C151D2DC();
        uint64_t v291 = *(void *)(v290 - 8);
        a1 = v443;
        uint64_t v120 = v425;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v291 + 48))(v289, 1, v290))
        {
          sub_1BFEEF2C0(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
          memcpy(v288, v289, *(void *)(*(void *)(v292 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v291 + 16))(v288, v289, v290);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v291 + 56))(v288, 0, 1, v290);
        }
        a3 = v439;
        uint64_t v293 = v424[12];
        uint64_t v294 = (void *)((char *)v164 + v293);
        uint64_t v295 = (void *)((char *)v165 + v293);
        unint64_t v296 = v295[1];
        if (v296 >= 0x11)
        {
          *uint64_t v294 = *v295;
          v294[1] = v296;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v294 = *(_OWORD *)v295;
        }
        uint64_t v297 = v424[13];
        unint64_t v298 = *(void *)((char *)v165 + v297);
        if (v298 >= 2)
        {
          if (v298 == 2)
          {
            *(void *)((char *)v164 + v297) = 2;
          }
          else
          {
            *(void *)((char *)v164 + v297) = v298;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v164 + v297) = v298;
        }
        uint64_t v321 = v424[14];
        id v322 = *(void **)((char *)v165 + v321);
        *(void *)((char *)v164 + v321) = v322;
        uint64_t v323 = *(void (**)(void *, void, uint64_t, int *))(v167 + 56);
        id v324 = v322;
        v323(v164, 0, 1, v424);
      }
      uint64_t v325 = v120[13];
      uint64_t v326 = (void *)((char *)a1 + v325);
      uint64_t v327 = (void *)((char *)v444 + v325);
      uint64_t v328 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v329 = *(void *)(v328 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v329 + 48))(v327, 1, v328))
      {
        sub_1BFEEF2C0(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v326, v327, *(void *)(*(void *)(v330 - 8) + 64));
        a2 = v444;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v332 = *v327;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v333 = v327[1];
          *uint64_t v326 = v332;
          v326[1] = v333;
          uint64_t v334 = type metadata accessor for GenericDataVisualization();
          uint64_t v335 = *(int *)(v334 + 20);
          uint64_t v336 = v120;
          uint64_t v337 = (char *)v326 + v335;
          uint64_t v338 = a3;
          uint64_t v339 = (char *)v327 + v335;
          swift_bridgeObjectRetain();
          uint64_t v340 = v337;
          uint64_t v120 = v336;
          uint64_t v341 = v339;
          a3 = v338;
          a1 = v443;
          v427(v340, v341, v434);
          *(void *)((char *)v326 + *(int *)(v334 + 24)) = *(uint64_t *)((char *)v327 + *(int *)(v334 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          *uint64_t v326 = v332;
          swift_retain();
        }
        a2 = v444;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v329 + 56))(v326, 0, 1, v328);
      }
      *((unsigned char *)a1 + v120[14]) = *((unsigned char *)a2 + v120[14]);
      goto LABEL_179;
    case 5u:
      uint64_t v68 = (void *)*a2;
      uint64_t v69 = a2[1];
      *a1 = *a2;
      a1[1] = v69;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v70 = (void *)a2[7];
      a1[6] = a2[6];
      a1[7] = v70;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      uint64_t v71 = a2[10];
      id v72 = v68;
      swift_bridgeObjectRetain();
      id v73 = v70;
      if (v71 == 1)
      {
        long long v74 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 11) = v74;
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      }
      else
      {
        a1[9] = a2[9];
        a1[10] = v71;
        uint64_t v132 = a2[12];
        a1[11] = a2[11];
        a1[12] = v132;
        uint64_t v134 = (void *)a2[13];
        uint64_t v133 = a2[14];
        a1[13] = v134;
        a1[14] = v133;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v135 = v134;
      }
      uint64_t v136 = a2 + 15;
      unint64_t v137 = a2[16];
      if (v137 >= 0x11)
      {
        a1[15] = *v136;
        a1[16] = v137;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 15) = *(_OWORD *)v136;
      }
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      goto LABEL_179;
    case 6u:
      int v75 = *((unsigned __int8 *)a2 + 281);
      if (v75 == 2)
      {
        uint64_t v220 = a2[1];
        *a1 = *a2;
        a1[1] = v220;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v221 = a2[7];
        a1[6] = a2[6];
        a1[7] = v221;
        uint64_t v222 = a2[9];
        a1[8] = a2[8];
        a1[9] = v222;
        uint64_t v223 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v223 != 1)
        {
          a1[10] = a2[10];
          a1[11] = v223;
          uint64_t v262 = a2 + 12;
          uint64_t v263 = a2;
          uint64_t v264 = a2[15];
          swift_bridgeObjectRetain();
          if (v264)
          {
            uint64_t v265 = v263[16];
            a1[15] = v264;
            a1[16] = v265;
            (**(void (***)(uint64_t, void *, uint64_t))(v264 - 8))((uint64_t)(a1 + 12), v262, v264);
            a1[17] = v263[17];
            *((unsigned char *)a1 + 144) = *((unsigned char *)v263 + 144);
          }
          else
          {
            long long v365 = *((_OWORD *)v262 + 1);
            *((_OWORD *)a1 + 6) = *(_OWORD *)v262;
            *((_OWORD *)a1 + 7) = v365;
            *((_OWORD *)a1 + 8) = *((_OWORD *)v262 + 2);
            *((unsigned char *)a1 + 144) = *((unsigned char *)v262 + 48);
          }
          a2 = v263;
          goto LABEL_169;
        }
        uint64_t v224 = a1 + 10;
        uint64_t v225 = a2 + 10;
        long long v226 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v226;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
LABEL_139:
        long long v302 = v225[1];
        *uint64_t v224 = *v225;
        v224[1] = v302;
        goto LABEL_169;
      }
      if (v75 != 1)
      {
        uint64_t v227 = (void *)*a2;
        uint64_t v228 = a2[1];
        *a1 = *a2;
        a1[1] = v228;
        a1[2] = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v229 = (void *)a2[7];
        a1[6] = a2[6];
        a1[7] = v229;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v230 = a2[10];
        id v231 = v227;
        swift_bridgeObjectRetain();
        id v232 = v229;
        if (v230 == 1)
        {
          long long v233 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 11) = v233;
          *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
        }
        else
        {
          a1[9] = a2[9];
          a1[10] = v230;
          uint64_t v266 = a2[12];
          a1[11] = a2[11];
          a1[12] = v266;
          uint64_t v268 = (void *)a2[13];
          uint64_t v267 = a2[14];
          a1[13] = v268;
          a1[14] = v267;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v269 = v268;
        }
        uint64_t v270 = a2 + 15;
        unint64_t v271 = a2[16];
        if (v271 >= 0x11)
        {
          a1[15] = *v270;
          a1[16] = v271;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)v270;
        }
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        goto LABEL_169;
      }
      uint64_t v76 = (void *)*a2;
      uint64_t v77 = a2[1];
      *a1 = *a2;
      a1[1] = v77;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v78 = (void *)a2[7];
      a1[6] = a2[6];
      a1[7] = v78;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      uint64_t v79 = a2[10];
      id v80 = v76;
      swift_bridgeObjectRetain();
      id v81 = v78;
      if (v79 == 1)
      {
        long long v82 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 11) = v82;
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      }
      else
      {
        a1[9] = a2[9];
        a1[10] = v79;
        uint64_t v256 = a2[12];
        a1[11] = a2[11];
        a1[12] = v256;
        int v258 = (void *)a2[13];
        uint64_t v257 = a2[14];
        a1[13] = v258;
        a1[14] = v257;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v259 = v258;
      }
      uint64_t v260 = a2 + 15;
      unint64_t v261 = a2[16];
      if (v261 >= 0x11)
      {
        a1[15] = *v260;
        a1[16] = v261;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 15) = *(_OWORD *)v260;
      }
      uint64_t v225 = a2 + 18;
      uint64_t v272 = (void *)a2[18];
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      if (!v272)
      {
        uint64_t v224 = a1 + 18;
        long long v299 = *((_OWORD *)a2 + 16);
        *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
        *((_OWORD *)a1 + 16) = v299;
        *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
        long long v300 = *((_OWORD *)a2 + 12);
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        *((_OWORD *)a1 + 12) = v300;
        long long v301 = *((_OWORD *)a2 + 14);
        *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
        *((_OWORD *)a1 + 14) = v301;
        goto LABEL_139;
      }
      uint64_t v273 = a2[19];
      uint64_t v274 = a2[20];
      a1[18] = v272;
      a1[19] = v273;
      a1[20] = v274;
      *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
      a1[22] = a2[22];
      *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
      long long v275 = (void *)a2[25];
      a1[24] = a2[24];
      a1[25] = v275;
      *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
      uint64_t v276 = a2[28];
      id v277 = v272;
      swift_bridgeObjectRetain();
      id v278 = v275;
      if (v276 == 1)
      {
        long long v279 = *(_OWORD *)(a2 + 29);
        *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
        *(_OWORD *)(a1 + 29) = v279;
        *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
      }
      else
      {
        a1[27] = a2[27];
        a1[28] = v276;
        uint64_t v303 = a2[30];
        a1[29] = a2[29];
        a1[30] = v303;
        uint64_t v305 = (void *)a2[31];
        uint64_t v304 = a2[32];
        a1[31] = v305;
        a1[32] = v304;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v306 = v305;
      }
      uint64_t v307 = a2 + 33;
      unint64_t v308 = a2[34];
      if (v308 >= 0x11)
      {
        a1[33] = *v307;
        a1[34] = v308;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 33) = *(_OWORD *)v307;
      }
      *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_169:
      *((unsigned char *)a1 + 281) = v75;
LABEL_179:
      swift_storeEnumTagMultiPayload();
LABEL_180:
      uint64_t v374 = a3;
      uint64_t v375 = a3[5];
      uint64_t v376 = (char *)a1 + v375;
      uint64_t v377 = (char *)a2 + v375;
      uint64_t v378 = *(void *)((char *)a2 + v375 + 8);
      *(void *)uint64_t v376 = *(void *)((char *)a2 + v375);
      *((void *)v376 + 1) = v378;
      uint64_t v379 = *(void *)((char *)a2 + v375 + 24);
      *((void *)v376 + 2) = *(void *)((char *)a2 + v375 + 16);
      *((void *)v376 + 3) = v379;
      uint64_t v380 = *(void *)((char *)a2 + v375 + 40);
      *((void *)v376 + 4) = *(void *)((char *)a2 + v375 + 32);
      *((void *)v376 + 5) = v380;
      uint64_t v381 = (void *)((char *)a2 + v375 + 48);
      unint64_t v382 = *(void *)((char *)a2 + v375 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v382 >= 0xF)
      {
        *((void *)v376 + 6) = *v381;
        *((void *)v376 + 7) = v382;
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)v376 + 3) = *(_OWORD *)v381;
      }
      uint64_t v383 = *((void *)v377 + 9);
      *((void *)v376 + 8) = *((void *)v377 + 8);
      *((void *)v376 + 9) = v383;
      uint64_t v384 = *((void *)v377 + 11);
      *((void *)v376 + 10) = *((void *)v377 + 10);
      *((void *)v376 + 11) = v384;
      uint64_t v385 = *((void *)v377 + 13);
      *((void *)v376 + 12) = *((void *)v377 + 12);
      *((void *)v376 + 13) = v385;
      *((void *)v376 + 14) = *((void *)v377 + 14);
      v376[120] = v377[120];
      uint64_t v386 = v374[6];
      unint64_t v387 = *(void *)((char *)v444 + v386);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFF45054(v387);
      *(void *)((char *)v443 + v386) = v387;
      uint64_t v388 = v374[7];
      v389 = (char *)v443 + v388;
      uint64_t v390 = (char *)v444 + v388;
      uint64_t v391 = sub_1C151AC1C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v391 - 8) + 16))(v389, v390, v391);
      uint64_t v392 = v374[8];
      uint64_t v393 = (void *)((char *)v443 + v392);
      uint64_t v394 = (void *)((char *)v444 + v392);
      uint64_t v395 = v394[1];
      if (v395)
      {
        *uint64_t v393 = *v394;
        v393[1] = v395;
        v393[2] = v394[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v393 = *(_OWORD *)v394;
        v393[2] = v394[2];
      }
      return v443;
    case 7u:
      uint64_t v83 = a2[1];
      *a1 = *a2;
      a1[1] = v83;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v84 = a2[7];
      a1[6] = a2[6];
      a1[7] = v84;
      uint64_t v85 = a2[9];
      a1[8] = a2[8];
      a1[9] = v85;
      uint64_t v86 = a2[11];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v86 == 1)
      {
        long long v87 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v87;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
        long long v88 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v88;
      }
      else
      {
        a1[10] = a2[10];
        a1[11] = v86;
        uint64_t v138 = a2 + 12;
        uint64_t v139 = a2;
        uint64_t v140 = a2[15];
        swift_bridgeObjectRetain();
        if (v140)
        {
          uint64_t v141 = v139[16];
          a1[15] = v140;
          a1[16] = v141;
          (**(void (***)(uint64_t, void *, uint64_t))(v140 - 8))((uint64_t)(a1 + 12), v138, v140);
          a1[17] = v139[17];
          *((unsigned char *)a1 + 144) = *((unsigned char *)v139 + 144);
        }
        else
        {
          long long v255 = *((_OWORD *)v138 + 1);
          *((_OWORD *)a1 + 6) = *(_OWORD *)v138;
          *((_OWORD *)a1 + 7) = v255;
          *((_OWORD *)a1 + 8) = *((_OWORD *)v138 + 2);
          *((unsigned char *)a1 + 144) = *((unsigned char *)v138 + 48);
        }
        a2 = v139;
      }
      goto LABEL_179;
    case 8u:
      v438 = a3;
      uint64_t v89 = a2[1];
      *a1 = *a2;
      a1[1] = v89;
      uint64_t v90 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      uint64_t v91 = (void *)((char *)a1 + v90);
      uint64_t v92 = (char *)a2 + v90;
      uint64_t v93 = *(void *)((char *)a2 + v90 + 8);
      *uint64_t v91 = *(void *)((char *)a2 + v90);
      v91[1] = v93;
      uint64_t v94 = *(void *)((char *)a2 + v90 + 24);
      v91[2] = *(void *)((char *)a2 + v90 + 16);
      v91[3] = v94;
      uint64_t v433 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v95 = *(int *)(v433 + 24);
      uint64_t v96 = (char *)v91 + v95;
      uint64_t v97 = &v92[v95];
      uint64_t v98 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v432 = *(void *)(v98 - 8);
      uint64_t v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v432 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v99(v97, 1, v98))
      {
        sub_1BFEEF2C0(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v96, v97, *(void *)(*(void *)(v100 - 8) + 64));
      }
      else
      {
        uint64_t v202 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v96, v97, v202);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v432 + 56))(v96, 0, 1, v98);
      }
      a3 = v438;
      a2 = v444;
      a1 = v443;
      *(void *)((char *)v91 + *(int *)(v433 + 28)) = *(void *)&v92[*(int *)(v433 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_179;
    case 9u:
      uint64_t v29 = a2[1];
      *a1 = *a2;
      a1[1] = v29;
      uint64_t v30 = a2[3];
      a1[2] = a2[2];
      a1[3] = v30;
      uint64_t v31 = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31)
      {
        uint64_t v32 = a2[8];
        a1[7] = v31;
        a1[8] = v32;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v31 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v31);
      }
      else
      {
        long long v158 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v158;
        a1[8] = a2[8];
      }
      uint64_t v159 = a1 + 9;
      uint64_t v160 = a2 + 9;
      uint64_t v161 = a2[12];
      if (v161)
      {
        uint64_t v162 = a2[13];
        a1[12] = v161;
        a1[13] = v162;
        (**(void (***)(_OWORD *, _OWORD *))(v161 - 8))(v159, v160);
      }
      else
      {
        long long v171 = *(_OWORD *)(a2 + 11);
        *uint64_t v159 = *v160;
        *(_OWORD *)(a1 + 11) = v171;
        a1[13] = a2[13];
      }
      uint64_t v172 = a1 + 14;
      uint64_t v173 = a2 + 14;
      uint64_t v174 = a2[17];
      if (v174)
      {
        uint64_t v175 = a2[18];
        a1[17] = v174;
        a1[18] = v175;
        (**(void (***)(_OWORD *, _OWORD *))(v174 - 8))(v172, v173);
      }
      else
      {
        long long v187 = *((_OWORD *)a2 + 8);
        *uint64_t v172 = *v173;
        *((_OWORD *)a1 + 8) = v187;
        a1[18] = a2[18];
      }
      goto LABEL_179;
    case 0xAu:
      uint64_t v101 = a2[1];
      *a1 = *a2;
      a1[1] = v101;
      uint64_t v102 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v103 = v102[5];
      uint64_t v104 = (char *)a1 + v103;
      uint64_t v105 = (char *)a2 + v103;
      uint64_t v106 = sub_1C151959C();
      uint64_t v107 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v108 = v106;
      a2 = v444;
      v107(v104, v105, v108);
      *(void *)((char *)a1 + v102[6]) = *(void *)((char *)v444 + v102[6]);
      uint64_t v109 = v102[7];
      uint64_t v110 = (char *)a1 + v109;
      uint64_t v111 = (char *)v444 + v109;
      *(void *)uint64_t v110 = *(void *)v111;
      v110[8] = v111[8];
      uint64_t v112 = v102[8];
      uint64_t v23 = (char *)a1 + v112;
      uint64_t v24 = (char *)v444 + v112;
      unint64_t v25 = *((void *)v24 + 1);
      if (v25 >= 0x11)
      {
LABEL_37:
        *(void *)uint64_t v23 = *(void *)v24;
        *((void *)v23 + 1) = v25;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      }
      goto LABEL_179;
    case 0xBu:
      *a1 = *a2;
      swift_retain();
      goto LABEL_179;
    case 0xCu:
      uint64_t v33 = a2[1];
      *a1 = *a2;
      a1[1] = v33;
      uint64_t v34 = a2[3];
      a1[2] = a2[2];
      a1[3] = v34;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_179;
    case 0xDu:
      uint64_t v113 = a2[1];
      *a1 = *a2;
      a1[1] = v113;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v114 = a2 + 3;
      unint64_t v115 = a2[4];
      if (v115 >= 0x11)
      {
        a1[3] = *v114;
        a1[4] = v115;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v114;
      }
      uint64_t v142 = a2[6];
      a1[5] = a2[5];
      a1[6] = v142;
      uint64_t v143 = (void *)a2[8];
      a1[7] = a2[7];
      a1[8] = v143;
      *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
      a1[10] = a2[10];
      uint64_t v144 = a2[14];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v145 = v143;
      swift_bridgeObjectRetain();
      if (v144)
      {
        uint64_t v146 = a2[15];
        a1[14] = v144;
        a1[15] = v146;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v144 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v144);
      }
      else
      {
        long long v203 = *(_OWORD *)(a2 + 13);
        *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 13) = v203;
        a1[15] = a2[15];
      }
      uint64_t v204 = a1 + 16;
      uint64_t v205 = a2 + 16;
      uint64_t v206 = a2[19];
      if (v206)
      {
        uint64_t v207 = a2[20];
        a1[19] = v206;
        a1[20] = v207;
        (**(void (***)(_OWORD *, _OWORD *))(v206 - 8))(v204, v205);
      }
      else
      {
        long long v214 = *((_OWORD *)a2 + 9);
        *uint64_t v204 = *v205;
        *((_OWORD *)a1 + 9) = v214;
        a1[20] = a2[20];
      }
      uint64_t v215 = a1 + 21;
      uint64_t v216 = a2 + 21;
      uint64_t v217 = a2[24];
      if (v217)
      {
        uint64_t v218 = a2[25];
        a1[24] = v217;
        a1[25] = v218;
        (**(void (***)(_OWORD *, _OWORD *))(v217 - 8))(v215, v216);
      }
      else
      {
        long long v219 = *(_OWORD *)(a2 + 23);
        *uint64_t v215 = *v216;
        *(_OWORD *)(a1 + 23) = v219;
        a1[25] = a2[25];
      }
      goto LABEL_179;
    case 0xEu:
      uint64_t v35 = a2[1];
      *a1 = *a2;
      a1[1] = v35;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v36 = a2 + 3;
      unint64_t v37 = a2[4];
      if (v37 >= 0x11)
      {
        a1[3] = *v36;
        a1[4] = v37;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v36;
      }
      uint64_t v131 = a2[6];
      a1[5] = a2[5];
      a1[6] = v131;
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_179;
    case 0xFu:
      uint64_t v116 = a2[1];
      *a1 = *a2;
      a1[1] = v116;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v117 = a2 + 3;
      unint64_t v118 = a2[4];
      if (v118 >= 0x11)
      {
        a1[3] = *v117;
        a1[4] = v118;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v117;
      }
      break;
    case 0x10u:
      v436 = a3;
      uint64_t v38 = a2[1];
      *a1 = *a2;
      a1[1] = v38;
      uint64_t v39 = a2[3];
      a1[2] = a2[2];
      a1[3] = v39;
      uint64_t v40 = a2[5];
      a1[4] = a2[4];
      a1[5] = v40;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
      uint64_t v41 = a2[10];
      a1[9] = a2[9];
      a1[10] = v41;
      uint64_t v42 = a2[12];
      uint64_t v43 = a2[13];
      a1[11] = a2[11];
      a1[12] = v42;
      a1[13] = v43;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      uint64_t v44 = a2[16];
      a1[15] = a2[15];
      a1[16] = v44;
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      uint64_t v45 = a2[19];
      a1[18] = a2[18];
      a1[19] = v45;
      uint64_t v46 = a2[21];
      a1[20] = a2[20];
      a1[21] = v46;
      *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
      a1[22] = a2[22];
      uint64_t v47 = a2[25];
      a1[24] = a2[24];
      a1[25] = v47;
      *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
      uint64_t v48 = a2[27];
      a1[26] = a2[26];
      a1[27] = v48;
      uint64_t v430 = a2 + 29;
      unint64_t v49 = a2[30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v49 >= 0x11)
      {
        a1[29] = *v430;
        a1[30] = v49;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 29) = *(_OWORD *)v430;
      }
      a3 = v436;
      swift_storeEnumTagMultiPayload();
      goto LABEL_180;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_180;
  }
  uint64_t v147 = a2[6];
  a1[5] = a2[5];
  a1[6] = v147;
  uint64_t v148 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v149 = (char *)a1 + v148;
  uint64_t v150 = (char *)a2 + v148;
  *(void *)((char *)a1 + v148) = *(void *)((char *)a2 + v148);
  uint64_t v151 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v152 = &v149[v151];
  uint64_t v153 = &v150[v151];
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v238 = type metadata accessor for PuzzleStatisticValue(0);
      int v239 = swift_getEnumCaseMultiPayload();
      uint64_t v440 = v238;
      if (v239 == 5)
      {
        uint64_t v361 = type metadata accessor for PuzzleStreak();
        uint64_t v362 = *(void *)(v361 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v362 + 48))(v153, 1, v361))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v152, v153, *(void *)(*(void *)(v363 - 8) + 64));
        }
        else
        {
          uint64_t v397 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v397 - 8) + 16))(v152, v153, v397);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v362 + 56))(v152, 0, 1, v361);
        }
        uint64_t v364 = a3;
        uint64_t v238 = v440;
      }
      else
      {
        if (v239 != 4)
        {
          uint64_t v364 = a3;
          memcpy(v152, v153, *(void *)(*(void *)(v238 - 8) + 64));
          goto LABEL_190;
        }
        uint64_t v240 = type metadata accessor for PuzzleStreak();
        uint64_t v241 = *(void *)(v240 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v241 + 48))(v153, 1, v240))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v152, v153, *(void *)(*(void *)(v242 - 8) + 64));
        }
        else
        {
          uint64_t v372 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v372 - 8) + 16))(v152, v153, v372);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v241 + 56))(v152, 0, 1, v240);
        }
        uint64_t v364 = a3;
        uint64_t v238 = v440;
      }
      swift_storeEnumTagMultiPayload();
LABEL_190:
      uint64_t v398 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v399 = *(int *)(v398 + 20);
      int v400 = &v152[v399];
      uint64_t v401 = &v153[v399];
      int v402 = swift_getEnumCaseMultiPayload();
      if (v402 == 5)
      {
        size_t v407 = v152;
        uint64_t v408 = type metadata accessor for PuzzleStreak();
        uint64_t v409 = *(void *)(v408 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v409 + 48))(v401, 1, v408))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v400, v401, *(void *)(*(void *)(v410 - 8) + 64));
        }
        else
        {
          uint64_t v412 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v412 - 8) + 16))(v400, v401, v412);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v409 + 56))(v400, 0, 1, v408);
        }
        uint64_t v238 = v440;
        swift_storeEnumTagMultiPayload();
        uint64_t v152 = v407;
      }
      else if (v402 == 4)
      {
        uint64_t v403 = v152;
        uint64_t v404 = type metadata accessor for PuzzleStreak();
        uint64_t v405 = *(void *)(v404 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v405 + 48))(v401, 1, v404))
        {
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v400, v401, *(void *)(*(void *)(v406 - 8) + 64));
        }
        else
        {
          uint64_t v411 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v411 - 8) + 16))(v400, v401, v411);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v405 + 56))(v400, 0, 1, v404);
        }
        uint64_t v152 = v403;
        uint64_t v238 = v440;
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v400, v401, *(void *)(*(void *)(v238 - 8) + 64));
      }
      uint64_t v413 = *(int *)(v398 + 24);
      long long v414 = &v152[v413];
      long long v415 = &v153[v413];
      int v416 = swift_getEnumCaseMultiPayload();
      if (v416 == 5)
      {
        uint64_t v417 = type metadata accessor for PuzzleStreak();
        uint64_t v418 = *(void *)(v417 - 8);
        a3 = v364;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v418 + 48))(v415, 1, v417))
        {
LABEL_204:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v414, v415, *(void *)(*(void *)(v419 - 8) + 64));
          goto LABEL_209;
        }
      }
      else
      {
        a3 = v364;
        if (v416 != 4)
        {
          memcpy(v414, v415, *(void *)(*(void *)(v238 - 8) + 64));
          a2 = v444;
          goto LABEL_178;
        }
        uint64_t v417 = type metadata accessor for PuzzleStreak();
        uint64_t v418 = *(void *)(v417 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v418 + 48))(v415, 1, v417)) {
          goto LABEL_204;
        }
      }
      uint64_t v420 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v420 - 8) + 16))(v414, v415, v420);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v418 + 56))(v414, 0, 1, v417);
LABEL_209:
      a2 = v444;
      swift_storeEnumTagMultiPayload();
      goto LABEL_178;
    case 2u:
      uint64_t v234 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v235 = *((void *)v234 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v235 + 48))(v153, 1, v234))
      {
        sub_1BFEEF2C0(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
        size_t v237 = *(void *)(*(void *)(v236 - 8) + 64);
        goto LABEL_163;
      }
      uint64_t v442 = a3;
      uint64_t v309 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 16))(v152, v153, v309);
      uint64_t v310 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v311 = v310[5];
      uint64_t v312 = &v152[v311];
      uint64_t v313 = &v153[v311];
      uint64_t v314 = *((void *)v313 + 1);
      *(void *)uint64_t v312 = *(void *)v313;
      *((void *)v312 + 1) = v314;
      uint64_t v315 = v310[6];
      unint64_t v429 = v152;
      uint64_t v316 = &v152[v315];
      unsigned int v317 = &v153[v315];
      uint64_t v318 = *((void *)v317 + 1);
      *(void *)uint64_t v316 = *(void *)v317;
      *((void *)v316 + 1) = v318;
      uint64_t v319 = (uint64_t *)(v317 + 16);
      unint64_t v320 = *((void *)v317 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v320 >> 60 == 15)
      {
        *((_OWORD *)v316 + 1) = *(_OWORD *)v319;
      }
      else
      {
        uint64_t v366 = *v319;
        sub_1BFE95820(*v319, v320);
        *((void *)v316 + 2) = v366;
        *((void *)v316 + 3) = v320;
      }
      *(void *)((char *)v429 + v310[7]) = *(void *)&v153[v310[7]];
      *(void *)((char *)v429 + v310[8]) = *(void *)&v153[v310[8]];
      *(void *)((char *)v429 + v234[5]) = *(void *)&v153[v234[5]];
      *(void *)((char *)v429 + v234[6]) = *(void *)&v153[v234[6]];
      uint64_t v367 = v234[7];
      uint64_t v368 = (void *)((char *)v429 + v367);
      uint64_t v369 = &v153[v367];
      uint64_t v370 = *((void *)v369 + 1);
      *uint64_t v368 = *(void *)v369;
      v368[1] = v370;
      uint64_t v371 = *(void (**)(void *, void, uint64_t, int *))(v235 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v371(v429, 0, 1, v234);
      a3 = v442;
      a2 = v444;
      goto LABEL_178;
    case 3u:
      v441 = a3;
      uint64_t v243 = *((void *)v153 + 1);
      *(void *)uint64_t v152 = *(void *)v153;
      *((void *)v152 + 1) = v243;
      v152[16] = v153[16];
      uint64_t v244 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v245 = v244[6];
      v428 = v152;
      uint64_t v246 = &v152[v245];
      uint64_t v247 = &v153[v245];
      uint64_t v248 = type metadata accessor for PuzzleStreak();
      uint64_t v249 = *(void *)(v248 - 8);
      uint64_t v250 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v249 + 48);
      if (v250(v247, 1, v248))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v246, v247, *(void *)(*(void *)(v251 - 8) + 64));
      }
      else
      {
        uint64_t v342 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v342 - 8) + 16))(v246, v247, v342);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v249 + 56))(v246, 0, 1, v248);
      }
      uint64_t v343 = v244[7];
      uint64_t v344 = (char *)v428 + v343;
      uint64_t v345 = &v153[v343];
      if (v250(&v153[v343], 1, v248))
      {
        sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
        memcpy(v344, v345, *(void *)(*(void *)(v346 - 8) + 64));
      }
      else
      {
        uint64_t v347 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v347 - 8) + 16))(v344, v345, v347);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v249 + 56))(v344, 0, 1, v248);
      }
      a3 = v441;
      uint64_t v348 = v244[8];
      unsigned __int8 v349 = (_OWORD *)((char *)v428 + v348);
      uint64_t v350 = &v153[v348];
      long long v351 = *((_OWORD *)v350 + 1);
      *unsigned __int8 v349 = *(_OWORD *)v350;
      v349[1] = v351;
      *(_OWORD *)((char *)v349 + 25) = *(_OWORD *)(v350 + 25);
      uint64_t v352 = v244[9];
      uint64_t v353 = (_OWORD *)((char *)v428 + v352);
      uint64_t v354 = &v153[v352];
      *(_OWORD *)((char *)v353 + 25) = *(_OWORD *)(v354 + 25);
      long long v355 = *((_OWORD *)v354 + 1);
      *uint64_t v353 = *(_OWORD *)v354;
      v353[1] = v355;
      uint64_t v356 = v244[10];
      uint64_t v357 = (_OWORD *)((char *)v428 + v356);
      uint64_t v358 = &v153[v356];
      long long v359 = *((_OWORD *)v358 + 1);
      *uint64_t v357 = *(_OWORD *)v358;
      v357[1] = v359;
      *(_OWORD *)((char *)v357 + 25) = *(_OWORD *)(v358 + 25);
      goto LABEL_177;
    default:
      uint64_t v154 = type metadata accessor for PuzzleStatisticValue(0);
      int v155 = swift_getEnumCaseMultiPayload();
      if (v155 == 5)
      {
        uint64_t v156 = type metadata accessor for PuzzleStreak();
        uint64_t v157 = *(void *)(v156 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v153, 1, v156))
        {
LABEL_161:
          sub_1BFEEF2C0(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
          memcpy(v152, v153, *(void *)(*(void *)(v360 - 8) + 64));
LABEL_176:
          swift_storeEnumTagMultiPayload();
          goto LABEL_177;
        }
      }
      else
      {
        if (v155 != 4)
        {
          size_t v237 = *(void *)(*(void *)(v154 - 8) + 64);
LABEL_163:
          memcpy(v152, v153, v237);
LABEL_177:
          a2 = v444;
LABEL_178:
          swift_storeEnumTagMultiPayload();
          goto LABEL_179;
        }
        uint64_t v156 = type metadata accessor for PuzzleStreak();
        uint64_t v157 = *(void *)(v156 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v153, 1, v156)) {
          goto LABEL_161;
        }
      }
      uint64_t v373 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v373 - 8) + 16))(v152, v153, v373);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v157 + 56))(v152, 0, 1, v156);
      goto LABEL_176;
  }
}

uint64_t sub_1BFF76714(int64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v7 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v79 - v9;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v79 - v13;
  uint64_t v15 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
  int v16 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary + 48);
  if (v16 == 255)
  {
    uint64_t v84 = v12;
    long long v88 = v3;
    uint64_t v17 = v2 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
    swift_beginAccess();
    uint64_t v82 = v17;
    sub_1BFF771CC(v17, (uint64_t)v10);
    uint64_t v18 = *(void *)(a2 + 32);
    uint64_t v85 = *(void *)(a2 + 40);
    uint64_t v86 = v18;
    uint64_t v83 = v4;
    uint64_t v19 = *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      do
      {
        char v90 = *(unsigned char *)(v19 + v21 + 32);
        sub_1BFF7D240(v89);
        uint64_t v23 = v89[0];
        if ((v89[0] & ~v22) == 0) {
          uint64_t v23 = 0;
        }
        v22 |= v23;
        ++v21;
      }
      while (v20 != v21);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = 0;
    }
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v22;
    sub_1BFF772A4(0, qword_1EB8707F8, (uint64_t (*)(uint64_t))sub_1BFFFCF34, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    uint64_t v81 = v40;
    uint64_t v41 = swift_allocObject();
    uint64_t v87 = v41;
    *(void *)(v41 + 16) = MEMORY[0x1E4FBC860];
    uint64_t v42 = (void **)(v41 + 16);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = sub_1BFEA9DD8;
    *(void *)(v43 + 24) = v39;
    swift_beginAccess();
    uint64_t v44 = *v42;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v42 = v44;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v44 = sub_1BFF77230(0, v44[2] + 1, 1, v44);
      *uint64_t v42 = v44;
    }
    unint64_t v47 = v44[2];
    unint64_t v46 = v44[3];
    if (v47 >= v46 >> 1)
    {
      uint64_t v44 = sub_1BFF77230((void *)(v46 > 1), v47 + 1, 1, v44);
      *uint64_t v42 = v44;
    }
    v44[2] = v47 + 1;
    uint64_t v48 = &v44[2 * v47];
    v48[4] = sub_1BFEA6670;
    v48[5] = v43;
    swift_endAccess();
    swift_release();
    unint64_t v49 = v88;
    uint64_t v2 = (uint64_t)v10;
    uint64_t v50 = GroupLayoutBindingContext.peek(count:slotIdentifier:sorter:)(a1, v86, v85, v87);
    if (!v49)
    {
      uint64_t v2 = (uint64_t)v50;
      sub_1BFF7712C((uint64_t)v10);
LABEL_42:
      swift_release();
      return v2;
    }
    sub_1BFF7712C((uint64_t)v10);
    swift_release();
    if (*(unsigned char *)(v83 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback))
    {
      sub_1BFF771CC(v82, v84);
      uint64_t v51 = *(void *)(v19 + 16);
      if (v51)
      {
        swift_bridgeObjectRetain();
        uint64_t v52 = 0;
        uint64_t v53 = 0;
        do
        {
          char v90 = *(unsigned char *)(v19 + v52 + 32);
          sub_1BFF7D240(v89);
          uint64_t v54 = v89[0];
          if ((v89[0] & ~v53) == 0) {
            uint64_t v54 = 0;
          }
          v53 |= v54;
          ++v52;
        }
        while (v51 != v52);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v53 = 0;
      }
      uint64_t v56 = swift_allocObject();
      *(void *)(v56 + 16) = v53;
      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = MEMORY[0x1E4FBC860];
      uint64_t v58 = (void *)(v57 + 16);
      uint64_t v59 = swift_allocObject();
      *(void *)(v59 + 16) = sub_1C0462274;
      *(void *)(v59 + 24) = v56;
      swift_beginAccess();
      uint64_t v60 = *(void **)(v57 + 16);
      swift_retain();
      char v61 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v57 + 16) = v60;
      if ((v61 & 1) == 0)
      {
        uint64_t v60 = sub_1BFF77230(0, v60[2] + 1, 1, v60);
        *uint64_t v58 = v60;
      }
      unint64_t v63 = v60[2];
      unint64_t v62 = v60[3];
      if (v63 >= v62 >> 1)
      {
        uint64_t v60 = sub_1BFF77230((void *)(v62 > 1), v63 + 1, 1, v60);
        *uint64_t v58 = v60;
      }
      v60[2] = v63 + 1;
      uint64_t v64 = &v60[2 * v63];
      v64[4] = sub_1BFEA6670;
      v64[5] = v59;
      swift_endAccess();
      swift_release();
      uint64_t v65 = v57;
      uint64_t v66 = v84;
      uint64_t v2 = (uint64_t)GroupLayoutBindingContext.peek(count:slotIdentifier:sorter:)(a1, 0, 0, v65);
      sub_1BFF7712C(v66);

      goto LABEL_42;
    }
    goto LABEL_35;
  }
  if ((v16 & 1) == 0)
  {
    type metadata accessor for FormatLayoutError();
    sub_1BFFBA7B4((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
LABEL_34:
    swift_willThrow();
LABEL_35:
    swift_willThrow();
    return v2;
  }
  uint64_t v25 = *v15;
  uint64_t v24 = v15[1];
  uint64_t v26 = v15[4];
  uint64_t v27 = v15[5];
  unint64_t v28 = (uint64_t *)(v2 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders);
  swift_beginAccess();
  uint64_t v29 = *v28;
  if (!*(void *)(v29 + 16))
  {
LABEL_33:
    swift_endAccess();
    uint64_t v2 = type metadata accessor for FormatLayoutError();
    sub_1BFFBA7B4((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
    swift_allocError();
    *unint64_t v55 = v25;
    v55[1] = v24;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  unint64_t v30 = sub_1BFEF2D8C(v25, v24);
  if ((v31 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  uint64_t v87 = v26;
  long long v88 = v3;
  uint64_t v32 = *(void *)(*(void *)(v29 + 56) + 8 * v30);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v86 = v32;
  uint64_t v33 = v32 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext;
  swift_beginAccess();
  sub_1BFF771CC(v33, (uint64_t)v14);
  uint64_t v34 = *(void *)(v4 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy);
  uint64_t v35 = *(void *)(v34 + 16);
  int64_t v80 = a1;
  if (v35)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    do
    {
      char v90 = *(unsigned char *)(v34 + v36 + 32);
      sub_1BFF7D240(v89);
      uint64_t v38 = v89[0];
      if ((v89[0] & ~v37) == 0) {
        uint64_t v38 = 0;
      }
      v37 |= v38;
      ++v36;
    }
    while (v35 != v36);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = 0;
  }
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = v37;
  sub_1BFF772A4(0, qword_1EB8707F8, (uint64_t (*)(uint64_t))sub_1BFFFCF34, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = MEMORY[0x1E4FBC860];
  uint64_t v70 = (void *)(v69 + 16);
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = sub_1C0462274;
  *(void *)(v71 + 24) = v68;
  swift_beginAccess();
  id v72 = *(void **)(v69 + 16);
  swift_retain();
  char v73 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v69 + 16) = v72;
  uint64_t v74 = v27;
  if ((v73 & 1) == 0)
  {
    id v72 = sub_1BFF77230(0, v72[2] + 1, 1, v72);
    *uint64_t v70 = v72;
  }
  unint64_t v76 = v72[2];
  unint64_t v75 = v72[3];
  if (v76 >= v75 >> 1)
  {
    id v72 = sub_1BFF77230((void *)(v75 > 1), v76 + 1, 1, v72);
    *uint64_t v70 = v72;
  }
  v72[2] = v76 + 1;
  uint64_t v77 = &v72[2 * v76];
  v77[4] = sub_1BFEA6670;
  v77[5] = v71;
  swift_endAccess();
  swift_release();
  uint64_t v78 = v88;
  uint64_t v2 = (uint64_t)GroupLayoutBindingContext.peek(count:slotIdentifier:sorter:)(v80, v87, v74, v69);
  swift_release();
  swift_release();
  sub_1BFF7712C((uint64_t)v14);
  if (v78) {
    goto LABEL_35;
  }
  return v2;
}

void *sub_1BFF77004(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t))
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFEC0BBC(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (void *)swift_allocObject();
      int64_t v13 = _swift_stdlib_malloc_size(v12);
      uint64_t v14 = v13 - 32;
      if (v13 < 32) {
        uint64_t v14 = v13 - 17;
      }
      void v12[2] = v10;
      v12[3] = 2 * (v14 >> 4);
      uint64_t v15 = v12 + 4;
      if (v7) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[2 * v10 + 4]) {
          memmove(v15, a4 + 4, 16 * v10);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C0EEA29C(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFF7712C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GroupLayoutBindingContext();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BFF77188()
{
  unint64_t result = qword_1EB87A948;
  if (!qword_1EB87A948)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EB87A948);
  }
  return result;
}

uint64_t sub_1BFF771CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for GroupLayoutBindingContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_1BFF77230(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFF77004(a1, a2, a3, a4, &qword_1EB8710C0, (uint64_t (*)(uint64_t))sub_1BFF77250);
}

unint64_t sub_1BFF77250()
{
  unint64_t result = qword_1EB871048;
  if (!qword_1EB871048)
  {
    sub_1C00641E0();
    unint64_t result = swift_getFunctionTypeMetadata2();
    atomic_store(result, (unint64_t *)&qword_1EB871048);
  }
  return result;
}

void sub_1BFF772A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFF77308(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != 3 && a5 != 2)
  {
    if (a5) {
      return result;
    }
    sub_1BFEEFC20(result, a2);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BFF77374(unint64_t result, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, __int16 a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14)
{
  switch((a14 >> 18) & 4 | ((unsigned __int16)a14 >> 14))
  {
    case 0u:
      unint64_t result = sub_1BFF01078(result, a2, a3, a4, a5, a6);
      break;
    case 1u:
      sub_1BFF0084C(result, a2, a3, a4, a5, a6, a7, SHIBYTE(a7));
      unint64_t result = sub_1BFF00C44(a8, a9, a10, a11, a12, a13, a14 & 0xFFEF3FFF);
      break;
    case 5u:
      unint64_t result = sub_1BFD7418C(result, a2, a3, a4);
      break;
    case 6u:
      sub_1BFF07CD8(result);
      unint64_t result = sub_1C00197B8(a2, a3);
      break;
    case 7u:
      unint64_t result = sub_1C05D8C14(a2);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFF77510(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v27 = a1;
  uint64_t v26 = sub_1C15191EC();
  MEMORY[0x1F4188790](v26);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 16);
  if (v12)
  {
    v24[0] = a4;
    uint64_t v25 = (void (**)(char *, uint64_t))(v9 + 8);
    swift_bridgeObjectRetain();
    v24[1] = a3;
    int64_t v13 = (unint64_t *)(a3 + 40);
    uint64_t v14 = v27;
    while (1)
    {
      uint64_t v28 = v12;
      uint64_t v15 = a2;
      unint64_t v16 = *(v13 - 1);
      unint64_t v17 = *v13;
      unint64_t v29 = v16;
      swift_retain();
      sub_1BFF35EA4(v17);
      swift_retain();
      uint64_t v18 = v14;
      uint64_t v19 = v15;
      sub_1BFF17D10(v18, v15, (uint64_t)v11);
      swift_release();
      if (v5) {
        break;
      }
      if (sub_1C15191DC())
      {
        a2 = v15;
        uint64_t v14 = v27;
      }
      else
      {
        uint64_t v20 = v11;
        unint64_t v29 = v16;
        swift_retain();
        uint64_t v21 = v27;
        a2 = v19;
        FormatExpression.bind(binder:context:)(v27, v19);
        swift_release();
        unint64_t v29 = v17;
        sub_1BFF35EA4(v17);
        FormatSize.bind(binder:context:)(v21, v19);
        uint64_t v14 = v21;
        sub_1BFF322A8(v17);
        uint64_t v11 = v20;
      }
      char v22 = sub_1C15191CC();
      (*v25)(v11, v26);
      swift_release();
      sub_1BFF322A8(v17);
      if (v22) {
        return swift_bridgeObjectRelease();
      }
      v13 += 2;
      uint64_t v12 = v28 - 1;
      if (v28 == 1)
      {
        swift_bridgeObjectRelease();
        a4 = v24[0];
        goto LABEL_10;
      }
    }
    swift_release();
    sub_1BFF322A8(v17);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_10:
    unint64_t v29 = a4;
    sub_1BFF35EA4(a4);
    FormatSize.bind(binder:context:)(v27, a2);
    return sub_1BFF322A8(a4);
  }
}

void FormatCommandBinding.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v9 = *(void *)v2;
  uint64_t v8 = *(void *)(v2 + 8);
  uint64_t v10 = *(void *)(v2 + 16);
  unsigned int v11 = *(unsigned __int8 *)(v2 + 24);
  char v12 = *(unsigned char *)(v2 + 25);
  switch((4 * v12) | (*(unsigned char *)(v2 + 24) >> 2) & 3)
  {
    case 1:
    case 2:
    case 4:
    case 5:
    case 8:
      return;
    case 3:
      switch(*(void *)(v2 + 16))
      {
        case 1u:
          if ((~v9 & 0xF000000000000007) == 0) {
            return;
          }
          uint64_t v16 = *(void *)v2;
          sub_1C05D881C(v9, v8, v10, v11, v12, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
          sub_1BFDC11A4(v9);
          FormatTextContent.bind(binder:context:)(a1, v15);
          sub_1BFDC11BC(v9);
          break;
        case 2u:
          return;
        default:
          goto LABEL_7;
      }
      goto LABEL_7;
    case 6:
      uint64_t v16 = *(void *)v2;
      uint64_t v17 = v8;
      uint64_t v18 = v10;
      char v19 = v11 & 0xF3;
      sub_1C00AB750(v9, v8, v10, v11 & 0xF3, (uint64_t (*)(void))sub_1C00AB56C);
      FormatSportsEventBinding.Command.bind(binder:context:)(a1, v15);
      goto LABEL_7;
    case 7:
      if (v11)
      {
        uint64_t v16 = *(void *)v2;
        uint64_t v17 = v8;
        uint64_t v18 = v10;
        char v20 = 5;
        sub_1C05D881C(v9, v8, v10, v11, v12, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB94C);
        uint64_t v13 = sub_1C12ECBDC(&v16, &v20);
        if (!v3)
        {
          sub_1C0EC63F8(v9, v8, v13, 1, (uint64_t)v7);
          sub_1C05DDCC0((uint64_t)v7, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
          swift_bridgeObjectRelease();
        }
      }
      return;
    default:
      uint64_t v16 = *(void *)v2;
      uint64_t v17 = v8;
      uint64_t v18 = v10;
      char v19 = v11;
      sub_1C00AB700(v9, v8, v10, v11, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C);
      FormatGroupBinding.Command.bind(binder:context:)(a1, v15);
LABEL_7:
      sub_1C05D881C(v9, v8, v10, v11, v12, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))sub_1BFDEB9E0);
      return;
  }
}

void sub_1BFF77AEC()
{
  if (!qword_1EB87D000[0])
  {
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, qword_1EB87D000);
    }
  }
}

uint64_t sub_1BFF77B44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFF77B8C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v62 = (long long *)a2;
  char v61 = a1;
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF14F38(0, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v49 - v12);
  uint64_t v58 = *(void *)(a3 + 16);
  if (v58)
  {
    uint64_t v14 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v15 = *(void *)(v11 + 72);
    uint64_t v55 = a3;
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    uint64_t v56 = v13;
    uint64_t v52 = v7;
    uint64_t v50 = v9;
    uint64_t v53 = v14;
    uint64_t v54 = v15;
    while (1)
    {
      sub_1C1147A90(v14 + v15 * v16, (uint64_t)v13, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      uint64_t v17 = v13[6];
      uint64_t v18 = v13[7];
      uint64_t v19 = v13[8];
      uint64_t v20 = *(void *)(v17 + 16);
      uint64_t v59 = v16;
      uint64_t v60 = v19;
      if (v20) {
        break;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      sub_1BFF11C38(v61, (uint64_t)v62, v18);
      swift_bridgeObjectRelease();
      if (v4) {
        goto LABEL_16;
      }
      uint64_t v41 = *(void *)(v60 + 16);
      if (v41)
      {
        uint64_t v42 = v52;
        uint64_t v43 = v60 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
        swift_bridgeObjectRetain_n();
        uint64_t v44 = *(void *)(v42 + 72);
        do
        {
          sub_1C1147A28(v43, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v45 = *((void *)v9 + 2);
          long long v46 = v62[5];
          long long v69 = v62[4];
          long long v70 = v46;
          uint64_t v71 = *((void *)v62 + 12);
          uint64_t v72 = v45;
          long long v47 = v62[1];
          long long v65 = *v62;
          long long v66 = v47;
          long long v48 = v62[3];
          long long v67 = v62[2];
          long long v68 = v48;
          swift_retain();
          sub_1BFF2871C(v61, (uint64_t)&v65);
          swift_release();
          sub_1C1147B04((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
          v43 += v44;
          --v41;
        }
        while (v41);
        swift_bridgeObjectRelease_n();
        uint64_t v15 = v54;
        uint64_t v16 = v59;
      }
      ++v16;
      sub_1C114971C((uint64_t)v13, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
      uint64_t v14 = v53;
      if (v16 == v58) {
        goto LABEL_17;
      }
    }
    uint64_t v63 = v20;
    uint64_t v51 = v18;
    uint64_t v80 = v4;
    uint64_t v21 = v17;
    swift_bridgeObjectRetain_n();
    uint64_t v57 = v21;
    char v22 = (uint64_t *)(v21 + 48);
    while (1)
    {
      uint64_t v23 = *(v22 - 1);
      uint64_t v24 = *v22;
      uint64_t v25 = v22[1];
      uint64_t v26 = v22[2];
      uint64_t v27 = v22[3];
      unint64_t v28 = v22[4];
      uint64_t v29 = v22[5];
      uint64_t v72 = *(v22 - 2);
      uint64_t v73 = v23;
      uint64_t v74 = v24;
      uint64_t v75 = v25;
      uint64_t v76 = v26;
      uint64_t v77 = v27;
      unint64_t v78 = v28;
      uint64_t v79 = v29;
      long long v30 = v62[5];
      long long v69 = v62[4];
      long long v70 = v30;
      uint64_t v71 = *((void *)v62 + 12);
      long long v31 = v62[1];
      long long v65 = *v62;
      long long v66 = v31;
      long long v32 = v62[3];
      long long v67 = v62[2];
      long long v68 = v32;
      uint64_t v33 = v72;
      uint64_t v34 = v23;
      uint64_t v35 = v24;
      uint64_t v36 = v25;
      uint64_t v37 = v26;
      uint64_t v38 = v27;
      unint64_t v39 = v28;
      uint64_t v64 = v29;
      sub_1BFF95098(v72, v23, v24, v25, v26, v27, v28);
      uint64_t v40 = v80;
      sub_1C05D2144(v61, (uint64_t)&v65);
      uint64_t v80 = v40;
      if (v40) {
        break;
      }
      v22 += 8;
      sub_1BFF94FE4(v33, v34, v35, v36, v37, v38, v39);
      if (!--v63)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v4 = v80;
        uint64_t v13 = v56;
        uint64_t v9 = v50;
        uint64_t v15 = v54;
        uint64_t v16 = v59;
        uint64_t v18 = v51;
        goto LABEL_8;
      }
    }
    sub_1BFF94FE4(v33, v34, v35, v36, v37, v38, v39);
    swift_bridgeObjectRelease_n();
    uint64_t v13 = v56;
LABEL_16:
    sub_1C114971C((uint64_t)v13, (unint64_t *)&qword_1EB874220, (uint64_t (*)(void))sub_1C00F6C5C, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
LABEL_17:
    swift_bridgeObjectRelease();
  }
}

void sub_1BFF78194(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFF781FC(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  long long v7 = *(_OWORD *)(a2 + 80);
  v25[4] = *(_OWORD *)(a2 + 64);
  v25[5] = v7;
  uint64_t v26 = *(void *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 16);
  v25[0] = *(_OWORD *)a2;
  v25[1] = v8;
  long long v9 = *(_OWORD *)(a2 + 48);
  _OWORD v25[2] = *(_OWORD *)(a2 + 32);
  v25[3] = v9;
  sub_1BFF7AB68(a1, a2);
  if (!v3)
  {
    swift_beginAccess();
    uint64_t v10 = v2[6];
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v11; ++i)
      {
        unint64_t v13 = *(void *)(v10 + 8 * i + 32);
        sub_1BFF32264(v13);
        sub_1BFF0D378((uint64_t)a1, a2);
        sub_1BFF31E90(v13);
      }
      swift_bridgeObjectRelease_n();
    }
    if (v2[7]) {
      sub_1BFF7855C(a1, a2);
    }
    uint64_t v14 = v2[8];
    if (v14)
    {
      swift_beginAccess();
      uint64_t v15 = *(void *)(v14 + 72);
      if (v15)
      {
        swift_bridgeObjectRetain();
        sub_1C0000E48((uint64_t)a1, (uint64_t)v25, v15);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v16 = *(void *)(v14 + 88);
      uint64_t v17 = *(void *)(v16 + 16);
      if (v17)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v18 = (uint64_t *)(v16 + 72);
        do
        {
          uint64_t v19 = *v18;
          if (*v18)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C0000E48((uint64_t)a1, (uint64_t)v25, v19);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v18 += 7;
          --v17;
        }
        while (v17);
        swift_bridgeObjectRelease_n();
      }
    }
    sub_1BFE2F328(a1, (uint64_t)v25);
    if (*((__int16 *)v4 + 52) <= -1025) {
      sub_1BFF8449C(a1, (uint64_t)v25);
    }
    swift_beginAccess();
    unint64_t v20 = v4[15];
    if (v20 >> 62 == 1)
    {
      uint64_t v21 = v20 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v22 = *(void *)(v21 + 16);
      uint64_t v23 = *(void *)(v21 + 24);
      sub_1BFE6FA30(v22);
      swift_bridgeObjectRetain();
      sub_1C1144E0C((uint64_t)a1, (uint64_t)v25, v22, v23);
      sub_1BFF0056C(v22);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v24 = v4[20];
    swift_bridgeObjectRetain();
    sub_1C11402C0(a1, v25, v24);
    swift_bridgeObjectRelease();
  }
}

void sub_1BFF7855C(unint64_t *a1, uint64_t a2)
{
  uint64_t v41 = *(void *)a2;
  char v42 = *(unsigned char *)(a2 + 8);
  char v37 = *(unsigned char *)(a2 + 9);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v36 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v39 = *(void *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v45 = *(void *)(a2 + 72);
  uint64_t v46 = *(void *)(a2 + 64);
  uint64_t v78 = *(void *)(a2 + 88);
  uint64_t v47 = *(void *)(a2 + 96);
  swift_beginAccess();
  uint64_t v34 = v2;
  uint64_t v9 = *(void *)(v2 + 48);
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v44 = v8;
  uint64_t v40 = v5;
  if (v10)
  {
    swift_bridgeObjectRetain_n();
    memcpy(__dst, (const void *)(v9 + 32), sizeof(__dst));
    uint64_t v11 = v10 - 1;
    for (uint64_t i = 560; ; i += 528)
    {
      memcpy(v76, __dst, sizeof(v76));
      uint64_t v62 = v41;
      char v63 = v42;
      char v64 = v37;
      uint64_t v65 = v36;
      uint64_t v66 = v4;
      uint64_t v67 = v5;
      uint64_t v68 = v39;
      uint64_t v69 = v6;
      uint64_t v70 = v7;
      uint64_t v71 = v46;
      uint64_t v72 = v45;
      uint64_t v73 = v44;
      uint64_t v74 = v78;
      uint64_t v75 = v47;
      sub_1C05DC340((uint64_t)__dst);
      sub_1BFF78BE8(a1, (uint64_t)&v62);
      if (v3)
      {
        sub_1C05DC4C4((uint64_t)__dst);
        swift_bridgeObjectRelease_n();
        return;
      }
      sub_1C05DC4C4((uint64_t)__dst);
      if (!v11) {
        break;
      }
      memcpy(__dst, (const void *)(v9 + i), sizeof(__dst));
      --v11;
    }
    swift_bridgeObjectRelease_n();
    uint64_t v17 = v36;
    uint64_t v18 = v5;
    uint64_t v8 = v44;
    uint64_t v13 = v78;
    uint64_t v14 = v47;
    uint64_t v15 = v2;
    char v16 = v37;
  }
  else
  {
    uint64_t v13 = v78;
    uint64_t v14 = v47;
    uint64_t v15 = v2;
    char v16 = v37;
    uint64_t v17 = v36;
    uint64_t v18 = v5;
  }
  if ((~*(void *)(v15 + 56) & 0xF000000000000007) != 0)
  {
    v76[0] = *(void *)(v15 + 56);
    __dst[0] = v41;
    LOBYTE(__dst[1]) = v42;
    BYTE1(__dst[1]) = v16;
    __dst[2] = v17;
    __dst[3] = v4;
    __dst[4] = v18;
    __dst[5] = v39;
    __dst[6] = v6;
    __dst[7] = v7;
    __dst[8] = v46;
    __dst[9] = v45;
    __dst[10] = v8;
    __dst[11] = v13;
    __dst[12] = v14;
    uint64_t v19 = v17;
    sub_1BFF79C34(a1, __dst);
    if (v3) {
      return;
    }
    uint64_t v35 = v7;
    uint64_t v38 = v6;
  }
  else
  {
    uint64_t v35 = v7;
    uint64_t v38 = v6;
    uint64_t v19 = v17;
  }
  uint64_t v20 = MEMORY[0x1E4FBB718];
  sub_1C05DC640(v15 + 64, (uint64_t)v76, (uint64_t)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
  sub_1C05DC640((uint64_t)v76, (uint64_t)__dst, (uint64_t)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill, v20, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
  uint64_t v21 = v39;
  if (sub_1C044587C((uint64_t)__dst) == 1)
  {
    char v22 = v16;
    uint64_t v23 = v19;
    uint64_t v24 = v4;
    uint64_t v26 = v45;
    uint64_t v25 = v46;
  }
  else
  {
    sub_1BFF6530C((uint64_t)__dst, (uint64_t)&v62);
    uint64_t v48 = v41;
    char v49 = v42;
    char v22 = v16;
    char v50 = v16;
    uint64_t v23 = v19;
    uint64_t v51 = v19;
    uint64_t v52 = v4;
    uint64_t v24 = v4;
    uint64_t v53 = v40;
    uint64_t v54 = v39;
    uint64_t v55 = v38;
    uint64_t v56 = v35;
    uint64_t v26 = v45;
    uint64_t v25 = v46;
    uint64_t v57 = v46;
    uint64_t v58 = v45;
    uint64_t v59 = v44;
    uint64_t v60 = v78;
    uint64_t v61 = v47;
    sub_1BFF79180((uint64_t)a1, (uint64_t)&v48);
    if (v3) {
      return;
    }
  }
  uint64_t v27 = v2;
  uint64_t v28 = *(void *)(v2 + 192);
  if (v28)
  {
    uint64_t v29 = *(void *)(v28 + 16);
    uint64_t v30 = v44;
    if (v29)
    {
      uint64_t v31 = swift_bridgeObjectRetain() + 64;
      while (1)
      {
        uint64_t v48 = *(void *)(v31 - 24);
        uint64_t v62 = v41;
        char v63 = v42;
        char v64 = v22;
        uint64_t v65 = v36;
        uint64_t v66 = v24;
        uint64_t v67 = v40;
        uint64_t v68 = v21;
        uint64_t v69 = v38;
        uint64_t v70 = v35;
        uint64_t v71 = v46;
        uint64_t v72 = v45;
        uint64_t v73 = v30;
        uint64_t v74 = v78;
        uint64_t v75 = v47;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BFF79540((uint64_t)a1, (uint64_t)&v62);
        if (v3) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v31 += 40;
        --v29;
        uint64_t v21 = v39;
        uint64_t v30 = v44;
        if (!v29)
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = v36;
          uint64_t v26 = v45;
          uint64_t v25 = v46;
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      return;
    }
LABEL_22:
    uint64_t v27 = v34;
  }
  else
  {
    uint64_t v30 = v44;
  }
  if (*(unsigned __int8 *)(v27 + 280) != 254)
  {
    uint64_t v48 = *(void *)(v27 + 232);
    uint64_t v62 = v41;
    char v63 = v42;
    char v64 = v22;
    uint64_t v65 = v23;
    uint64_t v66 = v24;
    uint64_t v67 = v40;
    uint64_t v68 = v21;
    uint64_t v69 = v38;
    uint64_t v70 = v35;
    uint64_t v71 = v25;
    uint64_t v72 = v26;
    uint64_t v73 = v30;
    uint64_t v74 = v78;
    uint64_t v75 = v47;
    sub_1BFF79540((uint64_t)a1, (uint64_t)&v62);
    if (v3) {
      return;
    }
    uint64_t v27 = v34;
  }
  if (*(void *)(v27 + 520) != 9)
  {
    uint64_t v32 = *(void *)(v27 + 528);
    if ((~v32 & 0xF000000000000007) != 0)
    {
      uint64_t v48 = *(void *)(v27 + 528);
      uint64_t v62 = v41;
      char v63 = v42;
      char v64 = v22;
      uint64_t v65 = v23;
      uint64_t v66 = v24;
      uint64_t v67 = v40;
      uint64_t v68 = v21;
      uint64_t v69 = v38;
      uint64_t v70 = v35;
      uint64_t v71 = v25;
      uint64_t v72 = v26;
      uint64_t v73 = v30;
      uint64_t v74 = v78;
      uint64_t v75 = v47;
      sub_1BFF79540((uint64_t)a1, (uint64_t)&v62);
      if (v3) {
        return;
      }
      uint64_t v27 = v34;
    }
    else
    {
      sub_1BFEF8750(*(void *)(v27 + 520), v32);
    }
  }
  if (*(void *)(v27 + 536) != 9)
  {
    uint64_t v33 = *(void *)(v27 + 544);
    if ((~v33 & 0xF000000000000007) != 0)
    {
      uint64_t v48 = *(void *)(v27 + 544);
      uint64_t v62 = v41;
      char v63 = v42;
      char v64 = v22;
      uint64_t v65 = v23;
      uint64_t v66 = v24;
      uint64_t v67 = v40;
      uint64_t v68 = v21;
      uint64_t v69 = v38;
      uint64_t v70 = v35;
      uint64_t v71 = v25;
      uint64_t v72 = v26;
      uint64_t v73 = v30;
      uint64_t v74 = v78;
      uint64_t v75 = v47;
      sub_1BFF79540((uint64_t)a1, (uint64_t)&v62);
    }
    else
    {
      sub_1BFEF8750(*(void *)(v27 + 536), v33);
    }
  }
}

void sub_1BFF78BE8(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v51 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v49 = *(void *)(a2 + 40);
  uint64_t v53 = *(void *)(a2 + 56);
  uint64_t v54 = *(void *)(a2 + 48);
  uint64_t v52 = *(void *)(a2 + 64);
  uint64_t v43 = *(void *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 96);
  uint64_t v55 = *(void *)(a2 + 88);
  uint64_t v56 = *(void *)(a2 + 72);
  uint64_t v10 = *(void *)(v2 + 16);
  sub_1C05DC640(v2 + 24, (uint64_t)v99, (uint64_t)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
  int v39 = *(unsigned __int8 *)(v2 + 240);
  uint64_t v40 = *(void *)(v2 + 480);
  uint64_t v41 = *(void *)(v2 + 152);
  uint64_t v36 = *(void *)(v2 + 488);
  uint64_t v37 = *(void *)(v2 + 192);
  uint64_t v38 = *(void *)(v2 + 496);
  uint64_t v35 = *(void *)(v2 + 504);
  uint64_t v48 = (uint64_t)a1;
  uint64_t v50 = v8;
  uint64_t v42 = v9;
  if ((~v10 & 0xF000000000000007) != 0)
  {
    uint64_t v71 = v10;
    uint64_t v85 = v4;
    char v86 = v51;
    char v87 = v5;
    uint64_t v88 = v6;
    uint64_t v89 = v7;
    uint64_t v90 = v8;
    uint64_t v91 = v49;
    uint64_t v92 = v54;
    uint64_t v93 = v53;
    uint64_t v94 = v52;
    uint64_t v95 = v56;
    uint64_t v96 = v43;
    uint64_t v97 = v55;
    uint64_t v98 = v9;
    uint64_t v12 = v100;
    sub_1BFF79C34(a1, &v85);
    if (v12) {
      return;
    }
    uint64_t v46 = v7;
    uint64_t v47 = v6;
    char v11 = v5;
    uint64_t v100 = 0;
  }
  else
  {
    uint64_t v46 = v7;
    uint64_t v47 = v6;
    char v11 = v5;
  }
  uint64_t v13 = v52;
  uint64_t v14 = v53;
  uint64_t v15 = v54;
  uint64_t v16 = v49;
  sub_1C05DC640((uint64_t)v99, (uint64_t)&v85, (uint64_t)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEFDDA8);
  char v45 = v11;
  if (sub_1C044587C((uint64_t)&v85) == 1)
  {
    uint64_t v17 = v56;
    uint64_t v18 = v42;
    uint64_t v19 = v100;
    char v20 = v11;
  }
  else
  {
    sub_1BFF6530C((uint64_t)&v85, (uint64_t)&v71);
    uint64_t v57 = v4;
    char v58 = v51;
    char v59 = v11;
    uint64_t v60 = v47;
    uint64_t v61 = v46;
    uint64_t v62 = v50;
    uint64_t v63 = v49;
    uint64_t v64 = v54;
    uint64_t v65 = v53;
    uint64_t v66 = v52;
    uint64_t v67 = v56;
    uint64_t v68 = v43;
    uint64_t v69 = v55;
    uint64_t v70 = v42;
    uint64_t v19 = v100;
    sub_1BFF79180(v48, (uint64_t)&v57);
    if (v19) {
      return;
    }
    uint64_t v18 = v42;
    uint64_t v17 = v56;
    char v20 = v11;
  }
  uint64_t v21 = v43;
  uint64_t v22 = v40;
  uint64_t v23 = v50;
  if (v41)
  {
    uint64_t v24 = *(void *)(v41 + 16);
    if (v24)
    {
      uint64_t v100 = v19;
      uint64_t v25 = v18;
      swift_bridgeObjectRetain();
      uint64_t v26 = v25;
      uint64_t v27 = v41 + 64;
      uint64_t v44 = v4;
      while (1)
      {
        uint64_t v57 = *(void *)(v27 - 24);
        uint64_t v71 = v4;
        char v72 = v51;
        char v73 = v45;
        uint64_t v74 = v47;
        uint64_t v75 = v46;
        uint64_t v76 = v50;
        uint64_t v77 = v16;
        uint64_t v78 = v54;
        uint64_t v79 = v53;
        uint64_t v80 = v52;
        uint64_t v81 = v56;
        uint64_t v82 = v43;
        uint64_t v83 = v55;
        uint64_t v84 = v26;
        uint64_t v28 = v26;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        uint64_t v29 = v100;
        sub_1BFF79540(v48, (uint64_t)&v71);
        uint64_t v100 = v29;
        if (v29) {
          break;
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v27 += 40;
        --v24;
        uint64_t v4 = v44;
        uint64_t v16 = v49;
        uint64_t v26 = v28;
        if (!v24)
        {
          swift_bridgeObjectRelease();
          uint64_t v18 = v28;
          uint64_t v30 = v48;
          uint64_t v19 = v100;
          char v20 = v45;
          uint64_t v23 = v50;
          uint64_t v14 = v53;
          uint64_t v15 = v54;
          uint64_t v13 = v52;
          uint64_t v31 = v55;
          uint64_t v17 = v56;
          uint64_t v22 = v40;
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      return;
    }
    uint64_t v23 = v50;
  }
  uint64_t v31 = v55;
  uint64_t v30 = v48;
LABEL_17:
  if (v39 != 254)
  {
    uint64_t v57 = v37;
    uint64_t v71 = v4;
    char v72 = v51;
    char v73 = v20;
    uint64_t v74 = v47;
    uint64_t v75 = v46;
    uint64_t v76 = v23;
    uint64_t v77 = v16;
    uint64_t v78 = v15;
    uint64_t v79 = v14;
    uint64_t v80 = v13;
    uint64_t v81 = v17;
    uint64_t v82 = v43;
    uint64_t v83 = v31;
    uint64_t v84 = v18;
    uint64_t v32 = v30;
    uint64_t v33 = v30;
    uint64_t v34 = v18;
    sub_1BFF79540(v32, (uint64_t)&v71);
    if (v19) {
      return;
    }
    uint64_t v31 = v55;
    uint64_t v17 = v56;
    uint64_t v18 = v34;
    uint64_t v30 = v33;
    uint64_t v22 = v40;
    char v20 = v45;
    uint64_t v23 = v50;
  }
  if (v22 != 9)
  {
    if ((~v36 & 0xF000000000000007) != 0)
    {
      uint64_t v57 = v36;
      uint64_t v71 = v4;
      char v72 = v51;
      char v73 = v20;
      uint64_t v74 = v47;
      uint64_t v75 = v46;
      uint64_t v76 = v23;
      uint64_t v77 = v16;
      uint64_t v78 = v15;
      uint64_t v79 = v14;
      uint64_t v80 = v13;
      uint64_t v81 = v17;
      uint64_t v82 = v43;
      uint64_t v83 = v31;
      uint64_t v84 = v18;
      sub_1BFF79540(v30, (uint64_t)&v71);
      if (v19) {
        return;
      }
      uint64_t v15 = v54;
      uint64_t v31 = v55;
      uint64_t v21 = v43;
    }
    else
    {
      sub_1BFEF8750(v22, v36);
    }
  }
  if (v38 != 9)
  {
    if ((~v35 & 0xF000000000000007) != 0)
    {
      uint64_t v57 = v35;
      uint64_t v71 = v4;
      char v72 = v51;
      char v73 = v20;
      uint64_t v74 = v47;
      uint64_t v75 = v46;
      uint64_t v76 = v50;
      uint64_t v77 = v16;
      uint64_t v78 = v15;
      uint64_t v79 = v14;
      uint64_t v80 = v13;
      uint64_t v81 = v56;
      uint64_t v82 = v21;
      uint64_t v83 = v31;
      uint64_t v84 = v42;
      sub_1BFF79540(v48, (uint64_t)&v71);
    }
    else
    {
      sub_1BFEF8750(v38, v35);
    }
  }
}

uint64_t sub_1BFF79180(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v27 = *(void *)a2;
  char v28 = *(unsigned char *)(a2 + 8);
  char v29 = *(unsigned char *)(a2 + 9);
  long long v30 = *(_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 48);
  long long v31 = *(_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v9 = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 96);
  sub_1BFF6530C(v2, (uint64_t)v54);
  sub_1BFF6530C((uint64_t)v54, (uint64_t)v55);
  switch(sub_1C0444FE8((uint64_t)v55))
  {
    case 1u:
      uint64_t v14 = sub_1C0445038((uint64_t)v55);
      uint64_t v15 = *(void *)(v14 + 8);
      uint64_t v32 = *(void *)v14;
      uint64_t v33 = v15;
      long long v16 = *(_OWORD *)(v14 + 32);
      long long v34 = *(_OWORD *)(v14 + 16);
      long long v35 = v16;
      long long v36 = *(_OWORD *)(v14 + 48);
      uint64_t v42 = v27;
      char v43 = v28;
      char v44 = v29;
      long long v45 = v30;
      long long v46 = v31;
      uint64_t v47 = v5;
      uint64_t v48 = v6;
      uint64_t v49 = v7;
      uint64_t v50 = v9;
      uint64_t v51 = v8;
      uint64_t v52 = v11;
      uint64_t v53 = v10;
      uint64_t result = sub_1BFF7B500(a1, &v42);
      break;
    case 2u:
      uint64_t v25 = v6;
      uint64_t v26 = v5;
      uint64_t result = sub_1C0445038((uint64_t)v55);
      uint64_t v17 = *(void *)(result + 112);
      uint64_t v18 = *(void *)(v17 + 16);
      uint64_t v20 = *((void *)&v31 + 1);
      uint64_t v19 = v31;
      if (v18)
      {
        uint64_t v23 = v10;
        swift_bridgeObjectRetain();
        uint64_t v21 = 0;
        while (1)
        {
          uint64_t v32 = *(void *)(v17 + 8 * v21 + 32);
          uint64_t v42 = v27;
          char v43 = v28;
          char v44 = v29;
          long long v45 = v30;
          *(void *)&long long v46 = v19;
          *((void *)&v46 + 1) = v20;
          uint64_t v47 = v26;
          uint64_t v48 = v25;
          uint64_t v49 = v7;
          uint64_t v50 = v9;
          uint64_t v51 = v8;
          uint64_t v52 = v11;
          uint64_t v53 = v23;
          swift_retain();
          sub_1BFF79540(a1, (uint64_t)&v42);
          if (v4) {
            break;
          }
          ++v21;
          swift_release();
          uint64_t v20 = *((void *)&v31 + 1);
          uint64_t v19 = v31;
          if (v18 == v21) {
            return swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
      }
      break;
    case 3u:
      uint64_t v32 = *(void *)sub_1C0445038((uint64_t)v55);
      uint64_t v42 = v27;
      char v43 = v28;
      char v44 = v29;
      long long v45 = v30;
      long long v46 = v31;
      uint64_t v47 = v5;
      uint64_t v48 = v6;
      uint64_t v49 = v7;
      uint64_t v50 = v9;
      uint64_t v51 = v8;
      uint64_t v52 = v11;
      uint64_t v53 = v10;
      uint64_t result = sub_1BFF90A18(a1, &v42);
      break;
    default:
      uint64_t v12 = (uint64_t *)sub_1C0445038((uint64_t)v55);
      uint64_t v24 = v12[1];
      uint64_t v56 = *v12;
      uint64_t v32 = v27;
      LOBYTE(v33) = v28;
      BYTE1(v33) = v29;
      long long v34 = v30;
      long long v35 = v31;
      *(void *)&long long v36 = v5;
      *((void *)&v36 + 1) = v6;
      uint64_t v37 = v7;
      uint64_t v38 = v9;
      uint64_t v39 = v8;
      uint64_t v40 = v11;
      uint64_t v41 = v10;
      sub_1BFF6530C((uint64_t)v54, (uint64_t)&v42);
      sub_1C0445038((uint64_t)&v42);
      swift_retain();
      swift_retain();
      sub_1BFF79540(a1, (uint64_t)&v32);
      if (!v3)
      {
        uint64_t v56 = v24;
        uint64_t v32 = v27;
        LOBYTE(v33) = v28;
        BYTE1(v33) = v29;
        long long v34 = v30;
        long long v35 = v31;
        *(void *)&long long v36 = v5;
        *((void *)&v36 + 1) = v6;
        uint64_t v37 = v7;
        uint64_t v38 = v9;
        uint64_t v39 = v8;
        uint64_t v40 = v11;
        uint64_t v41 = v10;
        sub_1BFF79540(a1, (uint64_t)&v32);
      }
      uint64_t result = (uint64_t)sub_1C05DD52C(v54, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF89EC);
      break;
  }
  return result;
}

uint64_t sub_1BFF79540(uint64_t result, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v27[4] = *(_OWORD *)(a2 + 64);
  v27[5] = v4;
  uint64_t v28 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v27[0] = *(_OWORD *)a2;
  v27[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *v2;
  unint64_t v8 = (unint64_t)*v2 >> 60;
  uint64_t v27[2] = *(_OWORD *)(a2 + 32);
  v27[3] = v6;
  uint64_t v10 = result;
  switch(v8)
  {
    case 3uLL:
      uint64_t v11 = v7 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v12 = *(void *)(v11 + 24);
      uint64_t v29 = *(void *)(v11 + 16);
      swift_retain();
      swift_retain();
      sub_1BFF79540(v10, a2);
      if (!v3)
      {
        uint64_t v29 = v12;
        sub_1BFF79540(v10, a2);
      }
      swift_release();
      goto LABEL_24;
    case 4uLL:
      uint64_t v13 = v7 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v14 = *(void *)(v13 + 24);
      uint64_t v29 = *(void *)(v13 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF79540(v10, a2);
      if (!v3) {
        sub_1BFF799B0(v10, v27, v14);
      }
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 8uLL:
      uint64_t v15 = v7 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v16 = *(void *)(v15 + 24);
      uint64_t v29 = *(void *)(v15 + 16);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BFF79540(v10, a2);
      if (v3 || (uint64_t v23 = *(void *)(v16 + 16)) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
      swift_bridgeObjectRetain_n();
      uint64_t v24 = (uint64_t *)(v16 + 48);
      do
      {
        uint64_t v29 = *v24;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BFF79540(v10, a2);
        swift_release();
        swift_bridgeObjectRelease();
        v24 += 3;
        --v23;
      }
      while (v23);
      swift_release();
      uint64_t result = swift_bridgeObjectRelease_n();
      break;
    case 9uLL:
      uint64_t v29 = *(void *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      return sub_1BFF79540(result, a2);
    case 0xAuLL:
      uint64_t v17 = v7 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v18 = *(void *)(v17 + 16);
      uint64_t v19 = *(void *)(v17 + 24);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C05C9E90(v10, v27, v18, v19);
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 0xBuLL:
      uint64_t v20 = (void *)(v7 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v21 = v20[3];
      uint64_t v22 = v20[4];
      uint64_t v29 = v20[2];
      swift_retain();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1BFF79540(v10, a2);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease_n();
        uint64_t result = swift_release_n();
      }
      else
      {
        uint64_t v25 = *(void *)(v21 + 16);
        if (v25)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v26 = (uint64_t *)(v21 + 48);
          do
          {
            uint64_t v29 = *v26;
            swift_retain();
            swift_bridgeObjectRetain();
            sub_1BFF79540(v10, a2);
            swift_release();
            swift_bridgeObjectRelease();
            v26 += 3;
            --v25;
          }
          while (v25);
          swift_release();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_release();
        }
        uint64_t v29 = v22;
        sub_1BFF79540(v10, a2);
        swift_release();
        swift_bridgeObjectRelease();
LABEL_24:
        uint64_t result = swift_release();
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFF799B0(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return result;
  }
  uint64_t v5 = a3;
  uint64_t v7 = result;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  uint64_t v20 = v5;
  while (2)
  {
    unint64_t v9 = *(void *)(v5 + 8 * v8++ + 32);
    switch(v9 >> 61)
    {
      case 2uLL:
        uint64_t v10 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v28 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        long long v11 = a2[5];
        long long v25 = a2[4];
        long long v26 = v11;
        uint64_t v27 = *((void *)a2 + 12);
        long long v12 = a2[1];
        long long v21 = *a2;
        long long v22 = v12;
        long long v13 = a2[3];
        long long v23 = a2[2];
        long long v24 = v13;
        sub_1BFF65DE8(v9);
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BFF7B258(v7, (uint64_t *)&v21);
        if (!v3)
        {
          swift_release();
          sub_1BFF799B0(v7, a2, v10);
          swift_bridgeObjectRelease();
          swift_release();
          sub_1BFF65E20(v9);
          uint64_t v5 = v20;
          goto LABEL_4;
        }
        swift_bridgeObjectRelease();
        swift_release_n();
        sub_1BFF65E20(v9);
        return swift_bridgeObjectRelease();
      case 3uLL:
        uint64_t v28 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        long long v14 = a2[5];
        long long v25 = a2[4];
        long long v26 = v14;
        uint64_t v27 = *((void *)a2 + 12);
        long long v15 = a2[1];
        long long v21 = *a2;
        long long v22 = v15;
        long long v16 = a2[3];
        long long v23 = a2[2];
        long long v24 = v16;
        sub_1BFF65DE8(v9);
        swift_retain();
        sub_1BFF79540(v7, &v21);
        if (!v3)
        {
          swift_release();
          goto LABEL_3;
        }
        swift_release();
        goto LABEL_15;
      case 4uLL:
        uint64_t v28 = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        long long v17 = a2[5];
        long long v25 = a2[4];
        long long v26 = v17;
        uint64_t v27 = *((void *)a2 + 12);
        long long v18 = a2[1];
        long long v21 = *a2;
        long long v22 = v18;
        long long v19 = a2[3];
        long long v23 = a2[2];
        long long v24 = v19;
        swift_retain();
        sub_1BFF65DE8(v9);
        swift_retain();
        sub_1BFF79540(v7, &v21);
        if (!v3)
        {
          swift_release_n();
LABEL_3:
          sub_1BFF65E20(v9);
LABEL_4:
          if (v4 == v8) {
            return swift_bridgeObjectRelease();
          }
          continue;
        }
        swift_release_n();
LABEL_15:
        sub_1BFF65E20(v9);
        return swift_bridgeObjectRelease();
      default:
        goto LABEL_4;
    }
  }
}

void sub_1BFF79C34(unint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = v3;
  uint64_t v67 = a1;
  uint64_t v6 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  char v10 = *((unsigned char *)a2 + 8);
  char v11 = *((unsigned char *)a2 + 9);
  uint64_t v13 = a2[2];
  uint64_t v12 = a2[3];
  uint64_t v14 = a2[4];
  uint64_t v15 = a2[5];
  uint64_t v16 = a2[6];
  uint64_t v17 = a2[7];
  uint64_t v18 = a2[8];
  uint64_t v19 = a2[9];
  uint64_t v20 = a2[10];
  uint64_t v21 = a2[11];
  uint64_t v22 = *v2;
  uint64_t v23 = a2[12];
  switch((unint64_t)*v2 >> 61)
  {
    case 2uLL:
      uint64_t v24 = v14;
      uint64_t v48 = v16;
      uint64_t v49 = v15;
      uint64_t v47 = v17;
      uint64_t v46 = v18;
      uint64_t v45 = v19;
      uint64_t v44 = v20;
      uint64_t v43 = v21;
      uint64_t v25 = swift_projectBox();
      sub_1BFF83CC4(v25, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      uint64_t v50 = v9;
      char v51 = v10;
      char v52 = v11;
      uint64_t v53 = v13;
      uint64_t v54 = v12;
      uint64_t v55 = v24;
      uint64_t v56 = v49;
      uint64_t v57 = v48;
      uint64_t v58 = v47;
      uint64_t v59 = v46;
      uint64_t v60 = v45;
      uint64_t v61 = v44;
      uint64_t v62 = v43;
      uint64_t v63 = v23;
      sub_1C02A3BD8(v67);
      sub_1C05DDC60((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
      break;
    case 3uLL:
      uint64_t v26 = v22 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v27 = *(void *)(v26 + 32);
      char v28 = *(unsigned char *)(v26 + 40);
      long long v64 = *(_OWORD *)(v26 + 16);
      uint64_t v65 = v27;
      char v66 = v28;
      sub_1C0354924(v67);
      break;
    case 4uLL:
      uint64_t v43 = v21;
      uint64_t v44 = v20;
      uint64_t v45 = v19;
      uint64_t v46 = v18;
      uint64_t v47 = v17;
      uint64_t v48 = v16;
      uint64_t v49 = v15;
      uint64_t v37 = v14;
      uint64_t v29 = v22 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v30 = *(void *)(v29 + 24);
      uint64_t v31 = *(void *)(v29 + 32);
      int v32 = *(unsigned __int8 *)(v29 + 40);
      uint64_t v33 = *(void *)(v29 + 48);
      *(void *)&long long v64 = *(void *)(v29 + 16);
      *((void *)&v64 + 1) = v30;
      uint64_t v65 = v31;
      char v66 = v32;
      uint64_t v42 = v64;
      uint64_t v41 = v30;
      uint64_t v40 = v31;
      int v39 = v32;
      sub_1BFF67F78(v64, v30, v31, v32);
      uint64_t v36 = v33;
      uint64_t v38 = v33 & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      long long v34 = v67;
      sub_1C0354924(v67);
      if (!v4)
      {
        *(void *)&long long v64 = v36;
        uint64_t v50 = v9;
        char v51 = v10;
        char v52 = v11;
        uint64_t v53 = v13;
        uint64_t v54 = v12;
        uint64_t v55 = v37;
        uint64_t v56 = v49;
        uint64_t v57 = v48;
        uint64_t v58 = v47;
        uint64_t v59 = v46;
        uint64_t v60 = v45;
        uint64_t v61 = v44;
        uint64_t v62 = v43;
        uint64_t v63 = v23;
        sub_1BFF79C34(v34, &v50);
      }
      sub_1BFF05CCC(v42, v41, v40, v39);
      swift_release();
      break;
    default:
      return;
  }
}

void FormatOptionValue.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v91 = a2;
  uint64_t v3 = v2;
  uint64_t v90 = a1;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v89 - v8;
  MEMORY[0x1F4188790](v10);
  uint64_t v89 = (char *)&v89 - v11;
  uint64_t v12 = type metadata accessor for FormatURL();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FormatRemoteFont();
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF2918C();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF29220();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *v3;
  switch((unint64_t)*v3 >> 60)
  {
    case 1uLL:
      uint64_t v32 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      swift_bridgeObjectRetain();
      uint64_t v33 = v92;
      sub_1BFF7B0B4(v90, v91, v32);
      swift_bridgeObjectRelease();
      uint64_t v92 = v33;
      return;
    case 2uLL:
      uint64_t v34 = swift_projectBox();
      sub_1BFF83CC4(v34, (uint64_t)v23, (uint64_t (*)(void))sub_1BFF29220);
      uint64_t v35 = v92;
      sub_1C052B1A8(v90, v91);
      sub_1C05DDC60((uint64_t)v23, (uint64_t (*)(void))sub_1BFF29220);
      uint64_t v92 = v35;
      return;
    case 3uLL:
      uint64_t v36 = v24 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v37 = *(void *)(v36 + 24);
      uint64_t v98 = *(void *)(v36 + 16);
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
      if (swift_dynamicCast())
      {
        uint64_t v38 = *((void *)&v94 + 1);
        uint64_t v39 = v95;
        __swift_project_boxed_opaque_existential_1(&v93, *((uint64_t *)&v94 + 1));
        uint64_t v41 = v90;
        uint64_t v40 = v91;
        uint64_t v42 = v92;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 8))(v90, v91, v38, v39);
        uint64_t v31 = v42;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
        if (v42) {
          goto LABEL_9;
        }
      }
      else
      {
        uint64_t v95 = 0;
        long long v93 = 0u;
        long long v94 = 0u;
        sub_1BFE4D118((uint64_t)&v93, qword_1EB874940, (unint64_t *)&qword_1EB874938);
        uint64_t v40 = v91;
        uint64_t v31 = v92;
        uint64_t v41 = v90;
      }
      swift_bridgeObjectRetain();
      uint64_t v69 = v31;
      sub_1BFF7D4C0(v41, v40, v37);
      goto LABEL_33;
    case 4uLL:
      uint64_t v43 = v24 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v44 = *(void *)(v43 + 24);
      uint64_t v98 = *(void *)(v43 + 16);
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
      if (swift_dynamicCast())
      {
        uint64_t v45 = *((void *)&v94 + 1);
        uint64_t v46 = v95;
        __swift_project_boxed_opaque_existential_1(&v93, *((uint64_t *)&v94 + 1));
        uint64_t v48 = v90;
        uint64_t v47 = v91;
        uint64_t v49 = v92;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8))(v90, v91, v45, v46);
        uint64_t v50 = v49;
        if (v49)
        {
          uint64_t v92 = v49;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
          return;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
      }
      else
      {
        uint64_t v95 = 0;
        long long v93 = 0u;
        long long v94 = 0u;
        sub_1BFE4D118((uint64_t)&v93, qword_1EB874940, (unint64_t *)&qword_1EB874938);
        uint64_t v47 = v91;
        uint64_t v50 = v92;
        uint64_t v48 = v90;
      }
      swift_bridgeObjectRetain();
      sub_1BFF7B798(v48, v47, v44);
      uint64_t v92 = v50;
      goto LABEL_46;
    case 5uLL:
      uint64_t v51 = v92;
      sub_1BFF7B634(v90, v91, *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x10), *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x18), *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x20));
      uint64_t v92 = v51;
      return;
    case 6uLL:
      uint64_t v52 = swift_projectBox();
      sub_1BFF83CC4(v52, (uint64_t)v20, (uint64_t (*)(void))sub_1BFF2918C);
      uint64_t v53 = v92;
      sub_1C052B3C4(v90, v91);
      uint64_t v92 = v53;
      sub_1C05DDC60((uint64_t)v20, (uint64_t (*)(void))sub_1BFF2918C);
      return;
    case 7uLL:
      *(void *)&long long v93 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      uint64_t v54 = v92;
      FormatColor.bind(binder:context:)(v90, v91);
      goto LABEL_20;
    case 8uLL:
      uint64_t v55 = v24 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v56 = *(void *)(v55 + 24);
      *(void *)&long long v93 = *(void *)(v55 + 16);
      swift_retain();
      swift_retain_n();
      uint64_t v58 = v90;
      uint64_t v57 = v91;
      uint64_t v59 = v92;
      FormatOptionValue.bind(binder:context:)(v90, v91);
      if (v59)
      {
        uint64_t v92 = v59;
      }
      else
      {
        swift_release();
        *(void *)&long long v93 = v56;
        swift_retain();
        FormatOptionValue.bind(binder:context:)(v58, v57);
        uint64_t v92 = 0;
      }
      swift_release();
      swift_release_n();
      return;
    case 9uLL:
      *(void *)&long long v93 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      uint64_t v54 = v92;
      FormatAsyncImageContent.bind(binder:context:)(v90, v91);
      goto LABEL_20;
    case 0xAuLL:
      *(void *)&long long v93 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      uint64_t v54 = v92;
      FormatVideoNodeContent.bind(binder:context:)(v90, v91);
LABEL_20:
      uint64_t v92 = v54;
      goto LABEL_21;
    case 0xBuLL:
      return;
    case 0xCuLL:
      unint64_t v60 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      switch(v60 >> 61)
      {
        case 2uLL:
          uint64_t v61 = swift_projectBox();
          uint64_t v62 = (uint64_t)v17;
          sub_1BFF83CC4(v61, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
          sub_1BFF83CC4((uint64_t)&v17[*(int *)(v15 + 20)], (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatURL);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload)
          {
            if (EnumCaseMultiPayload == 1)
            {
              swift_retain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v84 = *(void *)v14;
              uint64_t v83 = *((void *)v14 + 1);
              uint64_t v85 = *((void *)v14 + 2);
              uint64_t v86 = (uint64_t)v89;
              switch(v14[24])
              {
                case 1:
                case 2:
                case 3:
                case 4:
                  swift_retain();
                  break;
                default:
                  *(void *)&long long v93 = *(void *)v14;
                  *((void *)&v93 + 1) = v83;
                  *(void *)&long long v94 = v85;
                  LOBYTE(v98) = 6;
                  swift_retain();
                  sub_1BFE86E48(v84, v83, v85, 0);
                  uint64_t v87 = v92;
                  uint64_t v88 = sub_1C12ECBDC((uint64_t *)&v93, (char *)&v98);
                  if (v87)
                  {
                    uint64_t v92 = v87;
                  }
                  else
                  {
                    sub_1C0EC63F8(v84, v83, v88, 1, v86);
                    uint64_t v92 = 0;
                    sub_1C05DDCC0(v86, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
                    swift_bridgeObjectRelease();
                  }
                  sub_1BFD7418C(v84, v83, v85, 0);
                  break;
              }
            }
          }
          else
          {
            swift_retain();
            sub_1C05DDC60((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatURL);
          }
          sub_1C05DDC60(v62, (uint64_t (*)(void))type metadata accessor for FormatRemoteFont);
          goto LABEL_21;
        case 3uLL:
          if (*(unsigned __int8 *)((v60 & 0x1FFFFFFFFFFFFFFFLL) + 0x28) < 3u) {
            return;
          }
          uint64_t v77 = *(void *)((v60 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v78 = *(void *)((v60 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          *(void *)&long long v93 = *(void *)((v60 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v79 = v93;
          *((void *)&v93 + 1) = v77;
          *(void *)&long long v94 = v78;
          LOBYTE(v98) = 10;
          swift_retain();
          sub_1BFF67F78(v79, v77, v78, 3);
          uint64_t v74 = v92;
          uint64_t v80 = sub_1C12ECBDC((uint64_t *)&v93, (char *)&v98);
          if (v74) {
            goto LABEL_42;
          }
          sub_1C0EC63F8(v79, v77, v80, 1, (uint64_t)v9);
          uint64_t v92 = 0;
          uint64_t v76 = (uint64_t)v9;
          break;
        case 4uLL:
          long long v81 = *(_OWORD *)((v60 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
          v96[0] = *(_OWORD *)((v60 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          v96[1] = v81;
          uint64_t v97 = *(void *)((v60 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
          swift_retain();
          sub_1C05DC2C0((uint64_t)v96);
          uint64_t v82 = v92;
          sub_1C0530A70(v90, v91);
          uint64_t v92 = v82;
          sub_1C05DC300((uint64_t)v96);
          goto LABEL_21;
        default:
          return;
      }
      goto LABEL_53;
    case 0xDuLL:
      uint64_t v64 = *(void *)((v24 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      if (v64 < 0)
      {
        uint64_t v70 = v64 & 0x7FFFFFFFFFFFFFFFLL;
        if (*(unsigned __int8 *)((v64 & 0x7FFFFFFFFFFFFFFFLL) + 0x28) < 2u) {
          return;
        }
        uint64_t v71 = *(void *)((v64 & 0x7FFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v72 = *(void *)(v70 + 32);
        *(void *)&long long v93 = *(void *)(v70 + 16);
        uint64_t v73 = v93;
        *((void *)&v93 + 1) = v71;
        *(void *)&long long v94 = v72;
        LOBYTE(v98) = 6;
        swift_retain();
        sub_1C00F6DB8(v73, v71, v72, 2);
        uint64_t v74 = v92;
        uint64_t v75 = sub_1C12ECBDC((uint64_t *)&v93, (char *)&v98);
        if (v74)
        {
LABEL_42:
          uint64_t v92 = v74;
LABEL_21:
          swift_release();
          return;
        }
        sub_1C0EC63F8(v73, v71, v75, 1, (uint64_t)v6);
        uint64_t v92 = 0;
        uint64_t v76 = (uint64_t)v6;
LABEL_53:
        sub_1C05DDCC0(v76, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
      }
      else
      {
        uint64_t v65 = *(void *)(v64 + 16);
        uint64_t v66 = *(void *)(v64 + 24);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v67 = v66;
        uint64_t v68 = v92;
        sub_1C0519780(v90, v91, v65, v67);
        uint64_t v92 = v68;
        swift_release();
      }
      swift_release();
LABEL_46:
      swift_bridgeObjectRelease();
      return;
    default:
      uint64_t v25 = *(void *)(v24 + 24);
      LOBYTE(v98) = *(unsigned char *)(v24 + 16);
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
      if (swift_dynamicCast())
      {
        uint64_t v26 = *((void *)&v94 + 1);
        uint64_t v27 = v95;
        __swift_project_boxed_opaque_existential_1(&v93, *((uint64_t *)&v94 + 1));
        uint64_t v29 = v90;
        uint64_t v28 = v91;
        uint64_t v30 = v92;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8))(v90, v91, v26, v27);
        uint64_t v31 = v30;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
        if (v30)
        {
LABEL_9:
          uint64_t v92 = v31;
          return;
        }
      }
      else
      {
        uint64_t v95 = 0;
        long long v93 = 0u;
        long long v94 = 0u;
        sub_1BFE4D118((uint64_t)&v93, qword_1EB874940, (unint64_t *)&qword_1EB874938);
        uint64_t v28 = v91;
        uint64_t v31 = v92;
        uint64_t v29 = v90;
      }
      swift_bridgeObjectRetain();
      uint64_t v69 = v31;
      sub_1C05164EC(v29, v28, v25);
LABEL_33:
      swift_bridgeObjectRelease();
      uint64_t v92 = v69;
      return;
  }
}

uint64_t type metadata accessor for FormatRemoteFont()
{
  uint64_t result = qword_1EB875438;
  if (!qword_1EB875438) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FormatURL()
{
  uint64_t result = qword_1EB879A30;
  if (!qword_1EB879A30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BFF7AB68(unint64_t *a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 80);
  v13[4] = *(_OWORD *)(a2 + 64);
  v13[5] = v4;
  uint64_t v14 = *(void *)(a2 + 96);
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *v2;
  unint64_t v8 = (unint64_t)*v2 >> 61;
  v13[2] = *(_OWORD *)(a2 + 32);
  v13[3] = v6;
  switch(v8)
  {
    case 1uLL:
      uint64_t v10 = v7 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v12 = *(void *)(v10 + 16);
      unint64_t v11 = *(void *)(v10 + 24);
      swift_bridgeObjectRetain();
      sub_1BFF18D70(v11);
      sub_1C1142180((uint64_t)a1, v13, v12);
      if (!v3)
      {
        unint64_t v15 = v11;
        sub_1BFF7AB68(a1, v13);
      }
      swift_bridgeObjectRelease();
      sub_1BFF18DA8(v11);
      break;
    case 2uLL:
    case 3uLL:
      sub_1C1141FDC((uint64_t)a1, v13, *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
      break;
    case 4uLL:
    case 5uLL:
      unint64_t v15 = *(void *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      sub_1BFE2F328(a1, a2);
      break;
    case 6uLL:
      return;
    default:
      unint64_t v15 = *(void *)(v7 + 16);
      sub_1BFF0D1B8(a1, a2);
      break;
  }
}

uint64_t sub_1BFF7ACAC(uint64_t result, uint64_t *a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = *a2;
  char v6 = *((unsigned char *)a2 + 8);
  char v7 = *((unsigned char *)a2 + 9);
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v13 = a2[7];
  uint64_t v14 = a2[8];
  uint64_t v15 = a2[9];
  uint64_t v16 = a2[10];
  uint64_t v17 = a2[11];
  uint64_t v18 = *v2;
  uint64_t v19 = a2[12];
  switch((unint64_t)*v2 >> 61)
  {
    case 1uLL:
      uint64_t v20 = v18 & 0x1FFFFFFFFFFFFFFFLL;
      long long v21 = *(_OWORD *)(v20 + 48);
      long long v61 = *(_OWORD *)(v20 + 32);
      uint64_t v22 = *(void *)(v20 + 24);
      uint64_t v59 = *(void *)(v20 + 16);
      uint64_t v60 = v22;
      long long v62 = v21;
      long long v63 = *(_OWORD *)(v20 + 64);
      *(void *)&long long v50 = v5;
      BYTE8(v50) = v6;
      BYTE9(v50) = v7;
      *(void *)&long long v51 = v8;
      *((void *)&v51 + 1) = v9;
      *(void *)&long long v52 = v11;
      *((void *)&v52 + 1) = v10;
      *(void *)&long long v53 = v12;
      *((void *)&v53 + 1) = v13;
      *(void *)&long long v54 = v14;
      *((void *)&v54 + 1) = v15;
      *(void *)&long long v55 = v16;
      *((void *)&v55 + 1) = v17;
      *(void *)&long long v56 = v19;
      uint64_t result = sub_1BFF7B500(result, (uint64_t *)&v50);
      break;
    case 2uLL:
      uint64_t v23 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      uint64_t v24 = *(void *)(v23 + 16);
      if (v24)
      {
        uint64_t v37 = *a2;
        char v42 = *((unsigned char *)a2 + 8);
        char v44 = *((unsigned char *)a2 + 9);
        long long v46 = *((_OWORD *)a2 + 1);
        long long v48 = *((_OWORD *)a2 + 2);
        uint64_t v69 = a2[6];
        uint64_t v39 = v17;
        uint64_t v38 = result;
        swift_bridgeObjectRetain();
        uint64_t v25 = 0;
        while (1)
        {
          uint64_t v59 = *(void *)(v23 + 8 * v25 + 32);
          *(void *)&long long v50 = v37;
          BYTE8(v50) = v42;
          BYTE9(v50) = v44;
          long long v51 = v46;
          long long v52 = v48;
          *(void *)&long long v53 = v69;
          *((void *)&v53 + 1) = v13;
          *(void *)&long long v54 = v14;
          *((void *)&v54 + 1) = v15;
          *(void *)&long long v55 = v16;
          *((void *)&v55 + 1) = v39;
          *(void *)&long long v56 = v19;
          swift_retain();
          sub_1BFF79540(v38, (uint64_t)&v50);
          if (v4) {
            break;
          }
          ++v25;
          swift_release();
          if (v24 == v25) {
            return swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
      }
      break;
    case 3uLL:
      uint64_t v59 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      *(void *)&long long v50 = v5;
      BYTE8(v50) = v6;
      BYTE9(v50) = v7;
      *(void *)&long long v51 = v8;
      *((void *)&v51 + 1) = v9;
      *(void *)&long long v52 = v11;
      *((void *)&v52 + 1) = v10;
      *(void *)&long long v53 = v12;
      *((void *)&v53 + 1) = v13;
      *(void *)&long long v54 = v14;
      *((void *)&v54 + 1) = v15;
      *(void *)&long long v55 = v16;
      *((void *)&v55 + 1) = v17;
      *(void *)&long long v56 = v19;
      uint64_t result = sub_1BFF90A18(result, (uint64_t *)&v50);
      break;
    case 4uLL:
      uint64_t v26 = (_OWORD *)(v18 & 0x1FFFFFFFFFFFFFFFLL);
      long long v27 = v26[8];
      long long v56 = v26[7];
      long long v57 = v27;
      *(_OWORD *)uint64_t v58 = v26[9];
      *(_OWORD *)&v58[9] = *(_OWORD *)((char *)v26 + 153);
      long long v28 = v26[4];
      long long v52 = v26[3];
      long long v53 = v28;
      long long v29 = v26[6];
      long long v54 = v26[5];
      long long v55 = v29;
      long long v30 = v26[2];
      long long v50 = v26[1];
      long long v51 = v30;
      uint64_t v59 = v5;
      LOBYTE(v60) = v6;
      BYTE1(v60) = v7;
      *(void *)&long long v61 = v8;
      *((void *)&v61 + 1) = v9;
      *(void *)&long long v62 = v11;
      *((void *)&v62 + 1) = v10;
      *(void *)&long long v63 = v12;
      *((void *)&v63 + 1) = v13;
      uint64_t v64 = v14;
      uint64_t v65 = v15;
      uint64_t v66 = v16;
      uint64_t v67 = v17;
      uint64_t v68 = v19;
      uint64_t result = sub_1C05C8874(result, (uint64_t)&v59);
      break;
    case 5uLL:
      uint64_t v40 = a2[7];
      uint64_t v41 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v59 = *(void *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      BYTE8(v50) = v6;
      BYTE9(v50) = v7;
      *(void *)&long long v51 = v8;
      *((void *)&v51 + 1) = v9;
      *(void *)&long long v52 = v11;
      *((void *)&v52 + 1) = v10;
      *(void *)&long long v53 = v12;
      *((void *)&v53 + 1) = v13;
      *(void *)&long long v54 = v14;
      *((void *)&v54 + 1) = v15;
      *(void *)&long long v55 = v16;
      *((void *)&v55 + 1) = v17;
      *(void *)&long long v56 = v19;
      uint64_t v31 = result;
      uint64_t v69 = v12;
      *((void *)&v49 + 1) = v10;
      *(void *)&long long v50 = v5;
      *((void *)&v47 + 1) = v9;
      *(void *)&long long v49 = v11;
      *(void *)&long long v47 = v8;
      char v43 = v6;
      char v45 = v7;
      uint64_t v32 = v5;
      uint64_t result = sub_1BFF5B7F4(result, &v50);
      if (!v4)
      {
        if (v41)
        {
          *(void *)&long long v50 = v32;
          BYTE8(v50) = v43;
          BYTE9(v50) = v45;
          long long v51 = v47;
          long long v52 = v49;
          *(void *)&long long v53 = v69;
          *((void *)&v53 + 1) = v40;
          *(void *)&long long v54 = v14;
          *((void *)&v54 + 1) = v15;
          *(void *)&long long v55 = v16;
          *((void *)&v55 + 1) = v17;
          *(void *)&long long v56 = v19;
          uint64_t result = sub_1BFF42EB8(v31, &v50);
        }
      }
      break;
    case 6uLL:
      long long v33 = *(_OWORD *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
      long long v56 = *(_OWORD *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
      long long v57 = v33;
      *(_OWORD *)uint64_t v58 = *(_OWORD *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x90);
      char v58[16] = *(unsigned char *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0xA0);
      long long v34 = *(_OWORD *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
      long long v52 = *(_OWORD *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
      long long v53 = v34;
      long long v35 = *(_OWORD *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
      long long v54 = *(_OWORD *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
      long long v55 = v35;
      long long v36 = *(_OWORD *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
      long long v50 = *(_OWORD *)((v18 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      long long v51 = v36;
      uint64_t v59 = v5;
      LOBYTE(v60) = v6;
      BYTE1(v60) = v7;
      *(void *)&long long v61 = v8;
      *((void *)&v61 + 1) = v9;
      *(void *)&long long v62 = v11;
      *((void *)&v62 + 1) = v10;
      *(void *)&long long v63 = v12;
      *((void *)&v63 + 1) = v13;
      uint64_t v64 = v14;
      uint64_t v65 = v15;
      uint64_t v66 = v16;
      uint64_t v67 = v17;
      uint64_t v68 = v19;
      uint64_t result = sub_1C05C8B84(result, (uint64_t)&v59);
      break;
    case 7uLL:
      return result;
    default:
      uint64_t v59 = *(void *)(v18 + 16);
      *(void *)&long long v50 = v5;
      BYTE8(v50) = v6;
      BYTE9(v50) = v7;
      *(void *)&long long v51 = v8;
      *((void *)&v51 + 1) = v9;
      *(void *)&long long v52 = v11;
      *((void *)&v52 + 1) = v10;
      *(void *)&long long v53 = v12;
      *((void *)&v53 + 1) = v13;
      *(void *)&long long v54 = v14;
      *((void *)&v54 + 1) = v15;
      *(void *)&long long v55 = v16;
      *((void *)&v55 + 1) = v17;
      *(void *)&long long v56 = v19;
      uint64_t result = sub_1BFF79540(result, (uint64_t)&v50);
      break;
  }
  return result;
}

uint64_t sub_1BFF7B0B4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v11 = result;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return result;
  }
  swift_bridgeObjectRetain();
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
  for (uint64_t i = a3 + 56; ; i += 32)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    if (swift_dynamicCast()) {
      break;
    }
    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
    sub_1BFE4D118((uint64_t)&v13, qword_1EB874940, (unint64_t *)&qword_1EB874938);
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v5) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v16 = v4;
  uint64_t v8 = *((void *)&v14 + 1);
  uint64_t v9 = v15;
  __swift_project_boxed_opaque_existential_1(&v13, *((uint64_t *)&v14 + 1));
  uint64_t v10 = v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(v11, a2, v8, v9);
  uint64_t v4 = v10;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  if (!v10) {
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BFF7B238(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFF7B258(uint64_t result, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  char v6 = *((unsigned char *)a2 + 9);
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v12 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v14 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v15 = a2[10];
  uint64_t v16 = a2[11];
  uint64_t v17 = *v2;
  uint64_t v18 = a2[12];
  switch((unint64_t)*v2 >> 61)
  {
    case 1uLL:
      uint64_t v34 = v17 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v37 = *(void *)(v34 + 24);
      uint64_t v74 = *(void *)(v34 + 16);
      uint64_t v58 = v10;
      uint64_t v60 = v4;
      char v61 = v5;
      char v62 = v6;
      uint64_t v63 = v8;
      uint64_t v64 = v7;
      uint64_t v65 = v9;
      uint64_t v66 = v10;
      uint64_t v67 = v12;
      uint64_t v68 = v11;
      uint64_t v69 = v14;
      uint64_t v70 = v13;
      uint64_t v71 = v15;
      uint64_t v72 = v16;
      uint64_t v73 = v18;
      uint64_t v52 = v11;
      uint64_t v55 = v12;
      uint64_t v46 = v13;
      uint64_t v49 = v14;
      uint64_t v40 = v15;
      uint64_t v43 = v18;
      uint64_t v19 = v16;
      uint64_t v20 = result;
      uint64_t v21 = v9;
      uint64_t v22 = v7;
      uint64_t v23 = v8;
      char v24 = v6;
      char v25 = v5;
      uint64_t v26 = v4;
      uint64_t result = sub_1BFF7B258(result, &v60);
      uint64_t v27 = v40;
      uint64_t v28 = v43;
      uint64_t v29 = v46;
      uint64_t v30 = v49;
      uint64_t v31 = v52;
      uint64_t v32 = v55;
      uint64_t v33 = v58;
      if (!v3) {
        goto LABEL_5;
      }
      return result;
    case 2uLL:
      uint64_t v74 = *(void *)((v17 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v60 = v4;
      char v61 = v5;
      char v62 = v6;
      uint64_t v63 = v8;
      uint64_t v64 = v7;
      uint64_t v65 = v9;
      uint64_t v66 = v10;
      uint64_t v67 = v12;
      uint64_t v68 = v11;
      uint64_t v69 = v14;
      uint64_t v70 = v13;
      uint64_t v71 = v15;
      uint64_t v72 = v16;
      uint64_t v73 = v18;
      return sub_1BFF7B258(result, &v60);
    case 3uLL:
      return result;
    case 4uLL:
      uint64_t v35 = v17 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v36 = *(void *)(v35 + 16);
      uint64_t v59 = *(void *)(v35 + 24);
      uint64_t v60 = *a2;
      uint64_t v74 = v36;
      char v61 = v5;
      char v62 = v6;
      uint64_t v63 = v8;
      uint64_t v64 = v7;
      uint64_t v65 = v9;
      uint64_t v66 = v10;
      uint64_t v67 = v12;
      uint64_t v68 = v11;
      uint64_t v69 = v14;
      uint64_t v70 = v13;
      uint64_t v71 = v15;
      uint64_t v72 = v16;
      uint64_t v73 = v18;
      uint64_t v53 = v9;
      uint64_t v56 = result;
      uint64_t v47 = v8;
      uint64_t v50 = v7;
      char v44 = v6;
      char v41 = v5;
      uint64_t v38 = v4;
      uint64_t result = sub_1BFF79540(result, &v60);
      if (v3) {
        return result;
      }
      uint64_t v74 = v59;
      uint64_t v60 = v38;
      char v61 = v41;
      char v62 = v44;
      uint64_t v63 = v47;
      uint64_t v64 = v50;
      uint64_t result = v56;
      uint64_t v65 = v53;
      uint64_t v66 = v10;
      uint64_t v67 = v12;
      uint64_t v68 = v11;
      uint64_t v69 = v14;
      uint64_t v70 = v13;
      uint64_t v71 = v15;
      uint64_t v72 = v16;
      uint64_t v73 = v18;
      break;
    default:
      uint64_t v37 = *(void *)(v17 + 24);
      uint64_t v74 = *(void *)(v17 + 16);
      uint64_t v57 = v10;
      uint64_t v60 = v4;
      char v61 = v5;
      char v62 = v6;
      uint64_t v63 = v8;
      uint64_t v64 = v7;
      uint64_t v65 = v9;
      uint64_t v66 = v10;
      uint64_t v67 = v12;
      uint64_t v68 = v11;
      uint64_t v69 = v14;
      uint64_t v70 = v13;
      uint64_t v71 = v15;
      uint64_t v72 = v16;
      uint64_t v73 = v18;
      uint64_t v51 = v11;
      uint64_t v54 = v12;
      uint64_t v45 = v13;
      uint64_t v48 = v14;
      uint64_t v39 = v15;
      uint64_t v42 = v18;
      uint64_t v19 = v16;
      uint64_t v20 = result;
      uint64_t v21 = v9;
      uint64_t v22 = v7;
      uint64_t v23 = v8;
      char v24 = v6;
      char v25 = v5;
      uint64_t v26 = v4;
      uint64_t result = sub_1BFF7B258(result, &v60);
      uint64_t v27 = v39;
      uint64_t v28 = v42;
      uint64_t v29 = v45;
      uint64_t v30 = v48;
      uint64_t v31 = v51;
      uint64_t v32 = v54;
      uint64_t v33 = v57;
      if (v3) {
        return result;
      }
LABEL_5:
      uint64_t v74 = v37;
      uint64_t v60 = v26;
      char v61 = v25;
      char v62 = v24;
      uint64_t v63 = v23;
      uint64_t v64 = v22;
      uint64_t v65 = v21;
      uint64_t v66 = v33;
      uint64_t v67 = v32;
      uint64_t v68 = v31;
      uint64_t v69 = v30;
      uint64_t v70 = v29;
      uint64_t v71 = v27;
      uint64_t v72 = v19;
      uint64_t v73 = v28;
      uint64_t result = v20;
      break;
  }
  return sub_1BFF7B258(result, &v60);
}

uint64_t sub_1BFF7B500(uint64_t result, uint64_t *a2)
{
  uint64_t v16 = result;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5)
  {
    uint64_t v15 = *a2;
    char v6 = *((unsigned char *)a2 + 9);
    long long v13 = *((_OWORD *)a2 + 2);
    long long v14 = *((_OWORD *)a2 + 1);
    long long v11 = *((_OWORD *)a2 + 4);
    long long v12 = *((_OWORD *)a2 + 3);
    long long v10 = *((_OWORD *)a2 + 5);
    uint64_t v7 = a2[12];
    char v8 = *((unsigned char *)a2 + 8);
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v26 = *(void *)(v4 + 8 * v9 + 32);
      uint64_t v17 = v15;
      char v18 = v8;
      char v19 = v6;
      long long v20 = v14;
      long long v21 = v13;
      long long v22 = v12;
      long long v23 = v11;
      long long v24 = v10;
      uint64_t v25 = v7;
      swift_retain();
      sub_1BFF79540(v16, (uint64_t)&v17);
      if (v3) {
        break;
      }
      ++v9;
      swift_release();
      if (v5 == v9) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFF7B634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
  swift_bridgeObjectRetain();
  if (swift_dynamicCast())
  {
    uint64_t v9 = *((void *)&v13 + 1);
    uint64_t v10 = v14;
    __swift_project_boxed_opaque_existential_1(&v12, *((uint64_t *)&v13 + 1));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(a1, a2, v9, v10);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    if (v5) {
      return result;
    }
  }
  else
  {
    uint64_t v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
    sub_1BFE4D118((uint64_t)&v12, qword_1EB874940, (unint64_t *)&qword_1EB874938);
  }
  swift_bridgeObjectRetain();
  sub_1BFF7B0B4(a1, a2, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFF7B774(uint64_t result)
{
  if ((result & 7u) <= 4uLL) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BFF7B798(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = result;
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return result;
  }
  swift_bridgeObjectRetain();
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
  for (uint64_t i = (uint64_t *)(a3 + 48); ; i += 3)
  {
    uint64_t v14 = *i;
    swift_bridgeObjectRetain();
    if (swift_dynamicCast()) {
      break;
    }
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
    sub_1BFE4D118((uint64_t)&v11, qword_1EB874940, (unint64_t *)&qword_1EB874938);
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v4) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v8 = *((void *)&v12 + 1);
  uint64_t v7 = v13;
  __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v9, a2, v8, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  if (!v3) {
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFF7B8F8(uint64_t result, uint64_t a2)
{
  uint64_t v5 = result;
  uint64_t v7 = *v2;
  uint64_t v6 = v2[1];
  uint64_t v8 = v2[2];
  uint64_t v21 = v2[3];
  uint64_t v9 = *(void *)(*v2 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v10 = (unsigned char *)(v7 + 40);
    while (1)
    {
      if ((*v10 & 1) == 0)
      {
        uint64_t v11 = *((void *)v10 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v5, a2);
        if (v3)
        {
          sub_1BFF49984(v11, 0);
          sub_1BFF49984(v11, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BFF49984(v11, 0);
        sub_1BFF49984(v11, 0);
      }
      v10 += 16;
      if (!--v9)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        uint64_t v8 = v22;
        break;
      }
    }
  }
  uint64_t v12 = *(void *)(v6 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v13 = (unsigned char *)(v6 + 40);
    do
    {
      if ((*v13 & 1) == 0)
      {
        uint64_t v14 = *((void *)v13 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v5, a2);
        if (v3)
        {
          sub_1BFF49984(v14, 0);
          sub_1BFF49984(v14, 0);
          return swift_bridgeObjectRelease_n();
        }
        sub_1BFF49984(v14, 0);
        sub_1BFF49984(v14, 0);
      }
      v13 += 16;
      --v12;
    }
    while (v12);
    uint64_t result = swift_bridgeObjectRelease_n();
    uint64_t v8 = v22;
  }
  uint64_t v15 = *(void *)(v8 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v16 = (unsigned char *)(v8 + 40);
    while (1)
    {
      if ((*v16 & 1) == 0)
      {
        uint64_t v17 = *((void *)v16 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v5, a2);
        sub_1BFF49984(v17, 0);
        sub_1BFF49984(v17, 0);
        if (v3) {
          break;
        }
      }
      v16 += 16;
      if (!--v15)
      {
        uint64_t result = swift_bridgeObjectRelease_n();
        goto LABEL_23;
      }
    }
  }
  else
  {
LABEL_23:
    uint64_t v18 = *(void *)(v21 + 16);
    if (!v18) {
      return result;
    }
    swift_bridgeObjectRetain_n();
    char v19 = (unsigned char *)(v21 + 40);
    do
    {
      if ((*v19 & 1) == 0)
      {
        uint64_t v20 = *((void *)v19 - 1);
        swift_retain_n();
        FormatFloat.bind(binder:context:)(v5, a2);
        sub_1BFF49984(v20, 0);
        sub_1BFF49984(v20, 0);
        if (v3) {
          break;
        }
      }
      v19 += 16;
      --v18;
    }
    while (v18);
  }
  return swift_bridgeObjectRelease_n();
}

void FormatFloat.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  sub_1C02D3ED0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v14 - v7;
  uint64_t v9 = *v2;
  switch((unint64_t)*v2 >> 61)
  {
    case 2uLL:
    case 3uLL:
      v14[1] = *(void *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      FormatFloat.bind(binder:context:)(a1, a2);
      swift_release();
      break;
    case 4uLL:
      uint64_t v10 = v9 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(v10 + 16);
      uint64_t v12 = *(void *)(v10 + 24);
      uint64_t v13 = sub_1C00B857C((uint64_t)&unk_1F1B6CF68);
      sub_1C0EC63F8(v11, v12, v13, 1, (uint64_t)v8);
      if (!v3) {
        sub_1C02D3D00((uint64_t)v8, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
      }
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

void sub_1BFF7BD20(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  if (!*a2)
  {
    a3();
    unint64_t v4 = sub_1C15200BC();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1BFF7BD80(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v6 = a2[12];
  uint64_t v19 = *(void *)(v2 + 32);
  uint64_t v10 = v3;
  char v11 = v4;
  char v12 = v5;
  long long v7 = *((_OWORD *)a2 + 2);
  long long v13 = *((_OWORD *)a2 + 1);
  long long v14 = v7;
  long long v8 = *((_OWORD *)a2 + 4);
  long long v15 = *((_OWORD *)a2 + 3);
  long long v16 = v8;
  long long v17 = *((_OWORD *)a2 + 5);
  uint64_t v18 = v6;
  return sub_1BFF79540(a1, (uint64_t)&v10);
}

uint64_t sub_1BFF7BDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  long long v6 = *(_OWORD *)(a2 + 80);
  v15[4] = *(_OWORD *)(a2 + 64);
  v15[5] = v6;
  uint64_t v16 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v15[0] = *(_OWORD *)a2;
  v15[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v15[2] = *(_OWORD *)(a2 + 32);
  v15[3] = v8;
  swift_beginAccess();
  uint64_t v9 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1BFFC8350(a1, v15, v9);
  if (v3) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if ((~*(void *)(v4 + 64) & 0xF000000000000007) != 0)
  {
    uint64_t v17 = *(void *)(v4 + 64);
    sub_1BFF7ACAC(a1, (uint64_t *)v15);
  }
  uint64_t result = *(void *)(v4 + 72);
  if (result)
  {
    uint64_t v11 = *(void *)(result + 16);
    if (v11)
    {
      uint64_t v14 = a1;
      uint64_t v12 = swift_bridgeObjectRetain() + 64;
      do
      {
        uint64_t v17 = *(void *)(v12 - 24);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain_n();
        swift_bridgeObjectRetain();
        sub_1BFF79540(v14, (uint64_t)v15);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release_n();
        v12 += 40;
        --v11;
      }
      while (v11);
      uint64_t result = swift_bridgeObjectRelease();
      a1 = v14;
    }
  }
  if (*(unsigned __int8 *)(v4 + 184) != 254)
  {
    uint64_t v17 = *(void *)(v4 + 136);
    uint64_t result = sub_1BFF79540(a1, (uint64_t)v15);
  }
  uint64_t v13 = *(void *)(v4 + 240);
  if (v13) {
    return sub_1C1132C68(a1, (uint64_t)v15, v13);
  }
  return result;
}

BOOL sub_1BFF7C018(uint64_t a1)
{
  return sub_1BFF7C020(a1, *(uint64_t (**)(void))(v1 + 16));
}

BOOL sub_1BFF7C020(uint64_t a1, uint64_t (*a2)(void))
{
  return (a2() & 1) == 0;
}

uint64_t sub_1BFF7C050()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1C151A72C();
}

uint64_t sub_1BFF7C094()
{
  id v1 = objc_msgSend(*v0, sel_uniqueKey);
  uint64_t v2 = sub_1C151E62C();

  return v2;
}

uint64_t sub_1BFF7C0EC(uint64_t result)
{
  if ((result & 7u) <= 4uLL) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFF7C110(uint64_t a1, uint64_t a2)
{
  sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FormatEdgeInsetsEquation.bind(binder:context:)(uint64_t a1, uint64_t a2)
{
  return sub_1BFF7B8F8(a1, a2);
}

uint64_t destroy for FormatCompilerOptions(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  if (*(void *)(v4 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = v4 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v6 = sub_1C1518CDC();
  uint64_t v7 = *(void *)(v6 - 8);
  long long v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = a1 + *(int *)(a2 + 28);
  if (!v8(v9, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFF7C308(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12)
{
  uint64_t v139 = a8;
  uint64_t v141 = a7;
  id v135 = a5;
  uint64_t v136 = a6;
  uint64_t v13 = v12;
  sub_1BFF31DC0(0, (unint64_t *)&qword_1EB871360, (uint64_t (*)(void))sub_1BFF597F8, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E4FABA30]);
  uint64_t v133 = v17;
  uint64_t v127 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v128 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v132 = (uint64_t *)((char *)&v111 - v20);
  uint64_t v140 = sub_1C1517A9C();
  uint64_t v142 = *(void *)(v140 - 8);
  MEMORY[0x1F4188790](v140);
  uint64_t v130 = (char *)&v111 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  unint64_t v137 = (char *)&v111 - v23;
  uint64_t v158 = a1;
  swift_beginAccess();
  uint64_t v24 = *(void *)(v13 + 16);
  uint64_t v25 = *(void *)(v13 + 24);
  swift_bridgeObjectRetain();
  uint64_t v143 = sub_1BFF303E0(v24, v25);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v13 + 24);
  uint64_t v156 = *(void *)(v13 + 16);
  uint64_t v157 = v28;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  uint64_t v29 = sub_1BFF303E0(v156, v157);
  uint64_t v134 = v30;
  swift_bridgeObjectRelease();
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_bridgeObjectRetain();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v31 = (void *)swift_allocObject();
  _OWORD v31[2] = v13;
  void v31[3] = a2;
  uint64_t v32 = v143;
  v31[4] = a3;
  v31[5] = v32;
  v31[6] = v27;
  v31[7] = v29;
  _OWORD v31[8] = v134;
  uint64_t v33 = ((uint64_t (*)(void))v135)(0);
  uint64_t v34 = ((uint64_t (*)(void))v136)();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v134 = v33;
  uint64_t v131 = v34;
  sub_1C15173AC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  uint64_t v35 = swift_bridgeObjectRetain();
  uint64_t v36 = a2;
  sub_1BFF1B2E4(v35, 0);
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_1BFF1E298(0, 0);
  swift_release();
  uint64_t v38 = *(char **)(v142 + 104);
  unsigned int v129 = *MEMORY[0x1E4FAB8F8];
  v142 += 104;
  ((void (*)(char *))v38)(v137);
  id v135 = v36;
  uint64_t v136 = v13;
  uint64_t v144 = v13;
  uint64_t v145 = v143;
  uint64_t v146 = v27;
  uint64_t v147 = v36;
  uint64_t v141 = v37;
  uint64_t v148 = v37;
  uint64_t v149 = a3;
  sub_1BFF33D2C(0, &qword_1EB884DC8, MEMORY[0x1E4FAB938]);
  uint64_t v40 = v39;
  swift_allocObject();
  uint64_t v41 = v138;
  uint64_t v42 = sub_1C1517C0C();
  if (v41)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    uint64_t v43 = v27;
    uint64_t v126 = v40;
    unint64_t v137 = v38;
    uint64_t v138 = a3;
    uint64_t v139 = v42;
    type metadata accessor for FormatButtonBuildCaptureState();
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = 0;
    uint64_t v45 = v141;
    uint64_t v46 = (uint64_t *)(*(void *)(v141 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
                    + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
    swift_beginAccess();
    uint64_t v47 = *v46;
    uint64_t v48 = v46[1];
    uint64_t v49 = *(void *)(v136 + 144);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v50 = (void *)sub_1BFEF32C8(v49, v45, v47, v48, (void (*)(uint64_t))sub_1BFCAC748, (uint64_t (*)(uint64_t))sub_1BFC743EC, (uint64_t (*)(uint64_t, uint64_t))sub_1BFC8A18C, (void (*)(void))type metadata accessor for FormatAnimationNodeStyle, (void (*)(uint64_t))sub_1C0035708);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v124 = v43;
    if (v50 && (swift_beginAccess(), (uint64_t v51 = v50[9]) != 0) && *(void *)(v51 + 16))
    {
      uint64_t v125 = v50[6];
      uint64_t v52 = v50;
      uint64_t v53 = v50[7];
      int v54 = *((unsigned __int8 *)v52 + 64);
      swift_retain();
      swift_retain();
      uint64_t v55 = swift_bridgeObjectRetain();
      uint64_t v99 = sub_1C12A4950(v55, v45);
      uint64_t v123 = v44;
      swift_bridgeObjectRelease();
      swift_release();
      char v100 = v54;
      if (v54) {
        uint64_t v101 = 0;
      }
      else {
        uint64_t v101 = v53;
      }
      if (v54) {
        uint64_t v102 = 0;
      }
      else {
        uint64_t v102 = v125;
      }
      type metadata accessor for FormatAnimationData();
      uint64_t v103 = swift_allocObject();
      uint64_t v122 = v52;
      *(void *)(v103 + 16) = v52;
      *(void *)(v103 + 24) = v102;
      *(void *)(v103 + 32) = v101;
      *(unsigned char *)(v103 + 40) = v100;
      *(void *)(v103 + 48) = v99;
      uint64_t v104 = *(void *)(v138 + 24);
      swift_beginAccess();
      swift_retain_n();
      uint64_t v105 = v124;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v155 = *(void *)(v104 + 32);
      *(void *)(v104 + 32) = 0x8000000000000000;
      sub_1C0062D34(v103, v143, v105, isUniquelyReferenced_nonNull_native);
      *(void *)(v104 + 32) = v155;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      swift_release_n();
    }
    else
    {
      uint64_t v122 = v50;
      uint64_t v123 = v44;
    }
    uint64_t v56 = v132;
    swift_getKeyPath();
    uint64_t v57 = v136;
    swift_beginAccess();
    unint64_t v155 = *(void *)(v57 + 32);
    unint64_t v58 = v155;
    uint64_t v59 = v124;
    swift_bridgeObjectRetain();
    sub_1BFF35EA4(v58);
    uint64_t v60 = v56;
    char v61 = v135;
    sub_1BFF30600(v135, v143, v59, v60);
    sub_1BFF322A8(v58);
    swift_beginAccess();
    swift_retain();
    uint64_t v62 = swift_bridgeObjectRetain();
    sub_1C12A4C68(v62, (uint64_t)v61);
    uint64_t v125 = a10;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v64 = (void *)swift_allocObject();
    v64[2] = v57;
    uint64_t v65 = v123;
    v64[3] = v141;
    v64[4] = v65;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v110 = v131;
    uint64_t v109 = v134;
    uint64_t v66 = (char *)v132;
    sub_1C15173CC();
    uint64_t v125 = 0;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v67 = v127;
    uint64_t v117 = *(void (**)(char *, uint64_t))(v127 + 8);
    uint64_t v118 = v127 + 8;
    v117(v66, v133);
    uint64_t v119 = swift_allocObject();
    *(void *)(v119 + 16) = MEMORY[0x1E4FBC868];
    swift_beginAccess();
    uint64_t v68 = *(void *)(v57 + 88);
    uint64_t v153 = 0;
    uint64_t v154 = 0;
    uint64_t v152 = v68;
    swift_bridgeObjectRetain();
    sub_1BFF7D188(&v150);
    uint64_t v69 = v151;
    if (v151)
    {
      uint64_t v114 = a12;
      uint64_t v116 = a11;
      uint64_t v70 = v150;
      unsigned int v113 = *MEMORY[0x1E4FAB9E0];
      uint64_t v112 = (uint64_t (**)(char *, void, uint64_t))(v67 + 104);
      long long v115 = xmmword_1C1529AE0;
      while (1)
      {
        uint64_t v120 = v70;
        uint64_t v150 = v69;
        uint64_t v71 = (void *)sub_1BFFCDB90();
        uint64_t v72 = v135;
        sub_1BFF1DD20(v71, v73);
        swift_bridgeObjectRelease();
        swift_retain();
        swift_release();
        uint64_t v74 = v69;
        uint64_t v75 = v136;
        uint64_t v76 = *(void *)(v136 + 16);
        uint64_t v77 = *(void *)(v136 + 24);
        swift_bridgeObjectRetain();
        uint64_t v127 = sub_1BFF303E0(v76, v77);
        uint64_t v132 = (uint64_t *)v78;
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v121 = v74;
        uint64_t v150 = v74;
        uint64_t v79 = (void *)sub_1BFFCDB90();
        uint64_t v81 = v80;
        sub_1BFF887CC(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v115;
        *(void *)(inited + 32) = v79;
        *(void *)(inited + 40) = v81;
        swift_bridgeObjectRetain();
        uint64_t v83 = sub_1BFEF4060(inited);
        swift_setDeallocating();
        swift_arrayDestroy();
        uint64_t v84 = swift_bridgeObjectRetain();
        uint64_t v85 = sub_1BFEF3988(v84, v83);
        sub_1BFF1B2E4(v85, 0);
        swift_bridgeObjectRelease();
        sub_1BFF1DD20(v79, v81);
        swift_release();
        uint64_t v86 = sub_1BFF1E298(0, 0);
        swift_release();
        uint64_t v87 = ((uint64_t (*)(char *, void, uint64_t))v137)(v130, v129, v140);
        MEMORY[0x1F4188790](v87);
        uint64_t v88 = v127;
        *(&v111 - 6) = v75;
        *(&v111 - 5) = v88;
        uint64_t v107 = (char *)v132;
        uint64_t v108 = v72;
        uint64_t v109 = v86;
        uint64_t v110 = v138;
        swift_allocObject();
        uint64_t v89 = v125;
        uint64_t v90 = sub_1C1517C0C();
        if (v89)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          return swift_release();
        }
        uint64_t v91 = v90;
        swift_bridgeObjectRelease();
        uint64_t v92 = *v112;
        uint64_t v125 = 0;
        long long v93 = v128;
        uint64_t v94 = v133;
        uint64_t v95 = v92(v128, v113, v133);
        MEMORY[0x1F4188790](v95);
        uint64_t v96 = (char *)v132;
        *(&v111 - 10) = v88;
        *(&v111 - 9) = (uint64_t)v96;
        *(&v111 - 8) = v75;
        *(&v111 - 7) = (uint64_t)v72;
        uint64_t v97 = v123;
        *(&v111 - 6) = v91;
        *(&v111 - 5) = v97;
        uint64_t v110 = v131;
        uint64_t v108 = &v111 - 12;
        uint64_t v109 = v134;
        uint64_t v107 = v114;
        uint64_t v98 = v125;
        sub_1C15172DC();
        uint64_t v125 = v98;
        if (v98) {
          break;
        }
        v117(v93, v94);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1BFF7D188(&v150);
        uint64_t v70 = v150;
        uint64_t v69 = v151;
        if (!v151) {
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v117(v93, v94);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
LABEL_15:
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
}

void sub_1BFF7D188(void *a1@<X8>)
{
  unint64_t v2 = v1[1];
  unint64_t v3 = *(void *)(*v1 + 16);
  if (v2 == v3)
  {
    *a1 = 0;
    a1[1] = 0;
    return;
  }
  if (v2 >= v3)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = *(void *)(*v1 + 8 * v2 + 32);
    v1[1] = v2 + 1;
    uint64_t v5 = v1[2];
    if (!__OFADD__(v5, 1))
    {
      v1[2] = v5 + 1;
      *a1 = v5;
      a1[1] = v4;
      swift_bridgeObjectRetain();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1BFF7D1D4(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != 3 && a5 != 2)
  {
    if (a5) {
      return result;
    }
    sub_1BFF7FF04(result, a2);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFF7D240@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 2;
      break;
    case 2:
      uint64_t v2 = 4;
      break;
    case 3:
      uint64_t v2 = 8;
      break;
    case 4:
      uint64_t v2 = 16;
      break;
    case 5:
      uint64_t v2 = 32;
      break;
    case 6:
      uint64_t v2 = 64;
      break;
    case 7:
      uint64_t v2 = 128;
      break;
    case 8:
      uint64_t v2 = 256;
      break;
    case 9:
      uint64_t v2 = 512;
      break;
    case 0xA:
      uint64_t v2 = 1024;
      break;
    case 0xB:
      uint64_t v2 = 2048;
      break;
    case 0xC:
      uint64_t v2 = 4096;
      break;
    case 0xD:
      uint64_t v2 = 0x2000;
      break;
    case 0xE:
      if (qword_1EA194C18 != -1)
      {
        unint64_t v3 = a1;
        uint64_t result = swift_once();
        a1 = v3;
      }
      uint64_t v2 = qword_1EA1AF4C0;
      break;
    case 0xF:
      if (qword_1EA194C20 != -1)
      {
        uint64_t v5 = a1;
        uint64_t result = swift_once();
        a1 = v5;
      }
      uint64_t v2 = qword_1EA1AF4C8;
      break;
    case 0x10:
      if (qword_1EA194C28 != -1)
      {
        uint64_t v6 = a1;
        uint64_t result = swift_once();
        a1 = v6;
      }
      uint64_t v2 = qword_1EA1AF4D0;
      break;
    case 0x11:
      uint64_t v2 = 0x8000;
      break;
    case 0x12:
      uint64_t v2 = 0x10000;
      break;
    case 0x13:
      uint64_t v2 = 0x20000;
      break;
    case 0x14:
      uint64_t v2 = 0x40000;
      break;
    case 0x15:
      uint64_t v2 = 0x80000;
      break;
    case 0x16:
      uint64_t v2 = 0x200000;
      break;
    case 0x17:
      uint64_t v2 = 0x400000;
      break;
    case 0x18:
      uint64_t v2 = 0x800000;
      break;
    case 0x19:
      uint64_t v2 = 0x1000000;
      break;
    case 0x1A:
      uint64_t v2 = 0x2000000;
      break;
    case 0x1B:
      uint64_t v2 = 0x4000000;
      break;
    case 0x1C:
      uint64_t v2 = 0x8000000;
      break;
    case 0x1D:
      uint64_t v2 = 0x10000000;
      break;
    case 0x1E:
      uint64_t v2 = 0x20000000;
      break;
    case 0x1F:
      uint64_t v2 = 0x200000000;
      break;
    case 0x20:
      uint64_t v2 = 0x400000000;
      break;
    case 0x21:
      uint64_t v2 = 0x800000000;
      break;
    case 0x22:
      uint64_t v2 = 0x1000000000;
      break;
    case 0x23:
      uint64_t v2 = 0x2000000000;
      break;
    case 0x24:
      uint64_t v2 = 0x40000000;
      break;
    case 0x25:
      uint64_t v2 = 0x80000000;
      break;
    case 0x26:
      uint64_t v2 = 0x100000000;
      break;
    case 0x27:
      uint64_t v2 = 0x4000000000;
      break;
    case 0x28:
      uint64_t v2 = 0x8000000000;
      break;
    case 0x29:
      uint64_t v2 = 0x10000000000;
      break;
    case 0x2A:
      uint64_t v2 = 0x20000000000;
      break;
    case 0x2B:
      uint64_t v2 = 0x80000000000;
      break;
    case 0x2C:
      uint64_t v2 = 0x100000000000;
      break;
    case 0x2D:
      uint64_t v2 = 0x1000000000000;
      break;
    case 0x2E:
      uint64_t v2 = 0x40000000000;
      break;
    case 0x2F:
      uint64_t v2 = 0x200000000000;
      break;
    case 0x30:
      uint64_t v2 = 0x400000000000;
      break;
    case 0x31:
      uint64_t v2 = 0x800000000000;
      break;
    default:
      break;
  }
  *a1 = v2;
  return result;
}

uint64_t sub_1BFF7D4C0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = result;
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return result;
  }
  swift_bridgeObjectRetain();
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB874938);
  for (uint64_t i = (uint64_t *)(a3 + 48); ; i += 3)
  {
    uint64_t v14 = *i;
    swift_bridgeObjectRetain();
    if (swift_dynamicCast()) {
      break;
    }
    uint64_t v13 = 0;
    long long v11 = 0u;
    long long v12 = 0u;
    sub_1BFE4D118((uint64_t)&v11, qword_1EB874940, (unint64_t *)&qword_1EB874938);
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v4) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v8 = *((void *)&v12 + 1);
  uint64_t v7 = v13;
  __swift_project_boxed_opaque_existential_1(&v11, *((uint64_t *)&v12 + 1));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v9, a2, v8, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  if (!v3) {
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BFF7D624(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for FormatOption();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v11 = *(_OWORD *)(a2 + 80);
  v55[4] = *(_OWORD *)(a2 + 64);
  v55[5] = v11;
  uint64_t v56 = *(void *)(a2 + 96);
  long long v12 = *(_OWORD *)(a2 + 16);
  v55[0] = *(_OWORD *)a2;
  v55[1] = v12;
  long long v13 = *(_OWORD *)(a2 + 48);
  v55[2] = *(_OWORD *)(a2 + 32);
  void v55[3] = v13;
  unint64_t v47 = v2[6];
  sub_1BFF0D1B8(a1, a2);
  uint64_t v14 = v3;
  if (!v3)
  {
    uint64_t v57 = a2;
    uint64_t v41 = v10;
    swift_beginAccess();
    uint64_t v15 = v2[8];
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v16; ++i)
      {
        unint64_t v18 = *(void *)(v15 + 8 * i + 32);
        unint64_t v47 = v18;
        sub_1BFF32264(v18);
        sub_1BFF0D378((uint64_t)a1, v57);
        sub_1BFF31E90(v18);
      }
      swift_bridgeObjectRelease_n();
    }
    uint64_t v40 = v8;
    swift_beginAccess();
    uint64_t v19 = v2[9];
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v38 = v4;
      uint64_t v42 = a1;
      uint64_t v45 = 0;
      swift_bridgeObjectRetain_n();
      uint64_t v39 = v19;
      uint64_t v21 = (uint64_t *)(v19 + 48);
      while (1)
      {
        uint64_t v43 = v20;
        uint64_t v23 = *(v21 - 2);
        uint64_t v22 = *(v21 - 1);
        uint64_t v25 = *v21;
        uint64_t v24 = v21[1];
        uint64_t v27 = v21[2];
        uint64_t v26 = v21[3];
        unint64_t v29 = v21[4];
        uint64_t v28 = v21[5];
        unint64_t v47 = v23;
        uint64_t v48 = v22;
        uint64_t v49 = v25;
        uint64_t v50 = v24;
        uint64_t v51 = v27;
        uint64_t v52 = v26;
        unint64_t v53 = v29;
        uint64_t v54 = v28;
        uint64_t v44 = v28;
        sub_1BFF95098(v23, v22, v25, v24, v27, v26, v29);
        uint64_t v30 = v45;
        sub_1C05D2144(v42, v57);
        uint64_t v45 = v30;
        if (v30) {
          break;
        }
        v21 += 8;
        sub_1BFF94FE4(v23, v22, v25, v24, v27, v26, v29);
        uint64_t v20 = v43 - 1;
        if (v43 == 1)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v14 = v45;
          a1 = v42;
          uint64_t v4 = v38;
          goto LABEL_11;
        }
      }
      sub_1BFF94FE4(v23, v22, v25, v24, v27, v26, v29);
      swift_bridgeObjectRelease_n();
    }
    else
    {
LABEL_11:
      swift_beginAccess();
      uint64_t v31 = v4[11];
      uint64_t v32 = *(void *)(v31 + 16);
      uint64_t v33 = (uint64_t)v41;
      if (v32)
      {
        uint64_t v34 = v31 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
        uint64_t v35 = *(void *)(v40 + 72);
        uint64_t v57 = v4[11];
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_1BFF83CC4(v34, v33, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v46 = *(void *)(v33 + 16);
          swift_retain();
          sub_1BFF2871C(a1, (uint64_t)v55);
          if (v14) {
            break;
          }
          swift_release();
          sub_1C05DDC60(v33, (uint64_t (*)(void))type metadata accessor for FormatOption);
          v34 += v35;
          if (!--v32)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_16;
          }
        }
        swift_release();
        sub_1C05DDC60(v33, (uint64_t (*)(void))type metadata accessor for FormatOption);
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_16:
        swift_beginAccess();
        unint64_t v36 = v4[12];
        swift_bridgeObjectRetain();
        sub_1BFF0CA38(a1, v55, v36);
        swift_bridgeObjectRelease();
      }
    }
  }
}

void *initializeWithCopy for FormatCompilerOptions(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = *(void *)&a2[v7 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    long long v11 = *((_OWORD *)v9 + 1);
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    *((_OWORD *)v8 + 1) = v11;
    *((_OWORD *)v8 + 2) = *((_OWORD *)v9 + 2);
  }
  else
  {
    *(void *)uint64_t v8 = *(void *)v9;
    *((void *)v8 + 1) = v10;
    uint64_t v12 = *((void *)v9 + 3);
    *((void *)v8 + 2) = *((void *)v9 + 2);
    *((void *)v8 + 3) = v12;
    uint64_t v13 = *((void *)v9 + 5);
    *((void *)v8 + 4) = *((void *)v9 + 4);
    *((void *)v8 + 5) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v14 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
  uint64_t v15 = &v8[v14];
  uint64_t v16 = &v9[v14];
  uint64_t v17 = sub_1C1518CDC();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = &a2[v21];
  if (v19(&a2[v21], 1, v17))
  {
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v22, v23, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  *(void *)((char *)a1 + a3[8]) = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for FormatCompilerOptions.Newsroom(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB889DE8);
}

uint64_t sub_1BFF7DD68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C0E572B0(0, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v15[-v5 - 8];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = a1 + 40 * v7 - 8;
    while (1)
    {
      sub_1BFC66384(v8, (uint64_t)v15);
      sub_1BFFFCF34();
      uint64_t v9 = type metadata accessor for FeedWebEmbed();
      int v10 = swift_dynamicCast();
      long long v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
      if (v10) {
        break;
      }
      --v7;
      v11(v6, 1, 1, v9);
      sub_1C0E56F54((uint64_t)v6, (uint64_t)&qword_1EB870AB0, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(void))sub_1C0E572B0);
      v8 -= 40;
      if (!v7)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    v11(v6, 0, 1, v9);
    swift_bridgeObjectRelease();
    return sub_1C0E56FB4((uint64_t)v6, a2, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
  }
  else
  {
LABEL_6:
    sub_1BFF7DFA8();
    swift_allocError();
    strcpy(v12, "FeedWebEmbed");
    v12[13] = 0;
    *((_WORD *)v12 + 7) = -5120;
    v12[56] = 6;
    return swift_willThrow();
  }
}

uint64_t storeEnumTagSinglePayload for FeedWebEmbed(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0BCCB48);
}

unint64_t sub_1BFF7DFA8()
{
  unint64_t result = qword_1EB882DD0;
  if (!qword_1EB882DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB882DD0);
  }
  return result;
}

uint64_t *sub_1BFF7DFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151794C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory)
     + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles;
  swift_beginAccess();
  uint64_t v9 = *(uint64_t **)v8;
  uint64_t v10 = *(void *)(v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_retain();
  uint64_t v12 = sub_1BFF6B3AC(v11, a2, (uint64_t)v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v2)
  {
    if (v12 && (uint64_t v13 = *(void *)(v12 + 56), (~v13 & 0xF000000000000007) != 0))
    {
      uint64_t v20 = *(void *)(v12 + 56);
      swift_retain();
      uint64_t v9 = sub_1BFF63944(a2);
      sub_1BFEF68C0(v13);
    }
    else
    {
      uint64_t v9 = (uint64_t *)objc_msgSend(self, sel_systemFontOfSize_, 16.0);
    }
    sub_1C15176BC();
    sub_1C151793C();
    if (byte_1EA2B53C0 == 1)
    {
      double v15 = v14;
      objc_msgSend(v9, sel_pointSize);
      double v17 = round(v15 * (v16 * 4.0) * 0.25);
      if (byte_1EA2B53C0) {
        double v16 = v17;
      }
      uint64_t v18 = (uint64_t *)objc_msgSend(v9, sel_fontWithSize_, v16);

      uint64_t v9 = v18;
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v9;
}

unint64_t FormatGroupNode.bindChildren(binder:context:)(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  swift_beginAccess();
  unint64_t v42 = v2[4];
  sub_1BFF35EA4(v42);
  FormatSize.bind(binder:context:)(a1, a2);
  if (v3) {
    return sub_1BFF322A8(v42);
  }
  sub_1BFF322A8(v42);
  swift_beginAccess();
  uint64_t v8 = v2[6];
  uint64_t v9 = *(void *)(v8 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v9; ++i)
    {
      unint64_t v11 = *(void *)(v8 + 8 * i + 32);
      sub_1BFF32264(v11);
      FormatAdjustment.bind(binder:context:)(a1, a2);
      sub_1BFF31E90(v11);
    }
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  unint64_t v12 = v2[8];
  if (v12 >> 62 == 1)
  {
    unint64_t v13 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
    uint64_t v14 = *(void *)((v12 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
    sub_1BFE6FA30(v4[8]);
    sub_1BFE6FA30(v13);
    swift_bridgeObjectRetain();
    sub_1C052A7F4(a1, a2, v13, v14);
    sub_1BFF0056C(v13);
    swift_bridgeObjectRelease();
    sub_1BFF0056C(v12);
  }
  if (v4[10]) {
    FormatGroupNodeStyle.bind(binder:context:)(a1, a2);
  }
  double v15 = v4;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  uint64_t v18 = v15;
  swift_beginAccess();
  uint64_t v43 = v18;
  uint64_t v19 = v18[11];
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v21 = v19 + 64;
    do
    {
      swift_bridgeObjectRetain();
      swift_retain();
      FormatSourceMapNode.bind(binder:context:)(v16, v17);
      v21 += 40;
      swift_bridgeObjectRelease();
      swift_release();
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease_n();
  }
  uint64_t v22 = v17;
  unint64_t v23 = v16;
  uint64_t v24 = v43[15];
  if (v24)
  {
    swift_beginAccess();
    uint64_t v25 = *(void *)(v24 + 72);
    if (v25)
    {
      swift_bridgeObjectRetain();
      sub_1C04CFB10(v16, v22, v25);
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    uint64_t v26 = *(void *)(v24 + 88);
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v28 = (uint64_t *)(v26 + 72);
      do
      {
        uint64_t v29 = *v28;
        if (*v28)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C04CFB10(v16, v22, v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v28 += 7;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease_n();
    }
  }
  unint64_t result = swift_beginAccess();
  uint64_t v30 = (void *)v43[16];
  if (v30)
  {
    if (v30[2])
    {
      swift_retain();
      FormatGroupNodeMaskStyle.bind(binder:context:)(v23, v22);
    }
    else
    {
      swift_retain();
    }
    uint64_t v31 = v30[3];
    if (v31)
    {
      swift_beginAccess();
      uint64_t v32 = *(void *)(v31 + 72);
      if (v32)
      {
        swift_bridgeObjectRetain();
        sub_1C04CFB10(v23, v22, v32);
        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      uint64_t v33 = *(void *)(v31 + 88);
      uint64_t v34 = *(void *)(v33 + 16);
      if (v34)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v35 = (uint64_t *)(v33 + 72);
        do
        {
          uint64_t v36 = *v35;
          if (*v35)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C04CFB10(v23, v22, v36);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v35 += 7;
          --v34;
        }
        while (v34);
        swift_bridgeObjectRelease_n();
      }
    }
    swift_beginAccess();
    unint64_t v41 = v30[4];
    sub_1BFF35EA4(v41);
    FormatSize.bind(binder:context:)(v23, v22);
    sub_1BFF322A8(v41);
    swift_beginAccess();
    uint64_t v37 = v30[5];
    uint64_t v38 = *(void *)(v37 + 16);
    if (v38)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t j = 0; j != v38; ++j)
      {
        unint64_t v40 = *(void *)(v37 + 8 * j + 32);
        sub_1BFF32264(v40);
        FormatAdjustment.bind(binder:context:)(v23, v22);
        sub_1BFF31E90(v40);
      }
      swift_release();
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

void *sub_1BFF7E884@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BFF7EE84(0, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v39 - v5;
  uint64_t v7 = type metadata accessor for FeedWebEmbed();
  uint64_t v42 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v41 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF7EE84(0, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = type metadata accessor for FeedHeadline(0);
  uint64_t v43 = *(void *)(v15 - 8);
  uint64_t v44 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v40 = (uint64_t)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v21 + 24))(&v48, v20, v21);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v23 + 40))(&v46, v22, v23);
  if (v47 - 5 >= 0xC && v47 >= 3)
  {
    if (v47 == 3)
    {
      sub_1BFC66384((uint64_t)a1, (uint64_t)v45);
      sub_1BFFFCF34();
      uint64_t v28 = v44;
      char v29 = swift_dynamicCast();
      uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
      if ((v29 & 1) == 0)
      {
        v30(v14, 1, 1, v28);
        unint64_t result = (void *)sub_1C13DB7D8((uint64_t)v14, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        goto LABEL_26;
      }
      v30(v14, 0, 1, v28);
      sub_1BFF7FFE0((uint64_t)v14, (uint64_t)v19, type metadata accessor for FeedHeadline);
      uint64_t v31 = (void *)*((void *)v19 + 5);
      if (objc_msgSend(v31, sel_respondsToSelector_, sel_parentIssue))
      {
        id v32 = objc_msgSend(v31, sel_parentIssue);
        if (v32)
        {

          if ((v48 & 0x40) == 0) {
            v48 |= 0x40uLL;
          }
        }
      }
      if (*(void *)&v19[*(int *)(v28 + 56)] && (v48 & 0x200000) == 0) {
        v48 |= 0x200000uLL;
      }
      uint64_t v33 = type metadata accessor for FeedHeadline;
      uint64_t v34 = (uint64_t)v19;
    }
    else
    {
      if (v47 != 4)
      {
        unint64_t result = (void *)sub_1BFEEFC20(v46, v47);
        goto LABEL_26;
      }
      sub_1BFC66384((uint64_t)a1, (uint64_t)v45);
      sub_1BFFFCF34();
      char v25 = swift_dynamicCast();
      uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
      if ((v25 & 1) == 0)
      {
        v26(v6, 1, 1, v7);
        unint64_t result = (void *)sub_1C13DB7D8((uint64_t)v6, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
        goto LABEL_26;
      }
      v26(v6, 0, 1, v7);
      uint64_t v27 = v41;
      sub_1BFF7FFE0((uint64_t)v6, v41, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1C0485F0C(v27 + *(int *)(v7 + 48), (uint64_t)v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v11, 1, v44) == 1)
      {
        sub_1BFF5B76C(v27, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        unint64_t result = (void *)sub_1C13DB7D8((uint64_t)v11, (unint64_t *)&unk_1EB8737F0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        goto LABEL_26;
      }
      uint64_t v35 = v40;
      sub_1BFF7FFE0((uint64_t)v11, v40, type metadata accessor for FeedHeadline);
      uint64_t v36 = *(void **)(v35 + 40);
      uint64_t v37 = v48 | *(void *)(v35 + 32);
      uint64_t v48 = v37;
      if (objc_msgSend(v36, sel_respondsToSelector_, sel_parentIssue))
      {
        id v38 = objc_msgSend(v36, sel_parentIssue);
        if (v38)
        {

          if ((v37 & 0x40) == 0) {
            uint64_t v48 = v37 | 0x40;
          }
        }
      }
      sub_1BFF5B76C(v35, type metadata accessor for FeedHeadline);
      uint64_t v33 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
      uint64_t v34 = v27;
    }
    unint64_t result = (void *)sub_1BFF5B76C(v34, v33);
  }
LABEL_26:
  *a2 = v48;
  return result;
}

void sub_1BFF7EE84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1BFF7EED8(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WebEmbedDataVisualization();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (unint64_t *)&v120[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFECA284(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v120[-v9 - 8];
  sub_1BFECA284(0, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = &v120[-v12 - 8];
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v15 + 40))(&v121, v14, v15);
  unint64_t v16 = v122;
  LOBYTE(v17) = 0;
  switch(v122)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 6uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xFuLL:
    case 0x10uLL:
      return v17 & 1;
    case 3uLL:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_64;
      }
      sub_1C1520DBC();
      sub_1C1520DCC();
      uint64_t v18 = sub_1C1520E0C();
      uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(a2 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_64;
      }
      uint64_t v21 = ~v19;
      while (1)
      {
        uint64_t v22 = *(void *)(a2 + 48) + 16 * v20;
        unint64_t v17 = *(void *)v22;
        unint64_t v23 = *(void *)(v22 + 8);
        if (!v23) {
          break;
        }
        sub_1BFE74E64(*(void *)v22, *(void *)(v22 + 8));
        sub_1BFF8F648(v17, v23);
        sub_1BFF8F648(0, 0);
        LOBYTE(v17) = 0;
        unint64_t v20 = (v20 + 1) & v21;
        if (((*(void *)(a2 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
          return v17 & 1;
        }
      }
      sub_1BFF8F648(*(void *)v22, 0);
      unint64_t v73 = 0;
      goto LABEL_118;
    case 4uLL:
      sub_1BFC66384((uint64_t)a1, (uint64_t)v120);
      sub_1BFFFCF34();
      uint64_t v34 = type metadata accessor for FeedWebEmbed();
      int v35 = swift_dynamicCast();
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
      if (!v35)
      {
        v36(v13, 1, 1, v34);
        sub_1C0AD3004((uint64_t)v13, &qword_1EB870AB0, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
        if (!*(void *)(a2 + 16)) {
          goto LABEL_64;
        }
LABEL_59:
        sub_1C1520DBC();
        sub_1C1520DCC();
        uint64_t v67 = sub_1C1520E0C();
        uint64_t v68 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v69 = v67 & ~v68;
        if ((*(void *)(a2 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69))
        {
          uint64_t v70 = ~v68;
          while (1)
          {
            uint64_t v71 = *(void *)(a2 + 48) + 16 * v69;
            unint64_t v17 = *(void *)v71;
            unint64_t v72 = *(void *)(v71 + 8);
            if (v72 == 2) {
              break;
            }
            sub_1BFE74E64(*(void *)v71, *(void *)(v71 + 8));
            sub_1BFF8F648(v17, v72);
            sub_1BFF8F648(0, 2uLL);
            LOBYTE(v17) = 0;
            unint64_t v69 = (v69 + 1) & v70;
            if (((*(void *)(a2 + 56 + ((v69 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v69) & 1) == 0) {
              return v17 & 1;
            }
          }
          goto LABEL_117;
        }
LABEL_64:
        LOBYTE(v17) = 0;
        return v17 & 1;
      }
      v36(v13, 0, 1, v34);
      sub_1C0AB2C18((uint64_t)&v13[*(int *)(v34 + 52)], (uint64_t)v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      {
        sub_1C0AD3004((uint64_t)v10, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        goto LABEL_58;
      }
      sub_1C0454DC8((uint64_t)v10, (uint64_t)v7);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BFECFE50((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
        sub_1BFECFE50((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
LABEL_58:
        sub_1BFECFE50((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        if (!*(void *)(a2 + 16)) {
          goto LABEL_64;
        }
        goto LABEL_59;
      }
      unint64_t v74 = *v7;
      sub_1BFECFE50((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for WebEmbedDataVisualization);
      sub_1BFECFE50((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      switch(v74 >> 61)
      {
        case 1uLL:
          swift_release();
          if (*(void *)(a2 + 16))
          {
            long long v119 = xmmword_1C1533700;
            sub_1C1520DBC();
            FormatItemKind.hash(into:)();
            uint64_t v82 = sub_1C1520E0C();
            uint64_t v83 = -1 << *(unsigned char *)(a2 + 32);
            unint64_t v84 = v82 & ~v83;
            if ((*(void *)(a2 + 56 + ((v84 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v84))
            {
              uint64_t v85 = ~v83;
              do
              {
                uint64_t v86 = *(void *)(a2 + 48) + 16 * v84;
                unint64_t v17 = *(void *)v86;
                unint64_t v87 = *(void *)(v86 + 8);
                if (v87 == 2) {
                  goto LABEL_117;
                }
                sub_1BFE74E64(*(void *)v86, *(void *)(v86 + 8));
                sub_1BFF8F648(v17, v87);
                sub_1BFF8F648(0, 2uLL);
                unint64_t v84 = (v84 + 1) & v85;
              }
              while (((*(void *)(a2 + 56 + ((v84 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v84) & 1) != 0);
            }
          }
          unint64_t v81 = 6;
          goto LABEL_116;
        case 2uLL:
          swift_release();
          if (!*(void *)(a2 + 16)) {
            goto LABEL_91;
          }
          long long v119 = xmmword_1C1533700;
          sub_1C1520DBC();
          FormatItemKind.hash(into:)();
          uint64_t v88 = sub_1C1520E0C();
          uint64_t v89 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v90 = v88 & ~v89;
          if (((*(void *)(a2 + 56 + ((v90 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v90) & 1) == 0) {
            goto LABEL_91;
          }
          uint64_t v91 = ~v89;
          while (1)
          {
            uint64_t v92 = *(void *)(a2 + 48) + 16 * v90;
            unint64_t v17 = *(void *)v92;
            unint64_t v93 = *(void *)(v92 + 8);
            if (v93 == 2) {
              goto LABEL_117;
            }
            sub_1BFE74E64(*(void *)v92, *(void *)(v92 + 8));
            sub_1BFF8F648(v17, v93);
            sub_1BFF8F648(0, 2uLL);
            unint64_t v90 = (v90 + 1) & v91;
            if (((*(void *)(a2 + 56 + ((v90 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v90) & 1) == 0)
            {
LABEL_91:
              unint64_t v81 = 7;
              goto LABEL_116;
            }
          }
        case 3uLL:
          swift_release();
          if (!*(void *)(a2 + 16)) {
            goto LABEL_97;
          }
          long long v119 = xmmword_1C1533700;
          sub_1C1520DBC();
          FormatItemKind.hash(into:)();
          uint64_t v94 = sub_1C1520E0C();
          uint64_t v95 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v96 = v94 & ~v95;
          if (((*(void *)(a2 + 56 + ((v96 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v96) & 1) == 0) {
            goto LABEL_97;
          }
          uint64_t v97 = ~v95;
          while (1)
          {
            uint64_t v98 = *(void *)(a2 + 48) + 16 * v96;
            unint64_t v17 = *(void *)v98;
            unint64_t v99 = *(void *)(v98 + 8);
            if (v99 == 2) {
              goto LABEL_117;
            }
            sub_1BFE74E64(*(void *)v98, *(void *)(v98 + 8));
            sub_1BFF8F648(v17, v99);
            sub_1BFF8F648(0, 2uLL);
            unint64_t v96 = (v96 + 1) & v97;
            if (((*(void *)(a2 + 56 + ((v96 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v96) & 1) == 0)
            {
LABEL_97:
              unint64_t v81 = 8;
              goto LABEL_116;
            }
          }
        case 4uLL:
          swift_release();
          if (!*(void *)(a2 + 16)) {
            goto LABEL_103;
          }
          long long v119 = xmmword_1C1533700;
          sub_1C1520DBC();
          FormatItemKind.hash(into:)();
          uint64_t v100 = sub_1C1520E0C();
          uint64_t v101 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v102 = v100 & ~v101;
          if (((*(void *)(a2 + 56 + ((v102 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v102) & 1) == 0) {
            goto LABEL_103;
          }
          uint64_t v103 = ~v101;
          while (1)
          {
            uint64_t v104 = *(void *)(a2 + 48) + 16 * v102;
            unint64_t v17 = *(void *)v104;
            unint64_t v105 = *(void *)(v104 + 8);
            if (v105 == 2) {
              goto LABEL_117;
            }
            sub_1BFE74E64(*(void *)v104, *(void *)(v104 + 8));
            sub_1BFF8F648(v17, v105);
            sub_1BFF8F648(0, 2uLL);
            unint64_t v102 = (v102 + 1) & v103;
            if (((*(void *)(a2 + 56 + ((v102 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v102) & 1) == 0)
            {
LABEL_103:
              unint64_t v81 = 9;
              goto LABEL_116;
            }
          }
        case 5uLL:
          swift_release();
          if (!*(void *)(a2 + 16)) {
            goto LABEL_109;
          }
          long long v119 = xmmword_1C1533700;
          sub_1C1520DBC();
          FormatItemKind.hash(into:)();
          uint64_t v106 = sub_1C1520E0C();
          uint64_t v107 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v108 = v106 & ~v107;
          if (((*(void *)(a2 + 56 + ((v108 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v108) & 1) == 0) {
            goto LABEL_109;
          }
          uint64_t v109 = ~v107;
          while (1)
          {
            uint64_t v110 = *(void *)(a2 + 48) + 16 * v108;
            unint64_t v17 = *(void *)v110;
            unint64_t v111 = *(void *)(v110 + 8);
            if (v111 == 2) {
              goto LABEL_117;
            }
            sub_1BFE74E64(*(void *)v110, *(void *)(v110 + 8));
            sub_1BFF8F648(v17, v111);
            sub_1BFF8F648(0, 2uLL);
            unint64_t v108 = (v108 + 1) & v109;
            if (((*(void *)(a2 + 56 + ((v108 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v108) & 1) == 0)
            {
LABEL_109:
              unint64_t v81 = 10;
              goto LABEL_116;
            }
          }
        case 6uLL:
          swift_release();
          if (!*(void *)(a2 + 16)) {
            goto LABEL_115;
          }
          long long v119 = xmmword_1C1533700;
          sub_1C1520DBC();
          FormatItemKind.hash(into:)();
          uint64_t v112 = sub_1C1520E0C();
          uint64_t v113 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v114 = v112 & ~v113;
          if (((*(void *)(a2 + 56 + ((v114 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v114) & 1) == 0) {
            goto LABEL_115;
          }
          uint64_t v115 = ~v113;
          while (1)
          {
            uint64_t v116 = *(void *)(a2 + 48) + 16 * v114;
            unint64_t v17 = *(void *)v116;
            unint64_t v117 = *(void *)(v116 + 8);
            if (v117 == 2) {
              goto LABEL_117;
            }
            sub_1BFE74E64(*(void *)v116, *(void *)(v116 + 8));
            sub_1BFF8F648(v17, v117);
            sub_1BFF8F648(0, 2uLL);
            unint64_t v114 = (v114 + 1) & v115;
            if (((*(void *)(a2 + 56 + ((v114 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v114) & 1) == 0)
            {
LABEL_115:
              unint64_t v81 = 11;
              goto LABEL_116;
            }
          }
        default:
          swift_release();
          if (!*(void *)(a2 + 16)) {
            goto LABEL_77;
          }
          long long v119 = xmmword_1C1533700;
          sub_1C1520DBC();
          FormatItemKind.hash(into:)();
          uint64_t v75 = sub_1C1520E0C();
          uint64_t v76 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v77 = v75 & ~v76;
          if (((*(void *)(a2 + 56 + ((v77 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v77) & 1) == 0) {
            goto LABEL_77;
          }
          uint64_t v78 = ~v76;
          break;
      }
      while (1)
      {
        uint64_t v79 = *(void *)(a2 + 48) + 16 * v77;
        unint64_t v17 = *(void *)v79;
        unint64_t v80 = *(void *)(v79 + 8);
        if (v80 == 2) {
          break;
        }
        sub_1BFE74E64(*(void *)v79, *(void *)(v79 + 8));
        sub_1BFF8F648(v17, v80);
        sub_1BFF8F648(0, 2uLL);
        unint64_t v77 = (v77 + 1) & v78;
        if (((*(void *)(a2 + 56 + ((v77 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v77) & 1) == 0)
        {
LABEL_77:
          unint64_t v81 = 5;
LABEL_116:
          LOBYTE(v17) = sub_1C0451CA4(0, v81, a2);
          return v17 & 1;
        }
      }
LABEL_117:
      sub_1BFF8F648(v17, 2uLL);
      unint64_t v73 = 2;
LABEL_118:
      sub_1BFF8F648(0, v73);
      LOBYTE(v17) = 1;
      return v17 & 1;
    case 5uLL:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_64;
      }
      sub_1C1520DBC();
      sub_1C1520DCC();
      uint64_t v37 = sub_1C1520E0C();
      uint64_t v38 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v39 = v37 & ~v38;
      if (((*(void *)(a2 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0) {
        goto LABEL_64;
      }
      uint64_t v40 = ~v38;
      while (1)
      {
        uint64_t v41 = *(void *)(a2 + 48) + 16 * v39;
        uint64_t v42 = *(void *)v41;
        unint64_t v17 = *(void *)(v41 + 8);
        if (v17 == 1) {
          break;
        }
        sub_1BFE74E64(*(void *)v41, *(void *)(v41 + 8));
        sub_1BFF8F648(v42, v17);
        sub_1BFF8F648(0, 1uLL);
        LOBYTE(v17) = 0;
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(a2 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0) {
          return v17 & 1;
        }
      }
      sub_1BFF8F648(*(void *)v41, 1uLL);
      sub_1BFF8F648(0, 1uLL);
      return v17 & 1;
    case 7uLL:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_64;
      }
      sub_1C1520DBC();
      sub_1C1520DCC();
      uint64_t v43 = sub_1C1520E0C();
      uint64_t v44 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v45 = v43 & ~v44;
      if (((*(void *)(a2 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
        goto LABEL_64;
      }
      uint64_t v46 = ~v44;
      while (1)
      {
        uint64_t v47 = *(void *)(a2 + 48) + 16 * v45;
        unint64_t v17 = *(void *)v47;
        unint64_t v48 = *(void *)(v47 + 8);
        if (v48 == 4) {
          break;
        }
        sub_1BFE74E64(*(void *)v47, *(void *)(v47 + 8));
        sub_1BFF8F648(v17, v48);
        sub_1BFF8F648(0, 4uLL);
        LOBYTE(v17) = 0;
        unint64_t v45 = (v45 + 1) & v46;
        if (((*(void *)(a2 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
          return v17 & 1;
        }
      }
      sub_1BFF8F648(*(void *)v47, 4uLL);
      unint64_t v73 = 4;
      goto LABEL_118;
    case 0xCuLL:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_64;
      }
      sub_1C1520DBC();
      sub_1C1520DCC();
      uint64_t v49 = sub_1C1520E0C();
      uint64_t v50 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v51 = v49 & ~v50;
      if (((*(void *)(a2 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51) & 1) == 0) {
        goto LABEL_64;
      }
      uint64_t v52 = ~v50;
      while (1)
      {
        uint64_t v53 = *(void *)(a2 + 48) + 16 * v51;
        unint64_t v17 = *(void *)v53;
        unint64_t v54 = *(void *)(v53 + 8);
        if (v54 == 12) {
          break;
        }
        sub_1BFE74E64(*(void *)v53, *(void *)(v53 + 8));
        sub_1BFF8F648(v17, v54);
        sub_1BFF8F648(0, 0xCuLL);
        LOBYTE(v17) = 0;
        unint64_t v51 = (v51 + 1) & v52;
        if (((*(void *)(a2 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51) & 1) == 0) {
          return v17 & 1;
        }
      }
      sub_1BFF8F648(*(void *)v53, 0xCuLL);
      unint64_t v73 = 12;
      goto LABEL_118;
    case 0xDuLL:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_64;
      }
      sub_1C1520DBC();
      sub_1C1520DCC();
      uint64_t v55 = sub_1C1520E0C();
      uint64_t v56 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v57 = v55 & ~v56;
      if (((*(void *)(a2 + 56 + ((v57 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v57) & 1) == 0) {
        goto LABEL_64;
      }
      uint64_t v58 = ~v56;
      while (1)
      {
        uint64_t v59 = *(void *)(a2 + 48) + 16 * v57;
        unint64_t v17 = *(void *)v59;
        unint64_t v60 = *(void *)(v59 + 8);
        if (v60 == 13) {
          break;
        }
        sub_1BFE74E64(*(void *)v59, *(void *)(v59 + 8));
        sub_1BFF8F648(v17, v60);
        sub_1BFF8F648(0, 0xDuLL);
        LOBYTE(v17) = 0;
        unint64_t v57 = (v57 + 1) & v58;
        if (((*(void *)(a2 + 56 + ((v57 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v57) & 1) == 0) {
          return v17 & 1;
        }
      }
      sub_1BFF8F648(*(void *)v59, 0xDuLL);
      unint64_t v73 = 13;
      goto LABEL_118;
    case 0xEuLL:
      if (!*(void *)(a2 + 16)) {
        goto LABEL_64;
      }
      sub_1C1520DBC();
      sub_1C1520DCC();
      uint64_t v61 = sub_1C1520E0C();
      uint64_t v62 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v63 = v61 & ~v62;
      if (((*(void *)(a2 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63) & 1) == 0) {
        goto LABEL_64;
      }
      uint64_t v64 = ~v62;
      while (1)
      {
        uint64_t v65 = *(void *)(a2 + 48) + 16 * v63;
        unint64_t v17 = *(void *)v65;
        unint64_t v66 = *(void *)(v65 + 8);
        if (v66 == 14) {
          break;
        }
        sub_1BFE74E64(*(void *)v65, *(void *)(v65 + 8));
        sub_1BFF8F648(v17, v66);
        sub_1BFF8F648(0, 0xEuLL);
        LOBYTE(v17) = 0;
        unint64_t v63 = (v63 + 1) & v64;
        if (((*(void *)(a2 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v63) & 1) == 0) {
          return v17 & 1;
        }
      }
      sub_1BFF8F648(*(void *)v65, 0xEuLL);
      unint64_t v73 = 14;
      goto LABEL_118;
    default:
      uint64_t v24 = v121;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_53;
      }
      sub_1C1520DBC();
      sub_1C1520DCC();
      sub_1C151E77C();
      uint64_t v25 = sub_1C1520E0C();
      uint64_t v26 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v27 = v25 & ~v26;
      if (((*(void *)(a2 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
        goto LABEL_53;
      }
      uint64_t v28 = ~v26;
      while (2)
      {
        char v29 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v27);
        uint64_t v30 = *v29;
        unint64_t v31 = v29[1];
        if (v31 < 0xF)
        {
          swift_bridgeObjectRetain();
          sub_1BFF8F648(v30, v31);
          sub_1BFF8F648(v24, v16);
        }
        else
        {
          if (v30 == v24 && v31 == v16)
          {
            sub_1BFF7FF04(v24, v16);
            sub_1BFE74E64(v24, v16);
            sub_1BFF8F648(v24, v16);
            sub_1BFF8F648(v24, v16);
LABEL_79:
            sub_1BFEEFC20(v24, v16);
            LOBYTE(v17) = 1;
            return v17 & 1;
          }
          char v33 = sub_1C1520A9C();
          sub_1BFF7FF04(v24, v16);
          sub_1BFE74E64(v30, v31);
          sub_1BFF8F648(v30, v31);
          sub_1BFF8F648(v24, v16);
          if (v33) {
            goto LABEL_79;
          }
        }
        unint64_t v27 = (v27 + 1) & v28;
        if (((*(void *)(a2 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
        {
LABEL_53:
          sub_1BFEEFC20(v24, v16);
          LOBYTE(v17) = 0;
          return v17 & 1;
        }
        continue;
      }
  }
}

uint64_t sub_1BFF7FF04(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x11) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFF7FF18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(v2 + *(int *)(a1 + 48));
  uint64_t v4 = *v3;
  unint64_t v5 = v3[1];
  *a2 = *v3;
  a2[1] = v5;
  return sub_1BFF7FF04(v4, v5);
}

uint64_t type metadata accessor for WebEmbedDataVisualization()
{
  uint64_t result = qword_1EB883018;
  if (!qword_1EB883018) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFF7FF78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF7FFE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1BFF80048(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = type metadata accessor for FormatOption();
  uint64_t v5 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v53 = (uint64_t)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = (uint64_t)v51 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v51 - v10;
  sub_1BFF2E5E0(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v58 = (uint64_t)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = *(void *)(a2 + 16);
  if (!v16) {
    return;
  }
  uint64_t v56 = (uint64_t)v51 - v15;
  v51[1] = v2;
  uint64_t v57 = OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_options;
  unint64_t v17 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  swift_bridgeObjectRetain();
  _OWORD v51[2] = a2;
  uint64_t v18 = (unsigned char *)(a2 + 49);
  uint64_t v54 = a1;
  uint64_t v55 = (uint64_t *)v11;
  unint64_t v60 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v19 = a1;
  while (1)
  {
    if (*v18) {
      goto LABEL_5;
    }
    uint64_t v20 = *(void *)(v18 - 17);
    uint64_t v21 = *(void *)(v18 - 9);
    LODWORD(v22) = *(v18 - 1);
    if (v22) {
      break;
    }
LABEL_4:
    sub_1BFF45B38(v20, v21, (char)v22, 0);
LABEL_5:
    v18 += 24;
    if (!--v16)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  sub_1C00AB058(*(void *)(v18 - 17), *(void *)(v18 - 9), *(v18 - 1), 0);
  sub_1BFE94AB4(v20, v21, 1);
  uint64_t v61 = sub_1C00B857C((uint64_t)&unk_1F1B6D148);
  uint64_t v23 = v19;
  uint64_t v24 = *(void *)(v19 + v57);
  uint64_t v25 = *(void *)(v24 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v25 + 16) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1BFEF2D8C(v20, v21);
    if (v26)
    {
      swift_endAccess();
      swift_retain();
      int v63 = (int)v22;
      sub_1BFF45B38(v20, v21, (char)v22, 0);
      swift_retain();
      swift_release();
      uint64_t v27 = v53;
      sub_1BFEF9524(v53);
      swift_release();
      uint64_t v28 = v27;
      uint64_t v29 = v58;
      uint64_t v30 = v52;
      sub_1BFCCD5B8(v28, v52, (uint64_t (*)(void))type metadata accessor for FormatOption);
      sub_1BFCCD5B8(v30, v29, (uint64_t (*)(void))type metadata accessor for FormatOption);
LABEL_16:
      uint64_t v22 = v60;
      id v32 = *v60;
      uint64_t v33 = v29;
      uint64_t v34 = v29;
      uint64_t v35 = v59;
      (*v60)(v33, 0, 1, v59);
      uint64_t v36 = v55;
      sub_1BFCCD5B8(v34, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v62 = v36[2];
      FormatOptionValue.type.getter((char *)&v64);
      if ((sub_1BFF2AB84(v64, v61) & 1) == 0)
      {
        type metadata accessor for FormatDerivedDataError();
        sub_1BFF87774((unint64_t *)&qword_1EA196B88, (void (*)(uint64_t))type metadata accessor for FormatDerivedDataError);
        swift_allocError();
        uint64_t v45 = v44;
        uint64_t v46 = *v36;
        uint64_t v47 = v36[1];
        uint64_t v62 = v36[2];
        swift_bridgeObjectRetain();
        FormatOptionValue.type.getter((char *)&v64);
        uint64_t v48 = v61;
        unsigned __int8 v49 = v64;
        *(void *)uint64_t v45 = v46;
        *(void *)(v45 + 8) = v47;
        *(unsigned char *)(v45 + 16) = v49;
        *(void *)(v45 + 24) = v48;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_willThrow();
        sub_1C05DDC60((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for FormatOption);
        LOBYTE(v22) = v63;
        goto LABEL_26;
      }
      uint64_t v37 = (uint64_t)v36;
      uint64_t v38 = v56;
      sub_1BFCCD5B8(v37, v56, (uint64_t (*)(void))type metadata accessor for FormatOption);
      v32(v38, 0, 1, v35);
      uint64_t v39 = v38;
      uint64_t v19 = v54;
      unint64_t v17 = v22;
      LOBYTE(v22) = v63;
      goto LABEL_3;
    }
    swift_endAccess();
    sub_1BFF45B38(v20, v21, (char)v22, 0);
  }
  else
  {
    swift_endAccess();
  }
  swift_beginAccess();
  if (*(void *)(*(void *)(v24 + 24) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1BFEF2D8C(v20, v21);
    if (v31)
    {
      swift_endAccess();
      swift_retain();
      int v63 = (int)v22;
      sub_1BFF45B38(v20, v21, (char)v22, 0);
      swift_retain();
      swift_release();
      uint64_t v29 = v58;
      sub_1BFEF9524(v58);
      swift_release();
      goto LABEL_16;
    }
    swift_endAccess();
    sub_1BFF45B38(v20, v21, (char)v22, 0);
  }
  else
  {
    swift_endAccess();
  }
  uint64_t v40 = *v17;
  uint64_t v42 = v58;
  uint64_t v41 = v59;
  v40(v58, 1, 1, v59);
  sub_1C05DDCC0(v42, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  if (*(unsigned char *)(v23 + 48))
  {
    uint64_t v43 = v56;
    v40(v56, 1, 1, v41);
    uint64_t v39 = v43;
    unint64_t v17 = v60;
    uint64_t v19 = v23;
LABEL_3:
    sub_1C05DDCC0(v39, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
    swift_bridgeObjectRelease();
    sub_1BFF45B38(v20, v21, (char)v22, 0);
    goto LABEL_4;
  }
  type metadata accessor for FormatLayoutError();
  sub_1BFF87774((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
  swift_allocError();
  *uint64_t v50 = v20;
  v50[1] = v21;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_willThrow();
LABEL_26:
  swift_bridgeObjectRelease();
  sub_1BFF45B38(v20, v21, (char)v22, 0);
  sub_1BFF45B38(v20, v21, (char)v22, 0);
  swift_bridgeObjectRelease();
}

void sub_1BFF8079C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  long long v6 = *(_OWORD *)(a2 + 80);
  v20[4] = *(_OWORD *)(a2 + 64);
  v20[5] = v6;
  uint64_t v21 = *(void *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 16);
  v20[0] = *(_OWORD *)a2;
  v20[1] = v7;
  long long v8 = *(_OWORD *)(a2 + 48);
  v20[2] = *(_OWORD *)(a2 + 32);
  v20[3] = v8;
  uint64_t v9 = v2[4];
  if ((v9 & 0x8000000000000000) == 0) {
    goto LABEL_12;
  }
  uint64_t v18 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x10);
  uint64_t v19 = *(void *)((v9 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1144B38((uint64_t)a1, (uint64_t)v20, v18, v19);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v4)
  {
LABEL_12:
    sub_1BFF0D1B8(a1, (uint64_t)v20);
    if (!v4)
    {
      swift_beginAccess();
      uint64_t v10 = v2[10];
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain_n();
        for (uint64_t i = 0; i != v11; ++i)
        {
          unint64_t v13 = *(void *)(v10 + 8 * i + 32);
          sub_1BFF32264(v13);
          sub_1BFF0D378((uint64_t)a1, (uint64_t)v20);
          sub_1BFF31E90(v13);
        }
        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      unint64_t v14 = v2[13];
      if (v14 >> 62 == 1)
      {
        uint64_t v15 = v14 & 0x3FFFFFFFFFFFFFFFLL;
        unint64_t v16 = *(void *)(v15 + 16);
        uint64_t v17 = *(void *)(v15 + 24);
        sub_1BFE6FA30(v16);
        swift_bridgeObjectRetain();
        sub_1C1144E0C((uint64_t)a1, (uint64_t)v20, v16, v17);
        sub_1BFF0056C(v16);
        swift_bridgeObjectRelease();
      }
    }
  }
}

void *initializeWithCopy for FormatLocalization(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFF809FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v52 = a5;
  uint64_t v57 = a2;
  uint64_t v51 = a1;
  uint64_t v9 = type metadata accessor for FormatOption();
  uint64_t v50 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v56);
  unint64_t v13 = (uint64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for FormatOptionsNodeStatement();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = MEMORY[0x1E4FBC860];
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v18 = *(void *)(a4 + 32);
  swift_bridgeObjectRetain();
  uint64_t v45 = a4;
  swift_release();
  uint64_t v55 = *(void *)(v18 + 16);
  if (v55)
  {
    uint64_t v54 = v18 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t result = swift_retain();
    unint64_t v20 = 0;
    uint64_t v49 = v9;
    uint64_t v48 = v13;
    uint64_t v47 = v17;
    uint64_t v46 = v18;
    uint64_t v53 = v15;
    while (v20 < *(void *)(v18 + 16))
    {
      uint64_t v22 = *(void *)(v15 + 72);
      unint64_t v61 = v20;
      sub_1C09F74B0(v54 + v22 * v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
      uint64_t v23 = swift_retain();
      MEMORY[0x1C18C66D0](v23);
      if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      sub_1BFF81F7C();
      uint64_t v25 = (char *)v13 + *(int *)(v24 + 48);
      *unint64_t v13 = a3;
      sub_1BFF81FF0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v25, v57, v26);
      swift_storeEnumTagMultiPayload();
      swift_retain();
      uint64_t v27 = sub_1C0DF14C0((uint64_t)v13);
      if (v6)
      {
        swift_release();
        sub_1BFF81104((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
        sub_1BFF81104((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v28 = v27;
      sub_1BFF81104((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
      int64_t v29 = v28[2];
      if (v29)
      {
        uint64_t v59 = a3;
        uint64_t v60 = 0;
        uint64_t v62 = MEMORY[0x1E4FBC860];
        sub_1BFF9524C(0, v29, 0);
        uint64_t v30 = v62;
        uint64_t v31 = *(unsigned __int8 *)(v50 + 80);
        uint64_t v58 = v28;
        uint64_t v32 = (uint64_t)v28 + ((v31 + 32) & ~v31);
        uint64_t v33 = *(void *)(v50 + 72);
        do
        {
          sub_1C09F74B0(v32, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v34 = swift_allocBox();
          sub_1C09F7448((uint64_t)v11, v35, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v62 = v30;
          unint64_t v37 = *(void *)(v30 + 16);
          unint64_t v36 = *(void *)(v30 + 24);
          if (v37 >= v36 >> 1)
          {
            sub_1BFF9524C(v36 > 1, v37 + 1, 1);
            uint64_t v30 = v62;
          }
          *(void *)(v30 + 16) = v37 + 1;
          *(void *)(v30 + 8 * v37 + 32) = v34 | 0x6000000000000004;
          v32 += v33;
          --v29;
        }
        while (v29);
        swift_bridgeObjectRelease();
        uint64_t v21 = sub_1BFF20000(v30);
        swift_release();
        swift_release();
        uint64_t v17 = v47;
        uint64_t result = sub_1BFF81104((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
        a3 = v21;
        uint64_t v6 = v60;
        unint64_t v13 = v48;
        uint64_t v18 = v46;
      }
      else
      {
        sub_1BFF81104((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatement);
        uint64_t result = swift_bridgeObjectRelease();
      }
      unint64_t v20 = v61 + 1;
      uint64_t v15 = v53;
      if (v61 + 1 == v55)
      {
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v38 = v45;
    swift_unownedRetainStrong();
    swift_beginAccess();
    uint64_t v39 = *(void *)(v38 + 40);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v40 = *(void *)(v39 + 16);
    if (v40)
    {
      uint64_t v41 = 32;
      while (1)
      {
        long long v42 = *(_OWORD *)(v39 + v41);
        long long v43 = *(_OWORD *)(v39 + v41 + 16);
        uint64_t v64 = *(void *)(v39 + v41 + 32);
        v63[0] = v42;
        v63[1] = v43;
        sub_1BFF1BDBC((uint64_t)v63);
        sub_1BFF1BDFC(v51, a3, v52);
        if (v6) {
          break;
        }
        sub_1BFF1BD7C((uint64_t)v63);
        v41 += 40;
        if (!--v40) {
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease();
      swift_release();
      return sub_1BFF1BD7C((uint64_t)v63);
    }
    else
    {
LABEL_22:
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BFF81044(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF810A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFF81104(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for FormatOptionsNodeStatement(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FormatOptionsNodeStatementValue();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 3u:
      goto LABEL_13;
    case 2u:
      sub_1BFDEB9E0(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(unsigned char *)(v4 + 24));
      goto LABEL_14;
    case 4u:
      sub_1C0DF266C(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(unsigned __int16 *)(v4 + 48), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
      goto LABEL_14;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 6u:
      sub_1BFF07CD8(*(void *)v4);
      goto LABEL_14;
    case 7u:
      type metadata accessor for FormatURL();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        sub_1BFD7418C(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(unsigned char *)(v4 + 24));
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          if (EnumCaseMultiPayload) {
            goto LABEL_14;
          }
          uint64_t v6 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
          type metadata accessor for FormatAbsoluteURL();
        }
LABEL_13:
        swift_bridgeObjectRelease();
      }
LABEL_14:
      return swift_bridgeObjectRelease();
    case 8u:
      swift_release();
      goto LABEL_14;
    default:
      goto LABEL_14;
  }
}

void *initializeWithCopy for FormatOptionsNodeStatement(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  long long v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  type metadata accessor for FormatOptionsNodeStatementValue();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *((void *)v9 + 1);
      uint64_t v12 = *((void *)v9 + 2);
      char v13 = v9[24];
      sub_1BFDEB94C(v10, v11, v12, v13);
      *(void *)long long v8 = v10;
      *((void *)v8 + 1) = v11;
      *((void *)v8 + 2) = v12;
      v8[24] = v13;
      break;
    case 3u:
      uint64_t v14 = *((void *)v9 + 1);
      *(void *)long long v8 = *(void *)v9;
      *((void *)v8 + 1) = v14;
      v8[16] = v9[16];
      swift_bridgeObjectRetain();
      break;
    case 4u:
      uint64_t v15 = *(void *)v9;
      uint64_t v16 = *((void *)v9 + 1);
      uint64_t v17 = *((void *)v9 + 2);
      uint64_t v18 = *((void *)v9 + 4);
      uint64_t v19 = *((void *)v9 + 5);
      uint64_t v34 = v18;
      uint64_t v36 = *((void *)v9 + 3);
      uint64_t v20 = *((unsigned __int16 *)v9 + 24);
      uint64_t v33 = v19;
      sub_1C0DF266C(v15, v16, v17, v36, v18, v19, v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF2A99C, (uint64_t (*)(void))sub_1BFE86E48);
      *(void *)long long v8 = v15;
      *((void *)v8 + 1) = v16;
      *((void *)v8 + 2) = v17;
      *((void *)v8 + 3) = v36;
      *((void *)v8 + 4) = v34;
      *((void *)v8 + 5) = v33;
      *((_WORD *)v8 + 24) = v20;
      break;
    case 5u:
      uint64_t v21 = *((void *)v9 + 1);
      *(void *)long long v8 = *(void *)v9;
      *((void *)v8 + 1) = v21;
      uint64_t v22 = *((void *)v9 + 3);
      *((void *)v8 + 2) = *((void *)v9 + 2);
      *((void *)v8 + 3) = v22;
      *((void *)v8 + 4) = *((void *)v9 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 6u:
      unint64_t v23 = *(void *)v9;
      sub_1BFF58F10(v23);
      *(void *)long long v8 = v23;
      break;
    case 7u:
      type metadata accessor for FormatURL();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v27 = *(void *)v9;
        uint64_t v26 = *((void *)v9 + 1);
        uint64_t v28 = *((void *)v9 + 2);
        uint64_t v35 = v28;
        char v29 = v9[24];
        sub_1BFE86E48(v27, v26, v28, v29);
        *(void *)long long v8 = v27;
        *((void *)v8 + 1) = v26;
        *((void *)v8 + 2) = v35;
        v8[24] = v29;
      }
      else
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v25 = *((void *)v9 + 1);
          *(void *)long long v8 = *(void *)v9;
          *((void *)v8 + 1) = v25;
          *((void *)v8 + 2) = *((void *)v9 + 2);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v30 = sub_1C1515FDC();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v8, v9, v30);
          uint64_t v31 = type metadata accessor for FormatAbsoluteURL();
          *(void *)&v8[*(int *)(v31 + 20)] = *(void *)&v9[*(int *)(v31 + 20)];
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      break;
    case 8u:
      *(void *)long long v8 = *(void *)v9;
      swift_retain();
      break;
    default:
      *(void *)long long v8 = *(void *)v9;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFF815FC(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    uint64_t v4 = a1 + *(int *)(v3 + 48);
    sub_1BFF81FF0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1BFF816A8(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_1BFF8204C();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF81BCC();
  uint64_t v11 = v10;
  MEMORY[0x1F4188790](v10);
  char v13 = (uint64_t *)((char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for FormatOptionsNodeStatementValue();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = *(_OWORD *)(a2 + 80);
  void v24[4] = *(_OWORD *)(a2 + 64);
  v24[5] = v17;
  uint64_t v25 = *(void *)(a2 + 96);
  long long v18 = *(_OWORD *)(a2 + 16);
  v24[0] = *(_OWORD *)a2;
  v24[1] = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  void v24[2] = *(_OWORD *)(a2 + 32);
  v24[3] = v19;
  sub_1BFF83CC4(v4, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementValue);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 2:
      uint64_t result = sub_1BFDEB9E0(*(void *)v16, *((void *)v16 + 1), *((void *)v16 + 2), v16[24]);
      break;
    case 4:
      uint64_t result = *(void *)v16;
      uint64_t v21 = *((unsigned __int16 *)v16 + 24);
      switch(v21 >> 13)
      {
        case 2u:
        case 3u:
        case 4u:
          uint64_t result = sub_1C05DD0F4(result, *((void *)v16 + 1), *((void *)v16 + 2), *((void *)v16 + 3), *((void *)v16 + 4), *((void *)v16 + 5), v21, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
          break;
        default:
          return result;
      }
      break;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 6:
      unint64_t v22 = *(void *)v16;
      switch(*(void *)v16 >> 62)
      {
        case 1:
          uint64_t v26 = *(void *)((v22 & 0x3FFFFFFFFFFFFFFFLL) + 0x18);
          sub_1BFFDD9B8((uint64_t)a1, (uint64_t *)a2);
          goto LABEL_9;
        case 3:
          return result;
        default:
LABEL_9:
          uint64_t result = sub_1BFF07CD8(v22);
          break;
      }
      break;
    case 7:
      uint64_t result = sub_1C05DDC60((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementValue);
      break;
    case 8:
      uint64_t v23 = swift_projectBox();
      sub_1BFF83CC4(v23, (uint64_t)v13, (uint64_t (*)(void))sub_1BFF81BCC);
      sub_1C1132DBC(a1, v24, *v13);
      if (!v3)
      {
        sub_1BFF83CC4((uint64_t)v13 + *(int *)(v11 + 36), (uint64_t)v9, (uint64_t (*)(void))sub_1BFF8204C);
        sub_1BFF816A8(a1, v24);
        sub_1C05DDC60((uint64_t)v9, (uint64_t (*)(void))sub_1BFF8204C);
      }
      sub_1C05DDC60((uint64_t)v13, (uint64_t (*)(void))sub_1BFF81BCC);
      uint64_t result = swift_release();
      break;
    default:
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

void sub_1BFF81A84()
{
  if (!qword_1EB888338)
  {
    type metadata accessor for FormatOptionsNodeStatementValue();
    sub_1BFF6B648(&qword_1EB88E110, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue);
    unint64_t v0 = type metadata accessor for FormatSwitchValue.CaseValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB888338);
    }
  }
}

uint64_t sub_1BFF81B18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FormatOptionsNodeStatementContext()
{
  uint64_t result = qword_1EB88E818;
  if (!qword_1EB88E818) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BFF81BCC()
{
  if (!qword_1EB888350)
  {
    type metadata accessor for FormatOptionsNodeStatementValue();
    sub_1BFF87774(&qword_1EB88E110, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue);
    unint64_t v0 = type metadata accessor for FormatSwitchValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB888350);
    }
  }
}

uint64_t type metadata accessor for FormatOptionsNodeStatementValue()
{
  uint64_t result = qword_1EB88E118;
  if (!qword_1EB88E118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t destroy for FormatOptionsNodeStatementValue(uint64_t a1)
{
  unint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 3:
      goto LABEL_20;
    case 2:
      uint64_t v3 = *(void *)a1;
      uint64_t v4 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      char v6 = *(unsigned char *)(a1 + 24);
      return sub_1BFDEB9E0(v3, v4, v5, v6);
    case 4:
      return sub_1C05DD0F4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned __int16 *)(a1 + 48), (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))sub_1BFF0084C, (uint64_t (*)(void))sub_1BFD7418C);
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    case 6:
      unint64_t v8 = *(void *)a1;
      return sub_1BFF07CD8(v8);
    case 7:
      type metadata accessor for FormatURL();
      unint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2) {
        return sub_1BFD7418C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
      }
      if (result == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (result) {
          return result;
        }
        uint64_t v7 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
        type metadata accessor for FormatAbsoluteURL();
      }
LABEL_20:
      return swift_bridgeObjectRelease();
    case 8:
      return swift_release();
    default:
      return result;
  }
}

void *sub_1BFF81E90(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    uint64_t v6 = *(int *)(v5 + 48);
    uint64_t v7 = (char *)a1 + v6;
    unint64_t v8 = (char *)a2 + v6;
    sub_1BFF81FF0();
    uint64_t v10 = v9;
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_retain();
    v11(v7, v8, v10);
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void sub_1BFF81F7C()
{
  if (!qword_1EB884A10)
  {
    type metadata accessor for FormatNodeContext();
    sub_1BFF81FF0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB884A10);
    }
  }
}

void sub_1BFF81FF0()
{
  if (!qword_1EB871380)
  {
    sub_1BFF597F8();
    unint64_t v0 = sub_1C1517C9C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871380);
    }
  }
}

void sub_1BFF8204C()
{
  if (!qword_1EB888340)
  {
    type metadata accessor for FormatOptionsNodeStatementValue();
    sub_1BFF87774(&qword_1EB88E110, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue);
    unint64_t v0 = type metadata accessor for FormatSwitchValue.DefaultValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB888340);
    }
  }
}

uint64_t sub_1BFF820E0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

void *sub_1BFF82154(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_bridgeObjectRetain();
  v5(v7, v8, v4);
  return a1;
}

uint64_t sub_1BFF821E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v77 = a1;
  uint64_t v76 = a2;
  uint64_t v3 = sub_1C151631C();
  uint64_t v72 = *(void *)(v3 - 8);
  uint64_t v73 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v75 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C1515FDC();
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v74 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C0178190();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v70 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v70 - v14;
  MEMORY[0x1F4188790](v16);
  long long v18 = (char *)&v70 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v70 - v20;
  uint64_t v22 = *(void *)(v2 + 8);
  uint64_t v24 = *(void *)(v2 + 16);
  uint64_t v23 = *(void *)(v2 + 24);
  unsigned int v25 = *(unsigned __int16 *)(v2 + 48);
  switch(v25 >> 13)
  {
    case 1u:
      uint64_t v30 = *(void *)v2;
      uint64_t v31 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v18, 1, 1, v31);
      uint64_t v32 = v78;
      double v33 = sub_1C10191AC(v77, v30);
      if (v32)
      {
        uint64_t v9 = v18;
        return sub_1C12F5D68((uint64_t)v9);
      }
      double v49 = v33;
      uint64_t v50 = swift_allocObject();
      *(double *)(v50 + 16) = v49;
      *(void *)(v50 + 24) = MEMORY[0x1E4FBC860];
      uint64_t v48 = v50 | 0x3000000000000000;
      uint64_t v21 = v18;
      goto LABEL_17;
    case 2u:
      uint64_t v79 = *(void *)v2;
      uint64_t v80 = v22;
      uint64_t v81 = v24;
      uint64_t v82 = v23;
      long long v83 = *(_OWORD *)(v2 + 32);
      __int16 v84 = v25 & 0x1FFF;
      uint64_t v34 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v15, 1, 1, v34);
      uint64_t v35 = v78;
      uint64_t v36 = sub_1BFF82828(v77, 0);
      if (v35)
      {
        uint64_t v9 = v15;
        return sub_1C12F5D68((uint64_t)v9);
      }
      uint64_t v51 = v36;
      uint64_t v52 = v37;
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v51;
      *(void *)(v53 + 24) = v52;
      *(void *)(v53 + 32) = MEMORY[0x1E4FBC860];
      uint64_t v48 = v53 | 0x5000000000000000;
      uint64_t v21 = v15;
      goto LABEL_17;
    case 3u:
      uint64_t v38 = *(void *)v2;
      uint64_t v39 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v12, 1, 1, v39);
      uint64_t v40 = v74;
      uint64_t v41 = v78;
      sub_1C103B53C(v77, v38, v22, v24, v23, v74);
      if (v41)
      {
        uint64_t v9 = v12;
        return sub_1C12F5D68((uint64_t)v9);
      }
      sub_1BFF2918C();
      uint64_t v55 = v54;
      uint64_t v56 = swift_allocBox();
      uint64_t v58 = v57;
      uint64_t v60 = v70;
      uint64_t v59 = v71;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v57, v40, v71);
      *(void *)(v58 + *(int *)(v55 + 36)) = MEMORY[0x1E4FBC860];
      uint64_t v48 = v56 | 0x6000000000000000;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v40, v59);
      uint64_t v21 = v12;
      goto LABEL_17;
    case 4u:
      uint64_t v42 = *(void *)v2;
      uint64_t v43 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v9, 1, 1, v43);
      uint64_t v44 = v75;
      uint64_t v45 = v78;
      sub_1C121DD9C(v77, v42, v22, v24, v23, v75);
      if (v45) {
        return sub_1C12F5D68((uint64_t)v9);
      }
      sub_1BFF29220();
      uint64_t v62 = v61;
      uint64_t v63 = swift_allocBox();
      uint64_t v65 = v64;
      uint64_t v67 = v72;
      uint64_t v66 = v73;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16))(v64, v44, v73);
      *(void *)(v65 + *(int *)(v62 + 36)) = MEMORY[0x1E4FBC860];
      uint64_t v48 = v63 | 0x2000000000000000;
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v44, v66);
      uint64_t v21 = v9;
      goto LABEL_17;
    default:
      uint64_t v26 = *(void *)v2;
      uint64_t v27 = type metadata accessor for FormatVersionRequirement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v21, 1, 1, v27);
      uint64_t v28 = v78;
      char v29 = sub_1C1508994(v77, v26, v22);
      if (v28)
      {
        uint64_t v9 = v21;
        return sub_1C12F5D68((uint64_t)v9);
      }
      else
      {
        char v47 = v29;
        uint64_t v48 = swift_allocObject();
        *(unsigned char *)(v48 + 16) = v47 & 1;
        *(void *)(v48 + 24) = MEMORY[0x1E4FBC860];
LABEL_17:
        uint64_t v68 = v76;
        *uint64_t v76 = v48;
        v68[1] = 0;
        uint64_t v69 = type metadata accessor for FormatOptionsNodeStatementResult();
        sub_1C0164368((uint64_t)v21, (uint64_t)v68 + *(int *)(v69 + 24));
        return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v68, 0, 1, v69);
      }
  }
}

unsigned char *sub_1BFF82828(uint64_t a1, unint64_t a2)
{
  unint64_t v102 = a2;
  uint64_t v148 = (unsigned char *)a1;
  uint64_t v98 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v98);
  unint64_t v99 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatOptionsNodeStatementContext();
  unint64_t v100 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v100 + 64);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (uint64_t *)((char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v101 = (uint64_t)&v92 - v14;
  uint64_t v15 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v92 - v19;
  sub_1C086A198(v2, (uint64_t)v138);
  switch((2 * v140) | ((v139 & 8) != 0))
  {
    case 1:
      v139 &= ~8u;
      char v29 = v138[0];
      uint64_t v24 = v148;
      uint64_t v30 = v103;
      sub_1C027E3E0();
      if (!v30)
      {
        long long v120 = v129;
        v121[0] = v130[0];
        *(_OWORD *)((char *)v121 + 9) = *(_OWORD *)((char *)v130 + 9);
        long long v116 = v125;
        long long v117 = v126;
        long long v118 = v127;
        long long v119 = v128;
        unsigned long long v114 = v123;
        long long v115 = v124;
        long long v110 = v129;
        v111[0] = v130[0];
        *(_OWORD *)((char *)v111 + 9) = *(_OWORD *)((char *)v130 + 9);
        long long v106 = v125;
        long long v107 = v126;
        long long v108 = v127;
        long long v109 = v128;
        char v113 = v29;
        unsigned long long v104 = v123;
        long long v105 = v124;
        uint64_t v24 = (unsigned char *)sub_1C0D77FA4(&v104);
        sub_1C01880A4((uint64_t)&v114);
      }
      break;
    case 2:
      v139 &= ~8u;
      sub_1C022425C((uint64_t)v138, (uint64_t)v143);
      uint64_t v24 = v143;
      uint64_t v31 = v103;
      uint64_t v32 = sub_1C10BF020((uint64_t)v148, v102);
      if (!v31) {
        uint64_t v24 = (unsigned char *)v32;
      }
      break;
    case 3:
    case 4:
      v139 &= ~8u;
      uint64_t v21 = v138[2];
      unint64_t v22 = v138[1];
      uint64_t v23 = v138[0];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C10C08B8(v2, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF2A99C);
      uint64_t v24 = (unsigned char *)sub_1C0023CC4((uint64_t)v148, v23, v22, v21, v23, v22, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 5:
      v139 &= ~8u;
      sub_1C10C0AA0((uint64_t)v138, (uint64_t)&v142);
      uint64_t v24 = v148;
      uint64_t v33 = v103;
      sub_1BFF835C4();
      if (!v33)
      {
        sub_1C10C0AA0((uint64_t)&v142, (uint64_t)&v123);
        uint64_t v24 = (unsigned char *)FormatAudioTrackBinding.Text.text(from:)((uint64_t)v17);
        uint64_t v34 = type metadata accessor for FeedHeadline;
        goto LABEL_33;
      }
      break;
    case 6:
      v139 &= ~8u;
      char v35 = v138[0];
      uint64_t v24 = v148;
      uint64_t v36 = v103;
      sub_1C027E464((uint64_t)&v123);
      if (!v36)
      {
        uint64_t v37 = v101;
        sub_1BFF834FC((uint64_t)v24, v101);
        unint64_t v38 = (*(unsigned __int8 *)(v100 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
        uint64_t v39 = swift_allocObject();
        sub_1BFF83560(v37, v39 + v38);
        LOBYTE(v114) = v35;
        uint64_t v40 = (void *)v124;
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = sub_1C10C0B30;
        *(void *)(v41 + 24) = v39;
        uint64_t ObjectType = swift_getObjectType();
        swift_retain();
        uint64_t v24 = (unsigned char *)sub_1BFFDCA34(v40, (void (*)(uint64_t))sub_1C10C0BAC, v41, &v114, ObjectType);
        swift_release();
        swift_release();
        sub_1BFEA4290((uint64_t)&v123);
      }
      break;
    case 7:
      v139 &= ~8u;
      sub_1C10C0A04((uint64_t)v138, (uint64_t)&v144);
      uint64_t v24 = v148;
      uint64_t v43 = v103;
      sub_1C027E600();
      if (!v43)
      {
        sub_1C10C0A04((uint64_t)&v144, (uint64_t)&v123);
        uint64_t v24 = (unsigned char *)FormatWebEmbedBinding.Text.text(from:)((uint64_t)v9);
        sub_1BFF4F410((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      }
      break;
    case 8:
      v139 &= ~8u;
      sub_1C0224024((uint64_t)v138, (uint64_t)v145);
      uint64_t v24 = v148;
      uint64_t v44 = v103;
      sub_1C027E5D4();
      if (!v44)
      {
        sub_1C0224024((uint64_t)v145, (uint64_t)&v114);
        uint64_t v45 = v101;
        sub_1BFF834FC((uint64_t)v24, v101);
        unint64_t v46 = (*(unsigned __int8 *)(v100 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
        uint64_t v47 = swift_allocObject();
        sub_1BFF83560(v45, v47 + v46);
        uint64_t v24 = (unsigned char *)FormatPuzzleBinding.Text.text(from:computedContext:selectors:)((uint64_t)&v123, v102, (uint64_t (*)(void))sub_1C10C0B30, v47);
        swift_release();
        sub_1C01F0A74((uint64_t)&v123);
      }
      break;
    case 9:
      v139 &= ~8u;
      sub_1C10C09A8((uint64_t)v138, (uint64_t)v146);
      uint64_t v24 = v148;
      uint64_t v48 = v103;
      sub_1C027E40C();
      uint64_t v103 = v48;
      if (!v48)
      {
        unint64_t v100 = *((void *)&v123 + 1);
        uint64_t v101 = v123;
        LODWORD(v99) = v124;
        uint64_t v62 = *((void *)&v124 + 1);
        long long v63 = v125;
        long long v64 = v126;
        sub_1C10C09A8((uint64_t)v146, (uint64_t)&v104);
        *(void *)&unsigned long long v114 = v101;
        *((void *)&v114 + 1) = v100;
        LOBYTE(v115) = (_BYTE)v99;
        unint64_t v100 = v63;
        uint64_t v101 = v62;
        *((void *)&v115 + 1) = v62;
        long long v116 = v63;
        long long v117 = v64;
        unint64_t v99 = (char *)*((void *)&v64 + 1);
        sub_1BFF834FC((uint64_t)v24, (uint64_t)v12);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v66 = *v12;
        unint64_t v102 = v64;
        if (EnumCaseMultiPayload == 1)
        {
          sub_1BFF81F7C();
          uint64_t v92 = (char *)v12 + *(int *)(v67 + 48);
          LODWORD(v148) = *(unsigned __int8 *)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
          int v94 = *(unsigned __int8 *)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
          uint64_t v68 = *(void *)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
          uint64_t v93 = *(void *)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
          uint64_t v69 = *(void *)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 24);
          uint64_t v70 = *(void *)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
          uint64_t v71 = *(void **)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
          uint64_t v73 = *(void *)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
          uint64_t v72 = *(void *)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
          uint64_t v74 = *(void *)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
          uint64_t v95 = *(void *)(v66 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
          swift_bridgeObjectRetain();
          uint64_t v75 = v68;
          swift_bridgeObjectRetain();
          uint64_t v76 = v70;
          uint64_t v77 = v70;
          uint64_t v97 = v73;
          uint64_t v98 = (uint64_t)v71;
          uint64_t v96 = v72;
          uint64_t v78 = v74;
          sub_1BFF1E730(v77, v71);
          swift_release();
          sub_1BFF81FF0();
          (*(void (**)(char *, uint64_t))(*(void *)(v79 - 8) + 8))(v92, v79);
        }
        else
        {
          swift_release();
          LODWORD(v148) = *(unsigned __int8 *)(v66 + 48);
          int v94 = *(unsigned __int8 *)(v66 + 49);
          uint64_t v83 = *(void *)(v66 + 64);
          uint64_t v93 = *(void *)(v66 + 56);
          uint64_t v69 = *(void *)(v66 + 72);
          uint64_t v84 = *(void *)(v66 + 88);
          uint64_t v85 = *(void **)(v66 + 96);
          uint64_t v87 = *(void *)(v66 + 104);
          uint64_t v86 = *(void *)(v66 + 112);
          uint64_t v88 = *(void *)(v66 + 120);
          uint64_t v95 = *(void *)(v66 + 80);
          swift_bridgeObjectRetain();
          uint64_t v75 = v83;
          swift_bridgeObjectRetain();
          uint64_t v76 = v84;
          uint64_t v89 = v84;
          uint64_t v97 = v87;
          uint64_t v98 = (uint64_t)v85;
          uint64_t v96 = v86;
          uint64_t v78 = v88;
          sub_1BFF1E730(v89, v85);
          swift_release();
        }
        LOBYTE(v123) = (_BYTE)v148;
        BYTE1(v123) = v94;
        *((void *)&v123 + 1) = v93;
        *(void *)&long long v124 = v75;
        *((void *)&v124 + 1) = v69;
        *(void *)&long long v125 = v95;
        *((void *)&v125 + 1) = v76;
        unint64_t v90 = (void *)v98;
        *(void *)&long long v126 = v98;
        *((void *)&v126 + 1) = v97;
        *(void *)&long long v127 = v96;
        uint64_t v148 = (unsigned char *)v78;
        *((void *)&v127 + 1) = v78;
        uint64_t v24 = (unsigned char *)FormatPuzzleTypeBinding.Text.text(from:config:)((uint64_t)&v114, (uint64_t)&v123);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFF1EAA0(v76, v90);
        sub_1BFEEFC20(v101, v100);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 10:
      v139 &= ~8u;
      char v49 = v138[0];
      uint64_t v24 = v148;
      uint64_t v50 = v103;
      sub_1C027E684();
      if (!v50)
      {
        LOBYTE(v123) = v49;
        uint64_t v24 = (unsigned char *)FormatPuzzleStatisticBinding.Text.text(from:)((uint64_t)v6);
        sub_1BFF4F410((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      }
      break;
    case 11:
      v139 &= ~8u;
      char v51 = v138[0];
      uint64_t v17 = v99;
      uint64_t v24 = v148;
      uint64_t v52 = v103;
      sub_1C027E62C();
      if (!v52)
      {
        if (v51) {
          uint64_t v53 = &v17[*(int *)(v98 + 20) + 16];
        }
        else {
          uint64_t v53 = v17;
        }
        uint64_t v24 = *(unsigned char **)v53;
        swift_bridgeObjectRetain();
        uint64_t v34 = (uint64_t (*)(void))type metadata accessor for FeedCustomItem;
LABEL_33:
        sub_1BFF4F410((uint64_t)v17, v34);
      }
      break;
    case 12:
      v139 &= ~8u;
      sub_1C10C094C((uint64_t)v138, (uint64_t)v147);
      uint64_t v24 = v148;
      uint64_t v54 = v103;
      sub_1C027E438();
      if (!v54)
      {
        unint64_t v56 = *((void *)&v123 + 1);
        unint64_t v55 = v123;
        long long v57 = v124;
        char v58 = v125;
        sub_1C10C094C((uint64_t)v147, (uint64_t)&v114);
        unsigned long long v123 = __PAIR128__(v56, v55);
        long long v124 = v57;
        LOBYTE(v125) = v58;
        sub_1C09FE810((uint64_t)&v123);
        uint64_t v24 = v91;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 13:
      v139 &= ~8u;
      char v59 = v138[0];
      uint64_t v24 = v148;
      uint64_t v60 = v103;
      sub_1C027E658();
      if (!v60)
      {
        v121[5] = v134;
        v121[6] = v135;
        v121[7] = v136;
        v121[1] = v130[1];
        uint64_t v121[2] = v131;
        v121[3] = v132;
        v121[4] = v133;
        long long v118 = v127;
        long long v119 = v128;
        long long v120 = v129;
        v121[0] = v130[0];
        unsigned long long v114 = v123;
        long long v115 = v124;
        long long v116 = v125;
        long long v117 = v126;
        v111[5] = v134;
        v111[6] = v135;
        v111[7] = v136;
        v111[1] = v130[1];
        v111[2] = v131;
        v111[3] = v132;
        v111[4] = v133;
        long long v108 = v127;
        long long v109 = v128;
        long long v110 = v129;
        v111[0] = v130[0];
        unsigned long long v104 = v123;
        long long v105 = v124;
        uint64_t v122 = v137;
        char v113 = v59;
        uint64_t v112 = v137;
        long long v106 = v125;
        long long v107 = v126;
        uint64_t v80 = v101;
        sub_1BFF834FC((uint64_t)v24, v101);
        unint64_t v81 = (*(unsigned __int8 *)(v100 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
        uint64_t v82 = swift_allocObject();
        sub_1BFF83560(v80, v82 + v81);
        uint64_t v24 = (unsigned char *)FormatPaywallBinding.Text.text(from:selectors:)((uint64_t)&v104, (void (*)(uint64_t))sub_1C10C0B30);
        swift_release();
        sub_1C01F0AC8((uint64_t)&v114);
      }
      break;
    default:
      v139 &= ~8u;
      sub_1C0223E44((uint64_t)v138, (uint64_t)v141);
      uint64_t v24 = v148;
      uint64_t v25 = v103;
      sub_1BFF835C4();
      if (!v25)
      {
        sub_1C0223E44((uint64_t)v141, (uint64_t)&v123);
        uint64_t v26 = v101;
        sub_1BFF834FC((uint64_t)v24, v101);
        unint64_t v27 = (*(unsigned __int8 *)(v100 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80);
        uint64_t v28 = swift_allocObject();
        sub_1BFF83560(v26, v28 + v27);
        uint64_t v24 = (unsigned char *)FormatHeadlineBinding.Text.text(from:computedContext:selectors:)((uint64_t)v20, v102, (uint64_t (*)(uint64_t))sub_1C10C0B30, v28);
        swift_release();
        sub_1BFF4F410((uint64_t)v20, type metadata accessor for FeedHeadline);
      }
      break;
  }
  return v24;
}

uint64_t sub_1BFF834FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatOptionsNodeStatementContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFF83560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatOptionsNodeStatementContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFF835C4()
{
  return sub_1BFF835F0((void (*)(void, void))sub_1BFF23670);
}

uint64_t sub_1BFF835F0(void (*a1)(void, void))
{
  uint64_t v3 = type metadata accessor for FormatOptionsNodeStatementContext();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0282524(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementContext);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = *v5;
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BFF81F7C();
    uint64_t v9 = (char *)v5 + *(int *)(v8 + 48);
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8));
    swift_release();
    sub_1BFF81FF0();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
    a1(*(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack), *(void *)(v7 + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_bindingStack + 8));
    return swift_release();
  }
}

uint64_t sub_1BFF8376C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a1;
  sub_1BFF83A38(0, (unint64_t *)&qword_1EB888338, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue.CaseValue);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v24 - v9);
  sub_1BFF83A38(0, (unint64_t *)&qword_1EB888340, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue.DefaultValue);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = *v3;
  uint64_t v15 = *(void *)(*v3 + 16);
  if (v15)
  {
    uint64_t v25 = (char *)&v24 - v12;
    uint64_t v26 = v7;
    unint64_t v27 = v3;
    uint64_t v28 = v14;
    uint64_t v29 = a3;
    uint64_t v16 = v14 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v17 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1BFF83AD4(v16, (uint64_t)v10, (unint64_t *)&qword_1EB888338, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue.CaseValue);
      uint64_t v31 = *v10;
      uint64_t v18 = swift_retain();
      uint64_t v19 = sub_1BFF273E0(v18);
      char v21 = (v20 & 1) != 0
          ? ((uint64_t (*)(uint64_t, uint64_t))v19)(a2, v30)
          : ((uint64_t (*)(uint64_t))v19)(a2);
      sub_1BFF27F20();
      swift_release();
      if (v21) {
        break;
      }
      sub_1BFF83BD4((uint64_t)v10);
      v16 += v17;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        a3 = v29;
        uint64_t v3 = v27;
        uint64_t v13 = v25;
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    sub_1BFF83D94((uint64_t)v10 + *(int *)(v26 + 36), v29, (uint64_t (*)(void))type metadata accessor for FormatOptionsNodeStatementValue);
    return sub_1BFF83BD4((uint64_t)v10);
  }
  else
  {
LABEL_9:
    sub_1BFF83A38(0, (unint64_t *)&qword_1EB888350, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BFF83AD4((uint64_t)v3 + *(int *)(v22 + 36), (uint64_t)v13, (unint64_t *)&qword_1EB888340, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue.DefaultValue);
    return sub_1C001A628((uint64_t)v13, a3);
  }
}

void sub_1BFF83A38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for FormatOptionsNodeStatementValue();
    uint64_t v7 = sub_1BFFBA9AC(&qword_1EB88E110, (void (*)(uint64_t))type metadata accessor for FormatOptionsNodeStatementValue);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFF83AD4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_1BFF83A38(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void *sub_1BFF83B40(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  swift_retain();
  v5(v7, v8, v4);
  return a1;
}

uint64_t sub_1BFF83BD4(uint64_t a1)
{
  sub_1BFF83A38(0, (unint64_t *)&qword_1EB888338, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue.CaseValue);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFF83C4C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  return v5(v6);
}

uint64_t sub_1BFF83CC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF83D2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFF83D94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *initializeWithCopy for FormatItemNodeAction(uint64_t *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for FormatCommandOpenURL();
    int v12 = swift_getEnumCaseMultiPayload();
    if (v12 == 2)
    {
      uint64_t v14 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v14;
      a1[2] = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v12 == 1)
      {
        uint64_t v13 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v13;
        a1[2] = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v15 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)a1 + *(int *)(v16 + 20)) = *(void *)&a2[*(int *)(v16 + 20)];
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *((void *)a2 + 1);
    uint64_t v9 = *((void *)a2 + 2);
    char v10 = a2[25];
    unsigned int v11 = a2[24];
    sub_1C099B634(v7, v8, v9, v11, v10, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(void))sub_1C00AB56C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB94C);
    *a1 = v7;
    a1[1] = v8;
    a1[2] = v9;
    *((unsigned char *)a1 + 24) = v11;
    *((unsigned char *)a1 + 25) = v10;
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatSize(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_1BFF35EA4(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1BFF8401C(unint64_t result, unint64_t a2)
{
  if ((result & 0xFE) != 0xC) {
    return sub_1BFF58F10(a2);
  }
  return result;
}

void sub_1BFF84034()
{
  if (!qword_1EB88A2D0)
  {
    sub_1BFFF4C64(255, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88A2D0);
    }
  }
}

uint64_t sub_1BFF840B8(uint64_t a1)
{
  return sub_1BFF840C4(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_1BFF840C4(uint64_t a1, uint64_t a2, char a3)
{
  type metadata accessor for GroupLayoutContext();
  uint64_t v6 = sub_1C151754C();
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = MEMORY[0x1E4FBC860];
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = v8;
  uint64_t v9 = v7 | 0x4000000000000000;
  v14[1] = v7 | 0x4000000000000000;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = v8;
  v14[0] = v10 | 0x4000000000000000;
  sub_1BFF2A084(v14, *(void *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory), 0, 0xE000000000000000);
  swift_release();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = v8;
  char v12 = sub_1BFF26488(v9, v11 | 0x4000000000000000, a3);
  swift_release();
  swift_release();
  return v12 & 1;
}

uint64_t destroy for FormatItemNodeAction(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    type metadata accessor for FormatCommandOpenURL();
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2 || result == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v3 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for FormatAbsoluteURL();
    }
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    return sub_1C099B634(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(unsigned char *)(a1 + 25), (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(void))sub_1C002B840, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1BFDEB9E0);
  }
  return result;
}

void sub_1BFF84328(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(unint64_t *, uint64_t))
{
  uint64_t v9 = a2;
  sub_1BFF8449C(a1, a2);
  if (!v6)
  {
    uint64_t v11 = *(void *)(a4 + 16);
    if (v11)
    {
      uint64_t v16 = v9;
      uint64_t v17 = a6;
      swift_bridgeObjectRetain();
      uint64_t v12 = a4 + 56;
      do
      {
        uint64_t v14 = *(void *)(v12 - 24);
        uint64_t v13 = *(void *)(v12 - 16);
        char v15 = *(unsigned char *)(v12 - 8);
        sub_1BFF5B7E0(v14, v13, v15);
        swift_retain();
        v17(a1, v16);
        v12 += 32;
        sub_1BFF5B7CC(v14, v13, v15);
        swift_release();
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      a6 = v17;
      uint64_t v9 = v16;
    }
    a6(a1, v9);
  }
}

void sub_1BFF8449C(unint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 9);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v15 = *(void *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 88);
  uint64_t v16 = *(void *)(a2 + 96);
  uint64_t v17 = *v2;
  uint64_t v18 = v2[1];
  unsigned int v19 = *((unsigned __int8 *)v2 + 24);
  uint64_t v20 = ((4 * *((unsigned char *)v2 + 25)) | (*((unsigned char *)v2 + 24) >> 2) & 3);
  uint64_t v21 = v2[2];
  switch(v20)
  {
    case 1:
    case 2:
    case 4:
    case 5:
    case 7:
    case 8:
      return;
    case 3:
      goto LABEL_5;
    case 6:
      if (v19 >> 6 > 1)
      {
        if ((v19 & 0x33333333) == 1 && (v18 & 0xF000000000000007) != 0xF000000000000007) {
          goto LABEL_7;
        }
      }
      else
      {
LABEL_5:
        if (v21 == 1 && (v17 & 0xF000000000000007) != 0xF000000000000007)
        {
LABEL_7:
          uint64_t v22 = v3;
          char v23 = v4;
          char v24 = v5;
          uint64_t v25 = v7;
          uint64_t v26 = v6;
          uint64_t v27 = v8;
          uint64_t v28 = v9;
          uint64_t v29 = v11;
          uint64_t v30 = v10;
          uint64_t v31 = v13;
          uint64_t v32 = v12;
          uint64_t v33 = v15;
          uint64_t v34 = v14;
          uint64_t v35 = v16;
          sub_1BFE2F328(a1, (uint64_t)&v22);
        }
      }
      return;
    default:
      uint64_t v22 = v3;
      char v23 = v4;
      char v24 = v5;
      uint64_t v25 = v7;
      uint64_t v26 = v6;
      uint64_t v27 = v8;
      uint64_t v28 = v9;
      uint64_t v29 = v11;
      uint64_t v30 = v10;
      uint64_t v31 = v13;
      uint64_t v32 = v12;
      uint64_t v33 = v15;
      uint64_t v34 = v14;
      uint64_t v35 = v16;
      sub_1BFF8C744(a1, &v22);
      return;
  }
}

uint64_t sub_1BFF845F0(uint64_t result, long long *a2, uint64_t a3)
{
  uint64_t v43 = result;
  uint64_t v41 = *(void *)(a3 + 16);
  if (v41)
  {
    uint64_t v42 = a3 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
LABEL_5:
    uint64_t v6 = (long long *)(v42 + 184 * v5);
    long long v7 = v6[9];
    long long v59 = v6[8];
    long long v60 = v7;
    long long v61 = v6[10];
    unsigned __int8 v62 = *((unsigned char *)v6 + 176);
    long long v8 = v6[5];
    long long v55 = v6[4];
    long long v56 = v8;
    long long v9 = v6[7];
    long long v57 = v6[6];
    long long v58 = v9;
    long long v10 = v6[1];
    long long v51 = *v6;
    long long v52 = v10;
    long long v11 = v6[3];
    long long v53 = v6[2];
    long long v54 = v11;
    uint64_t v12 = v52;
    switch((char)v56)
    {
      case 1:
        if (!v3) {
          goto LABEL_14;
        }
        return swift_bridgeObjectRelease();
      case 2:
        uint64_t v13 = *(void *)(v52 + 16);
        if (!v13) {
          goto LABEL_14;
        }
        sub_1C05DC6FC((uint64_t)&v51);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v13; ++i)
        {
          uint64_t v63 = *(void *)(v12 + 8 * i + 32);
          long long v15 = a2[5];
          long long v48 = a2[4];
          long long v49 = v15;
          uint64_t v50 = *((void *)a2 + 12);
          long long v16 = a2[1];
          long long v44 = *a2;
          long long v45 = v16;
          long long v17 = a2[3];
          long long v46 = a2[2];
          long long v47 = v17;
          swift_retain();
          sub_1BFF79540(v43, (uint64_t)&v44);
          if (v3)
          {
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_27;
          }
          swift_release();
        }
        swift_bridgeObjectRelease();
        uint64_t v18 = *((void *)&v56 + 1);
        if (*((void *)&v56 + 1)) {
          goto LABEL_17;
        }
        goto LABEL_22;
      case 3:
        uint64_t v19 = *((void *)&v54 + 1);
        long long v39 = v55;
        uint64_t v20 = v5;
        uint64_t v22 = *((void *)&v53 + 1);
        uint64_t v21 = v54;
        uint64_t v24 = *((void *)&v52 + 1);
        char v23 = v53;
        sub_1C05DC6FC((uint64_t)&v51);
        uint64_t v25 = v22;
        uint64_t v5 = v20;
        sub_1BFFE54B8(v12, v24, v23, v25, v21, v19, v39, *((uint64_t *)&v39 + 1), 3u);
        uint64_t v18 = *((void *)&v56 + 1);
        if (*((void *)&v56 + 1)) {
          goto LABEL_17;
        }
        goto LABEL_22;
      default:
LABEL_14:
        sub_1C05DC6FC((uint64_t)&v51);
        uint64_t v18 = *((void *)&v56 + 1);
        if (!*((void *)&v56 + 1)) {
          goto LABEL_22;
        }
LABEL_17:
        uint64_t v26 = *(void *)(v18 + 16);
        if (!v26) {
          goto LABEL_22;
        }
        uint64_t v27 = swift_bridgeObjectRetain() + 64;
        break;
    }
    while (1)
    {
      uint64_t v63 = *(void *)(v27 - 24);
      long long v28 = a2[5];
      long long v48 = a2[4];
      long long v49 = v28;
      uint64_t v50 = *((void *)a2 + 12);
      long long v29 = a2[1];
      long long v44 = *a2;
      long long v45 = v29;
      long long v30 = a2[3];
      long long v46 = a2[2];
      long long v47 = v30;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BFF79540(v43, (uint64_t)&v44);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      v27 += 40;
      if (!--v26)
      {
        swift_bridgeObjectRelease();
LABEL_22:
        unsigned __int8 v31 = v62;
        if (v62 == 254)
        {
          sub_1C05DC7FC((uint64_t)&v51);
        }
        else
        {
          long long v38 = v61;
          long long v40 = v60;
          long long v32 = v59;
          long long v33 = v58;
          long long v34 = v57;
          uint64_t v63 = v59;
          long long v35 = a2[5];
          long long v48 = a2[4];
          long long v49 = v35;
          uint64_t v50 = *((void *)a2 + 12);
          long long v36 = a2[1];
          long long v44 = *a2;
          long long v45 = v36;
          long long v37 = a2[3];
          long long v46 = a2[2];
          long long v47 = v37;
          swift_retain();
          sub_1BFF79540(v43, (uint64_t)&v44);
          sub_1BFEF8738(v34, *((uint64_t *)&v34 + 1), v33, *((uint64_t *)&v33 + 1), v32, *((uint64_t *)&v32 + 1), v40, *((uint64_t *)&v40 + 1), v38, *((uint64_t *)&v38 + 1), v31);
          sub_1C05DC7FC((uint64_t)&v51);
          if (v3) {
            return swift_bridgeObjectRelease();
          }
        }
        if (++v5 == v41) {
          return swift_bridgeObjectRelease();
        }
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
LABEL_27:
    sub_1C05DC7FC((uint64_t)&v51);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for HeadlineViewLayout.Options(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB8762A8);
}

void destroy for HeadlineViewLayout.Options(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C1517A7C();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  long long v7 = *(void **)(a1 + *(int *)(a2 + 28));
}

uint64_t destroy for FormatRemoteImage(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for FormatURL();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    sub_1BFD7418C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_8;
      }
      uint64_t v6 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_8:
  uint64_t v7 = a1 + a2[5];
  int v8 = swift_getEnumCaseMultiPayload();
  if (v8 == 2)
  {
    sub_1BFD7418C(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(unsigned char *)(v7 + 24));
  }
  else
  {
    if (v8 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v8) {
        goto LABEL_15;
      }
      uint64_t v9 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_15:
  uint64_t v10 = a1 + a2[6];
  int v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 2)
  {
    sub_1BFD7418C(*(void *)v10, *(void *)(v10 + 8), *(void *)(v10 + 16), *(unsigned char *)(v10 + 24));
  }
  else
  {
    if (v11 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v11) {
        goto LABEL_22;
      }
      uint64_t v12 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v10, v12);
      type metadata accessor for FormatAbsoluteURL();
    }
    swift_bridgeObjectRelease();
  }
LABEL_22:
  uint64_t v13 = a1 + a2[7];
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  if (!v14(v13, 1, v4))
  {
    int v27 = swift_getEnumCaseMultiPayload();
    switch(v27)
    {
      case 2:
        sub_1BFD7418C(*(void *)v13, *(void *)(v13 + 8), *(void *)(v13 + 16), *(unsigned char *)(v13 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v28 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v13, v28);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v15 = a1 + a2[8];
  if (!v14(v15, 1, v4))
  {
    int v29 = swift_getEnumCaseMultiPayload();
    switch(v29)
    {
      case 2:
        sub_1BFD7418C(*(void *)v15, *(void *)(v15 + 8), *(void *)(v15 + 16), *(unsigned char *)(v15 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v30 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v15, v30);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v16 = a1 + a2[9];
  if (!v14(v16, 1, v4))
  {
    int v31 = swift_getEnumCaseMultiPayload();
    switch(v31)
    {
      case 2:
        sub_1BFD7418C(*(void *)v16, *(void *)(v16 + 8), *(void *)(v16 + 16), *(unsigned char *)(v16 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v32 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v16, v32);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v17 = a1 + a2[10];
  if (!v14(v17, 1, v4))
  {
    int v33 = swift_getEnumCaseMultiPayload();
    switch(v33)
    {
      case 2:
        sub_1BFD7418C(*(void *)v17, *(void *)(v17 + 8), *(void *)(v17 + 16), *(unsigned char *)(v17 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v34 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v17, v34);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v18 = a1 + a2[11];
  if (!v14(v18, 1, v4))
  {
    int v35 = swift_getEnumCaseMultiPayload();
    switch(v35)
    {
      case 2:
        sub_1BFD7418C(*(void *)v18, *(void *)(v18 + 8), *(void *)(v18 + 16), *(unsigned char *)(v18 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v36 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v18, v36);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v19 = a1 + a2[12];
  if (!v14(v19, 1, v4))
  {
    int v37 = swift_getEnumCaseMultiPayload();
    switch(v37)
    {
      case 2:
        sub_1BFD7418C(*(void *)v19, *(void *)(v19 + 8), *(void *)(v19 + 16), *(unsigned char *)(v19 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v38 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v19, v38);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v20 = a1 + a2[13];
  if (!v14(v20, 1, v4))
  {
    int v39 = swift_getEnumCaseMultiPayload();
    switch(v39)
    {
      case 2:
        sub_1BFD7418C(*(void *)v20, *(void *)(v20 + 8), *(void *)(v20 + 16), *(unsigned char *)(v20 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v40 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v20, v40);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v21 = a1 + a2[14];
  if (!v14(v21, 1, v4))
  {
    int v41 = swift_getEnumCaseMultiPayload();
    switch(v41)
    {
      case 2:
        sub_1BFD7418C(*(void *)v21, *(void *)(v21 + 8), *(void *)(v21 + 16), *(unsigned char *)(v21 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v42 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v21, v42);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v22 = a1 + a2[15];
  if (!v14(v22, 1, v4))
  {
    int v43 = swift_getEnumCaseMultiPayload();
    switch(v43)
    {
      case 2:
        sub_1BFD7418C(*(void *)v22, *(void *)(v22 + 8), *(void *)(v22 + 16), *(unsigned char *)(v22 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v44 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v22, v44);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v23 = a1 + a2[16];
  if (!v14(v23, 1, v4))
  {
    int v45 = swift_getEnumCaseMultiPayload();
    switch(v45)
    {
      case 2:
        sub_1BFD7418C(*(void *)v23, *(void *)(v23 + 8), *(void *)(v23 + 16), *(unsigned char *)(v23 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v46 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v23, v46);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v24 = a1 + a2[17];
  if (!v14(v24, 1, v4))
  {
    int v47 = swift_getEnumCaseMultiPayload();
    switch(v47)
    {
      case 2:
        sub_1BFD7418C(*(void *)v24, *(void *)(v24 + 8), *(void *)(v24 + 16), *(unsigned char *)(v24 + 24));
        break;
      case 1:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0:
        uint64_t v48 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v24, v48);
        type metadata accessor for FormatAbsoluteURL();
        swift_bridgeObjectRelease();
        break;
    }
  }
  uint64_t v25 = a1 + a2[18];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v25, 1, v4);
  if (!result)
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v50 = *(void *)v25;
      uint64_t v51 = *(void *)(v25 + 8);
      uint64_t v52 = *(void *)(v25 + 16);
      char v53 = *(unsigned char *)(v25 + 24);
      return sub_1BFD7418C(v50, v51, v52, v53);
    }
    else
    {
      if (result == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (result) {
          return result;
        }
        uint64_t v49 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v25, v49);
        type metadata accessor for FormatAbsoluteURL();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t destroy for FormatResource(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for FormatURL();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      sub_1BFD7418C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_17;
        }
        uint64_t v4 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
        type metadata accessor for FormatAbsoluteURL();
      }
      swift_bridgeObjectRelease();
    }
LABEL_17:
    uint64_t v12 = (int *)type metadata accessor for FormatRemoteImage();
    uint64_t v13 = a1 + v12[5];
    int v14 = swift_getEnumCaseMultiPayload();
    if (v14 == 2)
    {
      sub_1BFD7418C(*(void *)v13, *(void *)(v13 + 8), *(void *)(v13 + 16), *(unsigned char *)(v13 + 24));
    }
    else
    {
      if (v14 == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v14) {
          goto LABEL_24;
        }
        uint64_t v15 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);
        type metadata accessor for FormatAbsoluteURL();
      }
      swift_bridgeObjectRelease();
    }
LABEL_24:
    uint64_t v16 = a1 + v12[6];
    int v17 = swift_getEnumCaseMultiPayload();
    if (v17 == 2)
    {
      sub_1BFD7418C(*(void *)v16, *(void *)(v16 + 8), *(void *)(v16 + 16), *(unsigned char *)(v16 + 24));
    }
    else
    {
      if (v17 == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v17) {
          goto LABEL_31;
        }
        uint64_t v18 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v16, v18);
        type metadata accessor for FormatAbsoluteURL();
      }
      swift_bridgeObjectRelease();
    }
LABEL_31:
    uint64_t v19 = a1 + v12[7];
    uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
    if (!v20(v19, 1, v2))
    {
      int v31 = swift_getEnumCaseMultiPayload();
      switch(v31)
      {
        case 2:
          sub_1BFD7418C(*(void *)v19, *(void *)(v19 + 8), *(void *)(v19 + 16), *(unsigned char *)(v19 + 24));
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v32 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v19, v32);
          type metadata accessor for FormatAbsoluteURL();
          swift_bridgeObjectRelease();
          break;
      }
    }
    uint64_t v21 = a1 + v12[8];
    if (!v20(v21, 1, v2))
    {
      int v33 = swift_getEnumCaseMultiPayload();
      switch(v33)
      {
        case 2:
          sub_1BFD7418C(*(void *)v21, *(void *)(v21 + 8), *(void *)(v21 + 16), *(unsigned char *)(v21 + 24));
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v34 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(v21, v34);
          type metadata accessor for FormatAbsoluteURL();
          swift_bridgeObjectRelease();
          break;
      }
    }
    uint64_t v22 = a1 + v12[9];
    if (!v20(v22, 1, v2))
    {
      int v35 = swift_getEnumCaseMultiPayload();
      switch(v35)
      {
        case 2:
          sub_1BFD7418C(*(void *)v22, *(void *)(v22 + 8), *(void *)(v22 + 16), *(unsigned char *)(v22 + 24));
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v36 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v22, v36);
          type metadata accessor for FormatAbsoluteURL();
          swift_bridgeObjectRelease();
          break;
      }
    }
    uint64_t v23 = a1 + v12[10];
    if (!v20(v23, 1, v2))
    {
      int v37 = swift_getEnumCaseMultiPayload();
      switch(v37)
      {
        case 2:
          sub_1BFD7418C(*(void *)v23, *(void *)(v23 + 8), *(void *)(v23 + 16), *(unsigned char *)(v23 + 24));
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v38 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v23, v38);
          type metadata accessor for FormatAbsoluteURL();
          swift_bridgeObjectRelease();
          break;
      }
    }
    uint64_t v24 = a1 + v12[11];
    if (!v20(v24, 1, v2))
    {
      int v39 = swift_getEnumCaseMultiPayload();
      switch(v39)
      {
        case 2:
          sub_1BFD7418C(*(void *)v24, *(void *)(v24 + 8), *(void *)(v24 + 16), *(unsigned char *)(v24 + 24));
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v40 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v24, v40);
          type metadata accessor for FormatAbsoluteURL();
          swift_bridgeObjectRelease();
          break;
      }
    }
    uint64_t v25 = a1 + v12[12];
    if (!v20(v25, 1, v2))
    {
      int v41 = swift_getEnumCaseMultiPayload();
      switch(v41)
      {
        case 2:
          sub_1BFD7418C(*(void *)v25, *(void *)(v25 + 8), *(void *)(v25 + 16), *(unsigned char *)(v25 + 24));
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v42 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v25, v42);
          type metadata accessor for FormatAbsoluteURL();
          swift_bridgeObjectRelease();
          break;
      }
    }
    uint64_t v26 = a1 + v12[13];
    if (!v20(v26, 1, v2))
    {
      int v43 = swift_getEnumCaseMultiPayload();
      switch(v43)
      {
        case 2:
          sub_1BFD7418C(*(void *)v26, *(void *)(v26 + 8), *(void *)(v26 + 16), *(unsigned char *)(v26 + 24));
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v44 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v26, v44);
          type metadata accessor for FormatAbsoluteURL();
          swift_bridgeObjectRelease();
          break;
      }
    }
    uint64_t v27 = a1 + v12[14];
    if (!v20(v27, 1, v2))
    {
      int v45 = swift_getEnumCaseMultiPayload();
      switch(v45)
      {
        case 2:
          sub_1BFD7418C(*(void *)v27, *(void *)(v27 + 8), *(void *)(v27 + 16), *(unsigned char *)(v27 + 24));
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v46 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(v27, v46);
          type metadata accessor for FormatAbsoluteURL();
          swift_bridgeObjectRelease();
          break;
      }
    }
    uint64_t v28 = a1 + v12[15];
    if (!v20(v28, 1, v2))
    {
      int v47 = swift_getEnumCaseMultiPayload();
      switch(v47)
      {
        case 2:
          sub_1BFD7418C(*(void *)v28, *(void *)(v28 + 8), *(void *)(v28 + 16), *(unsigned char *)(v28 + 24));
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v48 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v28, v48);
          type metadata accessor for FormatAbsoluteURL();
          swift_bridgeObjectRelease();
          break;
      }
    }
    uint64_t v29 = a1 + v12[16];
    if (!v20(v29, 1, v2))
    {
      int v49 = swift_getEnumCaseMultiPayload();
      switch(v49)
      {
        case 2:
          sub_1BFD7418C(*(void *)v29, *(void *)(v29 + 8), *(void *)(v29 + 16), *(unsigned char *)(v29 + 24));
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v50 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v29, v50);
          type metadata accessor for FormatAbsoluteURL();
          swift_bridgeObjectRelease();
          break;
      }
    }
    uint64_t v30 = a1 + v12[17];
    if (!v20(v30, 1, v2))
    {
      int v51 = swift_getEnumCaseMultiPayload();
      switch(v51)
      {
        case 2:
          sub_1BFD7418C(*(void *)v30, *(void *)(v30 + 8), *(void *)(v30 + 16), *(unsigned char *)(v30 + 24));
          break;
        case 1:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0:
          uint64_t v52 = sub_1C1515FDC();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v30, v52);
          type metadata accessor for FormatAbsoluteURL();
          swift_bridgeObjectRelease();
          break;
      }
    }
    uint64_t v10 = a1 + v12[18];
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(v10, 1, v2);
    if (result) {
      return result;
    }
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result != 2)
    {
      if (result == 1) {
        goto LABEL_90;
      }
      goto LABEL_12;
    }
    goto LABEL_94;
  }
  type metadata accessor for FormatFontResource(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = a1 + *(int *)(type metadata accessor for FormatRemoteFont() + 20);
    type metadata accessor for FormatURL();
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result != 2)
    {
      if (result == 1)
      {
LABEL_90:
        swift_bridgeObjectRelease();
LABEL_91:
        return swift_bridgeObjectRelease();
      }
LABEL_12:
      if (result) {
        return result;
      }
      uint64_t v11 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      type metadata accessor for FormatAbsoluteURL();
      goto LABEL_91;
    }
LABEL_94:
    uint64_t v53 = *(void *)v10;
    uint64_t v54 = *(void *)(v10 + 8);
    uint64_t v55 = *(void *)(v10 + 16);
    char v56 = *(unsigned char *)(v10 + 24);
    return sub_1BFD7418C(v53, v54, v55, v56);
  }
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  return sub_1BFF05CCC(v5, v6, v7, v8);
}

void sub_1BFF861A8()
{
  if (!qword_1EB880E10)
  {
    type metadata accessor for FormatVisibilityDataValue();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB880E10);
    }
  }
}

void sub_1BFF86210()
{
  if (!qword_1EB87C358)
  {
    type metadata accessor for FormatLayoutViewContainer();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C358);
    }
  }
}

BOOL sub_1BFF86278(uint64_t a1)
{
  return sub_1BFEDD2B8(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_1BFF86280@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v64 = a2;
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v63 = &v50[-v4];
  sub_1BFF8796C();
  uint64_t v6 = v5;
  uint64_t v61 = *((void *)v5 - 1);
  MEMORY[0x1F4188790](v5);
  char v8 = &v50[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C0BF07F0();
  uint64_t v10 = v9;
  uint64_t v62 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v50[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08E7290();
  sub_1BFF8784C(&qword_1EB8923B0, (void (*)(uint64_t))sub_1C08E7290);
  uint64_t v13 = v65;
  sub_1C1520EBC();
  int v14 = v13;
  if (v13)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v14);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  long long v60 = v8;
  uint64_t v65 = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v15 = sub_1C1520EAC();
  char v16 = Dictionary<>.errorOnUnknownKeys.getter(v15);
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t)v63;
  uint64_t v17 = v64;
  if (v16)
  {
    uint64_t v19 = sub_1C152070C();
    uint64_t v20 = *(void *)(v19 + 16);
    if (v20)
    {
      uint64_t v21 = (unsigned char *)(v19 + 48);
      while (*v21 != 1)
      {
        v21 += 24;
        if (!--v20) {
          goto LABEL_7;
        }
      }
      uint64_t v26 = *((void *)v21 - 2);
      uint64_t v27 = *((void *)v21 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v28 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v28);
      sub_1BFF71970(0, &qword_1EB88E978, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))_s10CodingKeysOMa_90);
      *(void *)&v50[-32] = v29;
      *(void *)&v50[-24] = sub_1C08E7344();
      *(void *)&v50[-16] = sub_1BFF86BD4();
      *(void *)&v50[-8] = sub_1C08E73C8();
      swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B86CF8);
      swift_release_n();
      sub_1C02570B4();
      int v14 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v26;
      *(void *)(v31 + 8) = v27;
      *(void *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C090B46C(v26, v27, 1);
      (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v70 = 0uLL;
  char v71 = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v24 = v23;
  uint64_t v59 = v22;
  long long v70 = xmmword_1C153AB20;
  char v71 = 0;
  uint64_t v25 = sub_1C152069C();
  uint64_t v33 = v32;
  uint64_t v58 = v25;
  long long v70 = xmmword_1C1557FA0;
  char v71 = 0;
  uint64_t v56 = sub_1C152069C();
  uint64_t v57 = v34;
  long long v70 = xmmword_1C1557FB0;
  char v71 = 0;
  uint64_t v54 = sub_1C152069C();
  uint64_t v55 = v35;
  long long v70 = xmmword_1C1557FD0;
  char v71 = 0;
  int v72 = sub_1C15206AC();
  long long v70 = xmmword_1C1557FC0;
  char v71 = 0;
  sub_1C152065C();
  uint64_t v53 = v33;
  long long v52 = xmmword_1C1557FE0;
  long long v70 = xmmword_1C1557FE0;
  char v71 = 0;
  char v37 = sub_1C152071C();
  if (v37)
  {
    long long v66 = v52;
    char v67 = 0;
    sub_1C15206EC();
    int v51 = v73;
  }
  else
  {
    int v51 = 0;
  }
  long long v52 = xmmword_1C1557FF0;
  long long v70 = xmmword_1C1557FF0;
  char v71 = 0;
  if (sub_1C152071C())
  {
    long long v66 = v52;
    char v67 = 0;
    sub_1BFF8784C(qword_1EB893208, (void (*)(uint64_t))sub_1BFF8796C);
    uint64_t v38 = (uint64_t)v65;
    sub_1C15206EC();
    *(void *)&long long v52 = v24;
    int v39 = v60;
    uint64_t v40 = sub_1C1517E5C();
    uint64_t v41 = v38;
    uint64_t v42 = v40;
    (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v39, v41);
  }
  else
  {
    *(void *)&long long v52 = v24;
    uint64_t v42 = MEMORY[0x1E4FBC870];
  }
  sub_1C1518CDC();
  long long v70 = xmmword_1C1558010;
  char v71 = 0;
  sub_1BFF8784C(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v62 + 8))(v12, v10);
  uint64_t v43 = v68;
  uint64_t v44 = v69;
  sub_1BFF71970(0, &qword_1EB88E9C0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  sub_1BFF883B8(v18, v17 + *(int *)(v45 + 64), (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  *(void *)(v17 + 72) = v43;
  *(void *)(v17 + 80) = v44;
  uint64_t v46 = v52;
  *(void *)uint64_t v17 = v59;
  *(void *)(v17 + 8) = v46;
  uint64_t v47 = v53;
  *(void *)(v17 + 16) = v58;
  *(void *)(v17 + 24) = v47;
  uint64_t v48 = v57;
  *(void *)(v17 + 32) = v56;
  *(void *)(v17 + 40) = v48;
  uint64_t v49 = v55;
  *(void *)(v17 + 48) = v54;
  *(void *)(v17 + 56) = v49;
  *(unsigned char *)(v17 + 64) = v72 & 1;
  *(unsigned char *)(v17 + 88) = v51;
  *(void *)(v17 + 96) = v42;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFF86BD4()
{
  unint64_t result = qword_1EB88E970;
  if (!qword_1EB88E970)
  {
    sub_1C08FC718(255, &qword_1EB88E978, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))_s10CodingKeysOMa_90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88E970);
  }
  return result;
}

uint64_t sub_1BFF86C58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  long long v66 = &v53[-v5];
  sub_1BFF8796C();
  uint64_t v68 = v6;
  uint64_t v65 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  char v8 = &v53[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BFE79B90(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v3);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v53[-v10];
  sub_1C0BF0884();
  uint64_t v13 = v12;
  uint64_t v67 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = &v53[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08E7698();
  sub_1BFF8784C(&qword_1EB892380, (void (*)(uint64_t))sub_1C08E7698);
  uint64_t v16 = (uint64_t)v70;
  sub_1C1520EBC();
  uint64_t v17 = (void *)v16;
  if (v16)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v17);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v64 = v8;
  uint64_t v18 = v68;
  long long v70 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v19 = sub_1C1520EAC();
  char v20 = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = v13;
  uint64_t v22 = v69;
  if (v20)
  {
    uint64_t v23 = sub_1C152070C();
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v25 = (unsigned char *)(v23 + 48);
      while (*v25 != 1)
      {
        v25 += 24;
        if (!--v24) {
          goto LABEL_7;
        }
      }
      uint64_t v30 = v15;
      uint64_t v32 = *((void *)v25 - 2);
      uint64_t v31 = *((void *)v25 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v33 = swift_bridgeObjectRelease();
      long long v70 = (unsigned char *)v21;
      MEMORY[0x1F4188790](v33);
      sub_1BFE7FBF4();
      *(void *)&v53[-32] = v34;
      *(void *)&v53[-24] = sub_1BFF8784C(&qword_1EB892A98, (void (*)(uint64_t))sub_1BFE7FBF4);
      *(void *)&v53[-16] = sub_1BFF8784C(&qword_1EB88E940, (void (*)(uint64_t))sub_1BFE7FBF4);
      *(void *)&v53[-8] = sub_1BFF8784C(&qword_1EB892A90, (void (*)(uint64_t))sub_1BFE7FBF4);
      swift_getKeyPath();
      swift_retain();
      uint64_t v35 = sub_1C085FB14((uint64_t)&unk_1F1B86D28);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v17 = (void *)swift_allocError();
      *(void *)uint64_t v36 = v32;
      *(void *)(v36 + 8) = v31;
      *(void *)(v36 + 16) = v35;
      *(_OWORD *)(v36 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C090B46C(v32, v31, 1);
      (*(void (**)(unsigned char *, unsigned char *))(v67 + 8))(v30, v70);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  long long v73 = 0uLL;
  char v74 = 0;
  uint64_t v26 = sub_1C152069C();
  uint64_t v28 = v27;
  uint64_t v63 = v26;
  long long v73 = xmmword_1C153AB20;
  char v74 = 0;
  uint64_t v29 = sub_1C152069C();
  uint64_t v38 = v37;
  uint64_t v62 = v29;
  long long v73 = xmmword_1C1557FA0;
  char v74 = 0;
  uint64_t v60 = sub_1C152069C();
  uint64_t v61 = v39;
  long long v73 = xmmword_1C1557FB0;
  char v74 = 0;
  uint64_t v58 = sub_1C152069C();
  uint64_t v59 = v40;
  long long v73 = xmmword_1C1557FD0;
  char v74 = 0;
  int v75 = sub_1C15206AC();
  uint64_t v57 = v38;
  sub_1C1515FDC();
  long long v73 = xmmword_1C1557FC0;
  char v74 = 0;
  sub_1BFF8784C((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
  sub_1C152065C();
  uint64_t v56 = v28;
  long long v55 = xmmword_1C1557FE0;
  long long v73 = xmmword_1C1557FE0;
  char v74 = 0;
  char v42 = sub_1C152071C();
  if (v42)
  {
    long long v71 = v55;
    char v72 = 0;
    sub_1C15206EC();
    int v54 = v76;
  }
  else
  {
    int v54 = 0;
  }
  long long v55 = xmmword_1C1557FF0;
  long long v73 = xmmword_1C1557FF0;
  char v74 = 0;
  if (sub_1C152071C())
  {
    long long v71 = v55;
    char v72 = 0;
    sub_1BFF8784C(qword_1EB893208, (void (*)(uint64_t))sub_1BFF8796C);
    uint64_t v43 = v18;
    sub_1C15206EC();
    uint64_t v44 = v64;
    uint64_t v45 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v65 + 8))(v44, v43);
  }
  else
  {
    uint64_t v45 = MEMORY[0x1E4FBC870];
  }
  sub_1C1518CDC();
  long long v73 = xmmword_1C1558010;
  char v74 = 0;
  sub_1BFF8784C(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  uint64_t v46 = (uint64_t)v66;
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v15, v21);
  sub_1BFF719C0();
  uint64_t v48 = v47;
  sub_1BFF883B8((uint64_t)v70, v22 + v47[13], (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  sub_1BFF883B8(v46, v22 + v48[16], (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  uint64_t v49 = v56;
  *(void *)uint64_t v22 = v63;
  *(void *)(v22 + 8) = v49;
  uint64_t v50 = v57;
  *(void *)(v22 + 16) = v62;
  *(void *)(v22 + 24) = v50;
  uint64_t v51 = v61;
  *(void *)(v22 + 32) = v60;
  *(void *)(v22 + 40) = v51;
  uint64_t v52 = v59;
  *(void *)(v22 + 48) = v58;
  *(void *)(v22 + 56) = v52;
  *(unsigned char *)(v22 + 64) = v75 & 1;
  *(unsigned char *)(v22 + v48[14]) = v54;
  *(void *)(v22 + v48[15]) = v45;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFF8772C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF87774(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF877BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF87804(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF8784C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF87894(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF878DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFF87924(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFF8796C()
{
  if (!qword_1EB884DF8)
  {
    sub_1C007C168();
    sub_1C007C264();
    sub_1C007C210();
    unint64_t v0 = sub_1C1517E6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884DF8);
    }
  }
}

void *sub_1BFF879F0(double *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v5 = *(unsigned __int8 *)(a2 + 8);
  type metadata accessor for FormatGroupLayoutFactory.Bound();
  sub_1C151765C();
  double v7 = v6;
  double v9 = v8;
  double v10 = a1[2];
  double v11 = a1[3];
  if (v5 >= 0x40) {
    char v12 = 7;
  }
  else {
    char v12 = 5;
  }
  if (v5 <= 0xFD) {
    char v13 = v12;
  }
  else {
    char v13 = 7;
  }
  double v15 = a1[4];
  double v14 = a1[5];
  uint64_t v16 = *((void *)a1 + 7);
  unint64_t v17 = *((void *)a1 + 11);
  uint64_t v26 = *((void *)a1 + 10);
  uint64_t v27 = *((void *)a1 + 6);
  uint64_t v18 = *((void *)a1 + 12);
  uint64_t v19 = *((void *)a1 + 13);
  uint64_t v20 = *((void *)a1 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1BFFC2FD8(v20, v7, v9);
  uint64_t v30 = *((void *)a1 + 15);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890098, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, MEMORY[0x1E4FBB320]);
  sub_1BFF87C24();
  unint64_t v22 = sub_1C151E92C();
  uint64_t v29 = a3;
  uint64_t v23 = sub_1BFF87CAC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C12AD4E8, (uint64_t)v28, v22);
  swift_bridgeObjectRelease();
  sub_1BFF887CC(0, &qword_1EB88C238, MEMORY[0x1E4FBC848] + 8, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
  swift_allocObject();
  uint64_t v24 = sub_1C12AA95C(v27, v16, v26, v17, v18, v19, v10, v11, v15, v14, v7, v9, v21, v23, v13);
  swift_bridgeObjectRelease();
  return v24;
}

unint64_t sub_1BFF87C24()
{
  unint64_t result = qword_1EB8900A0;
  if (!qword_1EB8900A0)
  {
    sub_1C12A7FB8(255, (unint64_t *)&qword_1EB890098, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8900A0);
  }
  return result;
}

uint64_t sub_1BFF87CAC(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (a3 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C15204BC();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v7 = i - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = MEMORY[0x1C18C7CB0](i - 4, a3);
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(a3 + 8 * i);
          swift_retain();
          uint64_t v9 = i - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        uint64_t v14 = v8;
        a1(&v13, &v14);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        uint64_t v10 = swift_release();
        if (v13)
        {
          MEMORY[0x1C18C66D0](v10);
          if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
        }
        if (v9 == v5)
        {
          swift_bridgeObjectRelease();
          return v15;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1BFF87E60@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BFF87E7C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1BFF87E7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v36 = a3;
  sub_1BFF8845C();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v35 = (void *)((char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v34 - v13;
  uint64_t v15 = *a1;
  uint64_t v16 = *(void *)(a2 + *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 40));
  uint64_t v17 = *(void *)(v15 + 16);
  uint64_t v18 = *(void *)(v15 + 24);
  swift_beginAccess();
  uint64_t v19 = *(void *)(v16 + 24);
  if (*(void *)(v19 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1BFEF2D8C(v17, v18);
    if (v21)
    {
      unint64_t v22 = v20;
      v34[0] = v7;
      uint64_t v23 = *(void *)(v19 + 56);
      uint64_t v24 = type metadata accessor for FormatNodeStateData.Data();
      uint64_t v25 = *(void *)(v24 - 8);
      v34[1] = v3;
      uint64_t v26 = v25;
      uint64_t v27 = v23 + *(void *)(v25 + 72) * v22;
      uint64_t v7 = v34[0];
      sub_1BFF1B214(v27, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v14, 0, 1, v24);
    }
    else
    {
      uint64_t v24 = type metadata accessor for FormatNodeStateData.Data();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 1, 1, v24);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = type metadata accessor for FormatNodeStateData.Data();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v14, 1, 1, v24);
  }
  swift_endAccess();
  int v28 = *(unsigned __int8 *)(v15 + 32);
  uint64_t v29 = (uint64_t)&v9[*(int *)(v7 + 48)];
  *uint64_t v9 = v28;
  sub_1BFFA1234((uint64_t)v14, v29, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
  type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v29, 1, v24) == 1)
  {
    if ((v28 - 18) >= 6)
    {
      type metadata accessor for FormatDataAccessibilityValue();
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = v15;
      *(void *)(v30 + 24) = 0xF000000000000007;
LABEL_12:
      *uint64_t v36 = v30;
      swift_retain();
      return sub_1C12AD324(v29, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    }
  }
  else
  {
    uint64_t v31 = v35;
    sub_1BFF235F0(v29, (uint64_t)v35, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      uint64_t v32 = *v31;
      type metadata accessor for FormatDataAccessibilityValue();
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = v15;
      *(void *)(v30 + 24) = v32;
      goto LABEL_12;
    }
    sub_1BFF1BA48((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
  }
  *uint64_t v36 = 0;
  return sub_1BFF1BA48((uint64_t)v9, (uint64_t (*)(void))sub_1BFF8845C);
}

uint64_t sub_1BFF882CC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFF2E4B8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFF8834C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFE85638(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFF883B8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFE79B90(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t type metadata accessor for FormatDataAccessibilityValue()
{
  return self;
}

void sub_1BFF8845C()
{
  if (!qword_1EB884AF8)
  {
    sub_1C12A7FB8(255, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB884AF8);
    }
  }
}

unint64_t sub_1BFF884F4@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  if (((result >> 59) & 0x1E | (result >> 2) & 1) == 2)
  {
    long long v11 = *(_OWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x30);
    long long v33 = *(_OWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x20);
    long long v34 = v11;
    long long v12 = *(_OWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x50);
    long long v35 = *(_OWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x40);
    long long v36 = v12;
    long long v32 = *(_OWORD *)((result & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    sub_1BFF8890C((uint64_t)&v32);
    sub_1BFF8897C((uint64_t)&v32, a2, a3, a4, a5, (uint64_t)&v29);
    long long v22 = v30;
    long long v23 = v29;
    uint64_t v13 = v31;
    uint64_t v14 = (double *)v32;
    sub_1BFF8874C((uint64_t)&v35, (uint64_t)v37, &qword_1EB878AF0, (uint64_t)&type metadata for FormatNodeAccessibilityRole);
    sub_1BFF8874C((uint64_t)v37, (uint64_t)&v29, &qword_1EB878AF0, (uint64_t)&type metadata for FormatNodeAccessibilityRole);
    uint64_t v15 = sub_1BFF879F0(v14, (uint64_t)&v29, a2);
    sub_1BFF8874C((uint64_t)&v32 + 8, (uint64_t)v38, &qword_1EB8874E8, (uint64_t)&type metadata for FormatResizing);
    sub_1BFF8874C((uint64_t)v38, (uint64_t)&v28, &qword_1EB8874E8, (uint64_t)&type metadata for FormatResizing);
    uint64_t v16 = v33;
    sub_1BFF88818((uint64_t)&v33 + 8, (uint64_t)v39);
    sub_1BFF88818((uint64_t)v39, (uint64_t)&v27);
    char v17 = v34 & 1;
    uint64_t v18 = *((void *)&v34 + 1);
    sub_1BFF8874C((uint64_t)v37, (uint64_t)v26, &qword_1EB878AF0, (uint64_t)&type metadata for FormatNodeAccessibilityRole);
    long long v29 = v23;
    long long v30 = v22;
    uint64_t v31 = v13;
    uint64_t v19 = *((void *)&v36 + 1);
    type metadata accessor for FormatGroupNodeDataLayoutAttributes();
    swift_allocObject();
    uint64_t v20 = FormatGroupNodeDataLayoutAttributes.init(layoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:maskLayoutAttributes:style:)((uint64_t)v15, &v28, v16, &v27, v17, v18, v26, (uint64_t)&v29, v19);
    sub_1BFF88E0C((uint64_t)v38);
    sub_1BFF88DE0(v39);
    swift_retain();
    swift_retain();
    sub_1BFF88898((uint64_t)&v32);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = a6;
    *(void *)(v21 + 32) = a3;
    *(void *)(v21 + 40) = a4;
    *(void *)(v21 + 48) = a5;
    *a7 = v21 | 0x2000000000000000;
    swift_retain();
    return sub_1C017C3D4(a3, a4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFF8874C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFF887CC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1BFF887CC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFF88818(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t type metadata accessor for FormatGroupNodeDataLayoutAttributes()
{
  return self;
}

uint64_t sub_1BFF88898(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 24);
  swift_release();
  swift_release();
  sub_1BFF0056C(v2);
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1BFF8890C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 24);
  swift_retain();
  swift_retain();
  sub_1BFE6FA30(v2);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void sub_1BFF8897C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v53 = a5;
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v45 - v12;
  uint64_t v14 = *(void *)(a1 + 64);
  if (!v14) {
    goto LABEL_16;
  }
  uint64_t v15 = *(void *)(a2 + *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 40));
  uint64_t v16 = *(void *)(v14 + 16);
  uint64_t v17 = *(void *)(v14 + 24);
  swift_beginAccess();
  uint64_t v18 = *(void *)(v15 + 24);
  uint64_t v19 = *(void *)(v18 + 16);
  uint64_t v52 = v16;
  if (v19)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1BFEF2D8C(v16, v17);
    if (v21)
    {
      unint64_t v22 = v20;
      uint64_t v51 = a4;
      uint64_t v23 = *(void *)(v18 + 56);
      uint64_t v24 = type metadata accessor for FormatNodeStateData.Data();
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v50 = a3;
      uint64_t v26 = v25;
      uint64_t v27 = v23 + *(void *)(v25 + 72) * v22;
      a4 = v51;
      sub_1BFF1B214(v27, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v13, 0, 1, v24);
      a3 = v50;
    }
    else
    {
      uint64_t v24 = type metadata accessor for FormatNodeStateData.Data();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 1, 1, v24);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = type metadata accessor for FormatNodeStateData.Data();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 1, 1, v24);
    swift_retain();
  }
  swift_endAccess();
  type metadata accessor for FormatNodeStateData.Data();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v13, 1, v24) == 1)
  {
    sub_1C12AD324((uint64_t)v13, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
LABEL_15:
    swift_release();
LABEL_16:
    *(void *)(a6 + 32) = 0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
    return;
  }
  if (swift_getEnumCaseMultiPayload() != 16)
  {
    sub_1BFF1BA48((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    goto LABEL_15;
  }
  uint64_t v28 = v17;
  uint64_t v29 = *(void *)v13;
  uint64_t v30 = *((void *)v13 + 1);
  uint64_t v31 = *((void *)v13 + 2);
  uint64_t v46 = *((void *)v13 + 3);
  uint64_t v47 = v29;
  uint64_t v32 = *((void *)v13 + 4);
  uint64_t v50 = *((void *)v13 + 5);
  uint64_t v51 = v32;
  uint64_t v33 = *((void *)v13 + 6);
  uint64_t v48 = *((void *)v13 + 7);
  uint64_t v49 = v33;
  char v34 = v13[64];
  swift_beginAccess();
  uint64_t v35 = *(void *)(v15 + 32);
  if (*(void *)(v35 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v36 = sub_1BFEF2D8C(v52, v28);
    uint64_t v37 = v31;
    uint64_t v38 = v46;
    if (v39)
    {
      uint64_t v40 = *(void *)(*(void *)(v35 + 56) + 8 * v36);
      swift_retain();
    }
    else
    {
      uint64_t v40 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v41 = v47;
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v37 = v31;
    uint64_t v38 = v46;
    uint64_t v41 = v47;
  }
  swift_endAccess();
  sub_1C12A7FB8(0, &qword_1EB86AA38, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatGroupNodeMaskDataLayoutAttributes);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v14;
  *(void *)(v42 + 24) = v41;
  *(void *)(v42 + 32) = v30;
  *(void *)(v42 + 40) = v37;
  uint64_t v43 = v51;
  *(void *)(v42 + 48) = v38;
  *(void *)(v42 + 56) = v43;
  uint64_t v44 = v49;
  *(void *)(v42 + 64) = v50;
  *(void *)(v42 + 72) = v44;
  *(void *)(v42 + 80) = v48;
  *(unsigned char *)(v42 + 88) = v34;
  *(void *)a6 = v42;
  *(void *)(a6 + 8) = v40;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  *(void *)(a6 + 32) = v53;
  sub_1C017C3D4(a3, a4);
}

unint64_t *sub_1BFF88DE0(unint64_t *a1)
{
  return a1;
}

uint64_t sub_1BFF88E0C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFF88E38()
{
  uint64_t v1 = v0;
  char v81 = *(unsigned char *)(v0 + 16);
  uint64_t v82 = FeedKind.contextMenuItemOptions.getter();
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v3 + 16) + 16))
  {
    uint64_t v80 = *(void *)(v1 + 56);
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_1BFEF3B08(v4);
    sub_1BFEF3808(v5);
    uint64_t v6 = v80;
  }
  else
  {
    uint64_t v6 = sub_1BFEF3784();
  }
  char v7 = sub_1BFF896B4(0xD00000000000001ELL, 0x80000001C1606DF0, v6);
  swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v8 + 16) + 16))
  {
    v79[0] = *(void *)(v1 + 56);
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1BFEF3B08(v9);
    sub_1BFEF3808(v10);
    uint64_t v11 = v79[0];
  }
  else
  {
    uint64_t v11 = sub_1BFEF3784();
  }
  char v12 = sub_1BFF896B4(0xD000000000000019, 0x80000001C1606D80, v11);
  swift_bridgeObjectRelease();
  if (v12) {
LABEL_9:
  }
    sub_1C02B5CE4(v79, 11);
  uint64_t v13 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v13 + 16) + 16))
  {
    v78[0] = *(void *)(v1 + 56);
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v15 = sub_1BFEF3B08(v14);
    sub_1BFEF3808(v15);
    uint64_t v16 = v78[0];
  }
  else
  {
    uint64_t v16 = sub_1BFEF3784();
  }
  char v17 = sub_1BFF896B4(0xD000000000000011, 0x80000001C1605CA0, v16);
  swift_bridgeObjectRelease();
  if (v17) {
    sub_1C02B5CE4(v78, 12);
  }
  uint64_t v18 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v18 + 16) + 16))
  {
    v77[0] = *(void *)(v1 + 56);
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = sub_1BFEF3B08(v19);
    sub_1BFEF3808(v20);
    uint64_t v21 = v77[0];
  }
  else
  {
    uint64_t v21 = sub_1BFEF3784();
  }
  char v22 = sub_1BFF896B4(0xD000000000000011, 0x80000001C1605DA0, v21);
  swift_bridgeObjectRelease();
  if (v22) {
    sub_1C02B5CE4(v77, 13);
  }
  uint64_t v23 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v23 + 16) + 16))
  {
    v76[0] = *(void *)(v1 + 56);
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = sub_1BFEF3B08(v24);
    sub_1BFEF3808(v25);
    uint64_t v26 = v76[0];
  }
  else
  {
    uint64_t v26 = sub_1BFEF3784();
  }
  char v27 = sub_1BFF896B4(0xD000000000000016, 0x80000001C1635900, v26);
  swift_bridgeObjectRelease();
  if (v27) {
    sub_1C02B5CE4(v76, 9);
  }
  uint64_t v28 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v28 + 16) + 16))
  {
    v75[0] = *(void *)(v1 + 56);
    uint64_t v29 = swift_bridgeObjectRetain();
    uint64_t v30 = sub_1BFEF3B08(v29);
    sub_1BFEF3808(v30);
    uint64_t v31 = v75[0];
  }
  else
  {
    uint64_t v31 = sub_1BFEF3784();
  }
  char v32 = sub_1BFF896B4(0xD00000000000001BLL, 0x80000001C1635920, v31);
  swift_bridgeObjectRelease();
  if (v32) {
    sub_1C02B5CE4(v75, 2);
  }
  uint64_t v33 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v33 + 16) + 16))
  {
    v74[0] = *(void *)(v1 + 56);
    uint64_t v34 = swift_bridgeObjectRetain();
    uint64_t v35 = sub_1BFEF3B08(v34);
    sub_1BFEF3808(v35);
    uint64_t v36 = v74[0];
  }
  else
  {
    uint64_t v36 = sub_1BFEF3784();
  }
  char v37 = sub_1BFF896B4(0xD00000000000001ELL, 0x80000001C1635940, v36);
  swift_bridgeObjectRelease();
  if (v37) {
    sub_1C02B5CE4(v74, 4);
  }
  uint64_t v38 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v38 + 16) + 16))
  {
    v73[0] = *(void *)(v1 + 56);
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_1BFEF3B08(v39);
    sub_1BFEF3808(v40);
    uint64_t v41 = v73[0];
  }
  else
  {
    uint64_t v41 = sub_1BFEF3784();
  }
  char v42 = sub_1BFF896B4(0xD00000000000001DLL, 0x80000001C1635960, v41);
  swift_bridgeObjectRelease();
  if (v42) {
    sub_1C02B5CE4(v73, 3);
  }
  uint64_t v43 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v43 + 16) + 16))
  {
    uint64_t v72 = *(void *)(v1 + 56);
    uint64_t v44 = swift_bridgeObjectRetain();
    uint64_t v45 = sub_1BFEF3B08(v44);
    sub_1BFEF3808(v45);
    uint64_t v46 = v72;
  }
  else
  {
    uint64_t v46 = sub_1BFEF3784();
  }
  char v47 = sub_1BFF896B4(0xD00000000000001BLL, 0x80000001C1635980, v46);
  swift_bridgeObjectRelease();
  if (v47) {
    goto LABEL_44;
  }
  uint64_t v48 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v48 + 16) + 16))
  {
    v71[0] = *(void *)(v1 + 56);
    uint64_t v49 = swift_bridgeObjectRetain();
    uint64_t v50 = sub_1BFEF3B08(v49);
    sub_1BFEF3808(v50);
    uint64_t v51 = v71[0];
  }
  else
  {
    uint64_t v51 = sub_1BFEF3784();
  }
  char v52 = sub_1BFF896B4(0xD000000000000010, 0x80000001C16359A0, v51);
  swift_bridgeObjectRelease();
  if (v52)
  {
    uint64_t v53 = *(void *)(v2 + 16);
    swift_beginAccess();
    if (*(void *)(*(void *)(v53 + 16) + 16))
    {
      v71[0] = *(void *)(v1 + 56);
      uint64_t v54 = swift_bridgeObjectRetain();
      uint64_t v55 = sub_1BFEF3B08(v54);
      sub_1BFEF3808(v55);
      uint64_t v56 = v71[0];
    }
    else
    {
      uint64_t v56 = sub_1BFEF3784();
    }
    char v57 = sub_1BFF896B4(0xD000000000000021, 0x80000001C16359C0, v56);
    swift_bridgeObjectRelease();
    if (v57)
    {
LABEL_44:
      sub_1C02B5CE4(v71, 21);
      sub_1C02B5CE4(v71, 26);
    }
  }
  uint64_t v58 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v58 + 16) + 16))
  {
    v70[0] = *(void *)(v1 + 56);
    uint64_t v59 = swift_bridgeObjectRetain();
    uint64_t v60 = sub_1BFEF3B08(v59);
    sub_1BFEF3808(v60);
    uint64_t v61 = v70[0];
  }
  else
  {
    uint64_t v61 = sub_1BFEF3784();
  }
  char v62 = sub_1BFF896B4(0xD000000000000015, 0x80000001C1605C20, v61);
  swift_bridgeObjectRelease();
  if (v62) {
    sub_1C02B5CE4(v70, 10);
  }
  uint64_t v63 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v63 + 16) + 16))
  {
    uint64_t v69 = *(void *)(v1 + 56);
    uint64_t v64 = swift_bridgeObjectRetain();
    uint64_t v65 = sub_1BFEF3B08(v64);
    sub_1BFEF3808(v65);
    uint64_t v66 = v69;
  }
  else
  {
    uint64_t v66 = sub_1BFEF3784();
  }
  char v67 = sub_1BFF896B4(0xD000000000000016, 0x80000001C16099F0, v66);
  swift_bridgeObjectRelease();
  if (v67) {
    sub_1C02B5CE4(&v69, 25);
  }
  return v82;
}

uint64_t sub_1BFF895CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C1517EFC();
  uint64_t v5 = *(void *)(*(void *)(v12 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v5 + 16) + 16))
  {
    uint64_t v11 = *(void *)(v12 + 56);
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_1BFEF3B08(v6);
    sub_1BFEF3808(v7);
    swift_release();
    uint64_t v8 = v11;
  }
  else
  {
    uint64_t v8 = sub_1BFEF3784();
    swift_release();
  }
  swift_bridgeObjectRetain();
  char v9 = sub_1BFF896B4(a2, a3, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1BFF896B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t v6 = sub_1C1520E0C();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1C1520A9C() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1C1520A9C() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t FormatDimensionSizing.encode(to:)(void *a1)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v27 - v7;
  sub_1C0883580();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *v1;
  unint64_t v27 = v1[1];
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1C0883454();
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C085F050(&qword_1EB891F90, (void (*)(uint64_t))sub_1C0883454);
  uint64_t v29 = v11;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatDimensionSizing, v18, v13, (uint64_t)&type metadata for FormatDimensionSizing, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v17, (uint64_t)&off_1F1C39B68);
  sub_1BFF8B400(v12);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C151928C();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAB0);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v21(v8, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1C06B8938(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  sub_1BFF8B438(v12);
  if (v2)
  {
    uint64_t v22 = (uint64_t)v29;
  }
  else
  {
    uint64_t v23 = (uint64_t)v28;
    v21(v28, v20, v19);
    swift_storeEnumTagMultiPayload();
    unint64_t v24 = v27;
    sub_1BFF8B400(v27);
    uint64_t v25 = (uint64_t)v29;
    sub_1C06B8938(v24, 1, 0, 0, v23, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v23, type metadata accessor for FormatVersionRequirement);
    sub_1BFF8B438(v24);
    uint64_t v22 = v25;
  }
  return sub_1BFEFEB68(v22, (uint64_t (*)(void))sub_1C0883580);
}

uint64_t FormatTextNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  long long v129 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v130 = (char *)&v125 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v131 = (uint64_t)&v125 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v132 = (uint64_t)&v125 - v12;
  MEMORY[0x1F4188790](v13);
  long long v133 = (char *)&v125 - v14;
  MEMORY[0x1F4188790](v15);
  long long v134 = (char *)&v125 - v16;
  MEMORY[0x1F4188790](v17);
  long long v135 = (char *)&v125 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v136 = (uint64_t)&v125 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v137 = (char *)&v125 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v138 = (char *)&v125 - v24;
  MEMORY[0x1F4188790](v25);
  char v139 = (char *)&v125 - v26;
  MEMORY[0x1F4188790](v27);
  char v140 = (char *)&v125 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v141 = (char *)&v125 - v30;
  MEMORY[0x1F4188790](v31);
  char v142 = (char *)&v125 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v143 = (char *)&v125 - v34;
  MEMORY[0x1F4188790](v35);
  char v37 = (char *)&v125 - v36;
  sub_1C0868278();
  MEMORY[0x1F4188790](v38 - 8);
  uint64_t v40 = (char *)&v125 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a1[3];
  uint64_t v41 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v42);
  sub_1C08683A0();
  uint64_t v44 = v43;
  uint64_t v45 = sub_1C085F050(&qword_1EB892570, (void (*)(uint64_t))sub_1C08683A0);
  sub_1BFEFBD78(v4, v46, v42, v4, v44, (uint64_t)&type metadata for FormatVersions.JazzkonC, v41, (uint64_t)v40, v45, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v47 = v2[2];
  uint64_t v48 = v2[3];
  char v144 = v2;
  uint64_t v49 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v49 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_1C151928C();
  uint64_t v51 = __swift_project_value_buffer(v50, (uint64_t)qword_1EB93CAB0);
  uint64_t v52 = *(void *)(v50 - 8);
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
  uint64_t v54 = v52 + 16;
  v53(v37, v51, v50);
  uint64_t v55 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v56 = v145;
  sub_1C06DAE98(v47, v48, 0, 0, 0, (uint64_t)v37, (uint64_t)sub_1C01B158C, 0);
  if (v56)
  {
    sub_1BFEFEB68((uint64_t)v37, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v66 = (uint64_t)v40;
    return sub_1BFEFEB68(v66, (uint64_t (*)(void))sub_1C0868278);
  }
  sub_1BFEFEB68((uint64_t)v37, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  unint64_t v57 = v144[4];
  uint64_t v58 = (uint64_t)v143;
  v53(v143, v51, v50);
  swift_storeEnumTagMultiPayload();
  sub_1BFF8B400(v57);
  sub_1C06C3D9C(v57, 1, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
  uint64_t v127 = v51;
  uint64_t v145 = v55;
  uint64_t v128 = v54;
  sub_1BFEFEB68(v58, type metadata accessor for FormatVersionRequirement);
  sub_1BFF8B438(v57);
  uint64_t v59 = v144[5];
  uint64_t v60 = qword_1EB887630;
  swift_retain();
  if (v60 != -1) {
    swift_once();
  }
  uint64_t v61 = __swift_project_value_buffer(v50, (uint64_t)qword_1EB93CA80);
  uint64_t v62 = (uint64_t)v142;
  v53(v142, v61, v50);
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = 0;
  sub_1C072369C(v59, 2, 0, 0, v62, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v62, type metadata accessor for FormatVersionRequirement);
  swift_release();
  swift_beginAccess();
  uint64_t v63 = (uint64_t)v141;
  uint64_t v64 = v127;
  v53(v141, v127, v50);
  swift_storeEnumTagMultiPayload();
  uint64_t v65 = swift_bridgeObjectRetain();
  sub_1C06DB0D8(v65, 3, 0, 0);
  sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v68 = (uint64_t)v140;
  v53(v140, v64, v50);
  swift_storeEnumTagMultiPayload();
  uint64_t v69 = swift_retain();
  sub_1C07238EC(v69, 4, 0, 0, v68, (uint64_t)sub_1C01B158C, 0);
  uint64_t v143 = 0;
  uint64_t v141 = (char *)v53;
  char v142 = (char *)v50;
  sub_1BFEFEB68(v68, type metadata accessor for FormatVersionRequirement);
  swift_release();
  uint64_t v70 = v144[8];
  uint64_t v71 = qword_1EB887638;
  swift_retain();
  if (v71 != -1) {
    swift_once();
  }
  uint64_t v72 = (uint64_t)v142;
  uint64_t v73 = __swift_project_value_buffer((uint64_t)v142, (uint64_t)qword_1EB93CA98);
  uint64_t v74 = (uint64_t)v139;
  int v75 = (void (*)(char *, uint64_t, uint64_t))v141;
  ((void (*)(char *, uint64_t, uint64_t))v141)(v139, v73, v72);
  swift_storeEnumTagMultiPayload();
  unsigned __int8 v76 = v143;
  sub_1C0723B5C(v70, 5, 0, 0, v74, (uint64_t)sub_1C01B158C, 0);
  if (v76)
  {
    sub_1BFEFEB68(v74, type metadata accessor for FormatVersionRequirement);
    swift_release();
    goto LABEL_8;
  }
  uint64_t v126 = v73;
  sub_1BFEFEB68(v74, type metadata accessor for FormatVersionRequirement);
  swift_release();
  uint64_t v77 = v144;
  uint64_t v78 = v144[9];
  uint64_t v79 = (uint64_t)v138;
  v75(v138, v127, v72);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  sub_1C06C3F34(v78, 6, 0, 0, v79, (uint64_t)sub_1C01B158C, 0);
  uint64_t v143 = 0;
  char v140 = 0;
  sub_1BFEFEB68(v79, type metadata accessor for FormatVersionRequirement);
  swift_release();
  uint64_t v80 = v77[10];
  uint64_t v81 = v77[11];
  uint64_t v82 = v77[12];
  __int16 v83 = *((_WORD *)v77 + 52);
  sub_1BFF4DC7C(v80, v81, v82, v83);
  if (qword_1EB8875F8 != -1) {
    swift_once();
  }
  uint64_t v84 = (uint64_t)v142;
  uint64_t v85 = __swift_project_value_buffer((uint64_t)v142, (uint64_t)qword_1EB93C9F0);
  uint64_t v86 = (uint64_t)v137;
  uint64_t v87 = (void (*)(uint64_t, uint64_t, uint64_t))v141;
  ((void (*)(char *, uint64_t, uint64_t))v141)(v137, v85, v84);
  swift_storeEnumTagMultiPayload();
  uint64_t v88 = v143;
  sub_1C0723DCC(v80, v81, v82, v83, 7, 0, 0, v86);
  if (v88)
  {
    sub_1BFEFEB68(v86, type metadata accessor for FormatVersionRequirement);
    sub_1BFF4BC8C(v80, v81, v82, v83);
    uint64_t v40 = v140;
    goto LABEL_8;
  }
  sub_1BFEFEB68(v86, type metadata accessor for FormatVersionRequirement);
  sub_1BFF4BC8C(v80, v81, v82, v83);
  uint64_t v89 = v144;
  swift_beginAccess();
  uint64_t v90 = v89[14];
  uint64_t v91 = v136;
  v87(v136, v127, v84);
  swift_storeEnumTagMultiPayload();
  uint64_t v92 = v87;
  if (v90 && (sub_1C0842CF8(v91, 8, 0, 0, (uint64_t)sub_1C01B158C, 0) & 1) != 0)
  {
    long long v153 = xmmword_1C1558010;
    char v154 = 0;
    *(void *)&long long v151 = v90;
    sub_1C086830C();
    sub_1C085F050(&qword_1EB86ECB0, (void (*)(uint64_t))sub_1C086830C);
    sub_1C1520BAC();
    uint64_t v92 = (void (*)(uint64_t, uint64_t, uint64_t))v141;
  }
  uint64_t v93 = v126;
  uint64_t v94 = (uint64_t)v135;
  sub_1BFEFEB68(v136, type metadata accessor for FormatVersionRequirement);
  uint64_t v95 = v144;
  swift_beginAccess();
  unint64_t v96 = v95[15];
  v92(v94, v93, (uint64_t)v142);
  swift_storeEnumTagMultiPayload();
  if (v96 == 0x8000000000000000)
  {
    uint64_t v97 = (uint64_t)v134;
  }
  else
  {
    sub_1BFE6FA30(v96);
    if (sub_1C0842CF8(v94, 9, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v151 = xmmword_1C1558020;
      char v152 = 0;
      *(void *)&long long v149 = v96;
      sub_1C086830C();
      sub_1C085F050(&qword_1EB86ECB0, (void (*)(uint64_t))sub_1C086830C);
      sub_1C009DA10();
      sub_1C1520BAC();
    }
    uint64_t v92 = (void (*)(uint64_t, uint64_t, uint64_t))v141;
    uint64_t v97 = (uint64_t)v134;
    uint64_t v94 = (uint64_t)v135;
  }
  sub_1BFEFEB68(v94, type metadata accessor for FormatVersionRequirement);
  sub_1BFF0056C(v96);
  uint64_t v98 = v144;
  swift_beginAccess();
  char v99 = *((unsigned char *)v98 + 128);
  if (qword_1EB887650 != -1) {
    swift_once();
  }
  uint64_t v100 = (uint64_t)v142;
  uint64_t v101 = __swift_project_value_buffer((uint64_t)v142, (uint64_t)qword_1EB93CAE0);
  v92(v97, v101, v100);
  swift_storeEnumTagMultiPayload();
  if ((v99 & 1) == 0)
  {
    if (sub_1C0842CF8(v97, 10, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v149 = xmmword_1C1558030;
      char v150 = 0;
      LOBYTE(v147) = 0;
      sub_1C086830C();
      sub_1C085F050(&qword_1EB86ECB0, (void (*)(uint64_t))sub_1C086830C);
      sub_1C1520BAC();
    }
    uint64_t v92 = (void (*)(uint64_t, uint64_t, uint64_t))v141;
    uint64_t v97 = (uint64_t)v134;
  }
  sub_1BFEFEB68(v97, type metadata accessor for FormatVersionRequirement);
  unsigned __int8 v102 = *((unsigned char *)v144 + 129);
  uint64_t v103 = (uint64_t)v133;
  v92((uint64_t)v133, v127, (uint64_t)v142);
  swift_storeEnumTagMultiPayload();
  sub_1C0724054(v102, 11, 0, 0, v103, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v103, type metadata accessor for FormatVersionRequirement);
  uint64_t v104 = v144[17];
  unsigned __int8 v105 = *((unsigned char *)v144 + 144);
  uint64_t v106 = v132;
  ((void (*)(uint64_t, uint64_t, char *))v141)(v132, v127, v142);
  swift_storeEnumTagMultiPayload();
  sub_1C0724278(v104, v105, 12, 0, 0, v106, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v132, type metadata accessor for FormatVersionRequirement);
  long long v107 = v144;
  swift_beginAccess();
  uint64_t v108 = v107[19];
  uint64_t v109 = qword_1EB887640;
  swift_bridgeObjectRetain();
  if (v109 != -1) {
    swift_once();
  }
  uint64_t v110 = (uint64_t)v142;
  uint64_t v111 = __swift_project_value_buffer((uint64_t)v142, (uint64_t)qword_1EB93CAC8);
  ((void (*)(uint64_t, uint64_t, uint64_t))v141)(v131, v111, v110);
  swift_storeEnumTagMultiPayload();
  if (*(void *)(v108 + 16) && (sub_1C0842CF8(v131, 13, 0, 0, (uint64_t)sub_1C01B158C, 0) & 1) != 0)
  {
    long long v147 = xmmword_1C1533150;
    char v148 = 0;
    uint64_t v112 = swift_bridgeObjectRetain();
    char v113 = sub_1BFE71F8C(v112);
    swift_bridgeObjectRelease();
    uint64_t v146 = v113;
    swift_retain();
    sub_1BFE726FC((uint64_t *)&v146, sub_1BFE72780, sub_1BFE72EAC);
    swift_release();
    uint64_t v155 = (uint64_t)v146;
    sub_1C086830C();
    sub_1C085F050(&qword_1EB86ECB0, (void (*)(uint64_t))sub_1C086830C);
    uint64_t v114 = MEMORY[0x1E4FBB1A0];
    sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v114);
    sub_1C1520BAC();
    swift_release();
  }
  sub_1BFEFEB68(v131, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  long long v115 = v144;
  swift_beginAccess();
  uint64_t v116 = v115[20];
  uint64_t v117 = qword_1EB893B08;
  swift_bridgeObjectRetain();
  if (v117 != -1) {
    swift_once();
  }
  uint64_t v118 = (uint64_t)v142;
  uint64_t v119 = __swift_project_value_buffer((uint64_t)v142, (uint64_t)qword_1EB93CBA0);
  uint64_t v120 = (uint64_t)v130;
  ((void (*)(char *, uint64_t, uint64_t))v141)(v130, v119, v118);
  swift_storeEnumTagMultiPayload();
  uint64_t v121 = v140;
  sub_1C06DB23C(v116, 14, 0, 0);
  sub_1BFEFEB68(v120, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v122 = v144[21];
  uint64_t v123 = v144[22];
  uint64_t v124 = (uint64_t)v129;
  ((void (*)(char *, uint64_t, char *))v141)(v129, v126, v142);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C07244B4(v122, v123, 15, 0, 0, v124, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v124, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v66 = (uint64_t)v121;
  return sub_1BFEFEB68(v66, (uint64_t (*)(void))sub_1C0868278);
}

unint64_t sub_1BFF8B400(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFF8B438(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFF8B470()
{
  unint64_t result = qword_1EB875BD0;
  if (!qword_1EB875BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875BD0);
  }
  return result;
}

unint64_t sub_1BFF8B4C4()
{
  unint64_t result = qword_1EB85C3E8;
  if (!qword_1EB85C3E8)
  {
    sub_1BFE9DEBC(255, &qword_1EB879DD8, (uint64_t)&type metadata for FormatAdjustment, MEMORY[0x1E4FBB320]);
    sub_1C007F478();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C3E8);
  }
  return result;
}

unint64_t sub_1BFF8B558()
{
  unint64_t result = qword_1EB870AD8;
  if (!qword_1EB870AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870AD8);
  }
  return result;
}

unint64_t sub_1BFF8B5AC()
{
  unint64_t result = qword_1EB85BFB0;
  if (!qword_1EB85BFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BFB0);
  }
  return result;
}

unint64_t sub_1BFF8B600()
{
  unint64_t result = qword_1EB85BA40;
  if (!qword_1EB85BA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BA40);
  }
  return result;
}

uint64_t FormatItemNodeStyle.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF8C638(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned char *)(v0 + 112), (void (*)(void))sub_1BFDC11BC, (void (*)(uint64_t, uint64_t, void))sub_1BFEF68AC);
  sub_1BFF8C720(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(unsigned char *)(v0 + 176));
  sub_1BFFA12B4(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction, (uint64_t (*)(void))sub_1BFFA18D8);
  sub_1BFF8C734(*(void *)(v0 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1BFF8B764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8 == 1)
  {
    sub_1C05DC288(a1);
  }
  else if (!a8)
  {
    sub_1BFF8B7D0(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_1BFDC11BC, (void (*)(uint64_t))sub_1BFEF68C0);
  }
}

void sub_1BFF8B7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(void), void (*a9)(uint64_t))
{
  if ((a7 & 0xF000000000000007) != 0xD000000000000007)
  {
    a8();
    a9(a7);
  }
}

uint64_t FormatItemNodeStyle.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v74 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  int v75 = (char *)&v74 - v8;
  MEMORY[0x1F4188790](v9);
  unsigned __int8 v76 = (char *)&v74 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v77 = (char *)&v74 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v78 = (char *)&v74 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v79 = (char *)&v74 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v80 = (char *)&v74 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v81 = (char *)&v74 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v82 = (char *)&v74 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v74 - v24;
  sub_1C0894E5C();
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1[3];
  uint64_t v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  sub_1C0894F84();
  uint64_t v32 = v31;
  uint64_t v33 = sub_1C085F050(&qword_1EB891DA0, (void (*)(uint64_t))sub_1C0894F84);
  sub_1BFEFBD78(v4, v34, v30, v4, v32, (uint64_t)&type metadata for FormatVersions.JazzkonC, v29, (uint64_t)v28, v33, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v35 = v2[2];
  uint64_t v36 = v2[3];
  __int16 v83 = v2;
  uint64_t v37 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void (**)(char *))(*(void *)(v38 - 8) + 16);
  uint64_t v84 = v39;
  v40(v25);
  uint64_t v41 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = v88;
  sub_1C06D3134(v35, v36, 0, 0, 0, (uint64_t)v25, (uint64_t)sub_1C01B158C, 0);
  uint64_t v43 = (uint64_t)v28;
  if (v42)
  {
    sub_1BFEFEB68((uint64_t)v25, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v25, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v88 = v28;
    uint64_t v44 = v83;
    uint64_t v45 = v83[4];
    uint64_t v46 = v83[5];
    uint64_t v47 = (uint64_t)v82;
    ((void (*)(char *, uint64_t, uint64_t))v40)(v82, v84, v38);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    uint64_t v48 = v45;
    uint64_t v43 = (uint64_t)v88;
    sub_1C06BD778(v48, v46, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    sub_1BFE99AAC((uint64_t)(v44 + 6), (uint64_t)v87, &qword_1EB867468, (uint64_t)&type metadata for FormatPreviewParameters);
    uint64_t v49 = (void (*)(char *, uint64_t, uint64_t))v40;
    uint64_t v50 = (uint64_t)v81;
    v49(v81, v84, v38);
    swift_storeEnumTagMultiPayload();
    sub_1BFF8C5E0((uint64_t)v87, (void (*)(void))sub_1BFDC11A4, (void (*)(uint64_t, uint64_t, void))sub_1BFEF6828);
    sub_1C07158B0((uint64_t)v87, 2, 0, 0, v50, (uint64_t)sub_1C01B158C, 0);
    uint64_t v51 = v44;
    sub_1BFEFEB68(v50, type metadata accessor for FormatVersionRequirement);
    sub_1BFF8C5E0((uint64_t)v87, (void (*)(void))sub_1BFDC11BC, (void (*)(uint64_t, uint64_t, void))sub_1BFEF68AC);
    sub_1BFE99AAC((uint64_t)(v44 + 15), (uint64_t)v86, &qword_1EB8602A8, (uint64_t)&type metadata for FormatCellSelection);
    uint64_t v52 = (uint64_t)v80;
    v49(v80, v84, v38);
    swift_storeEnumTagMultiPayload();
    sub_1BFF8C6C8((uint64_t)v86, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF8C70C);
    sub_1C0715D00((uint64_t)v86, 3, 0, 0, v52, (uint64_t)sub_1C01B158C, 0);
    uint64_t v82 = (char *)v41;
    sub_1BFEFEB68(v52, type metadata accessor for FormatVersionRequirement);
    sub_1BFF8C6C8((uint64_t)v86, (void (*)(void, void, void, void, void, void, void, void))sub_1BFF8C720);
    uint64_t v53 = (uint64_t)v51 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_cellAction;
    if (qword_1EB887658 != -1) {
      swift_once();
    }
    uint64_t v54 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAF8);
    uint64_t v55 = (uint64_t)v79;
    v49(v79, v54, v38);
    swift_storeEnumTagMultiPayload();
    sub_1C0716034(v53, 4, 0, 0, v55, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
    uint64_t v56 = *((unsigned __int8 *)v51 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_clipsToBounds);
    if (qword_1EB887640 != -1) {
      swift_once();
    }
    uint64_t v57 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAC8);
    uint64_t v58 = (uint64_t)v78;
    v49(v78, v57, v38);
    swift_storeEnumTagMultiPayload();
    sub_1C0716430(v56, 5, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v58, type metadata accessor for FormatVersionRequirement);
    uint64_t v60 = *((unsigned __int8 *)v51 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_ignoresSmartInvertColors);
    if (qword_1EB887600 != -1) {
      swift_once();
    }
    uint64_t v61 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA08);
    uint64_t v62 = (uint64_t)v77;
    v49(v77, v61, v38);
    swift_storeEnumTagMultiPayload();
    sub_1C0716430(v60, 6, 0, 0, v62, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v62, type metadata accessor for FormatVersionRequirement);
    uint64_t v81 = 0;
    uint64_t v63 = v49;
    unint64_t v64 = *(uint64_t *)((char *)v51 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle);
    uint64_t v65 = *(uint64_t *)((char *)v51 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_swipeActionStyle + 8);
    sub_1BFFA1B08(v64);
    if (qword_1EB8875E0 != -1) {
      swift_once();
    }
    uint64_t v66 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93C9D8);
    uint64_t v67 = (uint64_t)v76;
    v63(v76, v66, v38);
    swift_storeEnumTagMultiPayload();
    uint64_t v68 = v81;
    sub_1C0716654(v64, v65, 7, 0, 0, v67, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v67, type metadata accessor for FormatVersionRequirement);
    sub_1BFF8C734(v64);
    uint64_t v69 = v83;
    if (!v68)
    {
      swift_beginAccess();
      uint64_t v70 = (uint64_t)v75;
      v63(v75, v84, v38);
      swift_storeEnumTagMultiPayload();
      uint64_t v71 = swift_bridgeObjectRetain();
      sub_1C06D3374(v71, 8, 0, 0);
      sub_1BFEFEB68(v70, type metadata accessor for FormatVersionRequirement);
      uint64_t v43 = (uint64_t)v88;
      swift_bridgeObjectRelease();
      sub_1BFE99AAC((uint64_t)v69 + OBJC_IVAR____TtC8NewsFeed19FormatItemNodeStyle_focusParameters, (uint64_t)v85, &qword_1EB86CA30, (uint64_t)&type metadata for FormatFocusParameters);
      if (qword_1EB8849D0 != -1) {
        swift_once();
      }
      uint64_t v72 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93C828);
      uint64_t v73 = (uint64_t)v74;
      v63(v74, v72, v38);
      swift_storeEnumTagMultiPayload();
      sub_1C07168B4((uint64_t)v85, 9, 0, 0, v73, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68(v73, type metadata accessor for FormatVersionRequirement);
    }
  }
  return sub_1BFEFEB68(v43, (uint64_t (*)(void))sub_1C0894E5C);
}

uint64_t sub_1BFF8C5E0(uint64_t a1, void (*a2)(void), void (*a3)(uint64_t, uint64_t, void))
{
  return a1;
}

void sub_1BFF8C638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, void (*a10)(void), void (*a11)(uint64_t, uint64_t, void))
{
  if ((a9 & 0xFE) != 0x7E)
  {
    a10();
    a11(a7, a8, a9);
  }
}

uint64_t sub_1BFF8C6C8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

void sub_1BFF8C70C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8 != -1) {
    sub_1BFFA1B88(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

void sub_1BFF8C720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a8 != -1) {
    sub_1BFF8B764(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

unint64_t sub_1BFF8C734(unint64_t result)
{
  if (result != 3) {
    return sub_1C05DCC44(result);
  }
  return result;
}

void sub_1BFF8C744(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *((unsigned char *)a2 + 9);
  uint64_t v7 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v13 = a2[8];
  uint64_t v12 = a2[9];
  uint64_t v15 = a2[10];
  uint64_t v14 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = *v2;
  uint64_t v18 = v2[1];
  unsigned int v19 = *((unsigned __int8 *)v2 + 24);
  uint64_t v20 = *((unsigned __int8 *)v2 + 16);
  switch((v19 >> 4) & 3)
  {
    case 1u:
      return;
    case 3u:
      if (v19 >> 6 < 2) {
        goto LABEL_2;
      }
      if ((v19 & 0xF) == 1 && (v18 & 0xF000000000000007) != 0xF000000000000007)
      {
        uint64_t v35 = v18;
        goto LABEL_5;
      }
      break;
    default:
LABEL_2:
      if (v20 == 1 && (v17 & 0xF000000000000007) != 0xF000000000000007)
      {
        uint64_t v35 = v17;
LABEL_5:
        uint64_t v21 = v3;
        char v22 = v4;
        char v23 = v5;
        uint64_t v24 = v7;
        uint64_t v25 = v6;
        uint64_t v26 = v8;
        uint64_t v27 = v9;
        uint64_t v28 = v11;
        uint64_t v29 = v10;
        uint64_t v30 = v13;
        uint64_t v31 = v12;
        uint64_t v32 = v15;
        uint64_t v33 = v14;
        uint64_t v34 = v16;
        sub_1BFE2F328(a1, (uint64_t)&v21);
      }
      break;
  }
}

uint64_t sub_1BFF8C844@<X0>(uint64_t a1@<X8>)
{
  return sub_1BFEFE7C8(&qword_1EB887650, (uint64_t)qword_1EB93CAE0, a1);
}

uint64_t FormatGroup.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v92 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v95 = (uint64_t)&v91 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v97 = (char *)&v91 - v8;
  MEMORY[0x1F4188790](v9);
  char v99 = (char *)&v91 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v100 = (uint64_t)&v91 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v103 = (char *)&v91 - v14;
  MEMORY[0x1F4188790](v15);
  unsigned __int8 v105 = (char *)&v91 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v107 = (uint64_t)&v91 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v109 = (char *)&v91 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v111 = (char *)&v91 - v22;
  MEMORY[0x1F4188790](v23);
  long long v115 = (char *)&v91 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v114 = (char *)&v91 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v91 - v28;
  sub_1C0889CE0();
  MEMORY[0x1F4188790](v30 - 8);
  uint64_t v32 = (char *)&v91 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = (uint64_t)v1[1];
  uint64_t v116 = *v1;
  LODWORD(v113) = *((unsigned __int8 *)v1 + 48);
  uint64_t v112 = v1[7];
  uint64_t v110 = (uint64_t)v1[8];
  uint64_t v108 = v1[9];
  uint64_t v106 = (uint64_t)v1[10];
  uint64_t v104 = v1[11];
  uint64_t v34 = (uint64_t)v1[12];
  uint64_t v101 = v1[13];
  uint64_t v102 = v34;
  uint64_t v98 = v1[14];
  unint64_t v96 = v1[15];
  int v93 = *((unsigned __int8 *)v1 + 128);
  uint64_t v94 = v1[17];
  uint64_t v35 = a1[3];
  uint64_t v36 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  sub_1C0889B24();
  uint64_t v38 = v37;
  uint64_t v39 = sub_1C085F050(&qword_1EB892480, (void (*)(uint64_t))sub_1C0889B24);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatGroup, v40, v35, (uint64_t)&type metadata for FormatGroup, v38, (uint64_t)&type metadata for FormatVersions.JazzkonC, v36, (uint64_t)v32, v39, (uint64_t)&off_1F1C39B68);
  uint64_t v41 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v41 != -1) {
    swift_once();
  }
  uint64_t v42 = sub_1C151928C();
  uint64_t v43 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CAB0);
  uint64_t v44 = *(void *)(v42 - 8);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
  uint64_t v46 = (char *)(v44 + 16);
  v45(v29, v43, v42);
  uint64_t v47 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v48 = v117;
  sub_1C06C6D5C((uint64_t)v116, v33, 0, 0, 0, (uint64_t)v29, (uint64_t)sub_1C01B158C, 0);
  if (v48)
  {
    sub_1BFEFEB68((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
LABEL_5:
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v52 = (uint64_t)v32;
    return sub_1BFEFEB68(v52, (uint64_t (*)(void))sub_1C0889CE0);
  }
  uint64_t v117 = 0;
  sub_1BFEFEB68((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v49 = (uint64_t)v114;
  v45(v114, v43, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BFEFEB68(v49, type metadata accessor for FormatVersionRequirement);
  v45((char *)v49, v43, v42);
  swift_storeEnumTagMultiPayload();
  sub_1BFEFEB68(v49, type metadata accessor for FormatVersionRequirement);
  uint64_t v50 = (uint64_t)v115;
  v45(v115, v43, v42);
  swift_storeEnumTagMultiPayload();
  uint64_t v51 = v117;
  sub_1C06DE994(v113, 3, 0, 0, v50, (uint64_t)sub_1C01B158C, 0);
  if (v51)
  {
    sub_1BFEFEB68(v50, type metadata accessor for FormatVersionRequirement);
    goto LABEL_8;
  }
  uint64_t v54 = (void (*)(uint64_t, uint64_t, uint64_t))v45;
  sub_1BFEFEB68(v50, type metadata accessor for FormatVersionRequirement);
  uint64_t v55 = (uint64_t)v111;
  v45(v111, v43, v42);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  char v56 = sub_1C0844E14(v55, 4, 0, 0, (uint64_t)sub_1C01B158C, 0);
  uint64_t v91 = v43;
  if (v56)
  {
    uint64_t v114 = (char *)v47;
    long long v115 = v46;
    char v113 = (void (*)(uint64_t, uint64_t, uint64_t))v45;
    uint64_t v116 = v32;
    long long v119 = xmmword_1C1557FD0;
    char v120 = 0;
    uint64_t v58 = swift_bridgeObjectRetain();
    uint64_t v59 = sub_1BFF8F6B0(v58);
    swift_bridgeObjectRelease();
    uint64_t v118 = v59;
    swift_retain();
    sub_1BFF8F94C((uint64_t *)&v118);
    uint64_t v60 = v110;
    swift_release();
    uint64_t v121 = (uint64_t)v118;
    sub_1C0889D74();
    sub_1C085F050(&qword_1EB86EBA0, (void (*)(uint64_t))sub_1C0889D74);
    uint64_t v61 = MEMORY[0x1E4FBB550];
    sub_1BFE9DEBC(0, &qword_1EB879F70, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB320]);
    sub_1BFE71F14((unint64_t *)&qword_1EB85C4A8, &qword_1EB879F70, v61);
    sub_1C1520BAC();
    swift_release();
    uint64_t v46 = v115;
    uint64_t v32 = v116;
    uint64_t v54 = v113;
    uint64_t v47 = (uint64_t)v114;
    uint64_t v55 = (uint64_t)v111;
  }
  else
  {
    uint64_t v60 = v110;
  }
  uint64_t v117 = 0;
  sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  unint64_t v62 = (unint64_t)v108;
  sub_1BFEB9640(v60, (unint64_t)v108);
  uint64_t v63 = (uint64_t)v109;
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v64 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CA98);
  v54(v63, v64, v42);
  swift_storeEnumTagMultiPayload();
  uint64_t v65 = v117;
  sub_1C0726E14(v60, v62, 5, 0, 0, v63, (uint64_t)sub_1C01B158C, 0);
  if (v65)
  {
    sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
    sub_1BFFD0438(v60, v62);
    goto LABEL_8;
  }
  sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
  sub_1BFFD0438(v60, v62);
  uint64_t v66 = v107;
  v54(v107, v91, v42);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  if (sub_1C0844E14(v66, 6, 0, 0, (uint64_t)sub_1C01B158C, 0))
  {
    long long v119 = xmmword_1C1557FE0;
    char v120 = 0;
    uint64_t v121 = v106;
    sub_1C0889D74();
    sub_1C085F050(&qword_1EB86EBA0, (void (*)(uint64_t))sub_1C0889D74);
    sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB863300, (uint64_t)&type metadata for FormatSourceMapNode, MEMORY[0x1E4FBB320]);
    sub_1BFE407E0();
    sub_1C1520BAC();
  }
  sub_1BFEFEB68(v107, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v67 = (uint64_t)v105;
  v54((uint64_t)v105, v91, v42);
  swift_storeEnumTagMultiPayload();
  uint64_t v68 = swift_bridgeObjectRetain();
  sub_1C06DEB88(v68, 7, 0, 0);
  uint64_t v117 = 0;
  sub_1BFEFEB68(v67, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v69 = qword_1EB887610;
  uint64_t v70 = v102;
  swift_bridgeObjectRetain();
  if (v69 != -1) {
    swift_once();
  }
  uint64_t v71 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CA20);
  uint64_t v72 = (uint64_t)v103;
  v54((uint64_t)v103, v71, v42);
  swift_storeEnumTagMultiPayload();
  uint64_t v73 = v117;
  sub_1C06DECEC(v70, 8, 0, 0);
  if (v73)
  {
    uint64_t v57 = v72;
LABEL_12:
    sub_1BFEFEB68(v57, type metadata accessor for FormatVersionRequirement);
    goto LABEL_5;
  }
  uint64_t v117 = 0;
  sub_1BFEFEB68(v72, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v74 = v100;
  v54(v100, v91, v42);
  swift_storeEnumTagMultiPayload();
  uint64_t v75 = *((void *)v101 + 2);
  swift_bridgeObjectRetain();
  if (!v75)
  {
    uint64_t v78 = (uint64_t)v99;
LABEL_34:
    sub_1BFEFEB68(v74, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v83 = v91;
    v54(v78, v91, v42);
    swift_storeEnumTagMultiPayload();
    uint64_t v84 = swift_bridgeObjectRetain();
    uint64_t v85 = v117;
    sub_1C06DEE50(v84, 10, 0, 0);
    if (!v85)
    {
      uint64_t v117 = type metadata accessor for FormatVersionRequirement;
      sub_1BFEFEB68(v78, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      uint64_t v86 = (uint64_t)v97;
      long long v115 = v46;
      v54((uint64_t)v97, v83, v42);
      swift_storeEnumTagMultiPayload();
      uint64_t v87 = swift_bridgeObjectRetain();
      sub_1C06DEFC0(v87, 11, 0, 0);
      sub_1BFEFEB68(v86, v117);
      swift_bridgeObjectRelease();
      v54(v95, v83, v42);
      swift_storeEnumTagMultiPayload();
      if (v93 != 192 && (sub_1C0844E14(v95, 12, 0, 0, (uint64_t)sub_1C01B158C, 0) & 1) != 0)
      {
        long long v119 = xmmword_1C1558050;
        char v120 = 0;
        LOBYTE(v121) = v93;
        sub_1C0889D74();
        sub_1C085F050(&qword_1EB86EBA0, (void (*)(uint64_t))sub_1C0889D74);
        sub_1BFFB47F4();
        sub_1C1520BAC();
      }
      sub_1BFEFEB68(v95, type metadata accessor for FormatVersionRequirement);
      uint64_t v88 = qword_1EB887658;
      swift_bridgeObjectRetain();
      if (v88 != -1) {
        swift_once();
      }
      uint64_t v89 = __swift_project_value_buffer(v42, (uint64_t)qword_1EB93CAF8);
      uint64_t v90 = (uint64_t)v92;
      v54((uint64_t)v92, v89, v42);
      swift_storeEnumTagMultiPayload();
      sub_1C06DF124((uint64_t)v94, 13, 0, 0);
      sub_1BFEFEB68(v90, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      uint64_t v52 = (uint64_t)v32;
      return sub_1BFEFEB68(v52, (uint64_t (*)(void))sub_1C0889CE0);
    }
    uint64_t v57 = v78;
    goto LABEL_12;
  }
  unsigned __int8 v76 = v117;
  char v77 = sub_1C0844E14(v74, 9, 0, 0, (uint64_t)sub_1C01B158C, 0);
  if (v76)
  {
    sub_1BFEFEB68(v100, type metadata accessor for FormatVersionRequirement);
    goto LABEL_5;
  }
  uint64_t v117 = 0;
  uint64_t v114 = (char *)v47;
  long long v115 = v46;
  if ((v77 & 1) == 0)
  {
LABEL_33:
    uint64_t v46 = v115;
    uint64_t v78 = (uint64_t)v99;
    uint64_t v74 = v100;
    goto LABEL_34;
  }
  char v113 = v54;
  uint64_t v116 = v32;
  long long v119 = xmmword_1C1558020;
  char v120 = 0;
  uint64_t v79 = swift_bridgeObjectRetain();
  uint64_t v80 = sub_1BFE71F8C(v79);
  swift_bridgeObjectRelease();
  uint64_t v118 = v80;
  swift_retain();
  uint64_t v81 = v117;
  sub_1BFE726FC((uint64_t *)&v118, sub_1BFE72780, sub_1BFE72EAC);
  if (!v81)
  {
    swift_release();
    uint64_t v121 = (uint64_t)v118;
    sub_1C0889D74();
    sub_1C085F050(&qword_1EB86EBA0, (void (*)(uint64_t))sub_1C0889D74);
    uint64_t v82 = MEMORY[0x1E4FBB1A0];
    sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v82);
    sub_1C1520BAC();
    uint64_t v117 = 0;
    swift_release();
    uint64_t v32 = v116;
    uint64_t v54 = v113;
    goto LABEL_33;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t FormatImageNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v108 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v109 = (char *)&v105 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v110 = (char *)&v105 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v111 = (char *)&v105 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v112 = (char *)&v105 - v14;
  MEMORY[0x1F4188790](v15);
  char v113 = (char *)&v105 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v114 = (char *)&v105 - v18;
  MEMORY[0x1F4188790](v19);
  long long v115 = (char *)&v105 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v116 = (char *)&v105 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v117 = (char *)&v105 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v118 = (char *)&v105 - v26;
  MEMORY[0x1F4188790](v27);
  long long v119 = (char *)&v105 - v28;
  MEMORY[0x1F4188790](v29);
  char v120 = (void (*)(char *, uint64_t, uint64_t))((char *)&v105 - v30);
  MEMORY[0x1F4188790](v31);
  uint64_t v33 = (char *)&v105 - v32;
  sub_1C088F664();
  MEMORY[0x1F4188790](v34 - 8);
  uint64_t v36 = (char *)&v105 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = a1[3];
  uint64_t v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v38);
  sub_1C088F78C();
  uint64_t v40 = v39;
  uint64_t v41 = sub_1C085F050(&qword_1EB8925D0, (void (*)(uint64_t))sub_1C088F78C);
  sub_1BFEFBD78(v4, v42, v38, v4, v40, (uint64_t)&type metadata for FormatVersions.JazzkonC, v37, (uint64_t)v36, v41, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v43 = v2[2];
  uint64_t v44 = v2[3];
  uint64_t v121 = (uint64_t)v2;
  uint64_t v45 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v45 != -1) {
    swift_once();
  }
  uint64_t v46 = sub_1C151928C();
  uint64_t v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1EB93CAB0);
  uint64_t v48 = *(void *)(v46 - 8);
  uint64_t v49 = *(void (**)(char *))(v48 + 16);
  uint64_t v50 = v48 + 16;
  uint64_t v122 = v47;
  v49(v33);
  uint64_t v51 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v52 = v43;
  uint64_t v53 = v36;
  uint64_t v54 = v123;
  sub_1C06D96EC(v52, v44, 0, 0, 0, (uint64_t)v33, (uint64_t)sub_1C01B158C, 0);
  if (v54)
  {
    sub_1BFEFEB68((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v64 = (uint64_t)v36;
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v33, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v55 = v121;
    unint64_t v56 = *(void *)(v121 + 32);
    uint64_t v57 = (uint64_t)v120;
    ((void (*)(void, uint64_t, uint64_t))v49)(v120, v122, v46);
    swift_storeEnumTagMultiPayload();
    sub_1BFF35EA4(v56);
    sub_1C06C35A8(v56, 1, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
    uint64_t v106 = v46;
    uint64_t v107 = v51;
    uint64_t v123 = v50;
    sub_1BFEFEB68(v57, type metadata accessor for FormatVersionRequirement);
    sub_1BFF322A8(v56);
    uint64_t v58 = *(void *)(v55 + 40);
    uint64_t v59 = qword_1EB887630;
    swift_retain();
    uint64_t v60 = v55;
    if (v59 != -1) {
      swift_once();
    }
    uint64_t v61 = v106;
    uint64_t v62 = __swift_project_value_buffer(v106, (uint64_t)qword_1EB93CA80);
    uint64_t v63 = (uint64_t)v119;
    ((void (*)(char *, uint64_t, uint64_t))v49)(v119, v62, v61);
    char v120 = (void (*)(char *, uint64_t, uint64_t))v49;
    swift_storeEnumTagMultiPayload();
    sub_1C0721354(v58, 2, 0, 0, v63, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
    swift_release();
    swift_beginAccess();
    uint64_t v66 = (uint64_t)v118;
    uint64_t v67 = v122;
    v120(v118, v122, v61);
    swift_storeEnumTagMultiPayload();
    uint64_t v68 = swift_bridgeObjectRetain();
    sub_1C06D992C(v68, 3, 0, 0);
    sub_1BFEFEB68(v66, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v69 = (uint64_t)v117;
    v120(v117, v67, v61);
    swift_storeEnumTagMultiPayload();
    uint64_t v70 = swift_retain();
    sub_1C07215A4(v70, 4, 0, 0, v69, (uint64_t)sub_1C01B158C, 0);
    uint64_t v71 = v120;
    sub_1BFEFEB68(v69, type metadata accessor for FormatVersionRequirement);
    swift_release();
    uint64_t v72 = *(void *)(v60 + 64);
    uint64_t v73 = qword_1EB887638;
    swift_retain();
    if (v73 != -1) {
      swift_once();
    }
    uint64_t v74 = __swift_project_value_buffer(v61, (uint64_t)qword_1EB93CA98);
    uint64_t v75 = v61;
    unsigned __int8 v76 = (char *)v74;
    uint64_t v77 = (uint64_t)v116;
    v71(v116, v74, v75);
    swift_storeEnumTagMultiPayload();
    sub_1C0721814(v72, 5, 0, 0, v77, (uint64_t)sub_1C01B158C, 0);
    uint64_t v118 = v76;
    sub_1BFEFEB68(v77, type metadata accessor for FormatVersionRequirement);
    swift_release();
    uint64_t v78 = *(void *)(v60 + 72);
    uint64_t v79 = (uint64_t)v115;
    v71(v115, v67, v106);
    swift_storeEnumTagMultiPayload();
    long long v119 = (char *)(v78 & 0xFFFFFFFFFFFFFFFLL);
    swift_retain();
    sub_1C06C3740(v78, 6, 0, 0, v79, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v79, type metadata accessor for FormatVersionRequirement);
    swift_release();
    swift_beginAccess();
    uint64_t v80 = *(void *)(v60 + 80);
    uint64_t v81 = (uint64_t)v114;
    v71(v114, v67, v106);
    swift_storeEnumTagMultiPayload();
    if (v80)
    {
      char v82 = sub_1C0841F90(v81, 7, 0, 0, (uint64_t)sub_1C01B158C, 0);
      uint64_t v83 = (uint64_t)v113;
      uint64_t v84 = v118;
      if (v82)
      {
        long long v133 = xmmword_1C1557FF0;
        char v134 = 0;
        *(void *)&long long v131 = v80;
        sub_1C088F6F8();
        sub_1C085F050(&qword_1EB86ED10, (void (*)(uint64_t))sub_1C088F6F8);
        sub_1C1520BAC();
      }
    }
    else
    {
      uint64_t v84 = v118;
      uint64_t v83 = (uint64_t)v113;
    }
    sub_1BFEFEB68((uint64_t)v114, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    unint64_t v85 = *(void *)(v60 + 88);
    v71((char *)v83, (uint64_t)v84, v106);
    swift_storeEnumTagMultiPayload();
    if (v85 != 0x8000000000000000)
    {
      sub_1BFE6FA30(v85);
      if (sub_1C0841F90(v83, 8, 0, 0, (uint64_t)sub_1C01B158C, 0))
      {
        long long v131 = xmmword_1C1558010;
        char v132 = 0;
        *(void *)&long long v129 = v85;
        sub_1C088F6F8();
        sub_1C085F050(&qword_1EB86ED10, (void (*)(uint64_t))sub_1C088F6F8);
        sub_1C009DA10();
        sub_1C1520BAC();
        uint64_t v60 = v121;
        uint64_t v83 = (uint64_t)v113;
      }
    }
    sub_1BFEFEB68(v83, type metadata accessor for FormatVersionRequirement);
    sub_1BFF0056C(v85);
    swift_beginAccess();
    char v86 = *(unsigned char *)(v60 + 96);
    if (qword_1EB887650 != -1) {
      swift_once();
    }
    uint64_t v87 = v106;
    uint64_t v88 = __swift_project_value_buffer(v106, (uint64_t)qword_1EB93CAE0);
    uint64_t v89 = (uint64_t)v112;
    v71(v112, v88, v87);
    swift_storeEnumTagMultiPayload();
    if ((v86 & 1) == 0)
    {
      char v90 = sub_1C0841F90(v89, 9, 0, 0, (uint64_t)sub_1C01B158C, 0);
      if (v90)
      {
        long long v129 = xmmword_1C1558020;
        char v130 = 0;
        LOBYTE(v127) = 0;
        sub_1C088F6F8();
        sub_1C085F050(&qword_1EB86ED10, (void (*)(uint64_t))sub_1C088F6F8);
        sub_1C1520BAC();
      }
      uint64_t v60 = v121;
    }
    sub_1BFEFEB68((uint64_t)v112, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    char v91 = *(unsigned char *)(v60 + 97);
    v71(v111, v88, v106);
    swift_storeEnumTagMultiPayload();
    if (v91)
    {
      if (sub_1C0841F90((uint64_t)v111, 10, 0, 0, (uint64_t)sub_1C01B158C, 0))
      {
        long long v127 = xmmword_1C1558030;
        char v128 = 0;
        LOBYTE(v125) = 1;
        sub_1C088F6F8();
        sub_1C085F050(&qword_1EB86ED10, (void (*)(uint64_t))sub_1C088F6F8);
        sub_1C1520BAC();
      }
      uint64_t v60 = v121;
    }
    uint64_t v92 = (uint64_t)v110;
    sub_1BFEFEB68((uint64_t)v111, type metadata accessor for FormatVersionRequirement);
    uint64_t v93 = *(void *)(v60 + 104);
    unsigned __int8 v94 = *(unsigned char *)(v60 + 112);
    v71((char *)v92, v122, v106);
    swift_storeEnumTagMultiPayload();
    sub_1C0721A84(v93, v94, 11, 0, 0, v92, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v92, type metadata accessor for FormatVersionRequirement);
    uint64_t v95 = v106;
    uint64_t v96 = (uint64_t)v53;
    swift_beginAccess();
    uint64_t v97 = *(void *)(v60 + 120);
    uint64_t v98 = qword_1EB887640;
    swift_bridgeObjectRetain();
    if (v98 != -1) {
      swift_once();
    }
    uint64_t v99 = __swift_project_value_buffer(v95, (uint64_t)qword_1EB93CAC8);
    v71(v109, v99, v95);
    swift_storeEnumTagMultiPayload();
    if (*(void *)(v97 + 16) && (sub_1C0841F90((uint64_t)v109, 12, 0, 0, (uint64_t)sub_1C01B158C, 0) & 1) != 0)
    {
      long long v125 = xmmword_1C1558050;
      char v126 = 0;
      uint64_t v100 = swift_bridgeObjectRetain();
      uint64_t v101 = sub_1BFE71F8C(v100);
      swift_bridgeObjectRelease();
      uint64_t v124 = v101;
      swift_retain();
      sub_1BFE726FC((uint64_t *)&v124, sub_1BFE72780, sub_1BFE72EAC);
      swift_release();
      uint64_t v135 = (uint64_t)v124;
      sub_1C088F6F8();
      uint64_t v122 = v102;
      uint64_t v121 = sub_1C085F050(&qword_1EB86ED10, (void (*)(uint64_t))sub_1C088F6F8);
      uint64_t v103 = MEMORY[0x1E4FBB1A0];
      sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v103);
      sub_1C1520BAC();
      swift_release();
    }
    sub_1BFEFEB68((uint64_t)v109, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v104 = (uint64_t)v108;
    v71(v108, (uint64_t)v118, v95);
    swift_storeEnumTagMultiPayload();
    sub_1BFEFEB68(v104, type metadata accessor for FormatVersionRequirement);
    uint64_t v64 = v96;
  }
  return sub_1BFEFEB68(v64, (uint64_t (*)(void))sub_1C088F664);
}