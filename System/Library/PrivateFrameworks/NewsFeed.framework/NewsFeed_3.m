uint64_t sub_1BFE5FD3C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  void *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  char v41;

  v3 = v2;
  v5 = *v2;
  sub_1BFE60AE0();
  v41 = a2;
  v6 = sub_1C15204EC();
  v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  v8 = 1 << *(unsigned char *)(v5 + 32);
  v40 = v5 + 64;
  if (v8 < 64) {
    v9 = ~(-1 << v8);
  }
  else {
    v9 = -1;
  }
  v10 = v9 & *(void *)(v5 + 64);
  v38 = v2;
  v39 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39) {
      break;
    }
    v23 = (void *)(v5 + 64);
    v24 = *(void *)(v40 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v39) {
        goto LABEL_33;
      }
      v24 = *(void *)(v40 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          v3 = v38;
          if ((v41 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        v24 = *(void *)(v40 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            v24 = *(void *)(v40 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        v13 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v21);
    v35 = *v33;
    v34 = v33[1];
    v36 = v33[2];
    if ((v41 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFE60260(v34);
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    result = sub_1C1520E0C();
    v14 = -1 << *(unsigned char *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v16 == v27;
        if (v16 == v27) {
          v16 = 0;
        }
        v26 |= v28;
        v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *v18 = v32;
    v18[1] = v31;
    v19 = (void *)(*(void *)(v7 + 56) + 24 * v17);
    *v19 = v35;
    v19[1] = v34;
    v19[2] = v36;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = (void *)(v5 + 64);
  if ((v41 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *v23 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t FeedJournal.add(entry:)(uint64_t *a1)
{
  v2 = v1;
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  double v5 = *((double *)a1 + 2);
  v6 = *v1;
  swift_bridgeObjectRetain();
  sub_1BFE60260(v4);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1BFE608A0(0, v6[2] + 1, 1, v6);
    v6 = (void *)result;
  }
  unint64_t v9 = v6[2];
  unint64_t v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    uint64_t result = (uint64_t)sub_1BFE608A0((void *)(v8 > 1), v9 + 1, 1, v6);
    v6 = (void *)result;
  }
  v6[2] = v9 + 1;
  v10 = (double *)&v6[3 * v9];
  *((void *)v10 + 4) = v3;
  *((void *)v10 + 5) = v4;
  v10[6] = v5;
  void *v2 = v6;
  if (*(void *)(v3 + 16))
  {
    sub_1BFE60390(v3 + 32, (uint64_t)&v20);
    uint64_t v11 = v20;
    uint64_t v12 = v21;
    swift_bridgeObjectRetain();
    sub_1BFE60270((uint64_t)&v20);
    swift_bridgeObjectRetain();
    sub_1BFE60260(v4);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = v2[1];
    v2[1] = 0x8000000000000000;
    sub_1BFE606D4(v3, v4, v11, v12, isUniquelyReferenced_nonNull_native, v5);
    v2[1] = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BFE60390(v3 + 32, (uint64_t)&v20);
    uint64_t v14 = v20;
    uint64_t v15 = v21;
    swift_bridgeObjectRetain();
    sub_1BFE60270((uint64_t)&v20);
    uint64_t v16 = *(void *)(*v2 + 16) - 1;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = v2[2];
    v2[2] = 0x8000000000000000;
    sub_1BFE606BC(v16, v14, v15, v17);
    v2[2] = v19;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1BFE60260(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFE60270(uint64_t a1)
{
  return a1;
}

uint64_t destroy for FeedJournalGroupResult(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56)) {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + 128;
  switch(*(unsigned char *)(a1 + 192))
  {
    case 0:
    case 1:
    case 2:
      __swift_destroy_boxed_opaque_existential_1(v2);
      goto LABEL_5;
    case 3:
      __swift_destroy_boxed_opaque_existential_1(v2);
      goto LABEL_8;
    case 4:
    case 5:
    case 6:
LABEL_8:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 200)) {
        goto LABEL_9;
      }
      goto LABEL_11;
    default:
LABEL_5:
      if (!*(void *)(a1 + 200)) {
        goto LABEL_11;
      }
LABEL_9:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 208) >= 2uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_11:
      return swift_release();
  }
}

uint64_t sub_1BFE60390(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for FeedJournalGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2 + 32;
  uint64_t v7 = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v7;
    *(void *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 32, v6, v7);
  }
  else
  {
    long long v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 48) = v9;
    *(void *)(a1 + 64) = *(void *)(v6 + 32);
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v10 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v10;
  *(_OWORD *)(a1 + 106) = *(_OWORD *)(a2 + 106);
  uint64_t v11 = *(unsigned __int8 *)(a2 + 192);
  swift_bridgeObjectRetain();
  switch(v11)
  {
    case 1:
      long long v13 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 152) = v13;
      (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 128, a2 + 128);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 192) = 1;
      break;
    case 2:
      long long v14 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 152) = v14;
      (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 128, a2 + 128);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 192) = 2;
      break;
    case 3:
      long long v15 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 152) = v15;
      (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 128, a2 + 128);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      char v16 = 3;
      goto LABEL_12;
    case 4:
      uint64_t v17 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v17;
      char v16 = 4;
      goto LABEL_12;
    case 5:
      uint64_t v18 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v18;
      char v16 = 5;
      goto LABEL_12;
    case 6:
      uint64_t v19 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v19;
      char v16 = 6;
LABEL_12:
      *(unsigned char *)(a1 + 192) = v16;
      swift_bridgeObjectRetain();
      break;
    default:
      long long v12 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 152) = v12;
      (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 128, a2 + 128);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 192) = 0;
      break;
  }
  uint64_t v20 = *(void *)(a2 + 200);
  if (v20)
  {
    *(void *)(a1 + 200) = v20;
    unint64_t v21 = *(void *)(a2 + 208);
    swift_bridgeObjectRetain();
    if (v21 >= 2) {
      swift_bridgeObjectRetain();
    }
    uint64_t v22 = *(void *)(a2 + 216);
    *(void *)(a1 + 208) = v21;
    *(void *)(a1 + 216) = v22;
  }
  else
  {
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
  }
  uint64_t v23 = *(void *)(a2 + 232);
  uint64_t v24 = *(void *)(a2 + 240);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v23;
  *(void *)(a1 + 240) = v24;
  swift_retain();
  return a1;
}

uint64_t sub_1BFE606BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BFE9D7C8(a1, a2, a3, a4, (void (*)(void))sub_1BFEB1454);
}

uint64_t sub_1BFE606D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  uint64_t v7 = (void **)v6;
  long long v14 = (void *)*v6;
  unint64_t v16 = sub_1BFEF2D8C(a3, a4);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      unint64_t v24 = *(void *)(v23 + 8);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFD7F858(v24);
      *(void *)uint64_t v23 = a1;
      *(void *)(v23 + 8) = a2;
      *(double *)(v23 + 16) = a6;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_1BFE5FB64();
    goto LABEL_7;
  }
  sub_1BFE5FD3C(v19, a5 & 1);
  unint64_t v26 = sub_1BFEF2D8C(a3, a4);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_15:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v16 = v26;
  uint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1BFE6084C(v16, a3, a4, a1, a2, v22, a6);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BFE6084C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, double a7)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = (void *)(a6[6] + 16 * result);
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = a6[7] + 24 * result;
  *(void *)uint64_t v8 = a4;
  *(void *)(v8 + 8) = a5;
  *(double *)(v8 + 16) = a7;
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

void *sub_1BFE608A0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB8903E0, (uint64_t)&type metadata for FeedJournalEntry, MEMORY[0x1E4FBBE00]);
      BOOL v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      long long v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      BOOL v10 = (void *)MEMORY[0x1E4FBC860];
      long long v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BFE609E8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFE609E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1BFE60AE0()
{
  if (!qword_1EB890310)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890310);
    }
  }
}

void sub_1BFE60B48()
{
  if (!qword_1EB8714C8)
  {
    sub_1BFEFE510();
    unint64_t v0 = sub_1C151917C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8714C8);
    }
  }
}

uint64_t sub_1BFE60BA0(uint64_t *a1, uint64_t *a2, uint64_t a3, double a4)
{
  *(void *)(v5 + 144) = v4;
  *(double *)(v5 + 136) = a4;
  *(void *)(v5 + 120) = a2;
  *(void *)(v5 + 128) = a3;
  uint64_t v7 = *v4;
  *(void *)(v5 + 152) = *v4;
  uint64_t v8 = *a2;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C0427024(0, &qword_1EB886BB0, (uint64_t (*)(uint64_t))type metadata accessor for FeedContext, MEMORY[0x1E4FBB718]);
  *(void *)(v5 + 160) = swift_task_alloc();
  *(void *)(v5 + 168) = swift_task_alloc();
  *(void *)(v5 + 176) = swift_task_alloc();
  *(void *)(v5 + 184) = *(void *)(v8 + 88);
  *(void *)(v5 + 192) = *(void *)(v8 + 80);
  *(void *)(v5 + 200) = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C151FD8C();
  *(void *)(v5 + 208) = v10;
  *(void *)(v5 + 216) = *(void *)(v10 - 8);
  *(void *)(v5 + 224) = swift_task_alloc();
  *(void *)(v5 + 232) = swift_task_alloc();
  *(void *)(v5 + 240) = swift_task_alloc();
  sub_1C0427024(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928], v9);
  *(void *)(v5 + 248) = swift_task_alloc();
  *(void *)(v5 + 256) = swift_task_alloc();
  *(void *)(v5 + 264) = swift_task_alloc();
  *(void *)(v5 + 272) = swift_task_alloc();
  *(void *)(v5 + 280) = swift_task_alloc();
  *(void *)(v5 + 288) = swift_task_alloc();
  uint64_t v11 = sub_1C151FD8C();
  *(void *)(v5 + 296) = v11;
  *(void *)(v5 + 304) = *(void *)(v11 - 8);
  *(void *)(v5 + 312) = swift_task_alloc();
  *(void *)(v5 + 320) = swift_task_alloc();
  *(void *)(v5 + 328) = swift_task_alloc();
  *(void *)(v5 + 336) = *(void *)(v7 + 88);
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  *(void *)(v5 + 344) = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)(v5 + 352) = AssociatedTypeWitness;
  *(void *)(v5 + 360) = *(void *)(AssociatedTypeWitness - 8);
  *(void *)(v5 + 368) = swift_task_alloc();
  *(void *)(v5 + 376) = swift_task_alloc();
  uint64_t v13 = swift_checkMetadataState();
  *(void *)(v5 + 384) = v13;
  *(void *)(v5 + 392) = *(void *)(v13 - 8);
  *(void *)(v5 + 400) = swift_task_alloc();
  uint64_t v14 = type metadata accessor for FeedServiceFetchResult.Internal();
  *(void *)(v5 + 408) = v14;
  *(void *)(v5 + 416) = *(void *)(v14 - 8);
  *(void *)(v5 + 424) = swift_task_alloc();
  uint64_t v15 = swift_task_alloc();
  uint64_t v16 = *a1;
  *(void *)(v5 + 432) = v15;
  *(void *)(v5 + 440) = v16;
  return MEMORY[0x1F4188298](sub_1BFC82FA0, 0, 0);
}

uint64_t type metadata accessor for FeedServiceFetchResult.Internal()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFE610B4()
{
  uint64_t v44 = v0;
  uint64_t v1 = FeedCursor.nextSlotIndex.getter();
  if ((FeedCursor.reachedEnd.getter() & 1) == 0)
  {
    uint64_t v4 = *(void *)(*(void *)(v0 + 160) + qword_1EB93C740);
    *(void *)(v0 + 136) = v4;
    uint64_t v5 = type metadata accessor for FeedDatabaseGroup();
    sub_1C151ED5C();
    swift_getWitnessTable();
    sub_1C151F12C();
    unint64_t v6 = *(uint64_t **)(v0 + 112);
    *(void *)(v0 + 192) = v6;
    if (v6)
    {
      sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v7 = swift_allocObject();
      uint64_t v8 = MEMORY[0x1E4FBB550];
      *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
      uint64_t v9 = MEMORY[0x1E4FBB5C8];
      *(void *)(v7 + 56) = v8;
      *(void *)(v7 + 64) = v9;
      *(void *)(v7 + 32) = v1;
      uint64_t v10 = MEMORY[0x1C18C6830](v4, v5);
      *(void *)(v7 + 96) = v8;
      *(void *)(v7 + 104) = v9;
      *(void *)(v7 + 72) = v10;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      uint64_t v11 = (void *)swift_task_alloc();
      *(void *)(v0 + 200) = v11;
      *uint64_t v11 = v0;
      v11[1] = sub_1C040F880;
      double v12 = *(double *)(v0 + 168);
      uint64_t v13 = *(void *)(v0 + 152);
      uint64_t v14 = *(void *)(v0 + 160);
      return sub_1C0411264(v13, v6, v14, v12);
    }
    uint64_t v16 = *(void *)(*(void *)(v0 + 160) + qword_1EB93C688);
    *(void *)(v0 + 104) = v1;
    type metadata accessor for FeedGroupEmitter();
    uint64_t v17 = sub_1C151ED5C();
    uint64_t v18 = MEMORY[0x1E4FBB550];
    MEMORY[0x1C18C5F70](v0 + 104, v16, MEMORY[0x1E4FBB550], v17, MEMORY[0x1E4FBB560]);
    uint64_t v19 = *(void *)(v0 + 96);
    *(void *)(v0 + 216) = v19;
    if (v19)
    {
      *(void *)(v0 + 120) = v19;
      swift_getWitnessTable();
      if ((sub_1C151F15C() & 1) == 0)
      {
        sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1C1527210;
        uint64_t v31 = MEMORY[0x1E4FBB5C8];
        *(void *)(v30 + 56) = v18;
        *(void *)(v30 + 64) = v31;
        *(void *)(v30 + 32) = v1;
        uint64_t v42 = 0;
        unint64_t v43 = 0xE000000000000000;
        *(void *)(v0 + 128) = v19;
        swift_getWitnessTable();
        sub_1C1520A3C();
        uint64_t v32 = v42;
        unint64_t v33 = v43;
        *(void *)(v30 + 96) = MEMORY[0x1E4FBB1A0];
        *(void *)(v30 + 104) = sub_1BFE9C558();
        *(void *)(v30 + 72) = v32;
        *(void *)(v30 + 80) = v33;
        sub_1C151F38C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        sub_1BFE72C60(0, (unint64_t *)&unk_1EB87A8F0, v18, MEMORY[0x1E4FBBE00]);
        uint64_t v34 = swift_allocObject();
        *(void *)(v0 + 224) = v34;
        *(_OWORD *)(v34 + 16) = xmmword_1C1529AE0;
        *(void *)(v34 + 32) = v1;
        v35 = (void *)swift_task_alloc();
        *(void *)(v0 + 232) = v35;
        void *v35 = v0;
        v35[1] = sub_1BFC3A860;
        double v36 = *(double *)(v0 + 168);
        uint64_t v37 = *(void *)(v0 + 152);
        v38 = *(uint64_t **)(v0 + 160);
        return sub_1BFC9A480(v37, v19, v38, v34, v36);
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v20 = *(void *)(v0 + 160);
    sub_1BFE57E3C(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C1527210;
    uint64_t v22 = MEMORY[0x1E4FBB5C8];
    *(void *)(v21 + 56) = v18;
    *(void *)(v21 + 64) = v22;
    *(void *)(v21 + 32) = v1;
    uint64_t v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    *(void *)(v0 + 144) = *(void *)(v20 + qword_1EB93C678);
    swift_getWitnessTable();
    sub_1C1520A3C();
    uint64_t v24 = v42;
    unint64_t v23 = v43;
    *(void *)(v21 + 96) = MEMORY[0x1E4FBB1A0];
    *(void *)(v21 + 104) = sub_1BFE9C558();
    *(void *)(v21 + 72) = v24;
    *(void *)(v21 + 80) = v23;
    sub_1C151F38C();
    sub_1C15197BC();
    swift_bridgeObjectRelease();
    v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v25;
    void *v25 = v0;
    v25[1] = sub_1C040F9F8;
    double v26 = *(double *)(v0 + 168);
    uint64_t v27 = *(void *)(v0 + 152);
    v28 = *(uint64_t **)(v0 + 160);
    return sub_1BFD084B8(v27, v28, v26);
  }
  sub_1C0427168(*(void *)(v0 + 176) + 112, v0 + 16);
  if (!*(void *)(v0 + 40))
  {
    sub_1BFE54B20(v0 + 16, &qword_1EB872820, &qword_1EB872818, (uint64_t)&protocol descriptor for FeedOfflineProviding);
LABEL_19:
    **(void **)(v0 + 152) = *(void *)(v0 + 160);
    type metadata accessor for FeedServiceFetchResult.Internal();
    swift_storeEnumTagMultiPayload();
    v41 = *(uint64_t (**)(void))(v0 + 8);
    swift_retain();
    return v41();
  }
  sub_1BFC773DC((long long *)(v0 + 16), v0 + 56);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 56), v2);
  if (!FeedOfflineProviding.isOffline.getter(v2, v3))
  {
LABEL_18:
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
    goto LABEL_19;
  }
  FeedCursor.feedMode.getter(&v42);
  if (v42 == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char v29 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  if (v29) {
    goto LABEL_18;
  }
  type metadata accessor for FeedServiceError();
  swift_getWitnessTable();
  swift_allocError();
  *(void *)uint64_t v39 = 2;
  *(void *)(v39 + 8) = 0;
  *(void *)(v39 + 16) = 0;
  *(void *)(v39 + 24) = 0;
  *(unsigned char *)(v39 + 32) = 6;
  swift_willThrow();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t FeedCursor.shortDescription.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v3 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 272));
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*v3)
  {
    sub_1C1256608(0, (unint64_t *)&qword_1EB87A8C0, (uint64_t (*)(uint64_t))sub_1C00653B4, MEMORY[0x1E4FBBE00]);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C152E280;
    *(void *)(v5 + 32) = 0x696669746E656469;
    *(void *)(v5 + 40) = 0xEA00000000007265;
    uint64_t v6 = *(void *)(v2 + 24);
    uint64_t v7 = MEMORY[0x1E4FBB1A0];
    *(void *)(v5 + 48) = *(void *)(v2 + 16);
    *(void *)(v5 + 56) = v6;
    *(void *)(v5 + 72) = v7;
    *(void *)(v5 + 80) = 1684957547;
    *(void *)(v5 + 88) = 0xE400000000000000;
    *(unsigned char *)(v5 + 96) = *(unsigned char *)(v2 + 32);
    *(void *)(v5 + 120) = &type metadata for FeedCursorKind;
    *(void *)(v5 + 128) = 0x65646F4D64656566;
    *(void *)(v5 + 136) = 0xE800000000000000;
    uint64_t v8 = *(void *)(*(void *)v2 + 80);
    uint64_t v9 = *(void *)(*(void *)v2 + 88);
    swift_bridgeObjectRetain();
    swift_retain();
    FeedServiceConfigType.feedMode.getter(v8, v9, &v51);
    uint64_t v10 = 0x746C7561666564;
    if (v51) {
      uint64_t v10 = 0x656E696C66666FLL;
    }
    *(void *)(v5 + 144) = v10;
    *(void *)(v5 + 152) = 0xE700000000000000;
    uint64_t v11 = *(void *)(v2 + qword_1EB93C690);
    uint64_t v12 = MEMORY[0x1E4FBB550];
    *(void *)(v5 + 168) = v7;
    *(void *)(v5 + 176) = 0x6F72476C61746F74;
    *(void *)(v5 + 184) = 0xEF746E756F437075;
    *(void *)(v5 + 192) = v11;
    *(void *)(v5 + 216) = v12;
    strcpy((char *)(v5 + 224), "openEmitters");
    *(unsigned char *)(v5 + 237) = 0;
    *(_WORD *)(v5 + 238) = -5120;
    uint64_t v13 = *(void *)(v2 + qword_1EB93C678);
    type metadata accessor for FeedGroupEmitter();
    uint64_t v14 = sub_1C151ED5C();
    *(void *)(v5 + 240) = v13;
    *(void *)(v5 + 264) = v14;
    strcpy((char *)(v5 + 272), "stagedEmitters");
    uint64_t v15 = *(void *)(v2 + qword_1EB93C738);
    uint64_t v49 = v4;
    *(unsigned char *)(v5 + 287) = -18;
    *(void *)(v5 + 288) = v15;
    *(void *)(v5 + 312) = v14;
    *(void *)(v5 + 320) = 0x45646574746F6C73;
    *(void *)(v5 + 328) = 0xEF7372657474696DLL;
    uint64_t v16 = *(void *)(v2 + qword_1EB93C688);
    uint64_t v17 = sub_1C151E41C();
    *(void *)(v5 + 336) = v16;
    uint64_t v18 = *(void *)(v2 + qword_1EB93C840);
    *(void *)(v5 + 360) = v17;
    strcpy((char *)(v5 + 368), "expandEmitters");
    *(unsigned char *)(v5 + 383) = -18;
    *(void *)(v5 + 384) = v18;
    *(void *)(v5 + 408) = v14;
    strcpy((char *)(v5 + 416), "nextSlotIndex");
    *(_WORD *)(v5 + 430) = -4864;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)(v5 + 432) = FeedCursor.nextSlotIndex.getter();
    uint64_t v19 = MEMORY[0x1E4FBB550];
    *(void *)(v5 + 456) = MEMORY[0x1E4FBB550];
    *(void *)(v5 + 464) = 0x4564656863616572;
    *(void *)(v5 + 472) = 0xEA0000000000646ELL;
    char v20 = FeedCursor.reachedEnd.getter();
    uint64_t v21 = MEMORY[0x1E4FBB390];
    *(unsigned char *)(v5 + 480) = v20 & 1;
    *(void *)(v5 + 504) = v21;
    *(void *)(v5 + 512) = 0xD000000000000012;
    *(void *)(v5 + 520) = 0x80000001C1605910;
    uint64_t v22 = *(void *)(v2 + qword_1EB93C680);
    uint64_t v23 = type metadata accessor for FeedCursorGroup();
    uint64_t v24 = MEMORY[0x1C18C6830](v22, v23);
    *(void *)(v5 + 552) = v19;
    *(void *)(v5 + 528) = v24;
    *(void *)(v5 + 560) = 0xD000000000000013;
    *(void *)(v5 + 568) = 0x80000001C1605930;
    uint64_t v25 = *(void *)(v2 + qword_1EB93C740);
    uint64_t v26 = type metadata accessor for FeedDatabaseGroup();
    uint64_t v27 = MEMORY[0x1C18C6830](v25, v26);
    *(void *)(v5 + 600) = v19;
    *(void *)(v5 + 576) = v27;
    *(void *)(v5 + 608) = 0x737275437478656ELL;
    *(void *)(v5 + 616) = 0xEA0000000000726FLL;
    *(void *)(v5 + 648) = type metadata accessor for FeedNextCursor();
    *(void *)(v5 + 624) = v49;
    swift_retain();
    sub_1BFF99224(v5);
    a1[3] = sub_1C151870C();
    a1[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_0(a1);
    sub_1C15186FC();
    return swift_release();
  }
  else
  {
    sub_1C1256608(0, (unint64_t *)&qword_1EB87A8C0, (uint64_t (*)(uint64_t))sub_1C00653B4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C15DADA0;
    *(void *)(inited + 32) = 0x696669746E656469;
    *(void *)(inited + 40) = 0xEA00000000007265;
    uint64_t v30 = *(void *)(v2 + 24);
    uint64_t v31 = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = *(void *)(v2 + 16);
    *(void *)(inited + 56) = v30;
    *(void *)(inited + 72) = v31;
    *(void *)(inited + 80) = 1684957547;
    *(void *)(inited + 88) = 0xE400000000000000;
    *(unsigned char *)(inited + 96) = *(unsigned char *)(v2 + 32);
    *(void *)(inited + 120) = &type metadata for FeedCursorKind;
    *(void *)(inited + 128) = 0x65646F4D64656566;
    *(void *)(inited + 136) = 0xE800000000000000;
    uint64_t v32 = *(void *)(*(void *)v2 + 80);
    uint64_t v33 = *(void *)(*(void *)v2 + 88);
    swift_bridgeObjectRetain();
    FeedServiceConfigType.feedMode.getter(v32, v33, &v51);
    uint64_t v34 = 0x746C7561666564;
    if (v51) {
      uint64_t v34 = 0x656E696C66666FLL;
    }
    *(void *)(inited + 144) = v34;
    *(void *)(inited + 152) = 0xE700000000000000;
    *(void *)(inited + 168) = v31;
    *(void *)(inited + 176) = 0x6F72476C61746F74;
    *(void *)(inited + 184) = 0xEF746E756F437075;
    uint64_t v35 = MEMORY[0x1E4FBB550];
    *(void *)(inited + 192) = *(void *)(v2 + qword_1EB93C690);
    *(void *)(inited + 216) = v35;
    strcpy((char *)(inited + 224), "openEmitters");
    *(unsigned char *)(inited + 237) = 0;
    *(_WORD *)(inited + 238) = -5120;
    uint64_t v36 = *(void *)(v2 + qword_1EB93C678);
    type metadata accessor for FeedGroupEmitter();
    uint64_t v37 = sub_1C151ED5C();
    *(void *)(inited + 240) = v36;
    *(void *)(inited + 264) = v37;
    *(void *)(inited + 272) = 0x45646574746F6C73;
    *(void *)(inited + 280) = 0xEF7372657474696DLL;
    uint64_t v38 = *(void *)(v2 + qword_1EB93C688);
    uint64_t v39 = sub_1C151E41C();
    *(void *)(inited + 288) = v38;
    *(void *)(inited + 312) = v39;
    strcpy((char *)(inited + 320), "stagedEmitters");
    *(unsigned char *)(inited + 335) = -18;
    *(void *)(inited + 336) = *(void *)(v2 + qword_1EB93C738);
    *(void *)(inited + 360) = v37;
    strcpy((char *)(inited + 368), "expandEmitters");
    *(unsigned char *)(inited + 383) = -18;
    *(void *)(inited + 384) = *(void *)(v2 + qword_1EB93C840);
    *(void *)(inited + 408) = v37;
    strcpy((char *)(inited + 416), "nextSlotIndex");
    *(_WORD *)(inited + 430) = -4864;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)(inited + 432) = FeedCursor.nextSlotIndex.getter();
    uint64_t v40 = MEMORY[0x1E4FBB550];
    *(void *)(inited + 456) = MEMORY[0x1E4FBB550];
    *(void *)(inited + 464) = 0x4564656863616572;
    *(void *)(inited + 472) = 0xEA0000000000646ELL;
    char v41 = FeedCursor.reachedEnd.getter();
    uint64_t v42 = MEMORY[0x1E4FBB390];
    *(unsigned char *)(inited + 480) = v41 & 1;
    *(void *)(inited + 504) = v42;
    *(void *)(inited + 512) = 0xD000000000000012;
    *(void *)(inited + 520) = 0x80000001C1605910;
    uint64_t v43 = *(void *)(v2 + qword_1EB93C680);
    uint64_t v44 = type metadata accessor for FeedCursorGroup();
    uint64_t v45 = MEMORY[0x1C18C6830](v43, v44);
    *(void *)(inited + 552) = v40;
    *(void *)(inited + 528) = v45;
    *(void *)(inited + 560) = 0xD000000000000013;
    *(void *)(inited + 568) = 0x80000001C1605930;
    uint64_t v46 = *(void *)(v2 + qword_1EB93C740);
    uint64_t v47 = type metadata accessor for FeedDatabaseGroup();
    uint64_t v48 = MEMORY[0x1C18C6830](v46, v47);
    *(void *)(inited + 600) = v40;
    *(void *)(inited + 576) = v48;
    sub_1BFF99224(inited);
    a1[3] = sub_1C151870C();
    a1[4] = swift_getWitnessTable();
    __swift_allocate_boxed_opaque_existential_0(a1);
    return sub_1C15186FC();
  }
}

uint64_t FeedCursor.reachedEnd.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + qword_1EB93C680);
  uint64_t v3 = type metadata accessor for FeedCursorGroup();
  if (MEMORY[0x1C18C6830](v2, v3) == *(void *)(v1 + qword_1EB93C690)) {
    return 1;
  }
  type metadata accessor for FeedDatabaseGroup();
  sub_1C151ED5C();
  swift_getWitnessTable();
  if ((sub_1C151F15C() & 1) == 0) {
    return 0;
  }
  type metadata accessor for FeedGroupEmitter();
  sub_1C151ED5C();
  swift_getWitnessTable();
  if ((sub_1C151F15C() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(v1 + qword_1EB93C688);
  uint64_t v6 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v5 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_23:
    uint64_t v18 = *(void *)(*(void *)(v5 + 48) + 8 * v14);
    swift_bridgeObjectRetain();
    if (v18 < FeedCursor.nextSlotIndex.getter())
    {
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v19 = sub_1C151F15C();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        uint64_t v4 = 0;
LABEL_28:
        swift_release();
        return v4;
      }
    }
  }
  int64_t v15 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v15 >= v10) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v15);
  ++v12;
  if (v16) {
    goto LABEL_22;
  }
  int64_t v12 = v15 + 1;
  if (v15 + 1 >= v10) {
    goto LABEL_27;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_22:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_23;
  }
  int64_t v17 = v15 + 2;
  if (v17 >= v10)
  {
LABEL_27:
    uint64_t v4 = 1;
    goto LABEL_28;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_27;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FeedGroupEmitter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FeedDatabaseGroup()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FeedCursor.nextSlotIndex.getter()
{
  uint64_t v1 = *(void *)(v0 + qword_1EB93C680);
  uint64_t v2 = type metadata accessor for FeedCursorGroup();
  uint64_t result = MEMORY[0x1C18C6830](v1, v2);
  uint64_t v4 = *(void *)(v0 + qword_1EB93C698);
  BOOL v5 = __OFADD__(result, v4);
  uint64_t v6 = result + v4;
  if (v5)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v7 = *(void *)(v0 + qword_1EB93C638);
  uint64_t result = v6 + v7;
  if (__OFADD__(v6, v7)) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t FeedServiceConfigType.feedMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  unint64_t v14 = a3;
  type metadata accessor for FeedServiceOptions(0);
  MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790]();
  int64_t v10 = (char *)&v13 - v9;
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  LOBYTE(v8) = *v6;
  uint64_t result = sub_1BFE62840((uint64_t)v6);
  *unint64_t v14 = v8;
  return result;
}

uint64_t FeedServiceContextType.serviceOptions.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EB882A10 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for FeedServiceOptions(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EB884948);
  return sub_1BFE6289C(v3, a1);
}

uint64_t sub_1BFE62840(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedServiceOptions(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFE6289C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedServiceOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FeedCursorContainer.feedMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v14 - v10;
  FeedCursorContainer.serviceContext.getter(a1, a2, a3, (uint64_t)&v14 - v10);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  FeedServiceContextType.feedMode.getter(AssociatedTypeWitness, AssociatedConformanceWitness, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
}

uint64_t FeedServiceContextType.feedMode.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedServiceOptions(0);
  __n128 v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 8))(a1, a2, v7);
  LOBYTE(a2) = *v9;
  uint64_t result = sub_1BFE62B90((uint64_t)v9, type metadata accessor for FeedServiceOptions);
  *a3 = a2;
  return result;
}

uint64_t sub_1BFE62B90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FeedServiceOptions(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB882A18);
}

uint64_t FeedCursorContainer.serviceContext.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (a1 < 0)
  {
    uint64_t v9 = *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + qword_1EB93C328)
       + *(void *)(**(void **)((a1 & 0x7FFFFFFFFFFFFFFFLL) + qword_1EB93C328) + 96);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
    return v11(a4, v9, AssociatedTypeWitness);
  }
  else
  {
    __n128 v7 = *(void (**)(uint64_t, uint64_t))(a3 + 48);
    swift_retain();
    v7(a2, a3);
    return swift_release();
  }
}

uint64_t sub_1BFE62DDC(void *a1)
{
  return FormatColor.encode(to:)(a1);
}

uint64_t FormatColor.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  v131 = (char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  v130 = (char *)&v124 - v7;
  MEMORY[0x1F4188790](v8);
  v129 = (char *)&v124 - v9;
  MEMORY[0x1F4188790](v10);
  v128 = (char *)&v124 - v11;
  MEMORY[0x1F4188790](v12);
  v127 = (char *)&v124 - v13;
  MEMORY[0x1F4188790](v14);
  v126 = (char *)&v124 - v15;
  MEMORY[0x1F4188790](v16);
  v125 = (char *)&v124 - v17;
  MEMORY[0x1F4188790](v18);
  v124 = (char *)&v124 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v124 - v21;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v124 - v24;
  MEMORY[0x1F4188790](v26);
  v28 = (char *)&v124 - v27;
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v124 - v30;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v34 = (char *)&v124 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v35 = *v2;
  uint64_t v36 = a1[3];
  uint64_t v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v36);
  unint64_t v38 = sub_1BFEB6A24();
  v132 = v34;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatColor, v39, v36, (uint64_t)&type metadata for FormatColor, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v37, (uint64_t)v34, v38, (uint64_t)&off_1F1C39B68);
  switch(v35 >> 60)
  {
    case 1uLL:
      uint64_t v47 = v35 & 0xFFFFFFFFFFFFFFFLL;
      char v48 = *(unsigned char *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v49 = *(void *)(v47 + 24);
      char v50 = *(unsigned char *)(v47 + 32);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v51 = sub_1C151928C();
      uint64_t v52 = __swift_project_value_buffer(v51, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v28, v52, v51);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v53 = v48;
      uint64_t v54 = (uint64_t)v132;
      sub_1C069A6F8(1, v53, v49, v50, (uint64_t)v28);
      goto LABEL_27;
    case 2uLL:
      uint64_t v55 = v35 & 0xFFFFFFFFFFFFFFFLL;
      char v56 = *(unsigned char *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v57 = *(void *)(v55 + 24);
      char v58 = *(unsigned char *)(v55 + 32);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v59 = sub_1C151928C();
      uint64_t v60 = __swift_project_value_buffer(v59, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 16))(v25, v60, v59);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      char v61 = v56;
      uint64_t v54 = (uint64_t)v132;
      sub_1C069A8D8(2, v61, v57, v58, (uint64_t)v25);
      uint64_t v62 = (uint64_t)v25;
      goto LABEL_28;
    case 3uLL:
      uint64_t v63 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v64 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v65 = qword_1EB882D28;
      swift_retain();
      swift_retain();
      if (v65 != -1) {
        swift_once();
      }
      uint64_t v66 = sub_1C151928C();
      uint64_t v67 = __swift_project_value_buffer(v66, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v22, v67, v66);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v68 = v64;
      uint64_t v69 = (uint64_t)v132;
      sub_1C069AAB8(3, v63, v68, (uint64_t)v22);
      sub_1BFEFEB68((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v69, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
      goto LABEL_43;
    case 4uLL:
      uint64_t v70 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v71 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v72 = qword_1EB882D28;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v72 != -1) {
        swift_once();
      }
      uint64_t v73 = sub_1C151928C();
      uint64_t v74 = __swift_project_value_buffer(v73, (uint64_t)qword_1EB93CAB0);
      uint64_t v75 = (uint64_t)v124;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v73 - 8) + 16))(v124, v74, v73);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v76 = (uint64_t)v132;
      sub_1C069AC8C(4, v70, v71, v75);
      sub_1BFEFEB68(v75, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v76, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_bridgeObjectRelease();
      goto LABEL_43;
    case 5uLL:
      uint64_t v77 = v35 & 0xFFFFFFFFFFFFFFFLL;
      double v78 = *(double *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v79 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      char v80 = *(unsigned char *)(v77 + 32);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v81 = sub_1C151928C();
      uint64_t v82 = __swift_project_value_buffer(v81, (uint64_t)qword_1EB93CAB0);
      uint64_t v83 = (uint64_t)v125;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v81 - 8) + 16))(v125, v82, v81);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v84 = v79;
      uint64_t v54 = (uint64_t)v132;
      sub_1C069AE20(5, v84, v80, v83, v78);
      goto LABEL_23;
    case 6uLL:
      long long v85 = *(_OWORD *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v133[0] = *(_OWORD *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v133[1] = v85;
      char v134 = *(unsigned char *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v86 = sub_1C151928C();
      uint64_t v87 = __swift_project_value_buffer(v86, (uint64_t)qword_1EB93CAB0);
      uint64_t v83 = (uint64_t)v126;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v86 - 8) + 16))(v126, v87, v86);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v54 = (uint64_t)v132;
      sub_1C069AFC0(6, v133, v83);
LABEL_23:
      uint64_t v62 = v83;
      goto LABEL_28;
    case 7uLL:
      uint64_t v88 = v35 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v89 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v90 = *(void *)(v88 + 24);
      uint64_t v91 = *(void *)(v88 + 32);
      char v92 = *(unsigned char *)(v88 + 40);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v93 = sub_1C151928C();
      uint64_t v94 = __swift_project_value_buffer(v93, (uint64_t)qword_1EB93CAB0);
      v28 = v127;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v93 - 8) + 16))(v127, v94, v93);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v95 = v89;
      uint64_t v54 = (uint64_t)v132;
      sub_1C069B160(7, v95, v90, v91, v92, (uint64_t)v28);
LABEL_27:
      uint64_t v62 = (uint64_t)v28;
LABEL_28:
      sub_1BFEFEB68(v62, type metadata accessor for FormatVersionRequirement);
      return sub_1BFEFEB68(v54, (uint64_t (*)(void))sub_1BFEFF7D8);
    case 8uLL:
      uint64_t v96 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v97 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v98 = qword_1EB887638;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v98 != -1) {
        swift_once();
      }
      uint64_t v99 = sub_1C151928C();
      uint64_t v100 = __swift_project_value_buffer(v99, (uint64_t)qword_1EB93CA98);
      uint64_t v101 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v99 - 8) + 16))(v128, v100, v99);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v102 = (uint64_t)v132;
      sub_1C069B2FC(8, v96, v97, v101);
      sub_1BFEFEB68(v101, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v102, (uint64_t (*)(void))sub_1BFEFF7D8);
      goto LABEL_42;
    case 9uLL:
      long long v103 = *(_OWORD *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      v135[0] = *(_OWORD *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      v135[1] = v103;
      uint64_t v136 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x30);
      sub_1C05DD304((uint64_t)v135);
      if (qword_1EB887640 != -1) {
        swift_once();
      }
      uint64_t v104 = sub_1C151928C();
      uint64_t v105 = __swift_project_value_buffer(v104, (uint64_t)qword_1EB93CAC8);
      uint64_t v106 = (uint64_t)v129;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 16))(v129, v105, v104);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v107 = (uint64_t)v132;
      sub_1C069B4D0(9, v135, v106);
      sub_1BFEFEB68(v106, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v107, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C05DD344((uint64_t)v135);
    case 0xAuLL:
      uint64_t v108 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v109 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v110 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v111 = qword_1EB887638;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v111 != -1) {
        swift_once();
      }
      uint64_t v112 = sub_1C151928C();
      uint64_t v113 = __swift_project_value_buffer(v112, (uint64_t)qword_1EB93CA98);
      uint64_t v114 = (uint64_t)v130;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v112 - 8) + 16))(v130, v113, v112);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v115 = v110;
      uint64_t v116 = (uint64_t)v132;
      sub_1C069B69C(10, v108, v109, v115, v114);
      goto LABEL_41;
    case 0xBuLL:
      uint64_t v117 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
      uint64_t v118 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      uint64_t v119 = *(void *)((v35 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
      uint64_t v120 = qword_1EB887638;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v120 != -1) {
        swift_once();
      }
      uint64_t v121 = sub_1C151928C();
      uint64_t v122 = __swift_project_value_buffer(v121, (uint64_t)qword_1EB93CA98);
      uint64_t v114 = (uint64_t)v131;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v121 - 8) + 16))(v131, v122, v121);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v123 = v119;
      uint64_t v116 = (uint64_t)v132;
      sub_1C069B860(11, v117, v118, v123, v114);
LABEL_41:
      sub_1BFEFEB68(v114, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v116, (uint64_t (*)(void))sub_1BFEFF7D8);
      swift_release();
LABEL_42:
      swift_bridgeObjectRelease();
LABEL_43:
      uint64_t result = swift_release();
      break;
    default:
      uint64_t v41 = *(void *)(v35 + 16);
      uint64_t v40 = *(void *)(v35 + 24);
      uint64_t v42 = qword_1EB882D28;
      swift_bridgeObjectRetain();
      if (v42 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1C151928C();
      uint64_t v44 = __swift_project_value_buffer(v43, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 16))(v31, v44, v43);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v45 = (uint64_t)v132;
      sub_1C069A530(0, v41, v40, (uint64_t)v31);
      sub_1BFEFEB68((uint64_t)v31, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFEFEB68(v45, (uint64_t (*)(void))sub_1BFEFF7D8);
      break;
  }
  return result;
}

unint64_t sub_1BFE63CC4()
{
  unint64_t result = qword_1EB85B9C0;
  if (!qword_1EB85B9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B9C0);
  }
  return result;
}

unint64_t sub_1BFE63D18()
{
  unint64_t result = qword_1EB85BE88;
  if (!qword_1EB85BE88)
  {
    sub_1BFEFF3E8(255, &qword_1EB878418, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BE88);
  }
  return result;
}

unint64_t sub_1BFE63DA8()
{
  unint64_t result = qword_1EB85BBA0;
  if (!qword_1EB85BBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BBA0);
  }
  return result;
}

unint64_t sub_1BFE63DFC()
{
  unint64_t result = qword_1EB8603A0;
  if (!qword_1EB8603A0)
  {
    sub_1BFEFF3E8(255, &qword_1EB87EFF8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8603A0);
  }
  return result;
}

uint64_t FormatTextNodeStyle.__deallocating_deinit()
{
  FormatTextNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatTextNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68C0(*(void *)(v0 + 56));
  sub_1BFF66964(v0 + 64, (uint64_t)v2, (unint64_t *)&qword_1EB873B18);
  sub_1BFF65020(v2, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
  swift_bridgeObjectRelease();
  sub_1BFEF8738(*(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 232), *(void *)(v0 + 240), *(void *)(v0 + 248), *(void *)(v0 + 256), *(void *)(v0 + 264), *(void *)(v0 + 272), *(unsigned char *)(v0 + 280));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF8750(*(void *)(v0 + 520), *(void *)(v0 + 528));
  sub_1BFEF8750(*(void *)(v0 + 536), *(void *)(v0 + 544));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BFE63F94(void *a1)
{
  return FormatSwitchNode.encode(to:)(a1);
}

uint64_t FormatSwitchNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  char v48 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v49 = (char *)&v48 - v8;
  MEMORY[0x1F4188790](v9);
  char v50 = (char *)&v48 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v48 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v48 - v15;
  sub_1C08BC534();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1C08BC65C();
  uint64_t v23 = v22;
  uint64_t v24 = sub_1C085F050(&qword_1EB891C30, (void (*)(uint64_t))sub_1C08BC65C);
  sub_1BFEFBD78(v4, v25, v20, v4, v23, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v19, v24, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v26 = v2[2];
  uint64_t v27 = v2[3];
  uint64_t v51 = v2;
  uint64_t v28 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v29 = sub_1C151928C();
  uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1EB93CAB0);
  uint64_t v31 = *(void (**)(char *))(*(void *)(v29 - 8) + 16);
  uint64_t v52 = v30;
  v31(v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = v53;
  sub_1C06D6E04(v26, v27, 0, 0, 0, (uint64_t)v16, (uint64_t)sub_1C01B158C, 0);
  if (v32)
  {
    sub_1BFEFEB68((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
    goto LABEL_5;
  }
  char v53 = v19;
  sub_1BFEFEB68((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v33 = v51;
  ((void (*)(char *, uint64_t, uint64_t))v31)(v13, v52, v29);
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = swift_bridgeObjectRetain();
  sub_1C06C1030(v34, 1, 0, 0, (uint64_t)v13, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v35 = (uint64_t)v50;
  ((void (*)(char *, uint64_t, uint64_t))v31)(v50, v52, v29);
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = swift_retain();
  sub_1C071CDB8(v36, 2, 0, 0, v35, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v35, type metadata accessor for FormatVersionRequirement);
  swift_release();
  swift_beginAccess();
  int v38 = *((unsigned __int8 *)v33 + 48);
  uint64_t v39 = (uint64_t)v49;
  ((void (*)(char *, uint64_t, uint64_t))v31)(v49, v52, v29);
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = v29;
  if (v38 == 1)
  {
    uint64_t v19 = v53;
    char v41 = sub_1C083F2E0(v39, 3, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v41)
    {
      long long v54 = xmmword_1C1557FB0;
      char v55 = 0;
      char v56 = 1;
      sub_1C08BC5C8();
      sub_1C085F050(&qword_1EB86E150, (void (*)(uint64_t))sub_1C08BC5C8);
      sub_1C1520BAC();
      uint64_t v42 = v51;
      uint64_t v19 = v53;
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v19 = v53;
  }
  uint64_t v42 = v51;
LABEL_10:
  sub_1BFEFEB68(v39, type metadata accessor for FormatVersionRequirement);
  swift_beginAccess();
  uint64_t v43 = v42[7];
  uint64_t v44 = v42[8];
  uint64_t v45 = qword_1EB8875E0;
  swift_bridgeObjectRetain();
  if (v45 != -1) {
    swift_once();
  }
  uint64_t v46 = __swift_project_value_buffer(v40, (uint64_t)qword_1EB93C9D8);
  uint64_t v47 = (uint64_t)v48;
  ((void (*)(char *, uint64_t, uint64_t))v31)(v48, v46, v40);
  swift_storeEnumTagMultiPayload();
  sub_1C071D028(v43, v44, 4, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
LABEL_5:
  swift_bridgeObjectRelease();
  return sub_1BFEFEB68((uint64_t)v19, (uint64_t (*)(void))sub_1C08BC534);
}

unint64_t sub_1BFE646F0()
{
  unint64_t result = qword_1EB86B100;
  if (!qword_1EB86B100)
  {
    sub_1BFE309D0(255, &qword_1EB88FFF0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase, MEMORY[0x1E4FBB320]);
    sub_1C085F050(&qword_1EB866AF8, (void (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B100);
  }
  return result;
}

uint64_t FormatSystemFont.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v51 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v52 = (char *)&v43 - v6;
  MEMORY[0x1F4188790](v7);
  char v55 = (char *)&v43 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v43 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v43 - v13;
  sub_1C08BDF2C();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = *(double *)v1;
  uint64_t v45 = *(void *)(v1 + 8);
  int v56 = *(unsigned __int16 *)(v1 + 16);
  int v54 = *(unsigned __int8 *)(v1 + 18);
  uint64_t v53 = *(void *)(v1 + 24);
  uint64_t v19 = *(void *)(v1 + 32);
  uint64_t v49 = *(void *)(v1 + 40);
  uint64_t v50 = v19;
  uint64_t v48 = *(void *)(v1 + 48);
  uint64_t v47 = *(void *)(v1 + 56);
  int v46 = *(unsigned __int16 *)(v1 + 64);
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1C08BDE00();
  uint64_t v23 = v22;
  uint64_t v24 = sub_1C085F050(&qword_1EB891C40, (void (*)(uint64_t))sub_1C08BDE00);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatSystemFont, v25, v20, (uint64_t)&type metadata for FormatSystemFont, v23, (uint64_t)&type metadata for FormatVersions.JazzkonC, v21, (uint64_t)v17, v24, (uint64_t)&off_1F1C39B68);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1C151928C();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93CAB0);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
  v28(v14, v27, v26);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = v57;
  sub_1C06D6CB8(0, 0, 0, v18);
  sub_1BFEFEB68((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  if (v29)
  {
    uint64_t v37 = (uint64_t)v17;
  }
  else
  {
    uint64_t v57 = v17;
    v28(v11, v27, v26);
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = v28;
    if (v56 & 0xFF00) != 0xC00 && (sub_1C083F0A4((uint64_t)v11, 1, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      uint64_t v44 = v28;
      long long v61 = xmmword_1C153AB20;
      char v62 = 0;
      uint64_t v58 = v45;
      __int16 v59 = v56;
      sub_1C08BDFC0();
      sub_1C085F050(&qword_1EB86E160, (void (*)(uint64_t))sub_1C08BDFC0);
      sub_1BFE65450();
      sub_1C1520BAC();
      uint64_t v30 = v44;
    }
    sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    uint64_t v31 = (uint64_t)v55;
    v30(v55, v27, v26);
    swift_storeEnumTagMultiPayload();
    if (v54 == 5)
    {
      uint64_t v32 = (uint64_t)v57;
    }
    else
    {
      uint64_t v32 = (uint64_t)v57;
      char v36 = sub_1C083F0A4(v31, 2, 0, 0, (uint64_t)sub_1C01B158C, 0);
      if (v36)
      {
        uint64_t v44 = v30;
        long long v61 = xmmword_1C1557FA0;
        char v62 = 0;
        LOBYTE(v58) = v54;
        sub_1C08BDFC0();
        sub_1C085F050(&qword_1EB86E160, (void (*)(uint64_t))sub_1C08BDFC0);
        sub_1BFE65314();
        sub_1C1520BAC();
        uint64_t v30 = v44;
        uint64_t v32 = (uint64_t)v57;
        uint64_t v31 = (uint64_t)v55;
      }
    }
    sub_1BFEFEB68(v31, type metadata accessor for FormatVersionRequirement);
    uint64_t v33 = (uint64_t)v52;
    v30(v52, v27, v26);
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = *(void *)(v53 + 16);
    swift_bridgeObjectRetain();
    if (v34)
    {
      char v35 = sub_1C083F0A4(v33, 3, 0, 0, (uint64_t)sub_1C01B158C, 0);
      if (v35)
      {
        uint64_t v44 = v30;
        long long v61 = xmmword_1C1557FB0;
        char v62 = 0;
        uint64_t v39 = swift_bridgeObjectRetain();
        uint64_t v40 = sub_1BFE654A4(v39);
        swift_bridgeObjectRelease();
        uint64_t v60 = v40;
        swift_retain();
        sub_1BFE726FC(&v60, sub_1BFE7509C, sub_1BFE750C4);
        swift_release();
        uint64_t v58 = v60;
        sub_1C08BDFC0();
        sub_1C085F050(&qword_1EB86E160, (void (*)(uint64_t))sub_1C08BDFC0);
        sub_1BFE9DEBC(0, &qword_1EB860C80, (uint64_t)&type metadata for FormatFontTrait, MEMORY[0x1E4FBB320]);
        sub_1BFE654B8();
        sub_1C1520BAC();
        swift_release();
        uint64_t v30 = v44;
        uint64_t v32 = (uint64_t)v57;
      }
    }
    sub_1BFEFEB68(v33, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v63[0] = v50;
    v63[1] = v49;
    v63[2] = v48;
    v63[3] = v47;
    __int16 v64 = v46;
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v41 = __swift_project_value_buffer(v26, (uint64_t)qword_1EB93CA98);
    uint64_t v42 = (uint64_t)v51;
    v30(v51, v41, v26);
    swift_storeEnumTagMultiPayload();
    sub_1C071CAE8((uint64_t)v63, 4, 0, 0, v42, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v42, type metadata accessor for FormatVersionRequirement);
    uint64_t v37 = v32;
  }
  return sub_1BFEFEB68(v37, (uint64_t (*)(void))sub_1C08BDF2C);
}

uint64_t sub_1BFE6512C()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465646E65747865;
      break;
    case 2:
      uint64_t result = 0x6E6572646C696863;
      break;
    case 3:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 4:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 5:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFE651DC()
{
  uint64_t result = 1702521203;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E696C616373;
      break;
    case 2:
      uint64_t result = 0x746867696577;
      break;
    case 3:
      uint64_t result = 0x737469617274;
      break;
    case 4:
      uint64_t result = 0x7475626972747461;
      break;
    case 5:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFE65274()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7365736163;
      break;
    case 2:
      uint64_t result = 0x746C7561666564;
      break;
    case 3:
      uint64_t result = 0x73776F726874;
      break;
    case 4:
      uint64_t result = 0x776F726874;
      break;
    case 5:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFE65314()
{
  unint64_t result = qword_1EB85B890;
  if (!qword_1EB85B890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B890);
  }
  return result;
}

uint64_t sub_1BFE65368(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return MEMORY[0x1E4FBC860];
  }
  sub_1C00BC6D4(0, a2, a3, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  size_t v6 = _swift_stdlib_malloc_size((const void *)v5);
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = 2 * v6 - 64;
  uint64_t v7 = sub_1BFD97788(&v9, (unsigned char *)(v5 + 32), v3, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v7 != (void *)v3)
  {
    __break(1u);
    return MEMORY[0x1E4FBC860];
  }
  return v5;
}

unint64_t sub_1BFE65450()
{
  unint64_t result = qword_1EB85B940;
  if (!qword_1EB85B940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B940);
  }
  return result;
}

uint64_t sub_1BFE654A4(uint64_t a1)
{
  return sub_1BFE65368(a1, (unint64_t *)&unk_1EB860E30, (uint64_t)&type metadata for FormatFontTrait);
}

unint64_t sub_1BFE654B8()
{
  unint64_t result = qword_1EB860C88;
  if (!qword_1EB860C88)
  {
    sub_1BFE9DEBC(255, &qword_1EB860C80, (uint64_t)&type metadata for FormatFontTrait, MEMORY[0x1E4FBB320]);
    sub_1C0080654();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860C88);
  }
  return result;
}

uint64_t sub_1BFE6554C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatExpression.init(from:)(a1, a2);
}

uint64_t FormatExpression.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v84 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v69 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_28:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    uint64_t v65 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v65);
  }
  uint64_t v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v11 = sub_1C1520EAC();
  char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  uint64_t v13 = v9;
  if (v12)
  {
    uint64_t v14 = sub_1C152070C();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      uint64_t v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        unint64_t v17 = *v16;
        if (*v16 >= 4) {
          break;
        }
        v16 += 2;
        if (!--v15) {
          goto LABEL_7;
        }
      }
      uint64_t v22 = a1;
      uint64_t v23 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v17;
      *(void *)(v24 + 16) = &unk_1F1B84CC8;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      uint64_t v25 = v23;
      a1 = v22;
      sub_1C0257108(v25, v17);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v6);
      goto LABEL_28;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE66084();
  *(_OWORD *)uint64_t v75 = 0uLL;
  sub_1C15206EC();
  double v18 = a1;
  uint64_t v19 = v84;
  switch((char)v83)
  {
    case 1:
      long long v83 = xmmword_1C152C800;
      sub_1BFE660D8();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      long long v74 = *(_OWORD *)v75;
      long long v26 = *(_OWORD *)&v75[16];
      __int16 v27 = v76;
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = v74;
      *(_OWORD *)(v28 + 32) = v26;
      *(_WORD *)(v28 + 48) = v27;
      unint64_t v21 = v28 | 0x1000000000000000;
      break;
    case 2:
      *(_OWORD *)uint64_t v75 = xmmword_1C152C800;
      sub_1BFE66378();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      uint64_t v29 = v83;
      char v30 = BYTE8(v83);
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = v29;
      *(unsigned char *)(v31 + 24) = v30;
      unint64_t v21 = v31 | 0x2000000000000000;
      break;
    case 3:
      long long v83 = xmmword_1C152C800;
      sub_1BFE661D4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      uint64_t v32 = *(void *)v75;
      uint64_t v33 = *(void *)&v75[24];
      uint64_t v34 = v76;
      long long v74 = *(_OWORD *)&v75[8];
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v32;
      *(_OWORD *)(v35 + 24) = v74;
      *(void *)(v35 + 40) = v33;
      *(void *)(v35 + 48) = v34;
      unint64_t v21 = v35 | 0x3000000000000000;
      break;
    case 4:
      long long v83 = xmmword_1C152C800;
      sub_1BFE6612C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      long long v73 = *(_OWORD *)&v75[16];
      long long v74 = *(_OWORD *)v75;
      long long v72 = v76;
      long long v71 = v77;
      long long v70 = v78;
      long long v69 = v79;
      uint64_t v36 = v80;
      __int16 v37 = v81;
      char v38 = v82;
      uint64_t v39 = swift_allocObject();
      long long v40 = v73;
      *(_OWORD *)(v39 + 16) = v74;
      *(_OWORD *)(v39 + 32) = v40;
      long long v41 = v71;
      *(_OWORD *)(v39 + 48) = v72;
      *(_OWORD *)(v39 + 64) = v41;
      long long v42 = v69;
      *(_OWORD *)(v39 + 80) = v70;
      *(_OWORD *)(v39 + 96) = v42;
      *(void *)(v39 + 112) = v36;
      *(unsigned char *)(v39 + 122) = v38;
      unint64_t v21 = v39 | 0x4000000000000000;
      *(_WORD *)(v39 + 120) = v37;
      break;
    case 5:
      long long v83 = xmmword_1C152C800;
      sub_1BFE66228();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      long long v43 = *(_OWORD *)v75;
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = v43;
      unint64_t v21 = v44 | 0x5000000000000000;
      break;
    case 6:
      long long v83 = xmmword_1C152C800;
      sub_1BFE66324();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      long long v45 = *(_OWORD *)v75;
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v45;
      unint64_t v21 = v46 | 0x6000000000000000;
      break;
    case 7:
      *(_OWORD *)uint64_t v75 = xmmword_1C152C800;
      sub_1BFE662D0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      uint64_t v47 = v83;
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = v47;
      unint64_t v21 = v48 | 0x7000000000000000;
      break;
    case 8:
      long long v83 = xmmword_1C152C800;
      sub_1BFE66180();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      long long v49 = *(_OWORD *)v75;
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = v49;
      unint64_t v21 = v50 | 0x8000000000000000;
      break;
    case 9:
      long long v83 = xmmword_1C152C800;
      sub_1BFE6627C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      long long v51 = *(_OWORD *)v75;
      uint64_t v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = v51;
      unint64_t v21 = v52 | 0x9000000000000000;
      break;
    case 10:
      *(_OWORD *)uint64_t v75 = xmmword_1C152C800;
      sub_1BFDEC93C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      uint64_t v53 = v83;
      __int16 v54 = WORD4(v83);
      char v55 = BYTE10(v83);
      uint64_t v56 = swift_allocObject();
      *(void *)(v56 + 16) = v53;
      *(_WORD *)(v56 + 24) = v54;
      *(unsigned char *)(v56 + 26) = v55;
      unint64_t v21 = v56 | 0xA000000000000000;
      break;
    case 11:
      *(_OWORD *)uint64_t v75 = xmmword_1C152C800;
      sub_1C088410C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      char v57 = v83;
      uint64_t v58 = swift_allocObject();
      *(unsigned char *)(v58 + 16) = v57;
      unint64_t v21 = v58 | 0xB000000000000000;
      break;
    case 12:
      long long v83 = xmmword_1C152C800;
      sub_1C0884070();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      long long v73 = *(_OWORD *)&v75[16];
      long long v74 = *(_OWORD *)v75;
      uint64_t v59 = v76;
      char v60 = BYTE8(v76);
      uint64_t v61 = swift_allocObject();
      long long v62 = v73;
      *(_OWORD *)(v61 + 16) = v74;
      *(_OWORD *)(v61 + 32) = v62;
      *(void *)(v61 + 48) = v59;
      *(unsigned char *)(v61 + 56) = v60;
      unint64_t v21 = v61 | 0xC000000000000000;
      break;
    case 13:
      long long v83 = xmmword_1C152C800;
      sub_1BFE66474();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      uint64_t v63 = *(void *)v75;
      long long v74 = *(_OWORD *)&v75[8];
      uint64_t v64 = swift_allocObject();
      *(void *)(v64 + 16) = v63;
      *(_OWORD *)(v64 + 24) = v74;
      unint64_t v21 = v64 | 0xD000000000000000;
      break;
    case 14:
      long long v83 = xmmword_1C152C800;
      sub_1BFE66420();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      long long v67 = *(_OWORD *)v75;
      uint64_t v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = v67;
      unint64_t v21 = v68 | 0xE000000000000000;
      break;
    default:
      *(_OWORD *)uint64_t v75 = xmmword_1C152C800;
      sub_1BFE663CC();
      sub_1C152065C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      if (v83 == 4) {
        char v20 = 3;
      }
      else {
        char v20 = v83;
      }
      unint64_t v21 = swift_allocObject();
      *(unsigned char *)(v21 + 16) = v20;
      break;
  }
  *uint64_t v19 = v21;
  uint64_t v65 = (uint64_t)v18;
  return __swift_destroy_boxed_opaque_existential_1(v65);
}

unint64_t sub_1BFE66084()
{
  unint64_t result = qword_1EB887D18;
  if (!qword_1EB887D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB887D18);
  }
  return result;
}

unint64_t sub_1BFE660D8()
{
  unint64_t result = qword_1EB8775E0;
  if (!qword_1EB8775E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8775E0);
  }
  return result;
}

unint64_t sub_1BFE6612C()
{
  unint64_t result = qword_1EB877B40;
  if (!qword_1EB877B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877B40);
  }
  return result;
}

unint64_t sub_1BFE66180()
{
  unint64_t result = qword_1EB876570;
  if (!qword_1EB876570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876570);
  }
  return result;
}

unint64_t sub_1BFE661D4()
{
  unint64_t result = qword_1EB876AF8;
  if (!qword_1EB876AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876AF8);
  }
  return result;
}

unint64_t sub_1BFE66228()
{
  unint64_t result = qword_1EB878360;
  if (!qword_1EB878360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878360);
  }
  return result;
}

unint64_t sub_1BFE6627C()
{
  unint64_t result = qword_1EB8760C8;
  if (!qword_1EB8760C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8760C8);
  }
  return result;
}

unint64_t sub_1BFE662D0()
{
  unint64_t result = qword_1EB876870;
  if (!qword_1EB876870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876870);
  }
  return result;
}

unint64_t sub_1BFE66324()
{
  unint64_t result = qword_1EB87FCD8;
  if (!qword_1EB87FCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87FCD8);
  }
  return result;
}

unint64_t sub_1BFE66378()
{
  unint64_t result = qword_1EB877500;
  if (!qword_1EB877500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB877500);
  }
  return result;
}

unint64_t sub_1BFE663CC()
{
  unint64_t result = qword_1EB878180;
  if (!qword_1EB878180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878180);
  }
  return result;
}

unint64_t sub_1BFE66420()
{
  unint64_t result = qword_1EB889D70;
  if (!qword_1EB889D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889D70);
  }
  return result;
}

unint64_t sub_1BFE66474()
{
  unint64_t result = qword_1EB878580;
  if (!qword_1EB878580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878580);
  }
  return result;
}

uint64_t sub_1BFE664C8(char *a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void *))(v2 + 16);
  char v6 = *a1;
  v5[2] = &v6;
  return v3(a2, v5);
}

uint64_t sub_1BFE66514(uint64_t (*a1)(void *), uint64_t a2)
{
  return sub_1BFE66520(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24));
}

uint64_t sub_1BFE66520(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, void (*a4)(void))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void *)(*(void *)(result + 24) + 16);
    if (v8)
    {
      uint64_t v14 = a4;
      uint64_t v9 = (void *)(swift_bridgeObjectRetain() + 56);
      while (1)
      {
        uint64_t v10 = *(v9 - 3);
        uint64_t v11 = *(v9 - 2);
        char v12 = *((unsigned char *)v9 - 8);
        uint64_t v13 = *v9;
        v17[0] = v10;
        v17[1] = v11;
        char v18 = v12;
        uint64_t v19 = v13;
        v15[0] = v10;
        v15[1] = v11;
        char v16 = v12;
        sub_1BFF5B7E0(v10, v11, v12);
        swift_retain();
        sub_1BFF5B7E0(v10, v11, v12);
        LOBYTE(v13) = a1(v15);
        sub_1BFF5B7CC(v10, v11, v12);
        if (v13) {
          break;
        }
        v9 += 4;
        sub_1BFF5B7CC(v10, v11, v12);
        swift_release();
        if (!--v8)
        {
          swift_bridgeObjectRelease();
          a4 = v14;
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      v14(&v19);
      swift_release();
      sub_1BFF5B7CC(v10, v11, v12);
    }
    else
    {
LABEL_7:
      v17[0] = *(void *)(v7 + 32);
      swift_retain();
      a4(v17);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_1BFE666D0(uint64_t *a1)
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[2] - 8) + 80);
  unint64_t v3 = (*(void *)(*(void *)(v1[2] - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BFE66778(a1, v1[4], v1[5], v1[6], (uint64_t)v1 + v2, *(uint64_t *)((char *)v1 + v3), *(uint64_t *)((char *)v1 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t *)((char *)v1 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), v1[2], v1[3]);
}

void sub_1BFE66778(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    uint64_t v17 = MEMORY[0x1C18C9C60](a3 + 16);
    if (!v17)
    {
LABEL_5:
      swift_release();
      return;
    }
    char v18 = (void *)v17;
    swift_beginAccess();
    uint64_t v19 = MEMORY[0x1C18C9C60](a4 + 16);
    if (v19)
    {
      char v20 = (void *)v19;
      uint64_t v21 = v16;
      sub_1BFE69538(a5, v18, &v21, a6, a7, v19, a8, a9, a10);

      goto LABEL_5;
    }
    swift_release();
  }
}

uint64_t sub_1BFE66898(uint64_t a1)
{
  return sub_1BFE668CC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), **(unsigned char **)(v1 + 16)) & 1;
}

uint64_t sub_1BFE668CC(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4)
{
  uint64_t v42 = a2;
  int v43 = a4;
  sub_1BFE66DE0();
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C151A7DC();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v40 - v15;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v17 - 8);
  MEMORY[0x1F4188790](v18);
  char v20 = (char *)&v40 - v19;
  __n128 v22 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v40 - v23;
  uint64_t v44 = v7;
  uint64_t v45 = v25;
  long long v41 = v13;
  if (a3)
  {
    if (a3 == 1)
    {
      *uint64_t v16 = a1 & 1;
      long long v26 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v16 = a1;
      long long v26 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t, __n128))(v11 + 104))(v16, *v26, v10, v22);
  }
  else
  {
    uint64_t v27 = v42;
    *(void *)uint64_t v16 = a1;
    *((void *)v16 + 1) = v27;
    (*(void (**)(char *, void, uint64_t, __n128))(v11 + 104))(v16, *MEMORY[0x1E4FAC010], v10, v22);
    swift_bridgeObjectRetain();
  }
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v28(v24, v16, v10);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v30 = 1;
  v29(v24, 0, 1, v10);
  if (v43 != 2)
  {
    sub_1C151EDAC();
    uint64_t v30 = 0;
  }
  v29(v20, v30, 1, v10);
  uint64_t v31 = (uint64_t)&v9[*(int *)(v44 + 48)];
  sub_1BFF0A690((uint64_t)v24, (uint64_t)v9, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v20, v31, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v32((uint64_t)v9, 1, v10) == 1)
  {
    sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
    int v33 = v32(v31, 1, v10);
    if (v33 == 1) {
      uint64_t v34 = (uint64_t (*)(void))sub_1BFF0A6F8;
    }
    else {
      uint64_t v34 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    if (v33 == 1) {
      char v35 = -1;
    }
    else {
      char v35 = 0;
    }
  }
  else
  {
    sub_1BFF0A690((uint64_t)v9, v45, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v32(v31, 1, v10) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v45, v10);
      char v35 = 0;
      uint64_t v34 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v36 = v41;
      v28(v41, (char *)v31, v10);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      uint64_t v37 = v45;
      char v35 = sub_1C151E5CC();
      char v38 = *(void (**)(char *, uint64_t))(v11 + 8);
      v38(v36, v10);
      uint64_t v34 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v20, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v24, (uint64_t (*)(void))sub_1BFF0A6F8);
      v38((char *)v37, v10);
    }
  }
  sub_1BFEFEBC8((uint64_t)v9, v34);
  return v35 & 1;
}

void sub_1BFE66DE0()
{
  if (!qword_1EB885150)
  {
    sub_1BFF0A6F8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB885150);
    }
  }
}

uint64_t FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:resizingProvider:actionSenderHandler:)(uint64_t a1, double *a2, char *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  memset(v10, 0, sizeof(v10));
  return FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:sourceItemData:resizingProvider:actionSenderHandler:)(a1, a2, a3, a4, (uint64_t)v10, a5, a6, a7, a8, a9);
}

void sub_1BFE66E88(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void *sub_1BFE66EEC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFF77004(a1, a2, a3, a4, &qword_1EB884C60, (uint64_t (*)(uint64_t))sub_1BFF9B188);
}

uint64_t sub_1BFE66F0C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v11 = (uint64_t *)(v5 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (!*(void *)(*v11 + 16)) {
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_1BFEF2D8C(a1, a2);
  if ((v14 & 1) == 0)
  {
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    swift_endAccess();
LABEL_26:
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
    type metadata accessor for FormatLayoutViewContainer();
    swift_bridgeObjectRetain();
    sub_1C151E3CC();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C152040C();
    __break(1u);
    return result;
  }
  uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  unint64_t v16 = *(void *)(v15 + 56);
  swift_retain();
  uint64_t v17 = (void *)sub_1BFFCB630(v16);
  swift_release();
  a4(0);
  uint64_t v27 = swift_dynamicCastClass();
  if (!v27)
  {
    swift_release();

    goto LABEL_26;
  }
  uint64_t v18 = *(void **)(v15 + 64);
  objc_msgSend(v18, sel_setAutoresizingMask_, 0);
  if (a3)
  {
    swift_retain();
    objc_msgSend(v18, sel_setAutoresizingMask_, sub_1C0D7FB8C());
    swift_release();
  }
  unint64_t v19 = *(void *)(v15 + 72);
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C15204BC();
    if (v20) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v20)
    {
LABEL_8:
      if (v20 >= 1)
      {
        uint64_t v21 = 0;
        while (1)
        {
          if ((v19 & 0xC000000000000001) != 0)
          {
            id v22 = (id)MEMORY[0x1C18C7CB0](v21, v19);
            if (a3) {
              goto LABEL_16;
            }
          }
          else
          {
            id v22 = *(id *)(v19 + 8 * v21 + 32);
            if (a3)
            {
LABEL_16:
              swift_retain();
              uint64_t v23 = sub_1C00BA004(a5);
              type metadata accessor for FormatResizeAuto();
              uint64_t v24 = swift_allocObject();
              swift_beginAccess();
              *(void *)(v24 + 16) = v23;
              swift_release();
              objc_msgSend(v22, sel_setAutoresizingMask_, 0);
              swift_retain();
              objc_msgSend(v22, sel_setAutoresizingMask_, sub_1C0D7FB8C());

              swift_release_n();
              goto LABEL_11;
            }
          }
          objc_msgSend(v22, sel_setAutoresizingMask_, 0);

LABEL_11:
          if (v20 == ++v21) {
            goto LABEL_18;
          }
        }
      }
      __break(1u);
      goto LABEL_23;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  if (((*(void *)(v15 + 56) >> 59) & 0x1E | (*(void *)(v15 + 56) >> 2) & 1) == 6)
  {
    uint64_t v25 = *(void **)(v15 + 64);
    swift_bridgeObjectRetain();
    v25;
  }
  else
  {
    *(id *)(v15 + 64);
    sub_1BFE67330(MEMORY[0x1E4FBC860]);
  }
  swift_release();
  return v27;
}

unint64_t sub_1BFE67330(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0192490(0, (unint64_t *)&unk_1EB87A3C0, (void (*)(void))sub_1C006A604);
  unint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    unsigned __int8 v5 = *(v4 - 16);
    uint64_t v6 = (void *)*((void *)v4 - 1);
    char v7 = *v4;
    id v8 = v6;
    unint64_t result = sub_1C1051F60(v5);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    uint64_t v11 = v2[7] + 16 * result;
    *(void *)uint64_t v11 = v6;
    *(unsigned char *)(v11 + 8) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BFE6746C(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  sub_1C151F91C();
  uint64_t v5 = sub_1BFE67B44();
  uint64_t v7 = v6;
  type metadata accessor for FormatVisibilityDataValue();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = a2;
  swift_beginAccess();
  swift_retain();
  id v9 = a2;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = 0x8000000000000000;
  sub_1BFE67570(v8, v5, v7, isUniquelyReferenced_nonNull_native);
  *(void *)(v2 + 16) = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1BFE67570(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BFEF2C04(a1, a2, a3, a4, (void (*)(void))sub_1BFF861A8);
}

uint64_t type metadata accessor for FormatVisibilityDataValue()
{
  return self;
}

uint64_t type metadata accessor for FormatSponsoredBannerData()
{
  uint64_t result = qword_1EB882AD8;
  if (!qword_1EB882AD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BFE675F8(uint64_t a1)
{
  uint64_t v17 = MEMORY[0x1E4FBC868];
  swift_beginAccess();
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (v6) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v11 = v8 + 1;
  if (!__OFADD__(v8, 1))
  {
    if (v11 < v7)
    {
      unint64_t v12 = *(void *)(v3 + 8 * v11);
      ++v8;
      if (v12) {
        goto LABEL_20;
      }
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (v12) {
        goto LABEL_20;
      }
      int64_t v8 = v11 + 2;
      if (v11 + 2 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (v12)
      {
LABEL_20:
        unint64_t v6 = (v12 - 1) & v12;
        for (unint64_t i = __clz(__rbit64(v12)) + (v8 << 6); ; unint64_t i = v9 | (v8 << 6))
        {
          uint64_t v14 = *(void *)(*(void *)(v2 + 56) + 8 * i);
          swift_retain();
          char v15 = sub_1BFE677D8(a1, v14, &v17);
          id v16 = *(id *)(v14 + 24);
          if (v15)
          {
            sub_1C151F91C();

            swift_release();
            if (!v6) {
              goto LABEL_7;
            }
          }
          else
          {
            sub_1C151F91C();
            swift_release();

            if (!v6) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v9 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      int64_t v13 = v11 + 3;
      if (v13 < v7)
      {
        unint64_t v12 = *(void *)(v3 + 8 * v13);
        if (v12)
        {
          int64_t v8 = v13;
          goto LABEL_20;
        }
        while (1)
        {
          int64_t v8 = v13 + 1;
          if (__OFADD__(v13, 1)) {
            goto LABEL_26;
          }
          if (v8 >= v7) {
            break;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          ++v13;
          if (v12) {
            goto LABEL_20;
          }
        }
      }
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
LABEL_26:
  __break(1u);
}

uint64_t sub_1BFE677D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (!a2) {
    return 1;
  }
  unint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = sub_1BFE67B44();
  uint64_t v9 = *a3;
  if (*(void *)(*a3 + 16))
  {
    uint64_t v10 = v7;
    uint64_t v11 = v8;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v12 = sub_1BFEF2D8C(v10, v11);
    if (v13)
    {
      uint64_t v14 = *(unsigned __int8 *)(*(void *)(v9 + 56) + v12);
      swift_release();
LABEL_27:
      swift_bridgeObjectRelease();
      return v14;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  sub_1BFE68024(&v48);
  unint64_t v15 = v48;
  if (!(v48 >> 62))
  {
    uint64_t v21 = *(void *)(v48 + 24);
    uint64_t v43 = *(void *)(v48 + 16);
    uint64_t v44 = sub_1BFE67B44();
    uint64_t v23 = v22;
    swift_beginAccess();
    uint64_t v24 = *(void *)(a1 + 16);
    uint64_t v25 = *(void *)(v24 + 16);
    swift_bridgeObjectRetain();
    if (v25)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v26 = sub_1BFEF2D8C(v43, v21);
      if (v27)
      {
        uint64_t v25 = *(void *)(*(void *)(v24 + 56) + 8 * v26);
        swift_retain();
      }
      else
      {
        uint64_t v25 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    char v32 = sub_1BFE677D8(a1, v25, a3) & 1;
    swift_release();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v45 = *a3;
    *a3 = 0x8000000000000000;
    sub_1BFE6800C(v32, v44, v23, isUniquelyReferenced_nonNull_native);
    *a3 = v45;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (v48 >> 62 == 1)
  {
LABEL_20:
    sub_1BFF0056C(v15);
    goto LABEL_24;
  }
  if (v48 == 0x8000000000000000)
  {
    uint64_t v16 = sub_1BFE67B44();
    uint64_t v18 = v17;
    unint64_t v19 = *(void **)(a2 + 24);
    swift_bridgeObjectRetain();
    if (objc_msgSend(v19, sel_isHidden))
    {
      char v20 = 1;
    }
    else
    {
      objc_msgSend(v19, sel_frame);
      char v20 = sub_1C151F83C();
    }
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v47 = *a3;
    *a3 = 0x8000000000000000;
    sub_1BFE6800C(v20 & 1, v16, v18, v34);
    *a3 = v47;
  }
  else
  {
    uint64_t v28 = sub_1BFE67B44();
    uint64_t v30 = v29;
    swift_bridgeObjectRetain();
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v46 = *a3;
    *a3 = 0x8000000000000000;
    sub_1BFE6800C(1, v28, v30, v31);
    *a3 = v46;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_24:
  unint64_t v48 = v6;
  uint64_t v35 = sub_1BFE67B44();
  uint64_t v37 = *a3;
  if (*(void *)(*a3 + 16))
  {
    uint64_t v38 = v35;
    uint64_t v39 = v36;
    swift_bridgeObjectRetain();
    unint64_t v40 = sub_1BFEF2D8C(v38, v39);
    if (v41)
    {
      uint64_t v14 = *(unsigned __int8 *)(*(void *)(v37 + 56) + v40);
      swift_release();
      goto LABEL_27;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1BFE67B44()
{
  uint64_t v1 = *v0;
  switch(((unint64_t)*v0 >> 59) & 0x1E | (*v0 >> 2) & 1)
  {
    case 1uLL:
    case 5uLL:
    case 7uLL:
    case 0x11uLL:
      v1 &= 0xFFFFFFFFFFFFFFBuLL;
      goto LABEL_3;
    case 2uLL:
      uint64_t v3 = (unint64_t *)&unk_1EB887678;
      uint64_t v4 = (unint64_t *)&unk_1EB88F820;
      uint64_t v5 = (void (*)(uint64_t))type metadata accessor for FormatViewData;
      unint64_t v6 = type metadata accessor for FormatViewNodeLayoutAttributes;
      goto LABEL_16;
    case 3uLL:
      sub_1BFE6B6A0(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
      uint64_t v8 = *(void *)(swift_projectBox() + *(int *)(v7 + 48));
      goto LABEL_8;
    case 4uLL:
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      break;
    case 6uLL:
      uint64_t v8 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
LABEL_8:
      uint64_t v9 = *(void *)(v8 + 16);
      goto LABEL_19;
    case 8uLL:
      sub_1C0498748();
      uint64_t v11 = swift_projectBox() + *(int *)(v10 + 48);
      return *(void *)v11;
    case 9uLL:
      unint64_t v12 = (unint64_t *)&unk_1EA1A5A90;
      char v13 = type metadata accessor for FormatMicaData;
      uint64_t v14 = type metadata accessor for FormatMicaNodeLayoutAttributes;
      goto LABEL_21;
    case 0xAuLL:
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
      break;
    case 0xBuLL:
      uint64_t v3 = (unint64_t *)&unk_1EA1A5A80;
      uint64_t v4 = (unint64_t *)&unk_1EA19BBF8;
      uint64_t v5 = (void (*)(uint64_t))type metadata accessor for FormatVideoData;
      unint64_t v6 = type metadata accessor for FormatVideoNodeLayoutAttributes;
      goto LABEL_16;
    case 0xCuLL:
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
      break;
    case 0xDuLL:
      unint64_t v12 = (unint64_t *)&qword_1EA1AE190;
      char v13 = type metadata accessor for FormatShareAttributionData;
      uint64_t v14 = type metadata accessor for FormatShareAttributionNodeLayoutAttributes;
      goto LABEL_21;
    case 0xEuLL:
      uint64_t v3 = (unint64_t *)&qword_1EA19BBC8;
      uint64_t v4 = (unint64_t *)&unk_1EA1A5A70;
      uint64_t v5 = (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData;
      unint64_t v6 = type metadata accessor for FormatVideoPlayerNodeLayoutAttributes;
LABEL_16:
      sub_1BFE6B6A0(0, v3, v5, v4, (uint64_t (*)(uint64_t))v6);
      goto LABEL_22;
    case 0xFuLL:
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
      break;
    case 0x10uLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
      uint64_t v9 = *(void *)(*(void *)(swift_projectBox() + *(int *)(v16 + 48))
                     + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
LABEL_19:
      uint64_t v11 = v9 + 48;
      return *(void *)v11;
    case 0x12uLL:
      unint64_t v12 = (unint64_t *)&unk_1EB884B38;
      char v13 = type metadata accessor for FormatSponsoredBannerData;
      uint64_t v14 = type metadata accessor for FormatSponsoredBannerLayoutAttributes;
LABEL_21:
      sub_1C049850C(0, v12, (void (*)(uint64_t))v13, (void (*)(uint64_t))v14);
LABEL_22:
      uint64_t v2 = *(void *)(swift_projectBox() + *(int *)(v15 + 48));
      break;
    default:
LABEL_3:
      uint64_t v2 = *(void *)(v1 + 24);
      break;
  }
  uint64_t v11 = v2 + 16;
  return *(void *)v11;
}

uint64_t sub_1BFE67E90(char a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void))
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1BFEF2D8C(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 < result || (a4 & 1) == 0)
  {
    if (v19 < result || (a4 & 1) != 0)
    {
      sub_1BFE68408(result, a4 & 1, a5);
      uint64_t result = sub_1BFEF2D8C(a2, a3);
      if ((v18 & 1) != (v20 & 1))
      {
LABEL_17:
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      unint64_t v14 = result;
    }
    else
    {
      uint64_t result = (uint64_t)sub_1C1073740(a5);
    }
  }
  char v21 = a1 & 1;
  uint64_t v22 = (void *)*v7;
  if (v18)
  {
    *(unsigned char *)(v22[7] + v14) = v21;
    return result;
  }
  v22[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v23 = (uint64_t *)(v22[6] + 16 * v14);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(unsigned char *)(v22[7] + v14) = v21;
  uint64_t v24 = v22[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v26;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFE6800C(char a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BFE67E90(a1, a2, a3, a4, (void (*)(void))sub_1BFE68714);
}

unint64_t sub_1BFE68024@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  switch(((unint64_t)*v1 >> 59) & 0x1E | (*v1 >> 2) & 1)
  {
    case 1uLL:
    case 5uLL:
      v3 &= 0xFFFFFFFFFFFFFFBuLL;
      goto LABEL_3;
    case 2uLL:
      sub_1BFE6B6A0(0, &qword_1EB887678, (void (*)(uint64_t))type metadata accessor for FormatViewData, (unint64_t *)&unk_1EB88F820, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes);
      goto LABEL_11;
    case 3uLL:
      sub_1BFE6B6A0(0, (unint64_t *)&qword_1EB889580, (void (*)(uint64_t))type metadata accessor for FormatButtonNodeData, &qword_1EB88F830, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes);
      uint64_t v4 = (unint64_t *)(*(void *)(swift_projectBox() + *(int *)(v6 + 48)) + 48);
      break;
    case 4uLL:
      uint64_t v4 = (unint64_t *)(*(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 120);
      break;
    case 6uLL:
      uint64_t v4 = (unint64_t *)(*(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18) + 48);
      break;
    case 7uLL:
      uint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18);
      goto LABEL_23;
    case 8uLL:
      sub_1C0498748();
      uint64_t v4 = (unint64_t *)(swift_projectBox() + *(int *)(v8 + 48) + 96);
      break;
    case 9uLL:
      sub_1C049850C(0, &qword_1EA1A5A90, (void (*)(uint64_t))type metadata accessor for FormatMicaData, (void (*)(uint64_t))type metadata accessor for FormatMicaNodeLayoutAttributes);
LABEL_11:
      uint64_t v4 = (unint64_t *)(*(void *)(swift_projectBox() + *(int *)(v5 + 48)) + 120);
      break;
    case 0xAuLL:
      uint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x38);
      goto LABEL_23;
    case 0xBuLL:
      uint64_t v9 = (unint64_t *)&unk_1EA1A5A80;
      uint64_t v10 = (unint64_t *)&unk_1EA19BBF8;
      uint64_t v11 = (void (*)(uint64_t))type metadata accessor for FormatVideoData;
      uint64_t v12 = type metadata accessor for FormatVideoNodeLayoutAttributes;
      goto LABEL_17;
    case 0xCuLL:
      uint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x50);
      goto LABEL_23;
    case 0xDuLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EA1AE190, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionData, (void (*)(uint64_t))type metadata accessor for FormatShareAttributionNodeLayoutAttributes);
      uint64_t v4 = (unint64_t *)(*(void *)(swift_projectBox() + *(int *)(v13 + 48)) + 128);
      break;
    case 0xEuLL:
      uint64_t v9 = (unint64_t *)&qword_1EA19BBC8;
      uint64_t v10 = (unint64_t *)&unk_1EA1A5A70;
      uint64_t v11 = (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerData;
      uint64_t v12 = type metadata accessor for FormatVideoPlayerNodeLayoutAttributes;
LABEL_17:
      sub_1BFE6B6A0(0, v9, v11, v10, (uint64_t (*)(uint64_t))v12);
      goto LABEL_22;
    case 0xFuLL:
      uint64_t v4 = (unint64_t *)(*(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x20) + 168);
      break;
    case 0x10uLL:
      sub_1C049850C(0, (unint64_t *)&qword_1EB862E50, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
      uint64_t v4 = (unint64_t *)(*(void *)(swift_projectBox() + *(int *)(v15 + 48))
                              + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_visibility);
      break;
    case 0x11uLL:
      uint64_t v4 = (unint64_t *)(*(void *)((v3 & 0xFFFFFFFFFFFFFFBLL) + 0x18) + 176);
      break;
    case 0x12uLL:
      sub_1C049850C(0, (unint64_t *)&unk_1EB884B38, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerData, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
LABEL_22:
      uint64_t v7 = *(void *)(swift_projectBox() + *(int *)(v14 + 48));
LABEL_23:
      uint64_t v4 = (unint64_t *)(v7 + 112);
      break;
    default:
LABEL_3:
      uint64_t v4 = (unint64_t *)(*(void *)(v3 + 24) + 120);
      break;
  }
  unint64_t v16 = *v4;
  *a1 = *v4;
  return sub_1BFE6FA30(v16);
}

uint64_t sub_1BFE68408(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v38 = a2;
  uint64_t v7 = sub_1C15204EC();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v35 = v3;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36) {
      break;
    }
    uint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v36) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    char v33 = *(unsigned char *)(*(void *)(v6 + 56) + v21);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(unsigned char *)(*(void *)(v8 + 56) + v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v35;
  uint64_t v23 = (void *)(v6 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

void sub_1BFE68714()
{
  if (!qword_1EB880E08)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB880E08);
    }
  }
}

uint64_t type metadata accessor for FormatVisibilityData()
{
  return self;
}

uint64_t type metadata accessor for FormatAdMetricsData()
{
  uint64_t result = qword_1EB876508;
  if (!qword_1EB876508) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FormatVideoData(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB87B578);
}

uint64_t type metadata accessor for FormatMicaData()
{
  uint64_t result = qword_1EB87B3E8;
  if (!qword_1EB87B3E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FormatAccessibilityRenderer()
{
  return self;
}

uint64_t sub_1BFE6887C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_1BFE688E4(uint64_t a1, uint64_t *a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = *a2;
  a4[qword_1EB8877D0] = *(unsigned char *)(a3 + 129);
  uint64_t v17 = *(void *)(a3 + 24);
  unint64_t v18 = &a4[qword_1EB882D30];
  *unint64_t v18 = *(void *)(a3 + 16);
  v18[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1((void *)(v9 + 16), *(void *)(v9 + 40));
  v28[0] = v16;
  sub_1BFE69538(a1, a4, v28, a3, a5, a6, a7, a8, a9);
  uint64_t v19 = *(void *)(a3 + 136);
  uint64_t v20 = *(void *)(*(void *)(v19 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v20 + 16) + 16))
  {
    uint64_t v27 = *(void *)(v19 + 56);
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = sub_1BFEF3B08(v21);
    sub_1BFEF3808(v22);
    uint64_t v23 = v27;
  }
  else
  {
    uint64_t v23 = sub_1BFEF3784();
  }
  char v24 = sub_1BFF896B4(0xD000000000000011, 0x80000001C162EA80, v23);
  id result = (id)swift_bridgeObjectRelease();
  if (v24) {
    return objc_msgSend(a4, sel_setAccessibilityElementsHidden_, 1);
  }
  return result;
}

uint64_t sub_1BFE68A60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE68AC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE68B20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1BFE68B80(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1F1C(a1, a2, a3, a4, &qword_1EB890508, (uint64_t)&type metadata for FormatAccessibilityRendererContainer);
}

uint64_t sub_1BFE68B94(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v85 = a6;
  char v92 = a7;
  uint64_t v93 = a8;
  uint64_t v90 = a5;
  uint64_t v94 = a4;
  uint64_t v84 = a1;
  uint64_t v11 = type metadata accessor for FormatViewBackground.Mica(0);
  MEMORY[0x1F4188790](v11 - 8);
  long long v83 = (uint64_t *)((char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE694E0();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v87 = (uint64_t *)((char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  uint64_t v86 = (uint64_t *)((char *)&v82 - v16);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v82 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v88 = (uint64_t)&v82 - v21;
  sub_1BFE6B4F0();
  uint64_t v23 = v22;
  MEMORY[0x1F4188790](v22);
  int64_t v25 = (unint64_t *)((char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C151F8FC();
  objc_msgSend(a3, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a2 + 128));
  uint64_t v26 = *(void *)(a2 + 24);
  uint64_t v27 = &a3[OBJC_IVAR____TtC8NewsFeed10FormatView_identifier];
  *(void *)uint64_t v27 = *(void *)(a2 + 16);
  *((void *)v27 + 1) = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(a2 + 96);
  uint64_t v89 = (long long *)v19;
  if (v28) {
    uint64_t v29 = *(unsigned char *)(v28 + 185) & 1;
  }
  else {
    uint64_t v29 = 0;
  }
  objc_msgSend(a3, sel_setAccessibilityIgnoresInvertColors_, v29);
  uint64_t v30 = *(void *)(a2 + 144);
  uint64_t v31 = *(unsigned __int8 *)(a2 + 152);
  objc_msgSend(a3, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a3, sel_setAccessibilityElementsHidden_, 0);
  if (v31 > 0xFD) {
    goto LABEL_10;
  }
  if ((v31 & 0x80) != 0)
  {
    if (!(v30 | v31 ^ 0x80)) {
      goto LABEL_10;
    }
    uint64_t v32 = &selRef_setAccessibilityElementsHidden_;
  }
  else
  {
    uint64_t v32 = &selRef_setIsAccessibilityElement_;
  }
  objc_msgSend(a3, *v32, 1);
LABEL_10:
  if (v28)
  {
    uint64_t v33 = *(void *)(v28 + 80);
    uint64_t v34 = *(void *)(v28 + 88);
    char v35 = *(unsigned char *)(v28 + 96);
    sub_1BFEF6828(v33, v34, v35);
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    char v35 = -2;
  }
  uint64_t v91 = a9;
  id v36 = objc_msgSend(a3, sel_layer);
  objc_msgSend(a3, sel_bounds);
  *(void *)&long long v97 = v33;
  *((void *)&v97 + 1) = v34;
  LOBYTE(v98) = v35;
  sub_1BFE6A0C8(v36, (uint64_t)&v97, v37, v38, v39, v40);

  sub_1BFEF68AC(v33, v34, v35);
  if (v28)
  {
    unint64_t v41 = *(void *)(v28 + 64);
    sub_1BFEF683C(v41);
  }
  else
  {
    unint64_t v41 = 0xF000000000000007;
  }
  uint64_t v42 = (uint64_t)v25 + *(int *)(v23 + 48);
  unint64_t *v25 = v41;
  sub_1BFF46F6C(v90, v42, (uint64_t (*)(void))sub_1BFE694E0);
  if ((~v41 & 0xF000000000000007) != 0)
  {
    switch(v41 >> 61)
    {
      case 1uLL:
        uint64_t v45 = *(void *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x18);
        *(void *)&long long v97 = *(void *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        *((void *)&v97 + 1) = v45;
        long long v46 = *(_OWORD *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
        long long v98 = *(_OWORD *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
        long long v99 = v46;
        long long v100 = *(_OWORD *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
        sub_1C14B7FC0(a3, (uint64_t *)&v97, v94);
        goto LABEL_35;
      case 2uLL:
        long long v47 = *(_OWORD *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x60);
        long long v101 = *(_OWORD *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x50);
        long long v102 = v47;
        long long v48 = *(_OWORD *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x80);
        long long v103 = *(_OWORD *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x70);
        long long v104 = v48;
        long long v49 = *(_OWORD *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x20);
        long long v97 = *(_OWORD *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        long long v98 = v49;
        long long v50 = *(_OWORD *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x40);
        long long v99 = *(_OWORD *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x30);
        long long v100 = v50;
        sub_1C0C62E7C(a3, &v97, v94);
        goto LABEL_35;
      case 3uLL:
        uint64_t v51 = *(void *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        unint64_t v52 = v51;
        switch(v51 & 7)
        {
          case 1:
          case 2:
          case 3:
          case 4:
            unint64_t v52 = v51 & 0xFFFFFFFFFFFFFFF8;
            break;
          default:
            break;
        }
        *(void *)&long long v97 = v52;
        uint64_t v53 = sub_1BFF7B774(v51);
        Class v44 = FormatColor.color.getter(v53);
        sub_1C151F95C();
        sub_1BFF7C0EC(v51);
        goto LABEL_25;
      case 4uLL:
        sub_1BFEF68C0(v41);
        uint64_t v54 = v88;
        sub_1C03595DC(v42, v88, (uint64_t (*)(void))sub_1BFE694E0);
        char v55 = v89;
        sub_1BFF46F6C(v54, (uint64_t)v89, (uint64_t (*)(void))sub_1BFE694E0);
        uint64_t v56 = type metadata accessor for FormatViewBackground(0);
        if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v55, 1, v56) == 1)
        {
          sub_1BFE6AA3C(v54, (uint64_t (*)(void))sub_1BFE694E0);
          uint64_t v57 = (uint64_t)v55;
          goto LABEL_37;
        }
        uint64_t v65 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          long long v74 = v55[7];
          long long v75 = v55[5];
          long long v103 = v55[6];
          long long v104 = v74;
          long long v76 = v55[7];
          v105[0] = v55[8];
          *(_OWORD *)((char *)v105 + 9) = *(long long *)((char *)v55 + 137);
          long long v77 = v55[3];
          long long v78 = v55[1];
          long long v99 = v55[2];
          long long v100 = v77;
          long long v79 = v55[3];
          long long v80 = v55[5];
          long long v101 = v55[4];
          long long v102 = v80;
          long long v81 = v55[1];
          long long v97 = *v55;
          long long v98 = v81;
          v95[6] = v103;
          v95[7] = v76;
          v96[0] = v55[8];
          *(_OWORD *)((char *)v96 + 9) = *(long long *)((char *)v55 + 137);
          v95[2] = v99;
          v95[3] = v79;
          v95[4] = v101;
          v95[5] = v75;
          v95[0] = v97;
          v95[1] = v78;
          sub_1C144BCF4(a3, (uint64_t)v95, v94, a2);
          sub_1BFE6AA3C(v54, (uint64_t (*)(void))sub_1BFE694E0);
          sub_1C0359644((uint64_t)&v97);
        }
        else
        {
          sub_1BFE6AA3C(v54, (uint64_t (*)(void))sub_1BFE694E0);
          sub_1BFE6AA3C((uint64_t)v55, type metadata accessor for FormatViewBackground);
        }
        goto LABEL_39;
      case 5uLL:
        sub_1BFEF68C0(v41);
        uint64_t v58 = type metadata accessor for FormatViewBackground(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v42, 1, v58) == 1) {
          goto LABEL_47;
        }
        uint64_t v59 = v86;
        sub_1BFF46F6C(v42, (uint64_t)v86, (uint64_t (*)(void))sub_1BFE694E0);
        if (swift_getEnumCaseMultiPayload()) {
          goto LABEL_46;
        }
        uint64_t v61 = *v59;
        uint64_t v60 = v59[1];
        *(void *)&long long v97 = v61;
        *((void *)&v97 + 1) = v60;
        sub_1C0358FDC(v84, a3, v94, (uint64_t *)&v97, v85, v92, v93, v91);
        swift_release();
        swift_release();
        goto LABEL_36;
      case 6uLL:
        sub_1BFEF68C0(v41);
        uint64_t v62 = type metadata accessor for FormatViewBackground(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v42, 1, v62) == 1) {
          goto LABEL_47;
        }
        uint64_t v59 = v87;
        sub_1BFF46F6C(v42, (uint64_t)v87, (uint64_t (*)(void))sub_1BFE694E0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v63 = (uint64_t)v59;
          uint64_t v64 = v83;
          sub_1C03595DC(v63, (uint64_t)v83, type metadata accessor for FormatViewBackground.Mica);
          sub_1C035926C(v84, a3, v94, v64, v85, v92, v93, v91);
          sub_1BFE6AA3C((uint64_t)v64, type metadata accessor for FormatViewBackground.Mica);
          goto LABEL_36;
        }
LABEL_46:
        sub_1BFE6AA3C((uint64_t)v59, type metadata accessor for FormatViewBackground);
LABEL_47:
        sub_1BFE6AA3C(v42, (uint64_t (*)(void))sub_1BFE694E0);
        sub_1C151F95C();
        break;
      case 7uLL:
        LOBYTE(v97) = *(unsigned char *)((v41 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_1C12BA124(a3, (char *)&v97, v94);
        goto LABEL_35;
      default:
        *(void *)&long long v97 = *(void *)(v41 + 16);
        uint64_t v43 = swift_retain();
        Class v44 = FormatColor.color.getter(v43);
        sub_1C151F95C();
        swift_release();
LABEL_25:

LABEL_35:
        sub_1BFEF68C0(v41);
        goto LABEL_36;
    }
  }
  else
  {
    sub_1C151F95C();
LABEL_36:
    uint64_t v57 = v42;
LABEL_37:
    sub_1BFE6AA3C(v57, (uint64_t (*)(void))sub_1BFE694E0);
  }
  uint64_t v65 = &_OBJC_LABEL_PROTOCOL___UIActivityItemSource;
LABEL_39:
  uint64_t v66 = *(void *)(a2 + 136);
  if (v28)
  {
    uint64_t v68 = *(void *)(v28 + 72);
    uint64_t v67 = *(void *)(v28 + 80);
    uint64_t v69 = *(void *)(v28 + 88);
    char v70 = *(unsigned char *)(v28 + 96);
    swift_bridgeObjectRetain();
    sub_1BFEF6828(v67, v69, v70);
  }
  else
  {
    uint64_t v67 = 0;
    uint64_t v69 = 0;
    uint64_t v68 = 0;
    char v70 = -2;
  }
  id v71 = [a3 (SEL)v65[417]];
  *(void *)&long long v97 = v67;
  *((void *)&v97 + 1) = v69;
  LOBYTE(v98) = v70;
  sub_1BFE69BFC(v66, v71, (uint64_t)v92, v68, (uint64_t *)&v97);

  swift_bridgeObjectRelease();
  sub_1BFEF68AC(v67, v69, v70);
  if (v28)
  {
    uint64_t v72 = *(void *)(v28 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v72 = 0;
  }
  *(void *)&long long v97 = v72;
  sub_1BFE69FD4(v66, a3, (uint64_t *)&v97, v94);
  return swift_bridgeObjectRelease();
}

void sub_1BFE694E0()
{
  if (!qword_1EB87B9B8)
  {
    type metadata accessor for FormatViewBackground(255);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87B9B8);
    }
  }
}

void sub_1BFE69538(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14 = *a3;
  sub_1C151F8FC();
  objc_msgSend(a2, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a4 + 128));
  uint64_t v15 = *(void *)(a4 + 96);
  if (v15) {
    uint64_t v16 = *(unsigned char *)(v15 + 232) & 1;
  }
  else {
    uint64_t v16 = 0;
  }
  objc_msgSend(a2, sel_setAccessibilityIgnoresInvertColors_, v16);
  uint64_t v17 = *(void *)(a4 + 144);
  uint64_t v18 = *(unsigned __int8 *)(a4 + 152);
  objc_msgSend(a2, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a2, sel_setAccessibilityElementsHidden_, 0);
  if (v18 <= 0xFD)
  {
    if ((v18 & 0x80) == 0)
    {
      uint64_t v19 = &selRef_setIsAccessibilityElement_;
LABEL_9:
      objc_msgSend(a2, *v19, 1);
      goto LABEL_10;
    }
    if (v17 | v18 ^ 0x80)
    {
      uint64_t v19 = &selRef_setAccessibilityElementsHidden_;
      goto LABEL_9;
    }
  }
LABEL_10:
  sub_1C0B2D8C0(a2, a4, v15, a5, (uint64_t)a7);
  uint64_t v22 = v14;
  sub_1BFE696A0(a1, a2, &v22, a4, a5, a6, a7, a8, a9);
}

void sub_1BFE696A0(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v62 = a8;
  uint64_t v64 = a7;
  id v65 = a2;
  uint64_t v60 = a1;
  uint64_t v61 = a9;
  uint64_t v13 = sub_1C1515FDC();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *a3;
  switch((unint64_t)*a3 >> 61)
  {
    case 1uLL:
      int64_t v25 = (_OWORD *)(v17 & 0x1FFFFFFFFFFFFFFFLL);
      long long v26 = v25[7];
      long long v73 = v25[6];
      long long v74 = v26;
      long long v27 = v25[9];
      long long v75 = v25[8];
      long long v76 = v27;
      long long v28 = v25[3];
      long long v69 = v25[2];
      long long v70 = v28;
      long long v29 = v25[5];
      long long v71 = v25[4];
      long long v72 = v29;
      long long v30 = v25[1];
      long long v31 = v25[7];
      v67[5] = v25[6];
      v67[6] = v31;
      long long v32 = v25[9];
      v67[7] = v25[8];
      v67[8] = v32;
      long long v68 = v30;
      long long v33 = v25[3];
      v67[1] = v25[2];
      v67[2] = v33;
      long long v34 = v25[5];
      v67[3] = v25[4];
      v67[4] = v34;
      v67[0] = v25[1];
      uint64_t v66 = a4;
      uint64_t v35 = *(void *)(a4 + 96);
      sub_1C0494FB8((uint64_t)&v68);
      uint64_t v36 = type metadata accessor for FormatImageNodeLayoutAttributes();
      sub_1BFE6A330(&qword_1EB88DFD8, (void (*)(uint64_t))type metadata accessor for FormatImageNodeLayoutAttributes);
      sub_1BFE6AABC(v60, (uint64_t)v65, (uint64_t)v67, (uint64_t)&v66, v35, v64, v62, v36, v61);
      sub_1C0494FF0((uint64_t)&v68);
      return;
    case 2uLL:
      uint64_t v37 = *(void *)((v17 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      sub_1BFE6A3F4(v60, (uint64_t)v65, v37, a4, a5, a6, v64, v62, v61);
      goto LABEL_18;
    case 3uLL:
      sub_1C003F414();
      uint64_t v39 = v38;
      uint64_t v40 = swift_projectBox();
      uint64_t v41 = v40 + *(int *)(v39 + 48);
      long long v42 = *(_OWORD *)v41;
      long long v58 = *(_OWORD *)(v41 + 16);
      long long v59 = v42;
      long long v43 = *(_OWORD *)(v41 + 32);
      long long v56 = *(_OWORD *)(v41 + 48);
      long long v57 = v43;
      uint64_t v44 = *(void *)(v41 + 64);
      uint64_t v45 = *(void *)(v41 + 72);
      char v46 = *(unsigned char *)(v41 + 80);
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v40, v13);
      *(void *)&v67[0] = a4;
      uint64_t v47 = *(void *)(a4 + 96);
      long long v68 = v59;
      long long v69 = v58;
      long long v70 = v57;
      long long v71 = v56;
      *(void *)&long long v72 = v44;
      *((void *)&v72 + 1) = v45;
      LOBYTE(v73) = v46;
      uint64_t v48 = type metadata accessor for FormatImageNodeLayoutAttributes();
      sub_1BFE6A330(&qword_1EB88DFD8, (void (*)(uint64_t))type metadata accessor for FormatImageNodeLayoutAttributes);
      sub_1C0B2D644(v60, (uint64_t)v65, (uint64_t)v16, (uint64_t)v67, v47, (uint64_t *)&v68, v64, v62, v48, v61);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      return;
    case 4uLL:
      uint64_t v20 = v17 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v21 = *(void *)(v20 + 16);
      uint64_t v22 = *(void *)(v20 + 24);
      swift_retain();
      swift_retain();
      uint64_t v23 = v64;
      id v24 = objc_msgSend(v64, sel_userInterfaceStyle);
      if ((unint64_t)v24 >= 2)
      {
        if (v24 == (id)2)
        {
          *(void *)&long long v68 = v22;
          sub_1BFE696A0(v60, v65, &v68, a4, a5, a6, v64, v62, v61);
          swift_release();
          goto LABEL_18;
        }
        *(void *)&long long v68 = v21;
        sub_1BFE696A0(v60, v65, &v68, a4, a5, a6, v64, v62, v61);
      }
      else
      {
        *(void *)&long long v68 = v21;
        sub_1BFE696A0(v60, v65, &v68, a4, a5, a6, v23, v62, v61);
      }
      swift_release();
LABEL_18:
      swift_release();
      return;
    case 5uLL:
      uint64_t v49 = v17 & 0x1FFFFFFFFFFFFFFFLL;
      uint64_t v50 = *(void *)(v49 + 16);
      uint64_t v51 = *(void *)(v49 + 24);
      *(void *)&long long v59 = v50 & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_retain();
      unint64_t v52 = v64;
      id v53 = v65;
      uint64_t v55 = v61;
      uint64_t v54 = v62;
      sub_1C0B2D8C0(v65, a4, v51, a5, (uint64_t)v64);
      *(void *)&long long v68 = v50;
      sub_1BFE696A0(v60, v53, &v68, a4, a5, a6, v52, v54, v55);
      swift_release();
      goto LABEL_18;
    case 6uLL:
      sub_1C151CD6C();
      return;
    default:
      uint64_t v18 = *(void *)(a4 + 96);
      id v63 = *(id *)(v17 + 16);
      sub_1BFE6D44C((uint64_t)v65, v63, v18, v64);
      uint64_t v19 = v63;

      return;
  }
}

void sub_1BFE69BFC(uint64_t a1, id a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = *a5;
  uint64_t v10 = a5[1];
  char v11 = *((unsigned char *)a5 + 16);
  objc_msgSend(a2, sel_setBorderColor_, 0);
  objc_msgSend(a2, sel_setBorderWidth_, 0.0);
  sub_1BFE69E24(a2);
  unint64_t v13 = v12;
  unint64_t v31 = v12;
  if (a4)
  {
    char v25 = v11;
    uint64_t v14 = *(void *)(a4 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = (void *)(a4 + 64);
      do
      {
        uint64_t v17 = *(v15 - 4);
        uint64_t v16 = *(v15 - 3);
        uint64_t v18 = *(v15 - 2);
        __int16 v19 = *((_WORD *)v15 - 4);
        uint64_t v20 = *v15;
        v15 += 5;
        v28[0] = v17;
        v28[1] = v16;
        v28[2] = v18;
        __int16 v29 = v19;
        uint64_t v30 = v20;
        v26[0] = v9;
        v26[1] = v10;
        char v27 = v25;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1C10011AC(a1, a2, a3, (uint64_t)v28, (uint64_t)v26);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      unint64_t v13 = v31;
    }
  }
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C15204BC();
    swift_bridgeObjectRelease();
    if (!v21) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v21) {
      goto LABEL_15;
    }
  }
  if (v21 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v21; ++i)
  {
    if ((v13 & 0xC000000000000001) != 0) {
      id v23 = (id)MEMORY[0x1C18C7CB0](i, v13);
    }
    else {
      id v23 = *(id *)(v13 + 8 * i + 32);
    }
    id v24 = v23;
    objc_msgSend(v23, sel_removeFromSuperlayer);
  }
LABEL_15:
  swift_bridgeObjectRelease();
}

void sub_1BFE69E24(void *a1)
{
  uint64_t v8 = MEMORY[0x1E4FBC860];
  id v1 = objc_msgSend(a1, sel_sublayers);
  if (!v1) {
    return;
  }
  uint64_t v2 = v1;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A2D0);
  unint64_t v3 = sub_1C151EBCC();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_4;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_16;
  }
LABEL_4:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C18C7CB0](i, v3);
      }
      else {
        id v6 = *(id *)(v3 + 8 * i + 32);
      }
      uint64_t v7 = v6;
      type metadata accessor for FormatBorderLayer();
      if (swift_dynamicCastClass())
      {
        MEMORY[0x1C18C66D0](v7);
        if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C151EC8C();
        }
        sub_1C151ECEC();
        sub_1C151EBEC();
      }
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1BFE69FD4(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6 = *a3;
  if (*(void *)(a4 + 16))
  {
    unint64_t v8 = sub_1C1051F60(0);
    if (v9) {
      a2 = *(void **)(*(void *)(a4 + 56) + 16 * v8);
    }
  }
  id v10 = a2;
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1BFF493E4(a1, v6);
    swift_bridgeObjectRelease();
  }
  sub_1C151F8EC();
}

void sub_1BFE6A0C8(id a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  unsigned int v7 = *(unsigned __int8 *)(a2 + 16);
  if (v7 > 0xFD)
  {
    objc_msgSend(a1, sel_setCornerRadius_, 0.0);
    objc_msgSend(a1, sel_setMaskedCorners_, 0);
    uint64_t v8 = *MEMORY[0x1E4F39EA0];
    objc_msgSend(a1, sel_setCornerCurve_, v8);
    return;
  }
  uint64_t v10 = *(void *)a2;
  char v9 = *(char **)(a2 + 8);
  if ((v7 & 0x80) != 0)
  {
    int v12 = v10 & 1;
    double Height = CGRectGetHeight(*(CGRect *)&a3);
    v28.origin.x = a3;
    v28.origin.y = a4;
    v28.size.width = a5;
    v28.size.height = a6;
    double Width = CGRectGetWidth(v28);
    if (Width >= Height) {
      double Width = Height;
    }
    double v11 = Width * 0.5;
    sub_1BFEF68AC(v10, (uint64_t)v9, v7);
    char v9 = (char *)&unk_1F1B66B38;
  }
  else
  {
    double v11 = *(double *)a2;
    int v12 = v7 & 1;
    sub_1BFF046A0(*(void *)a2, *(void *)(a2 + 8), v7);
  }
  objc_msgSend(a1, sel_setCornerRadius_, v11);
  uint64_t v19 = *((void *)v9 + 2);
  if (v19)
  {
    uint64_t v20 = 0;
    uint64_t v21 = v9 + 32;
    do
    {
      uint64_t v22 = *v21++;
      uint64_t v23 = qword_1C15CC338[v22];
      if ((v23 & ~v20) == 0) {
        uint64_t v23 = 0;
      }
      v20 |= v23;
      --v19;
    }
    while (v19);
    if (v20)
    {
      if ((v20 & 2) != 0)
      {
        uint64_t v24 = 3;
        if ((v20 & 4) == 0) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v24 = 1;
        if ((v20 & 4) == 0) {
          goto LABEL_23;
        }
      }
    }
    else if ((v20 & 2) != 0)
    {
      uint64_t v24 = 2;
      if ((v20 & 4) == 0)
      {
LABEL_23:
        if ((v20 & 8) != 0) {
          v24 |= 8uLL;
        }
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v24 = 0;
      if ((v20 & 4) == 0) {
        goto LABEL_23;
      }
    }
    v24 |= 4uLL;
    goto LABEL_23;
  }
  uint64_t v24 = 0;
LABEL_25:
  objc_msgSend(a1, sel_setMaskedCorners_, v24);
  swift_bridgeObjectRelease();
  char v25 = (id *)MEMORY[0x1E4F39EA8];
  if (!v12) {
    char v25 = (id *)MEMORY[0x1E4F39EA0];
  }
  id v26 = *v25;
  objc_msgSend(a1, sel_setCornerCurve_, v26);
}

uint64_t type metadata accessor for FormatBorderLayer()
{
  return self;
}

uint64_t sub_1BFE6A330(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE6A378(uint64_t a1, uint64_t a2)
{
  sub_1BFE4D1E4(0, &qword_1EB8713D8, (unint64_t *)&qword_1EB8713D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFE6A3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  void (*v29)(void *__return_ptr, uint64_t, uint64_t, uint64_t (*)(uint64_t (*)(void *), uint64_t), void *);
  id v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void v41[3];
  uint64_t v42;
  void v43[6];

  uint64_t v37 = a5;
  uint64_t v38 = a7;
  uint64_t v35 = a4;
  uint64_t v36 = a3;
  uint64_t v13 = *(void *)(a8 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  long long v34 = a9;
  MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v9 + 72);
  uint64_t v39 = *(void *)(v9 + 80);
  uint64_t v40 = v16;
  long long v33 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v18 = swift_allocObject();
  long long v32 = a6;
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a8);
  unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (char *)swift_allocObject();
  uint64_t v23 = v34;
  *((void *)v22 + 2) = a8;
  *((void *)v22 + 3) = v23;
  *((void *)v22 + 4) = v33;
  *((void *)v22 + 5) = v17;
  *((void *)v22 + 6) = v18;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v22[v19], v15, a8);
  uint64_t v24 = v36;
  *(void *)&v22[v20] = v35;
  char v25 = v38;
  *(void *)&v22[v21] = v37;
  *(void *)&v22[(v21 + 15) & 0xFFFFFFFFFFFFFFF8] = v25;
  uint64_t v26 = *(void *)(v24 + 16);
  uint64_t v27 = swift_allocObject();
  swift_weakInit();
  CGRect v28 = (void *)swift_allocObject();
  v28[2] = v27;
  void v28[3] = sub_1BFE666D0;
  v28[4] = v22;
  __int16 v29 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t (*)(uint64_t (*)(void *), uint64_t), void *))(v26 + 72);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v30 = v25;
  swift_retain();
  swift_retain();
  v29(v43, v40, v39, sub_1BFE66514, v28);
  swift_release();
  swift_release();
  swift_release();
  sub_1BFE6A378((uint64_t)v43, (uint64_t)v41);
  if (v42)
  {
    __swift_project_boxed_opaque_existential_1(v41, v42);
    sub_1C1517E3C();
    sub_1BFE4D118((uint64_t)v43, &qword_1EB8713D8, (unint64_t *)&qword_1EB8713D0);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  }
  else
  {
    sub_1BFE4D118((uint64_t)v43, &qword_1EB8713D8, (unint64_t *)&qword_1EB8713D0);
    return sub_1BFE4D118((uint64_t)v41, &qword_1EB8713D8, (unint64_t *)&qword_1EB8713D0);
  }
}

uint64_t sub_1BFE6A748(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFE45810(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BFE6A7A4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1BFE6A80C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE6A860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = MEMORY[0x1C18C9C60](v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_label);
  if (v7)
  {
    id v17 = (id)v7;
    *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_link) = a1;
    swift_retain();
    swift_release();
    uint64_t v8 = (void *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_linkBlock);
    uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_linkBlock);
    *uint64_t v8 = a2;
    v8[1] = a3;
    sub_1BFC3E5C0(v9);
    uint64_t v10 = OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_tapGestureRecognizer;
    double v11 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_tapGestureRecognizer);
    if (a1)
    {
      if (v11)
      {
        swift_retain();
      }
      else
      {
        id v14 = objc_allocWithZone(MEMORY[0x1E4FB1D38]);
        swift_retain();
        id v15 = objc_msgSend(v14, sel_initWithTarget_action_, v3, sel_didTap_);
        objc_msgSend(v15, sel_setDelegate_, v3);
        objc_msgSend(v17, sel_addGestureRecognizer_, v15);
        uint64_t v16 = *(void **)(v3 + v10);
        *(void *)(v3 + v10) = v15;

        double v11 = *(void **)(v3 + v10);
        if (!v11)
        {
LABEL_14:

          return;
        }
      }
      id v13 = v11;
      objc_msgSend(v13, sel_setEnabled_, 1);
    }
    else
    {
      if (!v11)
      {
        swift_retain();
        goto LABEL_14;
      }
      swift_retain();
      id v13 = v11;
      objc_msgSend(v13, sel_setEnabled_, 0);
    }

    goto LABEL_14;
  }
  int v12 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatLabelLinkHandler_tapGestureRecognizer);
  if (v12)
  {
    objc_msgSend(v12, sel_setEnabled_, 0);
  }
}

uint64_t sub_1BFE6AA3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FormatViewBackground.Mica(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB87B900);
}

uint64_t sub_1BFE6AABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void (*v14)(long long *__return_ptr, void *, uint64_t);
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  long long v39;
  uint64_t v40;
  long long v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void v51[5];
  unsigned char v52[40];
  unsigned char v53[48];

  sub_1BFF5984C(a3, (uint64_t)v53);
  uint64_t v39 = *(_OWORD *)(a3 + 40);
  uint64_t v37 = *(void *)(a3 + 64);
  uint64_t v38 = *(void *)(a3 + 56);
  uint64_t v35 = *(void *)(a3 + 80);
  uint64_t v36 = *(void *)(a3 + 72);
  long long v33 = *(void *)(a3 + 96);
  long long v34 = *(void *)(a3 + 88);
  unint64_t v31 = *(void *)(a3 + 112);
  long long v32 = *(void *)(a3 + 104);
  uint64_t v30 = *(unsigned char *)(a3 + 120);
  id v14 = *(void (**)(long long *__return_ptr, void *, uint64_t))(a3 + 128);
  if (a5 && (id v15 = *(void *)(a5 + 120), v15 != 3))
  {
    *(void *)&uint64_t v41 = *(void *)(a5 + 120);
    sub_1BFEF6A90(v15);
    uint64_t v16 = sub_1BFE4C2A0(a6);
    sub_1BFEF68D8(v15);
  }
  else
  {
    uint64_t v16 = 0;
  }
  v14(&v41, a6, v16);
  if (v43)
  {
    sub_1BFC773DC(&v41, (uint64_t)v52);
    sub_1BFC66384((uint64_t)v52, (uint64_t)v51);
    __int16 v29 = a2;
    id v17 = *(uint64_t (**)(uint64_t, uint64_t))(a9 + 16);
    swift_retain();
    uint64_t v18 = v17(a7, a9);
    sub_1C151797C();
    unint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v23 = objc_msgSend(self, sel_mainScreen);
    objc_msgSend(v23, sel_scale);
    char v25 = v24;

    uint64_t v41 = v39;
    long long v42 = v38;
    long long v43 = v37;
    uint64_t v44 = v36;
    uint64_t v45 = v35;
    char v46 = v34;
    uint64_t v47 = v33;
    uint64_t v48 = v32;
    uint64_t v49 = v31;
    uint64_t v50 = v30;
    uint64_t v26 = type metadata accessor for FormatImageRequest();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1C1359FC4(v51, a5, v18, v16, 0, a6, (uint64_t)v53, (uint64_t)&v41, v20, v22, v25);
    long long v43 = v26;
    uint64_t v44 = sub_1BFE6A330(&qword_1EB888620, (void (*)(uint64_t))type metadata accessor for FormatImageRequest);
    *(void *)&uint64_t v41 = v27;
    swift_retain();
    sub_1BFE459BC((uint64_t)&v41, (void *)(v40 + 16), v29, 0, 0);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    return sub_1BFE4D118((uint64_t)&v41, (unint64_t *)&qword_1EB882B88, (unint64_t *)&qword_1EB8715C0);
  }
  else
  {
    sub_1BFE4D118((uint64_t)&v41, (unint64_t *)&qword_1EB882B80, (unint64_t *)&qword_1EB871530);
    return sub_1C151CD6C();
  }
}

double sub_1BFE6ADE0()
{
  return *(double *)(*(void *)v0 + 64);
}

uint64_t sub_1BFE6ADF0()
{
  return swift_retain();
}

uint64_t sub_1BFE6ADF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFE6AE50(a1, a2, a3, a4, *(void *)(v4 + 16), (long long *)(v4 + 24), (uint64_t)&unk_1F1BE3D10, (uint64_t)sub_1C0059B48, MEMORY[0x1E4FAC318]);
}

uint64_t sub_1BFE6AE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, long long *a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, long long *, uint64_t, uint64_t, ValueMetadata *, void, void, void, uint64_t, uint64_t))
{
  uint64_t v13 = *((void *)a6 + 2);
  long long v18 = *a6;
  uint64_t v19 = v13;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  swift_retain();
  a9(a5, &v18, a8, v15, &type metadata for LikingCommandContext, MEMORY[0x1E4FBB390], MEMORY[0x1E4FBB3A8], MEMORY[0x1E4FAD910], ObjectType, a2);
  return swift_release();
}

uint64_t sub_1BFE6AF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  uint64_t v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (!*(void *)(*v7 + 16)) {
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1BFEF2D8C(a1, a2);
  if ((v10 & 1) == 0)
  {
LABEL_23:
    swift_bridgeObjectRelease();
LABEL_24:
    swift_endAccess();
LABEL_26:
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
    type metadata accessor for FormatLayoutViewContainer();
    swift_bridgeObjectRetain();
    sub_1C151E3CC();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C152040C();
    __break(1u);
    return result;
  }
  uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v11 + 56);
  swift_retain();
  uint64_t v13 = (void *)sub_1BFFCB630(v12);
  swift_release();
  uint64_t v14 = swift_dynamicCastClass();
  if (!v14)
  {
    swift_release();

    goto LABEL_26;
  }
  uint64_t v15 = v14;
  uint64_t v16 = *(void **)(v11 + 64);
  objc_msgSend(v16, sel_setAutoresizingMask_, 0);
  if (a3)
  {
    swift_retain();
    objc_msgSend(v16, sel_setAutoresizingMask_, sub_1C0D7FB8C());
    swift_release();
  }
  unint64_t v17 = *(void *)(v11 + 72);
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C15204BC();
    if (v18) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18)
    {
LABEL_8:
      if (v18 >= 1)
      {
        uint64_t v19 = 0;
        while (1)
        {
          if ((v17 & 0xC000000000000001) != 0)
          {
            id v20 = (id)MEMORY[0x1C18C7CB0](v19, v17);
            if (a3) {
              goto LABEL_16;
            }
          }
          else
          {
            id v20 = *(id *)(v17 + 8 * v19 + 32);
            if (a3)
            {
LABEL_16:
              swift_retain();
              uint64_t v21 = sub_1C00BA004((uint64_t)&unk_1F1B82490);
              type metadata accessor for FormatResizeAuto();
              uint64_t v22 = swift_allocObject();
              swift_beginAccess();
              *(void *)(v22 + 16) = v21;
              swift_release();
              objc_msgSend(v20, sel_setAutoresizingMask_, 0);
              swift_retain();
              objc_msgSend(v20, sel_setAutoresizingMask_, sub_1C0D7FB8C());

              swift_release_n();
              goto LABEL_11;
            }
          }
          objc_msgSend(v20, sel_setAutoresizingMask_, 0);

LABEL_11:
          if (v18 == ++v19) {
            goto LABEL_18;
          }
        }
      }
      __break(1u);
      goto LABEL_23;
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  if (((*(void *)(v11 + 56) >> 59) & 0x1E | (*(void *)(v11 + 56) >> 2) & 1) == 6)
  {
    uint64_t v23 = *(void **)(v11 + 64);
    swift_bridgeObjectRetain();
    v23;
  }
  else
  {
    *(id *)(v11 + 64);
    sub_1BFE67330(MEMORY[0x1E4FBC860]);
  }
  swift_release();
  return v15;
}

uint64_t sub_1BFE6B360(char *a1)
{
  uint64_t v3 = &a1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers];
  swift_beginAccess();
  if (!*(void *)(*(void *)v3 + 16))
  {
    uint64_t v4 = &a1[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations];
    uint64_t result = swift_beginAccess();
    unint64_t v6 = *(void *)v4;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1C15204BC();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v15) {
        return result;
      }
    }
    else if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      return result;
    }
  }
  uint64_t v7 = (void **)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers);
  swift_beginAccess();
  uint64_t v8 = *v7;
  unint64_t v9 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v7 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v8 = sub_1C0EE5C20(0, v8[2] + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  unint64_t v12 = v8[2];
  unint64_t v11 = v8[3];
  if (v12 >= v11 >> 1)
  {
    uint64_t v8 = sub_1C0EE5C20((void *)(v11 > 1), v12 + 1, 1, v8);
    *uint64_t v7 = v8;
  }
  uint64_t v13 = sub_1C12FDFF4((unint64_t *)&unk_1EB887DF0);
  v8[2] = v12 + 1;
  uint64_t v14 = &v8[2 * v12];
  v14[4] = v9;
  v14[5] = v13;
  return swift_endAccess();
}

void sub_1BFE6B4F0()
{
  if (!qword_1EB87AFB0)
  {
    sub_1C007F378();
    sub_1BFE694E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB87AFB0);
    }
  }
}

void sub_1BFE6B560(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1BFE66E88(255, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeDataLayoutAttributes);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v9) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1BFE6B600(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1C0CD0ABC(255, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeDataLayoutAttributes);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v9) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1BFE6B6A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1BFE4610C(255, a4, a5, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeDataLayoutAttributes);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v9) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FormatItemNodeLayoutContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C0BC153C);
}

uint64_t sub_1BFE6B754(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFE66E88(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFE6B7C4()
{
  return swift_retain();
}

uint64_t sub_1BFE6B7CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BFFEEDD0(0, &qword_1EB88C058, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)aBlock - v8;
  uint64_t v10 = type metadata accessor for FormatButtonNodeDataAction();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFFEAB38(a3, (uint64_t)v9, &qword_1EB88C058, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    return sub_1BFFE9588((uint64_t)v9, &qword_1EB88C058, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction);
  }
  sub_1BFFEAA68((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatButtonNodeDataAction);
  uint64_t v15 = *(void **)&v13[*(int *)(v10 + 20)];
  if (v15)
  {
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a1;
    *(void *)(v17 + 24) = v16;
    id v18 = objc_allocWithZone(MEMORY[0x1E4FB13B8]);
    aBlock[4] = sub_1C130C398;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C12B8C88;
    aBlock[3] = &block_descriptor_108;
    uint64_t v19 = _Block_copy(aBlock);
    id v20 = v15;
    id v21 = a1;
    swift_retain();
    id v22 = objc_msgSend(v18, sel_initWithAttributedName_actionHandler_, v20, v19);
    _Block_release(v19);
    swift_release();
    swift_release();
    uint64_t v23 = (void *)(a4 + 48);
    swift_beginAccess();
    uint64_t v24 = *(void **)(a4 + 48);
    id v25 = v22;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 48) = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v24 = sub_1C0EE5C7C(0, v24[2] + 1, 1, v24);
      *uint64_t v23 = v24;
    }
    unint64_t v28 = v24[2];
    unint64_t v27 = v24[3];
    if (v28 >= v27 >> 1)
    {
      uint64_t v24 = sub_1C0EE5C7C((void *)(v27 > 1), v28 + 1, 1, v24);
      *uint64_t v23 = v24;
    }
    v24[2] = v28 + 1;
    __int16 v29 = &v24[3 * v28];
    v29[4] = v22;
    v29[5] = 0;
    *((unsigned char *)v29 + 48) = 0;
    swift_endAccess();
  }
  return sub_1BFC54B6C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for FormatButtonNodeDataAction);
}

uint64_t sub_1BFE6BB68(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t, void))
{
  double v9 = CACurrentMediaTime();
  uint64_t v10 = a1 + a2;
  if (__OFADD__(a1, a2))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  double v4 = v9;
  swift_beginAccess();
  a4(a1 + a2, 0);
  sub_1C151EBEC();
  uint64_t v11 = swift_endAccess();
  if (a2 < 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a2)
  {
    uint64_t v12 = (void (*)(uint64_t))a3[5];
    uint64_t v13 = a2;
    while (1)
    {
      v12(v11);
      uint64_t v14 = swift_beginAccess();
      MEMORY[0x1C18C66D0](v14);
      if (*(void *)((a3[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a3[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C151EC8C();
      }
      sub_1C151ECEC();
      sub_1C151EBEC();
      uint64_t v11 = swift_endAccess();
      uint64_t v15 = a3[8];
      BOOL v16 = __OFADD__(v15, 1);
      uint64_t v17 = v15 + 1;
      if (v16) {
        break;
      }
      a3[8] = v17;
      if (!--v13) {
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_9:
  if (qword_1EB87B060 != -1) {
LABEL_14:
  }
    swift_once();
  id v18 = (void *)qword_1EB93C700;
  sub_1BFEE81C8(0, (unint64_t *)&qword_1EB895EB0, (uint64_t (*)(uint64_t))sub_1C0062478, MEMORY[0x1E4FBBE00]);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C152A660;
  uint64_t v21 = a3[3];
  uint64_t v20 = a3[4];
  *(void *)(v19 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v22 = sub_1BFE9C558();
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = v20;
  uint64_t v23 = MEMORY[0x1E4FBB550];
  uint64_t v24 = MEMORY[0x1E4FBB5C8];
  *(void *)(v19 + 96) = MEMORY[0x1E4FBB550];
  *(void *)(v19 + 104) = v24;
  *(void *)(v19 + 64) = v22;
  *(void *)(v19 + 72) = v10;
  *(void *)(v19 + 136) = v23;
  *(void *)(v19 + 144) = v24;
  *(void *)(v19 + 112) = a2;
  id v25 = v18;
  swift_bridgeObjectRetain();
  CFTimeInterval v26 = CACurrentMediaTime();
  uint64_t v27 = MEMORY[0x1E4FBB460];
  *(void *)(v19 + 176) = MEMORY[0x1E4FBB3D0];
  *(void *)(v19 + 184) = v27;
  *(CFTimeInterval *)(v19 + 152) = (v26 - v4) * 1000.0;
  sub_1C151F38C();
  sub_1C15197BC();

  return swift_bridgeObjectRelease();
}

id sub_1BFE6BDF8(void (*a1)(void))
{
  a1(0);
  id v1 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return objc_msgSend(v1, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
}

uint64_t type metadata accessor for FormatLayoutView()
{
  uint64_t result = qword_1EB891490;
  if (!qword_1EB891490) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FormatImageView()
{
  uint64_t result = qword_1EB8877D8;
  if (!qword_1EB8877D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FormatLabel()
{
  return self;
}

uint64_t type metadata accessor for FormatView()
{
  return self;
}

id sub_1BFE6BF2C()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatView);
}

id sub_1BFE6BF44()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatImageView);
}

id sub_1BFE6BF5C()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatLabel);
}

id sub_1BFE6BF98(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC8NewsFeed11FormatLabel_identifier];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0xE000000000000000;
  uint64_t v11 = OBJC_IVAR____TtC8NewsFeed11FormatLabel_linkHandler;
  id v12 = objc_allocWithZone((Class)type metadata accessor for FormatLabelLinkHandler());
  uint64_t v13 = v4;
  *(void *)&v4[v11] = objc_msgSend(v12, sel_init);

  v17.receiver = v13;
  v17.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a1, a2, a3, a4);
  swift_unknownObjectWeakAssign();
  id v15 = v14;
  objc_msgSend(v15, sel_setNumberOfLines_, 0);
  objc_msgSend(v15, sel_setLineBreakMode_, 4);

  return v15;
}

uint64_t type metadata accessor for FormatLabelLinkHandler()
{
  return self;
}

id sub_1BFE6C1E0(unsigned char *a1, double a2, double a3, double a4, double a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = &a1[qword_1EB882D30];
  *uint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  a1[qword_1EB8877D0] = 0;
  v14.receiver = a1;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a2, a3, a4, a5);
  objc_msgSend(v12, sel_setContentMode_, 4);
  return v12;
}

id sub_1BFE6C288()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatLayoutView);
}

id sub_1BFE6C2A0()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatStateView);
}

id sub_1BFE6C2B8()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatButton);
}

uint64_t type metadata accessor for FormatStateView()
{
  return self;
}

uint64_t type metadata accessor for FormatButton()
{
  return self;
}

char *FormatButton.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = &v4[OBJC_IVAR____TtC8NewsFeed12FormatButton_identifier];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0xE000000000000000;
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed12FormatButton_onTap;
  sub_1BFE6CAC4(0, (unint64_t *)&qword_1EB871600, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
  objc_super v14 = v13;
  id v15 = objc_allocWithZone(v13);
  BOOL v16 = v4;
  *(void *)&v5[v12] = objc_msgSend(v15, sel_init);
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed12FormatButton_onLongPress;
  *(void *)&v16[v17] = objc_msgSend(objc_allocWithZone(v14), sel_init);
  v16[OBJC_IVAR____TtC8NewsFeed12FormatButton_isLongPressEnabled] = 0;
  uint64_t v18 = OBJC_IVAR____TtC8NewsFeed12FormatButton_formatLayoutView;
  *(void *)&v16[v18] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatLayoutView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(void *)&v16[OBJC_IVAR____TtC8NewsFeed12FormatButton_accessibilityRenderer] = 0;
  *(void *)&v16[OBJC_IVAR____TtC8NewsFeed12FormatButton_stateMaskFormatLayoutViews] = MEMORY[0x1E4FBC868];
  *(void *)&v16[OBJC_IVAR____TtC8NewsFeed12FormatButton_longPressGesture] = 0;
  uint64_t v19 = &v16[OBJC_IVAR____TtC8NewsFeed12FormatButton_createMenuElementsBlock];
  *(void *)uint64_t v19 = 0;
  *((void *)v19 + 1) = 0;

  v27.receiver = v16;
  v27.super_class = ObjectType;
  uint64_t v20 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  uint64_t v21 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed12FormatButton_formatLayoutView];
  unint64_t v22 = v20;
  objc_msgSend(v21, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v22, sel_addSubview_, v21);
  uint64_t v23 = *(void **)&v22[OBJC_IVAR____TtC8NewsFeed12FormatButton_onTap];
  uint64_t v24 = v22;
  id v25 = v23;
  sub_1C151C87C();

  return v24;
}

id sub_1BFE6C610(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_identifier];
  void *v10 = 0;
  v10[1] = 0xE000000000000000;
  uint64_t v11 = &v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onSizeInvalidation];
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = &v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillShow];
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = &v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_onKeyboardWillHide];
  *uint64_t v13 = 0;
  v13[1] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer] = 0;
  objc_super v14 = &v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_feedItem];
  uint64_t v15 = type metadata accessor for FeedItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations] = MEMORY[0x1E4FBC860];
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_token] = 0;
  v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_isDirty] = 0;
  uint64_t v17 = MEMORY[0x1E4FBC868];
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers] = MEMORY[0x1E4FBC868];
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers] = v16;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_loadAwareObservers] = v16;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_layoutObservers] = v16;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers] = v16;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewKey] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewsByName] = v17;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture] = 0;
  sub_1BFEE17D4(0, (unint64_t *)&qword_1EB884E28, (uint64_t (*)(uint64_t))type metadata accessor for DebugButton, MEMORY[0x1E4FAA880]);
  uint64_t v18 = v4;
  *(void *)&v18[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_debugButton] = sub_1C1517F1C();
  sub_1BFE6C9A4();
  *(void *)&v18[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapAction] = sub_1C1517F1C();

  v22.receiver = v18;
  v22.super_class = ObjectType;
  id v19 = objc_msgSendSuper2(&v22, sel_initWithFrame_, a1, a2, a3, a4);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v20 = v19;
  swift_retain();
  sub_1C1517F0C();
  swift_release();
  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1C1517F0C();
  swift_release();
  swift_release();

  return v20;
}

void sub_1BFE6C940(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE6C9A4()
{
  if (!qword_1EB884E20)
  {
    sub_1BFE9E0D8(255, (unint64_t *)&qword_1EB871600, MEMORY[0x1E4FBC848] + 8, MEMORY[0x1E4FAD760]);
    unint64_t v0 = sub_1C1517F2C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB884E20);
    }
  }
}

void sub_1BFE6CA24(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE6CA70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC848] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE6CAC4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFE6CB10(uint64_t a1, char a2)
{
  unint64_t v5 = *v2;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v5;
  uint64_t v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      return result;
    }
    uint64_t v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1) {
    uint64_t v9 = a1;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t result = MEMORY[0x1C18C7CC0](v7, v9, a2 & 1, v5);
  uint64_t *v2 = result;
  return result;
}

unsigned char *sub_1BFE6CBD0()
{
  unint64_t v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IssueCoverView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 0;
  uint64_t v1 = v0;
  id v2 = sub_1BFE6CC9C();
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

  id v3 = sub_1BFE6CC9C();
  objc_msgSend(v3, sel_setContentMode_, 4);

  id v4 = sub_1BFE6CC9C();
  objc_msgSend(v1, sel_addSubview_, v4);

  return v1;
}

id sub_1BFE6CC9C()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___staticContentView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___staticContentView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___staticContentView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)sub_1C151CD7C()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

unsigned char *sub_1BFE6CD20()
{
  uint64_t v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IssueCoverView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v0[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 1;
  uint64_t v1 = v0;
  id v2 = sub_1BFE6CDD4();
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

  id v3 = sub_1BFE6CDD4();
  objc_msgSend(v1, sel_addSubview_, v3);

  return v1;
}

id sub_1BFE6CDD4()
{
  uint64_t v1 = OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___dynamicContentView;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___dynamicContentView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___dynamicContentView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1EB0]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    unint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t type metadata accessor for IssueCoverView()
{
  return self;
}

id IssueCoverView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___staticContentView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView____lazy_storage___dynamicContentView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_dynamicView] = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_identifier];
  void *v10 = 0;
  v10[1] = 0;
  uint64_t v11 = &v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_lastPreparedBounds];
  *(_OWORD *)uint64_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v11[32] = 1;
  v4[OBJC_IVAR____TtC8NewsFeed14IssueCoverView_content] = 2;
  v14.receiver = v4;
  v14.super_class = ObjectType;
  id v12 = objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v12, sel_setAccessibilityIgnoresInvertColors_, 1);
  return v12;
}

uint64_t type metadata accessor for FormatLayeredMediaView()
{
  return self;
}

uint64_t type metadata accessor for FormatProgressPieView()
{
  return self;
}

char *sub_1BFE6D0A0(double a1, double a2, double a3, double a4)
{
  unint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = &v4[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_identifier];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0xE000000000000000;
  uint64_t v12 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer;
  id v13 = objc_allocWithZone(MEMORY[0x1E4F39C88]);
  objc_super v14 = v4;
  *(void *)&v5[v12] = objc_msgSend(v13, sel_init);
  uint64_t v15 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer;
  *(void *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39C88]), sel_init);
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_radius] = 0;
  v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_clockwise] = 0;
  uint64_t v16 = &v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_stepPercentage];
  *(void *)uint64_t v16 = 0;
  v16[8] = 1;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_minPercentage] = 0;
  *(void *)&v14[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_maxPercentage] = 0x3FF0000000000000;
  uint64_t v17 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_layerDelegate;
  *(void *)&v14[v17] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FormatProgressPieView.NonAnimatingLayerDelegate()), sel_init);

  v27.receiver = v14;
  v27.super_class = ObjectType;
  uint64_t v18 = (char *)objc_msgSendSuper2(&v27, sel_initWithFrame_, a1, a2, a3, a4);
  id v19 = objc_msgSend(v18, sel_layer);
  uint64_t v20 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer;
  objc_msgSend(v19, sel_addSublayer_, *(void *)&v18[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_backgroundLayer]);

  id v21 = objc_msgSend(v18, sel_layer);
  uint64_t v22 = OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer;
  objc_msgSend(v21, sel_addSublayer_, *(void *)&v18[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_progressLayer]);

  uint64_t v23 = *(void **)&v18[OBJC_IVAR____TtC8NewsFeed21FormatProgressPieView_layerDelegate];
  objc_msgSend(*(id *)&v18[v20], sel_setDelegate_, v23);
  id v24 = *(id *)&v18[v22];
  id v25 = v23;
  objc_msgSend(v24, sel_setDelegate_, v25);

  return v18;
}

uint64_t type metadata accessor for FormatProgressBarView()
{
  return self;
}

id sub_1BFE6D360()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatLayeredMediaView);
}

id sub_1BFE6D378()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatProgressPieView);
}

id sub_1BFE6D390()
{
  return sub_1BFE6BDF8((void (*)(void))type metadata accessor for FormatProgressBarView);
}

id sub_1BFE6D3A8()
{
  return sub_1BFE6BDF8(MEMORY[0x1E4FABCD0]);
}

uint64_t initializeWithCopy for FormatLayoutContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  uint64_t v8 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v8;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BFE6D44C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  if (a3 && (unint64_t v5 = *(void *)(a3 + 120), v5 != 3))
  {
    sub_1BFEF6A90(v5);
    uint64_t v8 = sub_1BFE4C2A0(a4);
    sub_1BFEF68D8(v5);
    id v9 = objc_msgSend(a2, sel_imageWithRenderingMode_, v8);
  }
  else
  {
    id v6 = a2;
  }
  return sub_1C151CD6C();
}

uint64_t sub_1BFE6D4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, void, void, void, uint64_t, uint64_t))
{
  return a4(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), **(unsigned __int8 **)(v4 + 16), a2, a3) & 1;
}

uint64_t sub_1BFE6D52C(uint64_t a1, void (*a2)(void, void, void), char a3, char a4, void (*a5)(uint64_t), uint64_t a6)
{
  char v46 = a5;
  uint64_t v47 = a6;
  uint64_t v45 = a2;
  sub_1BFE66DE0();
  uint64_t v49 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C151A7DC();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v43 - v17;
  sub_1BFF0A6F8(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v48 = (uint64_t)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v43 - v22;
  __n128 v25 = MEMORY[0x1F4188790](v24);
  objc_super v27 = (char *)&v43 - v26;
  uint64_t v44 = v15;
  if (a3)
  {
    if (a3 == 1)
    {
      *uint64_t v18 = a1 & 1;
      unint64_t v28 = (unsigned int *)MEMORY[0x1E4FAC018];
    }
    else
    {
      *(void *)uint64_t v18 = a1;
      unint64_t v28 = (unsigned int *)MEMORY[0x1E4FABFF8];
    }
    (*(void (**)(char *, void, uint64_t, __n128))(v13 + 104))(v18, *v28, v12, v25);
  }
  else
  {
    __int16 v29 = v45;
    *(void *)uint64_t v18 = a1;
    *((void *)v18 + 1) = v29;
    (*(void (**)(char *, void, uint64_t, __n128))(v13 + 104))(v18, *MEMORY[0x1E4FAC010], v12, v25);
    swift_bridgeObjectRetain();
  }
  uint64_t v45 = *(void (**)(void, void, void))(v13 + 32);
  v45(v27, v18, v12);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v31 = v30(v27, 0, 1, v12);
  char v50 = a4;
  if (a4 == 2)
  {
    long long v32 = v23;
    uint64_t v33 = 1;
  }
  else
  {
    v46(v31);
    sub_1C151B1DC();
    long long v32 = v23;
    uint64_t v33 = 0;
  }
  v30(v32, v33, 1, v12);
  uint64_t v34 = (uint64_t)&v11[*(int *)(v49 + 48)];
  sub_1BFF0A690((uint64_t)v27, (uint64_t)v11, (uint64_t (*)(void))sub_1BFF0A6F8);
  sub_1BFF0A690((uint64_t)v23, v34, (uint64_t (*)(void))sub_1BFF0A6F8);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v35((uint64_t)v11, 1, v12) == 1)
  {
    uint64_t v36 = (uint64_t (*)(void))sub_1BFF0A6F8;
    sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
    sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v35(v34, 1, v12) == 1)
    {
      char v37 = -1;
    }
    else
    {
      uint64_t v36 = (uint64_t (*)(void))sub_1BFE66DE0;
      char v37 = 0;
    }
  }
  else
  {
    uint64_t v38 = v48;
    sub_1BFF0A690((uint64_t)v11, v48, (uint64_t (*)(void))sub_1BFF0A6F8);
    if (v35(v34, 1, v12) == 1)
    {
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v38, v12);
      char v37 = 0;
      uint64_t v36 = (uint64_t (*)(void))sub_1BFE66DE0;
    }
    else
    {
      uint64_t v39 = v44;
      v45(v44, v34, v12);
      sub_1BFFBA7FC(&qword_1EB885140, MEMORY[0x1E4FAC020]);
      char v37 = sub_1C151E5CC();
      uint64_t v40 = *(void (**)(char *, uint64_t))(v13 + 8);
      v40(v39, v12);
      uint64_t v41 = v38;
      uint64_t v36 = (uint64_t (*)(void))sub_1BFF0A6F8;
      sub_1BFEFEBC8((uint64_t)v23, (uint64_t (*)(void))sub_1BFF0A6F8);
      sub_1BFEFEBC8((uint64_t)v27, (uint64_t (*)(void))sub_1BFF0A6F8);
      v40((char *)v41, v12);
    }
  }
  sub_1BFEFEBC8((uint64_t)v11, v36);
  return v37 & 1;
}

uint64_t sub_1BFE6DA68(uint64_t a1)
{
  return sub_1BFE6D4EC(a1, (uint64_t)sub_1BFE6DD2C, (uint64_t)&type metadata for SavingCommandState, (uint64_t (*)(void, void, void, void, uint64_t, uint64_t))sub_1BFE6D52C);
}

uint64_t sub_1BFE6DA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFE6DAF4(a1, a2, a3, a4, *(void *)(v4 + 16), (uint64_t *)(v4 + 24), (uint64_t)&unk_1F1BE3B58, (uint64_t)sub_1C005DC38, MEMORY[0x1E4FAC318]);
}

uint64_t sub_1BFE6DAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t, ValueMetadata *, unint64_t, unint64_t, uint64_t, uint64_t))
{
  char v13 = *((unsigned char *)a6 + 8);
  uint64_t v22 = *a6;
  char v23 = v13;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  sub_1BFE6DC1C(0, &qword_1EB87ED58, (unint64_t *)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SaveCommandContext);
  uint64_t v17 = v16;
  unint64_t v18 = sub_1BFE6DC84();
  unint64_t v19 = sub_1BFE6DCD8();
  swift_retain();
  a9(a5, &v22, a8, v15, v17, &type metadata for SavingCommandState, v18, v19, ObjectType, a2);
  return swift_release();
}

void sub_1BFE6DC1C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC9DBE8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1BFE6DC84()
{
  unint64_t result = qword_1EB876410;
  if (!qword_1EB876410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876410);
  }
  return result;
}

unint64_t sub_1BFE6DCD8()
{
  unint64_t result = qword_1EB876400;
  if (!qword_1EB876400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876400);
  }
  return result;
}

unint64_t sub_1BFE6DD2C()
{
  unint64_t result = qword_1EB888A00;
  if (!qword_1EB888A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888A00);
  }
  return result;
}

uint64_t sub_1BFE6DD80(uint64_t a1)
{
  unint64_t v2 = sub_1BFE6DDCC();
  return MEMORY[0x1F4163458](a1, v2);
}

unint64_t sub_1BFE6DDCC()
{
  unint64_t result = qword_1EB888A10;
  if (!qword_1EB888A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888A10);
  }
  return result;
}

void sub_1BFE6DE20(uint64_t a1, char a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1BFE6E400(a3);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a2 & 1) == 0)
  {
    sub_1C106FDD0();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v20 = 8 * v10;
    *(double *)(v16[6] + v20) = a3;
    *(void *)(v16[7] + v20) = a1;
    uint64_t v21 = v16[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_1BFC3B5EC(v13, a2 & 1);
  unint64_t v18 = sub_1BFE6E400(a3);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_1C1520CFC();
  __break(1u);
}

uint64_t sub_1BFE6DF58(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  type metadata accessor for FormatTimerObserver();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(void *)(v9 + 24) = a3;
  *(void *)(v9 + 32) = a4;
  swift_beginAccess();
  uint64_t v10 = *(void *)(v5 + 24);
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_1BFE6E400(a1), (v12 & 1) != 0))
  {
    uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    uint64_t v13 = MEMORY[0x1E4FBC860];
  }
  aBlock[0] = v13;
  swift_retain();
  uint64_t v14 = swift_retain();
  MEMORY[0x1C18C66D0](v14);
  if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C151EC8C();
  }
  sub_1C151ECEC();
  uint64_t result = sub_1C151EBEC();
  unint64_t v16 = aBlock[0];
  aBlock[0] = MEMORY[0x1E4FBC860];
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_9;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v21 = MEMORY[0x1E4FBC860];
    goto LABEL_21;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v17) {
    goto LABEL_20;
  }
LABEL_9:
  if (v17 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v17; ++i)
  {
    if ((v16 & 0xC000000000000001) != 0)
    {
      uint64_t v19 = MEMORY[0x1C18C7CB0](i, v16);
    }
    else
    {
      uint64_t v19 = *(void *)(v16 + 8 * i + 32);
      swift_retain();
    }
    uint64_t v20 = (void *)MEMORY[0x1C18C9C60](v19 + 16);

    if (v20)
    {
      sub_1C152025C();
      sub_1C152029C();
      sub_1C15202AC();
      sub_1C152026C();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v21 = aBlock[0];
LABEL_21:
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v33 = *(void *)(v5 + 24);
  *(void *)(v5 + 24) = 0x8000000000000000;
  sub_1BFE6E4E0(v21, isUniquelyReferenced_nonNull_native, a1);
  *(void *)(v5 + 24) = v33;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  if (*(void *)(*(void *)(v5 + 16) + 16) && (sub_1BFE6E400(a1), (v23 & 1) != 0))
  {
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v24;
    *(double *)(v25 + 24) = a1;
    aBlock[4] = sub_1C11A82D8;
    aBlock[5] = v25;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BFD34E78;
    aBlock[3] = &block_descriptor_17;
    uint64_t v26 = _Block_copy(aBlock);
    objc_super v27 = self;
    swift_retain();
    id v28 = objc_msgSend(v27, sel_timerWithTimeInterval_repeats_block_, 1, v26, a1);
    _Block_release(v26);
    swift_release();
    swift_release();
    swift_beginAccess();
    id v29 = v28;
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *(void *)(v5 + 16);
    *(void *)(v5 + 16) = 0x8000000000000000;
    sub_1BFE6DE20((uint64_t)v29, v30, a1);
    *(void *)(v5 + 16) = v33;
    swift_bridgeObjectRelease();
    swift_endAccess();
    id v31 = objc_msgSend(self, sel_currentRunLoop);
    objc_msgSend(v31, sel_addTimer_forMode_, v29, *MEMORY[0x1E4F1C4B0]);
  }
  return swift_release();
}

unint64_t sub_1BFE6E400(double a1)
{
  uint64_t v2 = sub_1C1520DAC();
  return sub_1BFE6E448(v2, a1);
}

unint64_t sub_1BFE6E448(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BFE6E4E0(uint64_t a1, char a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1BFE6E400(a3);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C106FF70();
LABEL_7:
    unint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(double *)(v16[6] + v19) = a3;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1BFC38FB0(result, a2 & 1);
  uint64_t result = sub_1BFE6E400(a3);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    unint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatTimerObserver()
{
  return self;
}

uint64_t sub_1BFE6E63C@<X0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_1BFF05BFC(0, (unint64_t *)&qword_1EB871380, MEMORY[0x1E4FABA40]);
  return sub_1BFE6E704(v5[2], v5[3], v5[4], v5[5], v5[6], v5[7], v5[8], (uint64_t)v5+ ((*(unsigned __int8 *)(*(void *)(v11 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v11 - 8) + 80)), a1, a2, a3, a4, a5);
}

uint64_t sub_1BFE6E704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, double a10@<D0>, double a11@<D1>, CGFloat a12@<D2>, CGFloat a13@<D3>)
{
  uint64_t v84 = a8;
  uint64_t v109 = a5;
  sub_1BFF3D95C();
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v81 = (uint64_t)v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v82 = (uint64_t)v75 - v28;
  uint64_t v29 = type metadata accessor for FormatNodeStateData.Data();
  uint64_t v78 = *(void *)(v29 - 8);
  uint64_t v79 = v29;
  MEMORY[0x1F4188790](v29);
  long long v80 = (void *)((char *)v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v31 = 0uLL;
  uint64_t v83 = a4;
  uint64_t v85 = a2;
  if (a1 && (uint64_t v32 = *(void *)(a1 + 240), v32 != 1))
  {
    v75[1] = a7;
    unint64_t v50 = *(void *)(a1 + 248);
    uint64_t v94 = v32;
    unint64_t v95 = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFCD96EC(v85, (uint64_t)&v96, a12, a13);
    uint64_t result = sub_1BFEF68E8(v32);
    if (v13) {
      return result;
    }
    uint64_t v76 = a1;
    long long v77 = a9;
    uint64_t v86 = 0;
    double v33 = v96;
    double v34 = v97;
    long long v31 = v98;
    long long v36 = v99;
    long long v37 = v100;
    long long v38 = v101;
    char v35 = v102;
    a4 = v83;
  }
  else
  {
    uint64_t v76 = a1;
    long long v77 = a9;
    uint64_t v86 = v13;
    double v33 = 0.0;
    double v34 = 0.0;
    char v35 = 0;
    long long v36 = 0uLL;
    long long v37 = 0uLL;
    long long v38 = 0uLL;
  }
  *(double *)long long v103 = v33;
  *(double *)&v103[1] = v34;
  long long v104 = v31;
  long long v105 = v36;
  long long v106 = v37;
  long long v107 = v38;
  char v108 = v35;
  swift_unownedRetainStrong();
  double v39 = *(double *)(a3 + 72);
  swift_retain();
  swift_release();
  double v96 = v39;
  uint64_t v40 = sub_1BFE6F228(a4, v109, a6);
  uint64_t v42 = v41;
  char v44 = v43;
  swift_release();
  if (v34 != 0.0)
  {
    sub_1BFE4F908(0, (unint64_t *)&qword_1EB87C438, (uint64_t)&type metadata for FormatNodeCacheKey, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1527210;
    *(void *)(inited + 32) = v40;
    *(void *)(inited + 40) = v42;
    *(unsigned char *)(inited + 48) = v44 & 1;
    uint64_t v94 = 0;
    unint64_t v95 = 0xE000000000000000;
    double v96 = a10;
    double v97 = a11;
    *(CGFloat *)&long long v98 = a12;
    *((CGFloat *)&v98 + 1) = a13;
    type metadata accessor for CGRect(0);
    sub_1C152036C();
    unint64_t v46 = v95;
    *(void *)(inited + 56) = v94;
    *(void *)(inited + 64) = v46;
    *(unsigned char *)(inited + 72) = 0;
    swift_bridgeObjectRetain();
    double v96 = 0.0;
    double v97 = -2.68156159e154;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  swift_bridgeObjectRetain();
  unint64_t v47 = v85;
  uint64_t v48 = v86;
  sub_1BFF598CC(v85, (uint64_t)v103, v84, v92, a12, a13);
  if (v48)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = v92[0];
    uint64_t v53 = v79;
    unint64_t v52 = v80;
    *long long v80 = v92[0];
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = v82;
    sub_1BFF376C4((uint64_t)v52, v82, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v54, 0, 1, v53);
    uint64_t v55 = v81;
    sub_1BFF376C4(v54, v81, (uint64_t (*)(void))sub_1BFF3D95C);
    swift_beginAccess();
    uint64_t v84 = v51 & 0x1FFFFFFFFFFFFFFFLL;
    swift_retain();
    uint64_t v56 = v109;
    swift_bridgeObjectRetain();
    sub_1BFF3D9D4(v55, v83, v56);
    swift_endAccess();
    sub_1BFF3BECC(v54, (uint64_t (*)(void))sub_1BFF3D95C);
    sub_1BFF3BECC((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
    uint64_t v57 = *(void *)(v47 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
    swift_unownedRetainStrong();
    swift_beginAccess();
    uint64_t v59 = *(void *)(a3 + 16);
    uint64_t v58 = *(void *)(a3 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    unint64_t v60 = *(void *)(v57 + 40);
    if (v60)
    {
      uint64_t v94 = *(void *)(v57 + 32);
      unint64_t v95 = v60;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v59 = v94;
      uint64_t v58 = v95;
    }
    swift_unownedRetainStrong();
    swift_beginAccess();
    uint64_t v61 = *(void *)(a3 + 16);
    long long v80 = *(void **)(a3 + 24);
    uint64_t v81 = v61;
    swift_bridgeObjectRetain();
    swift_release();
    swift_unownedRetainStrong();
    uint64_t v62 = *(void *)(a3 + 40);
    swift_retain();
    swift_release();
    uint64_t v86 = 0;
    uint64_t v82 = v59;
    if (v62)
    {
      uint64_t v63 = *(void *)(v62 + 16);
      swift_retain();
      swift_release();
    }
    else
    {
      uint64_t v63 = 0;
    }
    uint64_t v79 = swift_allocObject();
    uint64_t v93 = v63;
    swift_unownedRetainStrong();
    swift_beginAccess();
    uint64_t v78 = *(void *)(a3 + 80);
    swift_release();
    swift_unownedRetainStrong();
    swift_beginAccess();
    unint64_t v64 = *(void *)(a3 + 88);
    sub_1BFE6FA30(v64);
    swift_release();
    unint64_t v90 = v64;
    sub_1BFE6EF70(v47, v91);
    sub_1BFF0056C(v64);
    swift_unownedRetainStrong();
    swift_beginAccess();
    LOBYTE(v64) = *(unsigned char *)(a3 + 96);
    swift_release();
    sub_1C1517EFC();
    uint64_t v65 = v87;
    swift_unownedRetainStrong();
    uint64_t v66 = *(void *)(a3 + 104);
    char v67 = *(unsigned char *)(a3 + 112);
    swift_release();
    uint64_t v88 = v66;
    char v89 = v67;
    swift_unownedRetainStrong();
    swift_beginAccess();
    uint64_t v69 = *(void *)(a3 + 128);
    uint64_t v68 = *(void *)(a3 + 136);
    swift_bridgeObjectRetain();
    swift_release();
    swift_unownedRetainStrong();
    swift_beginAccess();
    char v70 = *(unsigned char *)(a3 + 97);
    swift_release();
    type metadata accessor for FormatImageNodeLayoutAttributes();
    swift_allocObject();
    uint64_t v71 = v76;
    swift_retain();
    uint64_t v72 = v109;
    swift_bridgeObjectRetain();
    uint64_t v73 = FormatImageNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:shouldCancelContextMenu:)(v83, v72, v82, v58, v81, (uint64_t)v80, v71, &v93, a10, a11, a12, a13, v78, v91, v64, v65, &v88, v69, v68,
            v70);
    uint64_t result = swift_release();
    uint64_t v74 = v79;
    *(void *)(v79 + 16) = v73;
    *long long v77 = v74 | 0x2000000000000004;
  }
  return result;
}

unint64_t sub_1BFE6EF70@<X0>(unint64_t result@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = result;
  uint64_t v5 = *v2;
  unint64_t v6 = (unint64_t)*v2 >> 62;
  if (v6)
  {
    if (v6 == 1)
    {
      uint64_t v7 = v5 & 0x3FFFFFFFFFFFFFFFLL;
      unint64_t v8 = *(void *)(v7 + 16);
      uint64_t v9 = *(void *)(v7 + 24);
      sub_1BFE6FA30(v8);
      swift_bridgeObjectRetain();
      sub_1C027215C(v8, v9, (uint64_t *)&v15);
      unint64_t v10 = v15;
      sub_1BFE6EF70(v3);
      sub_1BFF0056C(v8);
      swift_bridgeObjectRelease();
      return sub_1BFF0056C(v10);
    }
    else if (v5 == 0x8000000000000000)
    {
      *a2 = 0x8000000000000000;
    }
    else
    {
      *a2 = 0x8000000000000008;
    }
  }
  else
  {
    uint64_t v12 = *(void *)(v5 + 16);
    uint64_t v11 = *(void *)(v5 + 24);
    uint64_t v13 = swift_allocObject();
    uint64_t result = sub_1BFF303E0(v12, v11);
    *(void *)(v13 + 16) = result;
    *(void *)(v13 + 24) = v14;
    *a2 = v13;
  }
  return result;
}

uint64_t type metadata accessor for FormatImageNodeLayoutAttributes()
{
  return self;
}

uint64_t FormatImageNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:style:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:name:shouldCancelContextMenu:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t *a14, char a15, uint64_t a16, uint64_t *a17, uint64_t a18, uint64_t a19, char a20)
{
  uint64_t v21 = *a8;
  uint64_t v22 = *a14;
  uint64_t v23 = *a17;
  char v24 = *((unsigned char *)a17 + 8);
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  *(void *)(v20 + 32) = a3;
  *(void *)(v20 + 40) = a4;
  *(void *)(v20 + 48) = a5;
  *(void *)(v20 + 56) = a6;
  *(double *)(v20 + 64) = a9;
  *(double *)(v20 + 72) = a10;
  *(double *)(v20 + 80) = a11;
  *(double *)(v20 + 88) = a12;
  *(void *)(v20 + 96) = a7;
  *(void *)(v20 + 104) = v21;
  *(void *)(v20 + 112) = a13;
  *(void *)(v20 + 120) = v22;
  *(unsigned char *)(v20 + 128) = a15;
  *(void *)(v20 + 136) = a16;
  *(void *)(v20 + 144) = v23;
  *(unsigned char *)(v20 + 152) = v24;
  *(void *)(v20 + 160) = a18;
  *(void *)(v20 + 168) = a19;
  *(unsigned char *)(v20 + 129) = a20;
  if (a7)
  {
    sub_1C11EF6EC();
    uint64_t inited = swift_initStackObject();
    uint64_t v27 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    uint64_t v28 = *(void *)(a7 + 72);
    if ((~v28 & 0xF000000000000007) != 0)
    {
      long long v31 = &protocol witness table for FormatBackground;
      uint64_t v30 = &type metadata for FormatBackground;
      uint64_t v29 = *(void *)(a7 + 72);
    }
    else
    {
      uint64_t v29 = 0;
      uint64_t v30 = 0;
      long long v31 = 0;
      *(void *)(inited + 40) = 0;
      *(void *)(inited + 48) = 0;
    }
    *(void *)(inited + 32) = v29;
    *(void *)(inited + 56) = v30;
    *(void *)(inited + 64) = v31;
    swift_retain_n();
    swift_retain();
    sub_1BFEF683C(v28);
    uint64_t v32 = sub_1BFE70334(v27);
    swift_setDeallocating();
    sub_1BFE4D1E4(0, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
    swift_arrayDestroy();
    swift_release();
    swift_release_n();
  }
  else
  {
    uint64_t v32 = MEMORY[0x1E4FBC870];
  }
  *(void *)(v20 + 176) = v32;
  return v20;
}

uint64_t sub_1BFE6F228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(*v3 >> 60)
  {
    case 5:
      uint64_t v7 = *(void *)(*(void *)((*v3 & 0xFFFFFFFFFFFFFFFLL) + 0x10) + 16);
      if (!v7) {
        goto LABEL_2;
      }
      swift_retain();
      swift_bridgeObjectRetain_n();
      uint64_t v8 = swift_bridgeObjectRetain();
      uint64_t v9 = 32;
      do
      {
        sub_1BFF273E0(v8);
        char v11 = v10;
        uint64_t v8 = sub_1BFF27F20();
        if (v11) {
          break;
        }
        v9 += 16;
        --v7;
      }
      while (v7);
      swift_release();
      swift_bridgeObjectRelease_n();
      break;
    case 6:
      sub_1BFF5AAC4(0, (unint64_t *)&qword_1EB87C438, (uint64_t)&type metadata for FormatNodeCacheKey, MEMORY[0x1E4FBBE00]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C1527210;
      swift_retain();
      swift_retain();
      *(void *)(inited + 32) = sub_1BFE6F228(a1, a2, a3);
      *(void *)(inited + 40) = v13;
      *(unsigned char *)(inited + 48) = v14 & 1;
      *(void *)(inited + 56) = sub_1BFE6F228(a1, a2, a3);
      *(void *)(inited + 64) = v15;
      *(unsigned char *)(inited + 72) = v16 & 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = 0;
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_release();
      goto LABEL_18;
    case 7:
      swift_retain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      a1 = sub_1BFE6F228(a1, a2, a3);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release_n();
      break;
    case 8:
      sub_1BFF5AAC4(0, (unint64_t *)&qword_1EB87C438, (uint64_t)&type metadata for FormatNodeCacheKey, MEMORY[0x1E4FBBE00]);
      uint64_t v17 = swift_initStackObject();
      *(_OWORD *)(v17 + 16) = xmmword_1C1527210;
      swift_retain();
      swift_bridgeObjectRetain();
      *(void *)(v17 + 32) = sub_1BFE6F228(a1, a2, a3);
      *(void *)(v17 + 40) = v18;
      *(unsigned char *)(v17 + 48) = v19 & 1;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C125B264(v20, a1, a2, a3);
      uint64_t v22 = *(void *)(v21 + 16);
      if (v22)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = v21 + 40;
        uint64_t v24 = v22;
        do
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v23 += 24;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease();
        char v25 = 0;
        uint64_t v26 = (char *)(v21 + 48);
        do
        {
          char v27 = *v26;
          v26 += 24;
          v25 |= v27;
          --v22;
        }
        while (v22);
      }
      else
      {
        char v25 = 0;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)(v17 + 56) = 0;
      *(void *)(v17 + 64) = 0xE000000000000000;
      *(unsigned char *)(v17 + 72) = v25 & 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = 0;
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
LABEL_18:
      swift_release();
      break;
    default:
LABEL_2:
      swift_bridgeObjectRetain();
      break;
  }
  return a1;
}

uint64_t sub_1BFE6F78C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9 = *a1;
  char v10 = a2 + 2;
  uint64_t v11 = *(void *)(a3 + 40);
  uint64_t v40 = a5;
  if (v11)
  {
    uint64_t v36 = *(void *)(v11 + 16);
    swift_retain();
  }
  else
  {
    uint64_t v36 = 0;
  }
  swift_beginAccess();
  uint64_t v35 = *(void *)(a3 + 56);
  swift_beginAccess();
  unint64_t v39 = *(void *)(a3 + 64);
  unint64_t v12 = v39;
  swift_retain();
  sub_1BFE6FA30(v39);
  uint64_t v34 = v9;
  sub_1BFE6EF70(a4, v38);
  sub_1BFF0056C(v12);
  uint64_t v33 = v38[0];
  swift_beginAccess();
  uint64_t v32 = *(unsigned __int8 *)(a3 + 72);
  sub_1C1517EFC();
  uint64_t v31 = *(void *)(a3 + 96);
  uint64_t v30 = *(unsigned __int8 *)(a3 + 104);
  swift_beginAccess();
  uint64_t v13 = a2[4];
  uint64_t v28 = a2[3];
  uint64_t v29 = a2[2];
  unint64_t v14 = a2[5];
  a2[2] = v34;
  a2[3] = v36;
  a2[4] = v35;
  a2[5] = v33;
  a2[6] = v32;
  a2[7] = v37;
  a2[8] = v31;
  a2[9] = v30;
  uint64_t v15 = v40;
  a2[10] = 0;
  a2[11] = v15;
  swift_retain();
  sub_1BFE6FA4C(v29, v28, v13, v14);
  uint64_t result = swift_beginAccess();
  if (*(void *)(a3 + 128))
  {
    *a6 = 0xA000000000000004;
  }
  else
  {
    uint64_t result = swift_beginAccess();
    uint64_t v17 = *v10;
    if (*v10)
    {
      uint64_t v19 = a2[10];
      uint64_t v18 = a2[11];
      uint64_t v20 = a2[8];
      uint64_t v40 = a2[9];
      uint64_t v21 = a2[7];
      char v22 = *((unsigned char *)a2 + 48);
      uint64_t v24 = a2[4];
      unint64_t v23 = a2[5];
      uint64_t v25 = a2[3];
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v17;
      *(void *)(v26 + 24) = v25;
      *(void *)(v26 + 32) = v24;
      *(void *)(v26 + 40) = v23;
      *(unsigned char *)(v26 + 48) = v22 & 1;
      *(void *)(v26 + 56) = v21;
      *(void *)(v26 + 64) = v20;
      *(unsigned char *)(v26 + 72) = v40;
      *(void *)(v26 + 80) = v19;
      *(void *)(v26 + 88) = v18;
      *a6 = v26 | 0x1000000000000000;
      swift_retain();
      swift_retain();
      sub_1BFE6FA30(v23);
      swift_retain();
      swift_retain();
      return swift_retain();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

unint64_t sub_1BFE6FA30(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BFE6FA4C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result)
  {
    swift_release();
    swift_release();
    sub_1BFF0056C(a4);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t FormatViewNodeStyle.auxViewRequirements.getter()
{
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EB87A888, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v2 = *(void *)(v0 + 64);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    uint64_t v5 = &protocol witness table for FormatBackground;
    uint64_t v4 = &type metadata for FormatBackground;
    uint64_t v3 = *(void *)(v0 + 64);
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    *(void *)(inited + 40) = 0;
    *(void *)(inited + 48) = 0;
  }
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 64) = v5;
  sub_1BFEF683C(v2);
  uint64_t v6 = sub_1BFE70334(inited);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  swift_arrayDestroy();
  return v6;
}

uint64_t FormatTextNodeStyle.auxViewRequirements.getter()
{
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EB87A888, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  sub_1BFF66964(v0 + 64, (uint64_t)v5, (unint64_t *)&qword_1EB873B18);
  sub_1BFF66964((uint64_t)v5, (uint64_t)v6, (unint64_t *)&qword_1EB873B18);
  if (sub_1C044587C((uint64_t)v6) == 1)
  {
    *(void *)(inited + 64) = 0;
    *(_OWORD *)(inited + 32) = 0u;
    *(_OWORD *)(inited + 48) = 0u;
  }
  else
  {
    *(void *)(inited + 56) = &type metadata for FormatFill;
    *(void *)(inited + 64) = &protocol witness table for FormatFill;
    uint64_t v2 = swift_allocObject();
    *(void *)(inited + 32) = v2;
    sub_1BFF6530C((uint64_t)v6, v2 + 16);
  }
  sub_1BFF65020(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
  uint64_t v3 = sub_1BFE70334(inited);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  swift_arrayDestroy();
  return v3;
}

uint64_t FormatImageNodeStyle.auxViewRequirements.getter()
{
  sub_1BFE6FE94(0, (unint64_t *)&qword_1EB87A888, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v2 = *(void *)(v0 + 72);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    uint64_t v5 = &protocol witness table for FormatBackground;
    uint64_t v4 = &type metadata for FormatBackground;
    uint64_t v3 = *(void *)(v0 + 72);
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    *(void *)(inited + 40) = 0;
    *(void *)(inited + 48) = 0;
  }
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 64) = v5;
  sub_1BFEF683C(v2);
  uint64_t v6 = sub_1BFE70334(inited);
  swift_setDeallocating();
  sub_1BFE4D1E4(0, &qword_1EB879688, (unint64_t *)&qword_1EB879680);
  swift_arrayDestroy();
  return v6;
}

void sub_1BFE6FE30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE6FE94(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1BFE4D1E4(255, a3, a4);
    unint64_t v5 = sub_1C152089C();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFE6FEF0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v2 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v3 = MEMORY[0x1E4FBC870];
  do
  {
    sub_1BFE7001C(v2, (uint64_t)v15);
    sub_1BFE7001C((uint64_t)v15, (uint64_t)&v10);
    if (v11)
    {
      sub_1BFC773DC(&v10, (uint64_t)v12);
      uint64_t v5 = v13;
      uint64_t v6 = v14;
      __swift_project_boxed_opaque_existential_1(v12, v13);
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      swift_bridgeObjectRetain();
      uint64_t v8 = v7(v5, v6);
      uint64_t v4 = sub_1BFE7031C(v8, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    }
    else
    {
      sub_1BFE70154((uint64_t)&v10);
      swift_bridgeObjectRetain();
      uint64_t v4 = v3;
    }
    sub_1BFE70154((uint64_t)v15);
    swift_bridgeObjectRelease();
    v2 += 40;
    uint64_t v3 = v4;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BFE7001C(uint64_t a1, uint64_t a2)
{
  sub_1C0399F9C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BFE70080(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1BFC845BC(255, (unint64_t *)&qword_1EA1974E0);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1BFE700F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFE70154(uint64_t a1)
{
  sub_1C0399F9C(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFE701B0(uint64_t result, uint64_t a2, uint64_t (*a3)(char *, void))
{
  uint64_t v4 = result;
  int64_t v5 = 0;
  uint64_t v17 = a2;
  uint64_t v6 = result + 56;
  uint64_t v7 = 1 << *(unsigned char *)(result + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(result + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v10) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14)
        {
          int64_t v5 = v13 + 3;
          if (v13 + 3 >= v10) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v6 + 8 * v5);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    uint64_t result = a3(&v16, *(unsigned __int8 *)(*(void *)(v4 + 48) + v12));
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v10)
  {
LABEL_23:
    swift_release();
    return v17;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BFE7031C(uint64_t a1, uint64_t a2)
{
  return sub_1BFE701B0(a1, a2, sub_1BFE7045C);
}

uint64_t FormatFill.auxViewRequirements.getter()
{
  sub_1BFF6530C(v0, (uint64_t)v3);
  sub_1BFF6530C((uint64_t)v3, (uint64_t)v4);
  switch(sub_1C0444FE8((uint64_t)v4))
  {
    case 1u:
      sub_1C0445038((uint64_t)v4);
      uint64_t v2 = &unk_1F1B68830;
      goto LABEL_5;
    case 2u:
      sub_1C0445038((uint64_t)v4);
      uint64_t v2 = &unk_1F1B68858;
LABEL_5:
      uint64_t result = sub_1C00B92B4((uint64_t)v2);
      break;
    default:
      sub_1C0445038((uint64_t)v4);
      uint64_t result = MEMORY[0x1E4FBC870];
      break;
  }
  return result;
}

uint64_t FormatBackground.auxViewRequirements.getter()
{
  uint64_t v1 = &unk_1F1B688A8;
  switch(*v0 >> 61)
  {
    case 1:
      goto LABEL_4;
    case 2:
      uint64_t v1 = &unk_1F1B688D0;
LABEL_4:
      uint64_t result = sub_1C00B92B4((uint64_t)v1);
      break;
    case 4:
      uint64_t result = sub_1C00B92B4((uint64_t)&unk_1F1B688F8);
      break;
    case 5:
      uint64_t result = sub_1C00B92B4((uint64_t)&unk_1F1B68920);
      break;
    case 6:
      uint64_t result = sub_1C00B92B4((uint64_t)&unk_1F1B68948);
      break;
    case 7:
      uint64_t result = sub_1C00B92B4((uint64_t)&unk_1F1B68970);
      break;
    default:
      uint64_t result = MEMORY[0x1E4FBC870];
      break;
  }
  return result;
}

uint64_t sub_1BFE7045C(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C1520DBC();
  uint64_t v18 = a1;
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1C1520E0C();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_1BFE7094C(a2, v8, isUniquelyReferenced_nonNull_native);
    uint64_t *v2 = v19;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    uint64_t v17 = v18;
    goto LABEL_27;
  }
  uint64_t v9 = ~v7;
  while (2)
  {
    unint64_t v10 = 0xE800000000000000;
    uint64_t v11 = 0x746E656964617267;
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      case 1:
        uint64_t v11 = 0x72476C6169646172;
        unint64_t v10 = 0xEE00746E65696461;
        break;
      case 2:
        uint64_t v11 = 0x65695674696C7073;
        unint64_t v10 = 0xE900000000000077;
        break;
      case 3:
        unint64_t v10 = 0xE500000000000000;
        uint64_t v11 = 0x6567616D69;
        break;
      case 4:
        unint64_t v10 = 0xE400000000000000;
        uint64_t v11 = 1633905005;
        break;
      case 5:
        uint64_t v11 = 0x66456C6175736976;
        unint64_t v10 = 0xEC00000074636566;
        break;
      default:
        break;
    }
    unint64_t v12 = 0xE800000000000000;
    uint64_t v13 = 0x746E656964617267;
    switch((char)a2)
    {
      case 1:
        unint64_t v12 = 0xEE00746E65696461;
        if (v11 == 0x72476C6169646172) {
          goto LABEL_18;
        }
        goto LABEL_19;
      case 2:
        unint64_t v12 = 0xE900000000000077;
        if (v11 != 0x65695674696C7073) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 3:
        unint64_t v12 = 0xE500000000000000;
        if (v11 != 0x6567616D69) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 4:
        unint64_t v12 = 0xE400000000000000;
        uint64_t v13 = 1633905005;
        goto LABEL_17;
      case 5:
        unint64_t v12 = 0xEC00000074636566;
        if (v11 != 0x66456C6175736976) {
          goto LABEL_19;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (v11 != v13) {
          goto LABEL_19;
        }
LABEL_18:
        if (v10 != v12)
        {
LABEL_19:
          char v14 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v14) {
            goto LABEL_26;
          }
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_24;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_26:
        uint64_t v17 = v18;
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_27:
        *uint64_t v17 = a2;
        return result;
    }
  }
}

uint64_t sub_1BFE70848()
{
  return sub_1C1520E0C();
}

uint64_t sub_1BFE7094C(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C02BC5A4();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_1C02C6E30((unint64_t *)&unk_1EB87A360, (void (*)(void))sub_1C006A604);
        goto LABEL_31;
      }
      sub_1BFE70D64();
    }
    uint64_t v8 = *v3;
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C1520E0C();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE800000000000000;
        uint64_t v12 = 0x746E656964617267;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v12 = 0x72476C6169646172;
            unint64_t v11 = 0xEE00746E65696461;
            break;
          case 2:
            uint64_t v12 = 0x65695674696C7073;
            unint64_t v11 = 0xE900000000000077;
            break;
          case 3:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x6567616D69;
            break;
          case 4:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1633905005;
            break;
          case 5:
            uint64_t v12 = 0x66456C6175736976;
            unint64_t v11 = 0xEC00000074636566;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE800000000000000;
        uint64_t v14 = 0x746E656964617267;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xEE00746E65696461;
            if (v12 == 0x72476C6169646172) {
              goto LABEL_25;
            }
            goto LABEL_26;
          case 2:
            unint64_t v13 = 0xE900000000000077;
            if (v12 != 0x65695674696C7073) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 3:
            unint64_t v13 = 0xE500000000000000;
            uint64_t v14 = 0x6567616D69;
            goto LABEL_24;
          case 4:
            unint64_t v13 = 0xE400000000000000;
            if (v12 != 1633905005) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 5:
            unint64_t v13 = 0xEC00000074636566;
            if (v12 != 0x66456C6175736976) {
              goto LABEL_26;
            }
            goto LABEL_25;
          default:
LABEL_24:
            if (v12 != v14) {
              goto LABEL_26;
            }
LABEL_25:
            if (v11 == v13) {
              goto LABEL_34;
            }
LABEL_26:
            char v15 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_35;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_31:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease_n();
LABEL_35:
    uint64_t result = sub_1C1520CEC();
    __break(1u);
  }
  else
  {
    *(void *)(v16 + 16) = v19;
  }
  return result;
}

uint64_t sub_1BFE70D64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C02CE270(0, (unint64_t *)&unk_1EB87A360, (void (*)(void))sub_1C006A604);
  uint64_t v3 = sub_1C152008C();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_36:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (v8)
  {
    unint64_t v17 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v18 = v17 | (v12 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1C1520DBC();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C1520E0C();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = result & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v13) >> 6;
      do
      {
        if (++v15 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v24 = v15 == v23;
        if (v15 == v23) {
          unint64_t v15 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v10 + 8 * v15);
      }
      while (v25 == -1);
      unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
    }
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
  int64_t v19 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v19 >= v9) {
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v19);
  ++v12;
  if (v20) {
    goto LABEL_32;
  }
  int64_t v12 = v19 + 1;
  if (v19 + 1 >= v9) {
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v12);
  if (v20) {
    goto LABEL_32;
  }
  int64_t v12 = v19 + 2;
  if (v19 + 2 >= v9) {
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v12);
  if (v20)
  {
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
    goto LABEL_33;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v9)
  {
LABEL_34:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_36;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_32;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_34;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_32;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1BFE710CC()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F69746172657469;
      break;
    case 2:
      uint64_t result = 7235949;
      break;
    case 3:
      uint64_t result = 7889261;
      break;
    case 4:
      uint64_t result = 0x656469727473;
      break;
    case 5:
      uint64_t result = 0x65706F6373;
      break;
    case 6:
      uint64_t result = 0x6E6572646C696863;
      break;
    case 7:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t FormatSnippetNode.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  char v70 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v71 = (char *)&v68 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v73 = (char *)&v68 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v72 = (char *)&v68 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v74 = (char *)&v68 - v14;
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v68 - v16;
  sub_1C08B4588();
  MEMORY[0x1F4188790](v18 - 8);
  unint64_t v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1C08B46B0();
  uint64_t v24 = v23;
  uint64_t v25 = sub_1C085F050(&qword_1EB891C80, (void (*)(uint64_t))sub_1C08B46B0);
  sub_1BFEFBD78(v4, v26, v21, v4, v24, (uint64_t)&type metadata for FormatVersions.JazzkonC, v22, (uint64_t)v20, v25, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v28 = v2[2];
  uint64_t v27 = v2[3];
  uint64_t v76 = v2;
  uint64_t v29 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v29 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_1C151928C();
  uint64_t v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1EB93CAB0);
  uint64_t v32 = *(void (**)(char *))(*(void *)(v30 - 8) + 16);
  uint64_t v75 = v31;
  v32(v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = v28;
  uint64_t v34 = v20;
  uint64_t v35 = v77;
  sub_1C06D6564(v33, v27, 0, 0, 0, (uint64_t)v17, (uint64_t)sub_1C01B158C, 0);
  if (v35)
  {
    sub_1BFEFEB68((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
LABEL_20:
    uint64_t v65 = (uint64_t)v34;
    return sub_1BFEFEB68(v65, (uint64_t (*)(void))sub_1C08B4588);
  }
  long long v77 = v20;
  sub_1BFEFEB68((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v36 = v76;
  swift_beginAccess();
  uint64_t v37 = v36[4];
  uint64_t v38 = v36[5];
  uint64_t v39 = (uint64_t)v74;
  uint64_t v69 = v32;
  ((void (*)(char *, uint64_t, uint64_t))v32)(v74, v75, v30);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06C09A4(v37, v38, 1, 0, 0, v39, (uint64_t)sub_1C01B158C, 0);
  uint64_t v34 = v77;
  sub_1BFEFEB68(v39, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v74 = 0;
  uint64_t v40 = (uint64_t)v72;
  uint64_t v41 = v75;
  uint64_t v42 = (void (*)(uint64_t, uint64_t, uint64_t))v69;
  ((void (*)(char *, uint64_t, uint64_t))v69)(v72, v75, v30);
  swift_storeEnumTagMultiPayload();
  sub_1BFEFEB68(v40, type metadata accessor for FormatVersionRequirement);
  v42(v40, v41, v30);
  swift_storeEnumTagMultiPayload();
  sub_1BFEFEB68(v40, type metadata accessor for FormatVersionRequirement);
  char v43 = v76;
  swift_beginAccess();
  uint64_t v44 = v43[10];
  uint64_t v45 = (uint64_t)v73;
  v42((uint64_t)v73, v41, v30);
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = *(void *)(v44 + 16);
  swift_bridgeObjectRetain();
  if (!v46)
  {
    uint64_t v68 = v30;
LABEL_13:
    unint64_t v52 = v76;
    goto LABEL_14;
  }
  unint64_t v47 = v74;
  char v48 = sub_1C083E100(v45, 4, 0, 0, (uint64_t)sub_1C01B158C, 0);
  if (v47)
  {
LABEL_7:
    sub_1BFEFEB68(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v74 = 0;
  uint64_t v68 = v30;
  if ((v48 & 1) == 0) {
    goto LABEL_13;
  }
  long long v81 = xmmword_1C1557FD0;
  char v82 = 0;
  uint64_t v49 = swift_bridgeObjectRetain();
  unint64_t v50 = sub_1BFE71F8C(v49);
  swift_bridgeObjectRelease();
  *(void *)&long long v78 = v50;
  swift_retain();
  uint64_t v51 = v74;
  sub_1BFE726FC((uint64_t *)&v78, sub_1BFE72780, sub_1BFE72EAC);
  unint64_t v52 = v76;
  uint64_t v74 = v51;
  if (!v51)
  {
    swift_release();
    uint64_t v80 = v78;
    sub_1C08B461C();
    uint64_t v72 = v53;
    sub_1C085F050(&qword_1EB86E1B0, (void (*)(uint64_t))sub_1C08B461C);
    uint64_t v54 = MEMORY[0x1E4FBB1A0];
    sub_1BFE9DEBC(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE71F14((unint64_t *)&qword_1EB85DF50, (unint64_t *)&qword_1EB879F20, v54);
    uint64_t v34 = v77;
    uint64_t v55 = v74;
    sub_1C1520BAC();
    if (v55)
    {
      swift_release();
      uint64_t v45 = (uint64_t)v73;
      goto LABEL_7;
    }
    uint64_t v74 = 0;
    swift_release();
    uint64_t v45 = (uint64_t)v73;
LABEL_14:
    sub_1BFEFEB68(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v56 = (uint64_t)v71;
    uint64_t v57 = v68;
    ((void (*)(char *, uint64_t, uint64_t))v69)(v71, v75, v68);
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = swift_bridgeObjectRetain();
    uint64_t v34 = v77;
    uint64_t v59 = v74;
    sub_1C06D67A4(v58, 5, 0, 0);
    sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    if (v59) {
      goto LABEL_20;
    }
    swift_beginAccess();
    unint64_t v60 = v52[12];
    uint64_t v61 = qword_1EB887638;
    swift_bridgeObjectRetain();
    if (v61 != -1) {
      swift_once();
    }
    uint64_t v62 = __swift_project_value_buffer(v57, (uint64_t)qword_1EB93CA98);
    uint64_t v63 = (uint64_t)v70;
    ((void (*)(char *, uint64_t, uint64_t))v69)(v70, v62, v57);
    swift_storeEnumTagMultiPayload();
    if (v60 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v67 = sub_1C15204BC();
      swift_bridgeObjectRelease();
      if (v67)
      {
LABEL_19:
        char v64 = sub_1C083E100(v63, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
        if (v64)
        {
          long long v78 = xmmword_1C1557FE0;
          char v79 = 0;
          unint64_t v83 = v60;
          sub_1C08B461C();
          sub_1C085F050(&qword_1EB86E1B0, (void (*)(uint64_t))sub_1C08B461C);
          sub_1BFE309D0(0, &qword_1EB880CA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, MEMORY[0x1E4FBB320]);
          sub_1BFE76608();
          sub_1C1520BAC();
        }
      }
    }
    else if (*(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_19;
    }
    sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v65 = (uint64_t)v77;
    return sub_1BFEFEB68(v65, (uint64_t (*)(void))sub_1C08B4588);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BFE71C78()
{
  uint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 0x7470697263736564;
      break;
    case 3:
      uint64_t result = 0x6E6572646C696863;
      break;
    case 4:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    case 5:
      uint64_t result = 0x726F7463656C6573;
      break;
    case 6:
      uint64_t result = 0x7365707974;
      break;
    case 7:
      uint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFE71D54()
{
  unint64_t result = 0x726F7463656C6573;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x756F72676B636162;
      break;
    case 2:
      unint64_t result = 0x73726564726F62;
      break;
    case 3:
      unint64_t result = 0x615272656E726F63;
      break;
    case 4:
      unint64_t result = 0x776F64616873;
      break;
    case 5:
      unint64_t result = 0x6168706C61;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFE71E34()
{
  unint64_t result = 0x696669746E656469;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 1701667182;
      break;
    case 3:
      unint64_t result = 0x7470697263736564;
      break;
    case 4:
      unint64_t result = 0x726F7463656C6573;
      break;
    case 5:
      unint64_t result = 0x736E6F6974706FLL;
      break;
    case 6:
      unint64_t result = 0x736B636F6C62;
      break;
    case 7:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFE71F14(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE9DEBC(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1BFE71F8C(uint64_t a1)
{
  return sub_1BFE72B60(a1, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1BFE72CAC);
}

uint64_t FormatBindExpression.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  char v43 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v45 = (char *)v42 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v46 = (char *)v42 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v42 - v10;
  sub_1C0875970();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v1;
  uint64_t v16 = (uint64_t)v1[1];
  unint64_t v47 = v1[2];
  char v48 = v15;
  uint64_t v44 = (uint64_t)v1[3];
  v42[3] = v1[4];
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_1C08757B4();
  uint64_t v20 = v19;
  uint64_t v21 = sub_1C085F050(&qword_1EB891E60, (void (*)(uint64_t))sub_1C08757B4);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatBindExpression, v22, v17, (uint64_t)&type metadata for FormatBindExpression, v20, (uint64_t)&type metadata for FormatVersions.JazzkonC, v18, (uint64_t)v14, v21, (uint64_t)&off_1F1C39B68);
  uint64_t v23 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v23 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1C151928C();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1EB93CAB0);
  uint64_t v26 = *(void *)(v24 - 8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  uint64_t v28 = v26 + 16;
  v27(v11, v25, v24);
  uint64_t v29 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v30 = v49;
  sub_1C06D15E8((uint64_t)v48, v16, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v30)
  {
    uint64_t v33 = (uint64_t)v14;
  }
  else
  {
    uint64_t v31 = (uint64_t)v46;
    v27(v46, v25, v24);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    char v32 = sub_1C0839744(v31, 1, 0, 0, (uint64_t)sub_1C01B158C, 0);
    char v48 = v27;
    uint64_t v49 = v14;
    v42[1] = v29;
    v42[2] = v28;
    if (v32)
    {
      v42[0] = v25;
      long long v51 = xmmword_1C153AB20;
      char v52 = 0;
      uint64_t v35 = swift_bridgeObjectRetain();
      uint64_t v36 = sub_1BFE74E78(v35);
      swift_bridgeObjectRelease();
      unint64_t v50 = v36;
      swift_retain();
      sub_1BFE726FC((uint64_t *)&v50, sub_1BFE73668, sub_1BFE73808);
      swift_release();
      uint64_t v53 = (uint64_t)v50;
      sub_1C0875A04();
      sub_1C085F050(&qword_1EB86E3B0, (void (*)(uint64_t))sub_1C0875A04);
      sub_1BFE9DEBC(0, &qword_1EB860C70, (uint64_t)&type metadata for FormatItemKind, MEMORY[0x1E4FBB320]);
      sub_1BFE74EA0();
      sub_1C1520BAC();
      swift_release();
      uint64_t v31 = (uint64_t)v46;
      uint64_t v25 = v42[0];
    }
    sub_1BFEFEB68(v31, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v37 = (uint64_t)v45;
    v48(v45, v25, v24);
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = v44;
    if (v44 != 1 && (sub_1C0839744(v37, 2, 0, 0, (uint64_t)sub_1C01B158C, 0) & 1) != 0)
    {
      long long v51 = xmmword_1C1557FA0;
      char v52 = 0;
      uint64_t v53 = v38;
      sub_1C0875A04();
      sub_1C085F050(&qword_1EB86E3B0, (void (*)(uint64_t))sub_1C0875A04);
      sub_1C1520BAC();
    }
    sub_1BFEFEB68(v37, type metadata accessor for FormatVersionRequirement);
    uint64_t v39 = (uint64_t)v43;
    v48(v43, v25, v24);
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v41 = (uint64_t)v49;
    sub_1C06D1828(v40, 3, 0, 0);
    sub_1BFEFEB68(v39, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v33 = v41;
  }
  return sub_1BFEFEB68(v33, (uint64_t (*)(void))sub_1C0875970);
}

uint64_t sub_1BFE726FC(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_1BFE72780(uint64_t a1)
{
  return sub_1BFF661D8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BFE72794(uint64_t result)
{
  uint64_t v3 = *(void *)(result + 16);
  uint64_t v4 = *(void **)v1;
  int64_t v5 = *(void *)(*(void *)v1 + 16);
  int64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v7 = result;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6) {
      int64_t v10 = v5 + v3;
    }
    else {
      int64_t v10 = v5;
    }
    uint64_t v4 = sub_1BFEF9B68(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    int64_t v9 = v4[3] >> 1;
  }
  uint64_t v11 = v4[2];
  uint64_t v12 = v9 - v11;
  uint64_t result = sub_1BFE72CAC((uint64_t)v38, &v4[2 * v11 + 4], v9 - v11, v7);
  if (result < v3) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v14 = v4[2];
    BOOL v15 = __OFADD__(v14, result);
    uint64_t v16 = v14 + result;
    if (v15)
    {
      __break(1u);
      goto LABEL_48;
    }
    v4[2] = v16;
  }
  if (result != v12)
  {
LABEL_13:
    uint64_t result = sub_1BFEFB808();
    *(void *)uint64_t v1 = v4;
    return result;
  }
LABEL_16:
  int64_t v2 = v4[2];
  uint64_t v3 = v38[0];
  uint64_t v37 = v38[1];
  uint64_t v13 = v39;
  int64_t v6 = v40;
  if (v41)
  {
    unint64_t v17 = (v41 - 1) & v41;
    unint64_t v18 = __clz(__rbit64(v41)) | (v40 << 6);
    int64_t v36 = (unint64_t)(v39 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_48:
  int64_t v32 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_66;
  }
  int64_t v36 = (unint64_t)(v13 + 64) >> 6;
  if (v32 >= v36) {
    goto LABEL_13;
  }
  unint64_t v33 = *(void *)(v37 + 8 * v32);
  int64_t v34 = v6 + 1;
  if (!v33)
  {
    int64_t v34 = v6 + 2;
    if (v6 + 2 >= v36) {
      goto LABEL_13;
    }
    unint64_t v33 = *(void *)(v37 + 8 * v34);
    if (!v33)
    {
      int64_t v34 = v6 + 3;
      if (v6 + 3 >= v36) {
        goto LABEL_13;
      }
      unint64_t v33 = *(void *)(v37 + 8 * v34);
      if (!v33)
      {
        int64_t v34 = v6 + 4;
        if (v6 + 4 >= v36) {
          goto LABEL_13;
        }
        unint64_t v33 = *(void *)(v37 + 8 * v34);
        if (!v33)
        {
          int64_t v34 = v6 + 5;
          if (v6 + 5 >= v36) {
            goto LABEL_13;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v34);
          if (!v33)
          {
            int64_t v35 = v6 + 6;
            do
            {
              if (v36 == v35) {
                goto LABEL_13;
              }
              unint64_t v33 = *(void *)(v37 + 8 * v35++);
            }
            while (!v33);
            int64_t v34 = v35 - 1;
          }
        }
      }
    }
  }
  unint64_t v17 = (v33 - 1) & v33;
  unint64_t v18 = __clz(__rbit64(v33)) + (v34 << 6);
  int64_t v6 = v34;
LABEL_18:
  uint64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v18);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v22 = v4[3];
    int64_t v23 = v22 >> 1;
    if ((uint64_t)(v22 >> 1) < v2 + 1) {
      break;
    }
    if (v2 < v23) {
      goto LABEL_23;
    }
LABEL_20:
    v4[2] = v2;
  }
  uint64_t result = (uint64_t)sub_1BFEF9B68((void *)(v22 > 1), v2 + 1, 1, v4);
  uint64_t v4 = (void *)result;
  int64_t v23 = *(void *)(result + 24) >> 1;
  if (v2 >= v23) {
    goto LABEL_20;
  }
  while (1)
  {
LABEL_23:
    uint64_t v24 = &v4[2 * v2 + 4];
    *uint64_t v24 = v21;
    v24[1] = v20;
    ++v2;
    if (v17)
    {
      unint64_t v25 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v26 = v25 | (v6 << 6);
      goto LABEL_41;
    }
    int64_t v27 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      break;
    }
    if (v27 >= v36) {
      goto LABEL_45;
    }
    unint64_t v28 = *(void *)(v37 + 8 * v27);
    int64_t v29 = v6 + 1;
    if (!v28)
    {
      int64_t v29 = v6 + 2;
      if (v6 + 2 >= v36) {
        goto LABEL_45;
      }
      unint64_t v28 = *(void *)(v37 + 8 * v29);
      if (!v28)
      {
        int64_t v29 = v6 + 3;
        if (v6 + 3 >= v36) {
          goto LABEL_45;
        }
        unint64_t v28 = *(void *)(v37 + 8 * v29);
        if (!v28)
        {
          int64_t v29 = v6 + 4;
          if (v6 + 4 >= v36) {
            goto LABEL_45;
          }
          unint64_t v28 = *(void *)(v37 + 8 * v29);
          if (!v28)
          {
            int64_t v29 = v6 + 5;
            if (v6 + 5 >= v36) {
              goto LABEL_45;
            }
            unint64_t v28 = *(void *)(v37 + 8 * v29);
            if (!v28)
            {
              int64_t v30 = v6 + 6;
              while (v36 != v30)
              {
                unint64_t v28 = *(void *)(v37 + 8 * v30++);
                if (v28)
                {
                  int64_t v29 = v30 - 1;
                  goto LABEL_40;
                }
              }
LABEL_45:
              v4[2] = v2;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_40:
    unint64_t v17 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    int64_t v6 = v29;
LABEL_41:
    uint64_t v31 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v26);
    uint64_t v21 = *v31;
    uint64_t v20 = v31[1];
    if (v2 >= v23)
    {
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

void *sub_1BFE72B60(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t *, void *, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C00BC6D4(0, a2, a3, MEMORY[0x1E4FBBE00]);
  uint64_t v7 = (void *)swift_allocObject();
  int64_t v8 = _swift_stdlib_malloc_size(v7);
  uint64_t v9 = v8 - 32;
  if (v8 < 32) {
    uint64_t v9 = v8 - 17;
  }
  v7[2] = v4;
  v7[3] = 2 * (v9 >> 4);
  uint64_t v10 = a4(&v12, v7 + 4, v4, a1);
  swift_bridgeObjectRetain();
  sub_1BFEFB808();
  if (v10 != v4)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v7;
}

void sub_1BFE72C60(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFE72CAC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BFE72EAC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1BFE73598(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  char v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      uint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          double v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1C0254DE8((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            double v97 = sub_1C063604C((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          long long v100 = &v97[16 * v96 + 32];
          *(void *)long long v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C151ECCC();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    int64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    int64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1C1520A9C();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      int64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1C1520A9C()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C0634CC8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_1C0634CC8((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    char v43 = &v11[16 * v41 + 32];
    *(void *)char v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            char v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        unint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1C0254DE8((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      unint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        int64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1C1520A9C() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1BFE73598(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1C1520A9C(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFE73668(uint64_t a1)
{
  return sub_1BFE7367C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BFE7367C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&qword_1EB880EA8, (uint64_t)&type metadata for FormatItemKind, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  BOOL v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFE73808(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_293;
    }
    if (v3) {
      return sub_1BFF8F058(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_301;
  }
  uint64_t v124 = v3;
  uint64_t v119 = result;
  uint64_t v117 = a1;
  uint64_t v128 = v1;
  if (v3 < 2)
  {
    uint64_t v7 = MEMORY[0x1E4FBC860];
    v127 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
LABEL_258:
      uint64_t v122 = v7;
      if (v12 >= 2)
      {
        uint64_t v108 = *v117;
        do
        {
          unint64_t v109 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_288;
          }
          if (!v108) {
            goto LABEL_300;
          }
          uint64_t v110 = v10;
          uint64_t v111 = v10 + 32;
          uint64_t v112 = *(void *)&v10[16 * v109 + 32];
          uint64_t v113 = *(void *)&v10[16 * v12 + 24];
          sub_1C084A3F4((uint64_t *)(v108 + 16 * v112), (uint64_t *)(v108 + 16 * *(void *)&v111[16 * v12 - 16]), v108 + 16 * v113, v127);
          if (v128) {
            goto LABEL_270;
          }
          if (v113 < v112) {
            goto LABEL_289;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v110 = sub_1C063604C((uint64_t)v110);
          }
          if (v109 >= *((void *)v110 + 2)) {
            goto LABEL_290;
          }
          uint64_t v114 = &v110[16 * v109 + 32];
          *(void *)uint64_t v114 = v112;
          *((void *)v114 + 1) = v113;
          unint64_t v115 = *((void *)v110 + 2);
          if (v12 > v115) {
            goto LABEL_291;
          }
          uint64_t v10 = v110;
          memmove(&v110[16 * v12 + 16], &v110[16 * v12 + 32], 16 * (v115 - v12));
          *((void *)v110 + 2) = v115 - 1;
          unint64_t v12 = v115 - 1;
        }
        while (v115 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v122 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C151ECCC();
    *(void *)(v7 + 16) = v6;
    v127 = (char *)(v7 + 32);
  }
  uint64_t v122 = v7;
  uint64_t v8 = 0;
  uint64_t v9 = *a1;
  uint64_t v118 = *a1 + 40;
  uint64_t v116 = *a1 - 16;
  uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v11 = v124;
  uint64_t v130 = *a1;
LABEL_15:
  uint64_t v13 = v8;
  uint64_t v14 = v8 + 1;
  uint64_t v125 = v8;
  if (v8 + 1 >= v11)
  {
    uint64_t v15 = v128;
    goto LABEL_131;
  }
  uint64_t v120 = v10;
  uint64_t v15 = v128;
  uint64_t v16 = (uint64_t *)(v9 + 16 * v14);
  uint64_t v18 = *v16;
  unint64_t v17 = v16[1];
  int v19 = (uint64_t *)(v9 + 16 * v8);
  uint64_t v21 = *v19;
  unint64_t v20 = v19[1];
  unint64_t v22 = 0xE700000000000000;
  uint64_t v23 = 0x656C6369747261;
  switch(v17)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v22 = 0xE500000000000000;
      uint64_t v23 = 0x6575737369;
      break;
    case 2uLL:
      unint64_t v22 = 0xE800000000000000;
      uint64_t v23 = 0x6465626D45626577;
      break;
    case 3uLL:
      unint64_t v22 = 0xEA00000000006B63;
      uint64_t v23 = 0x6172546F69647561;
      break;
    case 4uLL:
      unint64_t v22 = 0xE300000000000000;
      uint64_t v23 = 6775156;
      break;
    case 5uLL:
      unint64_t v22 = 0xE500000000000000;
      uint64_t v23 = 0x65726F6373;
      break;
    case 6uLL:
      unint64_t v22 = 0xE800000000000000;
      uint64_t v23 = 0x676E69646E617473;
      break;
    case 7uLL:
      uint64_t v23 = 0x74656B63617262;
      break;
    case 8uLL:
      unint64_t v22 = 0xE800000000000000;
      uint64_t v23 = 0x65726F6353786F62;
      break;
    case 9uLL:
      uint64_t v23 = 0x726F6353656E696CLL;
      unint64_t v22 = 0xE900000000000065;
      break;
    case 0xAuLL:
      uint64_t v23 = 0x65527972756A6E69;
      unint64_t v22 = 0xEC00000074726F70;
      break;
    case 0xBuLL:
      unint64_t v22 = 0xE900000000000072;
      uint64_t v23 = 0x6579616C5079656BLL;
      break;
    case 0xCuLL:
      unint64_t v22 = 0xE600000000000000;
      uint64_t v23 = 0x656C7A7A7570;
      break;
    case 0xDuLL:
      uint64_t v23 = 0x7954656C7A7A7570;
      unint64_t v22 = 0xEA00000000006570;
      break;
    case 0xEuLL:
      uint64_t v23 = 0x7453656C7A7A7570;
      unint64_t v22 = 0xEF63697473697461;
      break;
    default:
      uint64_t v23 = v18;
      unint64_t v22 = v17;
      break;
  }
  unint64_t v24 = 0xE700000000000000;
  uint64_t v25 = 0x656C6369747261;
  switch(v20)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v24 = 0xE500000000000000;
      uint64_t v25 = 0x6575737369;
      break;
    case 2uLL:
      unint64_t v24 = 0xE800000000000000;
      uint64_t v25 = 0x6465626D45626577;
      break;
    case 3uLL:
      unint64_t v24 = 0xEA00000000006B63;
      uint64_t v25 = 0x6172546F69647561;
      break;
    case 4uLL:
      unint64_t v24 = 0xE300000000000000;
      uint64_t v25 = 6775156;
      break;
    case 5uLL:
      unint64_t v24 = 0xE500000000000000;
      uint64_t v25 = 0x65726F6373;
      break;
    case 6uLL:
      unint64_t v24 = 0xE800000000000000;
      uint64_t v25 = 0x676E69646E617473;
      break;
    case 7uLL:
      uint64_t v25 = 0x74656B63617262;
      break;
    case 8uLL:
      unint64_t v24 = 0xE800000000000000;
      uint64_t v25 = 0x65726F6353786F62;
      break;
    case 9uLL:
      uint64_t v25 = 0x726F6353656E696CLL;
      unint64_t v24 = 0xE900000000000065;
      break;
    case 0xAuLL:
      uint64_t v25 = 0x65527972756A6E69;
      unint64_t v24 = 0xEC00000074726F70;
      break;
    case 0xBuLL:
      unint64_t v24 = 0xE900000000000072;
      uint64_t v25 = 0x6579616C5079656BLL;
      break;
    case 0xCuLL:
      unint64_t v24 = 0xE600000000000000;
      uint64_t v25 = 0x656C7A7A7570;
      break;
    case 0xDuLL:
      uint64_t v25 = 0x7954656C7A7A7570;
      unint64_t v24 = 0xEA00000000006570;
      break;
    case 0xEuLL:
      uint64_t v25 = 0x7453656C7A7A7570;
      unint64_t v24 = 0xEF63697473697461;
      break;
    default:
      uint64_t v25 = *v19;
      unint64_t v24 = v19[1];
      break;
  }
  if (v23 == v25 && v22 == v24) {
    int v134 = 0;
  }
  else {
    int v134 = sub_1C1520A9C();
  }
  sub_1BFE74E64(v21, v20);
  sub_1BFE74E64(v18, v17);
  sub_1BFE74E64(v18, v17);
  sub_1BFE74E64(v21, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFF8F648(v21, v20);
  sub_1BFF8F648(v18, v17);
  uint64_t v14 = v13 + 2;
  if (v13 + 2 >= v11)
  {
    uint64_t v9 = v130;
    goto LABEL_123;
  }
  uint64_t v26 = (unint64_t *)(v118 + 16 * v13);
  while (2)
  {
    uint64_t v131 = v14;
    uint64_t v27 = *(v26 - 1);
    unint64_t v28 = *v26;
    uint64_t v30 = *(v26 - 3);
    unint64_t v29 = *(v26 - 2);
    unint64_t v31 = 0xE700000000000000;
    unint64_t v32 = 0x656C6369747261;
    switch(*v26)
    {
      case 0uLL:
        goto LABEL_83;
      case 1uLL:
        unint64_t v31 = 0xE500000000000000;
        uint64_t v33 = 1970500457;
        goto LABEL_76;
      case 2uLL:
        unint64_t v31 = 0xE800000000000000;
        unint64_t v32 = 0x6465626D45626577;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      case 3uLL:
        unint64_t v31 = 0xEA00000000006B63;
        unint64_t v32 = 0x6172546F69647561;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      case 4uLL:
        unint64_t v31 = 0xE300000000000000;
        unint64_t v32 = 6775156;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      case 5uLL:
        unint64_t v31 = 0xE500000000000000;
        uint64_t v33 = 1919902579;
LABEL_76:
        unint64_t v32 = v33 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      case 6uLL:
        unint64_t v31 = 0xE800000000000000;
        unint64_t v32 = 0x676E69646E617473;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      case 7uLL:
        unint64_t v32 = 0x74656B63617262;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      case 8uLL:
        unint64_t v31 = 0xE800000000000000;
        unint64_t v32 = 0x65726F6353786F62;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      case 9uLL:
        unint64_t v32 = 0x726F6353656E696CLL;
        unint64_t v31 = 0xE900000000000065;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      case 0xAuLL:
        unint64_t v32 = 0x65527972756A6E69;
        unint64_t v31 = 0xEC00000074726F70;
        goto LABEL_83;
      case 0xBuLL:
        unint64_t v31 = 0xE900000000000072;
        unint64_t v32 = 0x6579616C5079656BLL;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      case 0xCuLL:
        unint64_t v31 = 0xE600000000000000;
        unint64_t v32 = 0x656C7A7A7570;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      case 0xDuLL:
        unint64_t v32 = 0x7954656C7A7A7570;
        unint64_t v31 = 0xEA00000000006570;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      case 0xEuLL:
        unint64_t v32 = 0x7453656C7A7A7570;
        unint64_t v31 = 0xEF63697473697461;
        if (v29 > 0xE) {
          goto LABEL_77;
        }
        goto LABEL_83;
      default:
        unint64_t v32 = *(v26 - 1);
        unint64_t v31 = *v26;
        if (v29 <= 0xE)
        {
LABEL_83:
          unint64_t v35 = 0xE700000000000000;
          uint64_t v34 = 0x656C6369747261;
          switch(v29)
          {
            case 0uLL:
              goto LABEL_84;
            case 1uLL:
              unint64_t v35 = 0xE500000000000000;
              uint64_t v37 = 1970500457;
              break;
            case 2uLL:
              unint64_t v35 = 0xE800000000000000;
              if (v32 != 0x6465626D45626577) {
                goto LABEL_116;
              }
              goto LABEL_85;
            case 3uLL:
              unint64_t v35 = 0xEA00000000006B63;
              if (v32 != 0x6172546F69647561) {
                goto LABEL_116;
              }
              goto LABEL_85;
            case 4uLL:
              unint64_t v35 = 0xE300000000000000;
              if (v32 != 6775156) {
                goto LABEL_116;
              }
              goto LABEL_85;
            case 5uLL:
              unint64_t v35 = 0xE500000000000000;
              uint64_t v37 = 1919902579;
              break;
            case 6uLL:
              unint64_t v35 = 0xE800000000000000;
              if (v32 != 0x676E69646E617473) {
                goto LABEL_116;
              }
              goto LABEL_85;
            case 7uLL:
              if (v32 != 0x74656B63617262) {
                goto LABEL_116;
              }
              goto LABEL_85;
            case 8uLL:
              unint64_t v35 = 0xE800000000000000;
              if (v32 != 0x65726F6353786F62) {
                goto LABEL_116;
              }
              goto LABEL_85;
            case 9uLL:
              unint64_t v35 = 0xE900000000000065;
              if (v32 != 0x726F6353656E696CLL) {
                goto LABEL_116;
              }
              goto LABEL_85;
            case 0xAuLL:
              unint64_t v35 = 0xEC00000074726F70;
              if (v32 != 0x65527972756A6E69) {
                goto LABEL_116;
              }
              goto LABEL_85;
            case 0xBuLL:
              unint64_t v35 = 0xE900000000000072;
              if (v32 != 0x6579616C5079656BLL) {
                goto LABEL_116;
              }
              goto LABEL_85;
            case 0xCuLL:
              unint64_t v35 = 0xE600000000000000;
              if (v32 != 0x656C7A7A7570) {
                goto LABEL_116;
              }
              goto LABEL_85;
            case 0xDuLL:
              unint64_t v35 = 0xEA00000000006570;
              if (v32 != 0x7954656C7A7A7570) {
                goto LABEL_116;
              }
              goto LABEL_85;
            case 0xEuLL:
              unint64_t v35 = 0xEF63697473697461;
              if (v32 != 0x7453656C7A7A7570) {
                goto LABEL_116;
              }
              goto LABEL_85;
            default:
              goto LABEL_77;
          }
          if (v32 != (v37 & 0xFFFF0000FFFFFFFFLL | 0x6500000000)) {
            goto LABEL_116;
          }
        }
        else
        {
LABEL_77:
          uint64_t v34 = *(v26 - 3);
          unint64_t v35 = *(v26 - 2);
LABEL_84:
          if (v32 != v34) {
            goto LABEL_116;
          }
        }
LABEL_85:
        if (v31 == v35)
        {
          int v36 = 0;
          goto LABEL_117;
        }
LABEL_116:
        int v36 = sub_1C1520A9C();
LABEL_117:
        sub_1BFE74E64(v30, v29);
        sub_1BFE74E64(v27, v28);
        sub_1BFE74E64(v27, v28);
        sub_1BFE74E64(v30, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFF8F648(v30, v29);
        sub_1BFF8F648(v27, v28);
        if (((v134 ^ v36) & 1) == 0)
        {
          v26 += 2;
          uint64_t v9 = v130;
          uint64_t v14 = v131 + 1;
          uint64_t v11 = v124;
          if (v124 == v131 + 1)
          {
            uint64_t v14 = v124;
            goto LABEL_122;
          }
          continue;
        }
        uint64_t v11 = v124;
        uint64_t v9 = v130;
        uint64_t v14 = v131;
LABEL_122:
        uint64_t v13 = v125;
LABEL_123:
        uint64_t v10 = v120;
        if (v134)
        {
          if (v14 < v13) {
            goto LABEL_294;
          }
          if (v13 < v14)
          {
            uint64_t v38 = (long long *)(v116 + 16 * v14);
            uint64_t v39 = v14;
            uint64_t v40 = v13;
            unint64_t v41 = (long long *)(v9 + 16 * v13);
            do
            {
              if (v40 != --v39)
              {
                if (!v9) {
                  goto LABEL_299;
                }
                long long v42 = *v41;
                *unint64_t v41 = *v38;
                long long *v38 = v42;
              }
              ++v40;
              --v38;
              ++v41;
            }
            while (v40 < v39);
          }
        }
LABEL_131:
        if (v14 >= v11) {
          goto LABEL_210;
        }
        if (__OFSUB__(v14, v13)) {
          goto LABEL_292;
        }
        if (v14 - v13 >= v119) {
          goto LABEL_210;
        }
        uint64_t v43 = v13 + v119;
        if (__OFADD__(v13, v119)) {
          goto LABEL_295;
        }
        if (v43 >= v11) {
          uint64_t v43 = v11;
        }
        if (v43 >= v13)
        {
          if (v14 == v43) {
            goto LABEL_210;
          }
          uint64_t v121 = v10;
          uint64_t v129 = v15;
          unint64_t v44 = (uint64_t *)(v9 + 16 * v14);
          uint64_t v123 = v43;
LABEL_143:
          uint64_t v46 = (uint64_t *)(v9 + 16 * v14);
          uint64_t v47 = *v46;
          unint64_t v48 = v46[1];
          v126 = v44;
          uint64_t v132 = v14;
          while (2)
          {
            uint64_t v50 = *(v44 - 2);
            unint64_t v49 = *(v44 - 1);
            unint64_t v51 = 0xE700000000000000;
            unint64_t v52 = 0x656C6369747261;
            switch(v48)
            {
              case 0uLL:
                goto LABEL_172;
              case 1uLL:
                unint64_t v51 = 0xE500000000000000;
                uint64_t v53 = 1970500457;
                goto LABEL_165;
              case 2uLL:
                unint64_t v51 = 0xE800000000000000;
                unint64_t v52 = 0x6465626D45626577;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              case 3uLL:
                unint64_t v51 = 0xEA00000000006B63;
                unint64_t v52 = 0x6172546F69647561;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              case 4uLL:
                unint64_t v51 = 0xE300000000000000;
                unint64_t v52 = 6775156;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              case 5uLL:
                unint64_t v51 = 0xE500000000000000;
                uint64_t v53 = 1919902579;
LABEL_165:
                unint64_t v52 = v53 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              case 6uLL:
                unint64_t v51 = 0xE800000000000000;
                unint64_t v52 = 0x676E69646E617473;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              case 7uLL:
                unint64_t v52 = 0x74656B63617262;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              case 8uLL:
                unint64_t v51 = 0xE800000000000000;
                unint64_t v52 = 0x65726F6353786F62;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              case 9uLL:
                unint64_t v52 = 0x726F6353656E696CLL;
                unint64_t v51 = 0xE900000000000065;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              case 0xAuLL:
                unint64_t v52 = 0x65527972756A6E69;
                unint64_t v51 = 0xEC00000074726F70;
                goto LABEL_172;
              case 0xBuLL:
                unint64_t v51 = 0xE900000000000072;
                unint64_t v52 = 0x6579616C5079656BLL;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              case 0xCuLL:
                unint64_t v51 = 0xE600000000000000;
                unint64_t v52 = 0x656C7A7A7570;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              case 0xDuLL:
                unint64_t v52 = 0x7954656C7A7A7570;
                unint64_t v51 = 0xEA00000000006570;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              case 0xEuLL:
                unint64_t v52 = 0x7453656C7A7A7570;
                unint64_t v51 = 0xEF63697473697461;
                if (v49 > 0xE) {
                  goto LABEL_166;
                }
                goto LABEL_172;
              default:
                unint64_t v52 = v47;
                unint64_t v51 = v48;
                if (v49 <= 0xE)
                {
LABEL_172:
                  unint64_t v55 = 0xE700000000000000;
                  uint64_t v54 = 0x656C6369747261;
                  switch(v49)
                  {
                    case 0uLL:
                      goto LABEL_173;
                    case 1uLL:
                      unint64_t v55 = 0xE500000000000000;
                      uint64_t v56 = 1970500457;
                      break;
                    case 2uLL:
                      unint64_t v55 = 0xE800000000000000;
                      if (v52 != 0x6465626D45626577) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    case 3uLL:
                      unint64_t v55 = 0xEA00000000006B63;
                      if (v52 != 0x6172546F69647561) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    case 4uLL:
                      unint64_t v55 = 0xE300000000000000;
                      if (v52 != 6775156) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    case 5uLL:
                      unint64_t v55 = 0xE500000000000000;
                      uint64_t v56 = 1919902579;
                      break;
                    case 6uLL:
                      unint64_t v55 = 0xE800000000000000;
                      if (v52 != 0x676E69646E617473) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    case 7uLL:
                      if (v52 != 0x74656B63617262) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    case 8uLL:
                      unint64_t v55 = 0xE800000000000000;
                      if (v52 != 0x65726F6353786F62) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    case 9uLL:
                      unint64_t v55 = 0xE900000000000065;
                      if (v52 != 0x726F6353656E696CLL) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    case 0xAuLL:
                      unint64_t v55 = 0xEC00000074726F70;
                      if (v52 != 0x65527972756A6E69) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    case 0xBuLL:
                      unint64_t v55 = 0xE900000000000072;
                      if (v52 != 0x6579616C5079656BLL) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    case 0xCuLL:
                      unint64_t v55 = 0xE600000000000000;
                      if (v52 != 0x656C7A7A7570) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    case 0xDuLL:
                      unint64_t v55 = 0xEA00000000006570;
                      if (v52 != 0x7954656C7A7A7570) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    case 0xEuLL:
                      unint64_t v55 = 0xEF63697473697461;
                      if (v52 != 0x7453656C7A7A7570) {
                        goto LABEL_175;
                      }
                      goto LABEL_174;
                    default:
                      goto LABEL_166;
                  }
                  if (v52 != (v56 & 0xFFFF0000FFFFFFFFLL | 0x6500000000))
                  {
LABEL_175:
                    char v135 = sub_1C1520A9C();
                    sub_1BFE74E64(v50, v49);
                    sub_1BFE74E64(v47, v48);
                    sub_1BFE74E64(v47, v48);
                    sub_1BFE74E64(v50, v49);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_1BFF8F648(v50, v49);
                    sub_1BFF8F648(v47, v48);
                    if ((v135 & 1) == 0) {
                      goto LABEL_141;
                    }
                    uint64_t v9 = v130;
                    uint64_t v45 = v132;
                    if (!v130) {
                      goto LABEL_297;
                    }
                    uint64_t v47 = *v44;
                    unint64_t v48 = v44[1];
                    *(_OWORD *)unint64_t v44 = *((_OWORD *)v44 - 1);
                    *(v44 - 1) = v48;
                    *(v44 - 2) = v47;
                    v44 -= 2;
                    if (v132 == ++v13) {
                      goto LABEL_142;
                    }
                    continue;
                  }
                }
                else
                {
LABEL_166:
                  uint64_t v54 = *(v44 - 2);
                  unint64_t v55 = *(v44 - 1);
LABEL_173:
                  if (v52 != v54) {
                    goto LABEL_175;
                  }
                }
LABEL_174:
                if (v51 != v55) {
                  goto LABEL_175;
                }
                sub_1BFE74E64(*(v44 - 2), *(v44 - 1));
                sub_1BFE74E64(v47, v48);
                sub_1BFE74E64(v47, v48);
                sub_1BFE74E64(v50, v49);
                swift_bridgeObjectRelease_n();
                sub_1BFF8F648(v50, v49);
                sub_1BFF8F648(v47, v48);
LABEL_141:
                uint64_t v9 = v130;
                uint64_t v45 = v132;
LABEL_142:
                uint64_t v14 = v45 + 1;
                uint64_t v13 = v125;
                unint64_t v44 = v126 + 2;
                if (v14 != v123) {
                  goto LABEL_143;
                }
                uint64_t v14 = v123;
                uint64_t v15 = v129;
                uint64_t v10 = v121;
LABEL_210:
                if (v14 < v13) {
                  goto LABEL_287;
                }
                uint64_t v128 = v15;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v10 = sub_1C0634CC8(0, *((void *)v10 + 2) + 1, 1, v10);
                }
                unint64_t v58 = *((void *)v10 + 2);
                unint64_t v57 = *((void *)v10 + 3);
                unint64_t v12 = v58 + 1;
                uint64_t v9 = v130;
                if (v58 >= v57 >> 1)
                {
                  uint64_t v107 = sub_1C0634CC8((char *)(v57 > 1), v58 + 1, 1, v10);
                  uint64_t v9 = v130;
                  uint64_t v10 = v107;
                }
                *((void *)v10 + 2) = v12;
                uint64_t v59 = v10 + 32;
                uint64_t v60 = &v10[16 * v58 + 32];
                *(void *)uint64_t v60 = v125;
                *((void *)v60 + 1) = v14;
                uint64_t v133 = v14;
                if (v58)
                {
                  while (2)
                  {
                    unint64_t v61 = v12 - 1;
                    if (v12 >= 4)
                    {
                      uint64_t v66 = &v59[16 * v12];
                      uint64_t v67 = *((void *)v66 - 8);
                      uint64_t v68 = *((void *)v66 - 7);
                      BOOL v72 = __OFSUB__(v68, v67);
                      uint64_t v69 = v68 - v67;
                      if (v72) {
                        goto LABEL_276;
                      }
                      uint64_t v71 = *((void *)v66 - 6);
                      uint64_t v70 = *((void *)v66 - 5);
                      BOOL v72 = __OFSUB__(v70, v71);
                      uint64_t v64 = v70 - v71;
                      char v65 = v72;
                      if (v72) {
                        goto LABEL_277;
                      }
                      unint64_t v73 = v12 - 2;
                      uint64_t v74 = &v59[16 * v12 - 32];
                      uint64_t v76 = *(void *)v74;
                      uint64_t v75 = *((void *)v74 + 1);
                      BOOL v72 = __OFSUB__(v75, v76);
                      uint64_t v77 = v75 - v76;
                      if (v72) {
                        goto LABEL_279;
                      }
                      BOOL v72 = __OFADD__(v64, v77);
                      uint64_t v78 = v64 + v77;
                      if (v72) {
                        goto LABEL_282;
                      }
                      if (v78 >= v69)
                      {
                        unint64_t v96 = &v59[16 * v61];
                        uint64_t v98 = *(void *)v96;
                        uint64_t v97 = *((void *)v96 + 1);
                        BOOL v72 = __OFSUB__(v97, v98);
                        uint64_t v99 = v97 - v98;
                        if (v72) {
                          goto LABEL_286;
                        }
                        BOOL v89 = v64 < v99;
                      }
                      else
                      {
LABEL_229:
                        if (v65) {
                          goto LABEL_278;
                        }
                        unint64_t v73 = v12 - 2;
                        char v79 = &v59[16 * v12 - 32];
                        uint64_t v81 = *(void *)v79;
                        uint64_t v80 = *((void *)v79 + 1);
                        BOOL v82 = __OFSUB__(v80, v81);
                        uint64_t v83 = v80 - v81;
                        char v84 = v82;
                        if (v82) {
                          goto LABEL_281;
                        }
                        uint64_t v85 = &v59[16 * v61];
                        uint64_t v87 = *(void *)v85;
                        uint64_t v86 = *((void *)v85 + 1);
                        BOOL v72 = __OFSUB__(v86, v87);
                        uint64_t v88 = v86 - v87;
                        if (v72) {
                          goto LABEL_284;
                        }
                        if (__OFADD__(v83, v88)) {
                          goto LABEL_285;
                        }
                        if (v83 + v88 < v64) {
                          goto LABEL_241;
                        }
                        BOOL v89 = v64 < v88;
                      }
                      if (v89) {
                        unint64_t v61 = v73;
                      }
                    }
                    else
                    {
                      if (v12 == 3)
                      {
                        uint64_t v63 = *((void *)v10 + 4);
                        uint64_t v62 = *((void *)v10 + 5);
                        BOOL v72 = __OFSUB__(v62, v63);
                        uint64_t v64 = v62 - v63;
                        char v65 = v72;
                        goto LABEL_229;
                      }
                      uint64_t v90 = *((void *)v10 + 4);
                      uint64_t v91 = *((void *)v10 + 5);
                      BOOL v72 = __OFSUB__(v91, v90);
                      uint64_t v83 = v91 - v90;
                      char v84 = v72;
LABEL_241:
                      if (v84) {
                        goto LABEL_280;
                      }
                      uint64_t v92 = &v59[16 * v61];
                      uint64_t v94 = *(void *)v92;
                      uint64_t v93 = *((void *)v92 + 1);
                      BOOL v72 = __OFSUB__(v93, v94);
                      uint64_t v95 = v93 - v94;
                      if (v72) {
                        goto LABEL_283;
                      }
                      if (v95 < v83) {
                        goto LABEL_14;
                      }
                    }
                    unint64_t v100 = v61 - 1;
                    if (v61 - 1 >= v12)
                    {
                      __break(1u);
LABEL_273:
                      __break(1u);
LABEL_274:
                      __break(1u);
LABEL_275:
                      __break(1u);
LABEL_276:
                      __break(1u);
LABEL_277:
                      __break(1u);
LABEL_278:
                      __break(1u);
LABEL_279:
                      __break(1u);
LABEL_280:
                      __break(1u);
LABEL_281:
                      __break(1u);
LABEL_282:
                      __break(1u);
LABEL_283:
                      __break(1u);
LABEL_284:
                      __break(1u);
LABEL_285:
                      __break(1u);
LABEL_286:
                      __break(1u);
LABEL_287:
                      __break(1u);
LABEL_288:
                      __break(1u);
LABEL_289:
                      __break(1u);
LABEL_290:
                      __break(1u);
LABEL_291:
                      __break(1u);
LABEL_292:
                      __break(1u);
LABEL_293:
                      __break(1u);
LABEL_294:
                      __break(1u);
LABEL_295:
                      __break(1u);
                      goto LABEL_296;
                    }
                    if (!v9) {
                      goto LABEL_298;
                    }
                    unint64_t v101 = v10;
                    char v102 = &v59[16 * v100];
                    uint64_t v103 = *(void *)v102;
                    uint64_t v104 = &v59[16 * v61];
                    uint64_t v105 = *((void *)v104 + 1);
                    sub_1C084A3F4((uint64_t *)(v9 + 16 * *(void *)v102), (uint64_t *)(v9 + 16 * *(void *)v104), v9 + 16 * v105, v127);
                    if (v128)
                    {
LABEL_270:
                      swift_bridgeObjectRelease();
                      *(void *)(v122 + 16) = 0;
                      return swift_bridgeObjectRelease();
                    }
                    if (v105 < v103) {
                      goto LABEL_273;
                    }
                    if (v61 > *((void *)v101 + 2)) {
                      goto LABEL_274;
                    }
                    *(void *)char v102 = v103;
                    *(void *)&v59[16 * v100 + 8] = v105;
                    unint64_t v106 = *((void *)v101 + 2);
                    if (v61 >= v106) {
                      goto LABEL_275;
                    }
                    uint64_t v10 = v101;
                    uint64_t v128 = 0;
                    unint64_t v12 = v106 - 1;
                    memmove(&v59[16 * v61], v104 + 16, 16 * (v106 - 1 - v61));
                    *((void *)v101 + 2) = v106 - 1;
                    uint64_t v9 = v130;
                    if (v106 <= 2) {
                      goto LABEL_14;
                    }
                    continue;
                  }
                }
                unint64_t v12 = 1;
LABEL_14:
                uint64_t v11 = v124;
                uint64_t v8 = v133;
                uint64_t v7 = v122;
                if (v133 < v124) {
                  goto LABEL_15;
                }
                goto LABEL_258;
            }
          }
        }
LABEL_296:
        __break(1u);
LABEL_297:
        __break(1u);
LABEL_298:
        __break(1u);
LABEL_299:
        __break(1u);
LABEL_300:
        __break(1u);
LABEL_301:
        uint64_t result = sub_1C15203FC();
        __break(1u);
        return result;
    }
  }
}

uint64_t sub_1BFE74C64(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    void v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v22;
    if (v13 == v10)
    {
      sub_1BFE74E64(v21, v22);
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = sub_1BFE74E64(v21, v22);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BFE74E64(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xF) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1BFE74E78(uint64_t a1)
{
  return sub_1BFE72B60(a1, (unint64_t *)&qword_1EB880EA8, (uint64_t)&type metadata for FormatItemKind, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1BFE74C64);
}

unint64_t sub_1BFE74EA0()
{
  unint64_t result = qword_1EB860C78;
  if (!qword_1EB860C78)
  {
    sub_1BFE9DEBC(255, &qword_1EB860C70, (uint64_t)&type metadata for FormatItemKind, MEMORY[0x1E4FBB320]);
    sub_1BFFB39D8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860C78);
  }
  return result;
}

uint64_t sub_1BFE74F34(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  int64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    int64_t v11 = *((void *)a4 + 2);
  }
  else {
    int64_t v11 = v9;
  }
  if (v11)
  {
    sub_1BFF66364(0, a5, a6, MEMORY[0x1E4FBBE00]);
    int64_t v12 = (char *)swift_allocObject();
    size_t v13 = _swift_stdlib_malloc_size(v12);
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * v13 - 64;
  }
  else
  {
    int64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v14 = v12 + 32;
  unint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v14 >= &v15[v10]) {
      memmove(v14, v15, v10);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v10] || v14 >= &v15[v10])
  {
    memcpy(v14, v15, v10);
LABEL_28:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFE7509C(uint64_t a1)
{
  return sub_1BFE750B0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BFE750B0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFE74F34(a1, a2, a3, a4, (unint64_t *)&unk_1EB860E30, (uint64_t)&type metadata for FormatFontTrait);
}

uint64_t sub_1BFE750C4(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result < v4)
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 < -1) {
      goto LABEL_321;
    }
    uint64_t v126 = v4 - 2;
    uint64_t v124 = result;
    uint64_t v122 = a1;
    if (v4 < 2)
    {
      uint64_t v9 = MEMORY[0x1E4FBC860];
      __dst = (unsigned char *)(MEMORY[0x1E4FBC860] + 32);
      if (v4 != 1)
      {
        unint64_t v13 = *(void *)(MEMORY[0x1E4FBC860] + 16);
        int64_t v12 = (char *)MEMORY[0x1E4FBC860];
        if (v13 < 2) {
          goto LABEL_290;
        }
        goto LABEL_278;
      }
      uint64_t v123 = MEMORY[0x1E4FBC860];
      uint64_t v130 = v1;
    }
    else
    {
      uint64_t v130 = v1;
      uint64_t v7 = v6 >> 1;
      uint64_t v8 = sub_1C151ECCC();
      *(void *)(v8 + 16) = v7;
      uint64_t v123 = v8;
      __dst = (unsigned char *)(v8 + 32);
    }
    uint64_t v10 = 0;
    uint64_t v11 = *a1;
    int64_t v12 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v125 = v4;
LABEL_16:
    uint64_t v14 = v10 + 1;
    if (v10 + 1 >= v4)
    {
LABEL_145:
      uint64_t v43 = v14;
      if (v14 >= v4) {
        goto LABEL_226;
      }
      if (__OFSUB__(v14, v10)) {
        goto LABEL_312;
      }
      if (v14 - v10 >= v124) {
        goto LABEL_226;
      }
      if (__OFADD__(v10, v124)) {
        goto LABEL_315;
      }
      uint64_t v44 = v10;
      if (v10 + v124 >= v4) {
        uint64_t v45 = v4;
      }
      else {
        uint64_t v45 = v10 + v124;
      }
      uint64_t v127 = v44;
      if (v45 >= v44)
      {
        if (v14 == v45) {
          goto LABEL_225;
        }
        uint64_t v121 = v12;
        uint64_t v46 = (char *)(v11 + v14);
LABEL_157:
        char v47 = *(unsigned char *)(v11 + v43);
        uint64_t v48 = v127;
        unint64_t v49 = v46;
        while (1)
        {
          unint64_t v50 = 0xE600000000000000;
          uint64_t v51 = 0x63696C617469;
          switch(v47)
          {
            case 1:
              unint64_t v50 = 0xE400000000000000;
              uint64_t v51 = 1684828002;
              break;
            case 2:
              unint64_t v50 = 0xE800000000000000;
              uint64_t v51 = 0x6465646E61707865;
              break;
            case 3:
              uint64_t v51 = 0x65736E65646E6F63;
              unint64_t v50 = 0xE900000000000064;
              break;
            case 4:
              unint64_t v50 = 0xE900000000000065;
              uint64_t v51 = 0x636170536F6E6F6DLL;
              break;
            case 5:
              unint64_t v50 = 0xE800000000000000;
              uint64_t v51 = 0x6C61636974726576;
              break;
            case 6:
              uint64_t v51 = 0x696D6974704F6975;
              unint64_t v50 = 0xEB0000000064657ALL;
              break;
            case 7:
              uint64_t v52 = 0x4C7468676974;
              goto LABEL_178;
            case 8:
              uint64_t v52 = 0x4C65736F6F6CLL;
LABEL_178:
              uint64_t v51 = v52 & 0xFFFFFFFFFFFFLL | 0x6165000000000000;
              unint64_t v50 = 0xEC000000676E6964;
              break;
            case 9:
              unint64_t v50 = 0xE400000000000000;
              uint64_t v51 = 1802723693;
              break;
            case 10:
              uint64_t v51 = 0x656C797453646C6FLL;
              goto LABEL_176;
            case 11:
              unint64_t v50 = 0x80000001C15FE770;
              uint64_t v51 = 0xD000000000000012;
              break;
            case 12:
              uint64_t v51 = 0x65536E7265646F6DLL;
              unint64_t v50 = 0xEC00000073666972;
              break;
            case 13:
              uint64_t v51 = 0x6F646E6572616C63;
              unint64_t v50 = 0xEF7366697265536ELL;
              break;
            case 14:
              uint64_t v51 = 0x6972655362616C73;
              unint64_t v50 = 0xEA00000000007366;
              break;
            case 15:
              uint64_t v51 = 0x6D726F6665657266;
LABEL_176:
              unint64_t v50 = 0xEE00736669726553;
              break;
            case 16:
              unint64_t v50 = 0xE900000000000066;
              uint64_t v51 = 0x69726553736E6173;
              break;
            case 17:
              uint64_t v51 = 0x746E656D616E726FLL;
              unint64_t v50 = 0xEB00000000736C61;
              break;
            case 18:
              unint64_t v50 = 0xE700000000000000;
              uint64_t v51 = 0x73747069726373;
              break;
            case 19:
              unint64_t v50 = 0xE800000000000000;
              uint64_t v51 = 0x63696C6F626D7973;
              break;
            default:
              break;
          }
          unint64_t v53 = 0xE600000000000000;
          uint64_t v54 = 0x63696C617469;
          switch(*(v49 - 1))
          {
            case 1:
              unint64_t v53 = 0xE400000000000000;
              if (v51 == 1684828002) {
                goto LABEL_217;
              }
              goto LABEL_218;
            case 2:
              unint64_t v53 = 0xE800000000000000;
              if (v51 != 0x6465646E61707865) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 3:
              unint64_t v53 = 0xE900000000000064;
              if (v51 != 0x65736E65646E6F63) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 4:
              unint64_t v53 = 0xE900000000000065;
              if (v51 != 0x636170536F6E6F6DLL) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 5:
              unint64_t v53 = 0xE800000000000000;
              if (v51 != 0x6C61636974726576) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 6:
              uint64_t v58 = 0x696D6974704F6975;
              uint64_t v59 = 6579578;
              goto LABEL_208;
            case 7:
              uint64_t v55 = 0x61654C7468676974;
              uint64_t v56 = 1735289188;
              goto LABEL_200;
            case 8:
              uint64_t v54 = 0x61654C65736F6F6CLL;
              unint64_t v53 = 0xEC000000676E6964;
              goto LABEL_216;
            case 9:
              unint64_t v53 = 0xE400000000000000;
              if (v51 != 1802723693) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 10:
              uint64_t v57 = 0x656C797453646C6FLL;
              goto LABEL_213;
            case 11:
              unint64_t v53 = 0x80000001C15FE770;
              if (v51 != 0xD000000000000012) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 12:
              uint64_t v55 = 0x65536E7265646F6DLL;
              uint64_t v56 = 1936091506;
LABEL_200:
              unint64_t v53 = v56 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
              if (v51 != v55) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 13:
              unint64_t v53 = 0xEF7366697265536ELL;
              if (v51 != 0x6F646E6572616C63) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 14:
              unint64_t v53 = 0xEA00000000007366;
              if (v51 != 0x6972655362616C73) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 15:
              uint64_t v57 = 0x6D726F6665657266;
LABEL_213:
              unint64_t v53 = 0xEE00736669726553;
              if (v51 != v57) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 16:
              unint64_t v53 = 0xE900000000000066;
              if (v51 != 0x69726553736E6173) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 17:
              uint64_t v58 = 0x746E656D616E726FLL;
              uint64_t v59 = 7564385;
LABEL_208:
              unint64_t v53 = v59 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
              if (v51 != v58) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 18:
              unint64_t v53 = 0xE700000000000000;
              if (v51 != 0x73747069726373) {
                goto LABEL_218;
              }
              goto LABEL_217;
            case 19:
              unint64_t v53 = 0xE800000000000000;
              if (v51 != 0x63696C6F626D7973) {
                goto LABEL_218;
              }
              goto LABEL_217;
            default:
LABEL_216:
              if (v51 != v54) {
                goto LABEL_218;
              }
LABEL_217:
              if (v50 == v53)
              {
                swift_bridgeObjectRelease_n();
LABEL_156:
                ++v43;
                ++v46;
                if (v43 != v45) {
                  goto LABEL_157;
                }
                uint64_t v43 = v45;
                int64_t v12 = v121;
LABEL_225:
                uint64_t v10 = v127;
LABEL_226:
                if (v43 < v10) {
                  goto LABEL_307;
                }
                uint64_t v128 = v43;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  int64_t v12 = sub_1C0634CC8(0, *((void *)v12 + 2) + 1, 1, v12);
                }
                unint64_t v62 = *((void *)v12 + 2);
                unint64_t v61 = *((void *)v12 + 3);
                unint64_t v13 = v62 + 1;
                if (v62 >= v61 >> 1) {
                  int64_t v12 = sub_1C0634CC8((char *)(v61 > 1), v62 + 1, 1, v12);
                }
                *((void *)v12 + 2) = v13;
                uint64_t v63 = v12 + 32;
                uint64_t v64 = &v12[16 * v62 + 32];
                *(void *)uint64_t v64 = v10;
                *((void *)v64 + 1) = v43;
                if (v62)
                {
                  while (2)
                  {
                    unint64_t v65 = v13 - 1;
                    if (v13 >= 4)
                    {
                      uint64_t v70 = &v63[16 * v13];
                      uint64_t v71 = *((void *)v70 - 8);
                      uint64_t v72 = *((void *)v70 - 7);
                      BOOL v76 = __OFSUB__(v72, v71);
                      uint64_t v73 = v72 - v71;
                      if (v76) {
                        goto LABEL_296;
                      }
                      uint64_t v75 = *((void *)v70 - 6);
                      uint64_t v74 = *((void *)v70 - 5);
                      BOOL v76 = __OFSUB__(v74, v75);
                      uint64_t v68 = v74 - v75;
                      char v69 = v76;
                      if (v76) {
                        goto LABEL_297;
                      }
                      unint64_t v77 = v13 - 2;
                      uint64_t v78 = &v63[16 * v13 - 32];
                      uint64_t v80 = *(void *)v78;
                      uint64_t v79 = *((void *)v78 + 1);
                      BOOL v76 = __OFSUB__(v79, v80);
                      uint64_t v81 = v79 - v80;
                      if (v76) {
                        goto LABEL_299;
                      }
                      BOOL v76 = __OFADD__(v68, v81);
                      uint64_t v82 = v68 + v81;
                      if (v76) {
                        goto LABEL_302;
                      }
                      if (v82 >= v73)
                      {
                        unint64_t v100 = &v63[16 * v65];
                        uint64_t v102 = *(void *)v100;
                        uint64_t v101 = *((void *)v100 + 1);
                        BOOL v76 = __OFSUB__(v101, v102);
                        uint64_t v103 = v101 - v102;
                        if (v76) {
                          goto LABEL_306;
                        }
                        BOOL v93 = v68 < v103;
                      }
                      else
                      {
LABEL_245:
                        if (v69) {
                          goto LABEL_298;
                        }
                        unint64_t v77 = v13 - 2;
                        uint64_t v83 = &v63[16 * v13 - 32];
                        uint64_t v85 = *(void *)v83;
                        uint64_t v84 = *((void *)v83 + 1);
                        BOOL v86 = __OFSUB__(v84, v85);
                        uint64_t v87 = v84 - v85;
                        char v88 = v86;
                        if (v86) {
                          goto LABEL_301;
                        }
                        BOOL v89 = &v63[16 * v65];
                        uint64_t v91 = *(void *)v89;
                        uint64_t v90 = *((void *)v89 + 1);
                        BOOL v76 = __OFSUB__(v90, v91);
                        uint64_t v92 = v90 - v91;
                        if (v76) {
                          goto LABEL_304;
                        }
                        if (__OFADD__(v87, v92)) {
                          goto LABEL_305;
                        }
                        if (v87 + v92 < v68) {
                          goto LABEL_257;
                        }
                        BOOL v93 = v68 < v92;
                      }
                      if (v93) {
                        unint64_t v65 = v77;
                      }
                    }
                    else
                    {
                      if (v13 == 3)
                      {
                        uint64_t v67 = *((void *)v12 + 4);
                        uint64_t v66 = *((void *)v12 + 5);
                        BOOL v76 = __OFSUB__(v66, v67);
                        uint64_t v68 = v66 - v67;
                        char v69 = v76;
                        goto LABEL_245;
                      }
                      uint64_t v94 = *((void *)v12 + 4);
                      uint64_t v95 = *((void *)v12 + 5);
                      BOOL v76 = __OFSUB__(v95, v94);
                      uint64_t v87 = v95 - v94;
                      char v88 = v76;
LABEL_257:
                      if (v88) {
                        goto LABEL_300;
                      }
                      unint64_t v96 = &v63[16 * v65];
                      uint64_t v98 = *(void *)v96;
                      uint64_t v97 = *((void *)v96 + 1);
                      BOOL v76 = __OFSUB__(v97, v98);
                      uint64_t v99 = v97 - v98;
                      if (v76) {
                        goto LABEL_303;
                      }
                      if (v99 < v87) {
                        goto LABEL_15;
                      }
                    }
                    unint64_t v104 = v65 - 1;
                    if (v65 - 1 >= v13)
                    {
                      __break(1u);
LABEL_293:
                      __break(1u);
LABEL_294:
                      __break(1u);
LABEL_295:
                      __break(1u);
LABEL_296:
                      __break(1u);
LABEL_297:
                      __break(1u);
LABEL_298:
                      __break(1u);
LABEL_299:
                      __break(1u);
LABEL_300:
                      __break(1u);
LABEL_301:
                      __break(1u);
LABEL_302:
                      __break(1u);
LABEL_303:
                      __break(1u);
LABEL_304:
                      __break(1u);
LABEL_305:
                      __break(1u);
LABEL_306:
                      __break(1u);
LABEL_307:
                      __break(1u);
LABEL_308:
                      __break(1u);
LABEL_309:
                      __break(1u);
LABEL_310:
                      __break(1u);
LABEL_311:
                      __break(1u);
LABEL_312:
                      __break(1u);
LABEL_313:
                      __break(1u);
LABEL_314:
                      __break(1u);
LABEL_315:
                      __break(1u);
                      goto LABEL_316;
                    }
                    uint64_t v105 = v11;
                    if (!v11) {
                      goto LABEL_318;
                    }
                    unint64_t v106 = v12;
                    uint64_t v107 = &v63[16 * v104];
                    uint64_t v108 = *(void *)v107;
                    unint64_t v109 = &v63[16 * v65];
                    uint64_t v110 = *((void *)v109 + 1);
                    uint64_t v111 = v105;
                    sub_1C084BBDC((unsigned char *)(v105 + *(void *)v107), (unsigned char *)(v105 + *(void *)v109), v105 + v110, __dst);
                    if (v130)
                    {
                      uint64_t v9 = v123;
                      goto LABEL_290;
                    }
                    if (v110 < v108) {
                      goto LABEL_293;
                    }
                    if (v65 > *((void *)v106 + 2)) {
                      goto LABEL_294;
                    }
                    *(void *)uint64_t v107 = v108;
                    *(void *)&v63[16 * v104 + 8] = v110;
                    unint64_t v112 = *((void *)v106 + 2);
                    if (v65 >= v112) {
                      goto LABEL_295;
                    }
                    int64_t v12 = v106;
                    unint64_t v13 = v112 - 1;
                    memmove(&v63[16 * v65], v109 + 16, 16 * (v112 - 1 - v65));
                    *((void *)v106 + 2) = v112 - 1;
                    uint64_t v11 = v111;
                    if (v112 <= 2) {
                      goto LABEL_15;
                    }
                    continue;
                  }
                }
                unint64_t v13 = 1;
LABEL_15:
                uint64_t v4 = v125;
                uint64_t v10 = v128;
                if (v128 >= v125)
                {
                  uint64_t v2 = v130;
                  uint64_t v9 = v123;
                  if (v13 < 2)
                  {
LABEL_290:
                    swift_bridgeObjectRelease();
                    *(void *)(v9 + 16) = 0;
                    return swift_bridgeObjectRelease();
                  }
LABEL_278:
                  uint64_t v113 = *v122;
                  while (1)
                  {
                    unint64_t v114 = v13 - 2;
                    if (v13 < 2) {
                      goto LABEL_308;
                    }
                    if (!v113) {
                      goto LABEL_320;
                    }
                    unint64_t v115 = v12;
                    uint64_t v116 = v12 + 32;
                    uint64_t v117 = *(void *)&v12[16 * v114 + 32];
                    uint64_t v118 = *(void *)&v12[16 * v13 + 24];
                    sub_1C084BBDC((unsigned char *)(v113 + v117), (unsigned char *)(v113 + *(void *)&v116[16 * v13 - 16]), v113 + v118, __dst);
                    if (v2) {
                      goto LABEL_290;
                    }
                    if (v118 < v117) {
                      goto LABEL_309;
                    }
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      unint64_t v115 = sub_1C063604C((uint64_t)v115);
                    }
                    if (v114 >= *((void *)v115 + 2)) {
                      goto LABEL_310;
                    }
                    uint64_t v119 = &v115[16 * v114 + 32];
                    *(void *)uint64_t v119 = v117;
                    *((void *)v119 + 1) = v118;
                    unint64_t v120 = *((void *)v115 + 2);
                    if (v13 > v120) {
                      goto LABEL_311;
                    }
                    int64_t v12 = v115;
                    memmove(&v115[16 * v13 + 16], &v115[16 * v13 + 32], 16 * (v120 - v13));
                    *((void *)v115 + 2) = v120 - 1;
                    unint64_t v13 = v120 - 1;
                    if (v120 <= 2) {
                      goto LABEL_290;
                    }
                  }
                }
                goto LABEL_16;
              }
LABEL_218:
              char v60 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v60 & 1) == 0) {
                goto LABEL_156;
              }
              if (!v11) {
                goto LABEL_317;
              }
              char v47 = *v49;
              *unint64_t v49 = *(v49 - 1);
              *(v49 - 1) = v47;
              ++v48;
              --v49;
              if (v43 == v48) {
                goto LABEL_156;
              }
              break;
          }
        }
      }
LABEL_316:
      __break(1u);
LABEL_317:
      __break(1u);
LABEL_318:
      __break(1u);
LABEL_319:
      __break(1u);
LABEL_320:
      __break(1u);
LABEL_321:
      uint64_t result = sub_1C15203FC();
      __break(1u);
      return result;
    }
    uint64_t v15 = *(unsigned __int8 *)(v11 + v10);
    unint64_t v16 = 0xE600000000000000;
    uint64_t v17 = v10;
    uint64_t v18 = 0x63696C617469;
    switch(*(unsigned char *)(v11 + v14))
    {
      case 1:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v18 = 1684828002;
        break;
      case 2:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v18 = 0x6465646E61707865;
        break;
      case 3:
        uint64_t v18 = 0x65736E65646E6F63;
        unint64_t v16 = 0xE900000000000064;
        break;
      case 4:
        unint64_t v16 = 0xE900000000000065;
        uint64_t v18 = 0x636170536F6E6F6DLL;
        break;
      case 5:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v18 = 0x6C61636974726576;
        break;
      case 6:
        uint64_t v18 = 0x696D6974704F6975;
        unint64_t v16 = 0xEB0000000064657ALL;
        break;
      case 7:
        uint64_t v19 = 0x4C7468676974;
        goto LABEL_34;
      case 8:
        uint64_t v19 = 0x4C65736F6F6CLL;
LABEL_34:
        uint64_t v18 = v19 & 0xFFFFFFFFFFFFLL | 0x6165000000000000;
        unint64_t v16 = 0xEC000000676E6964;
        break;
      case 9:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v18 = 1802723693;
        break;
      case 0xA:
        uint64_t v18 = 0x656C797453646C6FLL;
        goto LABEL_36;
      case 0xB:
        unint64_t v16 = 0x80000001C15FE770;
        uint64_t v18 = 0xD000000000000012;
        break;
      case 0xC:
        uint64_t v18 = 0x65536E7265646F6DLL;
        unint64_t v16 = 0xEC00000073666972;
        break;
      case 0xD:
        uint64_t v18 = 0x6F646E6572616C63;
        unint64_t v16 = 0xEF7366697265536ELL;
        break;
      case 0xE:
        uint64_t v18 = 0x6972655362616C73;
        unint64_t v16 = 0xEA00000000007366;
        break;
      case 0xF:
        uint64_t v18 = 0x6D726F6665657266;
LABEL_36:
        unint64_t v16 = 0xEE00736669726553;
        break;
      case 0x10:
        unint64_t v16 = 0xE900000000000066;
        uint64_t v18 = 0x69726553736E6173;
        break;
      case 0x11:
        uint64_t v18 = 0x746E656D616E726FLL;
        unint64_t v16 = 0xEB00000000736C61;
        break;
      case 0x12:
        unint64_t v16 = 0xE700000000000000;
        uint64_t v18 = 0x73747069726373;
        break;
      case 0x13:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v18 = 0x63696C6F626D7973;
        break;
      default:
        break;
    }
    unint64_t v20 = 0xE600000000000000;
    uint64_t v21 = 0x63696C617469;
    switch(v15)
    {
      case 1:
        unint64_t v20 = 0xE400000000000000;
        uint64_t v21 = 1684828002;
        break;
      case 2:
        unint64_t v20 = 0xE800000000000000;
        uint64_t v21 = 0x6465646E61707865;
        break;
      case 3:
        uint64_t v21 = 0x65736E65646E6F63;
        unint64_t v20 = 0xE900000000000064;
        break;
      case 4:
        unint64_t v20 = 0xE900000000000065;
        uint64_t v21 = 0x636170536F6E6F6DLL;
        break;
      case 5:
        unint64_t v20 = 0xE800000000000000;
        uint64_t v21 = 0x6C61636974726576;
        break;
      case 6:
        uint64_t v21 = 0x696D6974704F6975;
        unint64_t v20 = 0xEB0000000064657ALL;
        break;
      case 7:
        uint64_t v22 = 0x4C7468676974;
        goto LABEL_56;
      case 8:
        uint64_t v22 = 0x4C65736F6F6CLL;
LABEL_56:
        uint64_t v21 = v22 & 0xFFFFFFFFFFFFLL | 0x6165000000000000;
        unint64_t v20 = 0xEC000000676E6964;
        break;
      case 9:
        unint64_t v20 = 0xE400000000000000;
        uint64_t v21 = 1802723693;
        break;
      case 10:
        uint64_t v21 = 0x656C797453646C6FLL;
        goto LABEL_58;
      case 11:
        unint64_t v20 = 0x80000001C15FE770;
        uint64_t v21 = 0xD000000000000012;
        break;
      case 12:
        uint64_t v21 = 0x65536E7265646F6DLL;
        unint64_t v20 = 0xEC00000073666972;
        break;
      case 13:
        uint64_t v21 = 0x6F646E6572616C63;
        unint64_t v20 = 0xEF7366697265536ELL;
        break;
      case 14:
        uint64_t v21 = 0x6972655362616C73;
        unint64_t v20 = 0xEA00000000007366;
        break;
      case 15:
        uint64_t v21 = 0x6D726F6665657266;
LABEL_58:
        unint64_t v20 = 0xEE00736669726553;
        break;
      case 16:
        unint64_t v20 = 0xE900000000000066;
        uint64_t v21 = 0x69726553736E6173;
        break;
      case 17:
        uint64_t v21 = 0x746E656D616E726FLL;
        unint64_t v20 = 0xEB00000000736C61;
        break;
      case 18:
        unint64_t v20 = 0xE700000000000000;
        uint64_t v21 = 0x73747069726373;
        break;
      case 19:
        unint64_t v20 = 0xE800000000000000;
        uint64_t v21 = 0x63696C6F626D7973;
        break;
      default:
        break;
    }
    if (v18 == v21 && v16 == v20) {
      int v23 = 0;
    }
    else {
      int v23 = sub_1C1520A9C();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v17;
    uint64_t v14 = v17 + 2;
    if (v17 + 2 >= v4)
    {
LABEL_135:
      uint64_t v4 = v125;
      uint64_t v10 = v17;
      if (v23)
      {
        if (v14 < v17) {
          goto LABEL_314;
        }
LABEL_137:
        if (v10 < v14)
        {
          uint64_t v40 = v14 - 1;
          uint64_t v41 = v10;
          while (1)
          {
            if (v41 != v40)
            {
              if (!v11) {
                goto LABEL_319;
              }
              char v42 = *(unsigned char *)(v11 + v41);
              *(unsigned char *)(v11 + v41) = *(unsigned char *)(v11 + v40);
              *(unsigned char *)(v11 + v40) = v42;
            }
            BOOL v93 = ++v41 < v40--;
            if (!v93) {
              goto LABEL_145;
            }
          }
        }
      }
      goto LABEL_145;
    }
    while (1)
    {
      uint64_t v26 = v24;
      uint64_t v27 = *(unsigned __int8 *)(v11 + v24 + 2);
      uint64_t v28 = *(unsigned __int8 *)(v11 + v24++ + 1);
      unint64_t v29 = 0xE600000000000000;
      uint64_t v30 = 0x63696C617469;
      switch(v27)
      {
        case 1:
          unint64_t v29 = 0xE400000000000000;
          uint64_t v30 = 1684828002;
          break;
        case 2:
          unint64_t v29 = 0xE800000000000000;
          uint64_t v30 = 0x6465646E61707865;
          break;
        case 3:
          uint64_t v30 = 0x65736E65646E6F63;
          unint64_t v29 = 0xE900000000000064;
          break;
        case 4:
          unint64_t v29 = 0xE900000000000065;
          uint64_t v30 = 0x636170536F6E6F6DLL;
          break;
        case 5:
          unint64_t v29 = 0xE800000000000000;
          uint64_t v30 = 0x6C61636974726576;
          break;
        case 6:
          uint64_t v30 = 0x696D6974704F6975;
          unint64_t v29 = 0xEB0000000064657ALL;
          break;
        case 7:
          uint64_t v31 = 0x4C7468676974;
          goto LABEL_86;
        case 8:
          uint64_t v31 = 0x4C65736F6F6CLL;
LABEL_86:
          uint64_t v30 = v31 & 0xFFFFFFFFFFFFLL | 0x6165000000000000;
          unint64_t v29 = 0xEC000000676E6964;
          break;
        case 9:
          unint64_t v29 = 0xE400000000000000;
          uint64_t v30 = 1802723693;
          break;
        case 10:
          uint64_t v30 = 0x656C797453646C6FLL;
          goto LABEL_88;
        case 11:
          unint64_t v29 = 0x80000001C15FE770;
          uint64_t v30 = 0xD000000000000012;
          break;
        case 12:
          uint64_t v30 = 0x65536E7265646F6DLL;
          unint64_t v29 = 0xEC00000073666972;
          break;
        case 13:
          uint64_t v30 = 0x6F646E6572616C63;
          unint64_t v29 = 0xEF7366697265536ELL;
          break;
        case 14:
          uint64_t v30 = 0x6972655362616C73;
          unint64_t v29 = 0xEA00000000007366;
          break;
        case 15:
          uint64_t v30 = 0x6D726F6665657266;
LABEL_88:
          unint64_t v29 = 0xEE00736669726553;
          break;
        case 16:
          unint64_t v29 = 0xE900000000000066;
          uint64_t v30 = 0x69726553736E6173;
          break;
        case 17:
          uint64_t v30 = 0x746E656D616E726FLL;
          unint64_t v29 = 0xEB00000000736C61;
          break;
        case 18:
          unint64_t v29 = 0xE700000000000000;
          uint64_t v30 = 0x73747069726373;
          break;
        case 19:
          unint64_t v29 = 0xE800000000000000;
          uint64_t v30 = 0x63696C6F626D7973;
          break;
        default:
          break;
      }
      unint64_t v32 = 0xE600000000000000;
      uint64_t v33 = 0x63696C617469;
      switch(v28)
      {
        case 1:
          unint64_t v32 = 0xE400000000000000;
          if (v30 != 1684828002) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 2:
          unint64_t v32 = 0xE800000000000000;
          if (v30 != 0x6465646E61707865) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 3:
          unint64_t v32 = 0xE900000000000064;
          if (v30 != 0x65736E65646E6F63) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 4:
          unint64_t v32 = 0xE900000000000065;
          if (v30 != 0x636170536F6E6F6DLL) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 5:
          unint64_t v32 = 0xE800000000000000;
          if (v30 != 0x6C61636974726576) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 6:
          uint64_t v38 = 0x696D6974704F6975;
          uint64_t v39 = 6579578;
          goto LABEL_117;
        case 7:
          uint64_t v37 = 0x4C7468676974;
          goto LABEL_120;
        case 8:
          uint64_t v37 = 0x4C65736F6F6CLL;
LABEL_120:
          uint64_t v34 = v37 & 0xFFFFFFFFFFFFLL | 0x6165000000000000;
          uint64_t v35 = 1735289188;
          goto LABEL_121;
        case 9:
          unint64_t v32 = 0xE400000000000000;
          if (v30 != 1802723693) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 10:
          uint64_t v36 = 0x656C797453646C6FLL;
          goto LABEL_124;
        case 11:
          unint64_t v32 = 0x80000001C15FE770;
          if (v30 != 0xD000000000000012) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 12:
          uint64_t v34 = 0x65536E7265646F6DLL;
          uint64_t v35 = 1936091506;
LABEL_121:
          unint64_t v32 = v35 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          if (v30 != v34) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 13:
          unint64_t v32 = 0xEF7366697265536ELL;
          if (v30 != 0x6F646E6572616C63) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 14:
          unint64_t v32 = 0xEA00000000007366;
          if (v30 != 0x6972655362616C73) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 15:
          uint64_t v36 = 0x6D726F6665657266;
LABEL_124:
          unint64_t v32 = 0xEE00736669726553;
          if (v30 != v36) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 16:
          unint64_t v32 = 0xE900000000000066;
          if (v30 != 0x69726553736E6173) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 17:
          uint64_t v38 = 0x746E656D616E726FLL;
          uint64_t v39 = 7564385;
LABEL_117:
          unint64_t v32 = v39 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          if (v30 != v38) {
            goto LABEL_67;
          }
          goto LABEL_128;
        case 18:
          unint64_t v32 = 0xE700000000000000;
          uint64_t v33 = 0x73747069726373;
          goto LABEL_127;
        case 19:
          unint64_t v32 = 0xE800000000000000;
          if (v30 != 0x63696C6F626D7973) {
            goto LABEL_67;
          }
          goto LABEL_128;
        default:
LABEL_127:
          if (v30 != v33) {
            goto LABEL_67;
          }
LABEL_128:
          if (v29 == v32)
          {
            swift_bridgeObjectRelease_n();
            if (v23)
            {
              uint64_t v14 = v26 + 2;
              uint64_t v4 = v125;
              uint64_t v10 = v17;
              if (v14 < v17) {
                goto LABEL_314;
              }
              goto LABEL_137;
            }
          }
          else
          {
LABEL_67:
            int v25 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v23 ^ v25))
            {
              uint64_t v14 = v26 + 2;
              goto LABEL_135;
            }
          }
          if (v126 == v24)
          {
            uint64_t v14 = v125;
            goto LABEL_135;
          }
          break;
      }
    }
  }
  if (v4 < 0) {
    goto LABEL_313;
  }
  if (v4) {
    return sub_1BFE766D8(0, v4, 1, a1);
  }
  return result;
}

unint64_t sub_1BFE76608()
{
  unint64_t result = qword_1EB860C58;
  if (!qword_1EB860C58)
  {
    sub_1BFE309D0(255, &qword_1EB880CA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlock, MEMORY[0x1E4FBB320]);
    sub_1C085F050(&qword_1EB87D508, (void (*)(uint64_t))type metadata accessor for FormatBlock);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB860C58);
  }
  return result;
}

uint64_t sub_1BFE766D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v23 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = (char *)(*a4 + a3);
    while (1)
    {
      char v7 = *(unsigned char *)(v5 + v4);
      uint64_t v8 = v23;
      uint64_t v9 = v6;
      while (2)
      {
        unint64_t v10 = 0xE600000000000000;
        uint64_t v11 = 0x63696C617469;
        switch(v7)
        {
          case 1:
            unint64_t v10 = 0xE400000000000000;
            uint64_t v11 = 1684828002;
            break;
          case 2:
            unint64_t v10 = 0xE800000000000000;
            uint64_t v11 = 0x6465646E61707865;
            break;
          case 3:
            uint64_t v11 = 0x65736E65646E6F63;
            unint64_t v10 = 0xE900000000000064;
            break;
          case 4:
            unint64_t v10 = 0xE900000000000065;
            uint64_t v11 = 0x636170536F6E6F6DLL;
            break;
          case 5:
            unint64_t v10 = 0xE800000000000000;
            uint64_t v11 = 0x6C61636974726576;
            break;
          case 6:
            uint64_t v11 = 0x696D6974704F6975;
            unint64_t v10 = 0xEB0000000064657ALL;
            break;
          case 7:
            uint64_t v12 = 0x4C7468676974;
            goto LABEL_16;
          case 8:
            uint64_t v12 = 0x4C65736F6F6CLL;
LABEL_16:
            uint64_t v11 = v12 & 0xFFFFFFFFFFFFLL | 0x6165000000000000;
            unint64_t v10 = 0xEC000000676E6964;
            break;
          case 9:
            unint64_t v10 = 0xE400000000000000;
            uint64_t v11 = 1802723693;
            break;
          case 10:
            uint64_t v11 = 0x656C797453646C6FLL;
            goto LABEL_24;
          case 11:
            unint64_t v10 = 0x80000001C15FE770;
            uint64_t v11 = 0xD000000000000012;
            break;
          case 12:
            uint64_t v11 = 0x65536E7265646F6DLL;
            unint64_t v10 = 0xEC00000073666972;
            break;
          case 13:
            uint64_t v11 = 0x6F646E6572616C63;
            unint64_t v10 = 0xEF7366697265536ELL;
            break;
          case 14:
            uint64_t v11 = 0x6972655362616C73;
            unint64_t v10 = 0xEA00000000007366;
            break;
          case 15:
            uint64_t v11 = 0x6D726F6665657266;
LABEL_24:
            unint64_t v10 = 0xEE00736669726553;
            break;
          case 16:
            unint64_t v10 = 0xE900000000000066;
            uint64_t v11 = 0x69726553736E6173;
            break;
          case 17:
            uint64_t v11 = 0x746E656D616E726FLL;
            unint64_t v10 = 0xEB00000000736C61;
            break;
          case 18:
            unint64_t v10 = 0xE700000000000000;
            uint64_t v11 = 0x73747069726373;
            break;
          case 19:
            unint64_t v10 = 0xE800000000000000;
            uint64_t v11 = 0x63696C6F626D7973;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE600000000000000;
        uint64_t v14 = 0x63696C617469;
        switch(*(v9 - 1))
        {
          case 1:
            unint64_t v13 = 0xE400000000000000;
            if (v11 == 1684828002) {
              goto LABEL_66;
            }
            goto LABEL_67;
          case 2:
            unint64_t v13 = 0xE800000000000000;
            if (v11 != 0x6465646E61707865) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 3:
            unint64_t v13 = 0xE900000000000064;
            if (v11 != 0x65736E65646E6F63) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 4:
            unint64_t v13 = 0xE900000000000065;
            if (v11 != 0x636170536F6E6F6DLL) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 5:
            unint64_t v13 = 0xE800000000000000;
            if (v11 != 0x6C61636974726576) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 6:
            uint64_t v15 = 0x696D6974704F6975;
            uint64_t v16 = 6579578;
            goto LABEL_62;
          case 7:
            uint64_t v17 = 0x4C7468676974;
            goto LABEL_43;
          case 8:
            uint64_t v17 = 0x4C65736F6F6CLL;
LABEL_43:
            uint64_t v18 = v17 & 0xFFFFFFFFFFFFLL | 0x6165000000000000;
            uint64_t v19 = 1735289188;
            goto LABEL_50;
          case 9:
            unint64_t v13 = 0xE400000000000000;
            if (v11 != 1802723693) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 10:
            uint64_t v20 = 0x656C797453646C6FLL;
            goto LABEL_57;
          case 11:
            unint64_t v13 = 0x80000001C15FE770;
            if (v11 != 0xD000000000000012) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 12:
            uint64_t v18 = 0x65536E7265646F6DLL;
            uint64_t v19 = 1936091506;
LABEL_50:
            unint64_t v13 = v19 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            if (v11 != v18) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 13:
            unint64_t v13 = 0xEF7366697265536ELL;
            if (v11 != 0x6F646E6572616C63) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 14:
            unint64_t v13 = 0xEA00000000007366;
            if (v11 != 0x6972655362616C73) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 15:
            uint64_t v20 = 0x6D726F6665657266;
LABEL_57:
            unint64_t v13 = 0xEE00736669726553;
            if (v11 != v20) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 16:
            unint64_t v13 = 0xE900000000000066;
            if (v11 != 0x69726553736E6173) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 17:
            uint64_t v15 = 0x746E656D616E726FLL;
            uint64_t v16 = 7564385;
LABEL_62:
            unint64_t v13 = v16 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            if (v11 != v15) {
              goto LABEL_67;
            }
            goto LABEL_66;
          case 18:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x73747069726373;
            goto LABEL_65;
          case 19:
            unint64_t v13 = 0xE800000000000000;
            if (v11 != 0x63696C6F626D7973) {
              goto LABEL_67;
            }
            goto LABEL_66;
          default:
LABEL_65:
            if (v11 != v14) {
              goto LABEL_67;
            }
LABEL_66:
            if (v10 != v13)
            {
LABEL_67:
              char v21 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              unint64_t result = swift_bridgeObjectRelease();
              if ((v21 & 1) == 0) {
                goto LABEL_5;
              }
              if (!v5)
              {
                __break(1u);
                return result;
              }
              char v7 = *v9;
              *uint64_t v9 = *(v9 - 1);
              *(v9 - 1) = v7;
              ++v8;
              --v9;
              if (v4 == v8) {
                goto LABEL_5;
              }
              continue;
            }
            unint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
            ++v4;
            ++v6;
            if (v4 == a2) {
              return result;
            }
            break;
        }
        break;
      }
    }
  }
  return result;
}

unint64_t sub_1BFE76C90()
{
  unint64_t result = qword_1EB85C3D0;
  if (!qword_1EB85C3D0)
  {
    sub_1BFE9DEBC(255, &qword_1EB879DD0, (uint64_t)&type metadata for FormatItemTrait, MEMORY[0x1E4FBB320]);
    sub_1C0080240();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C3D0);
  }
  return result;
}

uint64_t sub_1BFE76D24(uint64_t a1)
{
  return sub_1BFE76D38(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BFE76D38(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFE74F34(a1, a2, a3, a4, (unint64_t *)&unk_1EB87A7A0, (uint64_t)&type metadata for FormatButtonNodeState);
}

uint64_t sub_1BFE76D4C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_179;
    }
    if (v4) {
      return sub_1BFE777E0(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_187;
  }
  uint64_t v109 = v4 - 2;
  uint64_t v106 = result;
  unint64_t v104 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    __dst = (unsigned char *)(MEMORY[0x1E4FBC860] + 32);
    if (v4 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v95 = MEMORY[0x1E4FBC860];
LABEL_142:
      unint64_t v96 = v9;
      if (v12 >= 2)
      {
        uint64_t v97 = *v104;
        do
        {
          unint64_t v98 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_174;
          }
          if (!v97) {
            goto LABEL_186;
          }
          uint64_t v99 = v96;
          uint64_t v100 = *(void *)&v96[16 * v98 + 32];
          uint64_t v101 = *(void *)&v96[16 * v12 + 24];
          sub_1C084B6B8((unsigned char *)(v97 + v100), (unsigned char *)(v97 + *(void *)&v96[16 * v12 + 16]), v97 + v101, __dst);
          if (v2)
          {
            uint64_t v94 = v95;
            goto LABEL_140;
          }
          if (v101 < v100) {
            goto LABEL_175;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v99 = sub_1C063604C((uint64_t)v99);
          }
          if (v98 >= *((void *)v99 + 2)) {
            goto LABEL_176;
          }
          uint64_t v102 = &v99[16 * v98 + 32];
          *(void *)uint64_t v102 = v100;
          *((void *)v102 + 1) = v101;
          unint64_t v103 = *((void *)v99 + 2);
          if (v12 > v103) {
            goto LABEL_177;
          }
          memmove(&v99[16 * v12 + 16], &v99[16 * v12 + 32], 16 * (v103 - v12));
          unint64_t v96 = v99;
          *((void *)v99 + 2) = v103 - 1;
          unint64_t v12 = v103 - 1;
        }
        while (v103 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v95 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v105 = MEMORY[0x1E4FBC860];
    uint64_t v113 = v1;
  }
  else
  {
    uint64_t v113 = v1;
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_1C151ECCC();
    *(void *)(v8 + 16) = v7;
    uint64_t v105 = v8;
    __dst = (unsigned char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v107 = v4;
LABEL_16:
  uint64_t v13 = v10++;
  if (v10 < v4)
  {
    unint64_t v14 = 0xE800000000000000;
    uint64_t v15 = 0x64656C6261736964;
    switch(*(unsigned char *)(v11 + v10))
    {
      case 1:
        unint64_t v14 = 0xE700000000000000;
        uint64_t v15 = 0x64657375636F66;
        break;
      case 2:
        uint64_t v15 = 0x6867696C68676968;
        unint64_t v14 = 0xEB00000000646574;
        break;
      case 3:
        uint64_t v15 = 0x64657463656C6573;
        break;
      default:
        break;
    }
    unint64_t v16 = 0xE800000000000000;
    uint64_t v17 = 0x64656C6261736964;
    switch(*(unsigned char *)(v11 + v13))
    {
      case 1:
        unint64_t v16 = 0xE700000000000000;
        if (v15 == 0x64657375636F66) {
          goto LABEL_26;
        }
        goto LABEL_29;
      case 2:
        uint64_t v17 = 0x6867696C68676968;
        unint64_t v16 = 0xEB00000000646574;
        goto LABEL_25;
      case 3:
        if (v15 != 0x64657463656C6573) {
          goto LABEL_29;
        }
        goto LABEL_26;
      default:
LABEL_25:
        if (v15 != v17) {
          goto LABEL_29;
        }
LABEL_26:
        if (v14 == v16) {
          int v18 = 0;
        }
        else {
LABEL_29:
        }
          int v18 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v13 + 2;
        uint64_t v19 = v13;
        if (v13 + 2 >= v4) {
          goto LABEL_49;
        }
        break;
    }
    while (1)
    {
      uint64_t v21 = v19;
      uint64_t v22 = *(unsigned __int8 *)(v11 + v19 + 2);
      uint64_t v23 = *(unsigned __int8 *)(v11 + v19++ + 1);
      unint64_t v24 = 0xE800000000000000;
      uint64_t v25 = 0x64656C6261736964;
      switch(v22)
      {
        case 1:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x64657375636F66;
          break;
        case 2:
          uint64_t v25 = 0x6867696C68676968;
          unint64_t v24 = 0xEB00000000646574;
          break;
        case 3:
          uint64_t v25 = 0x64657463656C6573;
          break;
        default:
          break;
      }
      unint64_t v26 = 0xE800000000000000;
      uint64_t v27 = 0x64656C6261736964;
      switch(v23)
      {
        case 1:
          unint64_t v26 = 0xE700000000000000;
          if (v25 != 0x64657375636F66) {
            goto LABEL_32;
          }
          goto LABEL_43;
        case 2:
          uint64_t v27 = 0x6867696C68676968;
          unint64_t v26 = 0xEB00000000646574;
          goto LABEL_42;
        case 3:
          if (v25 != 0x64657463656C6573) {
            goto LABEL_32;
          }
          goto LABEL_43;
        default:
LABEL_42:
          if (v25 != v27) {
            goto LABEL_32;
          }
LABEL_43:
          if (v24 == v26)
          {
            swift_bridgeObjectRelease_n();
            if (v18)
            {
              uint64_t v10 = v21 + 2;
              uint64_t v4 = v107;
              if (v10 < v13) {
                goto LABEL_180;
              }
              goto LABEL_51;
            }
          }
          else
          {
LABEL_32:
            int v20 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v18 ^ v20))
            {
              uint64_t v10 = v21 + 2;
              uint64_t v4 = v107;
              if ((v18 & 1) == 0) {
                goto LABEL_60;
              }
              goto LABEL_50;
            }
          }
          if (v109 == v19)
          {
            uint64_t v10 = v107;
LABEL_49:
            uint64_t v4 = v107;
            if ((v18 & 1) == 0) {
              goto LABEL_60;
            }
LABEL_50:
            if (v10 < v13) {
              goto LABEL_180;
            }
LABEL_51:
            if (v13 < v10)
            {
              uint64_t v28 = v10 - 1;
              uint64_t v29 = v13;
              while (1)
              {
                if (v29 != v28)
                {
                  if (!v11) {
                    goto LABEL_185;
                  }
                  char v30 = *(unsigned char *)(v11 + v29);
                  *(unsigned char *)(v11 + v29) = *(unsigned char *)(v11 + v28);
                  *(unsigned char *)(v11 + v28) = v30;
                }
                BOOL v72 = ++v29 < v28--;
                if (!v72) {
                  goto LABEL_60;
                }
              }
            }
            goto LABEL_60;
          }
          break;
      }
    }
  }
LABEL_60:
  if (v10 >= v4) {
    goto LABEL_89;
  }
  if (__OFSUB__(v10, v13)) {
    goto LABEL_178;
  }
  if (v10 - v13 >= v106) {
    goto LABEL_89;
  }
  uint64_t v31 = v13 + v106;
  if (__OFADD__(v13, v106)) {
    goto LABEL_181;
  }
  if (v31 >= v4) {
    uint64_t v31 = v4;
  }
  if (v31 >= v13)
  {
    if (v10 == v31) {
      goto LABEL_89;
    }
    unint64_t v32 = (char *)(v11 + v10);
    uint64_t v108 = v13;
    uint64_t v111 = v31;
LABEL_71:
    char v33 = *(unsigned char *)(v11 + v10);
    uint64_t v34 = v32;
    while (1)
    {
      unint64_t v35 = 0xE800000000000000;
      uint64_t v36 = 0x64656C6261736964;
      switch(v33)
      {
        case 1:
          unint64_t v35 = 0xE700000000000000;
          uint64_t v36 = 0x64657375636F66;
          break;
        case 2:
          uint64_t v36 = 0x6867696C68676968;
          unint64_t v35 = 0xEB00000000646574;
          break;
        case 3:
          uint64_t v36 = 0x64657463656C6573;
          break;
        default:
          break;
      }
      unint64_t v37 = 0xE800000000000000;
      uint64_t v38 = 0x64656C6261736964;
      switch(*(v34 - 1))
      {
        case 1:
          unint64_t v37 = 0xE700000000000000;
          if (v36 == 0x64657375636F66) {
            goto LABEL_81;
          }
          goto LABEL_82;
        case 2:
          uint64_t v38 = 0x6867696C68676968;
          unint64_t v37 = 0xEB00000000646574;
          goto LABEL_80;
        case 3:
          if (v36 != 0x64657463656C6573) {
            goto LABEL_82;
          }
          goto LABEL_81;
        default:
LABEL_80:
          if (v36 != v38) {
            goto LABEL_82;
          }
LABEL_81:
          if (v35 == v37)
          {
            swift_bridgeObjectRelease_n();
LABEL_70:
            ++v10;
            ++v32;
            uint64_t v13 = v108;
            if (v10 != v111) {
              goto LABEL_71;
            }
            uint64_t v10 = v111;
LABEL_89:
            if (v10 < v13) {
              goto LABEL_173;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v9 = sub_1C0634CC8(0, *((void *)v9 + 2) + 1, 1, v9);
            }
            unint64_t v41 = *((void *)v9 + 2);
            unint64_t v40 = *((void *)v9 + 3);
            unint64_t v12 = v41 + 1;
            if (v41 >= v40 >> 1) {
              uint64_t v9 = sub_1C0634CC8((char *)(v40 > 1), v41 + 1, 1, v9);
            }
            *((void *)v9 + 2) = v12;
            unint64_t v112 = v9 + 32;
            char v42 = &v9[16 * v41 + 32];
            *(void *)char v42 = v13;
            *((void *)v42 + 1) = v10;
            if (v41)
            {
              uint64_t v43 = v9 + 32;
              while (1)
              {
                unint64_t v44 = v12 - 1;
                if (v12 >= 4)
                {
                  unint64_t v49 = &v43[16 * v12];
                  uint64_t v50 = *((void *)v49 - 8);
                  uint64_t v51 = *((void *)v49 - 7);
                  BOOL v55 = __OFSUB__(v51, v50);
                  uint64_t v52 = v51 - v50;
                  if (v55) {
                    goto LABEL_162;
                  }
                  uint64_t v54 = *((void *)v49 - 6);
                  uint64_t v53 = *((void *)v49 - 5);
                  BOOL v55 = __OFSUB__(v53, v54);
                  uint64_t v47 = v53 - v54;
                  char v48 = v55;
                  if (v55) {
                    goto LABEL_163;
                  }
                  unint64_t v56 = v12 - 2;
                  uint64_t v57 = &v43[16 * v12 - 32];
                  uint64_t v59 = *(void *)v57;
                  uint64_t v58 = *((void *)v57 + 1);
                  BOOL v55 = __OFSUB__(v58, v59);
                  uint64_t v60 = v58 - v59;
                  if (v55) {
                    goto LABEL_165;
                  }
                  BOOL v55 = __OFADD__(v47, v60);
                  uint64_t v61 = v47 + v60;
                  if (v55) {
                    goto LABEL_168;
                  }
                  if (v61 >= v52)
                  {
                    uint64_t v79 = &v43[16 * v44];
                    uint64_t v81 = *(void *)v79;
                    uint64_t v80 = *((void *)v79 + 1);
                    BOOL v55 = __OFSUB__(v80, v81);
                    uint64_t v82 = v80 - v81;
                    if (v55) {
                      goto LABEL_172;
                    }
                    BOOL v72 = v47 < v82;
                    goto LABEL_127;
                  }
                }
                else
                {
                  if (v12 != 3)
                  {
                    uint64_t v73 = *((void *)v9 + 4);
                    uint64_t v74 = *((void *)v9 + 5);
                    BOOL v55 = __OFSUB__(v74, v73);
                    uint64_t v66 = v74 - v73;
                    char v67 = v55;
                    goto LABEL_121;
                  }
                  uint64_t v46 = *((void *)v9 + 4);
                  uint64_t v45 = *((void *)v9 + 5);
                  BOOL v55 = __OFSUB__(v45, v46);
                  uint64_t v47 = v45 - v46;
                  char v48 = v55;
                }
                if (v48) {
                  goto LABEL_164;
                }
                unint64_t v56 = v12 - 2;
                unint64_t v62 = &v43[16 * v12 - 32];
                uint64_t v64 = *(void *)v62;
                uint64_t v63 = *((void *)v62 + 1);
                BOOL v65 = __OFSUB__(v63, v64);
                uint64_t v66 = v63 - v64;
                char v67 = v65;
                if (v65) {
                  goto LABEL_167;
                }
                uint64_t v68 = &v43[16 * v44];
                uint64_t v70 = *(void *)v68;
                uint64_t v69 = *((void *)v68 + 1);
                BOOL v55 = __OFSUB__(v69, v70);
                uint64_t v71 = v69 - v70;
                if (v55) {
                  goto LABEL_170;
                }
                if (__OFADD__(v66, v71)) {
                  goto LABEL_171;
                }
                if (v66 + v71 >= v47)
                {
                  BOOL v72 = v47 < v71;
LABEL_127:
                  if (v72) {
                    unint64_t v44 = v56;
                  }
                  goto LABEL_129;
                }
LABEL_121:
                if (v67) {
                  goto LABEL_166;
                }
                uint64_t v75 = &v43[16 * v44];
                uint64_t v77 = *(void *)v75;
                uint64_t v76 = *((void *)v75 + 1);
                BOOL v55 = __OFSUB__(v76, v77);
                uint64_t v78 = v76 - v77;
                if (v55) {
                  goto LABEL_169;
                }
                if (v78 < v66) {
                  goto LABEL_15;
                }
LABEL_129:
                unint64_t v83 = v44 - 1;
                if (v44 - 1 >= v12)
                {
                  __break(1u);
LABEL_159:
                  __break(1u);
LABEL_160:
                  __break(1u);
LABEL_161:
                  __break(1u);
LABEL_162:
                  __break(1u);
LABEL_163:
                  __break(1u);
LABEL_164:
                  __break(1u);
LABEL_165:
                  __break(1u);
LABEL_166:
                  __break(1u);
LABEL_167:
                  __break(1u);
LABEL_168:
                  __break(1u);
LABEL_169:
                  __break(1u);
LABEL_170:
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
LABEL_174:
                  __break(1u);
LABEL_175:
                  __break(1u);
LABEL_176:
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
                  goto LABEL_182;
                }
                uint64_t v84 = v11;
                if (!v11) {
                  goto LABEL_184;
                }
                uint64_t v85 = v10;
                BOOL v86 = v9;
                uint64_t v87 = v43;
                char v88 = &v43[16 * v83];
                uint64_t v89 = *(void *)v88;
                uint64_t v90 = &v87[16 * v44];
                uint64_t v91 = *((void *)v90 + 1);
                uint64_t v92 = v84;
                sub_1C084B6B8((unsigned char *)(v84 + *(void *)v88), (unsigned char *)(v84 + *(void *)v90), v84 + v91, __dst);
                if (v113)
                {
                  uint64_t v94 = v105;
LABEL_140:
                  swift_bridgeObjectRelease();
                  *(void *)(v94 + 16) = 0;
                  return swift_bridgeObjectRelease();
                }
                if (v91 < v89) {
                  goto LABEL_159;
                }
                if (v44 > *((void *)v86 + 2)) {
                  goto LABEL_160;
                }
                *(void *)char v88 = v89;
                uint64_t v43 = v112;
                *(void *)&v112[16 * v83 + 8] = v91;
                unint64_t v93 = *((void *)v86 + 2);
                if (v44 >= v93) {
                  goto LABEL_161;
                }
                uint64_t v9 = v86;
                unint64_t v12 = v93 - 1;
                memmove(v90, v90 + 16, 16 * (v93 - 1 - v44));
                *((void *)v86 + 2) = v93 - 1;
                uint64_t v11 = v92;
                uint64_t v10 = v85;
                if (v93 <= 2) {
                  goto LABEL_15;
                }
              }
            }
            unint64_t v12 = 1;
LABEL_15:
            uint64_t v4 = v107;
            if (v10 >= v107)
            {
              uint64_t v2 = v113;
              uint64_t v95 = v105;
              goto LABEL_142;
            }
            goto LABEL_16;
          }
LABEL_82:
          char v39 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v39 & 1) == 0) {
            goto LABEL_70;
          }
          if (!v11) {
            goto LABEL_183;
          }
          char v33 = *v34;
          *uint64_t v34 = *(v34 - 1);
          *(v34 - 1) = v33;
          ++v13;
          --v34;
          if (v10 == v13) {
            goto LABEL_70;
          }
          break;
      }
    }
  }
LABEL_182:
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  uint64_t result = sub_1C15203FC();
  __break(1u);
  return result;
}

uint64_t sub_1BFE777E0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v16 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = (char *)(*a4 + a3);
    while (1)
    {
      char v8 = *(unsigned char *)(v6 + v4);
      uint64_t v9 = v16;
      uint64_t v10 = v7;
      while (2)
      {
        unint64_t v11 = 0xE800000000000000;
        uint64_t v12 = 0x64656C6261736964;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x64657375636F66;
            break;
          case 2:
            uint64_t v12 = 0x6867696C68676968;
            unint64_t v11 = 0xEB00000000646574;
            break;
          case 3:
            uint64_t v12 = 0x64657463656C6573;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE800000000000000;
        uint64_t v14 = 0x64656C6261736964;
        switch(*(v10 - 1))
        {
          case 1:
            unint64_t v13 = 0xE700000000000000;
            if (v12 == 0x64657375636F66) {
              goto LABEL_18;
            }
            goto LABEL_19;
          case 2:
            uint64_t v14 = 0x6867696C68676968;
            unint64_t v13 = 0xEB00000000646574;
            goto LABEL_15;
          case 3:
            if (v12 == 0x64657463656C6573) {
              goto LABEL_18;
            }
            goto LABEL_19;
          default:
LABEL_15:
            if (v12 != v14) {
              goto LABEL_19;
            }
LABEL_18:
            if (v11 != v13)
            {
LABEL_19:
              char v15 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              if ((v15 & 1) == 0) {
                goto LABEL_5;
              }
              if (!v6)
              {
                __break(1u);
                return result;
              }
              char v8 = *v10;
              char *v10 = *(v10 - 1);
              *(v10 - 1) = v8;
              ++v9;
              --v10;
              if (v4 == v9) {
                goto LABEL_5;
              }
              continue;
            }
            uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
            ++v4;
            ++v7;
            if (v4 == a2) {
              return result;
            }
            break;
        }
        break;
      }
    }
  }
  return result;
}

uint64_t sub_1BFE779E8(uint64_t a1)
{
  return sub_1BFE779FC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BFE779FC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1BFE74F34(a1, a2, a3, a4, &qword_1EB860E58, (uint64_t)&type metadata for FormatGroupItemKind);
}

uint64_t sub_1BFE77A10(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C152086C();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_205;
    }
    if (v4) {
      return sub_1BFE785F0(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1)
  {
LABEL_213:
    uint64_t result = sub_1C15203FC();
    __break(1u);
    return result;
  }
  uint64_t v109 = v4 - 2;
  uint64_t v104 = result;
  uint64_t v102 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
    __dst = (unsigned char *)(MEMORY[0x1E4FBC860] + 32);
    if (v4 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v93 = MEMORY[0x1E4FBC860];
      goto LABEL_168;
    }
    uint64_t v103 = MEMORY[0x1E4FBC860];
    uint64_t v111 = v1;
  }
  else
  {
    uint64_t v111 = v1;
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_1C151ECCC();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = v8;
    __dst = (unsigned char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v9 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v105 = v4;
LABEL_16:
  uint64_t v13 = v10 + 1;
  if (v10 + 1 < v4)
  {
    unint64_t v14 = 0xE300000000000000;
    uint64_t v15 = 6775156;
    switch(*(unsigned char *)(v11 + v13))
    {
      case 1:
        unint64_t v14 = 0xE700000000000000;
        uint64_t v15 = 0x72656874616577;
        break;
      case 2:
        unint64_t v14 = 0xE700000000000000;
        uint64_t v15 = 0x6C6C6177796170;
        break;
      case 3:
        unint64_t v14 = 0xE800000000000000;
        uint64_t v15 = 0x656E696C64616568;
        break;
      case 4:
        unint64_t v14 = 0xE500000000000000;
        uint64_t v15 = 0x6575737369;
        break;
      case 5:
        unint64_t v14 = 0xE800000000000000;
        uint64_t v15 = 0x6465626D45626577;
        break;
      case 6:
        unint64_t v14 = 0xE400000000000000;
        uint64_t v15 = 1684366694;
        break;
      default:
        break;
    }
    unint64_t v16 = 0xE300000000000000;
    uint64_t v17 = 6775156;
    switch(*(unsigned char *)(v11 + v10))
    {
      case 1:
        unint64_t v16 = 0xE700000000000000;
        if (v15 == 0x72656874616577) {
          goto LABEL_35;
        }
        goto LABEL_38;
      case 2:
        unint64_t v16 = 0xE700000000000000;
        if (v15 != 0x6C6C6177796170) {
          goto LABEL_38;
        }
        goto LABEL_35;
      case 3:
        unint64_t v16 = 0xE800000000000000;
        if (v15 != 0x656E696C64616568) {
          goto LABEL_38;
        }
        goto LABEL_35;
      case 4:
        unint64_t v16 = 0xE500000000000000;
        if (v15 != 0x6575737369) {
          goto LABEL_38;
        }
        goto LABEL_35;
      case 5:
        unint64_t v16 = 0xE800000000000000;
        uint64_t v17 = 0x6465626D45626577;
        goto LABEL_34;
      case 6:
        unint64_t v16 = 0xE400000000000000;
        if (v15 != 1684366694) {
          goto LABEL_38;
        }
        goto LABEL_35;
      default:
LABEL_34:
        if (v15 != v17) {
          goto LABEL_38;
        }
LABEL_35:
        if (v14 == v16) {
          int v18 = 0;
        }
        else {
LABEL_38:
        }
          int v18 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v19 = v10;
        uint64_t v13 = v10 + 2;
        if (v10 + 2 >= v4) {
          goto LABEL_67;
        }
        break;
    }
    while (1)
    {
      uint64_t v21 = v19;
      uint64_t v22 = *(unsigned __int8 *)(v11 + v19 + 2);
      uint64_t v23 = *(unsigned __int8 *)(v11 + v19++ + 1);
      unint64_t v24 = 0xE300000000000000;
      uint64_t v25 = 6775156;
      switch(v22)
      {
        case 1:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x72656874616577;
          break;
        case 2:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x6C6C6177796170;
          break;
        case 3:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x656E696C64616568;
          break;
        case 4:
          unint64_t v24 = 0xE500000000000000;
          uint64_t v25 = 0x6575737369;
          break;
        case 5:
          unint64_t v24 = 0xE800000000000000;
          uint64_t v25 = 0x6465626D45626577;
          break;
        case 6:
          unint64_t v24 = 0xE400000000000000;
          uint64_t v25 = 1684366694;
          break;
        default:
          break;
      }
      unint64_t v26 = 0xE300000000000000;
      uint64_t v27 = 6775156;
      switch(v23)
      {
        case 1:
          unint64_t v26 = 0xE700000000000000;
          if (v25 != 0x72656874616577) {
            goto LABEL_41;
          }
          goto LABEL_61;
        case 2:
          unint64_t v26 = 0xE700000000000000;
          if (v25 != 0x6C6C6177796170) {
            goto LABEL_41;
          }
          goto LABEL_61;
        case 3:
          unint64_t v26 = 0xE800000000000000;
          if (v25 != 0x656E696C64616568) {
            goto LABEL_41;
          }
          goto LABEL_61;
        case 4:
          unint64_t v26 = 0xE500000000000000;
          if (v25 != 0x6575737369) {
            goto LABEL_41;
          }
          goto LABEL_61;
        case 5:
          unint64_t v26 = 0xE800000000000000;
          uint64_t v27 = 0x6465626D45626577;
          goto LABEL_60;
        case 6:
          unint64_t v26 = 0xE400000000000000;
          if (v25 != 1684366694) {
            goto LABEL_41;
          }
          goto LABEL_61;
        default:
LABEL_60:
          if (v25 != v27) {
            goto LABEL_41;
          }
LABEL_61:
          if (v24 == v26)
          {
            swift_bridgeObjectRelease_n();
            if (v18)
            {
              uint64_t v13 = v21 + 2;
              uint64_t v4 = v105;
              if (v13 < v10) {
                goto LABEL_206;
              }
              goto LABEL_69;
            }
          }
          else
          {
LABEL_41:
            int v20 = sub_1C1520A9C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v18 ^ v20))
            {
              uint64_t v13 = v21 + 2;
              uint64_t v4 = v105;
              if ((v18 & 1) == 0) {
                goto LABEL_78;
              }
              goto LABEL_68;
            }
          }
          if (v109 == v19)
          {
            uint64_t v13 = v105;
LABEL_67:
            uint64_t v4 = v105;
            if ((v18 & 1) == 0) {
              goto LABEL_78;
            }
LABEL_68:
            if (v13 < v10) {
              goto LABEL_206;
            }
LABEL_69:
            if (v10 < v13)
            {
              uint64_t v28 = v13 - 1;
              uint64_t v29 = v10;
              while (1)
              {
                if (v29 != v28)
                {
                  if (!v11) {
                    goto LABEL_211;
                  }
                  char v30 = *(unsigned char *)(v11 + v29);
                  *(unsigned char *)(v11 + v29) = *(unsigned char *)(v11 + v28);
                  *(unsigned char *)(v11 + v28) = v30;
                }
                BOOL v72 = ++v29 < v28--;
                if (!v72) {
                  goto LABEL_78;
                }
              }
            }
            goto LABEL_78;
          }
          break;
      }
    }
  }
LABEL_78:
  if (v13 >= v4) {
    goto LABEL_116;
  }
  if (__OFSUB__(v13, v10)) {
    goto LABEL_204;
  }
  if (v13 - v10 >= v104) {
    goto LABEL_116;
  }
  uint64_t v31 = v10 + v104;
  if (__OFADD__(v10, v104)) {
    goto LABEL_207;
  }
  if (v31 >= v4) {
    uint64_t v31 = v4;
  }
  if (v31 < v10)
  {
LABEL_208:
    __break(1u);
LABEL_209:
    __break(1u);
LABEL_210:
    __break(1u);
LABEL_211:
    __break(1u);
LABEL_212:
    __break(1u);
    goto LABEL_213;
  }
  if (v13 == v31) {
    goto LABEL_116;
  }
  unint64_t v32 = (char *)(v11 + v13);
  uint64_t v106 = v31;
  uint64_t v108 = v10;
LABEL_89:
  char v33 = *(unsigned char *)(v11 + v13);
  uint64_t v34 = v32;
  while (2)
  {
    unint64_t v35 = 0xE300000000000000;
    uint64_t v36 = 6775156;
    switch(v33)
    {
      case 1:
        unint64_t v35 = 0xE700000000000000;
        uint64_t v36 = 0x72656874616577;
        break;
      case 2:
        unint64_t v35 = 0xE700000000000000;
        uint64_t v36 = 0x6C6C6177796170;
        break;
      case 3:
        unint64_t v35 = 0xE800000000000000;
        uint64_t v36 = 0x656E696C64616568;
        break;
      case 4:
        unint64_t v35 = 0xE500000000000000;
        uint64_t v36 = 0x6575737369;
        break;
      case 5:
        unint64_t v35 = 0xE800000000000000;
        uint64_t v36 = 0x6465626D45626577;
        break;
      case 6:
        unint64_t v35 = 0xE400000000000000;
        uint64_t v36 = 1684366694;
        break;
      default:
        break;
    }
    unint64_t v37 = 0xE300000000000000;
    uint64_t v38 = 6775156;
    switch(*(v34 - 1))
    {
      case 1:
        unint64_t v37 = 0xE700000000000000;
        if (v36 == 0x72656874616577) {
          goto LABEL_108;
        }
        goto LABEL_109;
      case 2:
        unint64_t v37 = 0xE700000000000000;
        if (v36 != 0x6C6C6177796170) {
          goto LABEL_109;
        }
        goto LABEL_108;
      case 3:
        unint64_t v37 = 0xE800000000000000;
        if (v36 != 0x656E696C64616568) {
          goto LABEL_109;
        }
        goto LABEL_108;
      case 4:
        unint64_t v37 = 0xE500000000000000;
        if (v36 != 0x6575737369) {
          goto LABEL_109;
        }
        goto LABEL_108;
      case 5:
        unint64_t v37 = 0xE800000000000000;
        uint64_t v38 = 0x6465626D45626577;
        goto LABEL_107;
      case 6:
        unint64_t v37 = 0xE400000000000000;
        if (v36 != 1684366694) {
          goto LABEL_109;
        }
        goto LABEL_108;
      default:
LABEL_107:
        if (v36 != v38) {
          goto LABEL_109;
        }
LABEL_108:
        if (v35 != v37)
        {
LABEL_109:
          char v39 = sub_1C1520A9C();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v39 & 1) == 0) {
            goto LABEL_88;
          }
          if (!v11) {
            goto LABEL_209;
          }
          char v33 = *v34;
          *uint64_t v34 = *(v34 - 1);
          *(v34 - 1) = v33;
          ++v10;
          --v34;
          if (v13 == v10) {
            goto LABEL_88;
          }
          continue;
        }
        swift_bridgeObjectRelease_n();
LABEL_88:
        ++v13;
        ++v32;
        uint64_t v10 = v108;
        if (v13 != v106) {
          goto LABEL_89;
        }
        uint64_t v13 = v106;
LABEL_116:
        if (v13 < v10) {
          goto LABEL_199;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1C0634CC8(0, *((void *)v9 + 2) + 1, 1, v9);
        }
        unint64_t v41 = *((void *)v9 + 2);
        unint64_t v40 = *((void *)v9 + 3);
        unint64_t v12 = v41 + 1;
        uint64_t v107 = v13;
        if (v41 >= v40 >> 1) {
          uint64_t v9 = sub_1C0634CC8((char *)(v40 > 1), v41 + 1, 1, v9);
        }
        *((void *)v9 + 2) = v12;
        char v42 = v9 + 32;
        uint64_t v43 = &v9[16 * v41 + 32];
        *(void *)uint64_t v43 = v10;
        *((void *)v43 + 1) = v13;
        if (v41)
        {
          while (2)
          {
            unint64_t v44 = v12 - 1;
            if (v12 >= 4)
            {
              unint64_t v49 = &v42[16 * v12];
              uint64_t v50 = *((void *)v49 - 8);
              uint64_t v51 = *((void *)v49 - 7);
              BOOL v55 = __OFSUB__(v51, v50);
              uint64_t v52 = v51 - v50;
              if (v55) {
                goto LABEL_188;
              }
              uint64_t v54 = *((void *)v49 - 6);
              uint64_t v53 = *((void *)v49 - 5);
              BOOL v55 = __OFSUB__(v53, v54);
              uint64_t v47 = v53 - v54;
              char v48 = v55;
              if (v55) {
                goto LABEL_189;
              }
              unint64_t v56 = v12 - 2;
              uint64_t v57 = &v42[16 * v12 - 32];
              uint64_t v59 = *(void *)v57;
              uint64_t v58 = *((void *)v57 + 1);
              BOOL v55 = __OFSUB__(v58, v59);
              uint64_t v60 = v58 - v59;
              if (v55) {
                goto LABEL_191;
              }
              BOOL v55 = __OFADD__(v47, v60);
              uint64_t v61 = v47 + v60;
              if (v55) {
                goto LABEL_194;
              }
              if (v61 >= v52)
              {
                uint64_t v79 = &v42[16 * v44];
                uint64_t v81 = *(void *)v79;
                uint64_t v80 = *((void *)v79 + 1);
                BOOL v55 = __OFSUB__(v80, v81);
                uint64_t v82 = v80 - v81;
                if (v55) {
                  goto LABEL_198;
                }
                BOOL v72 = v47 < v82;
              }
              else
              {
LABEL_135:
                if (v48) {
                  goto LABEL_190;
                }
                unint64_t v56 = v12 - 2;
                unint64_t v62 = &v42[16 * v12 - 32];
                uint64_t v64 = *(void *)v62;
                uint64_t v63 = *((void *)v62 + 1);
                BOOL v65 = __OFSUB__(v63, v64);
                uint64_t v66 = v63 - v64;
                char v67 = v65;
                if (v65) {
                  goto LABEL_193;
                }
                uint64_t v68 = &v42[16 * v44];
                uint64_t v70 = *(void *)v68;
                uint64_t v69 = *((void *)v68 + 1);
                BOOL v55 = __OFSUB__(v69, v70);
                uint64_t v71 = v69 - v70;
                if (v55) {
                  goto LABEL_196;
                }
                if (__OFADD__(v66, v71)) {
                  goto LABEL_197;
                }
                if (v66 + v71 < v47) {
                  goto LABEL_147;
                }
                BOOL v72 = v47 < v71;
              }
              if (v72) {
                unint64_t v44 = v56;
              }
            }
            else
            {
              if (v12 == 3)
              {
                uint64_t v46 = *((void *)v9 + 4);
                uint64_t v45 = *((void *)v9 + 5);
                BOOL v55 = __OFSUB__(v45, v46);
                uint64_t v47 = v45 - v46;
                char v48 = v55;
                goto LABEL_135;
              }
              uint64_t v73 = *((void *)v9 + 4);
              uint64_t v74 = *((void *)v9 + 5);
              BOOL v55 = __OFSUB__(v74, v73);
              uint64_t v66 = v74 - v73;
              char v67 = v55;
LABEL_147:
              if (v67) {
                goto LABEL_192;
              }
              uint64_t v75 = &v42[16 * v44];
              uint64_t v77 = *(void *)v75;
              uint64_t v76 = *((void *)v75 + 1);
              BOOL v55 = __OFSUB__(v76, v77);
              uint64_t v78 = v76 - v77;
              if (v55) {
                goto LABEL_195;
              }
              if (v78 < v66) {
                goto LABEL_15;
              }
            }
            unint64_t v83 = v44 - 1;
            if (v44 - 1 >= v12)
            {
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
LABEL_192:
              __break(1u);
LABEL_193:
              __break(1u);
LABEL_194:
              __break(1u);
LABEL_195:
              __break(1u);
LABEL_196:
              __break(1u);
LABEL_197:
              __break(1u);
LABEL_198:
              __break(1u);
LABEL_199:
              __break(1u);
LABEL_200:
              __break(1u);
LABEL_201:
              __break(1u);
LABEL_202:
              __break(1u);
LABEL_203:
              __break(1u);
LABEL_204:
              __break(1u);
LABEL_205:
              __break(1u);
LABEL_206:
              __break(1u);
LABEL_207:
              __break(1u);
              goto LABEL_208;
            }
            uint64_t v84 = v11;
            if (!v11) {
              goto LABEL_210;
            }
            uint64_t v85 = v9;
            BOOL v86 = &v42[16 * v83];
            uint64_t v87 = *(void *)v86;
            char v88 = &v42[16 * v44];
            uint64_t v89 = *((void *)v88 + 1);
            uint64_t v90 = v84;
            sub_1C084B074((unsigned char *)(v84 + *(void *)v86), (unsigned char *)(v84 + *(void *)v88), v84 + v89, __dst);
            if (v111)
            {
              uint64_t v92 = v103;
LABEL_166:
              swift_bridgeObjectRelease();
              *(void *)(v92 + 16) = 0;
              return swift_bridgeObjectRelease();
            }
            if (v89 < v87) {
              goto LABEL_185;
            }
            if (v44 > *((void *)v85 + 2)) {
              goto LABEL_186;
            }
            *(void *)BOOL v86 = v87;
            *(void *)&v42[16 * v83 + 8] = v89;
            unint64_t v91 = *((void *)v85 + 2);
            if (v44 >= v91) {
              goto LABEL_187;
            }
            uint64_t v9 = v85;
            unint64_t v12 = v91 - 1;
            memmove(&v42[16 * v44], v88 + 16, 16 * (v91 - 1 - v44));
            *((void *)v85 + 2) = v91 - 1;
            uint64_t v11 = v90;
            if (v91 <= 2) {
              goto LABEL_15;
            }
            continue;
          }
        }
        unint64_t v12 = 1;
LABEL_15:
        uint64_t v4 = v105;
        uint64_t v10 = v107;
        if (v107 < v105) {
          goto LABEL_16;
        }
        uint64_t v2 = v111;
        uint64_t v93 = v103;
LABEL_168:
        uint64_t v94 = v9;
        if (v12 >= 2)
        {
          uint64_t v95 = *v102;
          do
          {
            unint64_t v96 = v12 - 2;
            if (v12 < 2) {
              goto LABEL_200;
            }
            if (!v95) {
              goto LABEL_212;
            }
            uint64_t v97 = v94;
            uint64_t v98 = *(void *)&v94[16 * v96 + 32];
            uint64_t v99 = *(void *)&v94[16 * v12 + 24];
            sub_1C084B074((unsigned char *)(v95 + v98), (unsigned char *)(v95 + *(void *)&v94[16 * v12 + 16]), v95 + v99, __dst);
            if (v2)
            {
              uint64_t v92 = v93;
              goto LABEL_166;
            }
            if (v99 < v98) {
              goto LABEL_201;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v97 = sub_1C063604C((uint64_t)v97);
            }
            if (v96 >= *((void *)v97 + 2)) {
              goto LABEL_202;
            }
            uint64_t v100 = &v97[16 * v96 + 32];
            *(void *)uint64_t v100 = v98;
            *((void *)v100 + 1) = v99;
            unint64_t v101 = *((void *)v97 + 2);
            if (v12 > v101) {
              goto LABEL_203;
            }
            memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
            uint64_t v94 = v97;
            *((void *)v97 + 2) = v101 - 1;
            unint64_t v12 = v101 - 1;
          }
          while (v101 > 2);
        }
        swift_bridgeObjectRelease();
        *(void *)(v93 + 16) = 0;
        return swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1BFE785F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v16 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = (char *)(*a4 + a3);
    while (1)
    {
      char v8 = *(unsigned char *)(v6 + v4);
      uint64_t v9 = v16;
      uint64_t v10 = v7;
      while (2)
      {
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 6775156;
        switch(v8)
        {
          case 1:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x72656874616577;
            break;
          case 2:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x6C6C6177796170;
            break;
          case 3:
            unint64_t v11 = 0xE800000000000000;
            uint64_t v12 = 0x656E696C64616568;
            break;
          case 4:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x6575737369;
            break;
          case 5:
            unint64_t v11 = 0xE800000000000000;
            uint64_t v12 = 0x6465626D45626577;
            break;
          case 6:
            unint64_t v11 = 0xE400000000000000;
            uint64_t v12 = 1684366694;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE300000000000000;
        uint64_t v14 = 6775156;
        switch(*(v10 - 1))
        {
          case 1:
            unint64_t v13 = 0xE700000000000000;
            if (v12 == 0x72656874616577) {
              goto LABEL_25;
            }
            goto LABEL_26;
          case 2:
            unint64_t v13 = 0xE700000000000000;
            if (v12 != 0x6C6C6177796170) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 3:
            unint64_t v13 = 0xE800000000000000;
            if (v12 != 0x656E696C64616568) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 4:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x6575737369) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 5:
            unint64_t v13 = 0xE800000000000000;
            uint64_t v14 = 0x6465626D45626577;
            goto LABEL_24;
          case 6:
            unint64_t v13 = 0xE400000000000000;
            if (v12 != 1684366694) {
              goto LABEL_26;
            }
            goto LABEL_25;
          default:
LABEL_24:
            if (v12 != v14) {
              goto LABEL_26;
            }
LABEL_25:
            if (v11 != v13)
            {
LABEL_26:
              char v15 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              uint64_t result = swift_bridgeObjectRelease();
              if ((v15 & 1) == 0) {
                goto LABEL_5;
              }
              if (!v6)
              {
                __break(1u);
                return result;
              }
              char v8 = *v10;
              char *v10 = *(v10 - 1);
              *(v10 - 1) = v8;
              ++v9;
              --v10;
              if (v4 == v9) {
                goto LABEL_5;
              }
              continue;
            }
            uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
            ++v4;
            ++v7;
            if (v4 == a2) {
              return result;
            }
            break;
        }
        break;
      }
    }
  }
  return result;
}

unint64_t sub_1BFE78870()
{
  return sub_1C0773B74(*v0);
}

uint64_t FormatTextNodeStyle.Selector.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v89 = (char *)&v88 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v92 = (char *)&v88 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v93 = (char *)&v88 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v100 = (char *)&v88 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v99 = (char *)&v88 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v103 = (char *)&v88 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v104 = (char *)&v88 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v106 = (char *)&v88 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v107 = (char *)&v88 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v109 = (char *)&v88 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v110 = (char *)&v88 - v24;
  MEMORY[0x1F4188790](v25);
  unint64_t v112 = (void (*)(char *, uint64_t, uint64_t))((char *)&v88 - v26);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v88 - v28;
  sub_1C08C3914();
  MEMORY[0x1F4188790](v30 - 8);
  unint64_t v32 = (char *)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = *(void *)v1;
  uint64_t v34 = *(void *)(v1 + 8);
  uint64_t v111 = *(void *)(v1 + 16);
  sub_1BFE99AAC(v1 + 24, (uint64_t)v117, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
  uint64_t v108 = *(void *)(v1 + 152);
  sub_1BFE99AAC(v1 + 160, (uint64_t)v116, &qword_1EB85B6E0, (uint64_t)&type metadata for FormatShadow);
  uint64_t v105 = *(void *)(v1 + 248);
  sub_1BFE99AAC(v1 + 256, (uint64_t)v115, (unint64_t *)&qword_1EB876CA0, (uint64_t)&type metadata for FormatParagraphStyle);
  uint64_t v102 = *(void *)(v1 + 456);
  int v101 = *(unsigned __int8 *)(v1 + 464);
  uint64_t v35 = *(void *)(v1 + 472);
  uint64_t v36 = *(void *)(v1 + 480);
  uint64_t v97 = *(void *)(v1 + 488);
  uint64_t v98 = v35;
  uint64_t v95 = *(void *)(v1 + 496);
  uint64_t v96 = v36;
  uint64_t v94 = *(void *)(v1 + 504);
  int v91 = *(unsigned __int8 *)(v1 + 512);
  uint64_t v90 = *(void *)(v1 + 520);
  uint64_t v37 = a1[3];
  uint64_t v38 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v37);
  sub_1C08C37E8();
  uint64_t v40 = v39;
  uint64_t v41 = sub_1C085F050(&qword_1EB891E30, (void (*)(uint64_t))sub_1C08C37E8);
  uint64_t v118 = v32;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatTextNodeStyle.Selector, v42, v37, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, v40, (uint64_t)&type metadata for FormatVersions.JazzkonC, v38, (uint64_t)v32, v41, (uint64_t)&off_1F1C39B68);
  uint64_t v43 = v34;
  uint64_t v44 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v44 != -1) {
    swift_once();
  }
  uint64_t v45 = sub_1C151928C();
  uint64_t v46 = __swift_project_value_buffer(v45, (uint64_t)qword_1EB93CAB0);
  uint64_t v47 = *(void *)(v45 - 8);
  char v48 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
  uint64_t v113 = v47 + 16;
  v48(v29, v46, v45);
  uint64_t v49 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v50 = v114;
  sub_1C06BC72C(v33, v43, 0, 0, 0, (uint64_t)v29, (uint64_t)sub_1C01B158C, 0);
  if (v50)
  {
    sub_1BFEFEB68((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v51 = (uint64_t)v118;
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v52 = v46;
    uint64_t v53 = (uint64_t)v112;
    uint64_t v88 = v52;
    ((void (*)(void (*)(char *, uint64_t, uint64_t)))v48)(v112);
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = v111;
    sub_1BFEF683C(v111);
    uint64_t v51 = (uint64_t)v118;
    sub_1C0711CA0(v54, 1, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v53, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68C0(v54);
    uint64_t v55 = v45;
    uint64_t v56 = (uint64_t)v110;
    uint64_t v57 = v88;
    v48(v110, v88, v55);
    swift_storeEnumTagMultiPayload();
    sub_1C090750C(v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
    sub_1C0711EF8(v117, 2, 0, 0, v56, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v56, type metadata accessor for FormatVersionRequirement);
    sub_1C090750C(v117, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
    uint64_t v58 = (uint64_t)v109;
    unint64_t v112 = v48;
    v48(v109, v57, v55);
    uint64_t v114 = v49;
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = swift_bridgeObjectRetain();
    sub_1C0712210(v59, 3, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v58, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v60 = (uint64_t)v107;
    uint64_t v61 = v88;
    unint64_t v62 = v112;
    v112(v107, v88, v55);
    swift_storeEnumTagMultiPayload();
    sub_1BFE99EB4((uint64_t)v116, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8708);
    sub_1C0712474((uint64_t)v116, 4, 0, 0, v60, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v60, type metadata accessor for FormatVersionRequirement);
    sub_1BFE99EB4((uint64_t)v116, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8738);
    uint64_t v63 = (uint64_t)v106;
    v62(v106, v61, v55);
    swift_storeEnumTagMultiPayload();
    uint64_t v64 = swift_bridgeObjectRetain();
    sub_1C07127A8(v64, 5, 0, 0, v63, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v63, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v65 = (uint64_t)v104;
    v62(v104, v61, v55);
    swift_storeEnumTagMultiPayload();
    sub_1C0712A0C((uint64_t)v115, 6, 0, 0, v65, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v65, type metadata accessor for FormatVersionRequirement);
    uint64_t v66 = (uint64_t)v103;
    v62(v103, v61, v55);
    swift_storeEnumTagMultiPayload();
    sub_1C0712CF0(v102, v101, 7, 0, 0, v66, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v66, type metadata accessor for FormatVersionRequirement);
    uint64_t v68 = qword_1EB887640;
    uint64_t v69 = v98;
    swift_bridgeObjectRetain();
    if (v68 != -1) {
      swift_once();
    }
    uint64_t v70 = __swift_project_value_buffer(v55, (uint64_t)qword_1EB93CAC8);
    uint64_t v71 = (uint64_t)v99;
    v62(v99, v70, v55);
    swift_storeEnumTagMultiPayload();
    sub_1C0712F10(v69, 8, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
    uint64_t v72 = (uint64_t)v100;
    uint64_t v111 = 0;
    sub_1BFEFEB68(v71, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v73 = v96;
    uint64_t v74 = v97;
    sub_1BFEF8720(v96, v97);
    if (qword_1EB887620 != -1) {
      swift_once();
    }
    uint64_t v75 = __swift_project_value_buffer(v55, (uint64_t)qword_1EB93CA50);
    v62((char *)v72, v75, v55);
    swift_storeEnumTagMultiPayload();
    uint64_t v76 = v111;
    sub_1C0713188(v73, v74, 9, 0, 0, v72, (uint64_t)sub_1C01B158C, 0);
    if (v76)
    {
      sub_1BFEFEB68(v72, type metadata accessor for FormatVersionRequirement);
      sub_1BFEF8750(v73, v74);
    }
    else
    {
      uint64_t v77 = v62;
      uint64_t v78 = v55;
      sub_1BFEFEB68(v72, type metadata accessor for FormatVersionRequirement);
      sub_1BFEF8750(v73, v74);
      sub_1BFEF8720(v95, v94);
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v79 = __swift_project_value_buffer(v55, (uint64_t)qword_1EB93CA98);
      uint64_t v80 = (uint64_t)v93;
      v77(v93, v79, v55);
      swift_storeEnumTagMultiPayload();
      uint64_t v82 = v94;
      uint64_t v81 = v95;
      sub_1C0713188(v95, v94, 10, 0, 0, v80, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68(v80, type metadata accessor for FormatVersionRequirement);
      sub_1BFEF8750(v81, v82);
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      uint64_t v83 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CA08);
      uint64_t v84 = (uint64_t)v92;
      v77(v92, v83, v78);
      swift_storeEnumTagMultiPayload();
      sub_1C07133E8(v91, 11, 0, 0, v84, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68(v84, type metadata accessor for FormatVersionRequirement);
      uint64_t v85 = qword_1EB887668;
      swift_bridgeObjectRetain();
      if (v85 != -1) {
        swift_once();
      }
      uint64_t v86 = __swift_project_value_buffer(v78, (uint64_t)qword_1EB93CB10);
      uint64_t v87 = (uint64_t)v89;
      v77(v89, v86, v78);
      swift_storeEnumTagMultiPayload();
      uint64_t v51 = (uint64_t)v118;
      sub_1C0712F10(v90, 12, 0, 0, v87, (uint64_t)sub_1C01B158C, 0);
      sub_1BFEFEB68(v87, type metadata accessor for FormatVersionRequirement);
      swift_bridgeObjectRelease();
    }
  }
  return sub_1BFEFEB68(v51, (uint64_t (*)(void))sub_1C08C3914);
}

unint64_t sub_1BFE797F8()
{
  return sub_1C077F1B4(*v0);
}

unint64_t sub_1BFE79800()
{
  return sub_1C07DF4D0(*v0);
}

unint64_t sub_1BFE79808()
{
  unint64_t result = qword_1EB85FD70;
  if (!qword_1EB85FD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FD70);
  }
  return result;
}

unint64_t sub_1BFE7985C()
{
  unint64_t result = qword_1EB85B550;
  if (!qword_1EB85B550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B550);
  }
  return result;
}

unint64_t sub_1BFE798B0()
{
  unint64_t result = qword_1EB85BB98;
  if (!qword_1EB85BB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85BB98);
  }
  return result;
}

unint64_t sub_1BFE79904()
{
  unint64_t result = qword_1EB85FED0;
  if (!qword_1EB85FED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85FED0);
  }
  return result;
}

uint64_t FormatImageNodeStyle.__deallocating_deinit()
{
  FormatImageNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatImageNodeStyle.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF68C0(*(void *)(v0 + 72));
  swift_bridgeObjectRelease();
  sub_1BFEF68AC(*(void *)(v0 + 96), *(void *)(v0 + 104), *(unsigned char *)(v0 + 112));
  sub_1BFEF68D8(*(void *)(v0 + 120));
  sub_1BFEF8738(*(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160), *(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(unsigned char *)(v0 + 216));
  sub_1BFDC11BC(*(void *)(v0 + 224));
  sub_1BFEF68E8(*(void *)(v0 + 240));
  sub_1BFE79A60(v0 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask);
  return v0;
}

uint64_t sub_1BFE79A60(uint64_t a1)
{
  sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BFE79AD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE79B2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE79B90(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE79BF4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE79C58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE79CBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE79D20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE79D74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE79DD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE79E3C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE79E90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE79EE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1BFE79F38@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatSelectorValue.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t FormatSelectorValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v64 = a3;
  uint64_t v56 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v63 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v58 = v6;
  uint64_t v59 = (char *)&v49 - v7;
  uint64_t v57 = v8;
  uint64_t v9 = _s10CodingKeysOMa_237();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = swift_getWitnessTable();
  *(void *)&long long v65 = v9;
  *((void *)&v65 + 1) = WitnessTable;
  uint64_t v54 = v11;
  uint64_t v55 = WitnessTable;
  uint64_t v66 = v11;
  uint64_t v67 = v12;
  uint64_t v13 = type metadata accessor for FormatCodingKeysContainer();
  swift_getWitnessTable();
  uint64_t v14 = sub_1C152072C();
  uint64_t v60 = *(void *)(v14 - 8);
  uint64_t v61 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v49 - v15;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v17 = v62;
  sub_1C1520EBC();
  uint64_t v18 = v17;
  if (v17) {
    goto LABEL_15;
  }
  uint64_t v51 = v9;
  uint64_t v52 = v13;
  uint64_t v50 = v12;
  uint64_t v53 = 0;
  unint64_t v62 = v16;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v19 = sub_1C1520EAC();
  char v20 = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t)v63;
  uint64_t v21 = v64;
  uint64_t v23 = v60;
  uint64_t v24 = v57;
  if ((v20 & 1) == 0)
  {
LABEL_11:
    long long v65 = 0uLL;
    LOBYTE(v66) = 0;
    uint64_t v38 = v62;
    uint64_t v39 = v53;
    sub_1C15206EC();
    if (!v39)
    {
      type metadata accessor for FormatSelectorValueSelector();
      sub_1C151ED5C();
      swift_getWitnessTable();
      uint64_t v40 = v24;
      swift_getWitnessTable();
      uint64_t v41 = type metadata accessor for FormatCodingEmptyArrayStrategy();
      long long v65 = xmmword_1C153AB20;
      LOBYTE(v66) = 0;
      uint64_t v42 = swift_getWitnessTable();
      uint64_t v43 = v61;
      sub_1BFE7A5A8(v41, v42, (uint64_t)&v68);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v43);
      uint64_t v48 = v68;
      (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v22, v59, v40);
      FormatSelectorValue.init(value:selectors:)(v22, v48, v40, v21);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v38, v61);
    uint64_t v18 = v39;
LABEL_15:
    sub_1C0038728(v3, (uint64_t)v18);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  uint64_t v25 = sub_1C152070C();
  if (!MEMORY[0x1C18C6870](v25, v52))
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v49 = v3;
  uint64_t v26 = 0;
  uint64_t v27 = (char *)(v25 + 48);
  uint64_t v28 = v52;
  while (1)
  {
    char v29 = sub_1C151ECDC();
    uint64_t result = sub_1C151EC7C();
    if ((v29 & 1) == 0) {
      break;
    }
    uint64_t v31 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      goto LABEL_18;
    }
    uint64_t v33 = *((void *)v27 - 2);
    uint64_t v32 = *((void *)v27 - 1);
    char v34 = *v27;
    *(void *)&long long v65 = v33;
    *((void *)&v65 + 1) = v32;
    LOBYTE(v66) = v34;
    sub_1BFE94AB4(v33, v32, v34);
    uint64_t v35 = sub_1C0D990EC(v28);
    if (v36)
    {
      uint64_t v44 = v36;
      uint64_t v45 = v35;
      swift_bridgeObjectRelease();
      uint64_t v46 = sub_1C0D98F50(v51, v55, v54, v50);
      sub_1C02570B4();
      uint64_t v18 = (void *)swift_allocError();
      *(void *)uint64_t v47 = v45;
      *(void *)(v47 + 8) = v44;
      *(void *)(v47 + 16) = v46;
      *(_OWORD *)(v47 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v65, *((uint64_t *)&v65 + 1), v66);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v61);
      uint64_t v3 = v49;
      goto LABEL_15;
    }
    sub_1BFE94AD4(v33, v32, v34);
    uint64_t v37 = MEMORY[0x1C18C6870](v25, v28);
    ++v26;
    v27 += 24;
    uint64_t v22 = (uint64_t)v63;
    uint64_t v21 = v64;
    if (v31 == v37)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v49;
      uint64_t v24 = v57;
      uint64_t v23 = v60;
      goto LABEL_11;
    }
  }
  uint64_t result = sub_1C152016C();
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatSelectorValueSelector()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FormatCodingEmptyArrayStrategy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFE7A5A8@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  return static FormatCodingDefaultStrategy.decodeOrDefault<A>(from:forKey:)(a1, a2, a3);
}

uint64_t static FormatCodingDefaultStrategy.decodeOrDefault<A>(from:forKey:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  sub_1C152072C();
  char v6 = sub_1C152071C();
  uint64_t v7 = *(void *)(a2 + 8);
  if (v6) {
    return static FormatCodingStrategy.decode<A>(from:forKey:)(a1, v7, a3);
  }
  else {
    return (*(uint64_t (**)(uint64_t, void))(v7 + 64))(a1, *(void *)(a2 + 8));
  }
}

uint64_t _s10CodingKeysOMa_237()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatSelectorValue.init(value:selectors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = type metadata accessor for FormatSelectorValue();
  return sub_1BFE7A774(a2, a4 + *(int *)(v6 + 36));
}

uint64_t type metadata accessor for FormatSelectorValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFE7A774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1;
  type metadata accessor for FormatSelectorValueSelector();
  swift_getWitnessTable();
  swift_getWitnessTable();
  type metadata accessor for FormatCodingEmptyArrayStrategy();
  swift_getWitnessTable();
  return FormatCodingDefault.init(wrappedValue:)((uint64_t)&v4, a2);
}

uint64_t FormatCodingDefault.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
  return v5(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_1BFE7A8BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static FormatCodingEmptyArrayStrategy.defaultValue.getter();
  *a1 = result;
  return result;
}

uint64_t static FormatCodingEmptyArrayStrategy.defaultValue.getter()
{
  return sub_1C151ECBC();
}

uint64_t static FormatCodingStrategy.decode<A>(from:forKey:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  v11[1] = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[0] = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v7 = (char *)v11 - v6;
  sub_1C152072C();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = v11[3];
  uint64_t result = sub_1C15206EC();
  if (!v8)
  {
    uint64_t v10 = v11[0];
    (*(void (**)(char *, uint64_t, uint64_t))(a2 + 88))(v7, a1, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, AssociatedTypeWitness);
  }
  return result;
}

void sub_1BFE7AA84(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BFE7AA90@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BFE7AABC(a1, a2, (uint64_t (*)(uint64_t, void, void, void))static FormatCodingEmptyArrayStrategy.decode(rawValue:), a3);
}

uint64_t sub_1BFE7AABC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t (*a3)(uint64_t, void, void, void)@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result = a3(a1, a2[2], a2[3], a2[4]);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t static FormatCodingEmptyArrayStrategy.decode(rawValue:)()
{
  return sub_1BFE7AB14();
}

uint64_t sub_1BFE7AB14()
{
  return sub_1C1517E5C();
}

uint64_t sub_1BFE7AB48@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1BFE7AB60(a1, a2);
}

uint64_t sub_1BFE7AB60@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFE7AB84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = static FormatCodingEmptySetStrategy.defaultValue.getter(*(void *)(a1 + 16), a2, a3, a4, *(void *)(a1 + 48));
  *a5 = result;
  return result;
}

uint64_t _s8NewsFeed28FormatCodingEmptySetStrategyV12defaultValueShyxGvgZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_1C151ECBC();
  if (MEMORY[0x1C18C6880](v7, a1)) {
    uint64_t v8 = sub_1C0AC5778(v7, a1, a5);
  }
  else {
    uint64_t v8 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  return v8;
}

void sub_1BFE7AC30(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t destroy for InternalErrorViewLayout()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BFE7ACA4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return FormatValue.init(from:)(a1, *(void *)(a2 + 16), a3);
}

uint64_t FormatValue.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v60 = a3;
  uint64_t v54 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v61 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v55 = v6;
  uint64_t v56 = (char *)&v46 - v7;
  uint64_t v59 = v8;
  uint64_t v9 = _s10CodingKeysOMa_9();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = swift_getWitnessTable();
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v62 = v9;
  uint64_t v63 = WitnessTable;
  uint64_t v52 = v12;
  uint64_t v53 = v11;
  uint64_t v64 = v11;
  uint64_t v65 = v12;
  uint64_t v13 = type metadata accessor for FormatCodingKeysContainer();
  swift_getWitnessTable();
  uint64_t v14 = sub_1C152072C();
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v58 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v46 - v15;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v17 = (void *)v66;
  sub_1C1520EBC();
  uint64_t v18 = v17;
  if (v17) {
    goto LABEL_15;
  }
  uint64_t v66 = v13;
  uint64_t v49 = v9;
  uint64_t v50 = 0;
  uint64_t v48 = WitnessTable;
  uint64_t v51 = v16;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  uint64_t v19 = sub_1C1520EAC();
  char v20 = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = v60;
  uint64_t v22 = (uint64_t)v61;
  uint64_t v23 = v56;
  uint64_t v24 = v57;
  uint64_t v25 = v58;
  if ((v20 & 1) == 0)
  {
LABEL_11:
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    LOBYTE(v64) = 0;
    uint64_t v39 = v55;
    uint64_t v40 = v50;
    uint64_t v41 = v51;
    sub_1C15206EC();
    if (!v40)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v41, v25);
      (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v22, v23, v39);
      FormatValue.init(value:)(v22, v39, v21);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v41, v25);
    uint64_t v18 = v40;
LABEL_15:
    sub_1C0038728(v3, (uint64_t)v18);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  uint64_t v26 = sub_1C152070C();
  uint64_t v27 = v66;
  if (!MEMORY[0x1C18C6870](v26, v66))
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v47 = v3;
  uint64_t v28 = 0;
  char v29 = (char *)(v26 + 48);
  while (1)
  {
    char v30 = sub_1C151ECDC();
    uint64_t result = sub_1C151EC7C();
    if ((v30 & 1) == 0) {
      break;
    }
    if (__OFADD__(v28, 1)) {
      goto LABEL_18;
    }
    uint64_t v66 = v28 + 1;
    uint64_t v32 = v26;
    uint64_t v34 = *((void *)v29 - 2);
    uint64_t v33 = *((void *)v29 - 1);
    char v35 = *v29;
    uint64_t v62 = v34;
    uint64_t v63 = v33;
    LOBYTE(v64) = v35;
    sub_1BFE94AB4(v34, v33, v35);
    uint64_t v36 = sub_1C0D990EC(v27);
    if (v37)
    {
      uint64_t v42 = v36;
      uint64_t v43 = v37;
      swift_bridgeObjectRelease();
      uint64_t v44 = sub_1C0D98F50(v49, v48, v53, v52);
      sub_1C02570B4();
      uint64_t v18 = (void *)swift_allocError();
      *(void *)uint64_t v45 = v42;
      *(void *)(v45 + 8) = v43;
      *(void *)(v45 + 16) = v44;
      *(_OWORD *)(v45 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v62, v63, v64);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v58);
      uint64_t v3 = v47;
      goto LABEL_15;
    }
    sub_1BFE94AD4(v34, v33, v35);
    uint64_t v26 = v32;
    uint64_t v38 = MEMORY[0x1C18C6870](v32, v27);
    ++v28;
    v29 += 24;
    uint64_t v21 = v60;
    uint64_t v22 = (uint64_t)v61;
    if (v66 == v38)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v47;
      uint64_t v25 = v58;
      uint64_t v23 = v56;
      uint64_t v24 = v57;
      goto LABEL_11;
    }
  }
  uint64_t result = sub_1C152016C();
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t _s10CodingKeysOMa_9()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FormatValue.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1BFE7B20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BFEFC838(a1, a2, a5);
}

void *initializeWithCopy for InternalErrorViewLayout(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for FormatMicaData() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 52) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v3 = v0 + v2 + v1[7];
  uint64_t v4 = sub_1C151A8EC();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  return swift_deallocObject();
}

uint64_t objectdestroy_14Tm_0()
{
  sub_1BFF05CCC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t objectdestroy_14Tm_1()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v1 = type metadata accessor for FeedPuzzleStatistic();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  if (*(void *)(v2 + 32) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + *(int *)(v1 + 32);
  swift_unknownObjectRelease();
  uint64_t v4 = v3 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  type metadata accessor for PuzzleStatisticCategory(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for PuzzleStatisticValue(0);
      goto LABEL_14;
    case 1u:
      type metadata accessor for PuzzleStatisticValue(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
      {
        uint64_t v6 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6))
        {
          uint64_t v7 = sub_1C151555C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
        }
      }
      uint64_t v8 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v9 = v4 + *(int *)(v8 + 20);
      int v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 5 || v10 == 4)
      {
        uint64_t v11 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11))
        {
          uint64_t v12 = sub_1C151555C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v9, v12);
        }
      }
      v4 += *(int *)(v8 + 24);
LABEL_14:
      int v13 = swift_getEnumCaseMultiPayload();
      if (v13 == 5 || v13 == 4)
      {
        uint64_t v14 = type metadata accessor for PuzzleStreak();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v4, 1, v14)) {
          goto LABEL_25;
        }
      }
      break;
    case 2u:
      uint64_t v15 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v4, 1, v15))
      {
        uint64_t v16 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v4, v16);
        uint64_t v17 = type metadata accessor for PuzzleLeaderboardEntry();
        swift_bridgeObjectRelease();
        uint64_t v18 = v4 + *(int *)(v17 + 24);
        swift_bridgeObjectRelease();
        unint64_t v19 = *(void *)(v18 + 24);
        if (v19 >> 60 != 15) {
          sub_1BFE95664(*(void *)(v18 + 16), v19);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      break;
    case 3u:
      uint64_t v20 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v21 = v4 + *(int *)(v20 + 24);
      uint64_t v22 = type metadata accessor for PuzzleStreak();
      uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
      if (!v23(v21, 1, v22))
      {
        uint64_t v24 = sub_1C151555C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v21, v24);
      }
      v4 += *(int *)(v20 + 28);
      if (!v23(v4, 1, v22))
      {
LABEL_25:
        uint64_t v25 = sub_1C151555C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v4, v25);
      }
      break;
    default:
      break;
  }
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_1()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_2()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_3()
{
  swift_release();
  sub_1C0D0965C(v0[4], v0[5], v0[6], v0[7]);
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_5()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_6()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t objectdestroyTm()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v1 = (int *)(type metadata accessor for WebEmbedDataVisualizationDataRequest(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[8];
  uint64_t v4 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v1 = sub_1C151D4AC();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = (*(void *)(v2 + 64) + v4 + v5) & ~v4;
  v3(v0 + v5, v1);
  v3(v0 + v6, v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_5(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_6()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_7()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for FeedItemFilter() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_10Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_144Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_9()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_4087Tm()
{
  if (*(void *)(v0 + 24) >= 4uLL) {
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_10()
{
  uint64_t v1 = (int *)type metadata accessor for FeedHeadline(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v3 = v1[10];
  uint64_t v4 = v2 + v3 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  uint64_t v5 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);

    uint64_t v7 = v4 + *(int *)(v5 + 28);
    uint64_t v8 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = v2 + v1[11];
  uint64_t v10 = sub_1C151D2DC();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  if (*(void *)(v2 + v1[12] + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v2 + v1[13]) >= 3uLL) {
    swift_unknownObjectRelease();
  }

  return swift_deallocObject();
}

uint64_t objectdestroyTm_11()
{
  sub_1BFF2E6FC(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  uint64_t v3 = sub_1C1515FDC();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }
  return swift_deallocObject();
}

uint64_t objectdestroy_7Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_12(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_13()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_14()
{
  uint64_t v1 = (int *)(type metadata accessor for DebugGroupLayoutKey() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + v2 + 16);
  unint64_t v3 = v0 + v2 + v1[8];
  __swift_destroy_boxed_opaque_existential_1(v3 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = v3 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
  uint64_t v5 = sub_1C151787C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v6 = v0 + v2 + v1[9];
  uint64_t v7 = sub_1C151772C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  unint64_t v9 = v6 + *(int *)(v8 + 20);
  uint64_t v10 = sub_1C151757C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  unint64_t v11 = v6 + *(int *)(v8 + 24);
  if (*(void *)(v11 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v12 = v11 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v13 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    uint64_t v14 = sub_1C151B62C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_15(void (*a1)(void))
{
  swift_bridgeObjectRelease();
  a1(*(void *)(v1 + 24));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_16()
{
  uint64_t v1 = sub_1C151B62C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_17()
{
  uint64_t v1 = sub_1C151A17C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_18()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_19()
{
  swift_release();
  sub_1C0D095F8(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_20()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v0 + 144) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_21()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);

  return swift_deallocObject();
}

uint64_t objectdestroyTm_22()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_23()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroyTm_24()
{
  uint64_t v1 = type metadata accessor for GroupLayoutContext();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = sub_1C151772C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  unint64_t v4 = v0 + v2 + *(int *)(v1 + 20);
  uint64_t v5 = sub_1C151757C();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unint64_t v6 = v0 + v2 + *(int *)(v1 + 24);
  if (*(void *)(v6 + 24) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  unint64_t v7 = v6 + *(int *)(type metadata accessor for FeedLayoutSolverOptions(0) + 36);
  uint64_t v8 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = sub_1C151B62C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_16Tm()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(void *)(v0 + 136)) {
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
    }
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_25()
{
  return swift_deallocObject();
}

uint64_t objectdestroyTm_26()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_27()
{
  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_28()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_29()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t objectdestroyTm_30()
{
  uint64_t v1 = (int *)(type metadata accessor for DebugTaxtAttachementList() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_bridgeObjectRelease();
  unint64_t v3 = v0 + v2 + v1[7];
  sub_1C133D1A8(0, (unint64_t *)&qword_1EA1A9230, MEMORY[0x1E4F3C648]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1C151DC7C();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t objectdestroyTm_31()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

unint64_t destroy for FeedItem.Kind(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFE7D3A8@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return FormatFloat.init(from:)(a1, a2);
}

uint64_t FormatFloat.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3 = v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v85, v86);
    sub_1BFE7E344();
    sub_1C1520AEC();
    unint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v83;
LABEL_20:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
    *a2 = v8;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520E9C();
  __swift_project_boxed_opaque_existential_1(v85, v86);
  uint64_t v6 = sub_1C1520ABC();
  uint64_t v9 = v6;
  unint64_t v10 = v7;
  uint64_t v82 = a2;
  MEMORY[0x1F4188790](v6);
  if ((v12 & 0x1000000000000000) != 0 || !(v10 & 0x2000000000000000 | v9 & 0x1000000000000000))
  {
    swift_bridgeObjectRetain();
    sub_1C15200CC();
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  MEMORY[0x1F4188790](v11);
  if ((v10 & 0x2000000000000000) == 0)
  {
    if ((v9 & 0x1000000000000000) != 0)
    {
      uint64_t v13 = (v10 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v14 = v9 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v13 = sub_1C152020C();
      uint64_t v14 = v74;
    }
    swift_bridgeObjectRetain();
    char v84 = sub_1C02D3A68(v13, v14, (void (*)(uint64_t *__return_ptr))sub_1C02D3C34) & 1;
    goto LABEL_12;
  }
  switch((char)v9)
  {
    case 0:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 32:
      swift_bridgeObjectRetain();
      goto LABEL_15;
    default:
      swift_bridgeObjectRetain();
      uint64_t v51 = (unsigned char *)_swift_stdlib_strtof_clocale();
      if (v51) {
        BOOL v15 = *v51 == 0;
      }
      else {
LABEL_15:
      }
        BOOL v15 = 0;
      char v84 = v15;
      swift_bridgeObjectRelease();
      break;
  }
LABEL_17:
  if (v84)
  {
    swift_bridgeObjectRelease();

    unint64_t v8 = swift_allocObject();
    *(double *)(v8 + 16) = 0.0;
LABEL_19:
    a2 = v82;
    goto LABEL_20;
  }
  type metadata accessor for FormatLayoutError();
  sub_1BFE7E51C();
  uint64_t v17 = swift_allocError();
  *uint64_t v18 = v9;
  v18[1] = v10;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1BFE7E4D4(v9, v10);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v21)
  {
    if (v19 == 36 && v21 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_27:
      unint64_t v23 = sub_1C029748C(1uLL, v9, v10);
      uint64_t v25 = v24;
      uint64_t v27 = v26;
      uint64_t v29 = v28;
      swift_bridgeObjectRelease();
      MEMORY[0x1C18C6220](v23, v25, v27, v29);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      uint64_t v9 = 0x286E6F6974706FLL;
      unint64_t v10 = 0xE700000000000000;
      goto LABEL_28;
    }
    char v22 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_28:
  swift_bridgeObjectRetain();
  sub_1BFE7E3E4(40, 0xE100000000000000, v9, v10);
  char v31 = v30;
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1BFE7E574(v9, v10);
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  if (!v34) {
    goto LABEL_38;
  }
  if (v32 != 41 || v34 != 0xE100000000000000)
  {
    char v35 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_34;
    }
LABEL_38:
    swift_allocError();
    *uint64_t v49 = v9;
    v49[1] = v10;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    uint64_t v50 = (void *)v17;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
LABEL_34:
  uint64_t v81 = (void *)v17;
  swift_bridgeObjectRetain();
  uint64_t v36 = sub_1C151E8EC();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  swift_bridgeObjectRelease();
  uint64_t v43 = MEMORY[0x1C18C6220](v36, v38, v40, v42);
  uint64_t v45 = v44;
  swift_bridgeObjectRelease();
  unint64_t v46 = sub_1C151E7BC();
  if ((unint64_t)sub_1C151E7CC() >> 14 < v46 >> 14)
  {
    __break(1u);
    goto LABEL_96;
  }
  uint64_t v47 = sub_1C151E8EC();
  uint64_t v80 = MEMORY[0x1C18C6220](v47);
  unint64_t v46 = v48;
  swift_bridgeObjectRelease();
  if (v43 == 0x746E696F70 && v45 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v52 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v52);
    uint64_t v43 = v80;
    if ((v46 & 0x1000000000000000) != 0 || !(v46 & 0x2000000000000000 | v80 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_1C15200CC();
      goto LABEL_48;
    }
    MEMORY[0x1F4188790](v53);
    if ((v46 & 0x2000000000000000) != 0)
    {
      switch((char)v80)
      {
        case 0:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 32:
          swift_bridgeObjectRetain();
          goto LABEL_51;
        default:
          swift_bridgeObjectRetain();
          uint64_t v64 = (unsigned char *)_swift_stdlib_strtof_clocale();
          if (v64) {
            BOOL v56 = *v64 == 0;
          }
          else {
LABEL_51:
          }
            BOOL v56 = 0;
          char v84 = v56;
          swift_bridgeObjectRelease();
          break;
      }
LABEL_53:
      unint64_t v8 = swift_allocObject();
      if (v84)
      {

        swift_bridgeObjectRelease();
        *(double *)(v8 + 16) = 0.0;
        goto LABEL_19;
      }
      goto LABEL_71;
    }
    if ((v80 & 0x1000000000000000) != 0)
    {
      uint64_t v54 = (v46 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v55 = v80 & 0xFFFFFFFFFFFFLL;
LABEL_47:
      swift_bridgeObjectRetain();
      char v84 = sub_1C02D3A68(v54, v55, (void (*)(uint64_t *__return_ptr))sub_1C02D3C34) & 1;
LABEL_48:
      swift_bridgeObjectRelease();
      goto LABEL_53;
    }
LABEL_96:
    uint64_t v54 = sub_1C152020C();
    uint64_t v55 = v78;
    goto LABEL_47;
  }
  if (v43 == 0x6C65786970 && v45 == 0xE500000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v57 = swift_bridgeObjectRelease();
    MEMORY[0x1F4188790](v57);
    uint64_t v43 = v80;
    if ((v46 & 0x1000000000000000) != 0 || !(v46 & 0x2000000000000000 | v80 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_1C15200CC();
    }
    else
    {
      MEMORY[0x1F4188790](v58);
      if ((v46 & 0x2000000000000000) != 0)
      {
        switch((char)v80)
        {
          case 0:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
            swift_bridgeObjectRetain();
            goto LABEL_67;
          default:
            swift_bridgeObjectRetain();
            uint64_t v69 = (unsigned char *)_swift_stdlib_strtof_clocale();
            if (v69) {
              BOOL v61 = *v69 == 0;
            }
            else {
LABEL_67:
            }
              BOOL v61 = 0;
            char v84 = v61;
            swift_bridgeObjectRelease();
            break;
        }
LABEL_69:
        uint64_t v62 = swift_allocObject();
        if (v84)
        {

          swift_bridgeObjectRelease();
          *(double *)(v62 + 16) = 0.0;
          unint64_t v8 = v62 | 0x2000000000000000;
          goto LABEL_19;
        }
LABEL_71:
        swift_allocError();
        *uint64_t v63 = v43;
        v63[1] = v46;
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_willThrow();

        swift_bridgeObjectRelease();
        swift_deallocUninitializedObject();
        goto LABEL_5;
      }
      if ((v80 & 0x1000000000000000) != 0)
      {
        uint64_t v59 = (v46 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v60 = v80 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v59 = sub_1C152020C();
        uint64_t v60 = v79;
      }
      swift_bridgeObjectRetain();
      char v84 = sub_1C02D3A68(v59, v60, (void (*)(uint64_t *__return_ptr))sub_1C02D3C34) & 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_69;
  }
  if (v43 == 0x64656C616373 && v45 == 0xE600000000000000 || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    uint64_t v65 = sub_1C02D2A68(0x22uLL, 0xE100000000000000);
    unint64_t v67 = v66;
    sub_1C1517DCC();
    swift_allocObject();
    sub_1C1517DBC();
    uint64_t v68 = swift_allocObject();
    sub_1BFDFBE94();
    sub_1C1517D9C();

    swift_release();
    sub_1BFE95664(v65, v67);

    unint64_t v8 = v68 | 0x4000000000000000;
    goto LABEL_19;
  }
  if (v43 == 0x6163736E5563616DLL && v45 == 0xEB0000000064656CLL || (sub_1C1520A9C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    uint64_t v70 = sub_1C02D2A68(0x22uLL, 0xE100000000000000);
    unint64_t v72 = v71;
    sub_1C1517DCC();
    swift_allocObject();
    sub_1C1517DBC();
    uint64_t v73 = swift_allocObject();
    sub_1BFDFBE94();
    sub_1C1517D9C();

    swift_release();
    sub_1BFE95664(v70, v72);

    unint64_t v8 = v73 | 0x6000000000000000;
    goto LABEL_19;
  }
  if (v43 == 0x6E6F6974706FLL && v45 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_92:
    swift_bridgeObjectRelease();

    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = v80;
    *(void *)(v76 + 24) = v46;
    unint64_t v8 = v76 | 0x8000000000000000;
    goto LABEL_19;
  }
  char v75 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  if (v75) {
    goto LABEL_92;
  }
  swift_bridgeObjectRelease();
  swift_allocError();
  *uint64_t v77 = v9;
  v77[1] = v10;
  swift_storeEnumTagMultiPayload();
  swift_willThrow();

  uint64_t v50 = v81;
LABEL_4:

LABEL_5:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFE7E344()
{
  unint64_t result = qword_1EB8713B0;
  if (!qword_1EB8713B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8713B0);
  }
  return result;
}

uint64_t type metadata accessor for FormatLayoutError()
{
  uint64_t result = qword_1EB8756A0;
  if (!qword_1EB8756A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1BFE7E3E4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_1C151E8BC() != a1 || v9 != a2)
  {
    char v10 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_1C151E7BC();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BFE7E4D4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_1C151E8BC();
  }
  else {
    return 0;
  }
}

unint64_t sub_1BFE7E51C()
{
  unint64_t result = qword_1EB875690;
  if (!qword_1EB875690)
  {
    type metadata accessor for FormatLayoutError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875690);
  }
  return result;
}

uint64_t sub_1BFE7E574(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  sub_1C151E7CC();
  return sub_1C151E8BC();
}

uint64_t sub_1BFE7E5F4(void *a1)
{
  return FormatViewNodeStyle.encode(to:)(a1);
}

uint64_t FormatViewNodeStyle.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v73 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v74 = (char *)&v72 - v8;
  MEMORY[0x1F4188790](v9);
  char v75 = (char *)&v72 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v76 = (char *)&v72 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v77 = (char *)&v72 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v78 = (char *)&v72 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v79 = (char *)&v72 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v80 = (char *)&v72 - v20;
  MEMORY[0x1F4188790](v21);
  unint64_t v23 = (char *)&v72 - v22;
  sub_1C08CB8D8();
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1C08CBA00();
  uint64_t v30 = v29;
  uint64_t v31 = sub_1C085F050(&qword_1EB891E40, (void (*)(uint64_t))sub_1C08CBA00);
  sub_1BFEFBD78(v4, v32, v28, v4, v30, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v26, v31, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v33 = v2[2];
  uint64_t v34 = v2[3];
  char v35 = v2;
  uint64_t v36 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v36 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_1C151928C();
  uint64_t v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1EB93CAB0);
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v40 = *(void (**)(char *))(v39 + 16);
  uint64_t v41 = (char *)(v39 + 16);
  uint64_t v81 = v38;
  v40(v23);
  uint64_t v42 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v83;
  sub_1C06D198C(v33, v34, 0, 0, 0, (uint64_t)v23, (uint64_t)sub_1C01B158C, 0);
  if (v43)
  {
    sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v83 = v26;
    uint64_t v44 = v35;
    uint64_t v45 = v35[4];
    uint64_t v46 = v44[5];
    uint64_t v47 = (uint64_t)v80;
    ((void (*)(char *, uint64_t, uint64_t))v40)(v80, v81, v37);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1C06BC26C(v45, v46, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v47, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v48 = (uint64_t)v79;
    ((void (*)(char *, uint64_t, uint64_t))v40)(v79, v81, v37);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = swift_bridgeObjectRetain();
    sub_1C06D1BCC(v49, 2, 0, 0);
    uint64_t v72 = v37;
    uint64_t v80 = (char *)v42;
    sub_1BFEFEB68(v48, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v51 = v44[7];
    uint64_t v52 = qword_1EB887640;
    swift_bridgeObjectRetain();
    if (v52 != -1) {
      swift_once();
    }
    uint64_t v53 = v72;
    uint64_t v54 = __swift_project_value_buffer(v72, (uint64_t)qword_1EB93CAC8);
    uint64_t v55 = (uint64_t)v78;
    ((void (*)(char *, uint64_t, uint64_t))v40)(v78, v54, v53);
    uint64_t v79 = v41;
    swift_storeEnumTagMultiPayload();
    sub_1C070E534(v51, 3, 0, 0, v55, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v55, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v56 = v44[8];
    uint64_t v57 = (uint64_t)v77;
    uint64_t v58 = v81;
    ((void (*)(char *, uint64_t, uint64_t))v40)(v77, v81, v53);
    swift_storeEnumTagMultiPayload();
    sub_1BFEF683C(v56);
    sub_1C070E7AC(v56, 4, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
    uint64_t v59 = v53;
    sub_1BFEFEB68(v57, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68C0(v56);
    uint64_t v60 = (uint64_t)v76;
    ((void (*)(char *, uint64_t, uint64_t))v40)(v76, v58, v59);
    swift_storeEnumTagMultiPayload();
    uint64_t v61 = swift_bridgeObjectRetain();
    sub_1C070EA04(v61, 5, 0, 0, v60, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v60, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v62 = (char *)v44;
    uint64_t v63 = v44[10];
    uint64_t v64 = v44[11];
    uint64_t v65 = v58;
    LOBYTE(v58) = v62[96];
    uint64_t v66 = (uint64_t)v75;
    uint64_t v78 = v62;
    ((void (*)(char *, uint64_t, uint64_t))v40)(v75, v65, v72);
    swift_storeEnumTagMultiPayload();
    sub_1BFEF6828(v63, v64, v58);
    sub_1C070EC68(v63, v64, v58, 6, 0, 0, v66, (uint64_t)sub_1C01B158C);
    sub_1BFEFEB68(v66, type metadata accessor for FormatVersionRequirement);
    uint64_t v26 = v83;
    sub_1BFEF68AC(v63, v64, v58);
    sub_1BFE99AAC((uint64_t)(v78 + 104), (uint64_t)v82, &qword_1EB85B6E0, (uint64_t)&type metadata for FormatShadow);
    uint64_t v67 = (uint64_t)v74;
    ((void (*)(char *, uint64_t, uint64_t))v40)(v74, v65, v72);
    swift_storeEnumTagMultiPayload();
    sub_1BFE99EB4((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8708);
    sub_1C070EEDC((uint64_t)v82, 7, 0, 0, v67, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v67, type metadata accessor for FormatVersionRequirement);
    sub_1BFE99EB4((uint64_t)v82, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8738);
    unsigned __int8 v68 = v78[185];
    if (qword_1EB887600 != -1) {
      swift_once();
    }
    uint64_t v69 = v72;
    uint64_t v70 = __swift_project_value_buffer(v72, (uint64_t)qword_1EB93CA08);
    uint64_t v71 = (uint64_t)v73;
    ((void (*)(char *, uint64_t, uint64_t))v40)(v73, v70, v69);
    swift_storeEnumTagMultiPayload();
    sub_1C070F210(v68, 8, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v71, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BFEFEB68((uint64_t)v26, (uint64_t (*)(void))sub_1C08CB8D8);
}

unint64_t sub_1BFE7F0FC()
{
  unint64_t result = qword_1EB85B850;
  if (!qword_1EB85B850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85B850);
  }
  return result;
}

uint64_t sub_1BFE7F150(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  char v75 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v74 = (char *)&v73 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v76 = (char *)&v73 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v77 = (char *)&v73 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v79 = (char *)&v73 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v80 = (char *)&v73 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v81 = (uint64_t *)((char *)&v73 - v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v82 = (char *)&v73 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v73 - v21;
  sub_1C08E7570();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BFF719C0();
  uint64_t v29 = v28;
  sub_1C08E7698();
  uint64_t v31 = v30;
  uint64_t v32 = sub_1BFF8784C(&qword_1EB892380, (void (*)(uint64_t))sub_1C08E7698);
  uint64_t v78 = (int *)v29;
  sub_1BFEFBD78(v29, v33, v26, v29, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v32, (uint64_t)&off_1F1C39B68);
  uint64_t v34 = *v2;
  uint64_t v35 = v2[1];
  uint64_t v36 = v2;
  uint64_t v37 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void *)(v38 - 8);
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v42 = (char *)(v40 + 16);
  v41(v22, v39, v38);
  uint64_t v83 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v84;
  sub_1C06B23C8(v34, v35, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1C01B158C, 0);
  if (v43)
  {
    sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E7570);
  }
  sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v44 = v36[2];
  uint64_t v45 = v36[3];
  uint64_t v46 = v39;
  uint64_t v47 = (uint64_t)v82;
  uint64_t v84 = v46;
  ((void (*)(char *))v41)(v82);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B23C8(v44, v45, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v47, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v49 = v36[4];
  uint64_t v50 = v36[5];
  uint64_t v51 = v41;
  uint64_t v52 = v25;
  uint64_t v53 = (uint64_t)v81;
  uint64_t v54 = v51;
  v51((char *)v81, v84, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B23C8(v49, v50, 2, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v53, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v55 = v36[6];
  uint64_t v56 = v36[7];
  uint64_t v57 = (uint64_t)v80;
  uint64_t v82 = v42;
  v54(v80, v84, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B23C8(v55, v56, 3, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
  uint64_t v25 = v52;
  sub_1C0BF0490(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = *((unsigned char *)v36 + 64);
  uint64_t v58 = (uint64_t)v79;
  v54(v79, v84, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06B255C(v55, 4, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v58, type metadata accessor for FormatVersionRequirement);
  uint64_t v59 = (uint64_t)v77;
  uint64_t v60 = (uint64_t)v36 + v78[13];
  v54(v77, v84, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F6BC4(v60, 5, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v59, type metadata accessor for FormatVersionRequirement);
  uint64_t v61 = v54;
  uint64_t v84 = 0;
  int v62 = *((unsigned __int8 *)v36 + v78[14]);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v63 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA98);
  uint64_t v64 = (uint64_t)v76;
  v54(v76, v63, v38);
  swift_storeEnumTagMultiPayload();
  if (v62)
  {
    uint64_t v65 = v84;
    char v66 = sub_1C0830D24(v64, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v65)
    {
LABEL_11:
      sub_1C0BF0490(v64, type metadata accessor for FormatVersionRequirement);
      return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E7570);
    }
    uint64_t v84 = 0;
    if (v66)
    {
      long long v85 = xmmword_1C1557FE0;
      char v86 = 0;
      char v87 = 1;
      sub_1C08E7604();
      sub_1BFF8784C(&qword_1EB86EA50, (void (*)(uint64_t))sub_1C08E7604);
      uint64_t v67 = v84;
      sub_1C1520BAC();
      if (v67) {
        goto LABEL_11;
      }
      uint64_t v84 = 0;
    }
  }
  sub_1C0BF0490(v64, type metadata accessor for FormatVersionRequirement);
  uint64_t v68 = qword_1EB887628;
  swift_bridgeObjectRetain();
  uint64_t v81 = v36;
  if (v68 != -1) {
    swift_once();
  }
  uint64_t v69 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA68);
  uint64_t v70 = (uint64_t)v74;
  v61(v74, v69, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C0BF0490(v70, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v71 = (uint64_t)v81 + v78[16];
  uint64_t v72 = (uint64_t)v75;
  v61(v75, v69, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F6FD0(v71, 8, 0, 0, v72, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v72, type metadata accessor for FormatVersionRequirement);
  return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E7570);
}

uint64_t sub_1BFE7FB8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1BFE7FBF4()
{
  if (!qword_1EB88E948)
  {
    sub_1C1515FDC();
    sub_1C085F050(&qword_1EB884CF0, MEMORY[0x1E4F276F0]);
    unint64_t v0 = _s10CodingKeysOMa_90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88E948);
    }
  }
}

unint64_t sub_1BFE7FC88()
{
  return sub_1C0782CA8(*v0);
}

unint64_t sub_1BFE7FC90(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 2:
      unint64_t result = 1701667182;
      break;
    case 3:
      unint64_t result = 0x7470697263736564;
      break;
    case 4:
      unint64_t result = 0x6465726975716572;
      break;
    case 5:
      unint64_t result = 0x746C7561666564;
      break;
    case 6:
      unint64_t result = 0x7461636572706564;
      break;
    case 7:
      unint64_t result = 0x72656C69706D6F63;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 1885433183;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFE7FDA8()
{
  return sub_1C07EAD94(*v0);
}

uint64_t FormatCompilerProperty.encode(to:)(void *a1)
{
  sub_1BFEFF3E8(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v112 = (uint64_t)&v95 - v3;
  sub_1BFEFF3E8(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v111 = (uint64_t)&v95 - v5;
  sub_1BFE83B60();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v110 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C08FC718(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v109 = (uint64_t)&v95 - v9;
  sub_1C08FC718(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v108 = (uint64_t)&v95 - v11;
  sub_1BFEFF3E8(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v107 = (uint64_t)&v95 - v13;
  uint64_t v14 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v106 = (uint64_t)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE83BF4();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v105 = (uint64_t)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF3E8(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v104 = (uint64_t)&v95 - v19;
  uint64_t v20 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v103 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v102 = (char *)&v95 - v23;
  MEMORY[0x1F4188790](v24);
  int v101 = (char *)&v95 - v25;
  MEMORY[0x1F4188790](v26);
  uint64_t v100 = (char *)&v95 - v27;
  MEMORY[0x1F4188790](v28);
  uint64_t v99 = (char *)&v95 - v29;
  MEMORY[0x1F4188790](v30);
  uint64_t v98 = (char *)&v95 - v31;
  MEMORY[0x1F4188790](v32);
  uint64_t v97 = (char *)&v95 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v96 = (char *)&v95 - v35;
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v95 - v37;
  MEMORY[0x1F4188790](v39);
  uint64_t v41 = (char *)&v95 - v40;
  sub_1C08FC718(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v42 - 8);
  uint64_t v44 = (char *)&v95 - v43;
  uint64_t v45 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1F4188790](v45);
  uint64_t v47 = (char *)&v95 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v48 - 8);
  uint64_t v50 = (char *)&v95 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = a1[3];
  uint64_t v51 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v52);
  unint64_t v53 = sub_1BFEB6A24();
  uint64_t v114 = v50;
  sub_1BFEFBD78(v45, v54, v52, v45, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v51, (uint64_t)v50, v53, (uint64_t)&off_1F1C39B68);
  sub_1BFE80E70(v113, (uint64_t)v47, type metadata accessor for FormatCompilerProperty);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v59 = v104;
      sub_1C087DC64((uint64_t)v47, v104);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v60 = sub_1C151928C();
      uint64_t v61 = __swift_project_value_buffer(v60, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16))(v38, v61, v60);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = (uint64_t)v114;
      sub_1C06854B0(1, v59, (uint64_t)v38);
      sub_1BFEFEB68((uint64_t)v38, type metadata accessor for FormatVersionRequirement);
      sub_1C087DF44(v59);
      goto LABEL_33;
    case 2u:
      uint64_t v63 = v105;
      sub_1BFE7FB8C((uint64_t)v47, v105, (uint64_t (*)(void))sub_1BFE83BF4);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v64 = sub_1C151928C();
      uint64_t v65 = __swift_project_value_buffer(v64, (uint64_t)qword_1EB93CAB0);
      uint64_t v66 = (uint64_t)v96;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(v96, v65, v64);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = (uint64_t)v114;
      sub_1C068568C(2, v63, v66);
      sub_1BFEFEB68(v66, type metadata accessor for FormatVersionRequirement);
      uint64_t v67 = (uint64_t (*)(void))sub_1BFE83BF4;
      goto LABEL_26;
    case 3u:
      uint64_t v63 = v106;
      sub_1BFE7FB8C((uint64_t)v47, v106, type metadata accessor for FormatCompilerEnumProperty);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_1C151928C();
      uint64_t v69 = __swift_project_value_buffer(v68, (uint64_t)qword_1EB93CAB0);
      uint64_t v70 = (uint64_t)v97;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v97, v69, v68);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = (uint64_t)v114;
      sub_1BFE884EC(3, v63, v70);
      sub_1BFEFEB68(v70, type metadata accessor for FormatVersionRequirement);
      uint64_t v67 = type metadata accessor for FormatCompilerEnumProperty;
      goto LABEL_26;
    case 4u:
      uint64_t v71 = v107;
      sub_1C087DB38((uint64_t)v47, v107);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v72 = sub_1C151928C();
      uint64_t v73 = __swift_project_value_buffer(v72, (uint64_t)qword_1EB93CAB0);
      uint64_t v74 = (uint64_t)v98;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v72 - 8) + 16))(v98, v73, v72);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = (uint64_t)v114;
      sub_1C0685860(4, v71, v74);
      sub_1BFEFEB68(v74, type metadata accessor for FormatVersionRequirement);
      sub_1C087DEB0(v71);
      goto LABEL_33;
    case 5u:
      uint64_t v75 = v108;
      sub_1C087DA18((uint64_t)v47, v108);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v76 = sub_1C151928C();
      uint64_t v77 = __swift_project_value_buffer(v76, (uint64_t)qword_1EB93CAB0);
      uint64_t v78 = (uint64_t)v99;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v76 - 8) + 16))(v99, v77, v76);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = (uint64_t)v114;
      sub_1C0685A3C(5, v75, v78);
      sub_1BFEFEB68(v78, type metadata accessor for FormatVersionRequirement);
      sub_1C087DE28(v75);
      goto LABEL_33;
    case 6u:
      uint64_t v79 = v109;
      sub_1BFE83E80((uint64_t)v47, v109);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v80 = sub_1C151928C();
      uint64_t v81 = __swift_project_value_buffer(v80, (uint64_t)qword_1EB93CAB0);
      uint64_t v82 = (uint64_t)v100;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 16))(v100, v81, v80);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = (uint64_t)v114;
      sub_1BFE87370(6, v79, v82);
      sub_1BFEFEB68(v82, type metadata accessor for FormatVersionRequirement);
      sub_1BFE86F20(v79);
      goto LABEL_33;
    case 7u:
      uint64_t v63 = v110;
      sub_1BFE7FB8C((uint64_t)v47, v110, (uint64_t (*)(void))sub_1BFE83B60);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v83 = sub_1C151928C();
      uint64_t v84 = __swift_project_value_buffer(v83, (uint64_t)qword_1EB93CAB0);
      uint64_t v85 = (uint64_t)v101;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16))(v101, v84, v83);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = (uint64_t)v114;
      sub_1BFE86FA8(7, v63, v85);
      sub_1BFEFEB68(v85, type metadata accessor for FormatVersionRequirement);
      uint64_t v67 = (uint64_t (*)(void))sub_1BFE83B60;
LABEL_26:
      sub_1BFEFEB68(v63, v67);
      goto LABEL_33;
    case 8u:
      uint64_t v86 = v111;
      sub_1C087D8F8((uint64_t)v47, v111);
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v87 = sub_1C151928C();
      uint64_t v88 = __swift_project_value_buffer(v87, (uint64_t)qword_1EB93CA98);
      uint64_t v89 = (uint64_t)v102;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 16))(v102, v88, v87);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = (uint64_t)v114;
      sub_1C0685C0C(8, v86, v89);
      sub_1BFEFEB68(v89, type metadata accessor for FormatVersionRequirement);
      sub_1C087DD94(v86);
      goto LABEL_33;
    case 9u:
      uint64_t v90 = v112;
      sub_1C087D7CC((uint64_t)v47, v112);
      if (qword_1EB887650 != -1) {
        swift_once();
      }
      uint64_t v91 = sub_1C151928C();
      uint64_t v92 = __swift_project_value_buffer(v91, (uint64_t)qword_1EB93CAE0);
      uint64_t v93 = (uint64_t)v103;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v91 - 8) + 16))(v103, v92, v91);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v62 = (uint64_t)v114;
      sub_1C0685DE8(9, v90, v93);
      sub_1BFEFEB68(v93, type metadata accessor for FormatVersionRequirement);
      sub_1C087DD00(v90);
LABEL_33:
      uint64_t v58 = v62;
      break;
    default:
      sub_1BFE86E90((uint64_t)v47, (uint64_t)v44);
      if (qword_1EB882D28 != -1) {
        swift_once();
      }
      uint64_t v55 = sub_1C151928C();
      uint64_t v56 = __swift_project_value_buffer(v55, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v41, v56, v55);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v57 = (uint64_t)v114;
      sub_1BFE875C4(0, (uint64_t)v44, (uint64_t)v41);
      sub_1BFEFEB68((uint64_t)v41, type metadata accessor for FormatVersionRequirement);
      sub_1BFE87264((uint64_t)v44);
      uint64_t v58 = v57;
      break;
  }
  return sub_1BFEFEB68(v58, (uint64_t (*)(void))sub_1BFEFF7D8);
}

uint64_t sub_1BFE80E70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FormatCompilerProperty.identifier.getter()
{
  sub_1BFF014AC(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v45 = (char *)&v43 - v1;
  sub_1BFF014AC(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v44 = (char *)&v43 - v3;
  sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v43 - v5);
  sub_1BFE82970(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v43 - v8);
  sub_1BFE82970(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v43 - v11);
  sub_1BFF014AC(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v43 - v14);
  uint64_t v16 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (uint64_t *)((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (uint64_t *)((char *)&v43 - v20);
  sub_1BFF014AC(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (uint64_t *)((char *)&v43 - v23);
  sub_1BFE82970(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (uint64_t *)((char *)&v43 - v26);
  uint64_t v28 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1F4188790](v28);
  uint64_t v30 = (char *)&v43 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE82BD0(v46, (uint64_t)v30, type metadata accessor for FormatCompilerProperty);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C131E69C((uint64_t)v30, (uint64_t)v24, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor);
      uint64_t v31 = *v24;
      swift_bridgeObjectRetain();
      uint64_t v32 = (uint64_t)v24;
      uint64_t v33 = &qword_1EB88DED0;
      uint64_t v34 = sub_1C003F2E8;
      uint64_t v35 = &type metadata for FormatColor;
      goto LABEL_14;
    case 2u:
      sub_1BFE30960((uint64_t)v30, (uint64_t)v21, (uint64_t)&qword_1EB88DE90, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82C58);
      uint64_t v31 = *v21;
      swift_bridgeObjectRetain();
      sub_1C131E840((uint64_t)v21, (uint64_t)&qword_1EB88DE90, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))sub_1BFE82C58);
      return v31;
    case 3u:
      sub_1C131E77C((uint64_t)v30, (uint64_t)v18);
      uint64_t v31 = *v18;
      swift_bridgeObjectRetain();
      sub_1C131E7E0((uint64_t)v18, type metadata accessor for FormatCompilerEnumProperty);
      return v31;
    case 4u:
      uint64_t v36 = &qword_1EB88DEA0;
      uint64_t v37 = (ValueMetadata *)MEMORY[0x1E4FBC958];
      uint64_t v38 = sub_1C0092008;
      sub_1C131E69C((uint64_t)v30, (uint64_t)v15, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958]);
      uint64_t v31 = *v15;
      swift_bridgeObjectRetain();
      uint64_t v32 = (uint64_t)v15;
      goto LABEL_13;
    case 5u:
      sub_1C087DA18((uint64_t)v30, (uint64_t)v12);
      uint64_t v31 = *v12;
      swift_bridgeObjectRetain();
      sub_1C087DE28((uint64_t)v12);
      return v31;
    case 6u:
      sub_1BFE83E80((uint64_t)v30, (uint64_t)v9);
      uint64_t v31 = *v9;
      swift_bridgeObjectRetain();
      sub_1BFE86F20((uint64_t)v9);
      return v31;
    case 7u:
      sub_1BFE30960((uint64_t)v30, (uint64_t)v6, (uint64_t)&qword_1EB88DE80, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFE82A10);
      uint64_t v31 = *v6;
      swift_bridgeObjectRetain();
      sub_1C131E840((uint64_t)v6, (uint64_t)&qword_1EB88DE80, (uint64_t)type metadata accessor for FormatCompilerPrimitiveProperty, (uint64_t (*)(void))sub_1BFE82A10);
      return v31;
    case 8u:
      uint64_t v36 = &qword_1EB88DEC0;
      uint64_t v37 = &type metadata for FormatFont;
      uint64_t v39 = sub_1C0084C58;
      uint64_t v38 = sub_1C0084C58;
      uint64_t v40 = (uint64_t)v30;
      uint64_t v41 = (uint64_t *)v44;
      goto LABEL_12;
    case 9u:
      uint64_t v36 = (unint64_t *)&unk_1EB88DEB0;
      uint64_t v37 = &type metadata for FormatAsyncImageContent;
      uint64_t v39 = sub_1C0036630;
      uint64_t v38 = sub_1C0036630;
      uint64_t v40 = (uint64_t)v30;
      uint64_t v41 = (uint64_t *)v45;
LABEL_12:
      sub_1C131E69C(v40, (uint64_t)v41, v36, (uint64_t (*)(void))v39, (uint64_t)v37);
      uint64_t v31 = *v41;
      swift_bridgeObjectRetain();
      uint64_t v32 = (uint64_t)v41;
LABEL_13:
      uint64_t v33 = v36;
      uint64_t v34 = v38;
      uint64_t v35 = v37;
LABEL_14:
      sub_1C131E720(v32, v33, (uint64_t (*)(void))v34, (uint64_t)v35, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      break;
    default:
      sub_1BFE86E90((uint64_t)v30, (uint64_t)v27);
      uint64_t v31 = *v27;
      swift_bridgeObjectRetain();
      sub_1BFE87264((uint64_t)v27);
      break;
  }
  return v31;
}

uint64_t destroy for FormatCompilerProperty(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = (unint64_t *)&unk_1EB88DEF0;
      uint64_t v4 = MEMORY[0x1E4FBB390];
      uint64_t v5 = &protocol witness table for Bool;
      goto LABEL_11;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(void *)(a1 + 56) & 0xF000000000000007) != 0) {
        swift_release();
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_1EB88DED0;
      uint64_t v7 = &type metadata for FormatColor;
      uint64_t v8 = sub_1C003F2E8;
      goto LABEL_22;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      uint64_t v10 = v9;
      uint64_t v11 = a1 + *(int *)(v9 + 48);
      uint64_t v12 = sub_1C151631C();
      goto LABEL_13;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = *(int *)(type metadata accessor for FormatCompilerEnumProperty(0) + 48);
      goto LABEL_24;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_1EB88DEA0;
      uint64_t v7 = (ValueMetadata *)MEMORY[0x1E4FBC958];
      uint64_t v8 = sub_1C0092008;
      goto LABEL_22;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = &qword_1EB88DF00;
      uint64_t v4 = MEMORY[0x1E4FBB550];
      uint64_t v5 = &protocol witness table for Int;
      goto LABEL_11;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = &qword_1EB88DEE0;
      uint64_t v4 = MEMORY[0x1E4FBB1A0];
      uint64_t v5 = &protocol witness table for String;
LABEL_11:
      sub_1BFE82970(0, v3, v4, (uint64_t)v5, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      goto LABEL_23;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      uint64_t v10 = v15;
      uint64_t v11 = a1 + *(int *)(v15 + 48);
      uint64_t v12 = sub_1C1515FDC();
LABEL_13:
      uint64_t v16 = v12;
      uint64_t v17 = *(void *)(v12 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v11, 1, v12)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v11, v16);
      }
      swift_bridgeObjectRelease();
      uint64_t v13 = *(int *)(v10 + 60);
      goto LABEL_24;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(void *)(a1 + 56) & 0xF000000000000007) != 0) {
        swift_release();
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = &qword_1EB88DEC0;
      uint64_t v7 = &type metadata for FormatFont;
      uint64_t v8 = sub_1C0084C58;
      goto LABEL_22;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((~*(void *)(a1 + 56) & 0xF000000000000007) != 0) {
        swift_release();
      }
      swift_bridgeObjectRelease();
      uint64_t v6 = (unint64_t *)&unk_1EB88DEB0;
      uint64_t v7 = &type metadata for FormatAsyncImageContent;
      uint64_t v8 = sub_1C0036630;
LABEL_22:
      sub_1BFF014AC(0, v6, (uint64_t (*)(void))v8, (uint64_t)v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
LABEL_23:
      uint64_t v13 = *(int *)(v14 + 60);
LABEL_24:
      uint64_t v18 = a1 + v13;
      uint64_t v19 = sub_1C1518CDC();
      uint64_t v21 = *(void *)(v19 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v18, 1, v19);
      if (!result)
      {
        uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8);
        uint64_t result = v20(v18, v19);
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for FormatCompilerProperty(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v13;
      uint64_t v14 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v14;
      uint64_t v15 = *(void *)(a2 + 32);
      uint64_t v16 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      uint64_t v17 = *(void *)(a2 + 56);
      *(void *)(a1 + 32) = v15;
      *(void *)(a1 + 40) = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((~v17 & 0xF000000000000007) != 0) {
        swift_retain();
      }
      *(void *)(a1 + 56) = v17;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      sub_1BFF014AC(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      uint64_t v19 = *(int *)(v18 + 60);
      uint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (const void *)(a2 + v19);
      uint64_t v22 = sub_1C1518CDC();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
      swift_bridgeObjectRetain();
      if (v24(v21, 1, v22)) {
        goto LABEL_29;
      }
      (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      break;
    case 2u:
      uint64_t v25 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v25;
      uint64_t v26 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v26;
      uint64_t v27 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v27;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      sub_1BFE82C58(0, (unint64_t *)&qword_1EB88DE90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      uint64_t v29 = v28[12];
      uint64_t v104 = v28;
      __dsta = (void *)(a1 + v29);
      uint64_t v30 = (const void *)(a2 + v29);
      uint64_t v31 = sub_1C151631C();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v33(v30, 1, v31))
      {
        sub_1BFE79E3C(0, (unint64_t *)&qword_1EB871180, MEMORY[0x1E4F27928]);
        size_t v35 = *(void *)(*(void *)(v34 - 8) + 64);
        uint64_t v36 = __dsta;
        uint64_t v37 = v30;
        goto LABEL_21;
      }
      uint64_t v99 = __dsta;
      (*(void (**)(void *, const void *, uint64_t))(v32 + 16))(__dsta, v30, v31);
      goto LABEL_34;
    case 3u:
      uint64_t v38 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v38;
      uint64_t v39 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v39;
      uint64_t v40 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v40;
      uint64_t v41 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v41;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v42 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v42;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      uint64_t v43 = *(int *)(type metadata accessor for FormatCompilerEnumProperty(0) + 48);
      uint64_t v105 = (const void *)(a2 + v43);
      __dstb = (void *)(a1 + v43);
      uint64_t v44 = sub_1C1518CDC();
      uint64_t v45 = *(void *)(v44 - 8);
      uint64_t v103 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v46 = v105;
      swift_bridgeObjectRetain();
      if (v103(v105, 1, v44)) {
        goto LABEL_17;
      }
      (*(void (**)(void *, const void *, uint64_t))(v45 + 16))(__dstb, v105, v44);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(__dstb, 0, 1, v44);
      break;
    case 4u:
      uint64_t v47 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v47;
      uint64_t v48 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v48;
      uint64_t v49 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v49;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      sub_1BFF014AC(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      goto LABEL_14;
    case 5u:
      uint64_t v51 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v51;
      uint64_t v52 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v52;
      uint64_t v53 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v53;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      sub_1BFE82970(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
LABEL_14:
      uint64_t v54 = *(int *)(v50 + 60);
      __dst = (void *)(a1 + v54);
      uint64_t v9 = (const void *)(a2 + v54);
      uint64_t v55 = sub_1C1518CDC();
      uint64_t v56 = *(void *)(v55 - 8);
      uint64_t v57 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v57(v9, 1, v55)) {
        goto LABEL_15;
      }
      (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(__dst, v9, v55);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v56 + 56))(__dst, 0, 1, v55);
      break;
    case 6u:
      uint64_t v62 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v62;
      uint64_t v63 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v63;
      uint64_t v64 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v64;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      uint64_t v65 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v65;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      sub_1BFE82970(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      uint64_t v67 = *(int *)(v66 + 60);
      __dstb = (void *)(a1 + v67);
      uint64_t v46 = (const void *)(a2 + v67);
      uint64_t v68 = sub_1C1518CDC();
      uint64_t v69 = *(void *)(v68 - 8);
      uint64_t v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v70(v46, 1, v68))
      {
LABEL_17:
        sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v59 = *(void *)(*(void *)(v71 - 8) + 64);
        uint64_t v60 = __dstb;
        uint64_t v61 = v46;
        goto LABEL_18;
      }
      (*(void (**)(void *, const void *, uint64_t))(v69 + 16))(__dstb, v46, v68);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(__dstb, 0, 1, v68);
      break;
    case 7u:
      uint64_t v72 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v72;
      uint64_t v73 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v73;
      uint64_t v74 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v74;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      sub_1BFE82A10(0, (unint64_t *)&qword_1EB88DE80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      uint64_t v76 = v75[12];
      uint64_t v104 = v75;
      __dstc = (void *)(a1 + v76);
      uint64_t v77 = (const void *)(a2 + v76);
      uint64_t v31 = sub_1C1515FDC();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v78 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v78(v77, 1, v31))
      {
        sub_1BFE79E3C(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        size_t v35 = *(void *)(*(void *)(v79 - 8) + 64);
        uint64_t v36 = __dstc;
        uint64_t v37 = v77;
LABEL_21:
        memcpy(v36, v37, v35);
      }
      else
      {
        uint64_t v99 = __dstc;
        (*(void (**)(void *, const void *, uint64_t))(v32 + 16))(__dstc, v77, v31);
LABEL_34:
        (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v99, 0, 1, v31);
      }
      *(unsigned char *)(a1 + v104[13]) = *(unsigned char *)(a2 + v104[13]);
      *(void *)(a1 + v104[14]) = *(void *)(a2 + v104[14]);
      uint64_t v100 = v104[15];
      uint64_t v20 = (void *)(a1 + v100);
      uint64_t v21 = (const void *)(a2 + v100);
      uint64_t v95 = sub_1C1518CDC();
      uint64_t v96 = *(void *)(v95 - 8);
      int v101 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v96 + 48);
      swift_bridgeObjectRetain();
      if (!v101(v21, 1, v95)) {
        goto LABEL_36;
      }
      goto LABEL_29;
    case 8u:
      uint64_t v80 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v80;
      uint64_t v81 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v81;
      uint64_t v82 = *(void *)(a2 + 32);
      uint64_t v83 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      uint64_t v84 = *(void *)(a2 + 56);
      *(void *)(a1 + 32) = v82;
      *(void *)(a1 + 40) = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((~v84 & 0xF000000000000007) != 0) {
        swift_retain();
      }
      *(void *)(a1 + 56) = v84;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v85 = &qword_1EB88DEC0;
      uint64_t v86 = &type metadata for FormatFont;
      uint64_t v87 = sub_1C0084C58;
      goto LABEL_28;
    case 9u:
      uint64_t v88 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v88;
      uint64_t v89 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v89;
      uint64_t v90 = *(void *)(a2 + 32);
      uint64_t v91 = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      uint64_t v92 = *(void *)(a2 + 56);
      *(void *)(a1 + 32) = v90;
      *(void *)(a1 + 40) = v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((~v92 & 0xF000000000000007) != 0) {
        swift_retain();
      }
      *(void *)(a1 + 56) = v92;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      uint64_t v85 = (unint64_t *)&unk_1EB88DEB0;
      uint64_t v86 = &type metadata for FormatAsyncImageContent;
      uint64_t v87 = sub_1C0036630;
LABEL_28:
      sub_1BFF014AC(0, v85, (uint64_t (*)(void))v87, (uint64_t)v86, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      uint64_t v94 = *(int *)(v93 + 60);
      uint64_t v20 = (void *)(a1 + v94);
      uint64_t v21 = (const void *)(a2 + v94);
      uint64_t v95 = sub_1C1518CDC();
      uint64_t v96 = *(void *)(v95 - 8);
      uint64_t v97 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v96 + 48);
      swift_bridgeObjectRetain();
      if (v97(v21, 1, v95))
      {
LABEL_29:
        sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        memcpy(v20, v21, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
LABEL_36:
        (*(void (**)(void *, const void *, uint64_t))(v96 + 16))(v20, v21, v95);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v96 + 56))(v20, 0, 1, v95);
      }
      break;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v6;
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      sub_1BFE82970(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
      uint64_t v8 = *(int *)(v7 + 60);
      __dst = (void *)(a1 + v8);
      uint64_t v9 = (const void *)(a2 + v8);
      uint64_t v10 = sub_1C1518CDC();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12(v9, 1, v10))
      {
LABEL_15:
        sub_1BFE79E3C(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
        size_t v59 = *(void *)(*(void *)(v58 - 8) + 64);
        uint64_t v60 = __dst;
        uint64_t v61 = v9;
LABEL_18:
        memcpy(v60, v61, v59);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
      }
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void sub_1BFE828D4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = type metadata accessor for FormatCompilerPrimitiveProperty();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1BFE82920(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFE82970(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFE829C0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = a5(0, a3, a4);
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFE82A10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v7 = sub_1BFF87924(&qword_1EB884CF0, MEMORY[0x1E4F276F0]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFE82AAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v7 = sub_1C0281748(&qword_1EB884CF0, MEMORY[0x1E4F276F0]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for FormatCompilerEnumProperty(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB88C0D0);
}

uint64_t sub_1BFE82B68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE82BD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FormatCompilerProperty(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB877438);
}

void sub_1BFE82C58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C151631C();
    uint64_t v7 = sub_1BFF87924((unint64_t *)&qword_1EB884D00, MEMORY[0x1E4F27928]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t initializeWithCopy for FormatURL(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = *(void *)a2;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void *)(a2 + 16);
    char v9 = *(unsigned char *)(a2 + 24);
    sub_1BFE86E48(v6, v7, v8, v9);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v9;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = type metadata accessor for FormatAbsoluteURL();
      *(void *)(a1 + *(int *)(v11 + 20)) = *(void *)(a2 + *(int *)(v11 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t FormatCompilerProperty.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v75 = a2;
  sub_1BFEFF3E8(0, (unint64_t *)&unk_1EB88DEB0, (uint64_t (*)(void))sub_1C0036630, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v81 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v76 = (char *)&v57 - v4;
  sub_1BFEFF3E8(0, &qword_1EB88DEC0, (uint64_t (*)(void))sub_1C0084C58, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v80 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v79 = (char *)&v57 - v6;
  sub_1BFE83B60();
  uint64_t v73 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v74 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C08FC718(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v71 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v72 = (char *)&v57 - v10;
  sub_1C08FC718(0, &qword_1EB88DF00, MEMORY[0x1E4FBB550], (uint64_t)&protocol witness table for Int, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v69 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v70 = (char *)&v57 - v12;
  sub_1BFEFF3E8(0, &qword_1EB88DEA0, (uint64_t (*)(void))sub_1C0092008, MEMORY[0x1E4FBC958], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v67 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v68 = (char *)&v57 - v14;
  uint64_t v65 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1F4188790](v65);
  uint64_t v66 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE83BF4();
  uint64_t v63 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v64 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF3E8(0, &qword_1EB88DED0, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v61 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v62 = (char *)&v57 - v19;
  sub_1C08FC718(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  uint64_t v60 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v57 - v21;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v77 = *(void *)(v23 - 8);
  uint64_t v78 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v57 - v24;
  uint64_t v26 = type metadata accessor for FormatCompilerProperty(0);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v30 = v82;
  sub_1C1520EBC();
  uint64_t v31 = v30;
  if (v30)
  {
LABEL_20:
    sub_1C0038728(v29, (uint64_t)v31);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  uint64_t v58 = v22;
  size_t v59 = v28;
  uint64_t v32 = a1[3];
  uint64_t v82 = v29;
  __swift_project_boxed_opaque_existential_1(v29, v32);
  uint64_t v33 = sub_1C1520EAC();
  LOBYTE(v32) = Dictionary<>.errorOnUnknownKeys.getter(v33);
  swift_bridgeObjectRelease();
  uint64_t v34 = v78;
  uint64_t v35 = (uint64_t)v79;
  uint64_t v36 = v25;
  if (v32)
  {
    uint64_t v37 = sub_1C152070C();
    uint64_t v38 = *(void *)(v37 + 16);
    if (v38)
    {
      uint64_t v39 = (unint64_t *)(v37 + 40);
      while (1)
      {
        unint64_t v40 = *v39;
        if (*v39 >= 4) {
          break;
        }
        v39 += 2;
        if (!--v38) {
          goto LABEL_7;
        }
      }
      uint64_t v45 = *(v39 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v31 = (void *)swift_allocError();
      *(void *)uint64_t v46 = v45;
      *(void *)(v46 + 8) = v40;
      *(void *)(v46 + 16) = &unk_1F1B84710;
      *(_OWORD *)(v46 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v45, v40);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v36, v34);
      uint64_t v29 = v82;
      goto LABEL_20;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFE83C88();
  long long v83 = 0uLL;
  sub_1C15206EC();
  uint64_t v41 = v76;
  uint64_t v42 = v77;
  switch(v84)
  {
    case 1:
      long long v83 = xmmword_1C152C800;
      sub_1C087DBD4();
      uint64_t v47 = (uint64_t)v62;
      sub_1C15206EC();
      uint64_t v29 = v82;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v34);
      uint64_t v56 = (uint64_t)v59;
      sub_1C087DC64(v47, (uint64_t)v59);
      uint64_t v44 = v75;
      break;
    case 2:
      long long v83 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EA19D9C8, (void (*)(uint64_t))sub_1BFE83BF4);
      uint64_t v48 = (uint64_t)v64;
      sub_1C15206EC();
      uint64_t v29 = v82;
      uint64_t v44 = v75;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v34);
      uint64_t v56 = (uint64_t)v59;
      sub_1BFE7FB8C(v48, (uint64_t)v59, (uint64_t (*)(void))sub_1BFE83BF4);
      break;
    case 3:
      long long v83 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87FF00, (void (*)(uint64_t))type metadata accessor for FormatCompilerEnumProperty);
      uint64_t v49 = (uint64_t)v66;
      sub_1C15206EC();
      uint64_t v29 = v82;
      uint64_t v44 = v75;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v34);
      uint64_t v56 = (uint64_t)v59;
      sub_1BFE7FB8C(v49, (uint64_t)v59, type metadata accessor for FormatCompilerEnumProperty);
      break;
    case 4:
      long long v83 = xmmword_1C152C800;
      sub_1C087DAA8();
      uint64_t v50 = (uint64_t)v68;
      sub_1C15206EC();
      uint64_t v29 = v82;
      uint64_t v44 = v75;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v34);
      uint64_t v56 = (uint64_t)v59;
      sub_1C087DB38(v50, (uint64_t)v59);
      break;
    case 5:
      long long v83 = xmmword_1C152C800;
      sub_1C087D994();
      uint64_t v51 = (uint64_t)v70;
      sub_1C15206EC();
      uint64_t v29 = v82;
      uint64_t v44 = v75;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v34);
      uint64_t v56 = (uint64_t)v59;
      sub_1C087DA18(v51, (uint64_t)v59);
      break;
    case 6:
      long long v83 = xmmword_1C152C800;
      sub_1BFE872EC();
      uint64_t v52 = (uint64_t)v72;
      sub_1C15206EC();
      uint64_t v29 = v82;
      uint64_t v44 = v75;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v34);
      uint64_t v56 = (uint64_t)v59;
      sub_1BFE83E80(v52, (uint64_t)v59);
      break;
    case 7:
      long long v83 = xmmword_1C152C800;
      sub_1C085F050((unint64_t *)&unk_1EB88DE70, (void (*)(uint64_t))sub_1BFE83B60);
      uint64_t v53 = (uint64_t)v74;
      sub_1C15206EC();
      uint64_t v29 = v82;
      uint64_t v44 = v75;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v34);
      uint64_t v56 = (uint64_t)v59;
      sub_1BFE7FB8C(v53, (uint64_t)v59, (uint64_t (*)(void))sub_1BFE83B60);
      break;
    case 8:
      long long v83 = xmmword_1C152C800;
      sub_1C087D868();
      sub_1C15206EC();
      uint64_t v29 = v82;
      uint64_t v44 = v75;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v34);
      uint64_t v56 = (uint64_t)v59;
      sub_1C087D8F8(v35, (uint64_t)v59);
      break;
    case 9:
      long long v83 = xmmword_1C152C800;
      sub_1C087D73C();
      sub_1C15206EC();
      uint64_t v29 = v82;
      uint64_t v54 = (uint64_t)v41;
      uint64_t v44 = v75;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v34);
      uint64_t v56 = (uint64_t)v59;
      sub_1C087D7CC(v54, (uint64_t)v59);
      break;
    default:
      long long v83 = xmmword_1C152C800;
      sub_1BFE87794();
      uint64_t v43 = (uint64_t)v58;
      sub_1C15206EC();
      uint64_t v44 = v75;
      (*(void (**)(char *, uint64_t))(v42 + 8))(v36, v34);
      uint64_t v56 = (uint64_t)v59;
      sub_1BFE86E90(v43, (uint64_t)v59);
      uint64_t v29 = v82;
      break;
  }
  swift_storeEnumTagMultiPayload();
  sub_1BFE7FB8C(v56, v44, type metadata accessor for FormatCompilerProperty);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
}

void sub_1BFE83B60()
{
  if (!qword_1EB88DE80)
  {
    sub_1C1515FDC();
    sub_1BFF8772C(&qword_1EB884CF0, MEMORY[0x1E4F276F0]);
    unint64_t v0 = type metadata accessor for FormatCompilerPrimitiveProperty();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88DE80);
    }
  }
}

void sub_1BFE83BF4()
{
  if (!qword_1EB88DE90)
  {
    sub_1C151631C();
    sub_1BFF8772C((unint64_t *)&qword_1EB884D00, MEMORY[0x1E4F27928]);
    unint64_t v0 = type metadata accessor for FormatCompilerPrimitiveProperty();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88DE90);
    }
  }
}

unint64_t sub_1BFE83C88()
{
  unint64_t result = qword_1EB88A748;
  if (!qword_1EB88A748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A748);
  }
  return result;
}

uint64_t sub_1BFE83CDC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  }
  unint64_t v8 = *(void *)(v6 + 64) + v7;
  if (!*(_DWORD *)(v6 + 84)) {
    ++v8;
  }
  unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1C1518CDC();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (v9 + *(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = v11;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10);
  if (!result)
  {
    uint64_t v14 = *(uint64_t (**)(unint64_t, uint64_t))(v15 + 8);
    return v14(v12, v10);
  }
  return result;
}

uint64_t sub_1BFE83E80(uint64_t a1, uint64_t a2)
{
  sub_1C08FC718(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFE83F10(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v4 = (((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  }
  unint64_t v8 = *(void *)(v6 + 64) + v7;
  if (!*(_DWORD *)(v6 + 84)) {
    ++v8;
  }
  unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1C1518CDC();
  uint64_t v11 = *(void *)(v10 - 8);
  unint64_t v12 = (v9 + *(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = v11;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10);
  if (!result)
  {
    uint64_t v14 = *(uint64_t (**)(unint64_t, uint64_t))(v15 + 8);
    return v14(v12, v10);
  }
  return result;
}

uint64_t initializeWithCopy for FormatRemoteImage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FormatURL();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = *(void *)a2;
    uint64_t v10 = *(void *)(a2 + 8);
    uint64_t v11 = *(void *)(a2 + 16);
    char v12 = *(unsigned char *)(a2 + 24);
    sub_1BFE86E48(*(void *)a2, v10, v11, v12);
    *(void *)a1 = v9;
    *(void *)(a1 + 8) = v10;
    *(void *)(a1 + 16) = v11;
    *(unsigned char *)(a1 + 24) = v12;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v13 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      uint64_t v14 = type metadata accessor for FormatAbsoluteURL();
      *(void *)(a1 + *(int *)(v14 + 20)) = *(void *)(a2 + *(int *)(v14 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = a3[5];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  int v18 = swift_getEnumCaseMultiPayload();
  if (v18 == 2)
  {
    uint64_t v20 = *(void *)v17;
    uint64_t v21 = *(void *)(v17 + 8);
    uint64_t v22 = *(void *)(v17 + 16);
    char v23 = *(unsigned char *)(v17 + 24);
    sub_1BFE86E48(v20, v21, v22, v23);
    *(void *)uint64_t v16 = v20;
    *(void *)(v16 + 8) = v21;
    *(void *)(v16 + 16) = v22;
    *(unsigned char *)(v16 + 24) = v23;
  }
  else
  {
    if (v18 == 1)
    {
      uint64_t v19 = *(void *)(v17 + 8);
      *(void *)uint64_t v16 = *(void *)v17;
      *(void *)(v16 + 8) = v19;
      *(void *)(v16 + 16) = *(void *)(v17 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v24 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v16, v17, v24);
      uint64_t v25 = type metadata accessor for FormatAbsoluteURL();
      *(void *)(v16 + *(int *)(v25 + 20)) = *(void *)(v17 + *(int *)(v25 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = a3[6];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  int v29 = swift_getEnumCaseMultiPayload();
  if (v29 == 2)
  {
    uint64_t v31 = *(void *)v28;
    uint64_t v32 = *(void *)(v28 + 8);
    uint64_t v33 = *(void *)(v28 + 16);
    char v34 = *(unsigned char *)(v28 + 24);
    sub_1BFE86E48(v31, v32, v33, v34);
    *(void *)uint64_t v27 = v31;
    *(void *)(v27 + 8) = v32;
    *(void *)(v27 + 16) = v33;
    *(unsigned char *)(v27 + 24) = v34;
  }
  else
  {
    if (v29 == 1)
    {
      uint64_t v30 = *(void *)(v28 + 8);
      *(void *)uint64_t v27 = *(void *)v28;
      *(void *)(v27 + 8) = v30;
      *(void *)(v27 + 16) = *(void *)(v28 + 16);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v35 = sub_1C1515FDC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v27, v28, v35);
      uint64_t v36 = type metadata accessor for FormatAbsoluteURL();
      *(void *)(v27 + *(int *)(v36 + 20)) = *(void *)(v28 + *(int *)(v36 + 20));
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = a3[7];
  uint64_t v38 = (uint64_t *)(a1 + v37);
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = *(unsigned int (**)(void, void, void))(v40 + 48);
  v184 = v41;
  uint64_t v185 = v40;
  if (v41(a2 + v37, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    int v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 2)
    {
      uint64_t v45 = *v39;
      uint64_t v46 = v39[1];
      uint64_t v47 = v39[2];
      char v48 = *((unsigned char *)v39 + 24);
      sub_1BFE86E48(v45, v46, v47, v48);
      uint64_t *v38 = v45;
      v38[1] = v46;
      uint64_t v41 = v184;
      uint64_t v40 = v185;
      void v38[2] = v47;
      *((unsigned char *)v38 + 24) = v48;
    }
    else
    {
      if (v43 == 1)
      {
        uint64_t v44 = v39[1];
        uint64_t *v38 = *v39;
        v38[1] = v44;
        void v38[2] = v39[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v49 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v49 - 8) + 16))(v38, v39, v49);
        uint64_t v50 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v38 + *(int *)(v50 + 20)) = *(uint64_t *)((char *)v39 + *(int *)(v50 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v38, 0, 1, v6);
  }
  uint64_t v51 = a3[8];
  uint64_t v52 = (uint64_t *)(a1 + v51);
  uint64_t v53 = (uint64_t *)(a2 + v51);
  if (v41(a2 + v51, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    int v55 = swift_getEnumCaseMultiPayload();
    if (v55 == 2)
    {
      uint64_t v57 = *v53;
      uint64_t v58 = v53[1];
      uint64_t v59 = v53[2];
      char v60 = *((unsigned char *)v53 + 24);
      sub_1BFE86E48(v57, v58, v59, v60);
      *uint64_t v52 = v57;
      v52[1] = v58;
      uint64_t v41 = v184;
      uint64_t v40 = v185;
      v52[2] = v59;
      *((unsigned char *)v52 + 24) = v60;
    }
    else
    {
      if (v55 == 1)
      {
        uint64_t v56 = v53[1];
        *uint64_t v52 = *v53;
        v52[1] = v56;
        v52[2] = v53[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v61 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v61 - 8) + 16))(v52, v53, v61);
        uint64_t v62 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v52 + *(int *)(v62 + 20)) = *(uint64_t *)((char *)v53 + *(int *)(v62 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v52, 0, 1, v6);
  }
  uint64_t v63 = a3[9];
  uint64_t v64 = (uint64_t *)(a1 + v63);
  uint64_t v65 = (uint64_t *)(a2 + v63);
  if (v41(a2 + v63, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    int v67 = swift_getEnumCaseMultiPayload();
    if (v67 == 2)
    {
      uint64_t v69 = *v65;
      uint64_t v70 = v65[1];
      uint64_t v71 = v65[2];
      char v72 = *((unsigned char *)v65 + 24);
      sub_1BFE86E48(v69, v70, v71, v72);
      *uint64_t v64 = v69;
      v64[1] = v70;
      uint64_t v41 = v184;
      uint64_t v40 = v185;
      v64[2] = v71;
      *((unsigned char *)v64 + 24) = v72;
    }
    else
    {
      if (v67 == 1)
      {
        uint64_t v68 = v65[1];
        *uint64_t v64 = *v65;
        v64[1] = v68;
        v64[2] = v65[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v73 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v73 - 8) + 16))(v64, v65, v73);
        uint64_t v74 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v64 + *(int *)(v74 + 20)) = *(uint64_t *)((char *)v65 + *(int *)(v74 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v64, 0, 1, v6);
  }
  uint64_t v75 = a3[10];
  uint64_t v76 = (uint64_t *)(a1 + v75);
  uint64_t v77 = (uint64_t *)(a2 + v75);
  if (v41(a2 + v75, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
  }
  else
  {
    int v79 = swift_getEnumCaseMultiPayload();
    if (v79 == 2)
    {
      uint64_t v81 = *v77;
      uint64_t v82 = v77[1];
      uint64_t v83 = v77[2];
      char v84 = *((unsigned char *)v77 + 24);
      sub_1BFE86E48(v81, v82, v83, v84);
      *uint64_t v76 = v81;
      v76[1] = v82;
      uint64_t v41 = v184;
      uint64_t v40 = v185;
      v76[2] = v83;
      *((unsigned char *)v76 + 24) = v84;
    }
    else
    {
      if (v79 == 1)
      {
        uint64_t v80 = v77[1];
        *uint64_t v76 = *v77;
        v76[1] = v80;
        v76[2] = v77[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v85 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v85 - 8) + 16))(v76, v77, v85);
        uint64_t v86 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v76 + *(int *)(v86 + 20)) = *(uint64_t *)((char *)v77 + *(int *)(v86 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v76, 0, 1, v6);
  }
  uint64_t v87 = a3[11];
  uint64_t v88 = (uint64_t *)(a1 + v87);
  uint64_t v89 = (uint64_t *)(a2 + v87);
  if (v41(a2 + v87, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    int v91 = swift_getEnumCaseMultiPayload();
    if (v91 == 2)
    {
      uint64_t v93 = *v89;
      uint64_t v94 = v89[1];
      uint64_t v95 = v89[2];
      char v96 = *((unsigned char *)v89 + 24);
      sub_1BFE86E48(v93, v94, v95, v96);
      *uint64_t v88 = v93;
      v88[1] = v94;
      uint64_t v41 = v184;
      uint64_t v40 = v185;
      v88[2] = v95;
      *((unsigned char *)v88 + 24) = v96;
    }
    else
    {
      if (v91 == 1)
      {
        uint64_t v92 = v89[1];
        *uint64_t v88 = *v89;
        v88[1] = v92;
        v88[2] = v89[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v97 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v97 - 8) + 16))(v88, v89, v97);
        uint64_t v98 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v88 + *(int *)(v98 + 20)) = *(uint64_t *)((char *)v89 + *(int *)(v98 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v88, 0, 1, v6);
  }
  uint64_t v99 = a3[12];
  uint64_t v100 = (uint64_t *)(a1 + v99);
  int v101 = (uint64_t *)(a2 + v99);
  if (v41(a2 + v99, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    int v103 = swift_getEnumCaseMultiPayload();
    if (v103 == 2)
    {
      uint64_t v105 = *v101;
      uint64_t v106 = v101[1];
      uint64_t v107 = v101[2];
      char v108 = *((unsigned char *)v101 + 24);
      sub_1BFE86E48(v105, v106, v107, v108);
      *uint64_t v100 = v105;
      v100[1] = v106;
      uint64_t v41 = v184;
      uint64_t v40 = v185;
      v100[2] = v107;
      *((unsigned char *)v100 + 24) = v108;
    }
    else
    {
      if (v103 == 1)
      {
        uint64_t v104 = v101[1];
        *uint64_t v100 = *v101;
        v100[1] = v104;
        v100[2] = v101[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v109 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v109 - 8) + 16))(v100, v101, v109);
        uint64_t v110 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v100 + *(int *)(v110 + 20)) = *(uint64_t *)((char *)v101 + *(int *)(v110 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v100, 0, 1, v6);
  }
  uint64_t v111 = a3[13];
  uint64_t v112 = (uint64_t *)(a1 + v111);
  uint64_t v113 = (uint64_t *)(a2 + v111);
  if (v41(a2 + v111, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
  }
  else
  {
    int v115 = swift_getEnumCaseMultiPayload();
    if (v115 == 2)
    {
      uint64_t v117 = *v113;
      uint64_t v118 = v113[1];
      uint64_t v119 = v113[2];
      char v120 = *((unsigned char *)v113 + 24);
      sub_1BFE86E48(v117, v118, v119, v120);
      *uint64_t v112 = v117;
      v112[1] = v118;
      uint64_t v41 = v184;
      uint64_t v40 = v185;
      v112[2] = v119;
      *((unsigned char *)v112 + 24) = v120;
    }
    else
    {
      if (v115 == 1)
      {
        uint64_t v116 = v113[1];
        *uint64_t v112 = *v113;
        v112[1] = v116;
        v112[2] = v113[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v121 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v121 - 8) + 16))(v112, v113, v121);
        uint64_t v122 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v112 + *(int *)(v122 + 20)) = *(uint64_t *)((char *)v113 + *(int *)(v122 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v112, 0, 1, v6);
  }
  uint64_t v123 = a3[14];
  uint64_t v124 = (uint64_t *)(a1 + v123);
  uint64_t v125 = (uint64_t *)(a2 + v123);
  if (v41(a2 + v123, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
  }
  else
  {
    int v127 = swift_getEnumCaseMultiPayload();
    if (v127 == 2)
    {
      uint64_t v129 = *v125;
      uint64_t v130 = v125[1];
      uint64_t v131 = v125[2];
      char v132 = *((unsigned char *)v125 + 24);
      sub_1BFE86E48(v129, v130, v131, v132);
      uint64_t *v124 = v129;
      v124[1] = v130;
      uint64_t v41 = v184;
      uint64_t v40 = v185;
      v124[2] = v131;
      *((unsigned char *)v124 + 24) = v132;
    }
    else
    {
      if (v127 == 1)
      {
        uint64_t v128 = v125[1];
        uint64_t *v124 = *v125;
        v124[1] = v128;
        v124[2] = v125[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v133 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v133 - 8) + 16))(v124, v125, v133);
        uint64_t v134 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v124 + *(int *)(v134 + 20)) = *(uint64_t *)((char *)v125 + *(int *)(v134 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v124, 0, 1, v6);
  }
  uint64_t v135 = a3[15];
  uint64_t v136 = (uint64_t *)(a1 + v135);
  v137 = (uint64_t *)(a2 + v135);
  if (v41(a2 + v135, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
  }
  else
  {
    int v139 = swift_getEnumCaseMultiPayload();
    if (v139 == 2)
    {
      uint64_t v141 = *v137;
      uint64_t v142 = v137[1];
      uint64_t v143 = v137[2];
      char v144 = *((unsigned char *)v137 + 24);
      sub_1BFE86E48(v141, v142, v143, v144);
      *uint64_t v136 = v141;
      v136[1] = v142;
      uint64_t v41 = v184;
      uint64_t v40 = v185;
      v136[2] = v143;
      *((unsigned char *)v136 + 24) = v144;
    }
    else
    {
      if (v139 == 1)
      {
        uint64_t v140 = v137[1];
        *uint64_t v136 = *v137;
        v136[1] = v140;
        v136[2] = v137[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v145 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v145 - 8) + 16))(v136, v137, v145);
        uint64_t v146 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v136 + *(int *)(v146 + 20)) = *(uint64_t *)((char *)v137 + *(int *)(v146 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v136, 0, 1, v6);
  }
  uint64_t v147 = a3[16];
  v148 = (uint64_t *)(a1 + v147);
  v149 = (uint64_t *)(a2 + v147);
  if (v41(a2 + v147, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v148, v149, *(void *)(*(void *)(v150 - 8) + 64));
  }
  else
  {
    int v151 = swift_getEnumCaseMultiPayload();
    if (v151 == 2)
    {
      uint64_t v153 = *v149;
      uint64_t v154 = v149[1];
      uint64_t v155 = v149[2];
      char v156 = *((unsigned char *)v149 + 24);
      sub_1BFE86E48(v153, v154, v155, v156);
      uint64_t *v148 = v153;
      v148[1] = v154;
      uint64_t v41 = v184;
      uint64_t v40 = v185;
      v148[2] = v155;
      *((unsigned char *)v148 + 24) = v156;
    }
    else
    {
      if (v151 == 1)
      {
        uint64_t v152 = v149[1];
        uint64_t *v148 = *v149;
        v148[1] = v152;
        v148[2] = v149[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v157 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v157 - 8) + 16))(v148, v149, v157);
        uint64_t v158 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v148 + *(int *)(v158 + 20)) = *(uint64_t *)((char *)v149 + *(int *)(v158 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v148, 0, 1, v6);
  }
  uint64_t v159 = a3[17];
  v160 = (uint64_t *)(a1 + v159);
  v161 = (uint64_t *)(a2 + v159);
  if (v41(a2 + v159, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v160, v161, *(void *)(*(void *)(v162 - 8) + 64));
  }
  else
  {
    int v163 = swift_getEnumCaseMultiPayload();
    if (v163 == 2)
    {
      uint64_t v165 = *v161;
      uint64_t v166 = v161[1];
      uint64_t v167 = v161[2];
      char v168 = *((unsigned char *)v161 + 24);
      sub_1BFE86E48(v165, v166, v167, v168);
      uint64_t *v160 = v165;
      v160[1] = v166;
      uint64_t v41 = v184;
      uint64_t v40 = v185;
      v160[2] = v167;
      *((unsigned char *)v160 + 24) = v168;
    }
    else
    {
      if (v163 == 1)
      {
        uint64_t v164 = v161[1];
        uint64_t *v160 = *v161;
        v160[1] = v164;
        v160[2] = v161[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v169 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v169 - 8) + 16))(v160, v161, v169);
        uint64_t v170 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v160 + *(int *)(v170 + 20)) = *(uint64_t *)((char *)v161 + *(int *)(v170 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v160, 0, 1, v6);
  }
  uint64_t v171 = a3[18];
  v172 = (uint64_t *)(a1 + v171);
  v173 = (uint64_t *)(a2 + v171);
  if (v41(v173, 1, v6))
  {
    sub_1BFE8568C(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
    memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
  }
  else
  {
    int v175 = swift_getEnumCaseMultiPayload();
    if (v175 == 2)
    {
      uint64_t v177 = *v173;
      uint64_t v178 = v173[1];
      uint64_t v179 = v173[2];
      char v180 = *((unsigned char *)v173 + 24);
      sub_1BFE86E48(v177, v178, v179, v180);
      uint64_t *v172 = v177;
      v172[1] = v178;
      v172[2] = v179;
      *((unsigned char *)v172 + 24) = v180;
    }
    else
    {
      if (v175 == 1)
      {
        uint64_t v176 = v173[1];
        uint64_t *v172 = *v173;
        v172[1] = v176;
        v172[2] = v173[2];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v181 = sub_1C1515FDC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v181 - 8) + 16))(v172, v173, v181);
        uint64_t v182 = type metadata accessor for FormatAbsoluteURL();
        *(uint64_t *)((char *)v172 + *(int *)(v182 + 20)) = *(uint64_t *)((char *)v173 + *(int *)(v182 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v40 + 56))(v172, 0, 1, v6);
  }
  return a1;
}

void sub_1BFE85638(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE8568C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t initializeWithCopy for FormatResource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for FormatURL();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v20 = *(void *)a2;
      uint64_t v21 = *(void *)(a2 + 8);
      uint64_t v22 = *(void *)(a2 + 16);
      char v23 = *(unsigned char *)(a2 + 24);
      sub_1BFE86E48(*(void *)a2, v21, v22, v23);
      *(void *)uint64_t v3 = v20;
      *(void *)(v3 + 8) = v21;
      *(void *)(v3 + 16) = v22;
      *(unsigned char *)(v3 + 24) = v23;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v6 = *(void *)(a2 + 8);
        *(void *)uint64_t v3 = *(void *)a2;
        *(void *)(v3 + 8) = v6;
        *(void *)(v3 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v24 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v3, a2, v24);
        uint64_t v25 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v3 + *(int *)(v25 + 20)) = *(void *)(a2 + *(int *)(v25 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = (int *)type metadata accessor for FormatRemoteImage();
    uint64_t v27 = v26[5];
    uint64_t v28 = v3 + v27;
    uint64_t v29 = a2 + v27;
    int v30 = swift_getEnumCaseMultiPayload();
    if (v30 == 2)
    {
      uint64_t v32 = *(void *)v29;
      uint64_t v33 = *(void *)(v29 + 8);
      uint64_t v34 = *(void *)(v29 + 16);
      char v35 = *(unsigned char *)(v29 + 24);
      sub_1BFE86E48(v32, v33, v34, v35);
      *(void *)uint64_t v28 = v32;
      *(void *)(v28 + 8) = v33;
      *(void *)(v28 + 16) = v34;
      uint64_t v3 = a1;
      *(unsigned char *)(v28 + 24) = v35;
    }
    else
    {
      if (v30 == 1)
      {
        uint64_t v31 = *(void *)(v29 + 8);
        *(void *)uint64_t v28 = *(void *)v29;
        *(void *)(v28 + 8) = v31;
        *(void *)(v28 + 16) = *(void *)(v29 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v36 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v28, v29, v36);
        uint64_t v37 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v28 + *(int *)(v37 + 20)) = *(void *)(v29 + *(int *)(v37 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = v26[6];
    uint64_t v39 = v3 + v38;
    uint64_t v40 = a2 + v38;
    int v41 = swift_getEnumCaseMultiPayload();
    if (v41 == 2)
    {
      uint64_t v43 = *(void *)v40;
      uint64_t v44 = *(void *)(v40 + 8);
      uint64_t v45 = *(void *)(v40 + 16);
      char v46 = *(unsigned char *)(v40 + 24);
      sub_1BFE86E48(v43, v44, v45, v46);
      *(void *)uint64_t v39 = v43;
      *(void *)(v39 + 8) = v44;
      *(void *)(v39 + 16) = v45;
      uint64_t v3 = a1;
      *(unsigned char *)(v39 + 24) = v46;
    }
    else
    {
      if (v41 == 1)
      {
        uint64_t v42 = *(void *)(v40 + 8);
        *(void *)uint64_t v39 = *(void *)v40;
        *(void *)(v39 + 8) = v42;
        *(void *)(v39 + 16) = *(void *)(v40 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v47 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v39, v40, v47);
        uint64_t v48 = type metadata accessor for FormatAbsoluteURL();
        *(void *)(v39 + *(int *)(v48 + 20)) = *(void *)(v40 + *(int *)(v48 + 20));
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = v26[7];
    uint64_t v50 = (uint64_t *)(v3 + v49);
    uint64_t v51 = (uint64_t *)(a2 + v49);
    uint64_t v205 = *(void *)(v4 - 8);
    uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v205 + 48);
    if (v52(a2 + v49, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v50, v51, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      int v54 = swift_getEnumCaseMultiPayload();
      if (v54 == 2)
      {
        uint64_t v65 = *v51;
        uint64_t v66 = v51[1];
        uint64_t v67 = v51[2];
        char v68 = *((unsigned char *)v51 + 24);
        sub_1BFE86E48(v65, v66, v67, v68);
        *uint64_t v50 = v65;
        v50[1] = v66;
        v50[2] = v67;
        uint64_t v3 = a1;
        *((unsigned char *)v50 + 24) = v68;
      }
      else
      {
        if (v54 == 1)
        {
          uint64_t v55 = v51[1];
          *uint64_t v50 = *v51;
          v50[1] = v55;
          v50[2] = v51[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v69 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v69 - 8) + 16))(v50, v51, v69);
          uint64_t v70 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v50 + *(int *)(v70 + 20)) = *(uint64_t *)((char *)v51 + *(int *)(v70 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v50, 0, 1, v4);
    }
    uint64_t v71 = v26[8];
    char v72 = (uint64_t *)(v3 + v71);
    uint64_t v73 = (uint64_t *)(a2 + v71);
    if (v52(a2 + v71, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      int v75 = swift_getEnumCaseMultiPayload();
      if (v75 == 2)
      {
        uint64_t v77 = *v73;
        uint64_t v78 = v73[1];
        uint64_t v79 = v73[2];
        char v80 = *((unsigned char *)v73 + 24);
        sub_1BFE86E48(v77, v78, v79, v80);
        *char v72 = v77;
        v72[1] = v78;
        v72[2] = v79;
        uint64_t v3 = a1;
        *((unsigned char *)v72 + 24) = v80;
      }
      else
      {
        if (v75 == 1)
        {
          uint64_t v76 = v73[1];
          *char v72 = *v73;
          v72[1] = v76;
          v72[2] = v73[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v81 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v81 - 8) + 16))(v72, v73, v81);
          uint64_t v82 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v72 + *(int *)(v82 + 20)) = *(uint64_t *)((char *)v73 + *(int *)(v82 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v72, 0, 1, v4);
    }
    uint64_t v83 = v26[9];
    char v84 = (uint64_t *)(v3 + v83);
    uint64_t v85 = (uint64_t *)(a2 + v83);
    if (v52(a2 + v83, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
    }
    else
    {
      int v87 = swift_getEnumCaseMultiPayload();
      if (v87 == 2)
      {
        uint64_t v89 = *v85;
        uint64_t v90 = v85[1];
        uint64_t v91 = v85[2];
        char v92 = *((unsigned char *)v85 + 24);
        sub_1BFE86E48(v89, v90, v91, v92);
        *char v84 = v89;
        v84[1] = v90;
        v84[2] = v91;
        uint64_t v3 = a1;
        *((unsigned char *)v84 + 24) = v92;
      }
      else
      {
        if (v87 == 1)
        {
          uint64_t v88 = v85[1];
          *char v84 = *v85;
          v84[1] = v88;
          v84[2] = v85[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v93 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v93 - 8) + 16))(v84, v85, v93);
          uint64_t v94 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v84 + *(int *)(v94 + 20)) = *(uint64_t *)((char *)v85 + *(int *)(v94 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v84, 0, 1, v4);
    }
    uint64_t v95 = v26[10];
    char v96 = (uint64_t *)(v3 + v95);
    uint64_t v97 = (uint64_t *)(a2 + v95);
    if (v52(a2 + v95, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      int v99 = swift_getEnumCaseMultiPayload();
      if (v99 == 2)
      {
        uint64_t v101 = *v97;
        uint64_t v102 = v97[1];
        uint64_t v103 = v97[2];
        char v104 = *((unsigned char *)v97 + 24);
        sub_1BFE86E48(v101, v102, v103, v104);
        *char v96 = v101;
        v96[1] = v102;
        _OWORD v96[2] = v103;
        uint64_t v3 = a1;
        *((unsigned char *)v96 + 24) = v104;
      }
      else
      {
        if (v99 == 1)
        {
          uint64_t v100 = v97[1];
          *char v96 = *v97;
          v96[1] = v100;
          _OWORD v96[2] = v97[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v105 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v105 - 8) + 16))(v96, v97, v105);
          uint64_t v106 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v96 + *(int *)(v106 + 20)) = *(uint64_t *)((char *)v97 + *(int *)(v106 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v96, 0, 1, v4);
    }
    uint64_t v107 = v26[11];
    char v108 = (uint64_t *)(v3 + v107);
    uint64_t v109 = (uint64_t *)(a2 + v107);
    if (v52(a2 + v107, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v108, v109, *(void *)(*(void *)(v110 - 8) + 64));
    }
    else
    {
      int v111 = swift_getEnumCaseMultiPayload();
      if (v111 == 2)
      {
        uint64_t v113 = *v109;
        uint64_t v114 = v109[1];
        uint64_t v115 = v109[2];
        char v116 = *((unsigned char *)v109 + 24);
        sub_1BFE86E48(v113, v114, v115, v116);
        *char v108 = v113;
        v108[1] = v114;
        v108[2] = v115;
        uint64_t v3 = a1;
        *((unsigned char *)v108 + 24) = v116;
      }
      else
      {
        if (v111 == 1)
        {
          uint64_t v112 = v109[1];
          *char v108 = *v109;
          v108[1] = v112;
          v108[2] = v109[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v117 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v117 - 8) + 16))(v108, v109, v117);
          uint64_t v118 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v108 + *(int *)(v118 + 20)) = *(uint64_t *)((char *)v109 + *(int *)(v118 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v108, 0, 1, v4);
    }
    uint64_t v119 = v26[12];
    char v120 = (uint64_t *)(v3 + v119);
    uint64_t v121 = (uint64_t *)(a2 + v119);
    if (v52(a2 + v119, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v120, v121, *(void *)(*(void *)(v122 - 8) + 64));
    }
    else
    {
      int v123 = swift_getEnumCaseMultiPayload();
      if (v123 == 2)
      {
        uint64_t v125 = *v121;
        uint64_t v126 = v121[1];
        uint64_t v127 = v121[2];
        char v128 = *((unsigned char *)v121 + 24);
        sub_1BFE86E48(v125, v126, v127, v128);
        *char v120 = v125;
        v120[1] = v126;
        v120[2] = v127;
        uint64_t v3 = a1;
        *((unsigned char *)v120 + 24) = v128;
      }
      else
      {
        if (v123 == 1)
        {
          uint64_t v124 = v121[1];
          *char v120 = *v121;
          v120[1] = v124;
          v120[2] = v121[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v129 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v129 - 8) + 16))(v120, v121, v129);
          uint64_t v130 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v120 + *(int *)(v130 + 20)) = *(uint64_t *)((char *)v121 + *(int *)(v130 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v120, 0, 1, v4);
    }
    uint64_t v131 = v26[13];
    char v132 = (uint64_t *)(v3 + v131);
    uint64_t v133 = (uint64_t *)(a2 + v131);
    if (v52(a2 + v131, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      int v135 = swift_getEnumCaseMultiPayload();
      if (v135 == 2)
      {
        uint64_t v137 = *v133;
        uint64_t v138 = v133[1];
        uint64_t v139 = v133[2];
        char v140 = *((unsigned char *)v133 + 24);
        sub_1BFE86E48(v137, v138, v139, v140);
        uint64_t *v132 = v137;
        v132[1] = v138;
        v132[2] = v139;
        uint64_t v3 = a1;
        *((unsigned char *)v132 + 24) = v140;
      }
      else
      {
        if (v135 == 1)
        {
          uint64_t v136 = v133[1];
          uint64_t *v132 = *v133;
          v132[1] = v136;
          v132[2] = v133[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v141 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v141 - 8) + 16))(v132, v133, v141);
          uint64_t v142 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v132 + *(int *)(v142 + 20)) = *(uint64_t *)((char *)v133 + *(int *)(v142 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v132, 0, 1, v4);
    }
    uint64_t v143 = v26[14];
    char v144 = (uint64_t *)(v3 + v143);
    uint64_t v145 = (uint64_t *)(a2 + v143);
    if (v52(a2 + v143, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
    }
    else
    {
      int v147 = swift_getEnumCaseMultiPayload();
      if (v147 == 2)
      {
        uint64_t v149 = *v145;
        uint64_t v150 = v145[1];
        uint64_t v151 = v145[2];
        char v152 = *((unsigned char *)v145 + 24);
        sub_1BFE86E48(v149, v150, v151, v152);
        *char v144 = v149;
        v144[1] = v150;
        v144[2] = v151;
        uint64_t v3 = a1;
        *((unsigned char *)v144 + 24) = v152;
      }
      else
      {
        if (v147 == 1)
        {
          uint64_t v148 = v145[1];
          *char v144 = *v145;
          v144[1] = v148;
          v144[2] = v145[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v153 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v153 - 8) + 16))(v144, v145, v153);
          uint64_t v154 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v144 + *(int *)(v154 + 20)) = *(uint64_t *)((char *)v145 + *(int *)(v154 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v144, 0, 1, v4);
    }
    uint64_t v155 = v26[15];
    char v156 = (uint64_t *)(v3 + v155);
    uint64_t v157 = (uint64_t *)(a2 + v155);
    if (v52(a2 + v155, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
    }
    else
    {
      int v159 = swift_getEnumCaseMultiPayload();
      if (v159 == 2)
      {
        uint64_t v161 = *v157;
        uint64_t v162 = v157[1];
        uint64_t v163 = v157[2];
        char v164 = *((unsigned char *)v157 + 24);
        sub_1BFE86E48(v161, v162, v163, v164);
        *char v156 = v161;
        v156[1] = v162;
        v156[2] = v163;
        uint64_t v3 = a1;
        *((unsigned char *)v156 + 24) = v164;
      }
      else
      {
        if (v159 == 1)
        {
          uint64_t v160 = v157[1];
          *char v156 = *v157;
          v156[1] = v160;
          v156[2] = v157[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v165 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v165 - 8) + 16))(v156, v157, v165);
          uint64_t v166 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v156 + *(int *)(v166 + 20)) = *(uint64_t *)((char *)v157 + *(int *)(v166 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v156, 0, 1, v4);
    }
    uint64_t v167 = v26[16];
    char v168 = (uint64_t *)(v3 + v167);
    uint64_t v169 = (uint64_t *)(a2 + v167);
    if (v52(a2 + v167, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v168, v169, *(void *)(*(void *)(v170 - 8) + 64));
    }
    else
    {
      int v171 = swift_getEnumCaseMultiPayload();
      if (v171 == 2)
      {
        uint64_t v173 = *v169;
        uint64_t v174 = v169[1];
        uint64_t v175 = v169[2];
        char v176 = *((unsigned char *)v169 + 24);
        sub_1BFE86E48(v173, v174, v175, v176);
        *char v168 = v173;
        v168[1] = v174;
        v168[2] = v175;
        uint64_t v3 = a1;
        *((unsigned char *)v168 + 24) = v176;
      }
      else
      {
        if (v171 == 1)
        {
          uint64_t v172 = v169[1];
          *char v168 = *v169;
          v168[1] = v172;
          v168[2] = v169[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v177 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v177 - 8) + 16))(v168, v169, v177);
          uint64_t v178 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v168 + *(int *)(v178 + 20)) = *(uint64_t *)((char *)v169 + *(int *)(v178 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v168, 0, 1, v4);
    }
    uint64_t v179 = v26[17];
    char v180 = (uint64_t *)(v3 + v179);
    uint64_t v181 = (uint64_t *)(a2 + v179);
    if (v52(a2 + v179, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v180, v181, *(void *)(*(void *)(v182 - 8) + 64));
    }
    else
    {
      int v183 = swift_getEnumCaseMultiPayload();
      if (v183 == 2)
      {
        uint64_t v185 = *v181;
        uint64_t v186 = v181[1];
        uint64_t v187 = v181[2];
        char v188 = *((unsigned char *)v181 + 24);
        sub_1BFE86E48(v185, v186, v187, v188);
        *char v180 = v185;
        v180[1] = v186;
        v180[2] = v187;
        uint64_t v3 = a1;
        *((unsigned char *)v180 + 24) = v188;
      }
      else
      {
        if (v183 == 1)
        {
          uint64_t v184 = v181[1];
          *char v180 = *v181;
          v180[1] = v184;
          v180[2] = v181[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v189 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v189 - 8) + 16))(v180, v181, v189);
          uint64_t v190 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v180 + *(int *)(v190 + 20)) = *(uint64_t *)((char *)v181 + *(int *)(v190 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v180, 0, 1, v4);
    }
    uint64_t v191 = v26[18];
    v192 = (uint64_t *)(v3 + v191);
    v193 = (uint64_t *)(a2 + v191);
    if (v52((uint64_t)v193, 1, v4))
    {
      sub_1BFF2EBC0(0, (unint64_t *)&qword_1EB879A70, (void (*)(uint64_t))type metadata accessor for FormatURL);
      memcpy(v192, v193, *(void *)(*(void *)(v194 - 8) + 64));
    }
    else
    {
      int v195 = swift_getEnumCaseMultiPayload();
      if (v195 == 2)
      {
        uint64_t v197 = *v193;
        uint64_t v198 = v193[1];
        uint64_t v199 = v193[2];
        char v200 = *((unsigned char *)v193 + 24);
        sub_1BFE86E48(v197, v198, v199, v200);
        uint64_t *v192 = v197;
        v192[1] = v198;
        v192[2] = v199;
        *((unsigned char *)v192 + 24) = v200;
      }
      else
      {
        if (v195 == 1)
        {
          uint64_t v196 = v193[1];
          uint64_t *v192 = *v193;
          v192[1] = v196;
          v192[2] = v193[2];
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v201 = sub_1C1515FDC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v201 - 8) + 16))(v192, v193, v201);
          uint64_t v202 = type metadata accessor for FormatAbsoluteURL();
          *(uint64_t *)((char *)v192 + *(int *)(v202 + 20)) = *(uint64_t *)((char *)v193 + *(int *)(v202 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v205 + 56))(v192, 0, 1, v4);
    }
  }
  else
  {
    type metadata accessor for FormatFontResource(0);
    int v7 = swift_getEnumCaseMultiPayload();
    uint64_t v8 = *(void *)a2;
    if (v7 == 1)
    {
      uint64_t v9 = *(void *)(a2 + 8);
      uint64_t v10 = *(void *)(a2 + 16);
      char v11 = *(unsigned char *)(a2 + 24);
      sub_1BFF67F78(v8, v9, v10, v11);
      *(void *)uint64_t v3 = v8;
      *(void *)(v3 + 8) = v9;
      *(void *)(v3 + 16) = v10;
      *(unsigned char *)(v3 + 24) = v11;
    }
    else
    {
      char v12 = (uint64_t *)v3;
      uint64_t v13 = *(void *)(a2 + 8);
      *char v12 = v8;
      v12[1] = v13;
      uint64_t v14 = (int *)type metadata accessor for FormatRemoteFont();
      uint64_t v15 = v14[5];
      uint64_t v16 = (char *)v12 + v15;
      uint64_t v17 = a2 + v15;
      type metadata accessor for FormatURL();
      swift_bridgeObjectRetain();
      int v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 2)
      {
        uint64_t v57 = *(void *)v17;
        uint64_t v56 = *(void *)(v17 + 8);
        uint64_t v58 = *(void *)(v17 + 16);
        char v59 = *(unsigned char *)(v17 + 24);
        sub_1BFE86E48(v57, v56, v58, v59);
        *(void *)uint64_t v16 = v57;
        *((void *)v16 + 1) = v56;
        *((void *)v16 + 2) = v58;
        v16[24] = v59;
      }
      else
      {
        if (v18 == 1)
        {
          uint64_t v19 = *(void *)(v17 + 8);
          *(void *)uint64_t v16 = *(void *)v17;
          *((void *)v16 + 1) = v19;
          *((void *)v16 + 2) = *(void *)(v17 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v60 = sub_1C1515FDC();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 16))(v16, v17, v60);
          uint64_t v61 = type metadata accessor for FormatAbsoluteURL();
          *(void *)&v16[*(int *)(v61 + 20)] = *(void *)(v17 + *(int *)(v61 + 20));
        }
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v3 = a1;
      *(void *)(a1 + v14[6]) = *(void *)(a2 + v14[6]);
      uint64_t v62 = v14[7];
      uint64_t v63 = a1 + v62;
      uint64_t v64 = a2 + v62;
      *(void *)uint64_t v63 = *(void *)v64;
      *(_WORD *)(v63 + 8) = *(_WORD *)(v64 + 8);
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return v3;
}

uint64_t sub_1BFE86E48(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (!a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFE86E90(uint64_t a1, uint64_t a2)
{
  sub_1C08FC718(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFE86F20(uint64_t a1)
{
  sub_1C08FC718(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFE86FA8(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD24C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8717C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1BFE83B60();
    sub_1C085F050(&qword_1EB869310, (void (*)(uint64_t))sub_1BFE83B60);
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE8717C()
{
  unint64_t result = qword_1EB867018;
  if (!qword_1EB867018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB867018);
  }
  return result;
}

unint64_t sub_1BFE871D0()
{
  unint64_t result = qword_1EB86B0D0;
  if (!qword_1EB86B0D0)
  {
    sub_1BFE9DEBC(255, &qword_1EB86B0C8, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, MEMORY[0x1E4FBB320]);
    sub_1C0078C1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B0D0);
  }
  return result;
}

uint64_t sub_1BFE87264(uint64_t a1)
{
  sub_1C08FC718(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BFE872EC()
{
  unint64_t result = qword_1EB88DED8;
  if (!qword_1EB88DED8)
  {
    sub_1C08FC718(255, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88DED8);
  }
  return result;
}

uint64_t sub_1BFE87370(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD24C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8717C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FC718(0, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1BFE87540();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE87540()
{
  unint64_t result = qword_1EB869330;
  if (!qword_1EB869330)
  {
    sub_1C08FC718(255, &qword_1EB88DEE0, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869330);
  }
  return result;
}

uint64_t sub_1BFE875C4(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD24C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8717C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    sub_1C08FC718(0, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    sub_1BFE87818();
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE87794()
{
  unint64_t result = qword_1EB88DEE8;
  if (!qword_1EB88DEE8)
  {
    sub_1C08FC718(255, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88DEE8);
  }
  return result;
}

unint64_t sub_1BFE87818()
{
  unint64_t result = qword_1EB869338;
  if (!qword_1EB869338)
  {
    sub_1C08FC718(255, (unint64_t *)&unk_1EB88DEF0, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB869338);
  }
  return result;
}

uint64_t sub_1BFE8789C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  int v75 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v74 = (char *)&v72 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v76 = (char *)&v72 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v77 = (char *)&v72 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v78 = (char *)&v72 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v79 = (char *)&v72 - v15;
  MEMORY[0x1F4188790](v16);
  char v80 = (uint64_t *)((char *)&v72 - v17);
  MEMORY[0x1F4188790](v18);
  uint64_t v81 = (char *)&v72 - v19;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v72 - v21;
  sub_1C08E5B4C();
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BFF71970(0, &qword_1EB88E9C8, MEMORY[0x1E4FBB390], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatPrimitivePropertyDefinition);
  uint64_t v29 = v28;
  sub_1C08E5C74();
  uint64_t v31 = v30;
  uint64_t v32 = sub_1BFF8784C(&qword_1EB8923C0, (void (*)(uint64_t))sub_1C08E5C74);
  uint64_t v73 = v29;
  sub_1BFEFBD78(v29, v33, v26, v29, v31, (uint64_t)&type metadata for FormatVersions.JazzkonC, v27, (uint64_t)v25, v32, (uint64_t)&off_1F1C39B68);
  uint64_t v34 = *v2;
  uint64_t v35 = v2[1];
  uint64_t v36 = v2;
  uint64_t v37 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = sub_1C151928C();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CAB0);
  uint64_t v40 = *(void *)(v38 - 8);
  int v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
  uint64_t v42 = (char *)(v40 + 16);
  v41(v22, v39, v38);
  uint64_t v82 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = v83;
  sub_1C06B36B8(v34, v35, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1C01B158C, 0);
  if (v43)
  {
    sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E5B4C);
  }
  sub_1C0BF0490((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v44 = v36[2];
  uint64_t v45 = v36[3];
  uint64_t v46 = v39;
  uint64_t v47 = (uint64_t)v81;
  uint64_t v83 = v46;
  ((void (*)(char *))v41)(v81);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B36B8(v44, v45, 1, 0, 0, v47, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v47, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v49 = v36[4];
  uint64_t v50 = v36[5];
  uint64_t v51 = v41;
  uint64_t v52 = v25;
  uint64_t v53 = (uint64_t)v80;
  int v54 = v51;
  v51((char *)v80, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B36B8(v49, v50, 2, 0, 0, v53, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v53, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v55 = v36[6];
  uint64_t v56 = v36[7];
  uint64_t v57 = (uint64_t)v79;
  uint64_t v81 = v42;
  v54(v79, v83, v38);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C06B36B8(v55, v56, 3, 0, 0, v57, (uint64_t)sub_1C01B158C, 0);
  uint64_t v25 = v52;
  sub_1C0BF0490(v57, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  LOBYTE(v55) = *((unsigned char *)v36 + 64);
  uint64_t v58 = (uint64_t)v78;
  v54(v78, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06B384C(v55, 4, 0, 0, v58, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v58, type metadata accessor for FormatVersionRequirement);
  uint64_t v59 = (uint64_t)v77;
  v54(v77, v83, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F9500(*((unsigned char *)v36 + 65), 5, 0, 0, v59, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v59, type metadata accessor for FormatVersionRequirement);
  uint64_t v60 = v54;
  uint64_t v83 = 0;
  int v61 = *((unsigned __int8 *)v36 + 66);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v62 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA98);
  uint64_t v63 = (uint64_t)v76;
  v54(v76, v62, v38);
  swift_storeEnumTagMultiPayload();
  if (v61)
  {
    uint64_t v64 = v83;
    char v65 = sub_1C0831A8C(v63, 6, 0, 0, (uint64_t)sub_1C01B158C, 0);
    if (v64)
    {
LABEL_11:
      sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
      return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E5B4C);
    }
    uint64_t v83 = 0;
    if (v65)
    {
      long long v84 = xmmword_1C1557FE0;
      char v85 = 0;
      char v86 = 1;
      sub_1C08E5BE0();
      sub_1BFF8784C(&qword_1EB86EAA0, (void (*)(uint64_t))sub_1C08E5BE0);
      uint64_t v66 = v83;
      sub_1C1520BAC();
      if (v66) {
        goto LABEL_11;
      }
      uint64_t v83 = 0;
    }
  }
  sub_1C0BF0490(v63, type metadata accessor for FormatVersionRequirement);
  uint64_t v67 = qword_1EB887628;
  swift_bridgeObjectRetain();
  char v80 = v36;
  if (v67 != -1) {
    swift_once();
  }
  uint64_t v68 = __swift_project_value_buffer(v38, (uint64_t)qword_1EB93CA68);
  uint64_t v69 = (uint64_t)v74;
  v60(v74, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C0BF0490(v69, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  uint64_t v70 = (uint64_t)v80 + *(int *)(v73 + 64);
  uint64_t v71 = (uint64_t)v75;
  v60(v75, v68, v38);
  swift_storeEnumTagMultiPayload();
  sub_1C06F9724(v70, 8, 0, 0, v71, (uint64_t)sub_1C01B158C, 0);
  sub_1C0BF0490(v71, type metadata accessor for FormatVersionRequirement);
  return sub_1C0BF0490((uint64_t)v25, (uint64_t (*)(void))sub_1C08E5B4C);
}

void *initializeWithCopy for FormatSlotItemCountLimit(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    a1[8] = a2[8];
    uint64_t v10 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = sub_1C1518CDC();
    uint64_t v15 = *(void *)(v12 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v11, 1, v12))
    {
      sub_1BFE79D20(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
      memcpy(__dst, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1BFE884EC(char a1, uint64_t a2, uint64_t a3)
{
  char v16 = a1;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08FD24C;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8717C();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatCompilerEnumProperty(0);
    sub_1C085F050(&qword_1EB8608E8, (void (*)(uint64_t))type metadata accessor for FormatCompilerEnumProperty);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t destroy for FormatEnumPropertyDefinition(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 56);
  uint64_t v5 = sub_1C1518CDC();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t sub_1BFE887C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BFE887F4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1BFE887F4(void *a1)
{
  sub_1BFE893AC();
  uint64_t v64 = v2;
  uint64_t v58 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v61 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE8928C();
  uint64_t v63 = v4;
  uint64_t v59 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v62 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE89214();
  uint64_t v7 = v6;
  uint64_t v60 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C08EFFE4();
  uint64_t v11 = v10;
  *(void *)&long long v65 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08B46B0();
  sub_1C085F050(&qword_1EB891C80, (void (*)(uint64_t))sub_1C08B46B0);
  long long v15 = (void *)v66;
  sub_1C1520EBC();
  char v16 = v15;
  if (v15)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v14;
  }
  *(void *)&long long v66 = v9;
  uint64_t v17 = v65;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = sub_1C1520EAC();
  char v19 = Dictionary<>.errorOnUnknownKeys.getter(v18);
  swift_bridgeObjectRelease();
  uint64_t v20 = v13;
  if (v19)
  {
    uint64_t v21 = sub_1C152070C();
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      uint64_t v23 = (unsigned char *)(v21 + 48);
      while (*v23 != 1)
      {
        v23 += 24;
        if (!--v22) {
          goto LABEL_7;
        }
      }
      uint64_t v14 = *((void *)v23 - 2);
      uint64_t v28 = *((void *)v23 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v29 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v29);
      *(void *)&long long v66 = v13;
      sub_1C08B4734();
      sub_1BFE89358();
      sub_1C08B4788();
      swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B69FA8);
      swift_release_n();
      sub_1C02570B4();
      char v16 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v14;
      *(void *)(v31 + 8) = v28;
      *(void *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v14, v28, 1);
      (*(void (**)(void, uint64_t))(v17 + 8))(v66, v11);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = sub_1C07F0DDC((uint64_t)v13, 0, 0, 0, (void (*)(void, __n128))sub_1C08EFFE4);
  uint64_t v26 = v25;
  uint64_t v57 = v24;
  long long v69 = xmmword_1C153AB20;
  char v70 = 0;
  uint64_t v27 = sub_1C152069C();
  uint64_t v33 = v32;
  uint64_t v56 = v27;
  long long v69 = xmmword_1C1557FA0;
  char v70 = 0;
  uint64_t v53 = sub_1C152060C();
  uint64_t v54 = v33;
  uint64_t v55 = v35;
  long long v69 = xmmword_1C1557FB0;
  char v70 = 0;
  uint64_t v36 = sub_1C152060C();
  uint64_t v52 = v37;
  long long v51 = xmmword_1C1557FD0;
  long long v69 = xmmword_1C1557FD0;
  char v70 = 0;
  char v38 = sub_1C152071C();
  if (v38)
  {
    uint64_t v50 = v36;
    long long v67 = v51;
    char v68 = 0;
    sub_1C085F050(&qword_1EB87C6E0, (void (*)(uint64_t))sub_1BFE89214);
    uint64_t v39 = v7;
    sub_1C15206EC();
    uint64_t v40 = v66;
    uint64_t v41 = sub_1C1517E5C();
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v40, v39);
    uint64_t v36 = v50;
  }
  else
  {
    uint64_t v41 = MEMORY[0x1E4FBC870];
  }
  long long v66 = xmmword_1C1557FC0;
  long long v69 = xmmword_1C1557FC0;
  char v70 = 0;
  if (sub_1C152071C())
  {
    *(void *)&long long v51 = v41;
    uint64_t v50 = v36;
    long long v67 = v66;
    char v68 = 0;
    sub_1C085F050(&qword_1EB87C728, (void (*)(uint64_t))sub_1BFE8928C);
    uint64_t v43 = v62;
    uint64_t v42 = v63;
    sub_1C15206EC();
    uint64_t v60 = v26;
    *(void *)&long long v66 = a1;
    uint64_t v44 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v42);
    uint64_t v36 = v50;
    uint64_t v17 = v65;
    uint64_t v41 = v51;
  }
  else
  {
    uint64_t v60 = v26;
    *(void *)&long long v66 = a1;
    uint64_t v44 = MEMORY[0x1E4FBC860];
  }
  long long v65 = xmmword_1C1557FE0;
  long long v69 = xmmword_1C1557FE0;
  char v70 = 0;
  char v45 = sub_1C152071C();
  uint64_t v46 = v64;
  if (v45)
  {
    uint64_t v63 = v44;
    long long v67 = v65;
    char v68 = 0;
    sub_1C085F050(&qword_1EB87C718, (void (*)(uint64_t))sub_1BFE893AC);
    uint64_t v47 = v61;
    sub_1C15206EC();
    uint64_t v48 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v46);
    uint64_t v44 = v63;
  }
  else
  {
    uint64_t v48 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for FormatSnippetNode();
  swift_allocObject();
  uint64_t v14 = FormatSnippetNode.init(identifier:snippetIdentifier:name:description:selectors:options:blocks:)(v57, v60, v56, v54, v53, v55, v36, v52, v41, v44, v48);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v11);
  __swift_destroy_boxed_opaque_existential_1(v66);
  return v14;
}

void sub_1BFE89214()
{
  if (!qword_1EB87C6E8)
  {
    unint64_t v0 = sub_1C1517E6C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C6E8);
    }
  }
}

void sub_1BFE8928C()
{
  if (!qword_1EB87C730)
  {
    type metadata accessor for FormatOption();
    sub_1C037111C(&qword_1EB874230, (void (*)(uint64_t))type metadata accessor for FormatOption);
    sub_1C037111C(&qword_1EB870AC0, (void (*)(uint64_t))type metadata accessor for FormatOption);
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C730);
    }
  }
}

unint64_t sub_1BFE89358()
{
  unint64_t result = qword_1EB888320;
  if (!qword_1EB888320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB888320);
  }
  return result;
}

void sub_1BFE893AC()
{
  if (!qword_1EB87C720)
  {
    type metadata accessor for FormatBlock();
    sub_1C085F050(&qword_1EB87D510, (void (*)(uint64_t))type metadata accessor for FormatBlock);
    sub_1C085F050(&qword_1EB87D508, (void (*)(uint64_t))type metadata accessor for FormatBlock);
    unint64_t v0 = sub_1C15181BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C720);
    }
  }
}

uint64_t FormatSnippetNode.init(identifier:snippetIdentifier:name:description:selectors:options:blocks:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_OWORD *)(v11 + 64) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  swift_beginAccess();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  *(void *)(v11 + 32) = a3;
  *(void *)(v11 + 40) = a4;
  swift_beginAccess();
  *(void *)(v11 + 48) = a5;
  *(void *)(v11 + 56) = a6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v11 + 64) = a7;
  *(void *)(v11 + 72) = a8;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v11 + 80) = a9;
  swift_beginAccess();
  *(void *)(v11 + 88) = a10;
  swift_beginAccess();
  *(void *)(v11 + 96) = a11;
  return v11;
}

uint64_t sub_1BFE895C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *sub_1BFE896FC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  uint64_t v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  uint64_t v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  uint64_t v17 = a2[27];
  a1[26] = a2[26];
  a1[27] = v17;
  uint64_t v18 = a2[29];
  a1[28] = a2[28];
  a1[29] = v18;
  uint64_t v19 = a2[31];
  a1[30] = a2[30];
  a1[31] = v19;
  a1[32] = a2[32];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BFE89904(void *a1)
{
  return FormatSourceMapNode.encode(to:)(a1);
}

uint64_t FormatSourceMapNode.encode(to:)(void *a1)
{
  sub_1BFEB3C34(0, &qword_1EB8635B8, (uint64_t (*)(void))sub_1BFEB3C9C, (uint64_t)&type metadata for FormatSourceMapNode.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (char *)&v17 - v7;
  uint64_t v8 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  uint64_t v23 = *v1;
  uint64_t result = FormatNode.encode(to:)(a1);
  if (!v2)
  {
    uint64_t v21 = v5;
    uint64_t v22 = v6;
    uint64_t v17 = v8;
    uint64_t v18 = v11;
    uint64_t v19 = v10;
    uint64_t v20 = v9;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BFEB3C9C();
    uint64_t v13 = v27;
    sub_1C1520F0C();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v14 = sub_1C1520EFC();
    char v15 = Dictionary<>.allowSourceMaps.getter(v14);
    swift_bridgeObjectRelease();
    if (v15)
    {
      uint64_t v23 = v17;
      uint64_t v24 = v20;
      uint64_t v25 = v19;
      uint64_t v26 = v18;
      sub_1C0F4CAD0();
      uint64_t v16 = v21;
      sub_1C152078C();
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v13, v16);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v13, v21);
    }
  }
  return result;
}

uint64_t FormatNode.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  v306 = (char *)&v271 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v305 = (char *)&v271 - v6;
  MEMORY[0x1F4188790](v7);
  v307 = (char *)&v271 - v8;
  MEMORY[0x1F4188790](v9);
  v304 = (char *)&v271 - v10;
  MEMORY[0x1F4188790](v11);
  v303 = (char *)&v271 - v12;
  MEMORY[0x1F4188790](v13);
  v302 = (char *)&v271 - v14;
  MEMORY[0x1F4188790](v15);
  v301 = (char *)&v271 - v16;
  MEMORY[0x1F4188790](v17);
  v300 = (char *)&v271 - v18;
  MEMORY[0x1F4188790](v19);
  v299 = (char *)&v271 - v20;
  MEMORY[0x1F4188790](v21);
  v298 = (char *)&v271 - v22;
  MEMORY[0x1F4188790](v23);
  v296 = (char *)&v271 - v24;
  MEMORY[0x1F4188790](v25);
  v297 = (char *)&v271 - v26;
  MEMORY[0x1F4188790](v27);
  v295 = (char *)&v271 - v28;
  MEMORY[0x1F4188790](v29);
  v294 = (char *)&v271 - v30;
  MEMORY[0x1F4188790](v31);
  v293 = (char *)&v271 - v32;
  MEMORY[0x1F4188790](v33);
  v292 = (char *)&v271 - v34;
  MEMORY[0x1F4188790](v35);
  v291 = (char *)&v271 - v36;
  MEMORY[0x1F4188790](v37);
  v290 = (char *)&v271 - v38;
  MEMORY[0x1F4188790](v39);
  v289 = (char *)&v271 - v40;
  MEMORY[0x1F4188790](v41);
  v288 = (char *)&v271 - v42;
  MEMORY[0x1F4188790](v43);
  v287 = (char *)&v271 - v44;
  MEMORY[0x1F4188790](v45);
  v286 = (char *)&v271 - v46;
  MEMORY[0x1F4188790](v47);
  v285 = (char *)&v271 - v48;
  MEMORY[0x1F4188790](v49);
  v284 = (char *)&v271 - v50;
  MEMORY[0x1F4188790](v51);
  v283 = (char *)&v271 - v52;
  MEMORY[0x1F4188790](v53);
  v282 = (char *)&v271 - v54;
  MEMORY[0x1F4188790](v55);
  v281 = (char *)&v271 - v56;
  MEMORY[0x1F4188790](v57);
  v280 = (char *)&v271 - v58;
  MEMORY[0x1F4188790](v59);
  v279 = (char *)&v271 - v60;
  MEMORY[0x1F4188790](v61);
  v278 = (char *)&v271 - v62;
  MEMORY[0x1F4188790](v63);
  v277 = (char *)&v271 - v64;
  MEMORY[0x1F4188790](v65);
  v276 = (char *)&v271 - v66;
  MEMORY[0x1F4188790](v67);
  v275 = (char *)&v271 - v68;
  MEMORY[0x1F4188790](v69);
  v274 = (char *)&v271 - v70;
  MEMORY[0x1F4188790](v71);
  v273 = (char *)&v271 - v72;
  MEMORY[0x1F4188790](v73);
  v272 = (char *)&v271 - v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v77 = (char *)&v271 - v76;
  MEMORY[0x1F4188790](v78);
  char v80 = (char *)&v271 - v79;
  MEMORY[0x1F4188790](v81);
  uint64_t v83 = (char *)&v271 - v82;
  MEMORY[0x1F4188790](v84);
  char v86 = (char *)&v271 - v85;
  sub_1BFEFF7D8();
  MEMORY[0x1F4188790](v87 - 8);
  uint64_t v89 = (char *)&v271 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v90 = *v1;
  uint64_t v91 = a1;
  uint64_t v92 = a1[3];
  uint64_t v93 = v91[4];
  __swift_project_boxed_opaque_existential_1(v91, v92);
  unint64_t v94 = sub_1BFEB6A24();
  v310 = v89;
  sub_1BFEFBD78((uint64_t)&type metadata for FormatNode, v95, v92, (uint64_t)&type metadata for FormatNode, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v93, (uint64_t)v89, v94, (uint64_t)&off_1F1C39B68);
  switch((v90 >> 58) & 0x3C | (v90 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v101 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v102 = qword_1EB882D28;
      swift_retain();
      uint64_t v103 = (uint64_t)v310;
      if (v102 != -1) {
        swift_once();
      }
      uint64_t v104 = sub_1C151928C();
      uint64_t v105 = __swift_project_value_buffer(v104, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 16))(v83, v105, v104);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8CA60(1, v101, (uint64_t)v83);
      sub_1BFEFEB68((uint64_t)v83, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v103, (uint64_t (*)(void))sub_1BFEFF7D8);
      return swift_release();
    case 2uLL:
      uint64_t v106 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v107 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v107 != -1) {
        swift_once();
      }
      uint64_t v108 = sub_1C151928C();
      uint64_t v109 = __swift_project_value_buffer(v108, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v108 - 8) + 16))(v80, v109, v108);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069C218(2, v106, (uint64_t)v80);
      uint64_t v110 = (uint64_t)v80;
      goto LABEL_125;
    case 3uLL:
      uint64_t v111 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v112 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v112 != -1) {
        swift_once();
      }
      uint64_t v113 = sub_1C151928C();
      uint64_t v114 = __swift_project_value_buffer(v113, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v113 - 8) + 16))(v77, v114, v113);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8D190(3, v111, (uint64_t)v77);
      uint64_t v110 = (uint64_t)v77;
      goto LABEL_125;
    case 4uLL:
      uint64_t v115 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v116 = qword_1EB882D28;
      swift_retain();
      uint64_t v117 = (uint64_t)v310;
      if (v116 != -1) {
        swift_once();
      }
      uint64_t v118 = sub_1C151928C();
      uint64_t v119 = __swift_project_value_buffer(v118, (uint64_t)qword_1EB93CAB0);
      uint64_t v120 = (uint64_t)v272;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v118 - 8) + 16))(v272, v119, v118);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8E554(4, v115, v120);
      sub_1BFEFEB68(v120, type metadata accessor for FormatVersionRequirement);
      uint64_t v121 = v117;
      goto LABEL_126;
    case 5uLL:
      uint64_t v122 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v123 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v123 != -1) {
        swift_once();
      }
      uint64_t v124 = sub_1C151928C();
      uint64_t v125 = __swift_project_value_buffer(v124, (uint64_t)qword_1EB93CAB0);
      char v86 = v273;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v124 - 8) + 16))(v273, v125, v124);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8CDF8(5, v122, (uint64_t)v86);
      goto LABEL_124;
    case 6uLL:
      uint64_t v126 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v127 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v127 != -1) {
        swift_once();
      }
      uint64_t v128 = sub_1C151928C();
      uint64_t v129 = __swift_project_value_buffer(v128, (uint64_t)qword_1EB93CAB0);
      char v86 = v274;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v128 - 8) + 16))(v274, v129, v128);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8D35C(6, v126, (uint64_t)v86);
      goto LABEL_124;
    case 7uLL:
      uint64_t v130 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v131 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v131 != -1) {
        swift_once();
      }
      uint64_t v132 = sub_1C151928C();
      uint64_t v133 = __swift_project_value_buffer(v132, (uint64_t)qword_1EB93CAB0);
      char v86 = v275;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v132 - 8) + 16))(v275, v133, v132);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8DA8C(7, v130, (uint64_t)v86);
      goto LABEL_124;
    case 8uLL:
      uint64_t v134 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v135 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v135 != -1) {
        swift_once();
      }
      uint64_t v136 = sub_1C151928C();
      uint64_t v137 = __swift_project_value_buffer(v136, (uint64_t)qword_1EB93CAB0);
      char v86 = v276;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v136 - 8) + 16))(v276, v137, v136);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8C894(8, v134, (uint64_t)v86);
      goto LABEL_124;
    case 9uLL:
      uint64_t v138 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v139 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v139 != -1) {
        swift_once();
      }
      uint64_t v140 = sub_1C151928C();
      uint64_t v141 = __swift_project_value_buffer(v140, (uint64_t)qword_1EB93CAB0);
      char v86 = v277;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v140 - 8) + 16))(v277, v141, v140);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8C4A8(9, v138, (uint64_t)v86);
      goto LABEL_124;
    case 0xAuLL:
      uint64_t v142 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v143 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v143 != -1) {
        swift_once();
      }
      uint64_t v144 = sub_1C151928C();
      uint64_t v145 = __swift_project_value_buffer(v144, (uint64_t)qword_1EB93CAB0);
      char v86 = v278;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v144 - 8) + 16))(v278, v145, v144);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8E720(10, v142, (uint64_t)v86);
      goto LABEL_124;
    case 0xBuLL:
      uint64_t v146 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v147 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v147 != -1) {
        swift_once();
      }
      uint64_t v148 = sub_1C151928C();
      uint64_t v149 = __swift_project_value_buffer(v148, (uint64_t)qword_1EB93CAB0);
      char v86 = v279;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v148 - 8) + 16))(v279, v149, v148);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8C6C8(11, v146, (uint64_t)v86);
      goto LABEL_124;
    case 0xCuLL:
      uint64_t v150 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v151 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v151 != -1) {
        swift_once();
      }
      uint64_t v152 = sub_1C151928C();
      uint64_t v153 = __swift_project_value_buffer(v152, (uint64_t)qword_1EB93CAB0);
      char v86 = v280;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v152 - 8) + 16))(v280, v153, v152);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8D528(12, v150, (uint64_t)v86);
      goto LABEL_124;
    case 0xDuLL:
      uint64_t v154 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v155 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v155 != -1) {
        swift_once();
      }
      uint64_t v156 = sub_1C151928C();
      uint64_t v157 = __swift_project_value_buffer(v156, (uint64_t)qword_1EB93CAB0);
      char v86 = v281;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v156 - 8) + 16))(v281, v157, v156);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8CC2C(13, v154, (uint64_t)v86);
      goto LABEL_124;
    case 0xEuLL:
      uint64_t v158 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v159 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v159 != -1) {
        swift_once();
      }
      uint64_t v160 = sub_1C151928C();
      uint64_t v161 = __swift_project_value_buffer(v160, (uint64_t)qword_1EB93CAB0);
      char v86 = v282;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v160 - 8) + 16))(v282, v161, v160);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8DC58(14, v158, (uint64_t)v86);
      goto LABEL_124;
    case 0xFuLL:
      uint64_t v162 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v163 = qword_1EB887620;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v163 != -1) {
        swift_once();
      }
      uint64_t v164 = sub_1C151928C();
      uint64_t v165 = __swift_project_value_buffer(v164, (uint64_t)qword_1EB93CA50);
      char v86 = v283;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v164 - 8) + 16))(v283, v165, v164);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8E388(15, v162, (uint64_t)v86);
      goto LABEL_124;
    case 0x10uLL:
      uint64_t v166 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v167 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v167 != -1) {
        swift_once();
      }
      uint64_t v168 = sub_1C151928C();
      uint64_t v169 = __swift_project_value_buffer(v168, (uint64_t)qword_1EB93CAB0);
      char v86 = v284;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v168 - 8) + 16))(v284, v169, v168);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8DE24(16, v166, (uint64_t)v86);
      goto LABEL_124;
    case 0x11uLL:
      uint64_t v170 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v171 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v171 != -1) {
        swift_once();
      }
      uint64_t v172 = sub_1C151928C();
      uint64_t v173 = __swift_project_value_buffer(v172, (uint64_t)qword_1EB93CAB0);
      char v86 = v285;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v172 - 8) + 16))(v285, v173, v172);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8D6F4(17, v170, (uint64_t)v86);
      goto LABEL_124;
    case 0x12uLL:
      uint64_t v174 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v175 = qword_1EB887640;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v175 != -1) {
        swift_once();
      }
      uint64_t v176 = sub_1C151928C();
      uint64_t v177 = __swift_project_value_buffer(v176, (uint64_t)qword_1EB93CAC8);
      char v86 = v286;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v176 - 8) + 16))(v286, v177, v176);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8E1BC(18, v174, (uint64_t)v86);
      goto LABEL_124;
    case 0x13uLL:
      uint64_t v178 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v179 = qword_1EB887640;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v179 != -1) {
        swift_once();
      }
      uint64_t v180 = sub_1C151928C();
      uint64_t v181 = __swift_project_value_buffer(v180, (uint64_t)qword_1EB93CAC8);
      char v86 = v287;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v180 - 8) + 16))(v287, v181, v180);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8DFF0(19, v178, (uint64_t)v86);
      goto LABEL_124;
    case 0x14uLL:
      uint64_t v182 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v183 = qword_1EB887640;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v183 != -1) {
        swift_once();
      }
      uint64_t v184 = sub_1C151928C();
      uint64_t v185 = __swift_project_value_buffer(v184, (uint64_t)qword_1EB93CAC8);
      char v86 = v288;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v184 - 8) + 16))(v288, v185, v184);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069C3E4(20, v182, (uint64_t)v86);
      goto LABEL_124;
    case 0x15uLL:
      uint64_t v186 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v187 = qword_1EB887640;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v187 != -1) {
        swift_once();
      }
      uint64_t v188 = sub_1C151928C();
      uint64_t v189 = __swift_project_value_buffer(v188, (uint64_t)qword_1EB93CAC8);
      char v86 = v289;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v188 - 8) + 16))(v289, v189, v188);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069C5B0(21, v186, (uint64_t)v86);
      goto LABEL_124;
    case 0x16uLL:
      uint64_t v190 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v191 = qword_1EB8875F8;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v191 != -1) {
        swift_once();
      }
      uint64_t v192 = sub_1C151928C();
      uint64_t v193 = __swift_project_value_buffer(v192, (uint64_t)qword_1EB93C9F0);
      char v86 = v290;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v192 - 8) + 16))(v290, v193, v192);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069C77C(22, v190, (uint64_t)v86);
      goto LABEL_124;
    case 0x17uLL:
      uint64_t v194 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v195 = qword_1EB8875F8;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v195 != -1) {
        swift_once();
      }
      uint64_t v196 = sub_1C151928C();
      uint64_t v197 = __swift_project_value_buffer(v196, (uint64_t)qword_1EB93C9F0);
      char v86 = v291;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v196 - 8) + 16))(v291, v197, v196);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8D8C0(23, v194, (uint64_t)v86);
      goto LABEL_124;
    case 0x18uLL:
      uint64_t v198 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v199 = qword_1EB887610;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v199 != -1) {
        swift_once();
      }
      uint64_t v200 = sub_1C151928C();
      uint64_t v201 = __swift_project_value_buffer(v200, (uint64_t)qword_1EB93CA20);
      char v86 = v292;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v200 - 8) + 16))(v292, v201, v200);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069C948(24, v198, (uint64_t)v86);
      goto LABEL_124;
    case 0x19uLL:
      uint64_t v202 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v203 = qword_1EB887618;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v203 != -1) {
        swift_once();
      }
      uint64_t v204 = sub_1C151928C();
      uint64_t v205 = __swift_project_value_buffer(v204, (uint64_t)qword_1EB93CA38);
      char v86 = v293;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v204 - 8) + 16))(v293, v205, v204);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069CB14(25, v202, (uint64_t)v86);
      goto LABEL_124;
    case 0x1AuLL:
      uint64_t v206 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v207 = qword_1EB887620;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v207 != -1) {
        swift_once();
      }
      uint64_t v208 = sub_1C151928C();
      uint64_t v209 = __swift_project_value_buffer(v208, (uint64_t)qword_1EB93CA50);
      char v86 = v294;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v208 - 8) + 16))(v294, v209, v208);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069CCE0(26, v206, (uint64_t)v86);
      goto LABEL_124;
    case 0x1BuLL:
      uint64_t v210 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v211 = qword_1EB887638;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v211 != -1) {
        swift_once();
      }
      uint64_t v212 = sub_1C151928C();
      uint64_t v213 = __swift_project_value_buffer(v212, (uint64_t)qword_1EB93CA98);
      char v86 = v295;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v212 - 8) + 16))(v295, v213, v212);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFC484C0(27, v210, (uint64_t)v86);
      goto LABEL_124;
    case 0x1CuLL:
      long long v214 = *(_OWORD *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x40);
      v308[2] = *(_OWORD *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x30);
      v308[3] = v214;
      v308[4] = *(_OWORD *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x50);
      uint64_t v309 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x60);
      long long v215 = *(_OWORD *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x20);
      v308[0] = *(_OWORD *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v308[1] = v215;
      sub_1C089E4F4((uint64_t)v308);
      uint64_t v216 = (uint64_t)v310;
      if (qword_1EB887638 != -1) {
        swift_once();
      }
      uint64_t v217 = sub_1C151928C();
      uint64_t v218 = __swift_project_value_buffer(v217, (uint64_t)qword_1EB93CA98);
      uint64_t v219 = (uint64_t)v297;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v217 - 8) + 16))(v297, v218, v217);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069CEAC(28, v308, v219);
      sub_1BFEFEB68(v219, type metadata accessor for FormatVersionRequirement);
      sub_1BFEFEB68(v216, (uint64_t (*)(void))sub_1BFEFF7D8);
      return sub_1C089E568((uint64_t)v308);
    case 0x1DuLL:
      uint64_t v221 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v222 = qword_1EB887638;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v222 != -1) {
        swift_once();
      }
      uint64_t v223 = sub_1C151928C();
      uint64_t v224 = __swift_project_value_buffer(v223, (uint64_t)qword_1EB93CA98);
      char v86 = v296;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v223 - 8) + 16))(v296, v224, v223);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069D05C(29, v221, (uint64_t)v86);
      goto LABEL_124;
    case 0x1EuLL:
      uint64_t v225 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v226 = qword_1EB887638;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v226 != -1) {
        swift_once();
      }
      uint64_t v227 = sub_1C151928C();
      uint64_t v228 = __swift_project_value_buffer(v227, (uint64_t)qword_1EB93CA98);
      char v86 = v298;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v227 - 8) + 16))(v298, v228, v227);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069D228(30, v225, (uint64_t)v86);
      goto LABEL_124;
    case 0x1FuLL:
      uint64_t v229 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v230 = qword_1EB887650;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v230 != -1) {
        swift_once();
      }
      uint64_t v231 = sub_1C151928C();
      uint64_t v232 = __swift_project_value_buffer(v231, (uint64_t)qword_1EB93CAE0);
      char v86 = v299;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v231 - 8) + 16))(v299, v232, v231);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069D3F4(31, v229, (uint64_t)v86);
      goto LABEL_124;
    case 0x20uLL:
      uint64_t v233 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v234 = qword_1EB887650;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v234 != -1) {
        swift_once();
      }
      uint64_t v235 = sub_1C151928C();
      uint64_t v236 = __swift_project_value_buffer(v235, (uint64_t)qword_1EB93CAE0);
      char v86 = v300;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v235 - 8) + 16))(v300, v236, v235);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069D5C0(32, v233, (uint64_t)v86);
      goto LABEL_124;
    case 0x21uLL:
      uint64_t v237 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v238 = qword_1EB887600;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v238 != -1) {
        swift_once();
      }
      uint64_t v239 = sub_1C151928C();
      uint64_t v240 = __swift_project_value_buffer(v239, (uint64_t)qword_1EB93CA08);
      char v86 = v301;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v239 - 8) + 16))(v301, v240, v239);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069D78C(33, v237, (uint64_t)v86);
      goto LABEL_124;
    case 0x22uLL:
      uint64_t v241 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v242 = qword_1EB887630;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v242 != -1) {
        swift_once();
      }
      uint64_t v243 = sub_1C151928C();
      uint64_t v244 = __swift_project_value_buffer(v243, (uint64_t)qword_1EB93CA80);
      char v86 = v302;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v243 - 8) + 16))(v302, v244, v243);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069D958(34, v241, (uint64_t)v86);
      goto LABEL_124;
    case 0x23uLL:
      uint64_t v245 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v246 = qword_1EB887630;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v246 != -1) {
        swift_once();
      }
      uint64_t v247 = sub_1C151928C();
      uint64_t v248 = __swift_project_value_buffer(v247, (uint64_t)qword_1EB93CA80);
      char v86 = v303;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v247 - 8) + 16))(v303, v248, v247);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069DB24(35, v245, (uint64_t)v86);
      goto LABEL_124;
    case 0x24uLL:
      uint64_t v249 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v250 = qword_1EB887630;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v250 != -1) {
        swift_once();
      }
      uint64_t v251 = sub_1C151928C();
      uint64_t v252 = __swift_project_value_buffer(v251, (uint64_t)qword_1EB93CA80);
      char v86 = v304;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v251 - 8) + 16))(v304, v252, v251);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069DCF0(36, v249, (uint64_t)v86);
      goto LABEL_124;
    case 0x25uLL:
      uint64_t v253 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_1BFF05D18();
      uint64_t v255 = (uint64_t)v307;
      v256 = &v307[*(int *)(v254 + 48)];
      v257 = &v307[*(int *)(v254 + 64)];
      uint64_t v258 = qword_1EB887668;
      swift_retain();
      if (v258 != -1) {
        swift_once();
      }
      uint64_t v259 = sub_1C151928C();
      uint64_t v260 = __swift_project_value_buffer(v259, (uint64_t)qword_1EB93CB10);
      v261 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v259 - 8) + 16);
      v261(v255, v260, v259);
      if (qword_1EB8849C8 != -1) {
        swift_once();
      }
      uint64_t v262 = __swift_project_value_buffer(v259, (uint64_t)qword_1EB93C790);
      v261((uint64_t)v256, v262, v259);
      type metadata accessor for FormatVersionRequirement.Value(0);
      *(void *)v257 = 0;
      *((void *)v257 + 1) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v98 = (uint64_t)v310;
      sub_1C069DEBC(37, v253, v255);
      uint64_t v110 = v255;
      goto LABEL_125;
    case 0x26uLL:
      uint64_t v263 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v264 = qword_1EB8875E0;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v264 != -1) {
        swift_once();
      }
      uint64_t v265 = sub_1C151928C();
      uint64_t v266 = __swift_project_value_buffer(v265, (uint64_t)qword_1EB93C9D8);
      char v86 = v305;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v265 - 8) + 16))(v305, v266, v265);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069E088(38, v263, (uint64_t)v86);
      goto LABEL_124;
    case 0x27uLL:
      uint64_t v267 = *(void *)((v90 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v268 = qword_1EB8849C8;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v268 != -1) {
        swift_once();
      }
      uint64_t v269 = sub_1C151928C();
      uint64_t v270 = __swift_project_value_buffer(v269, (uint64_t)qword_1EB93C790);
      char v86 = v306;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v269 - 8) + 16))(v306, v270, v269);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1C069E254(39, v267, (uint64_t)v86);
      goto LABEL_124;
    default:
      uint64_t v96 = *(void *)(v90 + 16);
      uint64_t v97 = qword_1EB882D28;
      swift_retain();
      uint64_t v98 = (uint64_t)v310;
      if (v97 != -1) {
        swift_once();
      }
      uint64_t v99 = sub_1C151928C();
      uint64_t v100 = __swift_project_value_buffer(v99, (uint64_t)qword_1EB93CAB0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v99 - 8) + 16))(v86, v100, v99);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BFE8CFC4(0, v96, (uint64_t)v86);
LABEL_124:
      uint64_t v110 = (uint64_t)v86;
LABEL_125:
      sub_1BFEFEB68(v110, type metadata accessor for FormatVersionRequirement);
      uint64_t v121 = v98;
LABEL_126:
      sub_1BFEFEB68(v121, (uint64_t (*)(void))sub_1BFEFF7D8);
      return swift_release();
  }
}

uint64_t Dictionary<>.allowSourceMaps.getter(uint64_t a1)
{
  return sub_1BFEFE0A0(a1);
}

uint64_t sub_1BFE8C4A8(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatSnippetNode();
    sub_1C085F050(&qword_1EB8600F8, (void (*)(uint64_t))type metadata accessor for FormatSnippetNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

unint64_t sub_1BFE8C674()
{
  unint64_t result = qword_1EB8656A8;
  if (!qword_1EB8656A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8656A8);
  }
  return result;
}

uint64_t sub_1BFE8C6C8(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatSwitchNode();
    sub_1C085F050(&qword_1EB8600C8, (void (*)(uint64_t))type metadata accessor for FormatSwitchNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8C894(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatSpaceNode();
    sub_1C085F050(&qword_1EB85FEC8, (void (*)(uint64_t))type metadata accessor for FormatSpaceNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8CA60(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatVBoxNode();
    sub_1C085F050(&qword_1EB85FD88, (void (*)(uint64_t))type metadata accessor for FormatVBoxNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8CC2C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatAccessibilityNode();
    sub_1C085F050(&qword_1EB860660, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8CDF8(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatTextNode();
    sub_1C085F050(&qword_1EB85FD80, (void (*)(uint64_t))type metadata accessor for FormatTextNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8CFC4(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatHBoxNode();
    sub_1C085F050(&qword_1EB85FD60, (void (*)(uint64_t))type metadata accessor for FormatHBoxNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8D190(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatVOverlayNode();
    sub_1C085F050(&qword_1EB866570, (void (*)(uint64_t))type metadata accessor for FormatVOverlayNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8D35C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatImageNode();
    sub_1C085F050(&qword_1EB85FE80, (void (*)(uint64_t))type metadata accessor for FormatImageNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8D528(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatSlotNode();
    sub_1C085F050(&qword_1EB85FD78, (void (*)(uint64_t))type metadata accessor for FormatSlotNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8D6F4(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatFrameNode();
    sub_1C085F050(&qword_1EB85FE70, (void (*)(uint64_t))type metadata accessor for FormatFrameNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8D8C0(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatAdMetricsNode();
    sub_1C085F050(&qword_1EB860298, (void (*)(uint64_t))type metadata accessor for FormatAdMetricsNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8DA8C(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatItemNode();
    sub_1C085F050(&qword_1EB85FD68, (void (*)(uint64_t))type metadata accessor for FormatItemNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8DC58(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatButtonNode();
    sub_1C085F050(&qword_1EB85FFD8, (void (*)(uint64_t))type metadata accessor for FormatButtonNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8DE24(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatWebEmbedNode();
    sub_1C085F050((unint64_t *)&unk_1EB860280, (void (*)(uint64_t))type metadata accessor for FormatWebEmbedNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8DFF0(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatOptionsNode();
    sub_1C085F050(&qword_1EB8600E8, (void (*)(uint64_t))type metadata accessor for FormatOptionsNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8E1BC(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatRepeatNode();
    sub_1C085F050(&qword_1EB8600C0, (void (*)(uint64_t))type metadata accessor for FormatRepeatNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8E388(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatGroupNode();
    sub_1C085F050(&qword_1EB85FE78, (void (*)(uint64_t))type metadata accessor for FormatGroupNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8E554(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatViewNode();
    sub_1C085F050(&qword_1EB85FD90, (void (*)(uint64_t))type metadata accessor for FormatViewNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8E720(char a1, uint64_t a2, uint64_t a3)
{
  char v17 = a1;
  uint64_t v16 = a2;
  sub_1BFEFF7D8();
  uint64_t v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v10;
  *(void *)(v11 + 32) = v9;
  v14[2] = sub_1C08F5160;
  v14[3] = v11;
  swift_retain();
  char v12 = sub_1BFEFF114(a3, 0, 0, (uint64_t)sub_1C090A460, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BFEFF3E8(0, &qword_1EB85E120, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDE0]);
    sub_1BFEFF8B4();
    sub_1BFE8C674();
    long long v15 = 0uLL;
    sub_1C1520BAC();
    long long v15 = xmmword_1C152C800;
    type metadata accessor for FormatSupplementaryNode();
    sub_1C085F050(&qword_1EB8606B0, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNode);
    sub_1C1520BAC();
  }
  return swift_release();
}

uint64_t sub_1BFE8E8EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FormatTextNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t FormatImageNodeStyle.Selector.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v61 = a2;
  sub_1C0890DCC();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0890E60();
  sub_1C085F050(&qword_1EB891EB0, (void (*)(uint64_t))sub_1C0890E60);
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v60 = v7;
    uint64_t v10 = v61;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v11 = sub_1C1520EAC();
    char v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
    swift_bridgeObjectRelease();
    uint64_t v13 = v9;
    if (v12)
    {
      uint64_t v14 = sub_1C152070C();
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v16 = (unsigned char *)(v14 + 48);
        while (*v16 != 1)
        {
          v16 += 24;
          if (!--v15) {
            goto LABEL_7;
          }
        }
        uint64_t v19 = *((void *)v16 - 2);
        uint64_t v18 = *((void *)v16 - 1);
        swift_bridgeObjectRetain_n();
        uint64_t v20 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v20);
        sub_1C0890EE4();
        sub_1BFE8F840();
        sub_1C0890F38();
        swift_getKeyPath();
        swift_retain();
        uint64_t v21 = sub_1C085FB14((uint64_t)&unk_1F1B6AB00);
        swift_release_n();
        sub_1C02570B4();
        uint64_t v3 = (void *)swift_allocError();
        *(void *)uint64_t v22 = v19;
        *(void *)(v22 + 8) = v18;
        *(void *)(v22 + 16) = v21;
        *(_OWORD *)(v22 + 24) = xmmword_1C15363B0;
        swift_willThrow();
        sub_1BFE94AD4(v19, v18, 1);
        (*(void (**)(char *, uint64_t))(v60 + 8))(v9, v6);
        goto LABEL_10;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BFE9420C();
    long long v65 = 0uLL;
    LOBYTE(v66) = 0;
    sub_1C15206EC();
    long long v17 = v75;
    long long v65 = xmmword_1C153AB20;
    LOBYTE(v66) = 0;
    sub_1BFE922A0();
    sub_1C152065C();
    uint64_t v59 = v17;
    uint64_t v23 = v75;
    sub_1BFE9DEBC(0, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
    long long v65 = xmmword_1C1557FA0;
    LOBYTE(v66) = 0;
    sub_1BFE94178();
    sub_1C152065C();
    uint64_t v24 = v23;
    uint64_t v25 = v75;
    long long v75 = xmmword_1C1557FB0;
    char v76 = 0;
    sub_1BFE9224C();
    sub_1C152065C();
    uint64_t v56 = v25;
    uint64_t v58 = *((void *)&v65 + 1);
    uint64_t v26 = v65;
    int v57 = v66;
    long long v75 = xmmword_1C1557FD0;
    char v76 = 0;
    sub_1BFE94124();
    sub_1C152065C();
    uint64_t v46 = v23;
    uint64_t v54 = v26;
    long long v48 = v65;
    uint64_t v49 = v66;
    uint64_t v50 = v67;
    uint64_t v51 = v68;
    uint64_t v52 = v69;
    uint64_t v53 = v70;
    uint64_t v55 = v71;
    uint64_t v27 = v73;
    uint64_t v47 = v72;
    LODWORD(v23) = v74;
    long long v65 = xmmword_1C1557FC0;
    LOBYTE(v66) = 0;
    sub_1BFE113DC();
    sub_1C152065C();
    int v44 = v23;
    uint64_t v45 = v27;
    uint64_t v28 = v75;
    long long v65 = xmmword_1C1557FE0;
    LOBYTE(v66) = 0;
    int v42 = sub_1C152061C();
    uint64_t v43 = v28;
    long long v65 = xmmword_1C1557FF0;
    LOBYTE(v66) = 0;
    sub_1BFE90CCC();
    sub_1C152065C();
    int v41 = v75;
    long long v65 = xmmword_1C1558010;
    LOBYTE(v66) = 0;
    sub_1BFE90D20();
    sub_1C152065C();
    LODWORD(v46) = v75;
    long long v65 = xmmword_1C1558020;
    LOBYTE(v66) = 0;
    sub_1BFE90C24();
    sub_1C152065C();
    uint64_t v29 = v75;
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    long long v65 = xmmword_1C1558030;
    LOBYTE(v66) = 0;
    sub_1BFE94094();
    sub_1C152065C();
    uint64_t v40 = v75;
    sub_1BFE9DEBC(0, &qword_1EB879E78, (uint64_t)&type metadata for FormatImageAdjustment, MEMORY[0x1E4FBB320]);
    long long v65 = xmmword_1C1558040;
    LOBYTE(v66) = 0;
    sub_1BFE90B90();
    sub_1C152065C();
    uint64_t v39 = v75;
    long long v65 = xmmword_1C1558050;
    LOBYTE(v66) = 0;
    sub_1BFE90C78();
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v6);
    *(void *)uint64_t v10 = v59;
    *(void *)(v10 + 8) = *((void *)&v17 + 1);
    uint64_t v30 = v56;
    *(void *)(v10 + 16) = v24;
    *(void *)(v10 + 24) = v30;
    uint64_t v31 = v58;
    *(void *)(v10 + 32) = v54;
    *(void *)(v10 + 40) = v31;
    *(unsigned char *)(v10 + 48) = v57;
    *(_DWORD *)(v10 + 49) = *(_DWORD *)v77;
    *(_DWORD *)(v10 + 52) = *(_DWORD *)&v77[3];
    uint64_t v32 = *((void *)&v48 + 1);
    *(void *)(v10 + 56) = v48;
    *(void *)(v10 + 64) = v32;
    uint64_t v33 = v50;
    *(void *)(v10 + 72) = v49;
    *(void *)(v10 + 80) = v33;
    uint64_t v34 = v52;
    *(void *)(v10 + 88) = v51;
    *(void *)(v10 + 96) = v34;
    uint64_t v35 = v55;
    *(void *)(v10 + 104) = v53;
    *(void *)(v10 + 112) = v35;
    uint64_t v36 = v45;
    *(void *)(v10 + 120) = v47;
    *(void *)(v10 + 128) = v36;
    *(unsigned char *)(v10 + 136) = v44;
    *(_DWORD *)(v10 + 140) = *(_DWORD *)&v64[3];
    *(_DWORD *)(v10 + 137) = *(_DWORD *)v64;
    *(void *)(v10 + 144) = v43;
    *(unsigned char *)(v10 + 152) = v42;
    *(unsigned char *)(v10 + 153) = v41;
    *(unsigned char *)(v10 + 154) = v46;
    *(unsigned char *)(v10 + 159) = v63;
    *(_DWORD *)(v10 + 155) = v62;
    uint64_t v37 = v40;
    *(void *)(v10 + 160) = v29;
    *(void *)(v10 + 168) = v37;
    *(void *)(v10 + 176) = v39;
    *(_OWORD *)(v10 + 184) = v75;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
LABEL_10:
  sub_1C0038728(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFE8F840()
{
  unint64_t result = qword_1EB8897C8;
  if (!qword_1EB8897C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8897C8);
  }
  return result;
}

uint64_t sub_1BFE8F894(void *a1)
{
  sub_1BFE309D0(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v69 = (uint64_t)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v70 = (uint64_t)&v47 - v5;
  sub_1C0908CDC(0, &qword_1EB884E90, (void (*)(void))sub_1C0077E90, (void (*)(void))sub_1C0077EE4);
  uint64_t v7 = v6;
  uint64_t v71 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v47 - v8;
  sub_1C08F867C();
  uint64_t v11 = v10;
  uint64_t v72 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C0890C18();
  sub_1C085F050(&qword_1EB891EA0, (void (*)(uint64_t))sub_1C0890C18);
  uint64_t v15 = (uint64_t)v92;
  sub_1C1520EBC();
  uint64_t v16 = (void *)v15;
  if (v15)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v16);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  long long v17 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = sub_1C1520EAC();
  char v19 = Dictionary<>.errorOnUnknownKeys.getter(v18);
  swift_bridgeObjectRelease();
  if (v19)
  {
    uint64_t v20 = sub_1C152070C();
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      uint64_t v22 = (unsigned char *)(v20 + 48);
      while (*v22 != 1)
      {
        v22 += 24;
        if (!--v21) {
          goto LABEL_7;
        }
      }
      uint64_t v92 = v13;
      uint64_t v28 = *((void *)v22 - 2);
      uint64_t v27 = *((void *)v22 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v29 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v29);
      sub_1C0890C9C();
      sub_1BFE90D74();
      sub_1C0890CF0();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v30 = sub_1C085FB14((uint64_t)&unk_1F1B6AAC8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v16 = (void *)swift_allocError();
      *(void *)uint64_t v31 = v28;
      *(void *)(v31 + 8) = v27;
      *(void *)(v31 + 16) = v30;
      *(_OWORD *)(v31 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v28, v27, 1);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v92, v11);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = sub_1C07F0DDC((uint64_t)v13, 0, 0, 0, (void (*)(void, __n128))sub_1C08F867C);
  uint64_t v25 = v24;
  long long v80 = xmmword_1C153AB20;
  LOBYTE(v81) = 0;
  uint64_t v26 = sub_1C152069C();
  uint64_t v92 = (char *)v32;
  uint64_t v67 = v26;
  long long v68 = xmmword_1C1557FA0;
  long long v80 = xmmword_1C1557FA0;
  LOBYTE(v81) = 0;
  char v33 = sub_1C152071C();
  if (v33)
  {
    uint64_t v66 = v25;
    long long v90 = v68;
    char v91 = 0;
    sub_1C08F8710();
    sub_1C15206EC();
    *(void *)&long long v68 = v23;
    uint64_t v34 = sub_1C1517E5C();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v17, v7);
    uint64_t v25 = v66;
  }
  else
  {
    *(void *)&long long v68 = v23;
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  long long v80 = xmmword_1C1557FB0;
  LOBYTE(v81) = 0;
  sub_1BFE94094();
  sub_1C152065C();
  uint64_t v36 = v90;
  sub_1BFE9DEBC(0, &qword_1EB879E78, (uint64_t)&type metadata for FormatImageAdjustment, MEMORY[0x1E4FBB320]);
  long long v80 = xmmword_1C1557FD0;
  LOBYTE(v81) = 0;
  sub_1BFE90B90();
  sub_1C152065C();
  uint64_t v66 = v36;
  uint64_t v71 = v34;
  uint64_t v37 = v90;
  long long v80 = xmmword_1C1557FC0;
  LOBYTE(v81) = 0;
  sub_1BFE922A0();
  sub_1C152065C();
  uint64_t v65 = v37;
  uint64_t v38 = v90;
  sub_1BFE9DEBC(0, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
  long long v80 = xmmword_1C1557FE0;
  LOBYTE(v81) = 0;
  sub_1BFE94178();
  sub_1C152065C();
  uint64_t v64 = v38;
  uint64_t v39 = v90;
  long long v80 = xmmword_1C1557FF0;
  LOBYTE(v81) = 0;
  sub_1BFE90D20();
  sub_1C152065C();
  uint64_t v63 = v39;
  uint64_t v40 = v13;
  char v41 = v90;
  long long v90 = xmmword_1C1558010;
  char v91 = 0;
  sub_1BFE9224C();
  sub_1C152065C();
  long long v62 = v80;
  LODWORD(v39) = v81;
  long long v80 = xmmword_1C1558020;
  LOBYTE(v81) = 0;
  sub_1BFE90C24();
  sub_1C152065C();
  int v61 = v39;
  uint64_t v60 = v90;
  long long v80 = xmmword_1C1558030;
  LOBYTE(v81) = 0;
  sub_1BFE90CCC();
  uint64_t v42 = v11;
  uint64_t v43 = v40;
  sub_1C152065C();
  LOBYTE(v36) = v90;
  long long v90 = xmmword_1C1558040;
  char v91 = 0;
  sub_1BFE94124();
  sub_1C152065C();
  long long v53 = v80;
  uint64_t v54 = v81;
  uint64_t v55 = v82;
  uint64_t v56 = v83;
  uint64_t v57 = v84;
  uint64_t v58 = v85;
  uint64_t v59 = v86;
  uint64_t v52 = v87;
  uint64_t v51 = v88;
  int v50 = v89;
  long long v80 = xmmword_1C1558050;
  LOBYTE(v81) = 0;
  sub_1BFE113DC();
  sub_1C152065C();
  uint64_t v49 = v90;
  long long v80 = xmmword_1C1533150;
  LOBYTE(v81) = 0;
  int v48 = sub_1C152061C();
  long long v80 = xmmword_1C1558060;
  LOBYTE(v81) = 0;
  sub_1BFE90C78();
  sub_1C152065C();
  long long v47 = v90;
  sub_1C1518CDC();
  long long v80 = xmmword_1C1558000;
  LOBYTE(v81) = 0;
  sub_1C085F050(&qword_1EB884FD8, MEMORY[0x1E4FAAFC8]);
  sub_1C152065C();
  uint64_t v78 = v64;
  uint64_t v79 = v66;
  char v77 = v41;
  long long v90 = v62;
  char v91 = v61;
  uint64_t v76 = v60;
  char v75 = v36;
  long long v80 = v53;
  uint64_t v81 = v54;
  uint64_t v82 = v55;
  uint64_t v83 = v56;
  uint64_t v84 = v57;
  uint64_t v85 = v58;
  uint64_t v86 = v59;
  uint64_t v87 = v52;
  uint64_t v88 = v51;
  unsigned __int8 v89 = v50;
  uint64_t v74 = v49;
  long long v73 = v47;
  int v44 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FAAFC8];
  uint64_t v45 = v70;
  uint64_t v46 = v69;
  sub_1BFF2339C(v70, v69, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  type metadata accessor for FormatImageNodeStyle();
  swift_allocObject();
  uint64_t KeyPath = FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(v68, v25, v67, (uint64_t)v92, v71, &v79, v65, &v78, v63, &v77, (uint64_t *)&v90, &v76, &v75, &v80, &v74, v48, (uint64_t *)&v73, v46);
  sub_1BFE3053C(v45, (unint64_t *)&qword_1EB884FE0, v44);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v42);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

uint64_t type metadata accessor for FormatImageNodeStyle()
{
  uint64_t result = qword_1EB889808;
  if (!qword_1EB889808) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1BFE90B90()
{
  unint64_t result = qword_1EB879E80;
  if (!qword_1EB879E80)
  {
    sub_1BFE9DEBC(255, &qword_1EB879E78, (uint64_t)&type metadata for FormatImageAdjustment, MEMORY[0x1E4FBB320]);
    sub_1C0075168();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879E80);
  }
  return result;
}

unint64_t sub_1BFE90C24()
{
  unint64_t result = qword_1EB878278;
  if (!qword_1EB878278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB878278);
  }
  return result;
}

unint64_t sub_1BFE90C78()
{
  unint64_t result = qword_1EB88A868;
  if (!qword_1EB88A868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A868);
  }
  return result;
}

unint64_t sub_1BFE90CCC()
{
  unint64_t result = qword_1EB875640;
  if (!qword_1EB875640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875640);
  }
  return result;
}

unint64_t sub_1BFE90D20()
{
  unint64_t result = qword_1EB875600;
  if (!qword_1EB875600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875600);
  }
  return result;
}

unint64_t sub_1BFE90D74()
{
  unint64_t result = qword_1EB8897B0;
  if (!qword_1EB8897B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8897B0);
  }
  return result;
}

uint64_t sub_1BFE90DC8(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB884E78, (void (*)(void))sub_1C0078BC8, (void (*)(void))sub_1C0078C1C);
  uint64_t v3 = v2;
  uint64_t v66 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v49[-v4];
  sub_1C08EA160();
  uint64_t v7 = v6;
  uint64_t v67 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v49[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08CBA00();
  uint64_t KeyPath = v10;
  sub_1C085F050(&qword_1EB891E40, (void (*)(uint64_t))sub_1C08CBA00);
  uint64_t v12 = v68;
  sub_1C1520EBC();
  uint64_t v13 = v12;
  if (v12)
  {
LABEL_14:
    sub_1C0038728(a1, (uint64_t)v13);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  long long v68 = v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v14 = sub_1C1520EAC();
  char v15 = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v16 = sub_1C152070C();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v18 = (unsigned char *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17) {
          goto LABEL_7;
        }
      }
      uint64_t v24 = *((void *)v18 - 2);
      uint64_t v25 = *((void *)v18 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v26 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v26);
      sub_1C08CBA84();
      sub_1BFE944EC();
      sub_1C08CBAD8();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v27 = sub_1C085FB14((uint64_t)&unk_1F1B6A8D8);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v28 = swift_allocError();
      *(void *)uint64_t v29 = v24;
      *(void *)(v29 + 8) = v25;
      *(void *)(v29 + 16) = v27;
      *(_OWORD *)(v29 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      uint64_t v30 = v25;
      uint64_t v13 = (void *)v28;
      sub_1BFE94AD4(v24, v30, 1);
      (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v9, v7);
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = sub_1C07F0DDC((uint64_t)v9, 0, 0, 0, (void (*)(void, __n128))sub_1C08EA160);
  uint64_t v21 = v20;
  long long v71 = xmmword_1C153AB20;
  LOBYTE(v72) = 0;
  uint64_t v22 = sub_1C152069C();
  uint64_t v23 = v67;
  uint64_t v65 = v31;
  uint64_t v63 = v22;
  long long v64 = xmmword_1C1557FA0;
  long long v71 = xmmword_1C1557FA0;
  LOBYTE(v72) = 0;
  char v32 = sub_1C152071C();
  if (v32)
  {
    uint64_t v62 = v21;
    long long v69 = v64;
    char v70 = 0;
    sub_1C08EA1F4();
    char v33 = v68;
    sub_1C15206EC();
    *(void *)&long long v64 = sub_1C1517E5C();
    (*(void (**)(unsigned char *, uint64_t))(v66 + 8))(v33, v3);
    uint64_t v21 = v62;
  }
  else
  {
    *(void *)&long long v64 = MEMORY[0x1E4FBC860];
  }
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  long long v71 = xmmword_1C1557FB0;
  LOBYTE(v72) = 0;
  sub_1BFE94094();
  sub_1C152065C();
  uint64_t v35 = (unsigned char *)v69;
  long long v71 = xmmword_1C1557FD0;
  LOBYTE(v72) = 0;
  sub_1BFE922A0();
  sub_1C152065C();
  long long v68 = v35;
  uint64_t v36 = v69;
  sub_1BFE9DEBC(0, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
  long long v71 = xmmword_1C1557FC0;
  LOBYTE(v72) = 0;
  sub_1BFE94178();
  sub_1C152065C();
  uint64_t v66 = v36;
  uint64_t v37 = v69;
  long long v69 = xmmword_1C1557FE0;
  char v70 = 0;
  sub_1BFE9224C();
  sub_1C152065C();
  uint64_t v62 = v37;
  long long v61 = v71;
  LODWORD(v37) = v72;
  long long v69 = xmmword_1C1557FF0;
  char v70 = 0;
  sub_1BFE94124();
  sub_1C152065C();
  int v60 = v37;
  uint64_t v38 = v21;
  long long v53 = v71;
  uint64_t v54 = v72;
  uint64_t v55 = v73;
  uint64_t v56 = v74;
  uint64_t v57 = v75;
  uint64_t v58 = v76;
  uint64_t v59 = v77;
  uint64_t v52 = v78;
  uint64_t v51 = v79;
  int v50 = v80;
  long long v71 = xmmword_1C1558010;
  LOBYTE(v72) = 0;
  char v39 = sub_1C152061C();
  (*(void (**)(unsigned char *, uint64_t))(v23 + 8))(v9, v7);
  type metadata accessor for FormatViewNodeStyle();
  uint64_t KeyPath = swift_allocObject();
  swift_beginAccess();
  *(void *)(KeyPath + 16) = v19;
  *(void *)(KeyPath + 24) = v38;
  uint64_t v40 = v65;
  *(void *)(KeyPath + 32) = v63;
  *(void *)(KeyPath + 40) = v40;
  swift_beginAccess();
  char v41 = v68;
  *(void *)(KeyPath + 48) = v64;
  *(void *)(KeyPath + 56) = v41;
  uint64_t v42 = v62;
  *(void *)(KeyPath + 64) = v66;
  *(void *)(KeyPath + 72) = v42;
  uint64_t v43 = *((void *)&v61 + 1);
  *(void *)(KeyPath + 80) = v61;
  *(void *)(KeyPath + 88) = v43;
  *(unsigned char *)(KeyPath + 96) = v60;
  uint64_t v44 = *((void *)&v53 + 1);
  *(void *)(KeyPath + 104) = v53;
  *(void *)(KeyPath + 112) = v44;
  uint64_t v45 = v55;
  *(void *)(KeyPath + 120) = v54;
  *(void *)(KeyPath + 128) = v45;
  uint64_t v46 = v57;
  *(void *)(KeyPath + 136) = v56;
  *(void *)(KeyPath + 144) = v46;
  uint64_t v47 = v59;
  *(void *)(KeyPath + 152) = v58;
  *(void *)(KeyPath + 160) = v47;
  uint64_t v48 = v51;
  *(void *)(KeyPath + 168) = v52;
  *(void *)(KeyPath + 176) = v48;
  *(unsigned char *)(KeyPath + 184) = v50;
  *(unsigned char *)(KeyPath + 185) = v39;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return KeyPath;
}

uint64_t type metadata accessor for FormatViewNodeStyle()
{
  return self;
}

uint64_t FormatViewNodeStyle.Selector.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_1C08CBB2C();
  uint64_t v7 = v6;
  uint64_t v57 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08CBBC0();
  sub_1C085F050(&qword_1EB891E50, (void (*)(uint64_t))sub_1C08CBBC0);
  sub_1C1520EBC();
  if (v2)
  {
    uint64_t v10 = a1;
LABEL_11:
    sub_1C0038728(v10, (uint64_t)v3);
    swift_willThrow();

    uint64_t v38 = (uint64_t)v10;
    return __swift_destroy_boxed_opaque_existential_1(v38);
  }
  uint64_t v11 = a1[3];
  uint64_t v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  uint64_t v12 = sub_1C1520EAC();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v57;
  uint64_t v14 = v9;
  if (v11)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unsigned char *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16) {
          goto LABEL_8;
        }
      }
      uint64_t v19 = v13;
      uint64_t v20 = *((void *)v17 - 2);
      uint64_t v21 = *((void *)v17 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v22 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v22);
      sub_1C08CBC44();
      sub_1BFE94498();
      sub_1C08CBC98();
      swift_getKeyPath();
      swift_retain();
      uint64_t v23 = sub_1C085FB14((uint64_t)&unk_1F1B6A908);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v20;
      *(void *)(v24 + 8) = v21;
      *(void *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
      uint64_t v10 = v56;
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BFE9420C();
  long long v58 = 0uLL;
  LOBYTE(v59) = 0;
  sub_1C15206EC();
  long long v18 = v68;
  long long v58 = xmmword_1C153AB20;
  LOBYTE(v59) = 0;
  sub_1BFE922A0();
  sub_1C152065C();
  uint64_t v25 = v68;
  sub_1BFE9DEBC(0, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
  long long v58 = xmmword_1C1557FA0;
  LOBYTE(v59) = 0;
  sub_1BFE94178();
  sub_1C152065C();
  uint64_t v55 = v25;
  uint64_t v27 = v68;
  long long v68 = xmmword_1C1557FB0;
  char v69 = 0;
  sub_1BFE9224C();
  sub_1C152065C();
  uint64_t v28 = *((void *)&v58 + 1);
  uint64_t v53 = v27;
  uint64_t v54 = v58;
  LODWORD(v27) = v59;
  long long v68 = xmmword_1C1557FD0;
  char v69 = 0;
  sub_1BFE94124();
  sub_1C152065C();
  uint64_t v51 = v28;
  int v52 = v27;
  uint64_t v44 = *((void *)&v58 + 1);
  uint64_t v41 = v58;
  uint64_t v45 = v59;
  uint64_t v46 = v60;
  uint64_t v47 = v61;
  uint64_t v48 = v62;
  uint64_t v49 = v63;
  uint64_t v50 = v64;
  uint64_t v43 = v65;
  uint64_t v42 = v66;
  LODWORD(v28) = v67;
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  long long v58 = xmmword_1C1557FC0;
  LOBYTE(v59) = 0;
  sub_1BFE94094();
  sub_1C152065C();
  int v40 = v28;
  uint64_t v29 = v41;
  uint64_t v39 = v68;
  long long v58 = xmmword_1C1557FE0;
  LOBYTE(v59) = 0;
  uint64_t v30 = sub_1C152061C();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v7);
  *(_OWORD *)a2 = v18;
  uint64_t v31 = v53;
  *(void *)(a2 + 16) = v55;
  *(void *)(a2 + 24) = v31;
  uint64_t v32 = v51;
  *(void *)(a2 + 32) = v54;
  *(void *)(a2 + 40) = v32;
  *(unsigned char *)(a2 + 48) = v52;
  *(_DWORD *)(a2 + 49) = v68;
  *(_DWORD *)(a2 + 52) = *(_DWORD *)((char *)&v68 + 3);
  uint64_t v33 = v44;
  *(void *)(a2 + 56) = v29;
  *(void *)(a2 + 64) = v33;
  uint64_t v34 = v46;
  *(void *)(a2 + 72) = v45;
  *(void *)(a2 + 80) = v34;
  uint64_t v35 = v48;
  *(void *)(a2 + 88) = v47;
  *(void *)(a2 + 96) = v35;
  uint64_t v36 = v50;
  *(void *)(a2 + 104) = v49;
  *(void *)(a2 + 112) = v36;
  uint64_t v37 = v42;
  *(void *)(a2 + 120) = v43;
  *(void *)(a2 + 128) = v37;
  *(unsigned char *)(a2 + 136) = v40;
  *(_DWORD *)(a2 + 140) = *(_DWORD *)&v70[3];
  *(_DWORD *)(a2 + 137) = *(_DWORD *)v70;
  *(void *)(a2 + 144) = v39;
  *(unsigned char *)(a2 + 152) = v30;
  uint64_t v38 = (uint64_t)v56;
  return __swift_destroy_boxed_opaque_existential_1(v38);
}

unint64_t sub_1BFE9224C()
{
  unint64_t result = qword_1EB875FD8;
  if (!qword_1EB875FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875FD8);
  }
  return result;
}

unint64_t sub_1BFE922A0()
{
  unint64_t result = qword_1EB875268;
  if (!qword_1EB875268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875268);
  }
  return result;
}

uint64_t sub_1BFE922F4(void *a1)
{
  sub_1C0908CDC(0, &qword_1EB884E68, (void (*)(void))sub_1C00790AC, (void (*)(void))sub_1C0079100);
  uint64_t v3 = v2;
  uint64_t v67 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v42[-v4];
  sub_1C08EC208();
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t KeyPath = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08C3628();
  sub_1C085F050(&qword_1EB891E20, (void (*)(uint64_t))sub_1C08C3628);
  uint64_t v10 = (void *)v106;
  sub_1C1520EBC();
  uint64_t v11 = v10;
  if (v10)
  {
LABEL_10:
    sub_1C0038728(a1, (uint64_t)v11);
    swift_willThrow();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return KeyPath;
  }
  uint64_t v12 = v5;
  uint64_t v106 = v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = sub_1C1520EAC();
  char v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v15 = sub_1C152070C();
    uint64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      uint64_t v17 = (unsigned char *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16) {
          goto LABEL_7;
        }
      }
      uint64_t v106 = (uint64_t)v8;
      uint64_t v23 = *((void *)v17 - 2);
      uint64_t v22 = *((void *)v17 - 1);
      swift_bridgeObjectRetain_n();
      uint64_t v24 = swift_bridgeObjectRelease();
      MEMORY[0x1F4188790](v24);
      sub_1C08C36AC();
      sub_1BFE93330();
      sub_1C08C3700();
      uint64_t KeyPath = swift_getKeyPath();
      swift_retain();
      uint64_t v25 = sub_1C085FB14((uint64_t)&unk_1F1B6A878);
      swift_release_n();
      sub_1C02570B4();
      uint64_t v11 = (void *)swift_allocError();
      *(void *)uint64_t v26 = v23;
      *(void *)(v26 + 8) = v22;
      *(void *)(v26 + 16) = v25;
      *(_OWORD *)(v26 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1BFE94AD4(v23, v22, 1);
      (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v106, v69);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = sub_1C07F0DDC((uint64_t)v8, 0, 0, 0, (void (*)(void, __n128))sub_1C08EC208);
  uint64_t v20 = v19;
  long long v93 = xmmword_1C153AB20;
  LOBYTE(v94) = 0;
  uint64_t v21 = sub_1C152069C();
  uint64_t v66 = v28;
  uint64_t v64 = v21;
  long long v65 = xmmword_1C1557FA0;
  long long v93 = xmmword_1C1557FA0;
  LOBYTE(v94) = 0;
  char v29 = sub_1C152071C();
  if (v29)
  {
    long long v89 = v65;
    char v90 = 0;
    sub_1C08EC29C();
    uint64_t v30 = v106;
    sub_1C15206EC();
    uint64_t v63 = v18;
    uint64_t v31 = v8;
    *(void *)&long long v65 = v20;
    uint64_t v32 = sub_1C1517E5C();
    uint64_t v33 = v12;
    uint64_t v34 = v32;
    (*(void (**)(unsigned char *, uint64_t))(v67 + 8))(v33, v30);
  }
  else
  {
    uint64_t v63 = v18;
    uint64_t v31 = v8;
    *(void *)&long long v65 = v20;
    uint64_t v34 = MEMORY[0x1E4FBC860];
  }
  long long v93 = xmmword_1C1557FB0;
  LOBYTE(v94) = 0;
  sub_1BFE9439C();
  uint64_t v35 = v31;
  sub_1C152065C();
  uint64_t v36 = v89;
  v103[8] = xmmword_1C1557FD0;
  char v104 = 0;
  sub_1BFE943F0();
  sub_1C152065C();
  uint64_t v106 = v36;
  sub_1BFE99AAC((uint64_t)v105, (uint64_t)v103, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
  sub_1BFE9DEBC(0, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
  long long v93 = xmmword_1C1557FC0;
  LOBYTE(v94) = 0;
  sub_1BFE94178();
  sub_1C152065C();
  uint64_t v67 = v89;
  long long v89 = xmmword_1C1557FE0;
  char v90 = 0;
  sub_1BFE94124();
  sub_1C152065C();
  uint64_t v61 = v34;
  uint64_t v62 = a1;
  uint64_t v53 = v93;
  uint64_t v54 = v94;
  uint64_t v56 = *((void *)&v93 + 1);
  uint64_t v57 = v95;
  uint64_t v58 = v96;
  uint64_t v59 = v97;
  uint64_t v37 = v98;
  uint64_t v60 = v99;
  uint64_t v55 = v100;
  uint64_t v38 = v101;
  char v39 = v102;
  sub_1BFE9DEBC(0, &qword_1EB879EC0, (uint64_t)&type metadata for FormatTextNodeTransform, MEMORY[0x1E4FBB320]);
  long long v93 = xmmword_1C1557FF0;
  LOBYTE(v94) = 0;
  sub_1BFE94260();
  sub_1C152065C();
  LOBYTE(v36) = v39;
  uint64_t v52 = v37;
  uint64_t v40 = v89;
  long long v91 = xmmword_1C1558010;
  char v92 = 0;
  sub_1BFE942F4();
  sub_1C152065C();
  uint64_t v51 = v40;
  sub_1BFE99AAC((uint64_t)&v93, (uint64_t)&v89, (unint64_t *)&qword_1EB876CA0, (uint64_t)&type metadata for FormatParagraphStyle);
  long long v74 = xmmword_1C1558020;
  char v75 = 0;
  sub_1BFE7E344();
  sub_1C152065C();
  uint64_t v50 = v86;
  int v49 = v87;
  sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  long long v74 = xmmword_1C1558030;
  char v75 = 0;
  sub_1BFE94094();
  sub_1C152065C();
  uint64_t v48 = v86;
  long long v74 = xmmword_1C1558040;
  char v75 = 0;
  sub_1BFE94348();
  sub_1C152065C();
  uint64_t v46 = v86;
  uint64_t v47 = v87;
  long long v74 = xmmword_1C1558050;
  char v75 = 0;
  sub_1C152065C();
  uint64_t v44 = v86;
  uint64_t v45 = v87;
  long long v74 = xmmword_1C1533150;
  char v75 = 0;
  int v43 = sub_1C152061C();
  long long v74 = xmmword_1C1558060;
  char v75 = 0;
  sub_1C152065C();
  (*(void (**)(unsigned char *, uint64_t))(v68 + 8))(v35, v69);
  uint64_t v41 = v86;
  uint64_t v88 = v106;
  sub_1BFE99AAC((uint64_t)v103, (uint64_t)&v86, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
  *(void *)&long long v76 = v53;
  *((void *)&v76 + 1) = v56;
  uint64_t v77 = v54;
  uint64_t v78 = v57;
  uint64_t v79 = v58;
  uint64_t v80 = v59;
  uint64_t v81 = v52;
  uint64_t v82 = v60;
  uint64_t v83 = v55;
  uint64_t v84 = v38;
  char v85 = v36;
  sub_1BFE99AAC((uint64_t)&v89, (uint64_t)&v74, (unint64_t *)&qword_1EB876CA0, (uint64_t)&type metadata for FormatParagraphStyle);
  v72[1] = v47;
  uint64_t v73 = v48;
  uint64_t v70 = v41;
  v71[0] = v44;
  v71[1] = v45;
  v72[0] = v46;
  type metadata accessor for FormatTextNodeStyle();
  swift_allocObject();
  uint64_t KeyPath = FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(v63, v65, v64, v66, v61, &v88, (uint64_t)&v86, v67, &v76, v51, (uint64_t)&v74, v50, v49, &v73, v72, v71, v43, &v70);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
  return KeyPath;
}

uint64_t type metadata accessor for FormatTextNodeStyle()
{
  return self;
}

unint64_t sub_1BFE93330()
{
  unint64_t result = qword_1EB889050;
  if (!qword_1EB889050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889050);
  }
  return result;
}

uint64_t FormatTextNodeStyle.Selector.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v48 = a2;
  sub_1C08C3754();
  uint64_t v6 = v5;
  uint64_t v59 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C08C37E8();
  sub_1C085F050(&qword_1EB891E30, (void (*)(uint64_t))sub_1C08C37E8);
  sub_1C1520EBC();
  if (!v2)
  {
    uint64_t v9 = v48;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v10 = sub_1C1520EAC();
    char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
    swift_bridgeObjectRelease();
    uint64_t v12 = v8;
    if (v11)
    {
      uint64_t v13 = sub_1C152070C();
      uint64_t v14 = *(void *)(v13 + 16);
      if (v14)
      {
        uint64_t v15 = (unsigned char *)(v13 + 48);
        while (*v15 != 1)
        {
          v15 += 24;
          if (!--v14) {
            goto LABEL_7;
          }
        }
        uint64_t v17 = *((void *)v15 - 1);
        uint64_t v48 = (void *)*((void *)v15 - 2);
        swift_bridgeObjectRetain_n();
        uint64_t v18 = swift_bridgeObjectRelease();
        MEMORY[0x1F4188790](v18);
        sub_1C08C386C();
        sub_1BFE94444();
        sub_1C08C38C0();
        swift_getKeyPath();
        swift_retain();
        uint64_t v19 = sub_1C085FB14((uint64_t)&unk_1F1B6A8A8);
        swift_release_n();
        sub_1C02570B4();
        uint64_t v3 = (void *)swift_allocError();
        uint64_t v20 = (uint64_t)v48;
        *(void *)uint64_t v21 = v48;
        *(void *)(v21 + 8) = v17;
        *(void *)(v21 + 16) = v19;
        *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
        swift_willThrow();
        sub_1BFE94AD4(v20, v17, 1);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v12, v6);
        goto LABEL_10;
      }
LABEL_7:
      swift_bridgeObjectRelease();
    }
    sub_1BFE9420C();
    memset(v49, 0, 17);
    sub_1C15206EC();
    long long v16 = v54;
    v49[0] = xmmword_1C153AB20;
    LOBYTE(v49[1]) = 0;
    sub_1BFE9439C();
    sub_1C152065C();
    uint64_t v22 = v54;
    v56[8] = xmmword_1C1557FA0;
    char v57 = 0;
    sub_1BFE943F0();
    sub_1C152065C();
    uint64_t v47 = v22;
    sub_1BFE99AAC((uint64_t)v58, (uint64_t)v56, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
    sub_1BFE9DEBC(0, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
    v49[0] = xmmword_1C1557FB0;
    LOBYTE(v49[1]) = 0;
    sub_1BFE94178();
    sub_1C152065C();
    uint64_t v23 = v54;
    long long v54 = xmmword_1C1557FD0;
    char v55 = 0;
    sub_1BFE94124();
    sub_1C152065C();
    long long v42 = v49[0];
    long long v43 = v49[1];
    long long v44 = v49[2];
    long long v45 = v49[3];
    uint64_t v46 = v23;
    uint64_t v40 = *((void *)&v49[4] + 1);
    uint64_t v41 = *(void *)&v49[4];
    int v39 = LOBYTE(v49[5]);
    sub_1BFE9DEBC(0, &qword_1EB879EC0, (uint64_t)&type metadata for FormatTextNodeTransform, MEMORY[0x1E4FBB320]);
    v49[0] = xmmword_1C1557FC0;
    LOBYTE(v49[1]) = 0;
    sub_1BFE94260();
    sub_1C152065C();
    uint64_t v38 = v54;
    *(_OWORD *)&v53[200] = xmmword_1C1557FE0;
    v53[216] = 0;
    sub_1BFE942F4();
    sub_1C152065C();
    sub_1BFE99AAC((uint64_t)&v54, (uint64_t)v53, (unint64_t *)&qword_1EB876CA0, (uint64_t)&type metadata for FormatParagraphStyle);
    v49[0] = xmmword_1C1557FF0;
    LOBYTE(v49[1]) = 0;
    sub_1BFE7E344();
    sub_1C152065C();
    uint64_t v36 = v50;
    int v35 = BYTE8(v50);
    sub_1BFEFF3E8(0, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    uint64_t v25 = v24;
    v49[0] = xmmword_1C1558010;
    LOBYTE(v49[1]) = 0;
    sub_1BFE94094();
    uint64_t v37 = v25;
    sub_1C152065C();
    uint64_t v32 = a1;
    uint64_t v33 = v50;
    v49[0] = xmmword_1C1558020;
    LOBYTE(v49[1]) = 0;
    sub_1BFE94348();
    uint64_t v34 = v6;
    sub_1C152065C();
    long long v31 = v50;
    v49[0] = xmmword_1C1558030;
    LOBYTE(v49[1]) = 0;
    sub_1C152065C();
    long long v30 = v50;
    v49[0] = xmmword_1C1558040;
    LOBYTE(v49[1]) = 0;
    int v29 = sub_1C152061C();
    long long v50 = xmmword_1C1558050;
    char v51 = 0;
    sub_1C152065C();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v12, v34);
    uint64_t v26 = v52;
    v49[0] = v16;
    *(void *)&v49[1] = v47;
    sub_1BFE99AAC((uint64_t)v56, (uint64_t)&v49[1] + 8, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
    *((void *)&v49[9] + 1) = v46;
    v49[10] = v42;
    v49[11] = v43;
    v49[12] = v44;
    v49[13] = v45;
    *(void *)&v49[14] = v41;
    *((void *)&v49[14] + 1) = v40;
    LOBYTE(v49[15]) = v39;
    *((void *)&v49[15] + 1) = v38;
    sub_1BFE99AAC((uint64_t)v53, (uint64_t)&v49[16], (unint64_t *)&qword_1EB876CA0, (uint64_t)&type metadata for FormatParagraphStyle);
    *((void *)&v49[28] + 1) = v36;
    LOBYTE(v49[29]) = v35;
    *((void *)&v49[29] + 1) = v33;
    v49[30] = v31;
    v49[31] = v30;
    LOBYTE(v49[32]) = v29;
    *((void *)&v49[32] + 1) = v26;
    memcpy(v9, v49, 0x210uLL);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
LABEL_10:
  sub_1C0038728(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BFE94094()
{
  unint64_t result = qword_1EB874A60;
  if (!qword_1EB874A60)
  {
    sub_1BFEFF3E8(255, (unint64_t *)&qword_1EB874A68, (uint64_t (*)(void))sub_1C0084108, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874A60);
  }
  return result;
}

unint64_t sub_1BFE94124()
{
  unint64_t result = qword_1EB874240;
  if (!qword_1EB874240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB874240);
  }
  return result;
}

unint64_t sub_1BFE94178()
{
  unint64_t result = qword_1EB879D30;
  if (!qword_1EB879D30)
  {
    sub_1BFE9DEBC(255, &qword_1EB879D28, (uint64_t)&type metadata for FormatBorder, MEMORY[0x1E4FBB320]);
    sub_1C0083358();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879D30);
  }
  return result;
}

unint64_t sub_1BFE9420C()
{
  unint64_t result = qword_1EB87D9A8;
  if (!qword_1EB87D9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87D9A8);
  }
  return result;
}

unint64_t sub_1BFE94260()
{
  unint64_t result = qword_1EB879EC8;
  if (!qword_1EB879EC8)
  {
    sub_1BFE9DEBC(255, &qword_1EB879EC0, (uint64_t)&type metadata for FormatTextNodeTransform, MEMORY[0x1E4FBB320]);
    sub_1C00724A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879EC8);
  }
  return result;
}

unint64_t sub_1BFE942F4()
{
  unint64_t result = qword_1EB876C90;
  if (!qword_1EB876C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876C90);
  }
  return result;
}

unint64_t sub_1BFE94348()
{
  unint64_t result = qword_1EB87E2A0;
  if (!qword_1EB87E2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87E2A0);
  }
  return result;
}

unint64_t sub_1BFE9439C()
{
  unint64_t result = qword_1EB873B20;
  if (!qword_1EB873B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873B20);
  }
  return result;
}

unint64_t sub_1BFE943F0()
{
  unint64_t result = qword_1EB873B10;
  if (!qword_1EB873B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873B10);
  }
  return result;
}

unint64_t sub_1BFE94444()
{
  unint64_t result = qword_1EB889068;
  if (!qword_1EB889068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB889068);
  }
  return result;
}

unint64_t sub_1BFE94498()
{
  unint64_t result = qword_1EB8891D8;
  if (!qword_1EB8891D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8891D8);
  }
  return result;
}

unint64_t sub_1BFE944EC()
{
  unint64_t result = qword_1EB8891C0;
  if (!qword_1EB8891C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8891C0);
  }
  return result;
}

uint64_t sub_1BFE94540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return FormatEquation.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t FormatEquation.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v20 = a4;
  uint64_t v21 = a3;
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v19 - v11;
  __swift_project_boxed_opaque_existential_1(v13, v13[3]);
  sub_1C1520E9C();
  if (!v4)
  {
    v19[1] = v7;
    v19[2] = v12;
    v19[0] = v9;
    __swift_project_boxed_opaque_existential_1(v22, v22[3]);
    uint64_t v14 = sub_1C1520ABC();
    FormatEquation.init(value:)(v14, v15, a2, v21, &v23);
    long long v16 = v20;
    uint64_t v17 = v23;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    *long long v16 = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t FormatEquation.init(operand:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  type metadata accessor for FormatEquationToken();
  sub_1C152089C();
  swift_allocObject();
  uint64_t v6 = sub_1C151EC6C();
  uint64_t v7 = *(void *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v8, a1, a2);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = sub_1BFE94A38(v6);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, a2);
  *a3 = v9;
  return result;
}

uint64_t type metadata accessor for FormatEquationToken()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_1BFE94914(unsigned char *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 1uLL) {
    uint64_t v4 = 1;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(unsigned char *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 0;
  }
  a1[v4] = v10;
  return a1;
}

uint64_t sub_1BFE94A38(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BFE94A68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1BFE94AB4(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_1BFE94AB4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for FormatBoolean(uint64_t a1)
{
  return sub_1BFE94AD4(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1BFE94AD4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FormatEquation.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  long long v44 = a5;
  uint64_t v68 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = sub_1C151E68C();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1517DCC();
  swift_allocObject();
  uint64_t v13 = a1;
  uint64_t v66 = sub_1C1517DBC();
  uint64_t v14 = swift_allocObject();
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  type metadata accessor for FormatEquationToken();
  *(void *)(v14 + 16) = sub_1C151E30C();
  sub_1C151E67C();
  unint64_t v15 = sub_1C151E63C();
  unint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v17 >> 60 == 15)
  {
    type metadata accessor for FormatLayoutError();
    sub_1BFE7E51C();
    swift_allocError();
    *uint64_t v18 = v13;
    v18[1] = a2;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    return swift_release();
  }
  v43[1] = v14 + 16;
  uint64_t v62 = v14;
  uint64_t v63 = a2;
  unint64_t v19 = v17 >> 62;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = v60;
  switch(v17 >> 62)
  {
    case 1uLL:
      uint64_t v24 = (int)v15;
      uint64_t v25 = (uint64_t)v15 >> 32;
      goto LABEL_7;
    case 2uLL:
      uint64_t v24 = *(void *)(v15 + 16);
      uint64_t v25 = *(void *)(v15 + 24);
LABEL_7:
      if (v25 >= v24) {
        goto LABEL_8;
      }
      goto LABEL_52;
    case 3uLL:
      goto LABEL_38;
    default:
      uint64_t v24 = 0;
      uint64_t v25 = BYTE6(v17);
LABEL_8:
      uint64_t v61 = v13;
      if (v24 != v25)
      {
        uint64_t v20 = 0;
        uint64_t v58 = BYTE6(v17);
        uint64_t v59 = (int)v15;
        unint64_t v56 = v15 >> 8;
        uint64_t v57 = (uint64_t)v15 >> 32;
        unint64_t v54 = v15 >> 24;
        unint64_t v55 = v15 >> 16;
        unint64_t v52 = v15 >> 40;
        unint64_t v53 = HIDWORD(v15);
        unint64_t v50 = HIBYTE(v15);
        unint64_t v51 = HIWORD(v15);
        unint64_t v49 = v17 >> 8;
        unint64_t v48 = v17 >> 16;
        unint64_t v47 = v17 >> 24;
        unint64_t v46 = HIDWORD(v17);
        unint64_t v45 = v17 >> 40;
        while (v24 < v25)
        {
          if (v19)
          {
            if (v19 == 1)
            {
              if (v24 < v59 || v24 >= v57) {
                goto LABEL_46;
              }
              uint64_t v26 = sub_1C151572C();
              if (!v26) {
                goto LABEL_54;
              }
              uint64_t v27 = v26;
              uint64_t v28 = sub_1C151575C();
              uint64_t v29 = v24 - v28;
              if (__OFSUB__(v24, v28)) {
                goto LABEL_49;
              }
            }
            else
            {
              if (v24 < *(void *)(v15 + 16)) {
                goto LABEL_48;
              }
              if (v24 >= *(void *)(v15 + 24)) {
                goto LABEL_50;
              }
              uint64_t v31 = sub_1C151572C();
              if (!v31) {
                goto LABEL_55;
              }
              uint64_t v27 = v31;
              uint64_t v32 = sub_1C151575C();
              uint64_t v29 = v24 - v32;
              if (__OFSUB__(v24, v32)) {
                goto LABEL_51;
              }
            }
            int v30 = *(unsigned __int8 *)(v27 + v29);
          }
          else
          {
            if (v24 >= v58) {
              goto LABEL_47;
            }
            v67[0] = v15;
            v67[1] = v56;
            v67[2] = v55;
            v67[3] = v54;
            v67[4] = v53;
            v67[5] = v52;
            v67[6] = v51;
            v67[7] = v50;
            v67[8] = v17;
            _OWORD v67[9] = v49;
            v67[10] = v48;
            v67[11] = v47;
            v67[12] = v46;
            v67[13] = v45;
            int v30 = v67[v24];
          }
          uint64_t v33 = v24 + 1;
          if (v30 == 32)
          {
            if (v24 < v20) {
              goto LABEL_45;
            }
            uint64_t v34 = sub_1C151604C();
            unint64_t v36 = v35;
            sub_1BFE950BC(v34, v35);
            if (v23)
            {
              swift_release();
              swift_bridgeObjectRelease();
              sub_1BFE95878(v15, v17);
              sub_1BFE95664(v34, v36);
              return swift_release();
            }
            sub_1BFE95664(v34, v36);
            uint64_t v20 = v33;
          }
          uint64_t v24 = v33;
          if (v25 == v33) {
            goto LABEL_10;
          }
        }
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
      }
      uint64_t v20 = 0;
LABEL_10:
      if (v19)
      {
        if (v19 == 1)
        {
          uint64_t v22 = (int)v15;
          uint64_t v21 = (uint64_t)v15 >> 32;
        }
        else
        {
          uint64_t v22 = *(void *)(v15 + 16);
          uint64_t v21 = *(void *)(v15 + 24);
        }
      }
      else
      {
        uint64_t v22 = 0;
        uint64_t v21 = BYTE6(v17);
      }
LABEL_38:
      if (v21 < v20 || v21 < v22) {
        goto LABEL_53;
      }
      uint64_t v37 = sub_1C151604C();
      unint64_t v39 = v38;
      uint64_t v40 = v62;
      sub_1BFE950BC(v37, v38);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BFE95878(v15, v17);
      sub_1BFE95664(v37, v39);
      if (v23) {
        return swift_release();
      }
      swift_beginAccess();
      uint64_t v42 = *(void *)(v40 + 16);
      swift_bridgeObjectRetain();
      uint64_t result = swift_release();
      *long long v44 = v42;
      return result;
  }
}

void sub_1BFE950BC(uint64_t a1, unint64_t a2)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = type metadata accessor for FormatEquationToken();
  MEMORY[0x1F4188790](v5);
  MEMORY[0x1F4188790](v6);
  MEMORY[0x1F4188790](v7);
  unint64_t v8 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)a1 == a1 >> 32) {
        return;
      }
      goto LABEL_7;
    case 2uLL:
      if (*(void *)(a1 + 16) != *(void *)(a1 + 24)) {
        goto LABEL_7;
      }
      return;
    case 3uLL:
      return;
    default:
      if ((a2 & 0xFF000000000000) == 0) {
        return;
      }
LABEL_7:
      sub_1C1517D9C();
      if (!v2)
      {
        swift_storeEnumTagMultiPayload();
        swift_beginAccess();
        sub_1C151ED5C();
        sub_1C151ED1C();
        swift_endAccess();
        return;
      }
      if (v8)
      {
        if (v8 == 1)
        {
          LODWORD(v9) = HIDWORD(a1) - a1;
          if (__OFSUB__(HIDWORD(a1), a1))
          {
LABEL_19:
            __break(1u);
LABEL_20:
            __break(1u);
          }
          uint64_t v9 = (int)v9;
        }
        else
        {
          uint64_t v11 = *(void *)(a1 + 16);
          uint64_t v10 = *(void *)(a1 + 24);
          BOOL v12 = __OFSUB__(v10, v11);
          uint64_t v9 = v10 - v11;
          if (v12) {
            goto LABEL_20;
          }
        }
      }
      else
      {
        uint64_t v9 = BYTE6(a2);
      }
      if (__OFADD__(v9, 2))
      {
        __break(1u);
        __break(1u);
        goto LABEL_19;
      }
      uint64_t v22 = sub_1BFE95784(v9 + 2);
      unint64_t v23 = v13;
      sub_1BFE956BC(0, &qword_1EB87A388, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBB08]);
      uint64_t v15 = v14;
      uint64_t v20 = v14;
      unint64_t v16 = sub_1BFE95708();
      unint64_t v21 = v16;
      LOBYTE(v19[0]) = 34;
      __swift_project_boxed_opaque_existential_1(v19, v15);
      sub_1C151602C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      sub_1C151609C();
      uint64_t v20 = v15;
      unint64_t v21 = v16;
      LOBYTE(v19[0]) = 34;
      __swift_project_boxed_opaque_existential_1(v19, v15);
      sub_1C151602C();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      uint64_t v18 = v22;
      unint64_t v17 = v23;
      sub_1BFE95820(v22, v23);
      sub_1C1517D9C();
      sub_1BFE95664(v18, v17);
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_1C151ED5C();
      sub_1C151ED1C();
      swift_endAccess();

      sub_1BFE95664(v18, v17);
      return;
  }
}

uint64_t sub_1BFE95664(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

void sub_1BFE956BC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1BFE95708()
{
  unint64_t result = qword_1EB87A380;
  if (!qword_1EB87A380)
  {
    sub_1BFE956BC(255, &qword_1EB87A388, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBB08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87A380);
  }
  return result;
}

uint64_t sub_1BFE95784(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result < 15)
    {
      return 0;
    }
    else
    {
      sub_1C151577C();
      swift_allocObject();
      sub_1C151576C();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1C151601C();
        unint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1BFE95820(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1BFE95878(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1BFE95664(a1, a2);
  }
  return a1;
}

NewsFeed::FormatEquationOperator_optional __swiftcall FormatEquationOperator.init(rawValue:)(NewsFeed::FormatEquationOperator_optional rawValue)
{
  if (((rawValue.value - 40) & 0xF8) != 0) {
    char v2 = 6;
  }
  else {
    char v2 = 0x306010600020504uLL >> (8 * (rawValue.value - 40));
  }
  *unint64_t v1 = v2;
  return rawValue;
}

uint64_t sub_1BFE958C0(void *a1)
{
  return FormatSelector.encode(to:)(a1);
}

uint64_t FormatFloat.encode(to:)(void *a1)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_1C151928C();
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1EB93CAB0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v6, v11, v10);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BFE97CE8((uint64_t)v6, (uint64_t)sub_1C01B158C, 0, v8, v9);
  sub_1BFEFE9E8((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    if (v7 >> 61)
    {
      unint64_t v16 = v7;
      FormatFloat.description.getter();
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
      sub_1C1520AFC();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v16 = *(void *)(v7 + 16);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
      sub_1BFDC74E8();
      sub_1C1520B2C();
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t FormatEquation.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v30 = *(void *)(a2 + 24);
  uint64_t v7 = type metadata accessor for FormatEquationToken();
  uint64_t v8 = sub_1C151FD8C();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  uint64_t v32 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v33 = (char *)&v27 - v10;
  uint64_t v27 = v6;
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v28 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C151928C();
  uint64_t v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1EB93CAB0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v15, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BFE97CE8((uint64_t)v15, (uint64_t)sub_1C01B158C, 0, v17, v18);
  sub_1BFE9627C((uint64_t)v15);
  if (!v3)
  {
    if (MEMORY[0x1C18C6830](v16, v7) == 1)
    {
      uint64_t v36 = v16;
      sub_1C151ED5C();
      swift_getWitnessTable();
      unint64_t v21 = v33;
      sub_1C151F12C();
      uint64_t v22 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, v7) == 1)
      {
        uint64_t v7 = v31;
        uint64_t v22 = v32;
      }
      else if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v25 = v28;
        uint64_t v24 = v29;
        uint64_t v26 = v27;
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v28, v21, v27);
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
        sub_1C1520B2C();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      }
      (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v7);
    }
    uint64_t v36 = v16;
    FormatEquation.description.getter(a2);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
    sub_1C1520AFC();
    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t FormatSelector.encode(to:)(void *a1)
{
  uint64_t v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520EEC();
  v15[3] = v7;
  v15[4] = v8;
  v15[1] = 33;
  void v15[2] = 0xE100000000000000;
  sub_1BFF27ECC();
  if ((sub_1C151FF0C() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  if (qword_1EB887638 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1C151928C();
  uint64_t v12 = __swift_project_value_buffer(v11, (uint64_t)qword_1EB93CA98);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v6, v12, v11);
  type metadata accessor for FormatVersionRequirement.Value(0);
  uint64_t v13 = swift_storeEnumTagMultiPayload();
  MEMORY[0x1F4188790](v13);
  v15[-2] = v7;
  v15[-1] = v8;
  sub_1BFE97CE8((uint64_t)v6, (uint64_t)sub_1C11C5260, (uint64_t)&v15[-4], v9, v10);
  sub_1BFE9627C((uint64_t)v6);
  if (!v2)
  {
LABEL_5:
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
    sub_1C1520AFC();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t sub_1BFE961C8@<X0>(void *a1@<X8>)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  a1[3] = &type metadata for TraversalOnlyEncoder.SingleValueContainer;
  a1[4] = sub_1BFE96228();
  *a1 = v4;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BFE96228()
{
  unint64_t result = qword_1EB862EE8;
  if (!qword_1EB862EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862EE8);
  }
  return result;
}

uint64_t sub_1BFE9627C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FormatVersionRequirement(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatSystemColor.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v150 = (char *)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v149 = (char *)&v108 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v148 = (char *)&v108 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v147 = (char *)&v108 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v146 = (char *)&v108 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v145 = (char *)&v108 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v144 = (char *)&v108 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v143 = (char *)&v108 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v142 = (char *)&v108 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v141 = (char *)&v108 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v140 = (char *)&v108 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v139 = (char *)&v108 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v138 = (char *)&v108 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v137 = (char *)&v108 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v136 = (char *)&v108 - v32;
  MEMORY[0x1F4188790](v33);
  uint64_t v135 = (char *)&v108 - v34;
  MEMORY[0x1F4188790](v35);
  uint64_t v134 = (char *)&v108 - v36;
  MEMORY[0x1F4188790](v37);
  uint64_t v133 = (char *)&v108 - v38;
  MEMORY[0x1F4188790](v39);
  uint64_t v132 = (char *)&v108 - v40;
  MEMORY[0x1F4188790](v41);
  uint64_t v131 = (char *)&v108 - v42;
  MEMORY[0x1F4188790](v43);
  uint64_t v130 = (char *)&v108 - v44;
  MEMORY[0x1F4188790](v45);
  uint64_t v129 = (char *)&v108 - v46;
  MEMORY[0x1F4188790](v47);
  uint64_t v128 = (char *)&v108 - v48;
  MEMORY[0x1F4188790](v49);
  uint64_t v126 = (char *)&v108 - v50;
  MEMORY[0x1F4188790](v51);
  uint64_t v125 = (char *)&v108 - v52;
  MEMORY[0x1F4188790](v53);
  uint64_t v123 = (char *)&v108 - v54;
  MEMORY[0x1F4188790](v55);
  uint64_t v127 = (char *)&v108 - v56;
  MEMORY[0x1F4188790](v57);
  uint64_t v121 = (char *)&v108 - v58;
  MEMORY[0x1F4188790](v59);
  uint64_t v124 = (char *)&v108 - v60;
  MEMORY[0x1F4188790](v61);
  uint64_t v120 = (char *)&v108 - v62;
  MEMORY[0x1F4188790](v63);
  uint64_t v122 = (char *)&v108 - v64;
  MEMORY[0x1F4188790](v65);
  uint64_t v119 = (char *)&v108 - v66;
  MEMORY[0x1F4188790](v67);
  uint64_t v118 = (char *)&v108 - v68;
  MEMORY[0x1F4188790](v69);
  uint64_t v117 = (char *)&v108 - v70;
  MEMORY[0x1F4188790](v71);
  uint64_t v116 = (char *)&v108 - v72;
  MEMORY[0x1F4188790](v73);
  uint64_t v115 = (char *)&v108 - v74;
  MEMORY[0x1F4188790](v75);
  uint64_t v114 = (char *)&v108 - v76;
  MEMORY[0x1F4188790](v77);
  uint64_t v113 = (char *)&v108 - v78;
  MEMORY[0x1F4188790](v79);
  uint64_t v112 = (char *)&v108 - v80;
  MEMORY[0x1F4188790](v81);
  uint64_t v111 = (char *)&v108 - v82;
  MEMORY[0x1F4188790](v83);
  uint64_t v110 = (char *)&v108 - v84;
  MEMORY[0x1F4188790](v85);
  uint64_t v87 = (char *)&v108 - v86;
  uint64_t v88 = *v1;
  uint64_t v151 = a1;
  uint64_t v152 = v88;
  uint64_t v89 = a1[3];
  uint64_t v90 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v89);
  if (qword_1EB882D28 != -1) {
    swift_once();
  }
  uint64_t v91 = sub_1C151928C();
  uint64_t v92 = __swift_project_value_buffer(v91, (uint64_t)qword_1EB93CAB0);
  long long v93 = *(void (**)(void))(*(void *)(v91 - 8) + 16);
  ((void (*)(char *, uint64_t, uint64_t))v93)(v87, v92, v91);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v94 = v153;
  sub_1BFE97CE8((uint64_t)v87, (uint64_t)sub_1C01B158C, 0, v89, v90);
  if (v94) {
    return sub_1BFEFEB68((uint64_t)v87, type metadata accessor for FormatVersionRequirement);
  }
  uint64_t v153 = v91;
  uint64_t v109 = v93;
  sub_1BFEFEB68((uint64_t)v87, type metadata accessor for FormatVersionRequirement);
  uint64_t v95 = v151;
  uint64_t v96 = v92;
  switch(v152)
  {
    case 1:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v111;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 2:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v112;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 3:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v113;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 4:
      uint64_t v103 = v151[3];
      uint64_t v104 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v103);
      uint64_t v105 = (uint64_t)v114;
      ((void (*)(char *, uint64_t, uint64_t))v109)(v114, v96, v153);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v105, (uint64_t)sub_1C01B158C, 0, v103, v104);
      uint64_t v107 = v105;
      break;
    case 5:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v115;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 6:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v116;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 7:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v117;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 8:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v118;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 9:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v119;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 10:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v153, (uint64_t)qword_1EB93CA08);
      uint64_t v107 = (uint64_t)v122;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 11:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v120;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 12:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v153, (uint64_t)qword_1EB93CA08);
      uint64_t v107 = (uint64_t)v124;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 13:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v121;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 14:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      if (qword_1EB887600 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v153, (uint64_t)qword_1EB93CA08);
      uint64_t v107 = (uint64_t)v127;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 15:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v123;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 16:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v125;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 17:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v126;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 18:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v128;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 19:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v129;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 20:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v130;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 21:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v131;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 22:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v132;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 23:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v133;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 24:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v134;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 25:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v135;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 26:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v136;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 27:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v137;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 28:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v138;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 29:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v139;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 30:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v140;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 31:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v141;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 32:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v142;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 33:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v143;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 34:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v144;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 35:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v145;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 36:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v146;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 37:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v147;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 38:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      uint64_t v107 = (uint64_t)v148;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 39:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v153, (uint64_t)qword_1EB93CA80);
      uint64_t v107 = (uint64_t)v149;
      v109();
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    case 40:
      uint64_t v101 = v151[3];
      uint64_t v102 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v101);
      if (qword_1EB887630 != -1) {
        swift_once();
      }
      __swift_project_value_buffer(v153, (uint64_t)qword_1EB93CA80);
      uint64_t v107 = (uint64_t)v150;
      v109();
      swift_storeEnumTagMultiPayload();
LABEL_57:
      sub_1BFE97CE8(v107, (uint64_t)sub_1C01B158C, 0, v101, v102);
      break;
    default:
      uint64_t v97 = v151[3];
      uint64_t v98 = v151[4];
      __swift_project_boxed_opaque_existential_1(v151, v97);
      uint64_t v99 = v92;
      uint64_t v100 = (uint64_t)v110;
      ((void (*)(char *, uint64_t, uint64_t))v109)(v110, v99, v153);
      swift_storeEnumTagMultiPayload();
      sub_1BFE97CE8(v100, (uint64_t)sub_1C01B158C, 0, v97, v98);
      uint64_t v107 = v100;
      break;
  }
  sub_1BFEFEB68(v107, type metadata accessor for FormatVersionRequirement);
  __swift_project_boxed_opaque_existential_1(v95, v95[3]);
  sub_1C1520EEC();
  char v156 = v152;
  FormatSystemColor.rawValue.getter();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
  sub_1C1520AFC();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
}

uint64_t sub_1BFE97CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = a4;
  uint64_t v9 = a5;
  v6[2] = a2;
  v6[3] = a3;
  return sub_1BFEFC30C(a1, (uint64_t)sub_1C02F624C, (uint64_t)v7, (uint64_t)sub_1C02F7C80, (uint64_t)v6);
}

unint64_t FormatSystemColor.rawValue.getter()
{
  unint64_t result = 0x6574696877;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6B63616C62;
      break;
    case 2:
      unint64_t result = 0x7261656C63;
      break;
    case 3:
      unint64_t result = 6579570;
      break;
    case 4:
      unint64_t result = 0x6E65657267;
      break;
    case 5:
      unint64_t result = 1702194274;
      break;
    case 6:
      unint64_t result = 0x65676E61726FLL;
      break;
    case 7:
      unint64_t result = 0x776F6C6C6579;
      break;
    case 8:
      unint64_t result = 1802398064;
      break;
    case 9:
      unint64_t result = 0x656C70727570;
      break;
    case 0xA:
      unint64_t result = 1953393005;
      break;
    case 0xB:
      unint64_t result = 1818322292;
      break;
    case 0xC:
      unint64_t result = 1851881827;
      break;
    case 0xD:
      unint64_t result = 0x6F6769646E69;
      break;
    case 0xE:
      unint64_t result = 0x6E776F7262;
      break;
    case 0xF:
      unint64_t result = 2036429415;
      break;
    case 0x10:
      unint64_t result = 0x3279617267;
      break;
    case 0x11:
      unint64_t result = 0x3379617267;
      break;
    case 0x12:
      unint64_t result = 0x3479617267;
      break;
    case 0x13:
      unint64_t result = 0x3579617267;
      break;
    case 0x14:
      unint64_t result = 0x3679617267;
      break;
    case 0x15:
      unint64_t result = 0x6C6562616CLL;
      break;
    case 0x16:
    case 0x24:
      unint64_t result = 0x7261646E6F636573;
      break;
    case 0x17:
    case 0x25:
      unint64_t result = 0x7972616974726574;
      break;
    case 0x18:
    case 0x26:
      unint64_t result = 0x616E726574617571;
      break;
    case 0x19:
      unint64_t result = 1802398060;
      break;
    case 0x1A:
      unint64_t result = 0x6C6F686563616C70;
      break;
    case 0x1B:
      unint64_t result = 0x6F74617261706573;
      break;
    case 0x1C:
      unint64_t result = 0x655365757161706FLL;
      break;
    case 0x1D:
      unint64_t result = 0x756F72676B636162;
      break;
    case 0x1E:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x1F:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x20:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x21:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x22:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x23:
      unint64_t result = 1819044198;
      break;
    case 0x27:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x28:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BFE980DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FormatEquationToken();
  uint64_t result = FormatEquationToken.description.getter(v2);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t FormatEquationToken.description.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, __n128))(v9 + 16))(v8, v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12[15] = *v8;
    return FormatEquationOperator.description.getter();
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(v4, v8, v1);
    uint64_t v10 = sub_1C152088C();
    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v10;
}

uint64_t FormatFloat.description.getter()
{
  switch(*v0 >> 61)
  {
    case 1:
      uint64_t v4 = 0x286C65786970;
      sub_1C151EF4C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    case 2:
      uint64_t v2 = 0x2864656C616373;
      goto LABEL_6;
    case 3:
      uint64_t v2 = 0x6163736E5563616DLL;
LABEL_6:
      uint64_t v4 = v2;
      uint64_t v3 = swift_retain();
      FormatFloat.description.getter(v3);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      swift_release();
      goto LABEL_9;
    case 4:
      uint64_t v4 = 0x286E6F6974706FLL;
      sub_1C151E80C();
LABEL_8:
      sub_1C151E80C();
LABEL_9:
      uint64_t result = v4;
      break;
    default:
      uint64_t result = sub_1C151EF4C();
      break;
  }
  return result;
}

uint64_t FormatEquationOperator.description.getter()
{
  uint64_t v2 = qword_1C1537778[*v0];
  return MEMORY[0x1C18C62A0](&v2, 1);
}

uint64_t FormatEquation.description.getter(uint64_t a1)
{
  uint64_t v11 = *v1;
  uint64_t v2 = *(void *)(a1 + 24);
  v10[2] = *(void *)(a1 + 16);
  void v10[3] = v2;
  type metadata accessor for FormatEquationToken();
  uint64_t v3 = sub_1C151ED5C();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x1E4FBB1A0];
  uint64_t v7 = sub_1C035E7C8((void (*)(char *, char *))sub_1BFE980DC, (uint64_t)v10, v3, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v6);
  swift_bridgeObjectRelease();
  uint64_t v11 = v7;
  sub_1BFE956BC(0, (unint64_t *)&qword_1EB879F20, v5, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v8 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t destroy for FormatImageNodeStyle.Selector(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) != 0) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  unsigned int v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 <= 0xFD) {
    sub_1BFF04738(*(void *)(a1 + 32), *(void *)(a1 + 40), v2);
  }
  if (*(unsigned __int8 *)(a1 + 136) != 254) {
    swift_release();
  }
  if ((~*(void *)(a1 + 144) & 0xF000000000000007) != 0) {
    swift_release();
  }
  if (*(void *)(a1 + 160) >= 4uLL) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 184);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFE98690()
{
  return sub_1BFE986A8();
}

uint64_t sub_1BFE986A8()
{
  void v10[5] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = v0[2];
  if (__OFADD__(v1, 1)) {
    __break(1u);
  }
  uint64_t v3 = *v0;
  uint64_t v2 = v0[1];
  v0[2] = v1 + 1;
  void v10[3] = &type metadata for TraversalOnlyEncoder;
  v10[4] = sub_1BFEFC8E4();
  sub_1BFEFCD08();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v5 = sub_1C152088C();
  uint64_t v7 = v6;
  *(void *)(inited + 56) = &type metadata for TraversalOnlyEncoder.AnyCodingKey;
  *(void *)(inited + 64) = sub_1BFE98820();
  uint64_t v8 = swift_allocObject();
  *(void *)(inited + 32) = v8;
  *(void *)(v8 + 16) = v5;
  *(void *)(v8 + 24) = v7;
  *(void *)(v8 + 32) = v1;
  *(unsigned char *)(v8 + 40) = 0;
  swift_bridgeObjectRetain();
  sub_1BFEFCE78(inited);
  v10[0] = v3;
  v10[1] = v2;
  swift_bridgeObjectRetain();
  sub_1C151E46C();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

unint64_t sub_1BFE98820()
{
  unint64_t result = qword_1EB862EC8;
  if (!qword_1EB862EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB862EC8);
  }
  return result;
}

uint64_t sub_1BFE98874@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BFE988A4();
  *a1 = result;
  return result;
}

uint64_t sub_1BFE988A4()
{
  unint64_t v0 = sub_1C1520C8C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x28) {
    return 40;
  }
  else {
    return v0;
  }
}

uint64_t FormatTextNodeStyle.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v105 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v106 = (char *)&v105 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v107 = (char *)&v105 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v108 = (uint64_t)&v105 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v109 = (uint64_t)&v105 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v110 = (char *)&v105 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v111 = (char *)&v105 - v18;
  MEMORY[0x1F4188790](v19);
  uint64_t v112 = (char *)&v105 - v20;
  MEMORY[0x1F4188790](v21);
  uint64_t v113 = (char *)&v105 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v114 = (char *)&v105 - v24;
  MEMORY[0x1F4188790](v25);
  uint64_t v115 = (char *)&v105 - v26;
  MEMORY[0x1F4188790](v27);
  uint64_t v116 = (char *)&v105 - v28;
  MEMORY[0x1F4188790](v29);
  uint64_t v117 = (uint64_t)&v105 - v30;
  MEMORY[0x1F4188790](v31);
  uint64_t v118 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&v105 - v32);
  MEMORY[0x1F4188790](v33);
  uint64_t v35 = (char *)&v105 - v34;
  sub_1C08C3500();
  MEMORY[0x1F4188790](v36 - 8);
  uint64_t v38 = (char *)&v105 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a1[3];
  uint64_t v40 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v39);
  sub_1C08C3628();
  uint64_t v42 = v41;
  uint64_t v43 = sub_1C085F050(&qword_1EB891E20, (void (*)(uint64_t))sub_1C08C3628);
  sub_1BFEFBD78(v4, v44, v39, v4, v42, (uint64_t)&type metadata for FormatVersions.JazzkonC, v40, (uint64_t)v38, v43, (uint64_t)&off_1F1C39B68);
  swift_beginAccess();
  uint64_t v119 = v2;
  uint64_t v45 = v2[2];
  uint64_t v46 = v2[3];
  uint64_t v47 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v47 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_1C151928C();
  uint64_t v49 = __swift_project_value_buffer(v48, (uint64_t)qword_1EB93CAB0);
  uint64_t v50 = *(void *)(v48 - 8);
  uint64_t v51 = *(void (**)(char *))(v50 + 16);
  uint64_t v120 = v49;
  uint64_t v121 = v50 + 16;
  v51(v35);
  uint64_t v52 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v53 = v125;
  sub_1C06D1D30(v45, v46, 0, 0, 0, (uint64_t)v35, (uint64_t)sub_1C01B158C, 0);
  if (v53)
  {
    sub_1BFEFEB68((uint64_t)v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v61 = (uint64_t)v38;
  }
  else
  {
    sub_1BFEFEB68((uint64_t)v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v54 = (uint64_t)v118;
    uint64_t v55 = v38;
    uint64_t v57 = v119[4];
    uint64_t v56 = v119[5];
    ((void (*)(void, uint64_t, uint64_t))v51)(v118, v120, v48);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1C06BC598(v57, v56, 1, 0, 0, v54, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v54, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v58 = v119;
    swift_beginAccess();
    uint64_t v59 = v117;
    ((void (*)(uint64_t, uint64_t, uint64_t))v51)(v117, v120, v48);
    swift_storeEnumTagMultiPayload();
    uint64_t v60 = swift_bridgeObjectRetain();
    sub_1C06D1F70(v60, 2, 0, 0);
    sub_1BFEFEB68(v59, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v63 = v58[7];
    uint64_t v64 = (uint64_t)v116;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v116, v120, v48);
    swift_storeEnumTagMultiPayload();
    sub_1BFEF683C(v63);
    sub_1C0710334(v63, 3, 0, 0, v64, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v64, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF68C0(v63);
    sub_1BFE99AAC((uint64_t)(v58 + 8), (uint64_t)v124, (unint64_t *)&qword_1EB873B18, (uint64_t)&type metadata for FormatFill);
    uint64_t v65 = v52;
    uint64_t v66 = (uint64_t)v115;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v115, v120, v48);
    uint64_t v67 = v65;
    swift_storeEnumTagMultiPayload();
    sub_1C090750C(v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
    sub_1C071058C(v124, 4, 0, 0, v66, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v66, type metadata accessor for FormatVersionRequirement);
    sub_1C090750C(v124, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF88A0);
    uint64_t v68 = (char *)v51;
    uint64_t v69 = (uint64_t)v114;
    uint64_t v70 = v68;
    ((void (*)(char *, uint64_t, uint64_t))v68)(v114, v120, v48);
    swift_storeEnumTagMultiPayload();
    uint64_t v71 = swift_bridgeObjectRetain();
    sub_1C07108A4(v71, 5, 0, 0, v69, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v69, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    sub_1BFE99AAC((uint64_t)(v58 + 25), (uint64_t)v123, &qword_1EB85B6E0, (uint64_t)&type metadata for FormatShadow);
    uint64_t v72 = (uint64_t)v113;
    ((void (*)(char *, uint64_t, uint64_t))v70)(v113, v120, v48);
    swift_storeEnumTagMultiPayload();
    sub_1BFE99EB4((uint64_t)v123, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8708);
    sub_1C0710B08((uint64_t)v123, 6, 0, 0, v72, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v72, type metadata accessor for FormatVersionRequirement);
    sub_1BFE99EB4((uint64_t)v123, (void (*)(void, void, void, void, void, void, void, void, void, void, char))sub_1BFEF8738);
    uint64_t v73 = (uint64_t)v112;
    ((void (*)(char *, uint64_t, uint64_t))v70)(v112, v120, v48);
    swift_storeEnumTagMultiPayload();
    uint64_t v74 = swift_bridgeObjectRetain();
    sub_1C0710E3C(v74, 7, 0, 0, v73, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v73, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    sub_1BFE99AAC((uint64_t)(v58 + 37), (uint64_t)v122, (unint64_t *)&qword_1EB876CA0, (uint64_t)&type metadata for FormatParagraphStyle);
    uint64_t v75 = (uint64_t)v111;
    ((void (*)(char *, uint64_t, uint64_t))v70)(v111, v120, v48);
    swift_storeEnumTagMultiPayload();
    sub_1C07110A0((uint64_t)v122, 8, 0, 0, v75, (uint64_t)sub_1C01B158C, 0);
    uint64_t v76 = v55;
    sub_1BFEFEB68(v75, type metadata accessor for FormatVersionRequirement);
    uint64_t v77 = v58[62];
    uint64_t v78 = (void (*)(uint64_t, uint64_t, uint64_t))v70;
    uint64_t v125 = (uint64_t)v76;
    LOBYTE(v76) = *((unsigned char *)v58 + 504);
    uint64_t v79 = (uint64_t)v110;
    uint64_t v118 = v78;
    v78((uint64_t)v110, v120, v48);
    uint64_t v120 = v67;
    swift_storeEnumTagMultiPayload();
    sub_1C0711384(v77, (char)v76, 9, 0, 0, v79, (uint64_t)sub_1C01B158C, 0);
    uint64_t v117 = v48;
    sub_1BFEFEB68(v79, type metadata accessor for FormatVersionRequirement);
    uint64_t v80 = v58[64];
    uint64_t v81 = qword_1EB887640;
    swift_bridgeObjectRetain();
    if (v81 != -1) {
      swift_once();
    }
    uint64_t v82 = v117;
    uint64_t v83 = __swift_project_value_buffer(v117, (uint64_t)qword_1EB93CAC8);
    uint64_t v84 = v109;
    v118(v109, v83, v82);
    swift_storeEnumTagMultiPayload();
    sub_1C07115A4(v80, 10, 0, 0, v84, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v109, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v85 = v119[65];
    uint64_t v86 = v119[66];
    sub_1BFEF8720(v85, v86);
    if (qword_1EB887620 != -1) {
      swift_once();
    }
    uint64_t v87 = v117;
    uint64_t v88 = __swift_project_value_buffer(v117, (uint64_t)qword_1EB93CA50);
    uint64_t v89 = v108;
    v118(v108, v88, v87);
    swift_storeEnumTagMultiPayload();
    sub_1C071181C(v85, v86, 11, 0, 0, v89, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v108, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF8750(v85, v86);
    uint64_t v90 = v119[67];
    uint64_t v91 = v119[68];
    sub_1BFEF8720(v90, v91);
    if (qword_1EB887638 != -1) {
      swift_once();
    }
    uint64_t v92 = v117;
    uint64_t v93 = __swift_project_value_buffer(v117, (uint64_t)qword_1EB93CA98);
    uint64_t v94 = (uint64_t)v107;
    v118((uint64_t)v107, v93, v92);
    swift_storeEnumTagMultiPayload();
    sub_1C071181C(v90, v91, 12, 0, 0, v94, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v94, type metadata accessor for FormatVersionRequirement);
    sub_1BFEF8750(v90, v91);
    unsigned __int8 v95 = *((unsigned char *)v119 + 552);
    if (qword_1EB887600 != -1) {
      swift_once();
    }
    uint64_t v96 = v117;
    uint64_t v97 = __swift_project_value_buffer(v117, (uint64_t)qword_1EB93CA08);
    uint64_t v98 = (uint64_t)v106;
    v118((uint64_t)v106, v97, v96);
    swift_storeEnumTagMultiPayload();
    sub_1C0711A7C(v95, 13, 0, 0, v98, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v98, type metadata accessor for FormatVersionRequirement);
    uint64_t v99 = v119[70];
    uint64_t v100 = qword_1EB887668;
    swift_bridgeObjectRetain();
    if (v100 != -1) {
      swift_once();
    }
    uint64_t v101 = v117;
    uint64_t v102 = __swift_project_value_buffer(v117, (uint64_t)qword_1EB93CB10);
    uint64_t v103 = (uint64_t)v105;
    v118((uint64_t)v105, v102, v101);
    swift_storeEnumTagMultiPayload();
    uint64_t v104 = v125;
    sub_1C07115A4(v99, 14, 0, 0, v103, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v103, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v61 = v104;
  }
  return sub_1BFEFEB68(v61, (uint64_t (*)(void))sub_1C08C3500);
}

uint64_t sub_1BFE99AAC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFE9DEBC(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t FeedModel.identifier.getter(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(a1 + 56));
  uint64_t v3 = v2[1];
  if (v3)
  {
    uint64_t v4 = *v2;
    sub_1BFE99C6C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1C1527210;
    *(void *)(v5 + 32) = v4;
    *(void *)(v5 + 40) = v3;
    swift_bridgeObjectRetain();
    *(void *)(v5 + 48) = sub_1C151811C();
    *(void *)(v5 + 56) = v6;
    sub_1BFE99C6C(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB320]);
    sub_1BFE99E40();
    uint64_t v7 = sub_1C151E55C();
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    return sub_1C151811C();
  }
}

void sub_1BFE99C6C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE99CBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE99D0C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE99D58(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE99DA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE99DF4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1BFE99E40()
{
  unint64_t result = qword_1EB879F30;
  if (!qword_1EB879F30)
  {
    sub_1BFE99C6C(255, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879F30);
  }
  return result;
}

uint64_t sub_1BFE99EB4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 80);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), v4);
  return a1;
}

void *sub_1BFE99F10(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1BFE99F74()
{
  return sub_1C07B3C70(*v0);
}

unint64_t sub_1BFE99F7C()
{
  return sub_1C07DC22C(*v0);
}

unint64_t sub_1BFE99F84()
{
  return sub_1C07DF228(*v0);
}

uint64_t FormatTypeDefinition.Case.encode(to:)(void *a1)
{
  uint64_t v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v35 = (char *)&v31 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v31 - v8;
  sub_1C08C3C14();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  uint64_t v13 = v1[1];
  uint64_t v15 = v1[3];
  uint64_t v33 = v1[2];
  uint64_t v34 = v15;
  uint64_t v31 = v1[5];
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1C08C3AE8();
  uint64_t v19 = v18;
  uint64_t v20 = sub_1C085F050(&qword_1EB891F10, (void (*)(uint64_t))sub_1C08C3AE8);
  sub_1BFEFBD78((uint64_t)&type metadata for FormatTypeDefinition.Case, v21, v16, (uint64_t)&type metadata for FormatTypeDefinition.Case, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v12, v20, (uint64_t)&off_1F1C39B68);
  uint64_t v22 = qword_1EB882D28;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    swift_once();
  }
  uint64_t v23 = sub_1C151928C();
  uint64_t v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1EB93CAB0);
  uint64_t v25 = *(void (**)(char *))(*(void *)(v23 - 8) + 16);
  uint64_t v36 = v24;
  v25(v9);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = v41;
  sub_1C06B9480(v14, v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1C01B158C, 0);
  sub_1BFEFEB68((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v26)
  {
    uint64_t v27 = (uint64_t)v35;
    ((void (*)(char *, uint64_t, uint64_t))v25)(v35, v36, v23);
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = v34;
    swift_bridgeObjectRetain();
    sub_1C06B9480(v33, v28, 1, 0, 0, v27, (uint64_t)sub_1C01B158C, 0);
    sub_1BFEFEB68(v27, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    uint64_t v29 = (uint64_t)v32;
    ((void (*)(char *, uint64_t, uint64_t))v25)(v32, v36, v23);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    if (sub_1C0837148(v29, 2, 0, 0, (uint64_t)sub_1C01B158C, 0))
    {
      long long v39 = xmmword_1C1557FA0;
      char v40 = 0;
      uint64_t v37 = 0;
      unint64_t v38 = 0xE000000000000000;
      sub_1C08C3CA8();
      sub_1C085F050(&qword_1EB86E480, (void (*)(uint64_t))sub_1C08C3CA8);
      sub_1C1520BAC();
    }
    sub_1BFEFEB68(v29, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BFEFEB68((uint64_t)v12, (uint64_t (*)(void))sub_1C08C3C14);
}

unint64_t sub_1BFE9A444()
{
  unint64_t result = qword_1EB870AB8;
  if (!qword_1EB870AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB870AB8);
  }
  return result;
}

unint64_t sub_1BFE9A498()
{
  unint64_t result = qword_1EB86B0C0;
  if (!qword_1EB86B0C0)
  {
    sub_1BFE9DEBC(255, &qword_1EB86B0B8, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, MEMORY[0x1E4FBB320]);
    sub_1C0079100();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB86B0C0);
  }
  return result;
}

unint64_t sub_1BFE9A52C()
{
  unint64_t result = qword_1EB85C448;
  if (!qword_1EB85C448)
  {
    sub_1BFE9DEBC(255, &qword_1EB879EC0, (uint64_t)&type metadata for FormatTextNodeTransform, MEMORY[0x1E4FBB320]);
    sub_1C00724FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB85C448);
  }
  return result;
}

uint64_t _s8NewsFeed0B14LayoutCacheKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = 0, (sub_1C1520A9C() & 1) != 0))
  {
    BOOL v6 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v6 || (char v5 = 0, (sub_1C1520A9C() & 1) != 0))
    {
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)
        || (char v5 = 0, (sub_1C1520A9C() & 1) != 0))
      {
        if ((sub_1BFE9E788(*(void **)(a1 + 48), *(void **)(a2 + 48)) & 1) == 0
          || *(unsigned __int8 *)(a1 + 56) != *(unsigned __int8 *)(a2 + 56))
        {
          goto LABEL_29;
        }
        if (*(void *)(a1 + 64) == *(void *)(a2 + 64) && *(void *)(a1 + 72) == *(void *)(a2 + 72)
          || (char v5 = 0, (sub_1C1520A9C() & 1) != 0))
        {
          if (*(void *)(a1 + 80) == *(void *)(a2 + 80) && *(void *)(a1 + 88) == *(void *)(a2 + 88)
            || (char v5 = 0, (sub_1C1520A9C() & 1) != 0))
          {
            if (*(void *)(a1 + 96) != *(void *)(a2 + 96))
            {
LABEL_29:
              char v5 = 0;
              return v5 & 1;
            }
            uint64_t v7 = sub_1C151E62C();
            uint64_t v9 = v8;
            if (v7 == sub_1C151E62C() && v9 == v10)
            {
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v11 = sub_1C1520A9C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              char v5 = 0;
              if ((v11 & 1) == 0) {
                return v5 & 1;
              }
            }
            if (*(unsigned __int8 *)(a1 + 112) != *(unsigned __int8 *)(a2 + 112)
              || *(unsigned __int8 *)(a1 + 113) != *(unsigned __int8 *)(a2 + 113))
            {
              goto LABEL_29;
            }
            char v5 = 0;
            if ((sub_1BFE9E954(*(void *)(*(void *)(a1 + 120) + 16), *(void *)(*(void *)(a2 + 120) + 16)) & 1) != 0
              && *(double *)(a1 + 128) == *(double *)(a2 + 128)
              && *(double *)(a1 + 136) == *(double *)(a2 + 136))
            {
              char v5 = 0;
              if (*(double *)(a1 + 144) == *(double *)(a2 + 144) && *(double *)(a1 + 152) == *(double *)(a2 + 152))
              {
                char v5 = 0;
                if (*(double *)(a1 + 160) == *(double *)(a2 + 160) && *(double *)(a1 + 168) == *(double *)(a2 + 168))
                {
                  type metadata accessor for FeedLayoutCacheKey();
                  sub_1C151794C();
                  sub_1BFE9D268((unint64_t *)&unk_1EB884DB0, MEMORY[0x1E4FAB828]);
                  sub_1C151EACC();
                  sub_1C151EACC();
                  if (v15 == v13 && v16 == v14) {
                    char v5 = 1;
                  }
                  else {
                    char v5 = sub_1C1520A9C();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
              }
            }
          }
        }
      }
    }
  }
  return v5 & 1;
}

uint64_t sub_1BFE9A8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>)
{
  void (*v132)(long long *__return_ptr, long long *, void (*)(void, void, void), uint64_t, uint64_t, uint64_t, uint64_t);
  long long v133;
  uint64_t v134;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  BOOL v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  char v143;
  void *v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  BOOL v150;
  uint64_t v151;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v153;
  uint64_t v154;
  unsigned char *v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(double *__return_ptr, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t (*v184)(uint64_t, uint64_t);
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unsigned char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  long long v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unsigned char *v205;
  unsigned char *v206;
  unsigned char *v207;
  unsigned char *v208;
  uint64_t v209;
  void *v210;
  int64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unsigned char *v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  char v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  char v238;
  double *v239;
  void *v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t *v244;
  void *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char v264;
  uint64_t v265;
  unsigned char v266[4];
  int v267;
  void *v268;
  uint64_t v269;
  uint64_t v270;
  unsigned char *v271;
  unsigned char *v272;
  unsigned char *v273;
  uint64_t *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  unsigned char *v280;
  unsigned char *v281;
  uint64_t v282;
  unsigned char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  double *v287;
  void *v288;
  unsigned char *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  unsigned char *v294;
  uint64_t v295;
  uint64_t v296;
  unsigned char *v297;
  uint64_t v298;
  void *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  unint64_t v304;
  uint64_t v305;
  int64_t v306;
  void (*v307)(unsigned char *, unsigned char *, uint64_t);
  void *v308;
  void (*v309)(uint64_t *, uint64_t, uint64_t);
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  void (*v313)(void);
  int *v314;
  void *v315;
  long long v316;
  uint64_t v317;
  long long v318;
  char v319[9];
  void v320[3];
  uint64_t v321;
  uint64_t v322;
  long long v323;
  long long v324;
  uint64_t v325;
  long long v326;
  long long v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  unsigned __int8 v333;
  double v334[9];
  uint64_t v335;

  uint64_t v9 = v6;
  v303 = a5;
  v317 = a3;
  v278 = a2;
  v287 = a6;
  uint64_t v12 = *(void **)v9;
  uint64_t v13 = sub_1C151A95C();
  v275 = *(void *)(v13 - 8);
  v276 = v13;
  MEMORY[0x1F4188790](v13);
  v274 = (uint64_t *)&v266[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for FeedItem(0);
  uint64_t v269 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15 - 8);
  v294 = &v266[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v270 = type metadata accessor for InternalErrorViewModel();
  MEMORY[0x1F4188790](v270);
  v273 = &v266[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v18);
  v283 = &v266[-v19];
  uint64_t v20 = sub_1C151787C();
  MEMORY[0x1F4188790](v20 - 8);
  v280 = &v266[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v286 = sub_1C1517ADC();
  v282 = *(void *)(v286 - 8);
  MEMORY[0x1F4188790](v286);
  v281 = &v266[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v23 - 8);
  v272 = &v266[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v25);
  v288 = &v266[-v26];
  v314 = (int *)type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v314);
  uint64_t v271 = &v266[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v28);
  v289 = &v266[-v29];
  v335 = sub_1C151757C();
  *(void *)&v318 = *(void *)(v335 - 8);
  MEMORY[0x1F4188790](v335);
  *((void *)&v316 + 1) = &v266[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v312 = *(void *)(a4 - 8);
  MEMORY[0x1F4188790](v31);
  *(void *)&v316 = &v266[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = type metadata accessor for FeedLayoutCacheKey();
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v35 = &v266[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v36 = sub_1C151772C();
  v295 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  v315 = &v266[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v38);
  char v40 = &v266[-v39];
  uint64_t v41 = v9 + v12[15];
  v311 = a4;
  v296 = a1;
  sub_1BFEE6588(v41, a4, v303);
  v292 = v9 + *(void *)(*(void *)v9 + 152);
  uint64_t v42 = v12[10];
  uint64_t v43 = v12[11];
  v277 = v41;
  sub_1C151770C();
  uint64_t v44 = *(void *)(*(void *)v9 + 96);
  v293 = v9;
  uint64_t v45 = v9 + v44;
  uint64_t v46 = v43;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 16);
  v279 = v45;
  uint64_t v48 = v47(v42, v43);
  v297 = v40;
  sub_1C151765C();
  double v50 = v49;
  double v52 = v51;
  sub_1C1517E7C();
  swift_beginAccess();
  uint64_t v53 = *(void *)(v48 + 24);
  uint64_t v54 = *(void *)(v53 + 16);
  v298 = v36;
  v299 = v35;
  v284 = v46;
  v285 = v42;
  if (v54 && (unint64_t v55 = sub_1C1052424(v50, v52), (v56 & 1) != 0))
  {
    unint64_t v57 = *(void *)(*(void *)(v53 + 56) + 8 * v55);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    unint64_t v57 = sub_1BFE9C5F8(MEMORY[0x1E4FBC860]);
  }
  type metadata accessor for FormatLayoutSizeSnapshot();
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = v57;
  sub_1C1517E8C();
  swift_release();
  uint64_t v59 = v293;
  uint64_t v60 = (uint64_t *)(v59 + *(void *)(*(void *)v59 + 200));
  uint64_t v61 = v60[1];
  v317 = *v60;
  uint64_t v62 = v311;
  uint64_t v63 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v312 + 16);
  uint64_t v64 = v316;
  v312 += 16;
  uint64_t v309 = v63;
  v63((uint64_t *)v316, v296, v311);
  uint64_t v65 = *(void (**)(void))(v318 + 16);
  uint64_t v66 = *((void *)&v316 + 1);
  v310 = v59 + *(void *)(*(void *)v59 + 112);
  *(void *)&v318 = v318 + 16;
  v313 = v65;
  v65(*((void *)&v316 + 1));
  uint64_t v67 = v315;
  v307 = *(void (**)(void *, unsigned char *, uint64_t))(v295 + 16);
  v308 = (void *)(v295 + 16);
  v307(v315, v297, v298);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v68 = v299;
  uint64_t v69 = (uint64_t)v67;
  uint64_t v70 = v62;
  v291 = v58;
  uint64_t v71 = v62;
  uint64_t v72 = v303;
  sub_1BFE9C764(v317, v61, v64, v66, v69, v58, v71, v303, v299);
  uint64_t v73 = (void *)(v59 + *(void *)(*(void *)v59 + 104));
  uint64_t v74 = v73[3];
  uint64_t v75 = v73[4];
  __swift_project_boxed_opaque_existential_1(v73, v74);
  (*(void (**)(long long *__return_ptr, void *, uint64_t, uint64_t))(v75 + 16))(&v326, v68, v74, v75);
  if (*((void *)&v326 + 1))
  {
    LODWORD(v312) = v333;
    uint64_t v76 = v330;
    v310 = v331;
    v311 = v332;
    uint64_t v77 = v328;
    uint64_t v78 = v329;
    v335 = v328;
    long long v79 = v327;
    v316 = v327;
    v317 = *((void *)&v326 + 1);
    *(void *)&v318 = v326;
    sub_1BFE9D698(v326, *((uint64_t *)&v326 + 1));
    uint64_t v80 = v292;
    uint64_t v82 = *(void *)v292;
    uint64_t v81 = *(void **)(v292 + 8);
    v314 = *(int **)(v292 + 16);
    v315 = v81;
    LODWORD(v313) = *(unsigned __int8 *)(v292 + 24);
    v326 = v79;
    *(void *)&v327 = v77;
    *((void *)&v327 + 1) = v78;
    uint64_t v83 = v78;
    uint64_t v85 = v310;
    uint64_t v84 = v311;
    v328 = v76;
    v329 = v310;
    v330 = v311;
    LOBYTE(v331) = v312;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFE9D624((uint64_t)&v326, v82, (uint64_t)v315, (uint64_t)v314, (char)v313);
    uint64_t v87 = v86;
    v314 = (int *)v89;
    v315 = v88;
    char v91 = v90;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1C1447094((uint64_t)v299, (uint64_t (*)(void))type metadata accessor for FeedLayoutCacheKey);
    (*(void (**)(unsigned char *, uint64_t))(v295 + 8))(v297, v298);
    uint64_t v92 = v315;
    *(void *)uint64_t v80 = v87;
    *(void *)(v80 + 8) = v92;
    *(void *)(v80 + 16) = v314;
    *(unsigned char *)(v80 + 24) = v91 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v93 = v316;
    uint64_t v94 = v335;
    uint64_t result = sub_1BFE9EB04(v318, v317);
    uint64_t v96 = v287;
    *(_OWORD *)v287 = v93;
    *((void *)v96 + 2) = v94;
    *((void *)v96 + 3) = v83;
    *((void *)v96 + 4) = v76;
    *((void *)v96 + 5) = v85;
    *((void *)v96 + 6) = v84;
    *((unsigned char *)v96 + 56) = 2;
  }
  else
  {
    uint64_t v268 = v73;
    uint64_t v97 = *(void *)(v292 + 16);
    if (*(unsigned char *)(v292 + 24)) {
      uint64_t v97 = 0;
    }
    v317 = v97;
    uint64_t v98 = v289;
    v307(v289, v297, v298);
    uint64_t v99 = v314;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v313)(&v98[v314[5]], v310, v335);
    uint64_t v100 = *(void *)(v59 + *(void *)(*(void *)v59 + 136));
    sub_1C1446FF4(v59 + *(void *)(*(void *)v59 + 128), (uint64_t)&v98[v99[6]], type metadata accessor for FeedLayoutSolverOptions);
    swift_retain();
    sub_1C15174BC();
    double v102 = v101;
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v72 + 40))(&v326, v70, v72);
    char v103 = v326;
    int v104 = *(unsigned __int8 *)(v59 + *(void *)(*(void *)v59 + 176));
    *(void *)&v98[v99[10]] = v100;
    *(void *)&v98[v99[7]] = v317;
    *(double *)&v98[v99[8]] = v102;
    v98[v99[9]] = v103;
    uint64_t v105 = v99[11];
    uint64_t v267 = v104;
    v98[v105] = v104;
    *(void *)&v98[v99[12]] = v291;
    uint64_t v106 = *(uint64_t (**)(uint64_t, uint64_t))(v72 + 56);
    swift_retain();
    uint64_t v107 = v106(v70, v72);
    uint64_t v108 = v70;
    v302 = *(void *)(v107 + 16);
    if (v302)
    {
      unint64_t v109 = 0;
      uint64_t v110 = *(void *)v59;
      v308 = (void *)(v59 + *(void *)(*(void *)v59 + 192));
      v307 = (void (*)(void *, unsigned char *, uint64_t))(v59 + *(void *)(v110 + 184));
      v301 = v107 + 32;
      v335 = MEMORY[0x1E4FBC868];
      uint64_t v111 = v309;
      v300 = v107;
LABEL_12:
      if (v109 < *(void *)(v107 + 16))
      {
        uint64_t v112 = *(void *)(v301 + (v109 << 6) + 40);
        uint64_t v113 = *(void *)(v112 + 64);
        v304 = v109 + 1;
        v305 = v112 + 64;
        uint64_t v114 = 1 << *(unsigned char *)(v112 + 32);
        if (v114 < 64) {
          uint64_t v115 = ~(-1 << v114);
        }
        else {
          uint64_t v115 = -1;
        }
        unint64_t v116 = v115 & v113;
        v306 = (unint64_t)(v114 + 63) >> 6;
        v313 = (void (*)(void))v112;
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; ; uint64_t i = v315)
        {
          if (v116)
          {
            v314 = (int *)((v116 - 1) & v116);
            v315 = i;
            unint64_t v121 = __clz(__rbit64(v116)) | ((void)i << 6);
          }
          else
          {
            int64_t v122 = (int64_t)i + 1;
            if (__OFADD__(i, 1))
            {
              __break(1u);
LABEL_64:
              __break(1u);
              break;
            }
            if (v122 >= v306) {
              goto LABEL_11;
            }
            unint64_t v123 = *(void *)(v305 + 8 * v122);
            int64_t v124 = (int64_t)i + 1;
            if (!v123)
            {
              int64_t v124 = (int64_t)i + 2;
              if ((uint64_t)i + 2 >= v306) {
                goto LABEL_11;
              }
              unint64_t v123 = *(void *)(v305 + 8 * v124);
              if (!v123)
              {
                int64_t v124 = (int64_t)i + 3;
                if ((uint64_t)i + 3 >= v306) {
                  goto LABEL_11;
                }
                unint64_t v123 = *(void *)(v305 + 8 * v124);
                if (!v123)
                {
                  uint64_t v125 = (char *)i + 4;
                  if ((uint64_t)i + 4 >= v306)
                  {
LABEL_11:
                    swift_release();
                    unint64_t v109 = v304;
                    uint64_t v107 = v300;
                    if (v304 != v302) {
                      goto LABEL_12;
                    }
                    swift_bridgeObjectRelease();
                    goto LABEL_46;
                  }
                  unint64_t v123 = *(void *)(v305 + 8 * (void)v125);
                  if (!v123)
                  {
                    while (1)
                    {
                      int64_t v124 = (int64_t)(v125 + 1);
                      if (__OFADD__(v125, 1)) {
                        goto LABEL_64;
                      }
                      if (v124 >= v306) {
                        goto LABEL_11;
                      }
                      unint64_t v123 = *(void *)(v305 + 8 * v124);
                      ++v125;
                      if (v123) {
                        goto LABEL_34;
                      }
                    }
                  }
                  int64_t v124 = (int64_t)i + 4;
                }
              }
            }
LABEL_34:
            v314 = (int *)((v123 - 1) & v123);
            v315 = (void *)v124;
            unint64_t v121 = __clz(__rbit64(v123)) + (v124 << 6);
          }
          uint64_t v126 = 16 * v121;
          uint64_t v127 = (uint64_t *)(*((void *)v313 + 6) + v126);
          uint64_t v128 = *v127;
          uint64_t v129 = v127[1];
          uint64_t v130 = v308[3];
          uint64_t v131 = v308[4];
          v318 = *(_OWORD *)(*((void *)v313 + 7) + v126);
          __swift_project_boxed_opaque_existential_1(v308, v130);
          v323 = v318;
          uint64_t v132 = *(void (**)(long long *__return_ptr, long long *, void (*)(void, void, void), uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v132(&v326, &v323, (void (*)(void, void, void))v307, v128, v129, v130, v131);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v133 = v326;
          v316 = v327;
          v317 = v328;
          *(void *)&v318 = v329;
          uint64_t v134 = v335;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v323 = v134;
          uint64_t v137 = sub_1BFEF2D8C(v128, v129);
          uint64_t v138 = *(void *)(v134 + 16);
          uint64_t v139 = (v136 & 1) == 0;
          uint64_t v140 = v138 + v139;
          if (__OFADD__(v138, v139))
          {
            __break(1u);
            goto LABEL_58;
          }
          uint64_t v141 = v136;
          if (*(void *)(v134 + 24) >= v140)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1C106F7E0();
            }
          }
          else
          {
            sub_1C105BE2C(v140, isUniquelyReferenced_nonNull_native);
            uint64_t v142 = sub_1BFEF2D8C(v128, v129);
            if ((v141 & 1) != (v143 & 1)) {
              goto LABEL_66;
            }
            uint64_t v137 = v142;
          }
          uint64_t v144 = (void *)v323;
          v335 = v323;
          if (v141)
          {
            uint64_t v118 = *(void *)(v323 + 56) + 48 * v137;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(_OWORD *)uint64_t v118 = v133;
            uint64_t v119 = *((void *)&v316 + 1);
            *(void *)(v118 + 16) = v316;
            *(void *)(v118 + 24) = v119;
            uint64_t v120 = v318;
            *(void *)(v118 + 32) = v317;
            *(void *)(v118 + 40) = v120;
          }
          else
          {
            *(void *)(v323 + 8 * (v137 >> 6) + 64) |= 1 << v137;
            uint64_t v145 = (uint64_t *)(v144[6] + 16 * v137);
            *uint64_t v145 = v128;
            v145[1] = v129;
            uint64_t v146 = v144[7] + 48 * v137;
            *(_OWORD *)uint64_t v146 = v133;
            uint64_t v147 = *((void *)&v316 + 1);
            *(void *)(v146 + 16) = v316;
            *(void *)(v146 + 24) = v147;
            uint64_t v148 = v318;
            *(void *)(v146 + 32) = v317;
            *(void *)(v146 + 40) = v148;
            uint64_t v149 = v144[2];
            uint64_t v150 = __OFADD__(v149, 1);
            uint64_t v151 = v149 + 1;
            if (v150)
            {
              __break(1u);
              goto LABEL_61;
            }
            v144[2] = v151;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v108 = v311;
          uint64_t v111 = v309;
          unint64_t v116 = (unint64_t)v314;
        }
      }
      __break(1u);
LABEL_66:
      uint64_t result = sub_1C1520CFC();
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
      v335 = MEMORY[0x1E4FBC868];
      uint64_t v111 = v309;
LABEL_46:
      *((void *)&v327 + 1) = v108;
      v328 = v303;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v326);
      v111(boxed_opaque_existential_0, v296, v108);
      uint64_t v153 = (uint64_t *)(v293 + *(void *)(*(void *)v293 + 160));
      swift_beginAccess();
      uint64_t v154 = *v153;
      swift_bridgeObjectRetain();
      uint64_t v155 = v281;
      sub_1C151752C();
      char v156 = (uint64_t)v280;
      sub_1C1517AAC();
      *(void *)&v318 = *(void *)(v282 + 8);
      ((void (*)(unsigned char *, uint64_t))v318)(v155, v286);
      LOBYTE(v323) = 2;
      uint64_t v157 = v335;
      swift_bridgeObjectRetain();
      sub_1BFE9F050(&v326, v154, 0, v156, (unsigned __int8 *)&v323, v157, (uint64_t)v288);
      sub_1C151752C();
      *((void *)&v316 + 1) = *(void *)(v303 + 32);
      v317 = v303 + 32;
      (*((void (**)(long long *__return_ptr, uint64_t))&v316 + 1))(&v326, v108);
      uint64_t v158 = v326;
      v323 = v326;
      v324 = v327;
      v325 = v328;
      uint64_t v159 = (*(uint64_t (**)(unsigned char *, long long *, uint64_t))(v284 + 8))(v155, &v323, v285);
      uint64_t v160 = v158;
      uint64_t v161 = v293;
      uint64_t v162 = v303;
      uint64_t v163 = v311;
      uint64_t v164 = v159;
      sub_1BFE9CBF4(v160);
      ((void (*)(unsigned char *, uint64_t))v318)(v155, v286);
      uint64_t v165 = v288;
      sub_1BFEA16AC((uint64_t)&v323, (char *)&v326, v161, (uint64_t)v299, v164, v288, (uint64_t)v289);
      LODWORD(v155) = v326;
      sub_1BFE9E49C((uint64_t)&v324, (uint64_t)&v326, &qword_1EB878A18, &qword_1EB878A10, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType);
      LODWORD(v318) = v155;
      if (*((void *)&v327 + 1))
      {
        swift_bridgeObjectRelease();
        sub_1BFC773DC(&v326, (uint64_t)v320);
        sub_1BFEA1648(v320);
        sub_1C14465D0(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v166 = swift_allocObject();
        *(_OWORD *)(v166 + 16) = xmmword_1C1527210;
        uint64_t v167 = sub_1C151811C();
        uint64_t v169 = v168;
        uint64_t v170 = MEMORY[0x1E4FBB1A0];
        *(void *)(v166 + 56) = MEMORY[0x1E4FBB1A0];
        uint64_t v171 = sub_1BFE9C558();
        *(void *)(v166 + 64) = v171;
        *(void *)(v166 + 32) = v167;
        *(void *)(v166 + 40) = v169;
        __swift_project_boxed_opaque_existential_1(v320, v321);
        uint64_t v172 = sub_1C151811C();
        *(void *)(v166 + 96) = v170;
        *(void *)(v166 + 104) = v171;
        uint64_t v173 = v311;
        *(void *)(v166 + 72) = v172;
        *(void *)(v166 + 80) = v174;
        sub_1C151F38C();
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        uint64_t v175 = v321;
        uint64_t v176 = v322;
        __swift_project_boxed_opaque_existential_1(v320, v321);
        uint64_t v177 = *(void (**)(double *__return_ptr, uint64_t, uint64_t))(v176 + 32);
        uint64_t v178 = v176;
        uint64_t v179 = v303;
        v177(v334, v175, v178);
        double v102 = v334[1];
        double v52 = v334[2];
        double v7 = v334[3];
        double v8 = v334[4];
        uint64_t v180 = (*(uint64_t (**)(uint64_t, uint64_t))(v179 + 16))(v173, v179);
        sub_1BFEA0164((uint64_t)v334);
        uint64_t v181 = v290;
        v317 = sub_1C1355F24(v180, (uint64_t)v334);
        v290 = v181;
        sub_1BFE9E600((uint64_t)v334);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v335 = *(void *)&v334[6];
        sub_1BFE9E49C(v278, (uint64_t)&v326, &qword_1EB873240, (unint64_t *)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
        uint64_t v182 = *((void *)&v327 + 1);
        if (*((void *)&v327 + 1))
        {
          uint64_t v183 = v328;
          __swift_project_boxed_opaque_existential_1(&v326, *((uint64_t *)&v327 + 1));
          v319[0] = v267;
          uint64_t v184 = *(uint64_t (**)(uint64_t, uint64_t))(v179 + 80);
          swift_bridgeObjectRetain();
          uint64_t v185 = v184(v173, v179);
          uint64_t v186 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, double, double, double, double))(v183 + 8))(v277, v310, v319, v185, v182, v183, v102, v52, v7, v8);
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v326);
          sub_1BFE9E600((uint64_t)v334);
        }
        else
        {
LABEL_58:
          swift_bridgeObjectRetain();
          sub_1BFE9E590((uint64_t)&v326, &qword_1EB873240, (unint64_t *)&unk_1EB873230, (uint64_t)&protocol descriptor for FeedGroupDecorationProviderType);
          sub_1BFE9E600((uint64_t)v334);
          uint64_t v186 = MEMORY[0x1E4FBC860];
        }
        uint64_t v221 = v268[3];
        uint64_t v222 = v268[4];
        __swift_project_boxed_opaque_existential_1(v268, v221);
        *(double *)&v326 = v102;
        *((double *)&v326 + 1) = v52;
        *(double *)&v327 = v7;
        *((double *)&v327 + 1) = v8;
        uint64_t v223 = v317;
        uint64_t v224 = v335;
        v328 = v317;
        v329 = v335;
        v330 = v186;
        LOBYTE(v331) = v318;
        (*(void (**)(void *, void *, long long *, BOOL, uint64_t, uint64_t))(v222 + 32))(v299, v320, &v326, v318 == 0, v221, v222);
        uint64_t v225 = v292;
        uint64_t v226 = *(void *)v292;
        uint64_t v227 = *(void *)(v292 + 8);
        uint64_t v228 = *(void *)(v292 + 16);
        uint64_t v229 = *(unsigned char *)(v292 + 24);
        *(double *)&v326 = v102;
        *((double *)&v326 + 1) = v52;
        *(double *)&v327 = v7;
        *((double *)&v327 + 1) = v8;
        v328 = v223;
        v329 = v224;
        v330 = v186;
        uint64_t v230 = v318;
        LOBYTE(v331) = v318;
        sub_1BFE9D624((uint64_t)&v326, v226, v227, v228, v229);
        uint64_t v232 = v231;
        uint64_t v234 = v233;
        uint64_t v236 = v235;
        uint64_t v238 = v237;
        swift_release();
        sub_1BFEA159C((uint64_t)&v323);
        sub_1C1447094((uint64_t)v288, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
        sub_1C1447094((uint64_t)v289, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
        sub_1C1447094((uint64_t)v299, (uint64_t (*)(void))type metadata accessor for FeedLayoutCacheKey);
        (*(void (**)(unsigned char *, uint64_t))(v295 + 8))(v297, v298);
        *(void *)uint64_t v225 = v232;
        *(void *)(v225 + 8) = v234;
        *(void *)(v225 + 16) = v236;
        *(unsigned char *)(v225 + 24) = v238 & 1;
        uint64_t v239 = v287;
        char *v287 = v102;
        v239[1] = v52;
        v239[2] = v7;
        v239[3] = v8;
        *((void *)v239 + 4) = v317;
        *((void *)v239 + 5) = v224;
        *((void *)v239 + 6) = v186;
        *((unsigned char *)v239 + 56) = v230;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v320);
      }
      else
      {
        sub_1BFE9E590((uint64_t)&v326, &qword_1EB878A18, &qword_1EB878A10, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType);
        sub_1C0AEFBB4();
        uint64_t v188 = *(int *)(v187 + 80);
        v314 = (int *)v164;
        uint64_t v189 = v283;
        uint64_t v190 = *(void *)(v162 + 8);
        v315 = &v283[v188];
        *(void *)&v316 = v190;
        uint64_t v191 = sub_1C151811C();
        uint64_t v192 = v163;
        uint64_t v193 = v191;
        uint64_t v195 = v194;
        (*((void (**)(long long *__return_ptr, uint64_t, uint64_t))&v316 + 1))(&v326, v192, v162);
        uint64_t v196 = v328;
        *(void *)uint64_t v189 = v193;
        *((void *)v189 + 1) = v195;
        uint64_t v197 = v327;
        *((_OWORD *)v189 + 1) = v326;
        *((_OWORD *)v189 + 2) = v197;
        uint64_t v199 = (uint64_t)v314;
        uint64_t v198 = v315;
        *((void *)v189 + 6) = v196;
        *((void *)v189 + 7) = v199;
        uint64_t v200 = *((void *)&v323 + 1);
        *((void *)v189 + 8) = v323;
        *((void *)v189 + 9) = v200;
        sub_1C1446FF4((uint64_t)v165, (uint64_t)v198, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C151F36C();
        sub_1C14465D0(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
        uint64_t v201 = swift_allocObject();
        *(_OWORD *)(v201 + 16) = xmmword_1C1529AE0;
        uint64_t v202 = sub_1C151811C();
        uint64_t v204 = v203;
        *(void *)(v201 + 56) = MEMORY[0x1E4FBB1A0];
        *(void *)(v201 + 64) = sub_1BFE9C558();
        *(void *)(v201 + 32) = v202;
        *(void *)(v201 + 40) = v204;
        sub_1C15197BC();
        swift_bridgeObjectRelease();
        uint64_t v205 = v273;
        sub_1C1446FF4((uint64_t)v189, (uint64_t)v273, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
        uint64_t v206 = v272;
        sub_1C1446FF4((uint64_t)v288, (uint64_t)v272, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
        uint64_t v207 = v289;
        uint64_t v208 = v271;
        sub_1C1446FF4((uint64_t)v289, (uint64_t)v271, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
        _s13InternalErrorCMa();
        swift_allocObject();
        v317 = sub_1C12BCF80((uint64_t)v205, (uint64_t)v206, (uint64_t)v208);
        sub_1C12BC734((uint64_t)v207, (uint64_t)&v326);
        double v102 = *((double *)&v326 + 1);
        double v7 = *((double *)&v327 + 1);
        double v52 = *(double *)&v327;
        double v8 = *(double *)&v328;
        uint64_t v209 = v329;
        *((void *)&v316 + 1) = v330;
        uint64_t v141 = v296;
        uint64_t v210 = (void *)(*(uint64_t (**)(uint64_t))(v303 + 16))(v311);
        uint64_t v211 = v210[2];
        if (v211)
        {
          *(void *)&v316 = v209;
          *(void *)&v326 = MEMORY[0x1E4FBC860];
          sub_1BFE9F020(0, v211, 0);
          uint64_t v212 = *(unsigned __int8 *)(v269 + 80);
          v315 = v210;
          uint64_t v213 = (uint64_t)v210 + ((v212 + 32) & ~v212);
          long long v214 = *(void *)(v269 + 72);
          long long v215 = v326;
          do
          {
            uint64_t v216 = v294;
            sub_1C1446FF4(v213, (uint64_t)v294, type metadata accessor for FeedItem);
            uint64_t v217 = swift_allocObject();
            *(void *)(v217 + 16) = FeedItem.identifier.getter();
            *(void *)(v217 + 24) = v218;
            sub_1C1447094((uint64_t)v216, type metadata accessor for FeedItem);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BFE9F020(0, *(void *)(v215 + 16) + 1, 1);
              long long v215 = v326;
            }
            v220 = *(void *)(v215 + 16);
            uint64_t v219 = *(void *)(v215 + 24);
            if (v220 >= v219 >> 1)
            {
              sub_1BFE9F020(v219 > 1, v220 + 1, 1);
              long long v215 = v326;
            }
            *(void *)(v215 + 16) = v220 + 1;
            *(void *)(v215 + 8 * v220 + 32) = v217;
            v213 += v214;
            --v211;
          }
          while (v211);
          swift_bridgeObjectRelease();
          uint64_t v141 = v296;
        }
        else
        {
LABEL_61:
          swift_bridgeObjectRelease();
          long long v215 = MEMORY[0x1E4FBC860];
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v240 = (void *)(v293 + *(void *)(*(void *)v293 + 144));
        uint64_t v241 = v240[3];
        uint64_t v242 = v240[4];
        v315 = __swift_project_boxed_opaque_existential_1(v240, v241);
        uint64_t v243 = v311;
        *((void *)&v327 + 1) = v311;
        v328 = v303;
        uint64_t v244 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v326);
        v309(v244, v141, v243);
        v335 = type metadata accessor for FeedLayoutSolver.Errors();
        *(void *)&v316 = swift_getWitnessTable();
        uint64_t v245 = (void *)swift_allocError();
        *(double *)uint64_t v246 = v102;
        *(double *)(v246 + 8) = v52;
        *(double *)(v246 + 16) = v7;
        *(double *)(v246 + 24) = v8;
        uint64_t v247 = *((void *)&v316 + 1);
        *(void *)(v246 + 32) = v215;
        *(void *)(v246 + 40) = v247;
        *(void *)(v246 + 48) = MEMORY[0x1E4FBC860];
        *(unsigned char *)(v246 + 56) = v318;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v248 = v274;
        sub_1C13ECB5C((uint64_t)v283, 0, v274);
        uint64_t v249 = sub_1C13EEDAC();
        uint64_t v251 = v250;
        (*(void (**)(uint64_t *, uint64_t))(v275 + 8))(v248, v276);
        v320[0] = v245;
        v320[1] = v249;
        v320[2] = v251;
        (*(void (**)(long long *, void *, uint64_t, uint64_t))(v242 + 8))(&v326, v320, v241, v242);

        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v326);
        uint64_t v252 = v292;
        uint64_t v253 = *(void *)v292;
        uint64_t v254 = *(void *)(v292 + 8);
        uint64_t v255 = *(void *)(v292 + 16);
        v256 = *(unsigned char *)(v292 + 24);
        *(double *)&v326 = v102;
        *((double *)&v326 + 1) = v52;
        *(double *)&v327 = v7;
        *((double *)&v327 + 1) = v8;
        v328 = v215;
        v329 = v247;
        v257 = MEMORY[0x1E4FBC860];
        v330 = MEMORY[0x1E4FBC860];
        LOBYTE(v331) = v318;
        sub_1BFE9D624((uint64_t)&v326, v253, v254, v255, v256);
        uint64_t v259 = v258;
        v261 = v260;
        uint64_t v263 = v262;
        LOBYTE(v249) = v264;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)uint64_t v252 = v259;
        *(void *)(v252 + 8) = v261;
        *(void *)(v252 + 16) = v263;
        *(unsigned char *)(v252 + 24) = v249 & 1;
        swift_allocError();
        *(double *)uint64_t v265 = v102;
        *(double *)(v265 + 8) = v52;
        *(double *)(v265 + 16) = v7;
        *(double *)(v265 + 24) = v8;
        *(void *)(v265 + 32) = v215;
        *(void *)(v265 + 40) = v247;
        *(void *)(v265 + 48) = v257;
        *(unsigned char *)(v265 + 56) = v318;
        swift_willThrow();
        swift_release();
        swift_release();
        sub_1C1447094((uint64_t)v283, (uint64_t (*)(void))type metadata accessor for InternalErrorViewModel);
        sub_1BFEA159C((uint64_t)&v323);
        sub_1C1447094((uint64_t)v288, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
        sub_1C1447094((uint64_t)v289, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
        sub_1C1447094((uint64_t)v299, (uint64_t (*)(void))type metadata accessor for FeedLayoutCacheKey);
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v295 + 8))(v297, v298);
      }
    }
  }
  return result;
}

unint64_t sub_1BFE9C558()
{
  unint64_t result = qword_1EB895E70;
  if (!qword_1EB895E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB895E70);
  }
  return result;
}

uint64_t type metadata accessor for InternalErrorViewModel()
{
  uint64_t result = qword_1EB877A10;
  if (!qword_1EB877A10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1BFE9C5F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0192664(0, (unint64_t *)&qword_1EA1AA9F0, type metadata accessor for CGSize);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  BOOL v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    long long v13 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FormatLayoutSizeSnapshot()
{
  return self;
}

uint64_t sub_1BFE9C764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  void (*v59)(unint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75[6];

  uint64_t v67 = a6;
  uint64_t v68 = a7;
  uint64_t v64 = a5;
  uint64_t v65 = a4;
  uint64_t v69 = a3;
  uint64_t v62 = a1;
  uint64_t v63 = a2;
  uint64_t v12 = type metadata accessor for FeedItem(0);
  uint64_t v58 = *(void *)(v12 - 8);
  __n128 v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a9 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a8 + 88))(a7, a8, v13);
  a9[1] = v16;
  a9[2] = sub_1C151811C();
  a9[3] = v17;
  uint64_t v59 = *(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 32);
  uint64_t v60 = a8 + 32;
  v59(v75, a7, a8);
  unint64_t v18 = v75[0];
  uint64_t v70 = v75[0];
  uint64_t v71 = v75[1];
  uint64_t v72 = v75[2];
  uint64_t v73 = v75[3];
  uint64_t v74 = v75[4];
  unint64_t v19 = FeedGroupKind.identifier.getter();
  uint64_t v21 = v20;
  uint64_t v22 = v68;
  sub_1BFE9CBF4(v18);
  a9[4] = v19;
  a9[5] = v21;
  a9[10] = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 48))(v22, a8);
  a9[11] = v23;
  uint64_t v66 = a9;
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(a8 + 16);
  uint64_t v61 = a8;
  uint64_t v25 = v24(v22, a8);
  int64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    v75[0] = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v26, 0);
    unint64_t v27 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v57 = v25;
    uint64_t v28 = v25 + v27;
    uint64_t v29 = *(void *)(v58 + 72);
    unint64_t v30 = v75[0];
    do
    {
      sub_1BFE9CC44(v28, (uint64_t)v15, type metadata accessor for FeedItem);
      uint64_t v31 = FeedItem.identifier.getter();
      uint64_t v33 = v32;
      sub_1BFE9CDE4((uint64_t)v15, type metadata accessor for FeedItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v30 + 16) + 1, 1);
        unint64_t v30 = v75[0];
      }
      unint64_t v35 = *(void *)(v30 + 16);
      unint64_t v34 = *(void *)(v30 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_1BFF661B8(v34 > 1, v35 + 1, 1);
        unint64_t v30 = v75[0];
      }
      *(void *)(v30 + 16) = v35 + 1;
      unint64_t v36 = v30 + 16 * v35;
      *(void *)(v36 + 32) = v31;
      *(void *)(v36 + 40) = v33;
      v28 += v29;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    uint64_t v37 = v67;
    uint64_t v22 = v68;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v30 = MEMORY[0x1E4FBC860];
    uint64_t v37 = v67;
  }
  uint64_t v38 = v66;
  v66[6] = v30;
  uint64_t v39 = v69;
  v59(v75, v22, v61);
  BOOL v40 = v75[0] > 0xA;
  sub_1BFE9CBF4(v75[0]);
  *((unsigned char *)v38 + 56) = v40;
  uint64_t v41 = v63;
  v38[8] = v62;
  v38[9] = v41;
  uint64_t v42 = v65;
  v38[12] = sub_1C151754C();
  uint64_t v43 = v64;
  sub_1C15176FC();
  v38[16] = v44;
  v38[17] = v45;
  sub_1C151764C();
  v38[18] = v46;
  v38[19] = v47;
  sub_1C151765C();
  v38[20] = v48;
  v38[21] = v49;
  double v50 = (void *)sub_1C151769C();
  id v51 = objc_msgSend(v50, sel_preferredContentSizeCategory);

  v38[13] = v51;
  type metadata accessor for FeedLayoutCacheKey();
  sub_1C15176BC();
  *((unsigned char *)v38 + 112) = UIAccessibilityIsInvertColorsEnabled();
  double v52 = (void *)sub_1C151769C();
  id v53 = objc_msgSend(v52, sel_legibilityWeight);

  if ((unint64_t)v53 >= 2) {
    LOBYTE(v53) = UIAccessibilityIsBoldTextEnabled();
  }
  uint64_t v54 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v43, v54);
  uint64_t v55 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v42, v55);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v39, v22);
  *((unsigned char *)v38 + 113) = (_BYTE)v53;
  v38[15] = v37;
  return result;
}

unint64_t sub_1BFE9CBF4(unint64_t result)
{
  if (result >= 0xB)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFE9CC44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t initializeWithCopy for FeedLayoutCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  long long v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  uint64_t v11 = *(int *)(a3 + 76);
  uint64_t v16 = a2 + v11;
  uint64_t v17 = a1 + v11;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  uint64_t v12 = sub_1C151794C();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = v9;
  swift_retain();
  v15(v17, v16, v12);
  return a1;
}

uint64_t sub_1BFE9CDE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFE9CE44(uint64_t a1, uint64_t a2)
{
  return BlueprintSection<>.feedGroupKind.getter(a1, *(void *)(a2 - 8));
}

uint64_t BlueprintSection<>.feedGroupKind.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151AA1C();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BFE9CF38(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    uint64_t v2 = a2 ^ 0x80000000;
    *(_OWORD *)(result + 24) = 0u;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t sub_1BFE9CF60()
{
  sub_1C1520DBC();
  FeedLayoutCacheKey.hash(into:)((uint64_t)v1);
  return sub_1C1520E0C();
}

uint64_t FeedLayoutCacheKey.hash(into:)(uint64_t a1)
{
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v3 = v1[6];
  sub_1C1520DCC();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  sub_1C1520DDC();
  swift_bridgeObjectRetain();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  sub_1C1520DCC();
  uint64_t v6 = (void *)v1[13];
  sub_1C151E62C();
  id v7 = v6;
  sub_1C151E77C();

  swift_bridgeObjectRelease();
  sub_1C1520DDC();
  sub_1C1520DDC();
  uint64_t v8 = *(void *)(v1[15] + 16);
  swift_retain();
  sub_1BFE9D2B0(a1, v8);
  swift_release();
  sub_1C1520DFC();
  sub_1C1520DFC();
  sub_1C1520DFC();
  sub_1C1520DFC();
  sub_1C1520DFC();
  sub_1C1520DFC();
  type metadata accessor for FeedLayoutCacheKey();
  sub_1C151794C();
  sub_1BFE9D268(&qword_1EB884DA8, MEMORY[0x1E4FAB828]);
  return sub_1C151E48C();
}

uint64_t type metadata accessor for FeedLayoutCacheKey()
{
  uint64_t result = qword_1EB885D80;
  if (!qword_1EB885D80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFE9D268(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFE9D2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5) {
      goto LABEL_19;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_19;
      }
      uint64_t v10 = *(void *)(v12 + 8 * v8);
      if (!v10) {
        break;
      }
    }
LABEL_18:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    sub_1C1520DFC();
    sub_1C1520DFC();
    uint64_t result = sub_1C1520E0C();
    v7 ^= result;
  }
  int64_t v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_1C1520DCC();
  }
  uint64_t v10 = *(void *)(v12 + 8 * v11);
  if (v10)
  {
    int64_t v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v8 >= v5) {
      goto LABEL_19;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v8);
    ++v11;
    if (v10) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

unint64_t FeedGroupKind.identifier.getter()
{
  unint64_t result = 7364967;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
    case 2:
      unint64_t result = 0x656E696C64616568;
      break;
    case 3:
      unint64_t result = 0x7453736575737369;
      break;
    case 4:
      unint64_t result = 0x7247736575737369;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x736E6F69676572;
      break;
    case 7:
      unint64_t result = 25697;
      break;
    case 8:
      unint64_t result = 0x69726F6765746163;
      break;
    case 9:
      unint64_t result = 0x656D656761676E65;
      break;
    case 0xALL:
      unint64_t result = 0x6E6967756C70;
      break;
    default:
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t result = 0x2D74616D726F66;
      break;
  }
  return result;
}

void sub_1BFE9D624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    CGRectGetHeight(*(CGRect *)a1);
    if (__OFADD__(a4, *(void *)(v6 + 16))) {
      __break(1u);
    }
  }
}

uint64_t sub_1BFE9D698(uint64_t a1, uint64_t a2)
{
  int64_t v5 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 160));
  swift_beginAccess();
  uint64_t v6 = *v5;
  if (*(void *)(*v5 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1BFEF2D8C(a1, a2);
    if (v8) {
      uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
    }
    else {
      uint64_t v9 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t result = swift_endAccess();
  if (v9 == -1)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v5;
    *int64_t v5 = 0x8000000000000000;
    sub_1BFE9D944(v9 + 1, a1, a2, isUniquelyReferenced_nonNull_native);
    *int64_t v5 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1BFE9D7C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void))
{
  unint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1BFEF2D8C(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1BFEA21B0(a5);
LABEL_7:
    uint64_t v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1BFE9EBDC(result, a4 & 1, a5);
  uint64_t result = sub_1BFEF2D8C(a2, a3);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  uint64_t v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v22 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v23 = v20[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v25;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFE9D944(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BFE9D7C8(a1, a2, a3, a4, (void (*)(void))sub_1BFE9EEE8);
}

uint64_t sub_1BFE9D95C()
{
  return sub_1C1518DCC();
}

uint64_t BlueprintSection<>.feedSlots.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FeedItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151AA1C();
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(v10, a2);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (!*(void *)(v15 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1BFE9DD8C(0, (unint64_t *)&unk_1EB87A650, (uint64_t)&type metadata for FeedSlot, MEMORY[0x1E4FBBE00]);
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1C1529AE0;
    uint64_t v16 = BlueprintSection<>.feedItems.getter(a1, a2, a3);
    int64_t v17 = *(void *)(v16 + 16);
    uint64_t v18 = MEMORY[0x1E4FBC860];
    if (v17)
    {
      uint64_t v38 = MEMORY[0x1E4FBC860];
      sub_1BFF661B8(0, v17, 0);
      uint64_t v19 = *(unsigned __int8 *)(v7 + 80);
      v36[1] = v16;
      uint64_t v20 = v16 + ((v19 + 32) & ~v19);
      uint64_t v21 = *(void *)(v7 + 72);
      uint64_t v22 = v38;
      do
      {
        sub_1BFEE6734(v20, (uint64_t)v9);
        uint64_t v23 = FeedItem.identifier.getter();
        uint64_t v25 = v24;
        sub_1BFEE3100((uint64_t)v9, type metadata accessor for FeedItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFF661B8(0, *(void *)(v22 + 16) + 1, 1);
          uint64_t v22 = v38;
        }
        unint64_t v27 = *(void *)(v22 + 16);
        unint64_t v26 = *(void *)(v22 + 24);
        if (v27 >= v26 >> 1)
        {
          sub_1BFF661B8(v26 > 1, v27 + 1, 1);
          uint64_t v22 = v38;
        }
        *(void *)(v22 + 16) = v27 + 1;
        uint64_t v28 = v22 + 16 * v27;
        *(void *)(v28 + 32) = v23;
        *(void *)(v28 + 40) = v25;
        v20 += v21;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      uint64_t v18 = MEMORY[0x1E4FBC860];
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = MEMORY[0x1E4FBC860];
    }
    uint64_t v29 = sub_1BFEF4060(v22);
    swift_bridgeObjectRelease();
    unint64_t v30 = sub_1BFE9E1BC(v18);
    unint64_t v31 = sub_1BFE9E1E8(v18);
    unint64_t v32 = sub_1BFE9E338(v18);
    uint64_t v33 = (void *)v37;
    *(void *)(v37 + 32) = 42;
    v33[5] = 0xE100000000000000;
    v33[6] = v29;
    v33[7] = v30;
    uint64_t v15 = (uint64_t)v33;
    v33[8] = v31;
    v33[9] = v32;
    uint64_t v34 = MEMORY[0x1E4FBC870];
    v33[10] = v18;
    v33[11] = v34;
  }
  return v15;
}

uint64_t BlueprintSection<>.feedItems.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(_OWORD *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v11 = a2;
  uint64_t v12 = v4;
  uint64_t v13 = a3;
  uint64_t v14 = v5;
  uint64_t v6 = type metadata accessor for FeedItem(0);
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_1C035E7C8((void (*)(char *, char *))sub_1BFE39D58, (uint64_t)v10, a1, v6, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v8);
}

void sub_1BFE9DD8C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE9DDD8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE9DE24(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE9DE70(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE9DEBC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE9DF08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE9DF58(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFE9DFA8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE9DFF4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE9E040(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE9E08C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE9E0D8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE9E124(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFE9E170(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1BFE9E1BC(uint64_t a1)
{
  return sub_1BFE9E214(a1, sub_1BFEC6574, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1BFE9E1E8(uint64_t a1)
{
  return sub_1BFE9E214(a1, sub_1BFEC6764, (uint64_t (*)(uint64_t, uint64_t))sub_1BFEF2D8C);
}

unint64_t sub_1BFE9E214(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v5 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  a2(0);
  unint64_t v5 = (void *)sub_1C152050C();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v8 = *(v7 - 2);
    uint64_t v9 = *(v7 - 1);
    uint64_t v10 = *v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = a3(v8, v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (void *)(v5[6] + 16 * result);
    *uint64_t v13 = v8;
    v13[1] = v9;
    *(void *)(v5[7] + 8 * result) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v5[2] = v16;
    v7 += 3;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BFE9E338(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C01926D0(0, (unint64_t *)&qword_1EB863460, (uint64_t)&type metadata for FormatContentSlotItemAuxiliary.Resolved, MEMORY[0x1E4FBBD58]);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unint64_t v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    long long v13 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t FeedGroupDescribing.feedSlots.getter()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1BFE9E49C(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  sub_1C14465D0(0, a3, a4, a5, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BFE9E520(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1BFED9E90(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BFE9E590(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  sub_1C14465D0(0, a2, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BFE9E600(uint64_t a1)
{
  return a1;
}

uint64_t FeedGroupRepresentable.feedGroupIdentifier.getter()
{
  return sub_1C151811C();
}

uint64_t sub_1BFE9E63C()
{
  return BlueprintSection<>.feedGroupContextIdentifier.getter();
}

uint64_t BlueprintSection<>.feedGroupContextIdentifier.getter()
{
  swift_getKeyPath();
  swift_getWitnessTable();
  uint64_t v0 = MEMORY[0x1E4FBB1A0];
  sub_1C151E97C();
  swift_release();
  sub_1BFE9DD8C(0, (unint64_t *)&qword_1EB879F20, v0, MEMORY[0x1E4FBB320]);
  sub_1BFE99E40();
  uint64_t v1 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1BFE9E788(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1C1520A9C(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t BlueprintSection<>.layoutOrder.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  char v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151AA1C();
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unsigned char *sub_1BFE9E93C(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

uint64_t sub_1BFE9E948()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFE9E954(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = 16 * v11;
    uint64_t v16 = (uint64_t *)(*(void *)(v3 + 48) + v15);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = (double *)(*(void *)(v3 + 56) + v15);
    double v21 = *v19;
    double v20 = v19[1];
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1BFEF2D8C(v17, v18);
    char v24 = v23;
    uint64_t result = swift_bridgeObjectRelease();
    if (v24)
    {
      uint64_t v25 = (double *)(*(void *)(a2 + 56) + 16 * v22);
      if (*v25 == v21 && v25[1] == v20) {
        continue;
      }
    }
    return 0;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BFE9EB04(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BFE9EB68(unint64_t result)
{
  if (result >= 0xB)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1BFE9EBBC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(*(void *)v1 + 80);
  unint64_t v3 = *(void *)(*(void *)v1 + 88);
  unint64_t v4 = *(void *)(*(void *)v1 + 96);
  unint64_t v5 = *(void *)(*(void *)v1 + 104);
  unint64_t v6 = *(void *)(*(void *)v1 + 112);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_1BFE9EB68(v2);
}

uint64_t sub_1BFE9EBDC(uint64_t a1, char a2, void (*a3)(void))
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  a3(0);
  char v38 = a2;
  uint64_t v7 = sub_1C15204EC();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  unint64_t v35 = v3;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36) {
      break;
    }
    char v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          unint64_t v4 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v36) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v4 = v35;
  char v23 = (void *)(v6 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v4 = v8;
  return result;
}

void sub_1BFE9EEE8()
{
  if (!qword_1EB87A498)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A498);
    }
  }
}

uint64_t sub_1BFE9EF50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE9EFB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFE9F020(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFF6602C(a1, a2, a3, *v3, (unint64_t *)&unk_1EB87A620, (uint64_t)&type metadata for FeedItemLayoutAttributes);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BFE9F050@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v61 = a6;
  uint64_t v62 = a7;
  uint64_t v64 = a4;
  uint64_t v11 = type metadata accessor for FeedItem(0);
  uint64_t v58 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1C151787C();
  uint64_t v14 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v60 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = (int *)type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v59 = *a5;
  *(void *)&v18[v19[14]] = MEMORY[0x1E4FBC868];
  *(void *)&v18[v19[15]] = MEMORY[0x1E4FBC860];
  *(void *)&v18[v19[19]] = 0;
  sub_1BFC66384((uint64_t)a1, (uint64_t)(v18 + 8));
  *((void *)v18 + 6) = a2;
  uint64_t v21 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  uint64_t v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 56))(v21, v20);
  sub_1BFEA0118(0, &qword_1EB879CC8, (uint64_t)&type metadata for FeedSlot, MEMORY[0x1E4FBB320]);
  sub_1BFEA009C();
  sub_1BFEA1548();
  uint64_t v22 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  *((void *)v18 + 9) = v22;
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  *((void *)v18 + 10) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 56))(v23, v24);
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  *((void *)v18 + 7) = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 24))(v25, v26);
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = sub_1BFED0440(v27);
  swift_bridgeObjectRelease();
  *((void *)v18 + 8) = v28;
  v18[v16[16]] = a3;
  uint64_t v29 = v14;
  unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v30(&v18[v16[13]], v64, v63);
  sub_1BFC66384((uint64_t)a1, (uint64_t)v74);
  if (v59 == 2)
  {
    uint64_t v31 = v75;
    uint64_t v32 = v76;
    __swift_project_boxed_opaque_existential_1(v74, v75);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v32 + 40))(&v77, v31, v32);
    char v33 = v77;
  }
  else
  {
    char v33 = v59 & 1;
    LOBYTE(v77) = v59 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  *unint64_t v18 = v33;
  uint64_t v34 = v60;
  *((void *)v18 + 12) = v61;
  v18[88] = 0;
  uint64_t v35 = v63;
  v30(v34, v64, v63);
  uint64_t v36 = v29;
  int v37 = (*(uint64_t (**)(char *, uint64_t))(v29 + 88))(v34, v35);
  if (v37 == *MEMORY[0x1E4FAB7B8])
  {
    uint64_t v38 = a1[3];
    uint64_t v39 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v38);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v39 + 72))(&v65, v38, v39);
    if (v73 & 1) != 0 || (v70) {
      uint64_t v40 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v40 = v69;
    }
    *(void *)&v18[v16[18]] = v40;
    uint64_t v44 = a1[3];
    uint64_t v45 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v44);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v45 + 72))(&v65, v44, v45);
    if ((v73 & 1) == 0)
    {
      uint64_t v46 = v71;
      BOOL v47 = (v72 & 1) == 0;
      goto LABEL_19;
    }
  }
  else
  {
    if (v37 != *MEMORY[0x1E4FAB7C0])
    {
      uint64_t result = sub_1C152040C();
      __break(1u);
      return result;
    }
    uint64_t v41 = a1[3];
    uint64_t v42 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v41);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v42 + 72))(&v65, v41, v42);
    if (v73 & 1) != 0 || (v66) {
      uint64_t v43 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v43 = v65;
    }
    *(void *)&v18[v16[18]] = v43;
    uint64_t v48 = a1[3];
    uint64_t v49 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v48);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v49 + 72))(&v65, v48, v49);
    if ((v73 & 1) == 0)
    {
      uint64_t v46 = v67;
      BOOL v47 = (v68 & 1) == 0;
LABEL_19:
      if (v47) {
        uint64_t v50 = v46;
      }
      else {
        uint64_t v50 = 0;
      }
      goto LABEL_22;
    }
  }
  uint64_t v50 = 0;
LABEL_22:
  *(void *)&v18[v16[17]] = v50;
  uint64_t v51 = a1[3];
  uint64_t v52 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v51);
  uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(v51, v52);
  uint64_t v54 = *(void *)(v53 + 16);
  if (v54)
  {
    uint64_t v55 = v53 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
    uint64_t v56 = *(void *)(v58 + 72);
    do
    {
      sub_1C063FDFC(v55, (uint64_t)v13, type metadata accessor for FeedItem);
      sub_1BFE9F928((uint64_t)v13);
      sub_1C0641CA0((uint64_t)v13, type metadata accessor for FeedItem);
      v55 += v56;
      --v54;
    }
    while (v54);
  }
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v64, v63);
  swift_bridgeObjectRelease();
  sub_1BFEA4850((uint64_t)v18, v62, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t destroy for FeedItemSupplementaryAttributes(id *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 3)
  {
    if (result != 2) {
      return result;
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  swift_release();

  unint64_t v3 = (char *)a1 + *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
  type metadata accessor for InternalErrorViewModel();
  if (swift_getEnumCaseMultiPayload() != 1)
  {

LABEL_12:
    return swift_release();
  }
  swift_bridgeObjectRelease();
  if (*((void *)v3 + 2) >= 0xBuLL)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C0AEFBB4();
  uint64_t v5 = &v3[*(int *)(v4 + 80)];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v5 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = &v5[*(int *)(type metadata accessor for GroupLayoutBindingContext() + 52)];
  uint64_t v7 = sub_1C151787C();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFE9F8E0(uint64_t a1, uint64_t a2)
{
  return BlueprintSection<>.feedSlots.getter(a1, *(void *)(a2 - 8), *(void *)(a2 - 16));
}

double sub_1BFE9F8EC@<D0>(uint64_t a1@<X8>)
{
  return FeedGroupRepresentable.feedGroupBindingOptions.getter(a1);
}

double FeedGroupRepresentable.feedGroupBindingOptions.getter@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 41) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(unsigned char *)(a1 + 57) = 1;
  return result;
}

uint64_t sub_1BFE9F920(uint64_t a1, uint64_t a2)
{
  return BlueprintSection<>.layoutOrder.getter(a1, *(void *)(a2 - 8));
}

uint64_t sub_1BFE9F928(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v59 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C063FDFC(a1, (uint64_t)v21, type metadata accessor for FeedItem);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      long long v24 = *((_OWORD *)v21 + 3);
      long long v62 = *((_OWORD *)v21 + 2);
      long long v63 = v24;
      long long v64 = *((_OWORD *)v21 + 4);
      *(void *)&long long v65 = *((void *)v21 + 10);
      long long v25 = *((_OWORD *)v21 + 1);
      long long v60 = *(_OWORD *)v21;
      long long v61 = v25;
      sub_1C0627E34((uint64_t)&v60, 0, 0);
      uint64_t result = sub_1C0641D4C((uint64_t)&v60);
      break;
    case 2:
      sub_1BFEA4850((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      sub_1BFEA4AD8((uint64_t)v18, 0, 0);
      uint64_t result = sub_1C0641CA0((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      break;
    case 3:
      sub_1BFEA4850((uint64_t)v21, (uint64_t)v12, type metadata accessor for FeedHeadline);
      sub_1BFEA285C((uint64_t)v12, 0, 0);
      uint64_t result = sub_1C0641CA0((uint64_t)v12, type metadata accessor for FeedHeadline);
      break;
    case 4:
      sub_1BFEA4850((uint64_t)v21, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1C06281A8((uint64_t)v15, 0, 0);
      uint64_t result = sub_1C0641CA0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      break;
    case 5:
      long long v26 = *((_OWORD *)v21 + 7);
      long long v66 = *((_OWORD *)v21 + 6);
      v67[0] = v26;
      *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)(v21 + 121);
      long long v27 = *((_OWORD *)v21 + 3);
      long long v62 = *((_OWORD *)v21 + 2);
      long long v63 = v27;
      long long v28 = *((_OWORD *)v21 + 5);
      long long v64 = *((_OWORD *)v21 + 4);
      long long v65 = v28;
      long long v29 = *((_OWORD *)v21 + 1);
      long long v60 = *(_OWORD *)v21;
      long long v61 = v29;
      sub_1C0628590(&v60, 0, 0);
      uint64_t result = sub_1C01880A4((uint64_t)&v60);
      break;
    case 6:
      sub_1C063FFF4((uint64_t)v21, (uint64_t)&v60);
      sub_1C06288DC((uint64_t)&v60, 0, 0);
      uint64_t result = sub_1C024A288((uint64_t)&v60);
      break;
    case 7:
      long long v30 = *((_OWORD *)v21 + 7);
      long long v66 = *((_OWORD *)v21 + 6);
      v67[0] = v30;
      v67[1] = *((_OWORD *)v21 + 8);
      LOBYTE(v68) = v21[144];
      long long v31 = *((_OWORD *)v21 + 3);
      long long v62 = *((_OWORD *)v21 + 2);
      long long v63 = v31;
      long long v32 = *((_OWORD *)v21 + 5);
      long long v64 = *((_OWORD *)v21 + 4);
      long long v65 = v32;
      long long v33 = *((_OWORD *)v21 + 1);
      long long v60 = *(_OWORD *)v21;
      long long v61 = v33;
      sub_1C0628C24((uint64_t)&v60, 0, 0);
      uint64_t result = sub_1BFEA4290((uint64_t)&v60);
      break;
    case 8:
      sub_1BFEA4850((uint64_t)v21, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      uint64_t v34 = &v9[*(int *)(v7 + 20)];
      uint64_t v35 = *((void *)v34 + 2);
      uint64_t v36 = *((void *)v34 + 3);
      swift_bridgeObjectRetain();
      sub_1C0628F18((uint64_t)v9, v35, v36);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C0641CA0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      break;
    case 9:
      long long v37 = *((_OWORD *)v21 + 7);
      long long v66 = *((_OWORD *)v21 + 6);
      v67[0] = v37;
      v67[1] = *((_OWORD *)v21 + 8);
      *(void *)&long long v68 = *((void *)v21 + 18);
      long long v38 = *((_OWORD *)v21 + 3);
      long long v62 = *((_OWORD *)v21 + 2);
      long long v63 = v38;
      long long v39 = *((_OWORD *)v21 + 5);
      long long v64 = *((_OWORD *)v21 + 4);
      long long v65 = v39;
      long long v40 = *((_OWORD *)v21 + 1);
      long long v60 = *(_OWORD *)v21;
      long long v61 = v40;
      sub_1C062931C((uint64_t)&v60, 0, 0);
      uint64_t result = sub_1C0249FA4((uint64_t)&v60);
      break;
    case 10:
      sub_1BFEA4850((uint64_t)v21, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      sub_1C0629648((uint64_t)v6, 0, 0);
      uint64_t result = sub_1C0641CA0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      break;
    case 11:
      sub_1C0627B1C(*(void *)v21, 0, 0);
      uint64_t result = swift_release();
      break;
    case 12:
      long long v41 = *((_OWORD *)v21 + 1);
      long long v60 = *(_OWORD *)v21;
      long long v61 = v41;
      LOBYTE(v62) = v21[32];
      sub_1C06299F8((uint64_t)&v60, 0, 0);
      uint64_t result = sub_1C04C5A14((uint64_t)&v60);
      break;
    case 13:
      long long v42 = *((_OWORD *)v21 + 11);
      long long v69 = *((_OWORD *)v21 + 10);
      long long v70 = v42;
      long long v71 = *((_OWORD *)v21 + 12);
      long long v43 = *((_OWORD *)v21 + 7);
      long long v66 = *((_OWORD *)v21 + 6);
      v67[0] = v43;
      long long v44 = *((_OWORD *)v21 + 9);
      v67[1] = *((_OWORD *)v21 + 8);
      long long v68 = v44;
      long long v45 = *((_OWORD *)v21 + 3);
      long long v62 = *((_OWORD *)v21 + 2);
      long long v63 = v45;
      long long v46 = *((_OWORD *)v21 + 5);
      long long v64 = *((_OWORD *)v21 + 4);
      long long v65 = v46;
      long long v47 = *((_OWORD *)v21 + 1);
      long long v60 = *(_OWORD *)v21;
      long long v61 = v47;
      sub_1C0629D4C((uint64_t)&v60, 0, 0);
      uint64_t result = sub_1C01F0A74((uint64_t)&v60);
      break;
    case 14:
      long long v48 = *((_OWORD *)v21 + 1);
      long long v60 = *(_OWORD *)v21;
      long long v61 = v48;
      long long v49 = *((_OWORD *)v21 + 3);
      long long v62 = *((_OWORD *)v21 + 2);
      long long v63 = v49;
      sub_1C062A05C(&v60, 0, 0);
      uint64_t result = sub_1C0641D00((uint64_t)&v60);
      break;
    case 15:
      uint64_t v50 = (uint64_t)v21;
      uint64_t v51 = v59;
      sub_1BFEA4850(v50, v59, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      sub_1C062A3B0(v51, 0, 0);
      uint64_t result = sub_1C0641CA0(v51, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      break;
    case 16:
      long long v52 = *((_OWORD *)v21 + 13);
      long long v71 = *((_OWORD *)v21 + 12);
      long long v72 = v52;
      long long v73 = *((_OWORD *)v21 + 14);
      uint64_t v74 = *((void *)v21 + 30);
      long long v53 = *((_OWORD *)v21 + 9);
      v67[1] = *((_OWORD *)v21 + 8);
      long long v68 = v53;
      long long v54 = *((_OWORD *)v21 + 11);
      long long v69 = *((_OWORD *)v21 + 10);
      long long v70 = v54;
      long long v55 = *((_OWORD *)v21 + 5);
      long long v64 = *((_OWORD *)v21 + 4);
      long long v65 = v55;
      long long v56 = *((_OWORD *)v21 + 7);
      long long v66 = *((_OWORD *)v21 + 6);
      v67[0] = v56;
      long long v57 = *((_OWORD *)v21 + 1);
      long long v60 = *(_OWORD *)v21;
      long long v61 = v57;
      long long v58 = *((_OWORD *)v21 + 3);
      long long v62 = *((_OWORD *)v21 + 2);
      long long v63 = v58;
      sub_1C062A760((uint64_t)&v60, 0, 0);
      uint64_t result = sub_1C01F0AC8((uint64_t)&v60);
      break;
    case 17:
      return result;
    default:
      long long v23 = *((_OWORD *)v21 + 1);
      long long v60 = *(_OWORD *)v21;
      long long v61 = v23;
      long long v62 = *((_OWORD *)v21 + 2);
      *(void *)&long long v63 = *((void *)v21 + 6);
      sub_1BFEB0428((uint64_t)&v60, 0, 0);
      uint64_t result = sub_1BFEB1394((uint64_t)&v60);
      break;
  }
  return result;
}

unint64_t sub_1BFEA009C()
{
  unint64_t result = qword_1EB879CD0;
  if (!qword_1EB879CD0)
  {
    sub_1BFEA0118(255, &qword_1EB879CC8, (uint64_t)&type metadata for FeedSlot, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879CD0);
  }
  return result;
}

void sub_1BFEA0118(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFEA0164(uint64_t a1)
{
  return a1;
}

uint64_t GroupLayoutInventory.layouts(column:kind:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C1517ADC();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v64 - v11;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v64 - v14;
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v64 - v17;
  __n128 v21 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v64 - v20;
  uint64_t v23 = *a2;
  switch(*a2)
  {
    case 0:
      sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1C1527210;
      *(void *)(v27 + 56) = &_s3GapVN;
      *(void *)(v27 + 64) = sub_1BFEACF5C();
      *(unsigned char *)(v27 + 32) = 2;
      *(void *)(v27 + 40) = 0;
      *(unsigned char *)(v27 + 48) = 6;
      *(void *)(v27 + 96) = &_s10GapOfflineVN;
      *(void *)(v27 + 104) = sub_1BFEACFB0();
      *(unsigned char *)(v27 + 72) = 2;
      *(void *)(v27 + 80) = 0;
      *(unsigned char *)(v27 + 88) = 6;
      return v27;
    case 1:
    case 2:
      uint64_t v24 = *a2;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))((char *)&v64 - v20, a1, v6, v21);
      int v25 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v22, v6);
      if (v25 == *MEMORY[0x1E4FAB900])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v26 = swift_allocObject();
        uint64_t v27 = v26;
        *(_OWORD *)(v26 + 16) = xmmword_1C152A660;
        if (v24 == 2)
        {
          *(void *)(v26 + 56) = &type metadata for A6_V1;
          *(void *)(v26 + 64) = sub_1C001950C();
          *(unsigned char *)(v27 + 32) = 2;
          *(void *)(v27 + 40) = 1;
          *(unsigned char *)(v27 + 48) = 6;
          *(void *)(v27 + 96) = &type metadata for A6_V3;
          unint64_t v28 = sub_1C001892C();
        }
        else
        {
          *(void *)(v26 + 56) = &type metadata for A6_V3;
          *(void *)(v26 + 64) = sub_1C001892C();
          *(unsigned char *)(v27 + 32) = 2;
          *(void *)(v27 + 40) = 1;
          *(unsigned char *)(v27 + 48) = 6;
          *(void *)(v27 + 96) = &type metadata for A6_V1;
          unint64_t v28 = sub_1C001950C();
        }
        *(void *)(v27 + 104) = v28;
        *(unsigned char *)(v27 + 72) = 2;
        *(void *)(v27 + 80) = 1;
        *(unsigned char *)(v27 + 88) = 6;
        *(void *)(v27 + 136) = &type metadata for A6_V4;
        *(void *)(v27 + 144) = sub_1BFEB02C8();
        *(unsigned char *)(v27 + 112) = 2;
        *(void *)(v27 + 120) = 1;
        *(unsigned char *)(v27 + 128) = 6;
        *(void *)(v27 + 176) = &type metadata for A6_V2;
        *(void *)(v27 + 184) = sub_1BFEB14BC();
        *(unsigned char *)(v27 + 152) = 2;
        *(void *)(v27 + 160) = 2;
        *(unsigned char *)(v27 + 168) = 6;
        return v27;
      }
      if (v25 == *MEMORY[0x1E4FAB908])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C152E290;
        *(void *)(v27 + 56) = &type metadata for A12_V25;
        *(void *)(v27 + 64) = sub_1C018638C();
        *(unsigned char *)(v27 + 32) = 2;
        *(void *)(v27 + 40) = 0;
        *(unsigned char *)(v27 + 48) = 6;
        *(void *)(v27 + 96) = &type metadata for A12_V24;
        *(void *)(v27 + 104) = sub_1C01863E0();
        *(unsigned char *)(v27 + 72) = 3;
        *(void *)(v27 + 80) = 0;
        *(unsigned char *)(v27 + 88) = 6;
        *(void *)(v27 + 136) = &type metadata for A12_V23;
        *(void *)(v27 + 144) = sub_1C0186434();
        *(unsigned char *)(v27 + 112) = 2;
        *(void *)(v27 + 120) = 0;
        *(unsigned char *)(v27 + 128) = 6;
        *(void *)(v27 + 176) = &type metadata for A12_V7;
        *(void *)(v27 + 184) = sub_1C0186488();
        *(unsigned char *)(v27 + 152) = 2;
        *(void *)(v27 + 160) = 1;
        *(unsigned char *)(v27 + 168) = 6;
        *(void *)(v27 + 216) = &type metadata for A12_V1;
        *(void *)(v27 + 224) = sub_1C01864DC();
        *(unsigned char *)(v27 + 192) = 2;
        *(void *)(v27 + 200) = 0;
        *(unsigned char *)(v27 + 208) = 6;
        *(void *)(v27 + 256) = &type metadata for A12_V2;
        *(void *)(v27 + 264) = sub_1C0186530();
        *(unsigned char *)(v27 + 232) = 2;
        *(void *)(v27 + 240) = 1;
        *(unsigned char *)(v27 + 248) = 6;
        *(void *)(v27 + 296) = &type metadata for A12_V19;
        unint64_t v34 = sub_1C0186584();
        *(void *)(v27 + 304) = v34;
        *(unsigned char *)(v27 + 272) = 2;
        *(void *)(v27 + 280) = 1;
        *(unsigned char *)(v27 + 288) = 6;
        *(void *)(v27 + 336) = &type metadata for A12_V8;
        *(void *)(v27 + 344) = sub_1C01865D8();
        *(unsigned char *)(v27 + 312) = 2;
        *(void *)(v27 + 320) = 1;
        *(unsigned char *)(v27 + 328) = 6;
        *(void *)(v27 + 376) = &type metadata for A12_V3;
        *(void *)(v27 + 384) = sub_1C018662C();
        *(unsigned char *)(v27 + 352) = 2;
        *(void *)(v27 + 360) = 1;
        *(unsigned char *)(v27 + 368) = 6;
        *(void *)(v27 + 416) = &type metadata for A12_V4;
        *(void *)(v27 + 424) = sub_1C0186680();
        *(unsigned char *)(v27 + 392) = 2;
        *(void *)(v27 + 400) = 1;
        *(unsigned char *)(v27 + 408) = 6;
        *(void *)(v27 + 456) = &type metadata for A12_V5;
        *(void *)(v27 + 464) = sub_1C01866D4();
        *(unsigned char *)(v27 + 432) = 2;
        *(void *)(v27 + 440) = 1;
        *(unsigned char *)(v27 + 448) = 6;
        *(void *)(v27 + 496) = &type metadata for A12_V6;
        *(void *)(v27 + 504) = sub_1C0186728();
        *(unsigned char *)(v27 + 472) = 2;
        *(void *)(v27 + 480) = 0;
        *(unsigned char *)(v27 + 488) = 6;
        *(void *)(v27 + 536) = &type metadata for A12_V9;
        *(void *)(v27 + 544) = sub_1C018677C();
        *(unsigned char *)(v27 + 512) = 2;
        *(void *)(v27 + 520) = 0;
        *(unsigned char *)(v27 + 528) = 6;
        *(void *)(v27 + 576) = &type metadata for A12_V10;
        *(void *)(v27 + 584) = sub_1C01867D0();
        *(unsigned char *)(v27 + 552) = 0;
        *(void *)(v27 + 560) = 0;
        *(unsigned char *)(v27 + 568) = 6;
        *(void *)(v27 + 616) = &type metadata for A12_V11;
        *(void *)(v27 + 624) = sub_1C0186824();
        *(unsigned char *)(v27 + 592) = 1;
        *(void *)(v27 + 600) = 1;
        *(unsigned char *)(v27 + 608) = 6;
        *(void *)(v27 + 656) = &type metadata for A12_V12;
        *(void *)(v27 + 664) = sub_1C0186878();
        *(unsigned char *)(v27 + 632) = 0;
        *(void *)(v27 + 640) = 1;
        *(unsigned char *)(v27 + 648) = 6;
        *(void *)(v27 + 696) = &type metadata for A12_V13;
        *(void *)(v27 + 704) = sub_1C01868CC();
        *(unsigned char *)(v27 + 672) = 0;
        *(void *)(v27 + 680) = 1;
        *(unsigned char *)(v27 + 688) = 6;
        *(void *)(v27 + 736) = &type metadata for A12_V17;
        *(void *)(v27 + 744) = sub_1C0186920();
        *(unsigned char *)(v27 + 712) = 2;
        *(void *)(v27 + 720) = 2;
        *(unsigned char *)(v27 + 728) = 6;
        *(void *)(v27 + 776) = &type metadata for A12_V14;
        *(void *)(v27 + 784) = sub_1C0186974();
        *(unsigned char *)(v27 + 752) = 0;
        *(void *)(v27 + 760) = 1;
        *(unsigned char *)(v27 + 768) = 6;
        *(void *)(v27 + 816) = &type metadata for A12_V15;
        *(void *)(v27 + 824) = sub_1C01869C8();
        *(unsigned char *)(v27 + 792) = 0;
        *(void *)(v27 + 800) = 0;
        *(unsigned char *)(v27 + 808) = 6;
        *(void *)(v27 + 856) = &type metadata for A12_V16;
        *(void *)(v27 + 864) = sub_1C0186A1C();
        *(unsigned char *)(v27 + 832) = 2;
        *(void *)(v27 + 840) = 2;
        *(unsigned char *)(v27 + 848) = 6;
        *(void *)(v27 + 896) = &type metadata for A12_V19;
        *(void *)(v27 + 904) = v34;
        *(unsigned char *)(v27 + 872) = 2;
        *(void *)(v27 + 880) = 1;
        *(unsigned char *)(v27 + 888) = 6;
        *(void *)(v27 + 936) = &type metadata for A12_V20;
        *(void *)(v27 + 944) = sub_1C0186A70();
        *(unsigned char *)(v27 + 912) = 0;
        *(void *)(v27 + 920) = 1;
        *(unsigned char *)(v27 + 928) = 6;
        return v27;
      }
      if (v25 == *MEMORY[0x1E4FAB910])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C152E280;
        *(void *)(v27 + 56) = &type metadata for A18_V17;
        *(void *)(v27 + 64) = sub_1C0185F9C();
        *(unsigned char *)(v27 + 32) = 2;
        *(void *)(v27 + 40) = 1;
        *(unsigned char *)(v27 + 48) = 6;
        *(void *)(v27 + 96) = &type metadata for A18_V15;
        *(void *)(v27 + 104) = sub_1C0185FF0();
        *(unsigned char *)(v27 + 72) = 2;
        *(void *)(v27 + 80) = 1;
        *(unsigned char *)(v27 + 88) = 6;
        *(void *)(v27 + 136) = &type metadata for A18_V2;
        unint64_t v54 = sub_1C0186044();
        *(void *)(v27 + 144) = v54;
        *(unsigned char *)(v27 + 112) = 2;
        *(void *)(v27 + 120) = 0;
        *(unsigned char *)(v27 + 128) = 6;
        *(void *)(v27 + 176) = &type metadata for A18_V3;
        *(void *)(v27 + 184) = sub_1C0186098();
        *(unsigned char *)(v27 + 152) = 2;
        *(void *)(v27 + 160) = 1;
        *(unsigned char *)(v27 + 168) = 6;
        *(void *)(v27 + 216) = &type metadata for A18_V1;
        *(void *)(v27 + 224) = sub_1C01860EC();
        *(unsigned char *)(v27 + 192) = 2;
        *(void *)(v27 + 200) = 1;
        *(unsigned char *)(v27 + 208) = 6;
        *(void *)(v27 + 256) = &type metadata for A18_V4;
        *(void *)(v27 + 264) = sub_1C0186140();
        *(unsigned char *)(v27 + 232) = 2;
        *(void *)(v27 + 240) = 1;
        *(unsigned char *)(v27 + 248) = 6;
        *(void *)(v27 + 296) = &type metadata for A18_V6;
        *(void *)(v27 + 304) = sub_1C0186194();
        *(unsigned char *)(v27 + 272) = 2;
        *(void *)(v27 + 280) = 1;
        *(unsigned char *)(v27 + 288) = 6;
        *(void *)(v27 + 336) = &type metadata for A18_V2;
        *(void *)(v27 + 344) = v54;
        *(unsigned char *)(v27 + 312) = 2;
        *(void *)(v27 + 320) = 0;
        *(unsigned char *)(v27 + 328) = 6;
        *(void *)(v27 + 376) = &type metadata for A18_V8;
        *(void *)(v27 + 384) = sub_1C01861E8();
        *(unsigned char *)(v27 + 352) = 2;
        *(void *)(v27 + 360) = 1;
        *(unsigned char *)(v27 + 368) = 6;
        *(void *)(v27 + 416) = &type metadata for A18_V10;
        *(void *)(v27 + 424) = sub_1C018623C();
        *(unsigned char *)(v27 + 392) = 2;
        *(void *)(v27 + 400) = 1;
        *(unsigned char *)(v27 + 408) = 6;
        *(void *)(v27 + 456) = &type metadata for A18_V11;
        *(void *)(v27 + 464) = sub_1C0186290();
        *(unsigned char *)(v27 + 432) = 2;
        *(void *)(v27 + 440) = 1;
        *(unsigned char *)(v27 + 448) = 6;
        *(void *)(v27 + 496) = &type metadata for A18_V12;
        *(void *)(v27 + 504) = sub_1C01862E4();
        *(unsigned char *)(v27 + 472) = 2;
        *(void *)(v27 + 480) = 2;
        *(unsigned char *)(v27 + 488) = 6;
        *(void *)(v27 + 536) = &type metadata for A18_V16;
        *(void *)(v27 + 544) = sub_1C0186338();
        *(unsigned char *)(v27 + 512) = 1;
        *(void *)(v27 + 520) = 1;
        *(unsigned char *)(v27 + 528) = 6;
        return v27;
      }
      int v63 = 0;
      goto LABEL_55;
    case 3:
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v18, a1, v6, v21);
      int v31 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v18, v6);
      if (v31 != *MEMORY[0x1E4FAB900] && v31 != *MEMORY[0x1E4FAB908] && v31 != *MEMORY[0x1E4FAB910])
      {
        int v63 = 0;
        goto LABEL_55;
      }
      sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1C1527210;
      *(void *)(v27 + 56) = &type metadata for G_V1;
      *(void *)(v27 + 64) = sub_1C0185EF4();
      *(unsigned char *)(v27 + 32) = 2;
      *(void *)(v27 + 40) = 1;
      *(unsigned char *)(v27 + 48) = 6;
      *(void *)(v27 + 96) = &type metadata for G_V2;
      *(void *)(v27 + 104) = sub_1C0185F48();
      *(unsigned char *)(v27 + 72) = 2;
      *(void *)(v27 + 80) = 2;
      *(unsigned char *)(v27 + 88) = 6;
      return v27;
    case 4:
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v15, a1, v6, v21);
      int v29 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v15, v6);
      if (v29 == *MEMORY[0x1E4FAB900])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
        *(void *)(v27 + 56) = &type metadata for H6_V1;
        unint64_t v30 = sub_1C0185EA0();
        goto LABEL_46;
      }
      if (v29 == *MEMORY[0x1E4FAB908])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
        *(void *)(v27 + 56) = &type metadata for H12_V1;
        unint64_t v30 = sub_1C0185E4C();
        goto LABEL_46;
      }
      if (v29 == *MEMORY[0x1E4FAB910])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
        *(void *)(v27 + 56) = &type metadata for H18_V1;
        unint64_t v30 = sub_1C0185DF8();
        goto LABEL_46;
      }
      int v63 = 0;
      goto LABEL_55;
    case 5:
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v12, a1, v6, v21);
      int v35 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v12, v6);
      if (v35 == *MEMORY[0x1E4FAB900])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
        *(void *)(v27 + 56) = &type metadata for J6_V1;
        unint64_t v30 = sub_1C0185DA4();
        goto LABEL_46;
      }
      if (v35 == *MEMORY[0x1E4FAB908])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
        *(void *)(v27 + 56) = &type metadata for J12_V1;
        unint64_t v30 = sub_1C0185D50();
        goto LABEL_46;
      }
      if (v35 == *MEMORY[0x1E4FAB910])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
        *(void *)(v27 + 56) = &type metadata for J18_V1;
        unint64_t v30 = sub_1C0185CFC();
        goto LABEL_46;
      }
      int v63 = 0;
LABEL_55:
      uint64_t result = sub_1C152040C();
      __break(1u);
      return result;
    case 6:
      uint64_t v27 = MEMORY[0x1E4FBC860];
      MEMORY[0x1C18BFEB0]("The .regions FeedGroupKind should never be handed off to FeedLayoutSolver, but split into regions with real FeedGroupKinds instead.", 131, 2, MEMORY[0x1E4FBC860], v21);
      return v27;
    case 7:
      sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
      *(void *)(v27 + 56) = &_s2AdVN;
      unint64_t v30 = sub_1BFEA215C();
      goto LABEL_46;
    case 8:
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a1, v6, v21);
      int v36 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
      if (v36 == *MEMORY[0x1E4FAB900])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
        *(void *)(v27 + 56) = &type metadata for M6_V1;
        unint64_t v30 = sub_1C0185C54();
LABEL_46:
        *(void *)(v27 + 64) = v30;
        *(unsigned char *)(v27 + 32) = 2;
        *(void *)(v27 + 40) = 0;
        *(unsigned char *)(v27 + 48) = 6;
        return v27;
      }
      if (v36 == *MEMORY[0x1E4FAB908])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
        *(void *)(v27 + 56) = &type metadata for M12_V1;
        unint64_t v30 = sub_1C0185C00();
        goto LABEL_46;
      }
      if (v36 == *MEMORY[0x1E4FAB910])
      {
        sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
        uint64_t v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
        *(void *)(v27 + 56) = &type metadata for M18_V1;
        unint64_t v30 = sub_1C0185BAC();
        goto LABEL_46;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return MEMORY[0x1E4FBC860];
    case 9:
      sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
      *(void *)(v27 + 56) = &_s10EngagementVN;
      unint64_t v30 = sub_1C0185B58();
      goto LABEL_46;
    case 10:
      sub_1BFEA26F4(0, (unint64_t *)&qword_1EB87A7F0, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1C1529AE0;
      *(void *)(v27 + 56) = &type metadata for PluginGroupLayoutFactory;
      *(void *)(v27 + 64) = sub_1C0185CA8();
      return v27;
    default:
      uint64_t v37 = v3;
      uint64_t v38 = a2[1];
      uint64_t v39 = a2[3];
      uint64_t v64 = a2[2];
      uint64_t v65 = v38;
      uint64_t v40 = a2[4];
      long long v41 = (uint64_t *)(v23 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
      uint64_t v42 = v23;
      swift_beginAccess();
      uint64_t v43 = *v41;
      uint64_t v44 = v41[1];
      uint64_t v45 = v41[2];
      uint64_t v46 = v42;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1C1517ACC();
      uint64_t v66 = v43;
      uint64_t v67 = v44;
      uint64_t v68 = v45;
      uint64_t v48 = FormatGroupCollection.subscript.getter(v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v48) {
        goto LABEL_49;
      }
      if (*(void *)(v48 + 16))
      {
        type metadata accessor for FormatLogger();
        swift_retain();
        uint64_t inited = swift_initStaticObject();
        type metadata accessor for FormatOptionConverter();
        uint64_t v50 = (void *)swift_allocObject();
        uint64_t v51 = sub_1C0186C94(v46, inited, v50, (uint64_t (*)(void, __n128))type metadata accessor for FormatLogger, (uint64_t)&protocol witness table for FormatLogger, sub_1BFFE2DDC);
        MEMORY[0x1F4188790](v51);
        *(&v64 - 8) = v46;
        *(&v64 - 7) = v37;
        uint64_t v52 = v65;
        *(&v64 - 6) = v53;
        *(&v64 - 5) = v52;
        *(&v64 - 4) = v64;
        *(&v64 - 3) = v39;
        uint64_t v62 = v40;
        uint64_t v27 = sub_1C0182D30((void (*)(long long *__return_ptr, _OWORD *))sub_1BFDBB43C, (uint64_t)(&v64 - 10), v48);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return v27;
      }
      swift_bridgeObjectRelease();
LABEL_49:
      sub_1BFEA26F4(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_1C1527210;
      uint64_t v57 = sub_1C1517ACC();
      uint64_t v58 = MEMORY[0x1E4FBB5C8];
      *(void *)(v56 + 56) = MEMORY[0x1E4FBB550];
      *(void *)(v56 + 64) = v58;
      *(void *)(v56 + 32) = v57;
      uint64_t v66 = v42;
      type metadata accessor for FormatPackageInventory();
      sub_1BFFE2F64(&qword_1EB870720, (void (*)(uint64_t))type metadata accessor for FormatPackageInventory);
      uint64_t v59 = sub_1C152088C();
      uint64_t v61 = v60;
      *(void *)(v56 + 96) = MEMORY[0x1E4FBB1A0];
      *(void *)(v56 + 104) = sub_1BFE9C558();
      *(void *)(v56 + 72) = v59;
      *(void *)(v56 + 80) = v61;
      MEMORY[0x1C18BFEB0]("Expected to get at least one group for %d columns, but got %{public}@!", 70, 2, v56);
      swift_release();
      swift_bridgeObjectRelease();
      return MEMORY[0x1E4FBC860];
  }
}

unint64_t sub_1BFEA1548()
{
  unint64_t result = qword_1EB8734F8;
  if (!qword_1EB8734F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8734F8);
  }
  return result;
}

uint64_t sub_1BFEA159C(uint64_t a1)
{
  return a1;
}

uint64_t destroy for FeedLayoutSolverResult(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  return result;
}

uint64_t sub_1BFEA1648(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v1 = sub_1C151811C();
  sub_1BFE9D698(v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFEA16AC(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t result = sub_1BFEA1774(a4, a5, (uint64_t)a6, a7, (uint64_t)v15);
  if (*(void *)&v15[0])
  {
    long long v13 = v15[1];
    *(_OWORD *)a1 = v15[0];
    *(_OWORD *)(a1 + 16) = v13;
    *(_OWORD *)(a1 + 32) = v15[2];
    *(void *)(a1 + 48) = v16;
    char v14 = 1;
  }
  else
  {
    sub_1C1447094((uint64_t)v15, (uint64_t (*)(void))sub_1BFF77AEC);
    uint64_t result = sub_1BFFFB310(a5, a6, a7, (uint64_t *)a1);
    char v14 = 0;
  }
  *a2 = v14;
  return result;
}

uint64_t sub_1BFEA1774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v12 - 8);
  char v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)(v6 + *(void *)(*(void *)v6 + 104));
  uint64_t v16 = v15[3];
  uint64_t v17 = v15[4];
  __swift_project_boxed_opaque_existential_1(v15, v16);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(a1, v16, v17);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v39 = a4;
    *(void *)&long long v40 = v14;
    uint64_t v21 = a3;
    uint64_t v22 = *(void *)(a2 + 16);
    if (v22)
    {
      uint64_t v23 = result;
      uint64_t v24 = a2 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BFC66384(v24, (uint64_t)&v41);
        __swift_project_boxed_opaque_existential_1(&v41, v42);
        if (sub_1C151811C() == v23 && v20 == v25) {
          break;
        }
        char v27 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_13;
        }
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
        v24 += 40;
        if (!--v22)
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
LABEL_13:
      swift_bridgeObjectRelease();
      sub_1BFC773DC(&v41, (uint64_t)&v43);
    }
    else
    {
LABEL_11:
      uint64_t v45 = 0;
      long long v43 = 0u;
      long long v44 = 0u;
    }
    swift_bridgeObjectRelease();
    uint64_t v28 = v21;
    uint64_t v29 = v40;
    if (*((void *)&v44 + 1))
    {
      sub_1BFC773DC(&v43, (uint64_t)v46);
      sub_1C14465D0(0, (unint64_t *)&qword_1EB895EB0, (unint64_t *)&qword_1EB895EC0, MEMORY[0x1E4FBC5A0], MEMORY[0x1E4FBBE00]);
      uint64_t v30 = swift_allocObject();
      long long v40 = xmmword_1C1529AE0;
      *(_OWORD *)(v30 + 16) = xmmword_1C1529AE0;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      uint64_t v31 = sub_1C151811C();
      uint64_t v33 = v32;
      *(void *)(v30 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v30 + 64) = sub_1BFE9C558();
      *(void *)(v30 + 32) = v31;
      *(void *)(v30 + 40) = v33;
      sub_1C151F38C();
      sub_1C15197BC();
      swift_bridgeObjectRelease();
      sub_1C1446FF4(v28, v29, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      uint64_t v34 = v47;
      uint64_t v35 = v48;
      __swift_project_boxed_opaque_existential_1(v46, v47);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 48))(&v43, v29, v39, v34, v35);
      sub_1C14465D0(0, (unint64_t *)&qword_1EB87A850, &qword_1EB878A10, (uint64_t)&protocol descriptor for BoundGroupLayoutFactoryType, MEMORY[0x1E4FBBE00]);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v40;
      sub_1BFC66384((uint64_t)&v43, v36 + 32);
      sub_1C1447094(v29, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      sub_1BFC773DC(&v43, a5 + 16);
      uint64_t v37 = MEMORY[0x1E4FBC860];
      *(void *)a5 = v36;
      *(void *)(a5 + 8) = v37;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    }
    uint64_t result = sub_1BFE9E590((uint64_t)&v43, &qword_1EB8779F8, (unint64_t *)&qword_1EB8779F0, (uint64_t)&protocol descriptor for GroupLayoutFactoryType);
  }
  *(void *)(a5 + 48) = 0;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)a5 = 0u;
  return result;
}

uint64_t sub_1BFEA1C74(uint64_t a1, uint64_t a2, long long *a3, int a4)
{
  return FeedLayoutCache.store(cacheKey:feedGroupLayout:layoutResult:saveToDatabase:)(a1, a2, a3, a4);
}

uint64_t sub_1BFEA1C98(uint64_t a1)
{
  return FeedLayoutCache.bindLookup(cacheKey:)(a1);
}

uint64_t FeedLayoutCache.store(cacheKey:feedGroupLayout:layoutResult:saveToDatabase:)(uint64_t a1, uint64_t a2, long long *a3, int a4)
{
  uint64_t v5 = v4;
  int v30 = a4;
  uint64_t v9 = type metadata accessor for FeedLayoutCacheKey();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v28 = (uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  long long v32 = *a3;
  uint64_t v13 = *((void *)a3 + 2);
  uint64_t v12 = *((void *)a3 + 3);
  uint64_t v14 = *((void *)a3 + 4);
  uint64_t v15 = *((void *)a3 + 5);
  uint64_t v16 = *((void *)a3 + 6);
  int v31 = *((unsigned __int8 *)a3 + 56);
  uint64_t v33 = *(void *)(v5 + 16);
  uint64_t v29 = a1;
  sub_1BFE9CC44(a1, (uint64_t)&v27 - v17, (uint64_t (*)(void))type metadata accessor for FeedLayoutCacheKey);
  uint64_t v27 = a2;
  sub_1BFC66384(a2, (uint64_t)v36);
  __swift_project_boxed_opaque_existential_1(v36, *((uint64_t *)&v37 + 1));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C151811C();
  uint64_t v20 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  v36[0] = v18;
  v36[1] = v20;
  long long v37 = v32;
  uint64_t v38 = v13;
  uint64_t v39 = v12;
  uint64_t v40 = v14;
  uint64_t v41 = v15;
  uint64_t v42 = v16;
  char v43 = v31;
  sub_1C1518DDC();
  sub_1BFEA2004(v5 + 24, (uint64_t)&v34);
  if (!v35) {
    return sub_1BFEA1F7C((uint64_t)&v34);
  }
  sub_1BFC773DC(&v34, (uint64_t)v36);
  uint64_t v21 = v29;
  uint64_t v22 = v28;
  sub_1BFE9CC44(v29, v28, (uint64_t (*)(void))type metadata accessor for FeedLayoutCacheKey);
  if (v30)
  {
    char v23 = *(unsigned char *)(v22 + 56);
    sub_1BFE9CDE4(v22, (uint64_t (*)(void))type metadata accessor for FeedLayoutCacheKey);
    if (v23)
    {
      uint64_t v24 = *((void *)&v37 + 1);
      uint64_t v25 = v38;
      __swift_project_boxed_opaque_existential_1(v36, *((uint64_t *)&v37 + 1));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 16))(v21, v27, v24, v25);
    }
  }
  else
  {
    sub_1BFE9CDE4(v22, (uint64_t (*)(void))type metadata accessor for FeedLayoutCacheKey);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t sub_1BFEA1F40()
{
  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1C151811C();
}

uint64_t sub_1BFEA1F7C(uint64_t a1)
{
  sub_1BFE6A7A4(0, &qword_1EB886510, &qword_1EB886508, (uint64_t)&protocol descriptor for FeedLayoutDatabaseType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFEA2004(uint64_t a1, uint64_t a2)
{
  sub_1BFE6A7A4(0, &qword_1EB886510, &qword_1EB886508, (uint64_t)&protocol descriptor for FeedLayoutDatabaseType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FeedLayoutCache.bindLookup(cacheKey:)(uint64_t a1)
{
  sub_1BFEA2004(v1 + 24, (uint64_t)&v7);
  if (!v8)
  {
    sub_1BFEA1F7C((uint64_t)&v7);
    return 0;
  }
  sub_1BFC773DC(&v7, (uint64_t)v9);
  if (*(unsigned char *)(a1 + 56) != 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    return 0;
  }
  uint64_t v3 = v10;
  uint64_t v4 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v5;
}

unint64_t sub_1BFEA215C()
{
  unint64_t result = qword_1EB873FF0;
  if (!qword_1EB873FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873FF0);
  }
  return result;
}

void *sub_1BFEA21B0(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  unint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    unint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v7 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = 8 * v16;
    uint64_t v22 = *(void *)(*(void *)(v3 + 56) + v21);
    char v23 = (void *)(*(void *)(v5 + 48) + v17);
    *char v23 = v20;
    v23[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v21) = v22;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v14) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v7 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BFEA2364()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BFEA2398(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, uint64_t a8, uint64_t a9, char *a10, uint64_t a11, long long *a12, uint64_t a13, uint64_t a14)
{
  char v22 = *a10;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v14 + 80) - 8) + 32))(v14 + *(void *)(*(void *)v14 + 96), a1);
  sub_1BFC773DC(a2, v14 + *(void *)(*(void *)v14 + 104));
  uint64_t v23 = v14 + *(void *)(*(void *)v14 + 112);
  uint64_t v24 = sub_1C151757C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v23, a3, v24);
  uint64_t v25 = v14 + *(void *)(*(void *)v14 + 120);
  uint64_t v26 = sub_1C151772C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v25, a4, v26);
  *(void *)(v14 + *(void *)(*(void *)v14 + 136)) = a6;
  sub_1C1446FF4(a5, v14 + *(void *)(*(void *)v14 + 128), type metadata accessor for FeedLayoutSolverOptions);
  sub_1BFC773DC(a7, v14 + *(void *)(*(void *)v14 + 144));
  *(void *)(v14 + *(void *)(*(void *)v14 + 168)) = a8;
  *(void *)(v14 + *(void *)(*(void *)v14 + 160)) = a9;
  *(unsigned char *)(v14 + *(void *)(*(void *)v14 + 176)) = v22;
  sub_1C019CBB8(a11, v14 + *(void *)(*(void *)v14 + 184));
  sub_1BFC773DC(a12, v14 + *(void *)(*(void *)v14 + 192));
  uint64_t v27 = (void *)(v14 + *(void *)(*(void *)v14 + 200));
  *uint64_t v27 = a13;
  v27[1] = a14;
  uint64_t v28 = *(void *)a5;
  uint64_t v29 = *(void *)(a5 + 8);
  LODWORD(a8) = *(unsigned __int8 *)(a5 + 16);
  sub_1C1447094(a5, type metadata accessor for FeedLayoutSolverOptions);
  if (a8 == 1)
  {
    uint64_t v30 = v14 + *(void *)(*(void *)v14 + 152);
    *(void *)uint64_t v30 = 0;
    *(void *)(v30 + 8) = 0;
    if (v28 | v29)
    {
      *(unsigned char *)(v30 + 24) = 0;
      *(void *)(v30 + 16) = 0;
    }
    else
    {
      *(void *)(v30 + 16) = 0;
      *(unsigned char *)(v30 + 24) = 1;
    }
  }
  else
  {
    uint64_t v31 = v14 + *(void *)(*(void *)v14 + 152);
    *(void *)uint64_t v31 = v28;
    *(void *)(v31 + 8) = v29;
    *(void *)(v31 + 16) = 0;
    *(unsigned char *)(v31 + 24) = 0;
  }
  return v14;
}

void sub_1BFEA26F4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1BFEA275C(uint64_t a1, uint64_t a2)
{
  return BlueprintSection<>.feedGroupItems.getter(a1, *(void *)(a2 - 8));
}

uint64_t BlueprintSection<>.feedGroupItems.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151AA1C();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(v3, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v7;
}

uint64_t FeedGroupDescribing.feedGroupItems.getter()
{
  return MEMORY[0x1E4FBC870];
}

__n128 sub_1BFEA285C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v11 = *(int *)(v33 + 56);
  uint64_t v12 = *(void *)(v3 + v11);
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1BFEA34E4(0x6461654864656546, 0xEC000000656E696CLL, a2, a3);
    if (v15)
    {
      unint64_t v16 = *(void **)(*(void *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C063FDFC(a1, (uint64_t)v10, type metadata accessor for FeedHeadline);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v16 = sub_1BFEA4268(0, v16[2] + 1, 1, v16);
  }
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    unint64_t v16 = sub_1BFEA4268((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  v37.n128_u64[1] = v8;
  uint64_t v19 = v8;
  uint64_t v20 = sub_1BFEBC274((unint64_t *)&unk_1EB873778, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  *(void *)&long long v38 = v20;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
  sub_1C063FDFC((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
  v16[2] = v18 + 1;
  sub_1BFC773DC(&v36, (uint64_t)&v16[5 * v18 + 4]);
  sub_1C0641CA0((uint64_t)v10, type metadata accessor for FeedHeadline);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v36 = *(void *)(v4 + v11);
  *(void *)(v4 + v11) = 0x8000000000000000;
  uint64_t v23 = v34;
  sub_1BFEA3344((uint64_t)v16, 0x6461654864656546, 0xEC000000656E696CLL, v34, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v11) = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((void *)&v39 + 1) = v19;
  uint64_t v40 = v20;
  uint64_t v24 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v38);
  sub_1C063FDFC(v35, (uint64_t)v24, type metadata accessor for FeedHeadline);
  strcpy((char *)&v36, "FeedHeadline");
  BYTE13(v36) = 0;
  HIWORD(v36) = -5120;
  v37.n128_u64[0] = v23;
  v37.n128_u64[1] = a3;
  uint64_t v25 = *(int *)(v33 + 60);
  uint64_t v26 = *(void **)(v4 + v25);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v26 = sub_1BFEA36BC(0, v26[2] + 1, 1, v26);
  }
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    uint64_t v26 = sub_1BFEA36BC((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  void v26[2] = v28 + 1;
  uint64_t v29 = &v26[9 * v28];
  *((_OWORD *)v29 + 2) = v36;
  __n128 result = v37;
  long long v31 = v38;
  long long v32 = v39;
  v29[12] = v40;
  *((_OWORD *)v29 + 4) = v31;
  *((_OWORD *)v29 + 5) = v32;
  *((__n128 *)v29 + 3) = result;
  *(void *)(v4 + v25) = v26;
  return result;
}

uint64_t FeedItemSupplementaryAttributes.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEA2E2C(v2, (uint64_t)v6);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload == 2)
    {
      long long v11 = *((_OWORD *)v6 + 5);
      v21[4] = *((_OWORD *)v6 + 4);
      v21[5] = v11;
      long long v12 = *((_OWORD *)v6 + 7);
      v21[6] = *((_OWORD *)v6 + 6);
      v21[7] = v12;
      long long v13 = *((_OWORD *)v6 + 1);
      v21[0] = *(_OWORD *)v6;
      v21[1] = v13;
      long long v14 = *((_OWORD *)v6 + 3);
      v21[2] = *((_OWORD *)v6 + 2);
      v21[3] = v14;
      uint64_t v15 = *((void *)v6 + 16);
      sub_1C0955B08((uint64_t)v21);
      int v16 = *(unsigned __int8 *)(*(void *)(v15
                                           + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                               + 208);
      swift_release();
      uint64_t v17 = sub_1C151C1FC();
      unint64_t v18 = (unsigned int *)MEMORY[0x1E4FAD2A8];
      if (!v16) {
        unint64_t v18 = (unsigned int *)MEMORY[0x1E4FAD2B0];
      }
      return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(a1, *v18, v17);
    }
    else
    {
      uint64_t v19 = *MEMORY[0x1E4FAD2B0];
      uint64_t v20 = sub_1C151C1FC();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(a1, v19, v20);
      return sub_1C0AEF8E8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for InternalErrorViewLayout.Context);
    }
  }
  else
  {
    uint64_t v8 = *MEMORY[0x1E4FAD2A8];
    uint64_t v9 = sub_1C151C1FC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(a1, v8, v9);
  }
}

uint64_t sub_1BFEA2E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedItemSupplementaryAttributes();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FeedItemSupplementaryAttributes()
{
  uint64_t result = qword_1EB873258;
  if (!qword_1EB873258) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithCopy for FeedItemSupplementaryAttributes(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v13 = a2[1];
    *a1 = *a2;
    a1[1] = v13;
    long long v14 = (void *)a2[3];
    a1[2] = a2[2];
    a1[3] = v14;
    uint64_t v15 = (void *)a2[4];
    int v16 = (void *)a2[5];
    a1[4] = v15;
    a1[5] = v16;
    uint64_t v17 = (void *)a2[6];
    uint64_t v66 = (void *)a2[7];
    a1[6] = v17;
    a1[7] = v66;
    uint64_t v67 = (void *)a2[8];
    a1[8] = v67;
    uint64_t v18 = *(int *)(type metadata accessor for InternalErrorViewLayout.Context() + 48);
    uint64_t v68 = (void *)((char *)a1 + v18);
    uint64_t v19 = (char *)a2 + v18;
    type metadata accessor for InternalErrorViewModel();
    swift_bridgeObjectRetain();
    swift_retain();
    id v20 = v14;
    id v21 = v15;
    id v22 = v16;
    id v23 = v17;
    id v24 = v66;
    id v25 = v67;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = *((void *)v19 + 1);
      *uint64_t v68 = *(void *)v19;
      v68[1] = v26;
      unint64_t v27 = *((void *)v19 + 2);
      swift_bridgeObjectRetain();
      if (v27 >= 0xB)
      {
        uint64_t v32 = *((void *)v19 + 3);
        uint64_t v33 = *((void *)v19 + 4);
        v68[2] = v27;
        v68[3] = v32;
        uint64_t v34 = *((void *)v19 + 5);
        uint64_t v35 = *((void *)v19 + 6);
        v68[4] = v33;
        v68[5] = v34;
        v68[6] = v35;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v28 = *((_OWORD *)v19 + 2);
        *((_OWORD *)v68 + 1) = *((_OWORD *)v19 + 1);
        *((_OWORD *)v68 + 2) = v28;
        v68[6] = *((void *)v19 + 6);
      }
      uint64_t v36 = *((void *)v19 + 8);
      v68[7] = *((void *)v19 + 7);
      v68[8] = v36;
      v68[9] = *((void *)v19 + 9);
      sub_1C0AEFBB4();
      uint64_t v38 = *(int *)(v37 + 80);
      long long v39 = (char *)v68 + v38;
      uint64_t v40 = &v19[v38];
      *long long v39 = v19[v38];
      uint64_t v41 = (uint64_t)v68 + v38 + 8;
      long long v42 = *((_OWORD *)v40 + 2);
      *((_OWORD *)v39 + 2) = v42;
      uint64_t v43 = v42;
      long long v44 = **(void (***)(uint64_t, char *, uint64_t))(v42 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44(v41, v40 + 8, v43);
      uint64_t v45 = *((void *)v40 + 7);
      *((void *)v39 + 6) = *((void *)v40 + 6);
      *((void *)v39 + 7) = v45;
      uint64_t v65 = *((void *)v40 + 9);
      *((void *)v39 + 8) = *((void *)v40 + 8);
      *((void *)v39 + 9) = v65;
      *((void *)v39 + 10) = *((void *)v40 + 10);
      v39[88] = v40[88];
      *((void *)v39 + 12) = *((void *)v40 + 12);
      uint64_t v46 = (int *)type metadata accessor for GroupLayoutBindingContext();
      uint64_t v47 = v46[13];
      int v63 = &v40[v47];
      uint64_t v64 = &v39[v47];
      uint64_t v48 = sub_1C151787C();
      long long v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v49(v64, v63, v48);
      *(void *)&v39[v46[14]] = *(void *)&v40[v46[14]];
      *(void *)&v39[v46[15]] = *(void *)&v40[v46[15]];
      v39[v46[16]] = v40[v46[16]];
      *(void *)&v39[v46[17]] = *(void *)&v40[v46[17]];
      *(void *)&v39[v46[18]] = *(void *)&v40[v46[18]];
      *(void *)&v39[v46[19]] = *(void *)&v40[v46[19]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v29 = *(void *)v19;
      id v30 = *(id *)v19;
      uint64_t v31 = *((void *)v19 + 1);
      *uint64_t v68 = v29;
      v68[1] = v31;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    sub_1C0AEF7B8();
    uint64_t v51 = *(int *)(v50 + 48);
    uint64_t v52 = (_OWORD *)((char *)a1 + v51);
    uint64_t v53 = (_OWORD *)((char *)a2 + v51);
    long long v54 = v53[13];
    v52[12] = v53[12];
    v52[13] = v54;
    long long v55 = v53[15];
    v52[14] = v53[14];
    v52[15] = v55;
    long long v56 = v53[9];
    v52[8] = v53[8];
    v52[9] = v56;
    long long v57 = v53[11];
    v52[10] = v53[10];
    v52[11] = v57;
    long long v58 = v53[5];
    v52[4] = v53[4];
    v52[5] = v58;
    long long v59 = v53[7];
    v52[6] = v53[6];
    v52[7] = v59;
    long long v60 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v60;
    long long v61 = v53[3];
    v52[2] = v53[2];
    v52[3] = v61;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    long long v10 = *((_OWORD *)a2 + 4);
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 4) = v10;
    long long v11 = *((_OWORD *)a2 + 6);
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 6) = v11;
    uint64_t v12 = a2[15];
    a1[14] = a2[14];
    a1[15] = v12;
    a1[16] = a2[16];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
LABEL_12:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_1BFEA3344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_1BFEA34E4(a2, a3, a4, a5);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_1BFEA3808();
LABEL_7:
    id v22 = (void *)*v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1BFEA3A0C(v19, a6 & 1);
  unint64_t v25 = sub_1BFEA34E4(a2, a3, a4, a5);
  if ((v20 & 1) != (v26 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v16 = v25;
  id v22 = (void *)*v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  unint64_t v27 = (uint64_t *)(v22[6] + 32 * v16);
  *unint64_t v27 = a2;
  v27[1] = a3;
  v27[2] = a4;
  v27[3] = a5;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v28 = v22[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22[2] = v30;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BFEA34E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1520DBC();
  sub_1C151E77C();
  sub_1C1520DDC();
  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = sub_1C1520E0C();
  return sub_1BFEA35B0(a1, a2, a3, a4, v8);
}

unint64_t sub_1BFEA35B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      char v15 = (void *)(v14 + 32 * v8);
      uint64_t v17 = v15[2];
      uint64_t v16 = v15[3];
      BOOL v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_1C1520A9C() & 1) != 0)
      {
        if (v16)
        {
          if (a4)
          {
            BOOL v19 = v17 == a3 && v16 == a4;
            if (v19 || (sub_1C1520A9C() & 1) != 0) {
              return v8;
            }
          }
        }
        else if (!a4)
        {
          return v8;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

void *sub_1BFEA36BC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EB87A830, (uint64_t)&type metadata for GroupLayoutBindingContext.OrderedItemBinding, MEMORY[0x1E4FBBE00]);
      long long v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      long long v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BFEA3D90(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1BFEA3808()
{
  uint64_t v1 = v0;
  sub_1C10779D4(0, (unint64_t *)&qword_1EB8902E8, (void (*)(uint64_t))sub_1C0064BAC, (void (*)(void))sub_1C00749A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C15204DC();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 32 * v15);
    uint64_t v18 = v17[1];
    uint64_t v20 = v17[2];
    uint64_t v19 = v17[3];
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    uint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v23 = *v17;
    v23[1] = v18;
    v23[2] = v20;
    v23[3] = v19;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BFEA3A0C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C10779D4(0, (unint64_t *)&qword_1EB8902E8, (void (*)(uint64_t))sub_1C0064BAC, (void (*)(void))sub_1C00749A8);
  char v38 = a2;
  uint64_t v6 = sub_1C15204EC();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v35) {
          goto LABEL_35;
        }
        unint64_t v19 = v36[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v35) {
            goto LABEL_35;
          }
          unint64_t v19 = v36[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v35)
            {
LABEL_35:
              swift_release();
              uint64_t v3 = v2;
              if (v38)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v36[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_42;
                }
                if (v13 >= v35) {
                  goto LABEL_35;
                }
                unint64_t v19 = v36[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 32 * v17);
      uint64_t v22 = *v21;
      uint64_t v23 = v21[1];
      uint64_t v25 = v21[2];
      uint64_t v24 = v21[3];
      uint64_t v26 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      sub_1C1520DDC();
      if (v24)
      {
        swift_bridgeObjectRetain();
        sub_1C151E77C();
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_1C1520E0C();
      uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 32 * v14);
      *unint64_t v15 = v22;
      v15[1] = v23;
      void v15[2] = v25;
      _OWORD v15[3] = v24;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v26;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1BFEA3D90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFEA3E88()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFEA3E94()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

void *FeedHeadline.additionalFormatFeedItems.getter()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = objc_msgSend(v1, sel_sourceChannel);
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    uint64_t v5 = sub_1C151E62C();
    uint64_t v7 = v6;

    *(_OWORD *)&v40[16] = xmmword_1C152C800;
    memset(&v40[32], 0, 48);
    char v41 = 0;
    *(void *)&long long v36 = v5;
    *((void *)&v36 + 1) = v7;
    *(void *)&long long v37 = v3;
    BYTE8(v37) = 0;
    *(void *)&long long v39 = 0;
    *((void *)&v39 + 1) = 0xE000000000000000;
    *(void *)&long long v38 = 0;
    BYTE8(v38) = 0;
    *(void *)uint64_t v40 = 0;
    *(void *)&v40[8] = MEMORY[0x1E4FBC870];
    sub_1BFEA435C((uint64_t)&v36, (uint64_t)&v33);
    uint64_t v8 = sub_1BFEA4268(0, 1, 1, MEMORY[0x1E4FBC860]);
    unint64_t v10 = v8[2];
    unint64_t v9 = v8[3];
    if (v10 >= v9 >> 1) {
      uint64_t v8 = sub_1BFEA4268((void *)(v9 > 1), v10 + 1, 1, v8);
    }
    unint64_t v31 = &type metadata for FeedTag;
    unint64_t v32 = sub_1BFEA44FC();
    *(void *)&long long v30 = swift_allocObject();
    sub_1BFEA435C((uint64_t)&v33, v30 + 16);
    v8[2] = v10 + 1;
    sub_1BFC773DC(&v30, (uint64_t)&v8[5 * v10 + 4]);
    sub_1BFEA4290((uint64_t)&v33);
    swift_unknownObjectRelease();
    sub_1BFEA4290((uint64_t)&v36);
    uint64_t v1 = *(void **)(v0 + 40);
  }
  else
  {
    uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
  }
  if (objc_msgSend(v1, sel_respondsToSelector_, sel_parentIssue))
  {
    id v11 = objc_msgSend(v1, sel_parentIssue);
    if (v11)
    {
      unint64_t v12 = v11;
      id v13 = objc_allocWithZone(MEMORY[0x1E4F7E420]);
      id v14 = v12;
      id v15 = objc_msgSend(v13, sel_init);
      uint64_t v16 = qword_1F1B65EF0;
      id v17 = v14;
      id v18 = objc_msgSend(v17, sel_identifier);
      uint64_t v19 = sub_1C151E62C();
      uint64_t v21 = v20;

      *(void *)&long long v36 = v17;
      *((void *)&v36 + 1) = v19;
      *(void *)&long long v37 = v21;
      WORD4(v37) = 0;
      *(void *)&long long v38 = 0;
      BYTE8(v38) = 0;
      *(void *)&long long v39 = v16;
      *((void *)&v39 + 1) = v15;
      v40[0] = 0;
      *(_OWORD *)&v40[8] = xmmword_1C152C800;
      memset(&v40[24], 0, 40);
      *(void *)&v40[64] = 5;
      v40[72] = 0;
      sub_1C0187FB0((uint64_t)&v36);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1BFEA4268(0, v8[2] + 1, 1, v8);
      }
      unint64_t v23 = v8[2];
      unint64_t v22 = v8[3];
      if (v23 >= v22 >> 1) {
        uint64_t v8 = sub_1BFEA4268((void *)(v22 > 1), v23 + 1, 1, v8);
      }
      uint64_t v34 = &type metadata for FeedIssue;
      unint64_t v35 = sub_1BFEB031C();
      uint64_t v24 = (_OWORD *)swift_allocObject();
      *(void *)&long long v33 = v24;
      long long v25 = *(_OWORD *)&v40[48];
      v24[7] = *(_OWORD *)&v40[32];
      v24[8] = v25;
      *(_OWORD *)((char *)v24 + 137) = *(_OWORD *)&v40[57];
      long long v26 = v39;
      v24[3] = v38;
      v24[4] = v26;
      long long v27 = *(_OWORD *)&v40[16];
      v24[5] = *(_OWORD *)v40;
      v24[6] = v27;
      long long v28 = v37;
      v24[1] = v36;
      v24[2] = v28;
      v8[2] = v23 + 1;
      sub_1BFC773DC(&v33, (uint64_t)&v8[5 * v23 + 4]);

      sub_1C01880A4((uint64_t)&v36);
    }
  }
  return v8;
}

void *sub_1BFEA4268(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1BFEFCBCC(a1, a2, a3, a4, (void (*)(void))sub_1BFF01B5C, (unint64_t *)&qword_1EB873868);
}

uint64_t sub_1BFEA4290(uint64_t a1)
{
  return a1;
}

uint64_t destroy for FeedTag(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 88);
  if (result != 1)
  {
    uint64_t result = swift_bridgeObjectRelease();
    if (*(void *)(a1 + 120))
    {
      return __swift_destroy_boxed_opaque_existential_1(a1 + 96);
    }
  }
  return result;
}

uint64_t sub_1BFEA435C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for FeedTag(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    long long v8 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v8;
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    long long v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
  }
  else
  {
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = v7;
    uint64_t v10 = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    if (v10)
    {
      uint64_t v11 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = v10;
      *(void *)(a1 + 128) = v11;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8))(a1 + 96, a2 + 96, v10);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
    }
    else
    {
      long long v12 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v12;
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    }
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  }
  return a1;
}

unint64_t sub_1BFEA44FC()
{
  unint64_t result = qword_1EB87D1D0;
  if (!qword_1EB87D1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87D1D0);
  }
  return result;
}

void sub_1BFEA4550(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for FeedItemSupplementaryAttributes();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    unint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    v19[1] = a2;
    uint64_t v20 = a3;
    v19[0] = a1;
    while (v12 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_1C063FDFC(a3 + v14 + v15 * v12, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      char v16 = a1(v11);
      if (v3)
      {
        sub_1C0641CA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_1BFEA4850((uint64_t)v11, v22, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1BFEA4A90(0, *(void *)(v13 + 16) + 1, 1);
        }
        uint64_t v13 = v24;
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1BFEA4A90(v17 > 1, v18 + 1, 1);
          uint64_t v13 = v24;
        }
        *(void *)(v13 + 16) = v18 + 1;
        sub_1BFEA4850(v22, v13 + v14 + v18 * v15, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_1C0641CA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
      }
      if (v21 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BFEA47E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEA4850(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEA48B8()
{
  return sub_1BFEA48D8() & 1;
}

uint64_t sub_1BFEA48D8()
{
  uint64_t v0 = sub_1C151C1FC();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  FeedItemSupplementaryAttributes.kind.getter((uint64_t)v3);
  sub_1BFEA4A38();
  sub_1C151EACC();
  sub_1C151EACC();
  if (v6[2] == v6[0] && v6[3] == v6[1]) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1C1520A9C();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

unint64_t sub_1BFEA4A38()
{
  unint64_t result = qword_1EB8715D8;
  if (!qword_1EB8715D8)
  {
    sub_1C151C1FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8715D8);
  }
  return result;
}

uint64_t sub_1BFEA4A90(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1BFFFD508, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
  *uint64_t v3 = result;
  return result;
}

__n128 sub_1BFEA4AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v11 = *(int *)(v33 + 56);
  uint64_t v12 = *(void *)(v3 + v11);
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1BFEA34E4(0x6E6E614264656546, 0xEC00000064417265, a2, a3);
    if (v15)
    {
      char v16 = *(void **)(*(void *)(v12 + 56) + 8 * v14);
      swift_bridgeObjectRetain();
    }
    else
    {
      char v16 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C063FDFC(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v16 = sub_1BFEA4268(0, v16[2] + 1, 1, v16);
  }
  uint64_t v34 = a2;
  uint64_t v35 = a1;
  unint64_t v18 = v16[2];
  unint64_t v17 = v16[3];
  if (v18 >= v17 >> 1) {
    char v16 = sub_1BFEA4268((void *)(v17 > 1), v18 + 1, 1, v16);
  }
  v37.n128_u64[1] = v8;
  uint64_t v19 = v8;
  uint64_t v20 = sub_1BFEBC274(&qword_1EB873740, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  *(void *)&long long v38 = v20;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
  sub_1C063FDFC((uint64_t)v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  v16[2] = v18 + 1;
  sub_1BFC773DC(&v36, (uint64_t)&v16[5 * v18 + 4]);
  sub_1C0641CA0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v36 = *(void *)(v4 + v11);
  *(void *)(v4 + v11) = 0x8000000000000000;
  uint64_t v23 = v34;
  sub_1BFEA3344((uint64_t)v16, 0x6E6E614264656546, 0xEC00000064417265, v34, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v11) = v36;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((void *)&v39 + 1) = v19;
  uint64_t v40 = v20;
  uint64_t v24 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v38);
  sub_1C063FDFC(v35, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  strcpy((char *)&v36, "FeedBannerAd");
  BYTE13(v36) = 0;
  HIWORD(v36) = -5120;
  v37.n128_u64[0] = v23;
  v37.n128_u64[1] = a3;
  uint64_t v25 = *(int *)(v33 + 60);
  long long v26 = *(void **)(v4 + v25);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v26 = sub_1BFEA36BC(0, v26[2] + 1, 1, v26);
  }
  unint64_t v28 = v26[2];
  unint64_t v27 = v26[3];
  if (v28 >= v27 >> 1) {
    long long v26 = sub_1BFEA36BC((void *)(v27 > 1), v28 + 1, 1, v26);
  }
  void v26[2] = v28 + 1;
  unint64_t v29 = &v26[9 * v28];
  *((_OWORD *)v29 + 2) = v36;
  __n128 result = v37;
  long long v31 = v38;
  long long v32 = v39;
  v29[12] = v40;
  *((_OWORD *)v29 + 4) = v31;
  *((_OWORD *)v29 + 5) = v32;
  *((__n128 *)v29 + 3) = result;
  *(void *)(v4 + v25) = v26;
  return result;
}

__n128 sub_1BFEA4EC4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 240);
  char v5 = *(unsigned char *)(v3 + 248);
  char v6 = *(unsigned char *)(v3 + 249);
  long long v7 = *(_OWORD *)(v3 + 208);
  *(_OWORD *)a1 = *(_OWORD *)(v3 + 192);
  *(_OWORD *)(a1 + 16) = v7;
  __n128 result = *(__n128 *)(v3 + 224);
  *(__n128 *)(a1 + 32) = result;
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 57) = v6;
  return result;
}

uint64_t sub_1BFEA4F2C(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v26 = *(void *)(v3 + 16);
  if (v26)
  {
    uint64_t v25 = v3 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v24 = v3;
    while (v4 < *(void *)(v3 + 16))
    {
      unint64_t v30 = v4;
      char v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v7 = *v6;
      uint64_t v8 = v6[1];
      swift_retain_n();
      uint64_t v9 = swift_bridgeObjectRetain();
      uint64_t v10 = sub_1BFEA5574(v9);
      swift_bridgeObjectRelease();
      uint64_t v32 = v10;
      sub_1BFEA57E8(&v32, v7, v8, (uint64_t)&unk_1F1BAE250, (uint64_t (*)(uint64_t))sub_1C0636400, (void (*)(void *, uint64_t, uint64_t))sub_1BFEA58D0);
      uint64_t v29 = v5;
      if (v5) {
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v11 = v32;
      int64_t v12 = *(void *)(v32 + 16);
      if (v12)
      {
        uint64_t v28 = v8;
        uint64_t v37 = MEMORY[0x1E4FBC860];
        sub_1BFF01960(0, v12, 0);
        uint64_t v27 = v11;
        uint64_t v13 = v11 + 32;
        a1 = v37;
        do
        {
          sub_1BFEA5300(v13, (uint64_t)&v32, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
          sub_1BFC66384((uint64_t)&v33, (uint64_t)v31);
          sub_1BFC773DC(v31, (uint64_t)v34);
          sub_1BFEA5370((uint64_t)&v32, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5440);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BFF01960(0, *(void *)(a1 + 16) + 1, 1);
            a1 = v37;
          }
          unint64_t v15 = *(void *)(a1 + 16);
          unint64_t v14 = *(void *)(a1 + 24);
          if (v15 >= v14 >> 1) {
            sub_1BFF01960(v14 > 1, v15 + 1, 1);
          }
          uint64_t v16 = v35;
          uint64_t v17 = v36;
          uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
          __n128 v19 = MEMORY[0x1F4188790](v18);
          uint64_t v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v22 + 16))(v21, v19);
          sub_1BFEA7C90(v15, (uint64_t)v21, &v37, v16, v17);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
          a1 = v37;
          v13 += 48;
          --v12;
        }
        while (v12);
        swift_release();
        swift_release();
        uint64_t v3 = v24;
      }
      else
      {
        swift_release();
        swift_release();
        a1 = MEMORY[0x1E4FBC860];
      }
      unint64_t v4 = v30 + 1;
      uint64_t v5 = v29;
      if (v30 + 1 == v26)
      {
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    __break(1u);
LABEL_19:
    swift_release_n();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    return a1;
  }
  return result;
}

uint64_t sub_1BFEA5300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_1BFEA5370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1BFEA53D0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1BFEA5440(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1BFEA54A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1BFEA5510(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1BFEA5574(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = v2 + 32;
    uint64_t v7 = (_OWORD *)(MEMORY[0x1E4FBC860] + 32);
    while (1)
    {
      sub_1BFC66384(v6, (uint64_t)v24);
      *(void *)&v25[0] = v4;
      uint64_t result = sub_1BFC773DC(v24, (uint64_t)v25 + 8);
      long long v26 = v25[0];
      long long v27 = v25[1];
      long long v28 = v25[2];
      if (!v5)
      {
        unint64_t v9 = v3[3];
        if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_26;
        }
        uint64_t v10 = v1;
        int64_t v11 = v9 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1) {
          uint64_t v12 = 1;
        }
        else {
          uint64_t v12 = v11;
        }
        sub_1BFEA578C(0, &qword_1EB8710C8, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFEA5440);
        uint64_t v13 = (void *)swift_allocObject();
        uint64_t v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 48;
        v13[2] = v12;
        v13[3] = 2 * v14;
        unint64_t v15 = (unint64_t)(v13 + 4);
        uint64_t v16 = v3[3] >> 1;
        if (v3[2])
        {
          if (v13 != v3 || v15 >= (unint64_t)&v3[6 * v16 + 4]) {
            memmove(v13 + 4, v3 + 4, 48 * v16);
          }
          v3[2] = 0;
        }
        uint64_t v7 = (_OWORD *)(v15 + 48 * v16);
        uint64_t v5 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        uint64_t result = swift_release();
        uint64_t v3 = v13;
        uint64_t v1 = v10;
      }
      BOOL v18 = __OFSUB__(v5--, 1);
      if (v18) {
        break;
      }
      ++v4;
      long long v19 = v26;
      long long v20 = v28;
      v7[1] = v27;
      v7[2] = v20;
      *uint64_t v7 = v19;
      v7 += 3;
      v6 += 40;
      if (v1 == v4) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v5 = 0;
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v21 = v3[3];
  if (v21 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v22 = v21 >> 1;
  BOOL v18 = __OFSUB__(v22, v5);
  uint64_t v23 = v22 - v5;
  if (!v18)
  {
    v3[2] = v23;
    return (uint64_t)v3;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1BFEA578C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C152089C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1BFEA57E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), void (*a6)(void *, uint64_t, uint64_t))
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v12 = a5(v12);
  }
  uint64_t v13 = *(void *)(v12 + 16);
  v15[0] = v12 + 32;
  v15[1] = v13;
  swift_retain();
  a6(v15, a2, a3);
  swift_release();
  *a1 = v12;
  swift_release();
  return swift_release();
}

uint64_t sub_1BFEA58D0(void *a1, void (*a2)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a3)
{
  void (*v135)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v136;
  unsigned char v137[40];
  uint64_t v138;
  unsigned char v139[48];
  uint64_t v140;

  uint64_t v4 = v3;
  uint64_t v8 = swift_allocObject();
  uint64_t v135 = a2;
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v125 = a1;
  uint64_t v9 = a1[1];
  swift_retain_n();
  uint64_t v10 = sub_1C152086C();
  if (v10 >= v9)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (v9)
      {
        swift_retain();
        sub_1BFEA6338(0, v9, 1, v125, a2, a3);
      }
      swift_release();
      swift_release();
      return swift_release_n();
    }
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    swift_release_n();
    __break(1u);
LABEL_145:
    swift_release_n();
    __break(1u);
LABEL_146:
    swift_release_n();
    __break(1u);
LABEL_147:
    swift_release_n();
    __break(1u);
LABEL_148:
    swift_release_n();
    swift_release();
    uint64_t result = sub_1C15203FC();
    __break(1u);
    return result;
  }
  if (v9 >= 0) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v9 + 1;
  }
  if (v9 < -1) {
    goto LABEL_148;
  }
  uint64_t v133 = a3;
  uint64_t v120 = v10;
  if (v9 < 2)
  {
    uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
    int64_t v124 = (char *)(MEMORY[0x1E4FBC860] + 32);
    uint64_t v119 = MEMORY[0x1E4FBC860];
    if (v9 != 1)
    {
      unint64_t v17 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v16 = v125;
LABEL_105:
      if (v17 < 2)
      {
LABEL_116:
        swift_bridgeObjectRelease();
        *(void *)(v119 + 16) = 0;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        return swift_release_n();
      }
      uint64_t v107 = *v16;
      uint64_t v134 = *v16;
      while (1)
      {
        unint64_t v108 = v17 - 2;
        if (v17 < 2) {
          goto LABEL_135;
        }
        if (!v107) {
          goto LABEL_147;
        }
        unint64_t v109 = v14;
        uint64_t v110 = v14 + 32;
        uint64_t v111 = *(void *)&v14[16 * v108 + 32];
        uint64_t v112 = *(void *)&v110[16 * v17 - 8];
        uint64_t v113 = (char *)(v107 + 48 * v111);
        uint64_t v114 = (char *)(v107 + 48 * *(void *)&v110[16 * v17 - 16]);
        unint64_t v115 = v107 + 48 * v112;
        swift_retain();
        sub_1C062F148(v113, v114, v115, v124, v135, v133);
        if (v4)
        {
          uint64_t v106 = v119;
          goto LABEL_103;
        }
        if (v112 < v111) {
          goto LABEL_136;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v109 = sub_1C063604C((uint64_t)v109);
        }
        if (v108 >= *((void *)v109 + 2)) {
          goto LABEL_137;
        }
        unint64_t v116 = &v109[16 * v108 + 32];
        *(void *)unint64_t v116 = v111;
        *((void *)v116 + 1) = v112;
        unint64_t v117 = *((void *)v109 + 2);
        if (v17 > v117) {
          goto LABEL_138;
        }
        uint64_t v14 = v109;
        memmove(&v109[16 * v17 + 16], &v109[16 * v17 + 32], 16 * (v117 - v17));
        *((void *)v109 + 2) = v117 - 1;
        unint64_t v17 = v117 - 1;
        uint64_t v107 = v134;
        if (v117 <= 2) {
          goto LABEL_116;
        }
      }
    }
  }
  else
  {
    uint64_t v12 = v11 >> 1;
    sub_1BFEA5440(0, (unint64_t *)&qword_1EB871050, (void (*)(uint64_t))sub_1BFFFCF34);
    uint64_t v13 = sub_1C151ECCC();
    *(void *)(v13 + 16) = v12;
    uint64_t v119 = v13;
    int64_t v124 = (char *)(v13 + 32);
  }
  uint64_t v15 = 0;
  uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v16 = v125;
  while (1)
  {
    uint64_t v18 = v15;
    if (v15 + 1 >= v9)
    {
      uint64_t v123 = v15 + 1;
    }
    else
    {
      unint64_t v121 = v14;
      uint64_t v19 = *v16;
      long long v20 = (uint64_t *)(*v16 + 48 * (v15 + 1));
      unint64_t v21 = (uint64_t *)(*v16 + 48 * v15);
      uint64_t v22 = v9;
      uint64_t v23 = *v21;
      uint64_t v138 = *v20;
      sub_1BFC66384((uint64_t)(v20 + 1), (uint64_t)v139);
      uint64_t v136 = v23;
      sub_1BFC66384((uint64_t)(v21 + 1), (uint64_t)v137);
      v135((unsigned __int8 *)&v140, &v138, &v136);
      sub_1BFEA5370((uint64_t)&v136, (uint64_t)&qword_1EB871060, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5510);
      uint64_t v9 = v22;
      sub_1BFEA5370((uint64_t)&v138, (uint64_t)&qword_1EB871060, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5510);
      int v24 = v140;
      uint64_t v130 = v19;
      if (v18 + 2 >= v22)
      {
        uint64_t v26 = v18 + 2;
      }
      else
      {
        uint64_t v25 = v19 + 48 * v18 + 56;
        uint64_t v26 = v18 + 2;
        while (1)
        {
          uint64_t v27 = *(void *)(v25 - 8);
          uint64_t v138 = *(void *)(v25 + 40);
          sub_1BFC66384(v25 + 48, (uint64_t)v139);
          uint64_t v136 = v27;
          sub_1BFC66384(v25, (uint64_t)v137);
          v135((unsigned __int8 *)&v140, &v138, &v136);
          sub_1BFEA5370((uint64_t)&v136, (uint64_t)&qword_1EB871060, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5510);
          sub_1BFEA5370((uint64_t)&v138, (uint64_t)&qword_1EB871060, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5510);
          if (v24 != v140) {
            break;
          }
          ++v26;
          v25 += 48;
          if (v22 == v26)
          {
            uint64_t v9 = v22;
            uint64_t v26 = v22;
            goto LABEL_25;
          }
        }
        uint64_t v9 = v22;
      }
LABEL_25:
      uint64_t v16 = v125;
      uint64_t v123 = v26;
      if (v24)
      {
        if (v26 < v18) {
          goto LABEL_141;
        }
        if (v18 < v26)
        {
          long long v28 = (long long *)(v130 + 48 * v26 - 48);
          uint64_t v29 = (long long *)(v130 + 48 * v18);
          uint64_t v30 = v26;
          uint64_t v31 = v18;
          uint64_t v14 = v121;
          while (1)
          {
            if (v31 != --v30)
            {
              if (!v130) {
                goto LABEL_146;
              }
              long long v32 = *v29;
              long long v33 = v29[1];
              long long v34 = v29[2];
              long long v36 = v28[1];
              long long v35 = v28[2];
              *uint64_t v29 = *v28;
              v29[1] = v36;
              v29[2] = v35;
              v28[1] = v33;
              v28[2] = v34;
              long long *v28 = v32;
            }
            ++v31;
            v28 -= 3;
            v29 += 3;
            if (v31 >= v30) {
              goto LABEL_35;
            }
          }
        }
      }
      uint64_t v14 = v121;
    }
LABEL_35:
    if (v123 < v9)
    {
      if (__OFSUB__(v123, v18)) {
        goto LABEL_139;
      }
      if (v123 - v18 < v120)
      {
        if (__OFADD__(v18, v120)) {
          goto LABEL_142;
        }
        if (v18 + v120 >= v9) {
          uint64_t v37 = v9;
        }
        else {
          uint64_t v37 = v18 + v120;
        }
        if (v37 < v18) {
          goto LABEL_143;
        }
        uint64_t v131 = v18;
        uint64_t v38 = v123;
        if (v123 != v37)
        {
          uint64_t v126 = v4;
          uint64_t v128 = v37;
          int64_t v122 = v14;
          uint64_t v39 = 48 * v123 - 48;
          do
          {
            uint64_t v40 = v131;
            uint64_t v41 = v39;
            while (1)
            {
              long long v42 = (uint64_t *)(*v16 + v41);
              uint64_t v43 = *v42;
              long long v44 = v16;
              uint64_t v45 = (uint64_t)(v42 + 1);
              uint64_t v138 = v42[6];
              sub_1BFC66384((uint64_t)(v42 + 7), (uint64_t)v139);
              uint64_t v136 = v43;
              sub_1BFC66384(v45, (uint64_t)v137);
              v135((unsigned __int8 *)&v140, &v138, &v136);
              sub_1BFEA5370((uint64_t)&v136, (uint64_t)&qword_1EB871060, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5510);
              sub_1BFEA5370((uint64_t)&v138, (uint64_t)&qword_1EB871060, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5510);
              if (v140 != 1) {
                break;
              }
              if (!*v44) {
                goto LABEL_144;
              }
              uint64_t v16 = v44;
              uint64_t v46 = (long long *)(*v44 + v41);
              long long v48 = v46[4];
              long long v47 = v46[5];
              long long v49 = *v46;
              long long v51 = v46[2];
              long long v50 = v46[3];
              v46[4] = v46[1];
              v46[5] = v51;
              *uint64_t v46 = v50;
              v46[1] = v48;
              v46[2] = v47;
              void v46[3] = v49;
              v41 -= 48;
              if (v38 == ++v40) {
                goto LABEL_46;
              }
            }
            uint64_t v16 = v44;
LABEL_46:
            ++v38;
            v39 += 48;
          }
          while (v38 != v128);
          uint64_t v123 = v128;
          uint64_t v14 = v122;
          uint64_t v4 = v126;
        }
        uint64_t v18 = v131;
      }
    }
    if (v123 < v18)
    {
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
      goto LABEL_140;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_1C0634CC8(0, *((void *)v14 + 2) + 1, 1, v14);
    }
    unint64_t v53 = *((void *)v14 + 2);
    unint64_t v52 = *((void *)v14 + 3);
    unint64_t v17 = v53 + 1;
    if (v53 >= v52 >> 1) {
      uint64_t v14 = sub_1C0634CC8((char *)(v52 > 1), v53 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v17;
    long long v54 = v14 + 32;
    long long v55 = &v14[16 * v53 + 32];
    *(void *)long long v55 = v18;
    *((void *)v55 + 1) = v123;
    if (v53) {
      break;
    }
    unint64_t v17 = 1;
    uint64_t v16 = v125;
LABEL_15:
    uint64_t v9 = v16[1];
    uint64_t v15 = v123;
    if (v123 >= v9) {
      goto LABEL_105;
    }
  }
  uint64_t v16 = v125;
  while (1)
  {
    unint64_t v56 = v17 - 1;
    if (v17 >= 4)
    {
      long long v61 = &v54[16 * v17];
      uint64_t v62 = *((void *)v61 - 8);
      uint64_t v63 = *((void *)v61 - 7);
      BOOL v67 = __OFSUB__(v63, v62);
      uint64_t v64 = v63 - v62;
      if (v67) {
        goto LABEL_123;
      }
      uint64_t v66 = *((void *)v61 - 6);
      uint64_t v65 = *((void *)v61 - 5);
      BOOL v67 = __OFSUB__(v65, v66);
      uint64_t v59 = v65 - v66;
      char v60 = v67;
      if (v67) {
        goto LABEL_124;
      }
      unint64_t v68 = v17 - 2;
      long long v69 = &v54[16 * v17 - 32];
      uint64_t v71 = *(void *)v69;
      uint64_t v70 = *((void *)v69 + 1);
      BOOL v67 = __OFSUB__(v70, v71);
      uint64_t v72 = v70 - v71;
      if (v67) {
        goto LABEL_126;
      }
      BOOL v67 = __OFADD__(v59, v72);
      uint64_t v73 = v59 + v72;
      if (v67) {
        goto LABEL_129;
      }
      if (v73 >= v64)
      {
        char v91 = &v54[16 * v56];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v67 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v67) {
          goto LABEL_133;
        }
        BOOL v84 = v59 < v94;
        goto LABEL_92;
      }
    }
    else
    {
      if (v17 != 3)
      {
        uint64_t v85 = *((void *)v14 + 4);
        uint64_t v86 = *((void *)v14 + 5);
        BOOL v67 = __OFSUB__(v86, v85);
        uint64_t v78 = v86 - v85;
        char v79 = v67;
        goto LABEL_86;
      }
      uint64_t v58 = *((void *)v14 + 4);
      uint64_t v57 = *((void *)v14 + 5);
      BOOL v67 = __OFSUB__(v57, v58);
      uint64_t v59 = v57 - v58;
      char v60 = v67;
    }
    if (v60) {
      goto LABEL_125;
    }
    unint64_t v68 = v17 - 2;
    uint64_t v74 = &v54[16 * v17 - 32];
    uint64_t v76 = *(void *)v74;
    uint64_t v75 = *((void *)v74 + 1);
    BOOL v77 = __OFSUB__(v75, v76);
    uint64_t v78 = v75 - v76;
    char v79 = v77;
    if (v77) {
      goto LABEL_128;
    }
    uint64_t v80 = &v54[16 * v56];
    uint64_t v82 = *(void *)v80;
    uint64_t v81 = *((void *)v80 + 1);
    BOOL v67 = __OFSUB__(v81, v82);
    uint64_t v83 = v81 - v82;
    if (v67) {
      goto LABEL_131;
    }
    if (__OFADD__(v78, v83)) {
      goto LABEL_132;
    }
    if (v78 + v83 >= v59)
    {
      BOOL v84 = v59 < v83;
LABEL_92:
      if (v84) {
        unint64_t v56 = v68;
      }
      goto LABEL_94;
    }
LABEL_86:
    if (v79) {
      goto LABEL_127;
    }
    uint64_t v87 = &v54[16 * v56];
    uint64_t v89 = *(void *)v87;
    uint64_t v88 = *((void *)v87 + 1);
    BOOL v67 = __OFSUB__(v88, v89);
    uint64_t v90 = v88 - v89;
    if (v67) {
      goto LABEL_130;
    }
    if (v90 < v78) {
      goto LABEL_15;
    }
LABEL_94:
    unint64_t v95 = v56 - 1;
    if (v56 - 1 >= v17)
    {
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
    uint64_t v96 = *v16;
    if (!*v16) {
      goto LABEL_145;
    }
    uint64_t v97 = v4;
    uint64_t v98 = &v54[16 * v95];
    uint64_t v99 = v54;
    uint64_t v100 = *(void *)v98;
    double v101 = v99;
    unint64_t v102 = v56;
    char v103 = &v99[16 * v56];
    uint64_t v104 = *((void *)v103 + 1);
    uint64_t v129 = (char *)(v96 + 48 * *(void *)v103);
    uint64_t v132 = (char *)(v96 + 48 * *(void *)v98);
    unint64_t v127 = v96 + 48 * v104;
    swift_retain();
    sub_1C062F148(v132, v129, v127, v124, v135, v133);
    if (v97) {
      break;
    }
    if (v104 < v100) {
      goto LABEL_120;
    }
    if (v102 > *((void *)v14 + 2)) {
      goto LABEL_121;
    }
    *(void *)uint64_t v98 = v100;
    *(void *)&v101[16 * v95 + 8] = v104;
    unint64_t v105 = *((void *)v14 + 2);
    if (v102 >= v105) {
      goto LABEL_122;
    }
    long long v54 = v101;
    unint64_t v17 = v105 - 1;
    memmove(v103, v103 + 16, 16 * (v105 - 1 - v102));
    *((void *)v14 + 2) = v105 - 1;
    uint64_t v16 = v125;
    uint64_t v4 = 0;
    if (v105 <= 2) {
      goto LABEL_15;
    }
  }
  uint64_t v106 = v119;
LABEL_103:
  swift_bridgeObjectRelease();
  *(void *)(v106 + 16) = 0;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1BFEA6338(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *), uint64_t a6)
{
  void (*v24)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void v28[8];

  uint64_t v11 = swift_allocObject();
  int v24 = a5;
  *(void *)(v11 + 16) = a5;
  *(void *)(v11 + 24) = a6;
  if (a3 == a2)
  {
    swift_retain();
    swift_release();
  }
  else
  {
    v28[7] = a6;
    swift_retain();
    uint64_t v12 = 48 * a3;
    while (2)
    {
      uint64_t v13 = a1;
      uint64_t v23 = v12;
      do
      {
        uint64_t v14 = *a4 + v12;
        sub_1BFEA5300(v14, (uint64_t)&v27, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        sub_1BFEA5300(v14 - 48, (uint64_t)&v25, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void, uint64_t, uint64_t))sub_1BFEA5440);
        char v15 = sub_1BFEA6554(v27, (uint64_t)v28, v25, (uint64_t)&v26, v24);
        sub_1BFEA5370((uint64_t)&v25, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5440);
        sub_1BFEA5370((uint64_t)&v27, (uint64_t)&qword_1EB871050, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5440);
        if ((v15 & 1) == 0) {
          break;
        }
        if (!*a4)
        {
          uint64_t result = swift_release();
          __break(1u);
          return result;
        }
        uint64_t v16 = (long long *)(*a4 + v12);
        long long v18 = v16[1];
        long long v17 = v16[2];
        long long v19 = *v16;
        long long v20 = *(v16 - 2);
        *uint64_t v16 = *(v16 - 3);
        v16[1] = v20;
        v16[2] = *(v16 - 1);
        *(v16 - 3) = v19;
        *(v16 - 2) = v18;
        *(v16 - 1) = v17;
        v12 -= 48;
        ++v13;
      }
      while (a3 != v13);
      ++a3;
      uint64_t v12 = v23 + 48;
      if (a3 != a2) {
        continue;
      }
      break;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1BFEA6554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unsigned __int8 *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v12 = a1;
  sub_1BFC66384(a2, (uint64_t)&v13);
  uint64_t v10 = a3;
  sub_1BFC66384(a4, (uint64_t)&v11);
  a5(&v9, &v12, &v10);
  sub_1BFEA5370((uint64_t)&v10, (uint64_t)&qword_1EB871060, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5510);
  sub_1BFEA5370((uint64_t)&v12, (uint64_t)&qword_1EB871060, (uint64_t)sub_1BFFFCF34, (uint64_t (*)(void))sub_1BFEA5510);
  return v9;
}

uint64_t sub_1BFEA662C@<X0>(void *a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void *, void, void *))(v3 + 16))(*a1, a1 + 1, *a2, a2 + 1);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BFEA6674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (**a3)(unint64_t *, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>)
{
  uint64_t v11 = v10;
  int v40 = a8;
  int v42 = a5;
  uint64_t v47 = a4;
  uint64_t v43 = a3;
  uint64_t v41 = a9;
  sub_1BFEA8B60(0);
  MEMORY[0x1F4188790](v16 - 8);
  long long v18 = &v39[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v20 = v9;
  uint64_t v21 = *(void *)(v9 + *(int *)(v19 + 56));
  uint64_t v22 = *(void *)(v21 + 16);
  swift_bridgeObjectRetain();
  if (!v22) {
    goto LABEL_8;
  }
  uint64_t v45 = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v44 = a1;
  unint64_t v23 = sub_1BFEA34E4(0x6E6E614264656546, 0xEC00000064417265, a1, a2);
  if ((v24 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v25 = *(void *)(*(void *)(v21 + 56) + 8 * v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v25 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    a1 = v44;
    a6 = v45;
LABEL_8:
    sub_1C0000B6C();
    swift_allocError();
    *(_OWORD *)uint64_t v29 = xmmword_1C15EE9B0;
    *(void *)(v29 + 16) = a1;
    *(void *)(v29 + 24) = a2;
    *(void *)(v29 + 32) = v47;
    *(void *)(v29 + 40) = 1;
    *(void *)(v29 + 48) = a6;
    *(void *)(v29 + 56) = a7;
    *(unsigned char *)(v29 + 64) = 0;
LABEL_9:
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  uint64_t v26 = v20;
  uint64_t v27 = sub_1BFEA743C(v25, v45, a7);
  if (v11)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v30 = (void *)sub_1BFEA888C(v27);
  swift_bridgeObjectRelease();
  uint64_t v31 = v47;
  if (!v30) {
    goto LABEL_15;
  }
  if (!v30[2])
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    sub_1C0000B6C();
    swift_allocError();
    *(_OWORD *)uint64_t v33 = xmmword_1C15EE9B0;
    *(void *)(v33 + 16) = v44;
    *(void *)(v33 + 24) = a2;
    *(void *)(v33 + 32) = v31;
    goto LABEL_16;
  }
  sub_1BFEA8BDC(v30, v43, v47, v42 & 1, (uint64_t)v18);
  swift_bridgeObjectRelease();
  uint64_t v32 = type metadata accessor for FeedBannerAd();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v18, 1, v32) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1BFF1F584((uint64_t)v18, (uint64_t (*)(void))sub_1BFEA8B60);
    sub_1C0000B6C();
    swift_allocError();
    *(_OWORD *)uint64_t v33 = xmmword_1C15EE9B0;
    *(void *)(v33 + 16) = v44;
    *(void *)(v33 + 24) = a2;
    *(void *)(v33 + 32) = v47;
LABEL_16:
    *(void *)(v33 + 40) = 1;
    *(void *)(v33 + 48) = v45;
    *(void *)(v33 + 56) = a7;
    *(unsigned char *)(v33 + 64) = 0;
    goto LABEL_9;
  }
  uint64_t v34 = v41;
  uint64_t result = sub_1BFF23B0C((uint64_t)v18, v41, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  if ((*(unsigned char *)(v34 + *(int *)(v32 + 24) + 1) & 0x10) == 0)
  {
LABEL_20:
    if ((v40 & 1) == 0)
    {
      MEMORY[0x1F4188790](result);
      *(void *)&v39[-16] = v34;
      uint64_t v25 = sub_1BFEA6D0C((uint64_t)sub_1BFEA6F40, (uint64_t)&v39[-32], v25);
    }
    strcpy((char *)v46, "FeedBannerAd");
    BYTE5(v46[1]) = 0;
    HIWORD(v46[1]) = -5120;
    v46[2] = v44;
    void v46[3] = a2;
    sub_1BFEA6AC8(v46, v25);
    goto LABEL_5;
  }
  uint64_t v35 = *(int *)(v19 + 76);
  uint64_t v36 = *(void *)(v26 + v35);
  BOOL v37 = __OFADD__(v36, 1);
  uint64_t v38 = v36 + 1;
  if (!v37)
  {
    *(void *)(v26 + v35) = v38;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFEA6AC8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *a1;
  uint64_t v5 = a1[1];
  unint64_t v8 = a1[2];
  unint64_t v7 = a1[3];
  uint64_t v25 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v9 = *(int *)(v25 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v28[0] = *(void *)(v2 + v9);
  *(void *)(v2 + v9) = 0x8000000000000000;
  uint64_t v26 = v6;
  sub_1BFEA3344(a2, v6, v5, v8, v7, isUniquelyReferenced_nonNull_native);
  *(void *)(v2 + v9) = v28[0];
  swift_bridgeObjectRelease();
  uint64_t v27 = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v29 = MEMORY[0x1E4FBC860];
    sub_1BFF661B8(0, v11, 0);
    uint64_t v13 = a2 + 32;
    uint64_t v12 = v29;
    do
    {
      sub_1BFC66384(v13, (uint64_t)v28);
      __swift_project_boxed_opaque_existential_1(v28, v28[3]);
      uint64_t v14 = sub_1C151811C();
      uint64_t v16 = v15;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF661B8(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v29;
      }
      unint64_t v18 = *(void *)(v12 + 16);
      unint64_t v17 = *(void *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1BFF661B8(v17 > 1, v18 + 1, 1);
        uint64_t v12 = v29;
      }
      *(void *)(v12 + 16) = v18 + 1;
      uint64_t v19 = v12 + 16 * v18;
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v16;
      v13 += 40;
      --v11;
    }
    while (v11);
  }
  uint64_t v20 = sub_1BFEF4060(v12);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(int *)(v25 + 60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_1BFEA7700(v22, v26, v27, v8, v7, v20);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v3 + v21) = v23;
  return result;
}

uint64_t sub_1BFEA6D0C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v30 = MEMORY[0x1E4FBC860];
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    unint64_t v8 = (uint64_t (*)(long long *))result;
    unint64_t v9 = 0;
    uint64_t v10 = a3 + 32;
    char v24 = (uint64_t (*)(long long *))result;
    uint64_t v25 = a3;
    uint64_t v23 = v6;
    while (v9 < *(void *)(v4 + 16))
    {
      sub_1BFC66384(v10, (uint64_t)v29);
      uint64_t v5 = a2;
      char v11 = v8(v29);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
        swift_bridgeObjectRelease();
        swift_release();
        return v5;
      }
      if (v11)
      {
        sub_1BFC773DC(v29, (uint64_t)v26);
        uint64_t v12 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFF01960(0, *(void *)(v12 + 16) + 1, 1);
          uint64_t v12 = v30;
        }
        unint64_t v14 = *(void *)(v12 + 16);
        unint64_t v13 = *(void *)(v12 + 24);
        if (v14 >= v13 >> 1) {
          sub_1BFF01960(v13 > 1, v14 + 1, 1);
        }
        uint64_t v15 = v27;
        uint64_t v16 = v28;
        uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
        __n128 v18 = MEMORY[0x1F4188790](v17);
        uint64_t v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v21 + 16))(v20, v18);
        sub_1BFEA7C90(v14, (uint64_t)v20, &v30, v15, v16);
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
        unint64_t v8 = v24;
        uint64_t v4 = v25;
        uint64_t v6 = v23;
      }
      else
      {
        uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      }
      ++v9;
      v10 += 40;
      if (v6 == v9)
      {
        uint64_t v5 = v30;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1BFEA6F40(void *a1)
{
  return sub_1BFEA6F5C(a1) & 1;
}

uint64_t sub_1BFEA6F5C(void *a1)
{
  return sub_1BFEA6F7C(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_1BFEA6F7C(void *a1, void *a2)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (sub_1C151811C() == *a2 && v3 == a2[1])
  {
    swift_bridgeObjectRelease();
    char v6 = 0;
  }
  else
  {
    char v5 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

unsigned char *GroupLayoutBindingContext.peek(count:slotIdentifier:sorter:)(int64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v5;
  uint64_t v42 = a4;
  int64_t v46 = a1;
  uint64_t v9 = *(int *)(type metadata accessor for GroupLayoutBindingContext() + 60);
  uint64_t v47 = v4;
  uint64_t v10 = *(void *)&v4[v9];
  int64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v43 = v5;
    uint64_t v44 = a2;
    uint64_t v45 = a3;
    uint64_t v53 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFF01960(0, v11, 0);
    uint64_t v13 = v10 + 32;
    uint64_t v12 = v53;
    do
    {
      sub_1BFEA78F0(v13, (uint64_t)v48);
      sub_1BFC66384((uint64_t)&v49, (uint64_t)v50);
      sub_1BFEA73C8((uint64_t)v48);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFF01960(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v53;
      }
      unint64_t v15 = *(void *)(v12 + 16);
      unint64_t v14 = *(void *)(v12 + 24);
      if (v15 >= v14 >> 1) {
        sub_1BFF01960(v14 > 1, v15 + 1, 1);
      }
      uint64_t v16 = v51;
      uint64_t v17 = v52;
      uint64_t v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v50, v51);
      __n128 v19 = MEMORY[0x1F4188790](v18);
      uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v22 + 16))(v21, v19);
      sub_1BFEA7C90(v15, (uint64_t)v21, &v53, v16, v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      uint64_t v12 = v53;
      v13 += 72;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a2 = v44;
    a3 = v45;
    uint64_t v6 = v43;
  }
  uint64_t v23 = v47;
  uint64_t v24 = v6;
  uint64_t v25 = sub_1BFEA743C(v12, a2, a3);
  swift_bridgeObjectRelease();
  if (!v24)
  {
    uint64_t v27 = a2;
    int64_t v28 = *(void *)(v25 + 16);
    int64_t v29 = v46;
    if (v46 != 0x7FFFFFFFFFFFFFFFLL)
    {
      if (v28 < v46)
      {
        swift_bridgeObjectRelease();
        sub_1C0000B6C();
        swift_allocError();
        *(void *)uint64_t v30 = v29;
        *(void *)(v30 + 8) = v28;
        *(void *)(v30 + 16) = v27;
        *(void *)(v30 + 24) = a3;
        *(_OWORD *)(v30 + 32) = 0u;
        *(_OWORD *)(v30 + 48) = 0u;
        *(unsigned char *)(v30 + 64) = 2;
        swift_bridgeObjectRetain();
        swift_willThrow();
        return v23;
      }
      int64_t v28 = v46;
    }
    if ((*v23 & 1) == 0 && v42)
    {
      swift_retain();
      uint64_t v31 = sub_1BFEA4F2C(v25);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v25 = v31;
    }
    int64_t v32 = sub_1C0B823EC(v28, v25);
    uint64_t v34 = v33;
    uint64_t v36 = v35;
    unint64_t v38 = v37;
    if (v37)
    {
      sub_1C1520B6C();
      swift_unknownObjectRetain_n();
      uint64_t v39 = swift_dynamicCastClass();
      if (!v39)
      {
        swift_unknownObjectRelease();
        uint64_t v39 = MEMORY[0x1E4FBC860];
      }
      uint64_t v40 = *(void *)(v39 + 16);
      swift_release();
      if (__OFSUB__(v38 >> 1, v36))
      {
        __break(1u);
      }
      else if (v40 == (v38 >> 1) - v36)
      {
        uint64_t v23 = (unsigned char *)swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (!v23)
        {
          swift_unknownObjectRelease();
          return (unsigned char *)MEMORY[0x1E4FBC860];
        }
        return v23;
      }
      swift_unknownObjectRelease();
    }
    uint64_t v23 = (unsigned char *)sub_1BFEA86E8(v32, v34, v36, v38);
    swift_unknownObjectRelease();
  }
  return v23;
}

uint64_t sub_1BFEA73C8(uint64_t a1)
{
  return a1;
}

uint64_t destroy for GroupLayoutBindingContext.OrderedItemBinding(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
}

uint64_t sub_1BFEA743C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if (a3 && (a2 != 42 || a3 != 0xE100000000000000) && (sub_1C1520A9C() & 1) == 0)
  {
    uint64_t v8 = *(void *)(v3 + 72);
    uint64_t v9 = *(void *)(v8 + 16);
    swift_bridgeObjectRetain();
    if (v9)
    {
      unint64_t v10 = sub_1BFEF2D8C(a2, a3);
      if (v11)
      {
        uint64_t v12 = *(void *)(*(void *)(v8 + 56) + (v10 << 6) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = swift_bridgeObjectRetain();
        uint64_t v14 = sub_1BFEA79C8(v13, v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    if ((*(unsigned char *)(v4 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 64)) & 1) == 0)
    {
      sub_1C0000B6C();
      swift_allocError();
      *(void *)uint64_t v26 = a2;
      *(void *)(v26 + 8) = a3;
      *(_OWORD *)(v26 + 16) = 0u;
      *(_OWORD *)(v26 + 32) = 0u;
      *(_OWORD *)(v26 + 48) = 0u;
      *(unsigned char *)(v26 + 64) = 3;
      swift_willThrow();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v4 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 64)) == 1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C0636060(v15);
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1C06216AC(v16);
    swift_release();
    uint64_t v27 = MEMORY[0x1E4FBC860];
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v18; ++i)
      {
        uint64_t v20 = swift_bridgeObjectRetain();
        sub_1BFE72794(v20);
      }
      swift_bridgeObjectRelease_n();
      uint64_t v21 = v27;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = MEMORY[0x1E4FBC860];
    }
    uint64_t v22 = sub_1BFEF4060(v21);
    swift_bridgeObjectRelease();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1BFEA83A8(v23, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v24;
  }
  return a1;
}

uint64_t sub_1BFEA7700(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    for (uint64_t i = a1 + 32; ; i += 72)
    {
      sub_1BFEA78F0(i, (uint64_t)&v29);
      long long v13 = v30;
      BOOL v14 = (void)v29 == a2 && *((void *)&v29 + 1) == a3;
      if (!v14 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
      if (*((void *)&v13 + 1))
      {
        if (!a5 || v13 != __PAIR128__(a5, a4) && (sub_1C1520A9C() & 1) == 0) {
          break;
        }
      }
      else if (a5)
      {
        break;
      }
      __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
      uint64_t v15 = sub_1C151811C();
      char v17 = sub_1BFF896B4(v15, v16, a6);
      swift_bridgeObjectRelease();
      if (v17) {
        break;
      }
      sub_1BFEA73C8((uint64_t)&v29);
LABEL_4:
      if (!--v8) {
        return v34;
      }
    }
    long long v26 = v31;
    long long v27 = v32;
    uint64_t v28 = v33;
    long long v24 = v29;
    long long v25 = v30;
    uint64_t v18 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BFEA81DC(0, *(void *)(v18 + 16) + 1, 1);
      uint64_t v18 = v34;
    }
    unint64_t v20 = *(void *)(v18 + 16);
    unint64_t v19 = *(void *)(v18 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_1BFEA81DC(v19 > 1, v20 + 1, 1);
      uint64_t v18 = v34;
    }
    *(void *)(v18 + 16) = v20 + 1;
    uint64_t v21 = v18 + 72 * v20;
    *(_OWORD *)(v21 + 32) = v24;
    *(void *)(v21 + 96) = v28;
    *(_OWORD *)(v21 + 64) = v26;
    *(_OWORD *)(v21 + 80) = v27;
    *(_OWORD *)(v21 + 48) = v25;
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1BFEA78F0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for GroupLayoutBindingContext.OrderedItemBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = a2 + 32;
  long long v6 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 32, v5, v7);
  return a1;
}

uint64_t sub_1BFEA79C8(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v38 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v32 = a1 + 32;
    uint64_t v7 = a2 + 56;
    while (1)
    {
      sub_1BFC66384(v32 + 40 * v6, (uint64_t)&v36);
      __swift_project_boxed_opaque_existential_1(&v36, v37);
      uint64_t v8 = sub_1C151811C();
      uint64_t v10 = v9;
      if (*(void *)(a2 + 16))
      {
        uint64_t v11 = v8;
        sub_1C1520DBC();
        sub_1C151E77C();
        uint64_t v12 = sub_1C1520E0C();
        uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v14 = v12 & ~v13;
        if ((*(void *)(v7 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
        {
          uint64_t v15 = *(void *)(a2 + 48);
          uint64_t v16 = (void *)(v15 + 16 * v14);
          BOOL v17 = *v16 == v11 && v16[1] == v10;
          if (v17 || (sub_1C1520A9C() & 1) != 0)
          {
LABEL_12:
            swift_bridgeObjectRelease();
            sub_1BFC773DC(&v36, (uint64_t)v33);
            uint64_t v18 = v38;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BFF01960(0, *(void *)(v18 + 16) + 1, 1);
              uint64_t v18 = v38;
            }
            unint64_t v20 = *(void *)(v18 + 16);
            unint64_t v19 = *(void *)(v18 + 24);
            if (v20 >= v19 >> 1) {
              sub_1BFF01960(v19 > 1, v20 + 1, 1);
            }
            uint64_t v21 = v34;
            uint64_t v22 = v35;
            uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
            __n128 v24 = MEMORY[0x1F4188790](v23);
            long long v26 = (char *)&v31 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, __n128))(v27 + 16))(v26, v24);
            sub_1BFEA7C90(v20, (uint64_t)v26, &v38, v21, v22);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
            goto LABEL_4;
          }
          uint64_t v28 = ~v13;
          while (1)
          {
            unint64_t v14 = (v14 + 1) & v28;
            if (((*(void *)(v7 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
              break;
            }
            long long v29 = (void *)(v15 + 16 * v14);
            BOOL v30 = *v29 == v11 && v29[1] == v10;
            if (v30 || (sub_1C1520A9C() & 1) != 0) {
              goto LABEL_12;
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
LABEL_4:
      if (++v6 == v4) {
        return v38;
      }
    }
  }
  return result;
}

uint64_t sub_1BFEA7C90(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1BFC773DC(&v12, v10 + 40 * a1 + 32);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedBannerAd(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C151DBAC();
    long long v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    uint64_t v16 = a3[8];
    BOOL v17 = (uint64_t *)((char *)v4 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    unint64_t v19 = v18[1];
    if (v19 >= 0x11)
    {
      *BOOL v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)BOOL v17 = *(_OWORD *)v18;
    }
  }
  return v4;
}

int64_t sub_1BFEA7E74(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFEA7EB8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1C05F4730();
  uint64_t result = sub_1C152050C();
  uint64_t v9 = result;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  uint64_t v37 = v4;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v36) {
        return v9;
      }
      unint64_t v16 = v35[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v36) {
          return v9;
        }
        unint64_t v16 = v35[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v36) {
            return v9;
          }
          unint64_t v16 = v35[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v36) {
              return v9;
            }
            unint64_t v16 = v35[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v36) {
                  return v9;
                }
                unint64_t v16 = v35[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = *(void *)(v4 + 56) + (v14 << 6);
    uint64_t v22 = *(void *)v21;
    long long v39 = *(_OWORD *)(v21 + 24);
    long long v40 = *(_OWORD *)(v21 + 8);
    long long v38 = *(_OWORD *)(v21 + 40);
    uint64_t v23 = *(void *)(v21 + 56);
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v24 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v30 = v26 == v29;
        if (v26 == v29) {
          unint64_t v26 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v26);
      }
      while (v31 == -1);
      unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
    }
    *(void *)(v12 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    uint64_t v32 = (void *)(*(void *)(v9 + 48) + 16 * v27);
    *uint64_t v32 = v20;
    v32[1] = v19;
    unint64_t v33 = *(void *)(v9 + 56) + (v27 << 6);
    *(void *)unint64_t v33 = v22;
    *(_OWORD *)(v33 + 8) = v40;
    *(_OWORD *)(v33 + 24) = v39;
    *(_OWORD *)(v33 + 40) = v38;
    *(void *)(v33 + 56) = v23;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v37;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BFEA81DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFEA81FC(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BFEA81FC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EB87A830, (uint64_t)&type metadata for GroupLayoutBindingContext.OrderedItemBinding, MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8]) {
      memmove(v12, v13, 72 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[72 * v8] || v12 >= &v13[72 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFEA83A8(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v38 = MEMORY[0x1E4FBC860];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = 0;
    uint64_t v32 = a1 + 32;
    uint64_t v7 = a2 + 56;
    while (1)
    {
      sub_1BFC66384(v32 + 40 * v6, (uint64_t)&v36);
      __swift_project_boxed_opaque_existential_1(&v36, v37);
      uint64_t v8 = sub_1C151811C();
      uint64_t v10 = v9;
      if (!*(void *)(a2 + 16)) {
        goto LABEL_20;
      }
      uint64_t v11 = v8;
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t v12 = sub_1C1520E0C();
      uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v14 = v12 & ~v13;
      if (((*(void *)(v7 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_20;
      }
      uint64_t v15 = *(void *)(a2 + 48);
      unint64_t v16 = (void *)(v15 + 16 * v14);
      BOOL v17 = *v16 == v11 && v16[1] == v10;
      if (!v17 && (sub_1C1520A9C() & 1) == 0) {
        break;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
LABEL_4:
      if (++v6 == v4) {
        return v38;
      }
    }
    uint64_t v18 = ~v13;
    while (1)
    {
      unint64_t v14 = (v14 + 1) & v18;
      if (((*(void *)(v7 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        break;
      }
      uint64_t v19 = (void *)(v15 + 16 * v14);
      BOOL v20 = *v19 == v11 && v19[1] == v10;
      if (v20 || (sub_1C1520A9C() & 1) != 0) {
        goto LABEL_3;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease();
    sub_1BFC773DC(&v36, (uint64_t)v33);
    uint64_t v21 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BFF01960(0, *(void *)(v21 + 16) + 1, 1);
      uint64_t v21 = v38;
    }
    unint64_t v23 = *(void *)(v21 + 16);
    unint64_t v22 = *(void *)(v21 + 24);
    if (v23 >= v22 >> 1) {
      sub_1BFF01960(v22 > 1, v23 + 1, 1);
    }
    uint64_t v24 = v34;
    uint64_t v25 = v35;
    uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v33, v34);
    __n128 v27 = MEMORY[0x1F4188790](v26);
    unint64_t v29 = (char *)&v31 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v30 + 16))(v29, v27);
    sub_1BFEA7C90(v23, (uint64_t)v29, &v38, v24, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    goto LABEL_4;
  }
  return result;
}

uint64_t initializeWithCopy for FeedGap(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = (void *)(a2 + 40);
  unint64_t v6 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v6 >= 0x11)
  {
    *(void *)(a1 + 40) = *v5;
    *(void *)(a1 + 48) = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v5;
  }
  return a1;
}

uint64_t sub_1BFEA86E8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 40 * a3;
        if (v10 < (unint64_t)&v8[5 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 40 * v5) {
          goto LABEL_17;
        }
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB873868);
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      sub_1BFF01B5C();
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 40);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFEA888C(uint64_t a1)
{
  sub_1BFEA8B60(0);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FeedBannerAd();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20 - v10;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  sub_1BFEA8B94(0, v12, 0);
  if (!v12) {
    return v23;
  }
  uint64_t v13 = a1 + 32;
  uint64_t v21 = v5;
  while (1)
  {
    sub_1BFC66384(v13, (uint64_t)v22);
    sub_1BFFFCF34();
    int v14 = swift_dynamicCast();
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    if (!v14) {
      break;
    }
    v15(v4, 0, 1, v5);
    sub_1BFF23B0C((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    sub_1BFF23B0C((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    uint64_t v16 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BFEA8B94(0, *(void *)(v16 + 16) + 1, 1);
      uint64_t v16 = v23;
    }
    unint64_t v18 = *(void *)(v16 + 16);
    unint64_t v17 = *(void *)(v16 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_1BFEA8B94(v17 > 1, v18 + 1, 1);
      uint64_t v16 = v23;
    }
    *(void *)(v16 + 16) = v18 + 1;
    sub_1BFF23B0C((uint64_t)v8, v16+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v18, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    v13 += 40;
    --v12;
    uint64_t v5 = v21;
    if (!v12) {
      return v16;
    }
  }
  v15(v4, 1, 1, v5);
  swift_release();
  sub_1BFF1F584((uint64_t)v4, (uint64_t (*)(void))sub_1BFEA8B60);
  return 0;
}

void sub_1BFEA8B60(uint64_t a1)
{
}

uint64_t sub_1BFEA8B94(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1BFFFD940, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  *uint64_t v3 = result;
  return result;
}

void sub_1BFEA8BDC(void *a1@<X0>, void (**a2)(unint64_t *, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v55 = a4;
  uint64_t v57 = a3;
  uint64_t v58 = a2;
  unint64_t v56 = a1;
  uint64_t v7 = (int *)type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEA8B60(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v52 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEA9DA4(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v51 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v49 - v14;
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v49 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v49 - v20;
  uint64_t v22 = type metadata accessor for FeedBannerAd();
  uint64_t v54 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  __n128 v27 = (char *)&v49 - v26;
  uint64_t v28 = v7[19];
  uint64_t v29 = *(void *)(v5 + v28);
  if (v29 < *(void *)(v5 + v7[17]))
  {
    uint64_t v50 = v22;
    sub_1BFEA93F4(v56, v57 | 0x1000, v58, 0, 1, v55 & 1, (uint64_t)v21);
    sub_1BFEA9BA4(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v21, 1, v30) != 1)
    {
      swift_bridgeObjectRelease();
      sub_1BFF23B0C((uint64_t)v21, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      sub_1BFF23B0C((uint64_t)v24, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      sub_1BFF23B0C((uint64_t)v27, a5, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(a5, 0, 1, v50);
      return;
    }
    sub_1BFF1F584((uint64_t)v21, (uint64_t (*)(void))sub_1BFEA9DA4);
    uint64_t v29 = *(void *)(v5 + v28);
    uint64_t v22 = v50;
  }
  uint64_t v31 = *(void *)(v5 + v7[18]);
  BOOL v32 = __OFSUB__(v31, v29);
  uint64_t v33 = v31 - v29;
  if (v32)
  {
    __break(1u);
  }
  else if (v33 < 1)
  {
    uint64_t v50 = a5;
    sub_1BFEA93F4(v56, v57, v58, 4096, 0, v55 & 1, (uint64_t)v15);
    sub_1BFEA9BA4(0);
    uint64_t v38 = v37;
    long long v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48);
    int v40 = v39(v15, 1, v37);
    uint64_t v41 = v54;
    if (v40 == 1)
    {
      sub_1BFF1F584((uint64_t)v15, (uint64_t (*)(void))sub_1BFEA9DA4);
      uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
      uint64_t v43 = v52;
      v42(v52, 1, 1, v22);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v43 = v52;
      sub_1BFF23B0C((uint64_t)v15, v52, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
      v42(v43, 0, 1, v22);
    }
    uint64_t v44 = v53;
    sub_1BFF1EDE8(v5, v53, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v43, 1, v22) == 1)
    {
      uint64_t v45 = v51;
      sub_1BFEA93F4(v56, v57, v58, 0, 1, v55 & 1, v51);
      if (v39((char *)v45, 1, v38) == 1)
      {
        sub_1BFF1F584(v45, (uint64_t (*)(void))sub_1BFEA9DA4);
        uint64_t v46 = 1;
        uint64_t v47 = v50;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v47 = v50;
        sub_1BFF23B0C(v45, v50, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
        uint64_t v46 = 0;
      }
      v42(v47, v46, 1, v22);
      sub_1BFF1F584(v44, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      sub_1BFF1F584(v43, (uint64_t (*)(void))sub_1BFEA8B60);
    }
    else
    {
      sub_1BFF1F584(v44, (uint64_t (*)(void))type metadata accessor for GroupLayoutBindingContext);
      uint64_t v48 = v50;
      sub_1BFF23B0C(v43, v50, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      v42(v48, 0, 1, v22);
    }
  }
  else
  {
    sub_1BFEA93F4(v56, v57, v58, 0, 1, v55 & 1, (uint64_t)v18);
    sub_1BFEA9BA4(0);
    int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v18, 1, v34);
    uint64_t v36 = v54;
    if (v35 == 1)
    {
      sub_1BFF1F584((uint64_t)v18, (uint64_t (*)(void))sub_1BFEA9DA4);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(a5, 1, 1, v22);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BFF23B0C((uint64_t)v18, a5, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(a5, 0, 1, v22);
    }
  }
}

void sub_1BFEA92D8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEA933C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1BFEA92D8(255, a4, a5, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v9) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FeedBannerAd(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C12B201C);
}

uint64_t sub_1BFEA93F4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (**a3)(unint64_t *, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v67 = a4;
  int v63 = a6;
  int v69 = a5;
  uint64_t v70 = a3;
  sub_1BFEA9CA8(0, &qword_1EB873750, (void (*)(uint64_t))type metadata accessor for FeedBannerAd, &qword_1EB879CD8, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v60 = (unint64_t)&v60 - v11;
  uint64_t v12 = type metadata accessor for FeedBannerAd();
  uint64_t v66 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v62 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v60 - v15;
  sub_1BFEA54A8(0, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v65 = (char *)&v60 - v20;
  sub_1BFEA9C50(0, (unint64_t *)&unk_1EB87A060, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (unint64_t *)((char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (unint64_t *)((char *)&v60 - v25);
  if (!a1[2])
  {
    sub_1BFEA9BA4(0);
    BOOL v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
    return v32(a7, 1, 1, v31);
  }
  unint64_t v27 = a1[2];
  char v28 = *(unsigned char *)v68;
  uint64_t v61 = a7;
  if ((v28 & 1) != 0 || !v70)
  {
    uint64_t v30 = swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    uint64_t v29 = sub_1C0624188(a1);
    swift_release();
    uint64_t v30 = v29;
    unint64_t v27 = *(void *)(v29 + 16);
  }
  uint64_t v70 = (void (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v34 = (unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v19 + 48);
  v69 |= v67 == 0;
  unint64_t v68 = (unint64_t *)v30;
  swift_bridgeObjectRetain();
  unint64_t v36 = 0;
  unint64_t v64 = v27;
  while (1)
  {
    if (v36 == v27)
    {
      uint64_t v37 = 1;
      unint64_t v36 = v27;
    }
    else
    {
      if (v36 >= v68[2])
      {
        __break(1u);
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v38 = (uint64_t)&v65[*(int *)(v18 + 48)];
      sub_1BFF1EDE8((uint64_t)v68+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(void *)(v66 + 72) * v36, v38, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      uint64_t v39 = (uint64_t)v23 + *(int *)(v18 + 48);
      *uint64_t v23 = v36;
      sub_1BFF23B0C(v38, v39, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      uint64_t v37 = 0;
      ++v36;
      unint64_t v27 = v64;
    }
    (*v70)(v23, v37, 1, v18);
    sub_1BFEA9BE0((uint64_t)v23, (uint64_t)v26, (unint64_t *)&unk_1EB87A060, &qword_1EB87A058, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
    if ((*v34)(v26, 1, v18) == 1) {
      break;
    }
    unint64_t v40 = *v26;
    sub_1BFF23B0C((uint64_t)v26 + *(int *)(v18 + 48), (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    uint64_t v41 = *(void *)&v16[*(int *)(v12 + 24)];
    if (v69)
    {
      BOOL v42 = 0;
      if ((a2 & ~v41) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      BOOL v42 = (v67 & ~v41) == 0;
      if ((a2 & ~v41) != 0) {
        goto LABEL_10;
      }
    }
    if (!v42)
    {
      uint64_t v43 = v68;
      swift_bridgeObjectRelease();
      uint64_t v71 = v43;
      uint64_t v44 = v62;
      sub_1C0377E9C(v40, v62);
      sub_1BFF1F584((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      sub_1BFEA9BA4(0);
      uint64_t v46 = v45;
      uint64_t v47 = *(int *)(v45 + 48);
      uint64_t v48 = v44;
      uint64_t v49 = v61;
      sub_1BFF23B0C(v48, v61, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      *(void *)(v49 + v47) = v71;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v49, 0, 1, v46);
    }
LABEL_10:
    sub_1BFF1F584((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  }
  uint64_t v23 = v68;
  swift_bridgeObjectRelease();
  if (v63)
  {
    swift_bridgeObjectRelease();
    sub_1BFEA9BA4(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v61, 1, 1, v50);
  }
  uint64_t v18 = v61;
  if (!v27) {
    goto LABEL_35;
  }
  unint64_t v51 = v68[2];
  unint64_t v36 = v60;
  if (!v51)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v23 = (unint64_t *)((char *)v68
                           + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80)));
  sub_1BFF1EDE8((uint64_t)v23, v60, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  if (v51 < v64)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    unint64_t v58 = (2 * v35) | 1;
    uint64_t v59 = (uint64_t)v68;
    swift_bridgeObjectRelease();
    uint64_t v54 = sub_1C00B1F48(v59, (uint64_t)v23, 1, v58);
    goto LABEL_32;
  }
  sub_1C1520B6C();
  swift_unknownObjectRetain_n();
  uint64_t v52 = swift_dynamicCastClass();
  if (!v52)
  {
    swift_bridgeObjectRelease();
    uint64_t v52 = MEMORY[0x1E4FBC860];
  }
  uint64_t v53 = *(void *)(v52 + 16);
  swift_release();
  unint64_t v35 = v64;
  if (v53 != v64 - 1) {
    goto LABEL_38;
  }
  uint64_t v54 = swift_dynamicCastClass();
  if (!v54)
  {
    swift_bridgeObjectRelease();
    uint64_t v54 = MEMORY[0x1E4FBC860];
  }
LABEL_32:
  swift_bridgeObjectRelease();
  sub_1BFEA9BA4(0);
  uint64_t v56 = v55;
  uint64_t v57 = *(int *)(v55 + 48);
  sub_1BFF23B0C(v36, v18, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  *(void *)(v18 + v57) = v54;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v18, 0, 1, v56);
}

uint64_t getEnumTagSinglePayload for FeedBannerAd(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C12B1F6C);
}

void sub_1BFEA9BA4(uint64_t a1)
{
}

uint64_t sub_1BFEA9BE0(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_1BFEA9C50(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_1BFEA9C50(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1BFEA54A8(255, a3, a4);
    unint64_t v5 = sub_1C151FD8C();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEA9CA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_1BFEA92D8(255, a4, a5, MEMORY[0x1E4FBB320]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v9) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1BFEA9D48(unint64_t a1)
{
  return sub_1BFEA9D5C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1BFEA9D5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB87A660, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAd, (uint64_t (*)(void))type metadata accessor for FeedBannerAd, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
}

void sub_1BFEA9DA4(uint64_t a1)
{
}

BOOL sub_1BFEA9DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BFF922B4(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_1BFEA9DE4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) == 0)
  {
    unint64_t v8 = a2 + 1;
    long long v9 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v9 - 8);
    swift_retain();
    v11(a1 + 8, v8, v10);
    int v63 = a3;
    unint64_t v64 = a2;
    uint64_t v12 = a3[6];
    uint64_t v13 = a1 + v12;
    uint64_t v14 = (uint64_t)a2 + v12;
    uint64_t v15 = sub_1C151772C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = (int *)type metadata accessor for GroupLayoutContext();
    uint64_t v17 = v16[5];
    uint64_t v18 = v13 + v17;
    uint64_t v19 = v14 + v17;
    uint64_t v20 = sub_1C151757C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = v16[6];
    uint64_t v22 = v13 + v21;
    uint64_t v23 = v14 + v21;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)(v14 + v21);
    *(unsigned char *)(v22 + 16) = *(unsigned char *)(v14 + v21 + 16);
    *(_WORD *)(v22 + 17) = *(_WORD *)(v14 + v21 + 17);
    *(unsigned char *)(v22 + 19) = *(unsigned char *)(v14 + v21 + 19);
    *(_DWORD *)(v22 + 20) = *(_DWORD *)(v14 + v21 + 20);
    unint64_t v24 = *(void *)(v14 + v21 + 24);
    if (v24 >= 2) {
      unint64_t v24 = swift_bridgeObjectRetain();
    }
    *(void *)(v22 + 24) = v24;
    uint64_t v25 = type metadata accessor for FeedLayoutSolverOptions(0);
    uint64_t v26 = *(int *)(v25 + 36);
    __dst = (void *)(v22 + v26);
    unint64_t v27 = (const void *)(v23 + v26);
    uint64_t v28 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890DB0, type metadata accessor for FeedLayoutSolverOptions.PluginOptions, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = sub_1C151B62C();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v27, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(void *)(v22 + *(int *)(v25 + 40)) = *(void *)(v23 + *(int *)(v25 + 40));
    *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
    *(void *)(v13 + v16[8]) = *(void *)(v14 + v16[8]);
    *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
    *(void *)(v13 + v16[10]) = *(void *)(v14 + v16[10]);
    *(unsigned char *)(v13 + v16[11]) = *(unsigned char *)(v14 + v16[11]);
    *(void *)(v13 + v16[12]) = *(void *)(v14 + v16[12]);
    uint64_t v32 = v63[8];
    *(void *)(a1 + v63[7]) = *(uint64_t *)((char *)v64 + v63[7]);
    uint64_t v33 = a1 + v32;
    uint64_t v34 = (uint64_t)v64 + v32;
    uint64_t v35 = *(uint64_t *)((char *)v64 + v32 + 8);
    *(void *)uint64_t v33 = *(uint64_t *)((char *)v64 + v32);
    *(void *)(v33 + 8) = v35;
    uint64_t v36 = *(uint64_t *)((char *)v64 + v32 + 24);
    *(void *)(v33 + 16) = *(uint64_t *)((char *)v64 + v32 + 16);
    *(void *)(v33 + 24) = v36;
    uint64_t v37 = *(uint64_t *)((char *)v64 + v32 + 40);
    *(void *)(v33 + 32) = *(uint64_t *)((char *)v64 + v32 + 32);
    *(void *)(v33 + 40) = v37;
    *(unsigned char *)(v33 + 48) = *((unsigned char *)v64 + v32 + 48);
    *(void *)(v33 + 56) = *(uint64_t *)((char *)v64 + v32 + 56);
    unint64_t v58 = (char *)v64 + v32 + 64;
    __dsta = (_OWORD *)(a1 + v32 + 64);
    unint64_t v38 = *(uint64_t *)((char *)v64 + v32 + 72);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v38 >= 2)
    {
      unint64_t v40 = __dsta;
      if (v38 != 2)
      {
        *(unsigned char *)(v33 + 64) = *v58;
        *(void *)(v33 + 72) = v38;
        swift_bridgeObjectRetain();
LABEL_14:
        uint64_t v41 = *(void *)(v34 + 88);
        *(void *)(v33 + 80) = *(void *)(v34 + 80);
        *(void *)(v33 + 88) = v41;
        uint64_t v42 = *(void *)(v34 + 104);
        *(void *)(v33 + 96) = *(void *)(v34 + 96);
        *(void *)(v33 + 104) = v42;
        uint64_t v43 = *(void *)(v34 + 120);
        *(void *)(v33 + 112) = *(void *)(v34 + 112);
        *(void *)(v33 + 120) = v43;
        *(unsigned char *)(v33 + 128) = *(unsigned char *)(v34 + 128);
        *(void *)(v33 + 136) = *(void *)(v34 + 136);
        uint64_t v44 = v63[10];
        *(void *)(a1 + v63[9]) = *(uint64_t *)((char *)v64 + v63[9]);
        *(void *)(a1 + v44) = *(uint64_t *)((char *)v64 + v44);
        uint64_t v45 = v63[12];
        *(void *)(a1 + v63[11]) = *(uint64_t *)((char *)v64 + v63[11]);
        uint64_t v59 = a1 + v45;
        __dstb = (char *)v64 + v45;
        long long v46 = *(_OWORD *)((char *)v64 + v45 + 24);
        *(_OWORD *)(a1 + v45 + 24) = v46;
        uint64_t v57 = v46;
        uint64_t v56 = **(void (***)(uint64_t, void *, uint64_t))(v46 - 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        v56(v59, __dstb, v57);
        uint64_t v47 = v63[14];
        *(unsigned char *)(a1 + v63[13]) = *((unsigned char *)v64 + v63[13]);
        long long v48 = *(_OWORD *)((char *)v64 + v47 + 24);
        *(_OWORD *)(a1 + v47 + 24) = v48;
        (**(void (***)(void))(v48 - 8))();
        uint64_t v49 = v63[15];
        uint64_t v50 = v63[16];
        unint64_t v51 = (void *)(a1 + v49);
        uint64_t v52 = (uint64_t *)((char *)v64 + v49);
        uint64_t v53 = v52[1];
        *unint64_t v51 = *v52;
        v51[1] = v53;
        uint64_t v54 = v52[3];
        v51[2] = v52[2];
        v51[3] = v54;
        *(void *)(a1 + v50) = *(uint64_t *)((char *)v64 + v50);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return a1;
      }
      long long v39 = *(_OWORD *)v58;
    }
    else
    {
      long long v39 = *(_OWORD *)v58;
      unint64_t v40 = __dsta;
    }
    *unint64_t v40 = v39;
    goto LABEL_14;
  }
  a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return a1;
}

void sub_1BFEAA3AC(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(*(void *)v1 + 144);
}

uint64_t sub_1BFEAA3BC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v131 = a2;
  uint64_t v132 = a3;
  uint64_t v129 = *v3;
  uint64_t v5 = type metadata accessor for GroupLayoutContext();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v130 = (uint64_t)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF19690(0, &qword_1EB88A2C8, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  MEMORY[0x1F4188790](v7 - 8);
  long long v9 = (char *)&v101 - v8;
  sub_1BFF19690(0, &qword_1EB884A90, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v101 - v11;
  sub_1BFF19690(0, &qword_1EB87F2D0, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v101 - v14;
  sub_1BFF19690(0, &qword_1EB87C140, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v101 - v17;
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v158 = 0;
  memset(v157, 0, sizeof(v157));
  long long v155 = 0u;
  long long v156 = 0u;
  long long v154 = 0u;
  uint64_t v176 = MEMORY[0x1E4FBC860];
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_selectors);
  uint64_t v133 = v20;
  uint64_t v134 = v3;
  *(void *)(v20 + 16) = v21;
  uint64_t v22 = *(void *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8);
  uint64_t v152 = *(void **)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack);
  uint64_t v153 = v22;
  switch(v19)
  {
    case 0:
    case 3:
      char v79 = v134;
      long long v80 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v166[0] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v166[1] = v80;
      long long v81 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v166[2] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v166[3] = v81;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = v166;
      uint64_t v82 = (uint64_t)v135;
      sub_1BFEAC054(v131, v132, (uint64_t)v18);
      if (v82) {
        goto LABEL_35;
      }
      uint64_t v132 = 0;
      sub_1BFEAC728((uint64_t)v18, (uint64_t)v157, (uint64_t *)&v154, &v152, v133, (uint64_t)&v176);
      sub_1BFEACF00((uint64_t)v18, &qword_1EB87C140, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      uint64_t v28 = v166;
      uint64_t v23 = v79;
      goto LABEL_4;
    case 1:
      uint64_t v23 = v134;
      long long v86 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v168[0] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v168[1] = v86;
      long long v87 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v168[2] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v168[3] = v87;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = v168;
      uint64_t v88 = (uint64_t)v135;
      sub_1C0DB1B0C((uint64_t)v131, v132, (uint64_t)&v136);
      if (v88) {
        goto LABEL_35;
      }
      uint64_t v132 = 0;
      v167[10] = v146;
      v167[11] = v147;
      v167[12] = v148;
      v167[6] = v142;
      v167[7] = v143;
      v167[9] = v145;
      v167[8] = v144;
      v167[2] = v138;
      v167[3] = v139;
      v167[5] = v141;
      v167[4] = v140;
      v167[1] = v137;
      v167[0] = v136;
      sub_1C0DAFF90(v167, (uint64_t)v157, (uint64_t *)&v154, &v152);
      sub_1C0DB5244((uint64_t)v167);
      uint64_t v28 = v168;
      goto LABEL_4;
    case 2:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      uint64_t v23 = v134;
      long long v24 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v169[0] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v169[1] = v24;
      long long v25 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v169[2] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v169[3] = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = v169;
      uint64_t v27 = (uint64_t)v135;
      sub_1C0DB1FC0(v131, v132, (uint64_t)v15);
      uint64_t v132 = v27;
      if (v27) {
        goto LABEL_35;
      }
      sub_1C0DB03B8((uint64_t)v15, (uint64_t)v157, (uint64_t *)&v154, &v152, v133, (uint64_t)&v176);
      sub_1BFEACF00((uint64_t)v15, &qword_1EB87F2D0, (uint64_t (*)(uint64_t))type metadata accessor for FeedWebEmbed, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      uint64_t v28 = v169;
      goto LABEL_4;
    case 4:
      uint64_t v23 = v134;
      long long v89 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v170[0] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v170[1] = v89;
      long long v90 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v170[2] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v170[3] = v90;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = v170;
      uint64_t v91 = (uint64_t)v135;
      sub_1C0DB2694((uint64_t)v131, v132, (uint64_t)&v136);
      if (v91) {
        goto LABEL_35;
      }
      uint64_t v132 = 0;
      sub_1C0DB076C(&v136, (uint64_t)v157, (uint64_t *)&v154, &v152);
      sub_1C0DB51E8((uint64_t)&v136, &qword_1EB866E58, (uint64_t)&type metadata for FeedTag, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatNodeBindingItem);
      uint64_t v28 = v170;
      goto LABEL_4;
    case 12:
      uint64_t v23 = v134;
      long long v92 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v171[0] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v171[1] = v92;
      long long v93 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v171[2] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v171[3] = v93;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = v171;
      uint64_t v94 = (uint64_t)v135;
      sub_1C0DB2B7C((uint64_t)v131, v132, (uint64_t)&v136);
      if (v94) {
        goto LABEL_35;
      }
      uint64_t v132 = 0;
      sub_1C0DB09F4(&v136, (uint64_t)v157, (uint64_t *)&v154, &v152);
      sub_1C0DB51E8((uint64_t)&v136, &qword_1EB861380, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatNodeBindingItem);
      uint64_t v28 = v171;
      goto LABEL_4;
    case 13:
      uint64_t v23 = v134;
      long long v95 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v173[0] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v173[1] = v95;
      long long v96 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v173[2] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v173[3] = v96;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = v173;
      uint64_t v97 = (uint64_t)v135;
      sub_1C0DB3078((uint64_t)v131, v132, (uint64_t)&v136);
      if (v97) {
        goto LABEL_35;
      }
      uint64_t v132 = 0;
      v172[4] = v140;
      v172[5] = v141;
      v172[6] = v142;
      v172[7] = v143;
      v172[0] = v136;
      v172[1] = v137;
      v172[2] = v138;
      v172[3] = v139;
      sub_1C0DB0EBC(v172, (uint64_t)v157, (uint64_t *)&v154, &v152);
      sub_1C0DB513C(v172);
      uint64_t v28 = v173;
      goto LABEL_4;
    case 14:
      uint64_t v23 = v134;
      long long v98 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v174[0] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v174[1] = v98;
      long long v99 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v174[2] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v174[3] = v99;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = v174;
      uint64_t v100 = (uint64_t)v135;
      sub_1C0DB3500(v131, v132, (uint64_t)v12);
      if (v100) {
        goto LABEL_35;
      }
      uint64_t v132 = 0;
      sub_1C0DB1278((uint64_t)v12, (uint64_t)v157, (uint64_t *)&v154, &v152, v133, (uint64_t)&v176);
      sub_1BFEACF00((uint64_t)v12, &qword_1EB884A90, (uint64_t (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      uint64_t v28 = v174;
      goto LABEL_4;
    default:
      uint64_t v23 = v134;
      long long v83 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 16);
      v175[0] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings);
      v175[1] = v83;
      long long v84 = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 48);
      v175[2] = *(_OWORD *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindings + 32);
      v175[3] = v84;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = v175;
      uint64_t v85 = (uint64_t)v135;
      sub_1C0DB3BD4(v131, v132, (uint64_t)v9);
      if (v85)
      {
LABEL_35:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFF1F9B0((uint64_t)v157, qword_1EB873870, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBB718]);
        return (uint64_t)v26;
      }
      uint64_t v132 = 0;
      sub_1C0DB1760((uint64_t)v9, (uint64_t)v157, (uint64_t *)&v154, &v152, v133, (uint64_t)&v176);
      sub_1BFEACF00((uint64_t)v9, &qword_1EB88A2C8, (uint64_t (*)(uint64_t))type metadata accessor for FeedCustomItem, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      uint64_t v28 = v175;
LABEL_4:
      uint64_t v131 = (uint64_t (*)(uint64_t, uint64_t))*((void *)v28 + 7);
      uint64_t v29 = *((void *)v28 + 6);
      uint64_t v127 = *((void *)v28 + 5);
      uint64_t v128 = v29;
      uint64_t v30 = *((void *)v28 + 4);
      uint64_t v125 = *((void *)v28 + 3);
      uint64_t v126 = v30;
      uint64_t v31 = *((void *)v28 + 2);
      uint64_t v33 = v28;
      uint64_t v32 = *(void *)v28;
      *((void *)&v123 + 1) = *((void *)v33 + 1);
      uint64_t v124 = v31;
      *(void *)&long long v123 = v32;
      swift_beginAccess();
      uint64_t v34 = v152;
      uint64_t v35 = v152[2];
      if (!v35)
      {
LABEL_18:
        uint64_t v55 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_options);
        swift_beginAccess();
        uint64_t v56 = swift_bridgeObjectRetain();
        uint64_t v57 = sub_1BFEF1B58(v56);
        swift_bridgeObjectRelease();
        if (v57)
        {
          uint64_t v135 = (void *)v57;
        }
        else
        {
          swift_retain();
          uint64_t v135 = (void *)v55;
        }
        long long v159 = v123;
        uint64_t v160 = v124;
        uint64_t v161 = v125;
        uint64_t v162 = v126;
        uint64_t v163 = v127;
        uint64_t v164 = v128;
        uint64_t v165 = v131;
        sub_1BFF1ECB0((uint64_t)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_layoutContext, v130, (uint64_t (*)(void))type metadata accessor for GroupLayoutContext);
        char v58 = *((unsigned char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config);
        char v59 = *((unsigned char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 1);
        uint64_t v60 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 8);
        uint64_t v62 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 32);
        uint64_t v61 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 40);
        uint64_t v63 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 56);
        uint64_t v107 = *(void **)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 48);
        uint64_t v108 = v61;
        uint64_t v64 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 72);
        uint64_t v105 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 64);
        uint64_t v106 = v63;
        uint64_t v104 = v64;
        LOBYTE(v136) = v58;
        BYTE1(v136) = v59;
        *((void *)&v136 + 1) = v60;
        long long v103 = *(_OWORD *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_config + 16);
        long long v137 = v103;
        *(void *)&long long v138 = v62;
        *((void *)&v138 + 1) = v61;
        *(void *)&long long v139 = v107;
        *((void *)&v139 + 1) = v63;
        *(void *)&long long v140 = v105;
        *((void *)&v140 + 1) = v64;
        uint64_t v122 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_inventory);
        uint64_t v115 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
        swift_beginAccess();
        uint64_t v65 = v133;
        uint64_t v66 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_blocks);
        uint64_t v120 = *(void *)(v133 + 16);
        uint64_t v121 = v66;
        swift_beginAccess();
        unint64_t v117 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
        sub_1BFF1F7AC((uint64_t)v157, (uint64_t)v150, qword_1EB873870, MEMORY[0x1E4FBB718]);
        uint64_t v118 = v153;
        uint64_t v119 = v152;
        swift_beginAccess();
        long long v67 = v154;
        uint64_t v111 = *((void *)&v155 + 1);
        uint64_t v112 = v155;
        uint64_t v109 = *((void *)&v156 + 1);
        uint64_t v110 = v156;
        v149[0] = v154;
        v149[1] = v155;
        v149[2] = v156;
        uint64_t v68 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_boundStateMachines);
        uint64_t v69 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier + 8);
        uint64_t v116 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_slotIdentifier);
        uint64_t v102 = v69;
        uint64_t v70 = *(void *)((char *)v23 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_lazyContextLayoutOptions);
        uint64_t v113 = v68;
        uint64_t v114 = v70;
        uint64_t v71 = swift_allocObject();
        uint64_t v72 = (uint64_t)v135;
        *(void *)(v71 + 16) = v135;
        *(void *)(v71 + 24) = v65;
        uint64_t v135 = (void *)v72;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1E730(v108, v107);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BFF1E6CC(v67, *((uint64_t *)&v67 + 1));
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        uint64_t v73 = v113;
        swift_bridgeObjectRetain();
        uint64_t v74 = sub_1C1517EEC();
        swift_release();
        uint64_t v76 = *(void *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier);
        uint64_t v75 = *(void *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_itemIdentifier + 8);
        uint64_t v78 = *(void *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier);
        uint64_t v77 = *(void *)((char *)v134 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_resizeGroupIdentifier + 8);
        swift_allocObject();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v26 = (_OWORD *)sub_1C0DAFA8C(v130, (char *)&v136, v122, v115, &v159, v120, (uint64_t)v135, v121, (uint64_t)v150, (uint64_t)v119, v118, v149, v73, v116, v102, v74, v76, v75, v78,
                          v77);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BFF1EB14(v154, *((uint64_t *)&v154 + 1));
        sub_1BFF1F9B0((uint64_t)v157, qword_1EB873870, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, v117);
        return (uint64_t)v26;
      }
      uint64_t v36 = v153;
      uint64_t v37 = v152 + 4;
      swift_bridgeObjectRetain();
      uint64_t v122 = v36;
      uint64_t result = swift_bridgeObjectRetain();
      unint64_t v39 = 0;
      uint64_t v135 = v34;
      while (v39 < v34[2])
      {
        sub_1BFC66384((uint64_t)&v37[5 * v39], (uint64_t)v149);
        sub_1BFC845BC(0, (unint64_t *)&qword_1EB873868);
        sub_1BFC845BC(0, &qword_1EB88D800);
        if (swift_dynamicCast())
        {
          uint64_t v40 = v35;
          sub_1BFC773DC(v150, (uint64_t)&v136);
          uint64_t v41 = *((void *)&v137 + 1);
          uint64_t v42 = v138;
          __swift_project_boxed_opaque_existential_1(&v136, *((uint64_t *)&v137 + 1));
          uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 16))(v41, v42);
          swift_beginAccess();
          uint64_t v44 = *(void *)(v43 + 16);
          if (v44)
          {
            uint64_t v45 = (uint64_t *)(v43 + 40);
            do
            {
              uint64_t v47 = *(v45 - 1);
              uint64_t v46 = *v45;
              swift_bridgeObjectRetain();
              sub_1BFEFFC1C((uint64_t *)v150, v47, v46);
              swift_bridgeObjectRelease();
              v45 += 2;
              --v44;
            }
            while (v44);
          }
          swift_bridgeObjectRelease();
          swift_endAccess();
          uint64_t v48 = *((void *)&v137 + 1);
          uint64_t v49 = v138;
          __swift_project_boxed_opaque_existential_1(&v136, *((uint64_t *)&v137 + 1));
          uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 8))(v48, v49);
          swift_beginAccess();
          uint64_t v51 = *(void *)(v50 + 16);
          if (v51)
          {
            uint64_t v52 = (uint64_t *)(v50 + 40);
            do
            {
              uint64_t v54 = *(v52 - 1);
              uint64_t v53 = *v52;
              swift_bridgeObjectRetain();
              sub_1BFEFFC1C((uint64_t *)v150, v54, v53);
              swift_bridgeObjectRelease();
              v52 += 2;
              --v51;
            }
            while (v51);
          }
          swift_bridgeObjectRelease();
          swift_endAccess();
          uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v136);
          uint64_t v35 = v40;
          uint64_t v34 = v135;
        }
        else
        {
          uint64_t v151 = 0;
          memset(v150, 0, sizeof(v150));
          uint64_t result = sub_1BFF1F9B0((uint64_t)v150, (unint64_t *)&qword_1EB88D808, &qword_1EB88D800, (uint64_t)&protocol descriptor for FormatContentSelectorProviding, MEMORY[0x1E4FBB718]);
        }
        if (++v39 == v35)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v23 = v134;
          goto LABEL_18;
        }
      }
      __break(1u);
      return result;
  }
}

void *sub_1BFEAB418()
{
  sub_1BFEEF378(0, &qword_1EB880EF0, (uint64_t (*)(uint64_t))sub_1C0065488, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  *(void *)(inited + 32) = 0x7972616D697270;
  *(void *)(inited + 40) = 0xE700000000000000;
  uint64_t v2 = *(void **)(v0 + 40);
  if (objc_msgSend(v2, sel_respondsToSelector_, sel_thumbnailImagePrimaryColor)) {
    uint64_t v3 = (uint64_t)objc_msgSend(v2, sel_thumbnailImagePrimaryColor);
  }
  else {
    uint64_t v3 = 1;
  }
  *(void *)(inited + 48) = v3;
  *(void *)(inited + 56) = 0x756F72676B636162;
  *(void *)(inited + 64) = 0xEA0000000000646ELL;
  if (objc_msgSend(v2, sel_respondsToSelector_, sel_thumbnailImageBackgroundColor)) {
    uint64_t v4 = (uint64_t)objc_msgSend(v2, sel_thumbnailImageBackgroundColor);
  }
  else {
    uint64_t v4 = 1;
  }
  *(void *)(inited + 72) = v4;
  *(void *)(inited + 80) = 1954047348;
  *(void *)(inited + 88) = 0xE400000000000000;
  if (objc_msgSend(v2, sel_respondsToSelector_, sel_thumbnailImageTextColor)) {
    uint64_t v5 = (uint64_t)objc_msgSend(v2, sel_thumbnailImageTextColor);
  }
  else {
    uint64_t v5 = 1;
  }
  *(void *)(inited + 96) = v5;
  *(void *)(inited + 104) = 0x746E65636361;
  *(void *)(inited + 112) = 0xE600000000000000;
  if (objc_msgSend(v2, sel_respondsToSelector_, sel_thumbnailImageAccentColor)) {
    uint64_t v6 = (uint64_t)objc_msgSend(v2, sel_thumbnailImageAccentColor);
  }
  else {
    uint64_t v6 = 1;
  }
  *(void *)(inited + 120) = v6;
  unint64_t v7 = sub_1BFEABE24(inited);
  uint64_t v8 = sub_1BFEAB8E4(v7);
  swift_bridgeObjectRelease();
  sub_1C01A5AF0((uint64_t)v8);
  uint64_t v10 = v9;
  swift_release();
  if (*(unsigned char *)(v0 + 56))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1BFEF9B68(0, v10[2] + 1, 1, v10);
    }
    unint64_t v12 = v10[2];
    unint64_t v11 = v10[3];
    if (v12 >= v11 >> 1) {
      uint64_t v10 = sub_1BFEF9B68((void *)(v11 > 1), v12 + 1, 1, v10);
    }
    _OWORD v10[2] = v12 + 1;
    uint64_t v13 = &v10[2 * v12];
    v13[4] = 0x6D75696D657270;
    v13[5] = 0xE700000000000000;
  }
  if (FeedHeadline.hasAudioAccess.getter())
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1BFEF9B68(0, v10[2] + 1, 1, v10);
    }
    unint64_t v15 = v10[2];
    unint64_t v14 = v10[3];
    if (v15 >= v14 >> 1) {
      uint64_t v10 = sub_1BFEF9B68((void *)(v14 > 1), v15 + 1, 1, v10);
    }
    _OWORD v10[2] = v15 + 1;
    uint64_t v16 = &v10[2 * v15];
    v16[4] = 0xD000000000000011;
    v16[5] = 0x80000001C1605DA0;
  }
  id v17 = objc_msgSend(v2, sel_sourceChannel);
  if (v17)
  {
    uint64_t v18 = v17;
    sub_1C15200FC();
    swift_bridgeObjectRelease();
    id v19 = objc_msgSend(v18, sel_identifier);
    sub_1C151E62C();

    sub_1C151E80C();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1BFEF9B68(0, v10[2] + 1, 1, v10);
    }
    unint64_t v21 = v10[2];
    unint64_t v20 = v10[3];
    if (v21 >= v20 >> 1) {
      uint64_t v10 = sub_1BFEF9B68((void *)(v20 > 1), v21 + 1, 1, v10);
    }
    _OWORD v10[2] = v21 + 1;
    uint64_t v22 = &v10[2 * v21];
    void v22[4] = 0xD000000000000012;
    v22[5] = 0x80000001C1605D80;
    swift_unknownObjectRelease();
  }
  if ((objc_msgSend(v2, sel_respondsToSelector_, sel_isEvergreen) & 1) != 0
    && objc_msgSend(v2, sel_isEvergreen))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_1BFEF9B68(0, v10[2] + 1, 1, v10);
    }
    unint64_t v24 = v10[2];
    unint64_t v23 = v10[3];
    if (v24 >= v23 >> 1) {
      uint64_t v10 = sub_1BFEF9B68((void *)(v23 > 1), v24 + 1, 1, v10);
    }
    _OWORD v10[2] = v24 + 1;
    long long v25 = (char *)&v10[2 * v24];
    strcpy(v25 + 32, "is-evergreen");
    v25[45] = 0;
    *((_WORD *)v25 + 23) = -5120;
  }
  return v10;
}

unint64_t *sub_1BFEAB8E4(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = (unint64_t *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1BFEABA3C((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    unint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_1BFEABA3C((unint64_t *)v7, v4, (uint64_t)v2);
    MEMORY[0x1C18C9B00](v7, -1, -1);
  }
  return v2;
}

unint64_t *sub_1BFEABA3C(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_1BFEABB8C(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_1BFEABB8C(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_1BFEABB8C(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(void *)(*(void *)(a3 + 56) + 8 * v12) != 1)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1BFEABB8C(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_1BFEABB8C(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_1BFEABB8C(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1BFEABB8C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1C05F45D0();
  uint64_t result = sub_1C152050C();
  uint64_t v9 = result;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v33) {
        return v9;
      }
      unint64_t v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v33) {
          return v9;
        }
        unint64_t v16 = v32[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v33) {
            return v9;
          }
          unint64_t v16 = v32[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v33) {
              return v9;
            }
            unint64_t v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v33) {
                  return v9;
                }
                unint64_t v16 = v32[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = *(void **)(*(void *)(v4 + 56) + 8 * v14);
    sub_1C1520DBC();
    swift_bridgeObjectRetain();
    sub_1BFEABF68(v21);
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = (void *)(*(void *)(v9 + 48) + 16 * v25);
    *uint64_t v30 = v20;
    v30[1] = v19;
    *(void *)(*(void *)(v9 + 56) + 8 * v25) = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1BFEABE24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C0192664(0, (unint64_t *)&qword_1EB880E50, (void (*)(uint64_t))sub_1C0063A54);
  uint64_t v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    sub_1BFEABF68(v7);
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_1BFEABF68(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t FeedHeadline.hasAudioAccess.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for FeedHeadline(0) + 56));
  if (v1
    && (uint64_t v2 = *(void **)(v0 + 40), (objc_msgSend(v2, sel_respondsToSelector_, sel_narrativeTrack) & 1) != 0))
  {
    id v3 = v1;
    id v4 = objc_msgSend(v2, sel_narrativeTrack);
    if (v4)
    {
      sub_1BFC39268(0, (unint64_t *)&qword_1EB8901F0);
      id v5 = v3;
      id v3 = v4;
      LOBYTE(v4) = sub_1C151FB6C();
    }
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  return v4 & 1;
}

uint64_t sub_1BFEAC054@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  id v4 = v3;
  sub_1BFF19690(0, &qword_1EB87C140, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  uint64_t v46 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v47 = (uint64_t)&v44 - v8;
  sub_1BFF19690(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v44 - v10;
  uint64_t v12 = type metadata accessor for FeedHeadline(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v45 = (uint64_t)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v49 = (uint64_t)&v44 - v16;
  uint64_t v50 = (uint64_t (*)())a1;
  uint64_t v68 = *v3;
  uint64_t v17 = v68;
  if (*(void *)(v68 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_1BFEF2D8C((uint64_t)a1, a2);
    if (v19)
    {
      sub_1BFF1F7AC(*(void *)(v17 + 56) + 104 * v18, (uint64_t)&v51, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
      swift_bridgeObjectRelease();
      a1 = (uint64_t (*)(uint64_t, uint64_t))v50;
      if (*((void *)&v52 + 1))
      {
        long long v62 = v55;
        long long v63 = v56;
        uint64_t v64 = v57;
        long long v58 = v51;
        long long v59 = v52;
        long long v60 = v53;
        long long v61 = v54;
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v57 = 0;
      long long v55 = 0u;
      long long v56 = 0u;
      long long v53 = 0u;
      long long v54 = 0u;
      long long v51 = 0u;
      long long v52 = 0u;
      swift_bridgeObjectRelease();
      a1 = (uint64_t (*)(uint64_t, uint64_t))v50;
    }
  }
  else
  {
    uint64_t v57 = 0;
    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    long long v51 = 0u;
    long long v52 = 0u;
  }
  uint64_t v26 = v3[1];
  if (*(void *)(v26 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_1BFEF2D8C((uint64_t)a1, a2);
    if (v28)
    {
      sub_1BFF1F7AC(*(void *)(v26 + 56) + 104 * v27, (uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    }
    else
    {
      uint64_t v64 = 0;
      long long v62 = 0u;
      long long v63 = 0u;
      long long v60 = 0u;
      long long v61 = 0u;
      long long v58 = 0u;
      long long v59 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v64 = 0;
    long long v62 = 0u;
    long long v63 = 0u;
    long long v60 = 0u;
    long long v61 = 0u;
    long long v58 = 0u;
    long long v59 = 0u;
  }
  sub_1BFF1F404((uint64_t)&v51, (uint64_t (*)(void))sub_1BFF84034);
  if (!*((void *)&v59 + 1))
  {
    sub_1BFF1F404((uint64_t)&v58, (uint64_t (*)(void))sub_1BFF84034);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v21 = v20;
    swift_bridgeObjectRetain();
    sub_1BFFAF7A4((uint64_t)&v68);
    uint64_t v22 = sub_1C00B152C(v17);
    sub_1BFCA59C8((uint64_t)&v68);
    uint64_t v67 = v4[1];
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C00B152C(v23);
    sub_1BFCA59C8((uint64_t)&v67);
    *(void *)uint64_t v21 = v50;
    *(void *)(v21 + 8) = a2;
    *(void *)(v21 + 16) = v22;
    *(void *)(v21 + 24) = v24;
    *(unsigned char *)(v21 + 56) = 1;
    return swift_willThrow();
  }
LABEL_15:
  v65[4] = v62;
  v65[5] = v63;
  uint64_t v66 = v64;
  v65[0] = v58;
  v65[1] = v59;
  v65[2] = v60;
  v65[3] = v61;
  sub_1BFC66384((uint64_t)v65, (uint64_t)&v58);
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB873868);
  char v29 = swift_dynamicCast();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v29)
  {
    v30(v11, 0, 1, v12);
    uint64_t v31 = v49;
    sub_1BFF97888((uint64_t)v11, v49, type metadata accessor for FeedHeadline);
    uint64_t v32 = v31;
    uint64_t v33 = v45;
    sub_1BFF1ECB0(v32, v45, type metadata accessor for FeedHeadline);
    uint64_t v50 = type metadata accessor for FormatNodeBindingItem;
    sub_1BFF1F7AC((uint64_t)v65, (uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
    uint64_t v34 = v47;
    sub_1BFF97888(v33, v47, type metadata accessor for FeedHeadline);
    uint64_t v35 = v46;
    uint64_t v36 = v61;
    *(void *)(v34 + *(int *)(v46 + 28)) = *((void *)&v60 + 1);
    *(void *)(v34 + *(int *)(v35 + 32)) = v36;
    uint64_t v37 = *((void *)&v61 + 1);
    long long v38 = v62;
    long long v40 = v63;
    uint64_t v39 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFF1E6CC(v37, v38);
    sub_1BFF1F9B0((uint64_t)&v58, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))v50);
    uint64_t v41 = v34 + *(int *)(v35 + 36);
    *(void *)uint64_t v41 = v37;
    *(_OWORD *)(v41 + 8) = v38;
    *(_OWORD *)(v41 + 24) = v40;
    *(void *)(v41 + 40) = v39;
    sub_1C0DB5338(v34, v48, &qword_1EB87C140, type metadata accessor for FeedHeadline);
    sub_1BFF1F404(v49, type metadata accessor for FeedHeadline);
    return sub_1BFF1F9B0((uint64_t)v65, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))v50);
  }
  else
  {
    v30(v11, 1, 1, v12);
    sub_1BFEACF00((uint64_t)v11, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v43 = v42;
    *uint64_t v42 = v50;
    v42[1] = (uint64_t (*)())a2;
    sub_1BFC66384((uint64_t)v65, (uint64_t)(v42 + 2));
    *((unsigned char *)v43 + 56) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return sub_1BFF1F9B0((uint64_t)v65, (unint64_t *)&qword_1EB87F2D8, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  }
}

uint64_t sub_1BFEAC728(uint64_t a1, uint64_t a2, uint64_t *a3, void **a4, uint64_t a5, uint64_t a6)
{
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v42 = a4;
  uint64_t v9 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v9);
  long long v40 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v11;
  uint64_t v49 = v11;
  uint64_t v43 = sub_1BFF77B44((unint64_t *)&unk_1EB873778, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  uint64_t v50 = v43;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v48);
  uint64_t v41 = type metadata accessor for FeedHeadline;
  uint64_t v39 = a1;
  sub_1BFF1ECB0(a1, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedHeadline);
  swift_beginAccess();
  sub_1BFEACB04((uint64_t)&v48, a2);
  sub_1BFF19690(0, &qword_1EB87C140, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatNodeBindingItem);
  uint64_t v44 = v13;
  uint64_t v14 = (uint64_t *)(a1 + *(int *)(v13 + 36));
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  uint64_t v18 = v14[2];
  uint64_t v17 = v14[3];
  uint64_t v20 = v14[4];
  uint64_t v19 = v14[5];
  swift_beginAccess();
  uint64_t v22 = *a3;
  uint64_t v21 = a3[1];
  uint64_t v38[3] = a3[3];
  void v38[2] = a3[4];
  v38[1] = a3[5];
  *a3 = v16;
  a3[1] = v15;
  a3[2] = v18;
  a3[3] = v17;
  a3[4] = v20;
  a3[5] = v19;
  uint64_t v23 = v16;
  uint64_t v24 = (uint64_t)v40;
  uint64_t v25 = v15;
  uint64_t v26 = v42;
  sub_1BFF1E6CC(v23, v25);
  uint64_t v27 = v21;
  uint64_t v28 = v39;
  sub_1BFF1EB14(v22, v27);
  swift_beginAccess();
  sub_1BFF1ECB0(v28, v24, v41);
  char v29 = FeedHeadline.additionalFormatFeedItems.getter();
  sub_1BFEACADC((uint64_t)v29);
  uint64_t v30 = *v26;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v26 = v30;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v30 = sub_1BFEA4268(0, v30[2] + 1, 1, v30);
    *uint64_t v26 = v30;
  }
  unint64_t v33 = v30[2];
  unint64_t v32 = v30[3];
  if (v33 >= v32 >> 1)
  {
    uint64_t v30 = sub_1BFEA4268((void *)(v32 > 1), v33 + 1, 1, v30);
    *uint64_t v26 = v30;
  }
  uint64_t v49 = v45;
  uint64_t v50 = v43;
  uint64_t v34 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v48);
  sub_1BFF1ECB0(v24, (uint64_t)v34, type metadata accessor for FeedHeadline);
  v30[2] = v33 + 1;
  sub_1BFC773DC(&v48, (uint64_t)&v30[5 * v33 + 4]);
  sub_1BFF1F404(v24, type metadata accessor for FeedHeadline);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v35 = swift_bridgeObjectRetain();
  sub_1BFEF3808(v35);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v36 = swift_bridgeObjectRetain();
  sub_1BFF1B81C(v36);
  return swift_endAccess();
}

uint64_t sub_1BFEACADC(uint64_t a1)
{
  return sub_1BFEFCA3C(a1, (uint64_t (*)(void))sub_1BFEA4268, (unint64_t *)&qword_1EB873868);
}

uint64_t sub_1BFEACB04(uint64_t a1, uint64_t a2)
{
  sub_1BFF1FBE0(0, qword_1EB873870, (unint64_t *)&qword_1EB873868, (uint64_t)&protocol descriptor for FeedItemType, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *sub_1BFEACB98()
{
  return FeedHeadline.State.selectors.getter();
}

void *FeedHeadline.State.selectors.getter()
{
  uint64_t v1 = type metadata accessor for FeedItem.SharedState(0);
  MEMORY[0x1F4188790](v1 - 8);
  id v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFE99CBC(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
  uint64_t v4 = swift_allocObject();
  id v5 = (void *)v4;
  *(_OWORD *)(v4 + 16) = xmmword_1C152FC70;
  if (*v0)
  {
    if (*v0 == 1)
    {
      unint64_t v6 = 0xD000000000000013;
      unint64_t v7 = 0x80000001C1605D40;
    }
    else
    {
      unint64_t v6 = 0x6174732D656B696CLL;
      unint64_t v7 = 0xEF656E6F6E2D6574;
    }
  }
  else
  {
    unint64_t v7 = 0x80000001C1605D20;
    unint64_t v6 = 0xD000000000000010;
  }
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v7;
  unint64_t v8 = 0x6174732D65766173;
  if (!v0[1]) {
    unint64_t v8 = 0xD000000000000010;
  }
  unint64_t v9 = 0x80000001C1605D00;
  if (v0[1]) {
    unint64_t v9 = 0xEF656E6F6E2D6574;
  }
  *(void *)(v4 + 48) = v8;
  *(void *)(v4 + 56) = v9;
  uint64_t v10 = (int *)type metadata accessor for FeedHeadline.State(0);
  sub_1BFEE90FC((uint64_t)&v0[v10[6]], (uint64_t)v3, type metadata accessor for FeedItem.SharedState);
  uint64_t v11 = type metadata accessor for SharedItem();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v3, 1, v11) == 1)
  {
    unint64_t v12 = 0x80000001C1605B90;
    unint64_t v13 = 0xD000000000000010;
  }
  else
  {
    sub_1BFEE9164((uint64_t)v3, type metadata accessor for FeedItem.SharedState);
    unint64_t v13 = 0xD000000000000012;
    unint64_t v12 = 0x80000001C1605CE0;
  }
  v5[8] = v13;
  v5[9] = v12;
  if (v0[v10[7]]) {
    unint64_t v14 = 0xD000000000000014;
  }
  else {
    unint64_t v14 = 0xD000000000000019;
  }
  unint64_t v15 = 0x80000001C1605CC0;
  if (v0[v10[7]]) {
    unint64_t v15 = 0x80000001C1605BB0;
  }
  v5[10] = v14;
  v5[11] = v15;
  if (v0[v10[8]])
  {
    if (v0[v10[8]] == 1)
    {
      unint64_t v16 = 0xD00000000000001DLL;
      uint64_t v17 = "access-level-no-bundle-access";
    }
    else
    {
      unint64_t v16 = 0xD000000000000020;
      uint64_t v17 = "access-level-no-ala-carte-access";
    }
  }
  else
  {
    unint64_t v16 = 0xD000000000000011;
    uint64_t v17 = "access-level-full";
  }
  v5[12] = v16;
  v5[13] = (unint64_t)(v17 - 32) | 0x8000000000000000;
  if (v0[v10[9]]) {
    unint64_t v18 = 0xD000000000000015;
  }
  else {
    unint64_t v18 = 0xD000000000000012;
  }
  unint64_t v19 = 0x80000001C1605C00;
  if (!v0[v10[9]]) {
    unint64_t v19 = 0x80000001C1605C60;
  }
  v5[14] = v18;
  v5[15] = v19;
  if (v0[v10[10]]) {
    unint64_t v20 = 0xD000000000000015;
  }
  else {
    unint64_t v20 = 0xD000000000000012;
  }
  unint64_t v21 = 0x80000001C1605C40;
  if (v0[v10[10]]) {
    unint64_t v21 = 0x80000001C1605C20;
  }
  void v5[16] = v20;
  v5[17] = v21;
  return v5;
}

uint64_t sub_1BFEACEF4()
{
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1BFEACF00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_1BFF19690(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_1BFEACF5C()
{
  unint64_t result = qword_1EB8740B0;
  if (!qword_1EB8740B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8740B0);
  }
  return result;
}

unint64_t sub_1BFEACFB0()
{
  unint64_t result = qword_1EB873F30;
  if (!qword_1EB873F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB873F30);
  }
  return result;
}

uint64_t sub_1BFEAD004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BFFCDE30(a1, a2, a3);
}

void sub_1BFEAD020(unsigned char *a1@<X8>)
{
  unint64_t v21 = a1;
  uint64_t v1 = sub_1C151A95C();
  v17[3] = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  void v17[2] = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12A7FB8(0, &qword_1EB878630, (uint64_t (*)(uint64_t))type metadata accessor for GroupLayoutBindingContext, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v19 = (char *)v17 - v4;
  uint64_t v18 = type metadata accessor for InternalErrorViewModel();
  MEMORY[0x1F4188790](v18);
  MEMORY[0x1F4188790](v5);
  *(void *)&long long v20 = (char *)v17 - v6;
  sub_1BFF33D2C(0, (unint64_t *)&qword_1EB884DC0, MEMORY[0x1E4FAB930]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v17 - v10;
  type metadata accessor for FormatGroupLayoutFactory.Bound();
  sub_1C1517BFC();
  sub_1C151784C();
  swift_retain();
  sub_1C151781C();
  type metadata accessor for FormatLayoutAttributes();
  sub_1BFF597F8();
  sub_1BFF30570(&qword_1EB88A8A0, (void (*)(uint64_t))type metadata accessor for FormatLayoutAttributes);
  sub_1C1517B9C();
  sub_1BFEAD7AC((uint64_t)v22);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  char v12 = v22[0];
  long long v20 = v23;
  uint64_t v13 = v24;
  uint64_t v14 = v25;
  unint64_t v15 = v27;
  swift_release();
  swift_release();

  unint64_t v16 = v21;
  *unint64_t v21 = v12;
  *(_OWORD *)(v16 + 8) = v20;
  *((void *)v16 + 3) = v13;
  *((void *)v16 + 4) = v14;
  *(_OWORD *)(v16 + 40) = v26;
}

uint64_t sub_1BFEAD7AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_1BFF33D2C(0, (unint64_t *)&qword_1EB884DC0, MEMORY[0x1E4FAB930]);
  sub_1C1517BAC();
  unint64_t v4 = sub_1BFEAE234((uint64_t)v28);
  unint64_t v6 = v5;
  swift_release();
  sub_1C1517BAC();
  uint64_t v7 = v28[2];
  uint64_t v8 = v28[3];
  uint64_t v9 = v28[4];
  uint64_t v10 = v28[5];
  swift_release();
  uint64_t v23 = v1;
  uint64_t v24 = v7;
  uint64_t v25 = v8;
  uint64_t v26 = v9;
  uint64_t v27 = v10;
  uint64_t v11 = (void *)sub_1C12A5160(v4, (void (*)(uint64_t *__return_ptr, unint64_t, uint64_t))sub_1BFEAD998);
  swift_bridgeObjectRelease();
  uint64_t v18 = v1;
  uint64_t v19 = v7;
  uint64_t v20 = v8;
  uint64_t v21 = v9;
  uint64_t v22 = v10;
  unint64_t v12 = sub_1BFEADBA8((void (*)(uint64_t *))sub_1BFEAE0B8, (uint64_t)&v17, v6);
  swift_bridgeObjectRelease();
  uint64_t v28 = v11;
  sub_1BFF887CC(0, (unint64_t *)&qword_1EB879CB0, (uint64_t)&type metadata for FeedItemLayoutAttributes, MEMORY[0x1E4FBB320]);
  sub_1BFEB1028();
  sub_1BFEB0FD4();
  uint64_t v13 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1C1517BBC();
  uint64_t v15 = *(void *)(*(void *)(v2 + *(int *)(type metadata accessor for FormatGroupLayoutFactory.Bound() + 40)) + 16);
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v13;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v14;
  *(void *)(a1 + 64) = v15;
  *(void *)(a1 + 72) = 0;
  return swift_retain();
}

uint64_t sub_1BFEAD998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BFEAD9A8(a1, a2, *(uint64_t **)(v3 + 16), a3, *(double *)(v3 + 24), *(double *)(v3 + 32), *(double *)(v3 + 40), *(double *)(v3 + 48));
}

uint64_t sub_1BFEAD9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v45 = a1;
  uint64_t v43 = a4;
  uint64_t v14 = type metadata accessor for FormatItemNodeLayoutContext();
  uint64_t v15 = (int *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (void *)((char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *a3;
  uint64_t v19 = (int *)type metadata accessor for FormatGroupLayoutFactory.Bound();
  uint64_t v20 = *(uint64_t *)((char *)a3 + v19[9]);
  uint64_t v21 = (uint64_t *)((char *)a3 + v19[15]);
  uint64_t v22 = v21[1];
  uint64_t v44 = *v21;
  uint64_t v23 = v21[2];
  uint64_t v24 = v21[3];
  sub_1BFF1B214(a2 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_feedItem, (uint64_t)v17 + v15[9], type metadata accessor for FeedItem);
  uint64_t v25 = *(void *)(a2 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  v42[1] = v20;
  v42[2] = v18;
  *uint64_t v17 = v18;
  v17[1] = v20;
  long long v26 = *(_OWORD *)(v25 + 16);
  long long v27 = *(_OWORD *)(v25 + 32);
  void v17[2] = v44;
  v17[3] = v22;
  void v17[4] = v23;
  v17[5] = v24;
  uint64_t v28 = (_OWORD *)((char *)v17 + v15[10]);
  _OWORD *v28 = v26;
  v28[1] = v27;
  char v29 = (double *)((char *)v17 + v15[11]);
  *char v29 = a5;
  v29[1] = a6;
  long long v29[2] = a7;
  v29[3] = a8;
  sub_1BFE29960();
  uint64_t v31 = v30;
  uint64_t v32 = swift_allocBox();
  uint64_t v34 = v33;
  uint64_t v35 = *(int *)(v31 + 48);
  uint64_t v36 = *(int *)(v31 + 64);
  sub_1BFF23AA4((uint64_t)v17, v33, (uint64_t (*)(void))type metadata accessor for FormatItemNodeLayoutContext);
  *(void *)(v34 + v35) = a2;
  uint64_t v37 = (char *)a3 + v19[6];
  uint64_t result = type metadata accessor for GroupLayoutContext();
  uint64_t v39 = *(void *)&v37[*(int *)(result + 28)];
  BOOL v40 = __OFADD__(v45, v39);
  uint64_t v41 = v45 + v39;
  if (v40)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v34 + v36) = v41;
    *uint64_t v43 = v32 | 0x7000000000000000;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1BFEADBA8(void (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  char v29 = a1;
  sub_1C028A520(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for FeedItemSupplementaryAttributes();
  uint64_t v24 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v27 = (uint64_t)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v23 = (uint64_t)&v22 - v10;
  if (a3 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C15204BC();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      unint64_t v26 = a3 & 0xC000000000000001;
      unint64_t v12 = MEMORY[0x1E4FBC860];
      uint64_t v13 = 4;
      unint64_t v22 = a3;
      while (1)
      {
        uint64_t v14 = v13 - 4;
        if (v26)
        {
          uint64_t v15 = MEMORY[0x1C18C7CB0](v13 - 4, a3);
          BOOL v16 = __OFADD__(v14, 1);
          uint64_t v17 = v13 - 3;
          if (v16) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v15 = *(void *)(a3 + 8 * v13);
          swift_retain();
          BOOL v16 = __OFADD__(v14, 1);
          uint64_t v17 = v13 - 3;
          if (v16)
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        uint64_t v30 = v15;
        v29(&v30);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return v12;
        }
        swift_release();
        if ((*v25)(v7, 1, v28) == 1)
        {
          sub_1BFF5B58C((uint64_t)v7, (uint64_t (*)(void))sub_1C028A520);
        }
        else
        {
          uint64_t v18 = v23;
          sub_1BFF976E8((uint64_t)v7, v23, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          sub_1BFF976E8(v18, v27, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v12 = sub_1BFEC43D4(0, *(void *)(v12 + 16) + 1, 1, v12);
          }
          unint64_t v20 = *(void *)(v12 + 16);
          unint64_t v19 = *(void *)(v12 + 24);
          if (v20 >= v19 >> 1) {
            unint64_t v12 = sub_1BFEC43D4(v19 > 1, v20 + 1, 1, v12);
          }
          *(void *)(v12 + 16) = v20 + 1;
          sub_1BFF976E8(v27, v12+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v20, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
          a3 = v22;
        }
        ++v13;
        if (v17 == v11)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1BFEADF18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEADF80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEADFE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEAE050(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEAE0B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFEAE0DC(a1, *(uint64_t **)(v2 + 16), a2, *(double *)(v2 + 24), *(double *)(v2 + 32), *(double *)(v2 + 40), *(double *)(v2 + 48));
}

uint64_t sub_1BFEAE0DC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v13 = *a1;
  uint64_t v14 = *a2;
  uint64_t v15 = type metadata accessor for FormatGroupLayoutFactory.Bound();
  uint64_t v16 = *(uint64_t *)((char *)a2 + *(int *)(v15 + 36));
  uint64_t v17 = (char *)a2 + *(int *)(v15 + 60);
  uint64_t v18 = *(void *)v17;
  uint64_t v19 = *(void *)(v13 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
  uint64_t v20 = *((void *)v17 + 3);
  long long v21 = *(_OWORD *)(v19 + 16);
  long long v22 = *(_OWORD *)(v19 + 32);
  *(void *)a3 = v14;
  *(void *)(a3 + 8) = v16;
  *(void *)(a3 + 16) = v18;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(v17 + 8);
  *(void *)(a3 + 40) = v20;
  *(_OWORD *)(a3 + 48) = v21;
  *(_OWORD *)(a3 + 64) = v22;
  *(double *)(a3 + 80) = a4;
  *(double *)(a3 + 88) = a5;
  *(double *)(a3 + 96) = a6;
  *(double *)(a3 + 104) = a7;
  *(void *)(a3 + 112) = 0;
  *(void *)(a3 + 120) = 0;
  *(void *)(a3 + 128) = v13;
  uint64_t v23 = type metadata accessor for FeedItemSupplementaryAttributes();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a3, 0, 1, v23);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFEAE234(uint64_t a1)
{
  uint64_t v133 = 0;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C12A7FB8(0, &qword_1EB882B90, MEMORY[0x1E4FAD628], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v131 = (uint64_t)&v115 - v5;
  sub_1C12A7FB8(0, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0], v3);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v130 = (uint64_t)&v115 - v7;
  uint64_t v8 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v117 = (uint64_t)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data, v3);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v115 - v14;
  uint64_t v16 = type metadata accessor for FormatItemNodeData();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v116 = (uint64_t)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v115 - v19;
  unint64_t v21 = MEMORY[0x1E4FBC860];
  unint64_t v148 = MEMORY[0x1E4FBC860];
  unint64_t v147 = MEMORY[0x1E4FBC860];
  uint64_t v138 = type metadata accessor for FormatGroupLayoutFactory.Bound();
  uint64_t v139 = v1;
  sub_1C151765C();
  uint64_t v24 = *(void *)(a1 + 112);
  uint64_t v141 = *(void *)(v24 + 16);
  if (v141)
  {
    double v25 = v22;
    double v26 = v23;
    uint64_t v118 = v20;
    swift_bridgeObjectRetain();
    uint64_t v27 = 0;
    uint64_t v132 = v12;
    uint64_t v134 = v15;
    uint64_t v135 = v24;
    while (1)
    {
      unint64_t v28 = *(void *)(v24 + 8 * v27 + 32);
      int v29 = (v28 >> 59) & 0x1E | (v28 >> 2) & 1;
      if (v29 != 6)
      {
        if (!v29)
        {
          uint64_t v30 = *(void **)(v28 + 16);
          uint64_t v31 = *(void *)(v139 + *(int *)(v138 + 40));
          uint64_t v32 = v30[2];
          uint64_t v34 = *(void *)(v32 + 48);
          uint64_t v33 = *(void *)(v32 + 56);
          swift_beginAccess();
          uint64_t v35 = *(void *)(v31 + 24);
          if (*(void *)(v35 + 16))
          {
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            unint64_t v36 = sub_1BFEF2D8C(v34, v33);
            if (v37)
            {
              unint64_t v38 = v36;
              uint64_t v39 = *(void *)(v35 + 56);
              uint64_t v40 = type metadata accessor for FormatNodeStateData.Data();
              uint64_t v41 = *(void *)(v40 - 8);
              uint64_t v42 = v39 + *(void *)(v41 + 72) * v38;
              uint64_t v15 = v134;
              sub_1BFF1B214(v42, (uint64_t)v134, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v15, 0, 1, v40);
              uint64_t v24 = v135;
            }
            else
            {
              uint64_t v40 = type metadata accessor for FormatNodeStateData.Data();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v15, 1, 1, v40);
            }
          }
          else
          {
            uint64_t v40 = type metadata accessor for FormatNodeStateData.Data();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v15, 1, 1, v40);
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
          }
          swift_endAccess();
          swift_bridgeObjectRelease();
          type metadata accessor for FormatNodeStateData.Data();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v15, 1, v40) == 1)
          {
            sub_1C12AD324((uint64_t)v15, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
            goto LABEL_38;
          }
          if (swift_getEnumCaseMultiPayload() != 4)
          {
            sub_1BFF1BA48((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
LABEL_38:
            swift_release();
LABEL_39:
            swift_release();
            goto LABEL_5;
          }
          uint64_t v54 = (uint64_t)v118;
          sub_1BFF23AA4((uint64_t)v15, (uint64_t)v118, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
          long long v55 = (double *)v30[2];
          uint64_t v56 = *((void *)v55 + 9);
          if (!v56)
          {
            swift_release();
            sub_1BFF1BA48(v54, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
            goto LABEL_39;
          }
          uint64_t v127 = *((void *)v55 + 8);
          unint64_t v140 = v30[3];
          uint64_t v57 = v54;
          uint64_t v122 = v30[4];
          *(void *)&long long v145 = v122;
          uint64_t v58 = v30[6];
          uint64_t v137 = v30[5];
          uint64_t v129 = v58;
          uint64_t v128 = v30[7];
          char v143 = *(unsigned char *)(v139 + *(int *)(v138 + 52));
          uint64_t v124 = v56;
          sub_1BFF1B214(v57, v117, type metadata accessor for FeedItem);
          unint64_t v59 = v30[9];
          uint64_t v136 = v30[8];
          unint64_t v144 = v59;
          double v60 = v55[2];
          double v61 = v55[3];
          double v62 = v55[4];
          double v63 = v55[5];
          unint64_t v64 = *((void *)v55 + 11);
          uint64_t v126 = *((void *)v55 + 10);
          unint64_t v123 = v64;
          uint64_t v125 = *((void *)v55 + 12);
          uint64_t v121 = *((void *)v55 + 13);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          sub_1BFE6FA30(v59);
          swift_bridgeObjectRetain();
          uint64_t v65 = v121;
          swift_bridgeObjectRetain();
          uint64_t v66 = swift_bridgeObjectRetain();
          uint64_t v67 = v139;
          uint64_t v122 = sub_1BFFC2FD8(v66, v25, v26);
          swift_bridgeObjectRelease();
          uint64_t v142 = *(void *)(v30[2] + 120);
          sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890098, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, MEMORY[0x1E4FBB320]);
          sub_1BFF87C24();
          swift_bridgeObjectRetain();
          uint64_t v68 = v133;
          uint64_t v69 = sub_1C151E92C();
          MEMORY[0x1F4188790](v69);
          uint64_t v114 = v67;
          uint64_t v70 = sub_1BFF87CAC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1C12AD4E8, (uint64_t)(&v115 - 4), v69);
          uint64_t v133 = v68;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v71 = (uint64_t)v118;
          uint64_t v72 = v116;
          sub_1BFF1B214((uint64_t)v118, v116, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
          LOBYTE(v69) = *(unsigned char *)(v30[2] + 128);
          sub_1C12A7FB8(0, &qword_1EB88C230, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeData, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
          swift_allocObject();
          uint64_t v73 = sub_1C12AA2C4(v127, v124, v126, v123, v125, v65, v60, v61, v62, v63, v25, v26, v122, v70, v72, v69);
          swift_bridgeObjectRelease();
          type metadata accessor for FormatItemNodeDataLayoutAttributes();
          swift_allocObject();
          sub_1BFEAF6E0(v140, (uint64_t *)&v145, v137, v129, v128, &v143, v117, v136, (uint64_t *)&v144, (uint64_t)v73);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v74 = swift_retain();
          MEMORY[0x1C18C66D0](v74);
          if (*(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
          swift_release();
          swift_release();
          sub_1BFF1BA48(v71, (uint64_t (*)(void))type metadata accessor for FormatItemNodeData);
          goto LABEL_36;
        }
        goto LABEL_5;
      }
      unint64_t v140 = v28 & 0xFFFFFFFFFFFFFFBLL;
      uint64_t v43 = *(void *)((v28 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
      uint64_t v44 = *(void *)(v139 + *(int *)(v138 + 40));
      *(void *)&long long v145 = v28;
      uint64_t v45 = FormatLayoutValue.identifier.getter();
      uint64_t v47 = v46;
      swift_beginAccess();
      uint64_t v48 = *(void *)(v44 + 40);
      if (!*(void *)(v48 + 16)) {
        break;
      }
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t v49 = sub_1BFEF2D8C(v45, v47);
      if ((v50 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      long long v51 = (uint64_t *)(*(void *)(v48 + 56) + 24 * v49);
      uint64_t v52 = *v51;
      uint64_t v53 = v51[2];
      uint64_t v137 = v51[1];
      swift_bridgeObjectRetain();
      uint64_t v136 = v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_26:
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v75 = *(void *)(v43 + 16);
      uint64_t v77 = *(void *)(v75 + 48);
      uint64_t v76 = *(void *)(v75 + 56);
      swift_beginAccess();
      uint64_t v78 = *(void *)(v44 + 24);
      if (*(void *)(v78 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v79 = sub_1BFEF2D8C(v77, v76);
        if (v80)
        {
          unint64_t v81 = v79;
          uint64_t v82 = *(void *)(v78 + 56);
          uint64_t v83 = type metadata accessor for FormatNodeStateData.Data();
          uint64_t v84 = v52;
          uint64_t v85 = *(void *)(v83 - 8);
          uint64_t v86 = v82 + *(void *)(v85 + 72) * v81;
          long long v87 = v132;
          sub_1BFF1B214(v86, (uint64_t)v132, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v85 + 56))(v87, 0, 1, v83);
          uint64_t v52 = v84;
        }
        else
        {
          uint64_t v83 = type metadata accessor for FormatNodeStateData.Data();
          long long v87 = v132;
          (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v132, 1, 1, v83);
        }
      }
      else
      {
        uint64_t v83 = type metadata accessor for FormatNodeStateData.Data();
        long long v87 = v132;
        (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v132, 1, 1, v83);
        swift_bridgeObjectRetain();
      }
      uint64_t v24 = v135;
      swift_endAccess();
      swift_bridgeObjectRelease();
      type metadata accessor for FormatNodeStateData.Data();
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 48))(v87, 1, v83) == 1)
      {
        sub_1C017C418(v52, v137);
        sub_1C12AD324((uint64_t)v87, (unint64_t *)&qword_1EB884A48, (uint64_t (*)(uint64_t))type metadata accessor for FormatNodeStateData.Data);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 5)
        {
          *(_OWORD *)&v150[9] = *(_OWORD *)((char *)v87 + 89);
          long long v88 = v87[5];
          v149[4] = v87[4];
          *(_OWORD *)uint64_t v150 = v88;
          long long v89 = v87[3];
          v149[2] = v87[2];
          v149[3] = v89;
          long long v90 = v87[1];
          v149[0] = *v87;
          v149[1] = v90;
          uint64_t v91 = *(void *)(v43 + 32);
          uint64_t v126 = *(void *)(v43 + 24);
          unint64_t v144 = v91;
          uint64_t v127 = *(void *)(v43 + 40);
          uint64_t v129 = *(void *)(v43 + 48);
          LODWORD(v128) = *(unsigned __int8 *)(v43 + 56);
          sub_1BFF235F0(v43 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_pinTrait, v130, &qword_1EB87C7F8, MEMORY[0x1E4FAD3E0]);
          sub_1BFF235F0(v43 + OBJC_IVAR____TtC8NewsFeed39FormatSupplementaryNodeLayoutAttributes_rubberbandTrait, v131, &qword_1EB882B90, MEMORY[0x1E4FAD628]);
          long long v92 = *(double **)(v43 + 16);
          double v93 = v92[2];
          double v94 = v92[3];
          double v95 = v92[4];
          double v96 = v92[5];
          uint64_t v97 = *((void *)v92 + 7);
          unint64_t v123 = *((void *)v92 + 6);
          uint64_t v121 = v97;
          unint64_t v98 = *((void *)v92 + 11);
          uint64_t v125 = *((void *)v92 + 10);
          uint64_t v99 = *((void *)v92 + 13);
          uint64_t v124 = *((void *)v92 + 12);
          uint64_t v122 = v99;
          uint64_t v100 = *((void *)v92 + 14);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          unint64_t v101 = v98;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_retain();
          uint64_t v102 = v139;
          uint64_t v120 = sub_1BFFC2FD8(v100, v25, v26);
          swift_bridgeObjectRelease();
          *(void *)&long long v145 = *(void *)(*(void *)(v43 + 16) + 120);
          sub_1C12A7FB8(0, (unint64_t *)&qword_1EB890098, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, MEMORY[0x1E4FBB320]);
          uint64_t v119 = v52;
          sub_1BFF87C24();
          swift_bridgeObjectRetain();
          uint64_t v103 = v133;
          unint64_t v104 = sub_1C151E92C();
          MEMORY[0x1F4188790](v104);
          uint64_t v114 = v102;
          uint64_t v105 = sub_1BFF87CAC((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BFF87E60, (uint64_t)(&v115 - 4), v104);
          uint64_t v133 = v103;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          LOBYTE(v98) = *(unsigned char *)(*(void *)(v43 + 16) + 128);
          sub_1BFF887CC(0, &qword_1EB88C228, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(void, uint64_t))type metadata accessor for FormatDataLayoutAttributes);
          swift_allocObject();
          sub_1BFFC88A8((uint64_t)v149);
          uint64_t v106 = sub_1C12A9CB4(v123, v121, v125, v101, v124, v122, v93, v94, v95, v96, v25, v26, v120, v105, v149, v98);
          sub_1BFFC8808((uint64_t)v149);
          swift_bridgeObjectRelease();
          *(void *)&long long v145 = v119;
          *((void *)&v145 + 1) = v137;
          uint64_t v146 = v136;
          type metadata accessor for FormatSupplementaryNodeDataLayoutAttributes();
          swift_allocObject();
          sub_1C127AF00(v126, (uint64_t *)&v144, v127, v129, v128, v130, v131, (uint64_t)v106, &v145);
          swift_release();
          swift_release();
          swift_release();
          uint64_t v107 = swift_retain();
          MEMORY[0x1C18C66D0](v107);
          if (*(void *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v147 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C151EC8C();
          }
          sub_1C151ECEC();
          sub_1C151EBEC();
          sub_1BFFC8808((uint64_t)v149);
          swift_release();
          swift_release();
LABEL_36:
          swift_release();
          uint64_t v15 = v134;
          uint64_t v24 = v135;
          goto LABEL_5;
        }
        sub_1C017C418(v52, v137);
        sub_1BFF1BA48((uint64_t)v87, (uint64_t (*)(void))type metadata accessor for FormatNodeStateData.Data);
      }
      swift_release();
      swift_release();
      uint64_t v15 = v134;
LABEL_5:
      if (v141 == ++v27)
      {
        swift_bridgeObjectRelease();
        unint64_t v21 = v148;
        goto LABEL_43;
      }
    }
    swift_retain();
    swift_retain();
LABEL_25:
    uint64_t v52 = 0;
    uint64_t v137 = 0;
    uint64_t v136 = 0;
    goto LABEL_26;
  }
LABEL_43:
  if ((v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v108 = (uint64_t)sub_1C00B3214(v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v108 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  *(void *)&long long v145 = v108;
  uint64_t v109 = v133;
  sub_1C12A0764((uint64_t *)&v145, (uint64_t (*)(uint64_t))sub_1BFEAF960, (void (*)(void))type metadata accessor for FormatItemNodeDataLayoutAttributes, &OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes, (void (*)(void, void, void))sub_1C0635DA8);
  if (v109)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v110 = v145;
    unint64_t v111 = v147;
    if ((v147 & 0x8000000000000000) != 0 || (v147 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v112 = (uint64_t)sub_1C00B31C0(v111);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v112 = v147 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
    }
    *(void *)&long long v145 = v112;
    sub_1C12A0764((uint64_t *)&v145, (uint64_t (*)(uint64_t))sub_1BFEAF960, (void (*)(void))type metadata accessor for FormatSupplementaryNodeDataLayoutAttributes, &OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes, (void (*)(void, void, void))sub_1C0635DA8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v110;
  }
  return result;
}

uint64_t type metadata accessor for FormatItemNodeDataLayoutAttributes()
{
  uint64_t result = qword_1EB88EC68;
  if (!qword_1EB88EC68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFEAF6E0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v31 = a4;
  uint64_t v32 = a10;
  uint64_t v33 = a8;
  uint64_t v34 = sub_1C151635C();
  uint64_t v18 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a2;
  char v22 = *a6;
  uint64_t v23 = *a9;
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = v21;
  uint64_t v24 = v31;
  *(void *)(v11 + 48) = a3;
  *(void *)(v11 + 56) = v24;
  *(void *)(v11 + 64) = a5;
  *(unsigned char *)(v11 + 72) = v22;
  uint64_t v25 = a7;
  sub_1BFEAF890(a7, v11 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_feedItem, type metadata accessor for FeedItem);
  uint64_t v26 = v32;
  *(void *)(v11 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_zIndex) = v33;
  *(void *)(v11 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_visibility) = v23;
  *(void *)(v11 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes) = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C151634C();
  uint64_t v27 = sub_1C151633C();
  uint64_t v29 = v28;
  sub_1BFEE6798(v25);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v34);
  *(void *)(v11 + 16) = v27;
  *(void *)(v11 + 24) = v29;
  return v11;
}

uint64_t sub_1BFEAF890(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEAF8F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1BFEAF964()
{
}

uint64_t type metadata accessor for FormatSupplementaryNodeDataLayoutAttributes()
{
  uint64_t result = qword_1EB88FCC8;
  if (!qword_1EB88FCC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FormatGroupCollection.subscript.getter(uint64_t a1)
{
  sub_1BFFE6334();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (long long *)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(v1 + 8);
  if (!*(void *)(v7 + 16)) {
    return 0;
  }
  unint64_t v8 = sub_1BFC44E98(a1);
  if ((v9 & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
  int64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v39 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFEAFBDC(0, v11, 0);
    uint64_t v13 = v10 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v14 = *(void *)(v4 + 72);
    uint64_t v12 = v39;
    for (int64_t i = v11 - 1; ; --i)
    {
      sub_1BFFE6274(v13, (uint64_t)v6);
      long long v16 = v6[7];
      long long v36 = v6[6];
      long long v37 = v16;
      long long v38 = v6[8];
      long long v17 = v6[3];
      long long v32 = v6[2];
      long long v33 = v17;
      long long v18 = v6[5];
      long long v34 = v6[4];
      long long v35 = v18;
      long long v19 = v6[1];
      long long v30 = *v6;
      long long v31 = v19;
      sub_1C0187D08((uint64_t)&v30);
      sub_1BFFE62D8((uint64_t)v6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BFEAFBDC(0, *(void *)(v12 + 16) + 1, 1);
        uint64_t v12 = v39;
      }
      unint64_t v21 = *(void *)(v12 + 16);
      unint64_t v20 = *(void *)(v12 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1BFEAFBDC(v20 > 1, v21 + 1, 1);
        uint64_t v12 = v39;
      }
      *(void *)(v12 + 16) = v21 + 1;
      char v22 = (_OWORD *)(v12 + 144 * v21);
      v22[2] = v30;
      long long v23 = v31;
      long long v24 = v32;
      long long v25 = v34;
      v22[5] = v33;
      v22[6] = v25;
      v22[3] = v23;
      void v22[4] = v24;
      long long v26 = v35;
      long long v27 = v36;
      long long v28 = v38;
      v22[9] = v37;
      v22[10] = v28;
      v22[7] = v26;
      unsigned char v22[8] = v27;
      if (!i) {
        break;
      }
      v13 += v14;
    }
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1BFEAFBDC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFEAFBFC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BFEAFBFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, (unint64_t *)&unk_1EB87A6A0, (uint64_t)&type metadata for FormatGroup, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 144);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[144 * v8]) {
      memmove(v12, v13, 144 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[144 * v8] || v12 >= &v13[144 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFEAFDA8(uint64_t a1)
{
  return FeedDatabase.read(cacheKey:)(a1);
}

uint64_t FeedDatabase.read(cacheKey:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedLayoutCacheKey();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0A8CF60(a1, (uint64_t)v4);
  uint64_t v6 = v4[2];
  uint64_t v5 = v4[3];
  uint64_t v14 = v4[12];
  swift_bridgeObjectRetain();
  uint64_t v7 = UIContentSizeCategory.description.getter();
  uint64_t v9 = v8;
  uint64_t v15 = v4[6];
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879F20);
  sub_1BFD989C8((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C151E55C();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  sub_1C0A8CFC4((uint64_t)v4);
  uint64_t v15 = v6;
  uint64_t v16 = v5;
  uint64_t v17 = v14;
  uint64_t v18 = v7;
  uint64_t v19 = v9;
  uint64_t v20 = v10;
  uint64_t v21 = v12;
  sub_1C1518DCC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FeedDatabase.erase()()
{
  uint64_t v2 = *v0;
  sub_1C151F38C();
  sub_1C15197BC();
  uint64_t v3 = sub_1BFEB00CC();
  if (!v1)
  {
    uint64_t v4 = v3;
    uint64_t v5 = swift_allocObject();
    swift_weakInit();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = *(void *)(v2 + 80);
    *(void *)(v6 + 24) = *(void *)(v2 + 88);
    *(_OWORD *)(v6 + 32) = *(_OWORD *)(v2 + 96);
    *(void *)(v6 + 48) = *(void *)(v2 + 112);
    *(_OWORD *)(v6 + 56) = *(_OWORD *)(v2 + 120);
    *(void *)(v6 + 72) = *(void *)(v2 + 136);
    *(void *)(v6 + 80) = v5;
    *(void *)(v6 + 88) = v4;
    swift_retain();
    swift_retain();
    sub_1BFEB0134((uint64_t)sub_1BFCE8668, v6);
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1BFEB00CC()
{
  sub_1C1518CEC();
  if (v2) {
    swift_willThrow();
  }
  return v1;
}

void sub_1BFEB0134(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = *(void *)(v6 + 80);
  v8[3] = *(void *)(v6 + 88);
  v8[4] = v7;
  v8[5] = a1;
  v8[6] = a2;
  sub_1BFEB0268(0, &qword_1EB863DD8, MEMORY[0x1E4FAACA8]);
  id v10 = objc_allocWithZone(v9);
  swift_retain();
  id v11 = (id)sub_1C15189CC();
  objc_msgSend((id)v3[10], sel_addOperation_, v11);
}

void sub_1BFEB0268(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBC848] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1BFEB02BC()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BFEB02C8()
{
  unint64_t result = qword_1EB8799C0;
  if (!qword_1EB8799C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8799C0);
  }
  return result;
}

unint64_t sub_1BFEB031C()
{
  unint64_t result = qword_1EB873508[0];
  if (!qword_1EB873508[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EB873508);
  }
  return result;
}

uint64_t sub_1BFEB0370(void *a1)
{
  return sub_1BFEB0390(a1, *(uint64_t **)(v1 + 16)) & 1;
}

uint64_t sub_1BFEB0390(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (sub_1C151811C() == v3 && v4 == v2)
  {
    swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v6 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    char v7 = v6 ^ 1;
  }
  return v7 & 1;
}

double sub_1BFEB0428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for GroupLayoutBindingContext();
  uint64_t v9 = *(int *)(v8 + 56);
  uint64_t v10 = *(void *)(v3 + v9);
  uint64_t v11 = *(void *)(v10 + 16);
  swift_bridgeObjectRetain();
  if (v11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1BFEA34E4(0x70614764656546, 0xE700000000000000, a2, a3);
    if (v13)
    {
      uint64_t v14 = *(void **)(*(void *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  }
  sub_1BFEB0734(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v14 = sub_1BFEA4268(0, v14[2] + 1, 1, v14);
  }
  unint64_t v16 = v14[2];
  unint64_t v15 = v14[3];
  uint64_t v29 = a2;
  if (v16 >= v15 >> 1) {
    uint64_t v14 = sub_1BFEA4268((void *)(v15 > 1), v16 + 1, 1, v14);
  }
  long long v31 = &type metadata for FeedGap;
  unint64_t v17 = sub_1BFFFEAC0();
  unint64_t v32 = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)&long long v30 = v18;
  long long v19 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v18 + 32) = v19;
  *(_OWORD *)(v18 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v18 + 64) = *(void *)(a1 + 48);
  v14[2] = v16 + 1;
  sub_1BFC773DC(&v30, (uint64_t)&v14[5 * v16 + 4]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v30 = *(void *)(v4 + v9);
  *(void *)(v4 + v9) = 0x8000000000000000;
  sub_1BFEA3344((uint64_t)v14, 0x70614764656546, 0xE700000000000000, v29, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + v9) = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = swift_allocObject();
  long long v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v21 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v21 + 32) = v22;
  *(_OWORD *)(v21 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v21 + 64) = *(void *)(a1 + 48);
  uint64_t v23 = *(int *)(v8 + 60);
  long long v24 = *(void **)(v4 + v23);
  sub_1BFEB0734(a1);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v24 = sub_1BFEA36BC(0, v24[2] + 1, 1, v24);
  }
  unint64_t v26 = v24[2];
  unint64_t v25 = v24[3];
  if (v26 >= v25 >> 1) {
    long long v24 = sub_1BFEA36BC((void *)(v25 > 1), v26 + 1, 1, v24);
  }
  long long v24[2] = v26 + 1;
  long long v27 = &v24[9 * v26];
  v27[4] = 0x70614764656546;
  v27[5] = 0xE700000000000000;
  v27[6] = v29;
  v27[7] = a3;
  v27[8] = v21;
  double result = *(double *)&v30;
  *(_OWORD *)(v27 + 9) = v30;
  v27[11] = &type metadata for FeedGap;
  v27[12] = v17;
  *(void *)(v4 + v23) = v24;
  return result;
}

uint64_t sub_1BFEB0734(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  sub_1BFF7FF04(v2, v3);
  return a1;
}

uint64_t sub_1BFEB077C@<X0>(unsigned char *a1@<X8>)
{
  void (*v21)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  long long v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned char *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  unsigned char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  long long v47;
  unsigned char *v48;
  long long v49;
  uint64_t v50;
  uint64_t v51;
  long long v52;
  uint64_t v53;
  uint64_t v54;
  long long v55;
  unsigned char v56[40];
  void v57[6];
  long long v58[2];
  long long v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _UNKNOWN **v67;

  uint64_t v48 = a1;
  *(void *)&uint64_t v47 = sub_1C1517A9C();
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v44 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = _s3GapV5BoundVMa(0);
  uint64_t v4 = *(int *)(v3 + 20);
  uint64_t v5 = (uint64_t *)(v1 + *(int *)(v3 + 24));
  uint64_t v6 = v5[1];
  uint64_t v7 = v5[2];
  uint64_t v40 = *v5;
  uint64_t v41 = v7;
  uint64_t v42 = v5[3];
  uint64_t v43 = *((unsigned __int8 *)v5 + 32);
  uint64_t v9 = v5[5];
  unint64_t v8 = v5[6];
  long long v36 = v9;
  uint64_t v39 = v8;
  uint64_t v10 = v1 + v4;
  uint64_t v11 = type metadata accessor for GroupLayoutContext();
  uint64_t v12 = *(int *)(v11 + 40);
  uint64_t v13 = v10;
  uint64_t v46 = v10;
  uint64_t v14 = *(void *)(*(void *)(v10 + v12) + 16);
  double v15 = *(double *)(v13 + *(int *)(v11 + 32));
  sub_1BFC66384(v14 + 16, (uint64_t)&v49);
  sub_1BFC66384(v14 + 56, (uint64_t)v58);
  double v16 = v15 * *(double *)(v14 + 96);
  long long v38 = v56;
  sub_1BFC773DC(&v49, (uint64_t)v56);
  long long v37 = v57;
  sub_1BFC773DC(v58, (uint64_t)v57);
  *(double *)&v57[5] = v16;
  sub_1BFC66384((uint64_t)v57, (uint64_t)&v59);
  uint64_t v17 = type metadata accessor for GapViewStyler();
  uint64_t v18 = swift_allocObject();
  uint64_t v20 = v61;
  uint64_t v19 = v62;
  __swift_project_boxed_opaque_existential_1(&v59, v61);
  uint64_t v21 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v19 + 24);
  swift_bridgeObjectRetain();
  long long v22 = v9;
  uint64_t v23 = v39;
  sub_1BFF7FF04(v22, v39);
  v21(&v55, v20, v19);
  *(_OWORD *)(v18 + 16) = v55;
  sub_1BFC773DC(&v59, v18 + 32);
  uint64_t v66 = v17;
  uint64_t v67 = &off_1F1C2ACD8;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  unint64_t v64 = v23;
  uint64_t v65 = v18;
  *(void *)&unint64_t v59 = v40;
  *((void *)&v59 + 1) = v6;
  double v60 = v41;
  double v61 = v42;
  LOBYTE(v62) = v43;
  double v63 = v36;
  (*(void (**)(char *, void, void))(v45 + 104))(v44, *MEMORY[0x1E4FAB8F8], v47);
  sub_1BFEB13D8();
  swift_allocObject();
  sub_1C1517BEC();
  sub_1C1517BFC();
  swift_release();
  long long v24 = v49;
  unint64_t v25 = v50;
  unint64_t v26 = v51;
  uint64_t v47 = v52;
  long long v27 = v53;
  long long v28 = v54;
  sub_1BFEB0F38(0, (unint64_t *)&unk_1EB87A620, MEMORY[0x1E4FBBE00]);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1C1529AE0;
  long long v30 = swift_allocObject();
  sub_1BFEB1214((uint64_t)&v59, v30 + 16);
  *(_OWORD *)(v30 + 112) = v24;
  *(void *)(v30 + 128) = v25;
  *(void *)(v30 + 136) = v26;
  *(_OWORD *)(v30 + 144) = v47;
  *(void *)(v30 + 160) = v27;
  *(void *)(v30 + 168) = v28;
  *(void *)(v29 + 32) = v30 | 0x1000000000000000;
  *(void *)&unint64_t v49 = v29;
  sub_1BFEB0F38(0, (unint64_t *)&qword_1EB879CB0, MEMORY[0x1E4FBB320]);
  sub_1BFEB1028();
  sub_1BFEB0FD4();
  long long v31 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  unint64_t v32 = v48;
  *uint64_t v48 = 0;
  *(_OWORD *)(v32 + 8) = v24;
  *((void *)v32 + 3) = v25;
  *((void *)v32 + 4) = v26;
  long long v33 = MEMORY[0x1E4FBC860];
  *((void *)v32 + 5) = v31;
  *((void *)v32 + 6) = v33;
  return sub_1BFEB1174((uint64_t)&v59);
}

uint64_t sub_1BFEB0B8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C1517A9C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedBannerAdViewLayout.Attributes(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedBannerAdViewLayout.Context(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s2AdV5BoundVMa();
  sub_1BFF1EB78(v1 + *(int *)(v13 + 24), (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  uint64_t v14 = v1 + *(int *)(v13 + 20);
  uint64_t v27 = *(void *)(*(void *)(v14 + *(int *)(type metadata accessor for GroupLayoutContext() + 40)) + 24);
  long long v28 = v12;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FAB8F8], v3);
  sub_1BFEB109C();
  swift_allocObject();
  swift_retain();
  sub_1C1517BEC();
  swift_release();
  sub_1C1517BFC();
  swift_release();
  long long v26 = *(_OWORD *)v9;
  uint64_t v15 = *((void *)v9 + 2);
  uint64_t v16 = *((void *)v9 + 3);
  sub_1BFEB0F38(0, (unint64_t *)&unk_1EB87A620, MEMORY[0x1E4FBBE00]);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1C1529AE0;
  sub_1BFE29A3C();
  uint64_t v19 = v18;
  uint64_t v20 = swift_allocBox();
  uint64_t v22 = v21 + *(int *)(v19 + 48);
  sub_1BFF1EB78((uint64_t)v12, v21, type metadata accessor for FeedBannerAdViewLayout.Context);
  sub_1BFF1EB78((uint64_t)v9, v22, type metadata accessor for FeedBannerAdViewLayout.Attributes);
  *(void *)(v17 + 32) = v20 | 0x3000000000000000;
  uint64_t v29 = v17;
  sub_1BFEB0F38(0, (unint64_t *)&qword_1EB879CB0, MEMORY[0x1E4FBB320]);
  sub_1BFEB1028();
  sub_1BFEB0FD4();
  uint64_t v23 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  *(unsigned char *)a1 = 0;
  *(_OWORD *)(a1 + 8) = v26;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v16;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 40) = v23;
  *(void *)(a1 + 48) = v24;
  sub_1BFF1F164((uint64_t)v9, type metadata accessor for FeedBannerAdViewLayout.Attributes);
  return sub_1BFF1F164((uint64_t)v12, type metadata accessor for FeedBannerAdViewLayout.Context);
}

void sub_1BFEB0F38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for FeedItemLayoutAttributes);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t _s2AdV5BoundVMa()
{
  uint64_t result = qword_1EB873F48;
  if (!qword_1EB873F48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1BFEB0FD4()
{
  unint64_t result = qword_1EB872F80;
  if (!qword_1EB872F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB872F80);
  }
  return result;
}

unint64_t sub_1BFEB1028()
{
  unint64_t result = qword_1EB879CC0;
  if (!qword_1EB879CC0)
  {
    sub_1BFEB0F38(255, (unint64_t *)&qword_1EB879CB0, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879CC0);
  }
  return result;
}

void sub_1BFEB109C()
{
  if (!qword_1EB871348)
  {
    type metadata accessor for FeedBannerAdViewLayout.Attributes(255);
    sub_1BFE123B0();
    sub_1BFFFDACC(&qword_1EB872A20, (void (*)(uint64_t))type metadata accessor for FeedBannerAdViewLayout.Attributes);
    unint64_t v0 = sub_1C1517C1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871348);
    }
  }
}

uint64_t _s3GapV5BoundVMa(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB874008);
}

uint64_t sub_1BFEB1174(uint64_t a1)
{
  return a1;
}

uint64_t destroy for GapViewLayout.Context(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 48) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1(a1 + 56);
}

uint64_t sub_1BFEB1214(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t initializeWithCopy for GapViewLayout.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = (void *)(a2 + 40);
  unint64_t v7 = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  if (v7 >= 0x11)
  {
    *(void *)(a1 + 40) = *v6;
    *(void *)(a1 + 48) = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v6;
  }
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 56, a2 + 56);
  return a1;
}

uint64_t sub_1BFEB1328(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for GapViewStyler()
{
  return self;
}

uint64_t sub_1BFEB1394(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  unint64_t v3 = *(void *)(a1 + 48);
  swift_bridgeObjectRelease();
  sub_1BFEEFC20(v2, v3);
  return a1;
}

void sub_1BFEB13D8()
{
  if (!qword_1EB871340)
  {
    sub_1BFCB56FC();
    sub_1BFCB5750();
    unint64_t v0 = sub_1C1517C1C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871340);
    }
  }
}

void sub_1BFEB1454()
{
  if (!qword_1EB880E40)
  {
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB880E40);
    }
  }
}

unint64_t sub_1BFEB14BC()
{
  unint64_t result = qword_1EB8797F8;
  if (!qword_1EB8797F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8797F8);
  }
  return result;
}

void *sub_1BFEB1520()
{
  uint64_t v1 = *(void **)v0;
  int v2 = *(unsigned __int8 *)(v0 + 25);
  sub_1BFEB1904(0, (unint64_t *)&unk_1EB87C388, (uint64_t (*)(uint64_t))sub_1C0065420, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152A660;
  *(void *)(inited + 32) = 0x7972616D697270;
  *(void *)(inited + 40) = 0xE700000000000000;
  *(void *)(inited + 48) = objc_msgSend(v1, sel_coverImagePrimaryColor);
  *(void *)(inited + 56) = 0x756F72676B636162;
  *(void *)(inited + 64) = 0xEA0000000000646ELL;
  *(void *)(inited + 72) = objc_msgSend(v1, sel_coverImageBackgroundColor);
  *(void *)(inited + 80) = 1954047348;
  *(void *)(inited + 88) = 0xE400000000000000;
  *(void *)(inited + 96) = objc_msgSend(v1, sel_coverImageTextColor);
  *(void *)(inited + 104) = 0x746E65636361;
  *(void *)(inited + 112) = 0xE600000000000000;
  *(void *)(inited + 120) = objc_msgSend(v1, sel_coverImageAccentColor);
  unint64_t v4 = sub_1BFEB1ED0(inited);
  uint64_t v5 = sub_1BFEB1968(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_1C0FBA3D4((uint64_t)v5);
  swift_release();
  if (v2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_1BFEF9B68(0, v6[2] + 1, 1, v6);
    }
    unint64_t v8 = v6[2];
    unint64_t v7 = v6[3];
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_1BFEF9B68((void *)(v7 > 1), v8 + 1, 1, v6);
    }
    v6[2] = v8 + 1;
    uint64_t v9 = &v6[2 * v8];
    v9[4] = 0x6D75696D657270;
    v9[5] = 0xE700000000000000;
  }
  sub_1C15200FC();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(objc_msgSend(v1, sel_sourceChannel), sel_identifier);
  swift_unknownObjectRelease();
  sub_1C151E62C();

  sub_1C151E80C();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = sub_1BFEF9B68(0, v6[2] + 1, 1, v6);
  }
  unint64_t v12 = v6[2];
  unint64_t v11 = v6[3];
  if (v12 >= v11 >> 1) {
    uint64_t v6 = sub_1BFEF9B68((void *)(v11 > 1), v12 + 1, 1, v6);
  }
  v6[2] = v12 + 1;
  uint64_t v13 = &v6[2 * v12];
  v13[4] = 0xD000000000000012;
  v13[5] = 0x80000001C1605D80;
  return v6;
}

void sub_1BFEB183C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEB18A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEB1904(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t *sub_1BFEB1968(uint64_t isStackAllocationSafe)
{
  int v2 = (unint64_t *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1BFEB1AC0((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    int v2 = sub_1BFEB1AC0((unint64_t *)v7, v4, (uint64_t)v2);
    MEMORY[0x1C18C9B00](v7, -1, -1);
  }
  return v2;
}

unint64_t *sub_1BFEB1AC0(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_1BFEB1C0C(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_1BFEB1C0C(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_1BFEB1C0C(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(void *)(*(void *)(a3 + 56) + 8 * v12))
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1BFEB1C0C(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_1BFEB1C0C(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_1BFEB1C0C(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1BFEB1C0C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x1E4FBC868];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1C05F46CC(0, (unint64_t *)&qword_1EB87C360, (void (*)(uint64_t))sub_1C0063AD8);
  uint64_t result = sub_1C152050C();
  uint64_t v8 = result;
  uint64_t v32 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v32) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v32) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v32) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v32) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v32) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void **)(*(void *)(v4 + 56) + 8 * v13);
    sub_1C1520DBC();
    id v21 = v20;
    swift_bridgeObjectRetain();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v22 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    long long v30 = (void *)(*(void *)(v8 + 48) + 16 * v25);
    *long long v30 = v19;
    v30[1] = v18;
    *(void *)(*(void *)(v8 + 56) + 8 * v25) = v20;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1BFEB1ED0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1BFEB1FE4();
  int v2 = (void *)sub_1C152050C();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    id v8 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1BFEF2D8C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1BFEB1FE4()
{
  if (!qword_1EB87C360)
  {
    sub_1C0064840(255, (unint64_t *)&qword_1EB880DB0, (unint64_t *)&unk_1EB880DA0, 0x1E4F7E328, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C360);
    }
  }
}

uint64_t sub_1BFEB2078()
{
  int v1 = *(unsigned __int8 *)(v0 + 136);
  sub_1BFE9DF08(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBBE00]);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_1C1529AE0;
  unint64_t v3 = 0xD000000000000012;
  if (v1) {
    unint64_t v3 = 0xD000000000000015;
  }
  unint64_t v4 = 0x80000001C1605C40;
  if (v1) {
    unint64_t v4 = 0x80000001C1605C20;
  }
  *(void *)(result + 32) = v3;
  *(void *)(result + 40) = v4;
  return result;
}

double sub_1BFEB2110@<D0>(unsigned char *a1@<X8>)
{
  long long v36 = a1;
  uint64_t v35 = sub_1C1517A9C();
  *(void *)&long long v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  unint64_t v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C001809C(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v5 = type metadata accessor for A6_V4.Bound();
  uint64_t v6 = v1 + *(int *)(v5 + 24);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = *(int *)(v7 + 40);
  uint64_t v9 = v6;
  v33[1] = v6;
  uint64_t v10 = *(void *)(v6 + v8);
  uint64_t v11 = *(void *)(v10 + 16);
  double v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BFC66384(v11 + 16, (uint64_t)&v42);
  sub_1BFC66384(v11 + 56, (uint64_t)v41);
  double v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v42, v14 + 16);
  sub_1BFC773DC(v41, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v40[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v40, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v10 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v41);
  sub_1BFC66384(v15 + 56, (uint64_t)v40);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v41, v17 + 16);
  sub_1BFC773DC(v40, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v39[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v39, (uint64_t *)&v42);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  uint64_t v18 = v33[0];
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v19 = sub_1BFEB3714((uint64_t)&v42, *(void *)(*(void *)(v18 + *(int *)(v5 + 28)) + 16) - 1);
  *(void *)&long long v42 = inited;
  sub_1BFEB37F8(v19);
  uint64_t v20 = v42;
  void v38[2] = v18;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C06472C0(v21, v20, (void (*)(char *, uint64_t))sub_1BFEB38F8, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = *MEMORY[0x1E4FAB6D8];
  uint64_t v24 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v3, v23, v24);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v3, *MEMORY[0x1E4FAB8F0], v35);
  uint64_t v37 = v22;
  sub_1BFCA442C(0, &qword_1EB85E320, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v35 = sub_1C1517BEC();
  uint64_t v25 = sub_1C1517BFC();
  long long v34 = v42;
  uint64_t v26 = v43;
  uint64_t v27 = v44;
  *(void *)&long long v42 = v22;
  *(void *)&v41[0] = v45;
  MEMORY[0x1F4188790](v25);
  sub_1C001809C(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v42 = v28;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v29 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v30 = v36;
  *long long v36 = 0;
  double result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v27;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  *((void *)v30 + 5) = v29;
  *((void *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1BFEB26B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v27 = a1;
  uint64_t v26 = sub_1C1517A9C();
  uint64_t v3 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for A6_V1.Bound();
  uint64_t v7 = v1 + *(int *)(v6 + 24);
  uint64_t v8 = type metadata accessor for GroupLayoutContext();
  uint64_t v9 = *(void *)(*(void *)(v7 + *(int *)(v8 + 40)) + 16);
  double v10 = *(double *)(v7 + *(int *)(v8 + 32));
  sub_1BFC66384(v9 + 16, (uint64_t)&v34);
  sub_1BFC66384(v9 + 56, (uint64_t)v33);
  double v11 = v10 * *(double *)(v9 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t inited = swift_initStackObject();
  sub_1BFC773DC(&v34, inited + 16);
  sub_1BFC773DC(v33, inited + 56);
  *(double *)(inited + 96) = v11;
  v32[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v32, v38);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(inited + 16);
  __swift_destroy_boxed_opaque_existential_1(inited + 56);
  uint64_t v13 = *(void *)(v2 + *(int *)(v6 + 28));
  v30[2] = v2;
  v30[3] = v38;
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C0182EAC((void (*)(uint64_t))sub_1C003284C, (uint64_t)v30, v13, (uint64_t)&v31);
  swift_bridgeObjectRelease();
  uint64_t v15 = *MEMORY[0x1E4FAB6D8];
  uint64_t v16 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v5, v15, v16);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FAB8F0], v26);
  uint64_t v28 = v14;
  uint64_t v29 = v2;
  sub_1BFD5DF64(0, &qword_1EB85E318, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v26 = sub_1C1517BEC();
  uint64_t v17 = sub_1C1517BFC();
  long long v25 = v34;
  uint64_t v18 = v35;
  uint64_t v19 = v36;
  *(void *)&long long v34 = v14;
  *(void *)&v33[0] = v37;
  MEMORY[0x1F4188790](v17);
  sub_1C00192A8(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v34 = v20;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v21 = sub_1C151E91C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = v27;
  *uint64_t v27 = 0;
  *(_OWORD *)(v22 + 8) = v25;
  *((void *)v22 + 3) = v18;
  *((void *)v22 + 4) = v19;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  *((void *)v22 + 5) = v21;
  *((void *)v22 + 6) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_1BFEB2B48(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFC6CA08(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1BFEB2B98@<D0>(unsigned char *a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v35 = sub_1C1517A9C();
  *(void *)&long long v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C00191E0(0, (unint64_t *)&qword_1EB87A800, (uint64_t (*)(uint64_t))sub_1C00737F8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
  uint64_t v5 = type metadata accessor for A6_V3.Bound();
  uint64_t v6 = v1 + *(int *)(v5 + 24);
  uint64_t v7 = type metadata accessor for GroupLayoutContext();
  uint64_t v8 = *(int *)(v7 + 40);
  uint64_t v9 = v6;
  v33[1] = v6;
  uint64_t v10 = *(void *)(v6 + v8);
  uint64_t v11 = *(void *)(v10 + 16);
  double v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BFC66384(v11 + 16, (uint64_t)&v42);
  sub_1BFC66384(v11 + 56, (uint64_t)v41);
  double v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  uint64_t v14 = swift_initStackObject();
  sub_1BFC773DC(&v42, v14 + 16);
  sub_1BFC773DC(v41, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v40[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v40, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  uint64_t v15 = *(void *)(v10 + 16);
  sub_1BFC66384(v15 + 16, (uint64_t)v41);
  sub_1BFC66384(v15 + 56, (uint64_t)v40);
  double v16 = v12 * *(double *)(v15 + 96);
  uint64_t v17 = swift_initStackObject();
  sub_1BFC773DC(v41, v17 + 16);
  sub_1BFC773DC(v40, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v39[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v39, (uint64_t *)&v42);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  uint64_t v18 = v33[0];
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  uint64_t v19 = sub_1BFEB3714((uint64_t)&v42, *(void *)(*(void *)(v18 + *(int *)(v5 + 28)) + 16) - 1);
  *(void *)&long long v42 = inited;
  sub_1BFEB37F8(v19);
  uint64_t v20 = v42;
  void v38[2] = v18;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_1C06472C0(v21, v20, (void (*)(char *, uint64_t))sub_1BFEB3820, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v23 = *MEMORY[0x1E4FAB6D8];
  uint64_t v24 = sub_1C151759C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v3, v23, v24);
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v3, *MEMORY[0x1E4FAB8F0], v35);
  uint64_t v37 = v22;
  sub_1BFD5D4A8(0, &qword_1EB871350, MEMORY[0x1E4FAB938]);
  swift_allocObject();
  uint64_t v35 = sub_1C1517BEC();
  uint64_t v25 = sub_1C1517BFC();
  long long v34 = v42;
  uint64_t v26 = v43;
  uint64_t v27 = v44;
  *(void *)&long long v42 = v22;
  *(void *)&v41[0] = v45;
  MEMORY[0x1F4188790](v25);
  sub_1C00191E0(0, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
  sub_1BFC6CA08(0, &qword_1EB879DF0);
  sub_1BFEB368C();
  sub_1BFEB2B48(&qword_1EB879DF8, &qword_1EB879DF0);
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_1C151951C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v42 = v28;
  sub_1BFC6CA08(0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB2B48((unint64_t *)&qword_1EB879CC0, (unint64_t *)&qword_1EB879CB0);
  sub_1BFEB0FD4();
  uint64_t v29 = sub_1C151E91C();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v30 = v36;
  *uint64_t v36 = 0;
  double result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v27;
  uint64_t v32 = MEMORY[0x1E4FBC860];
  *((void *)v30 + 5) = v29;
  *((void *)v30 + 6) = v32;
  return result;
}

uint64_t FeedLayoutStylerFactory.styler(withHeading:)@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  char v5 = *a1;
  uint64_t v6 = v2[5];
  uint64_t v7 = v2[6];
  __swift_project_boxed_opaque_existential_1(v2 + 2, v6);
  LOBYTE(v19[0]) = v5;
  (*(void (**)(_OWORD *__return_ptr, _OWORD *, uint64_t, uint64_t))(v7 + 8))(v24, v19, v6, v7);
  uint64_t v8 = v25;
  sub_1BFC66384((uint64_t)(v3 + 7), (uint64_t)v21);
  uint64_t v9 = v3[12];
  uint64_t v10 = type metadata accessor for HeadlineViewStyler();
  uint64_t v11 = swift_allocObject();
  long long v12 = v24[1];
  *(_OWORD *)(v11 + 16) = v24[0];
  *(_OWORD *)(v11 + 32) = v12;
  *(void *)(v11 + 48) = v8;
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v14 + 16))(v19, v13, v14);
  uint64_t v15 = v20;
  long long v16 = v19[1];
  *(_OWORD *)(v11 + 56) = v19[0];
  *(_OWORD *)(v11 + 72) = v16;
  long long v17 = v19[3];
  *(_OWORD *)(v11 + 88) = v19[2];
  *(_OWORD *)(v11 + 104) = v17;
  *(_OWORD *)(v11 + 120) = v19[4];
  *(void *)(v11 + 136) = v15;
  sub_1BFC66384((uint64_t)v21, v11 + 152);
  *(void *)(v11 + 144) = v9;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  a2[3] = v10;
  a2[4] = (uint64_t)&off_1F1BF5780;
  *a2 = v11;
  return result;
}

uint64_t type metadata accessor for HeadlineViewStyler()
{
  return self;
}

void sub_1BFEB32B0(NewsFeed::Heading a1@<W0>, NewsFeed::HeadlineFontBook *a2@<X8>)
{
}

void __swiftcall DefaultFontBook.headlineFontBook(heading:)(NewsFeed::HeadlineFontBook *__return_ptr retstr, NewsFeed::Heading heading)
{
  if (*(unsigned __int8 *)heading - 2 >= 4)
  {
    if (*(unsigned char *)heading)
    {
      sub_1BFF63CD0();
      uint64_t v3 = (objc_class *)sub_1C151F87C();
      uint64_t v4 = self;
      double v5 = *MEMORY[0x1E4FB09D8];
      uint64_t v6 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 15.0, *MEMORY[0x1E4FB09D8]);
      uint64_t v7 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 11.0, *MEMORY[0x1E4FB09D0]);
    }
    else
    {
      sub_1BFF63CD0();
      uint64_t v3 = (objc_class *)sub_1C151F87C();
      uint64_t v4 = self;
      double v5 = *MEMORY[0x1E4FB09D8];
      uint64_t v6 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 20.0, *MEMORY[0x1E4FB09D8]);
      uint64_t v7 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 11.0, *MEMORY[0x1E4FB09E0]);
    }
    id v8 = objc_msgSend(v4, sel_systemFontOfSize_, 11.0);
  }
  else
  {
    sub_1BFF63CD0();
    uint64_t v3 = (objc_class *)sub_1C151F87C();
    uint64_t v4 = self;
    double v5 = *MEMORY[0x1E4FB09D8];
    uint64_t v6 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 15.0, *MEMORY[0x1E4FB09D8]);
    uint64_t v7 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 11.0, *MEMORY[0x1E4FB09D0]);
    id v8 = objc_msgSend(v4, sel_systemFontOfSize_, 11.0);
  }
  uint64_t v9 = (objc_class *)v8;
  uint64_t v10 = (objc_class *)objc_msgSend(v4, sel_systemFontOfSize_weight_, 13.0, v5);
  retstr->titleFont.super.isa = v3;
  retstr->excerptFont.super.isa = v6;
  retstr->accessoryFont.super.isa = v7;
  retstr->publisherFont.super.isa = v9;
  retstr->adBadgeFont.super.isa = v10;
}

uint64_t sub_1BFEB3578(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C01BCA00(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEB35D0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C01BCA00(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEB3634(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C0FC6C60(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BFEB368C()
{
  unint64_t result = qword_1EB879E10;
  if (!qword_1EB879E10)
  {
    sub_1C00191E0(255, &qword_1EB879E08, type metadata accessor for HeadlineViewLayout.Context, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879E10);
  }
  return result;
}

uint64_t sub_1BFEB3714(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_1C15203FC();
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    if (a2)
    {
      sub_1BFC845BC(0, (unint64_t *)&qword_1EB877A00);
      uint64_t v4 = sub_1C151ECCC();
      *(void *)(v4 + 16) = v2;
      uint64_t v5 = v4 + 32;
      do
      {
        sub_1BFC66384(a1, v5);
        v5 += 40;
        --v2;
      }
      while (v2);
    }
    else
    {
      uint64_t v4 = MEMORY[0x1E4FBC860];
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
    return v4;
  }
  return result;
}

uint64_t sub_1BFEB37F8(uint64_t a1)
{
  return sub_1BFEFCA3C(a1, (uint64_t (*)(void))sub_1C0EE257C, (unint64_t *)&qword_1EB877A00);
}

uint64_t sub_1BFEB3820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1BFEB3828(a1, a2, a3);
}

uint64_t sub_1BFEB3828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1B27C(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1BFEB38F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1BFEB3900(a1, a2, a3);
}

uint64_t sub_1BFEB3900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v6 - 8);
  id v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BFF1AFA4(a1, (uint64_t)v8, type metadata accessor for FeedHeadline);
  sub_1BFC66384(a2, (uint64_t)v12);
  uint64_t v9 = swift_retain();
  return HeadlineViewLayout.Context.init(key:model:styler:)(v9, (uint64_t)v8, (uint64_t)v12, a3);
}

uint64_t sub_1BFEB39D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSourceMapNode.init(from:)(a1, a2);
}

uint64_t FormatSourceMapNode.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEB3C34(0, (unint64_t *)&unk_1EB884C50, (uint64_t (*)(void))sub_1BFEB3C9C, (uint64_t)&type metadata for FormatSourceMapNode.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  sub_1BFC66384((uint64_t)a1, (uint64_t)&v18);
  FormatNode.init(from:)(&v18, &v21);
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = a2;
  uint64_t v17 = v7;
  unint64_t v11 = v21;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB3C9C();
  swift_retain();
  sub_1C1520EBC();
  sub_1BFEB3CF0();
  sub_1C152065C();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v6);
  unint64_t v12 = v18;
  unint64_t v13 = v20;
  uint64_t v14 = (unint64_t *)v16;
  *(_OWORD *)(v16 + 16) = v19;
  *uint64_t v14 = v11;
  v14[1] = v12;
  void v14[4] = v13;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1BFEB3C34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1BFEB3C9C()
{
  unint64_t result = qword_1EB884A50;
  if (!qword_1EB884A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB884A50);
  }
  return result;
}

unint64_t sub_1BFEB3CF0()
{
  unint64_t result = qword_1EB8813B0;
  if (!qword_1EB8813B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB8813B0);
  }
  return result;
}

uint64_t FormatColor.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v54 = a2;
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v53 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  if (v2)
  {
LABEL_22:
    sub_1C0038728(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_1C1520EAC();
  char v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v6;
  if (v11)
  {
    uint64_t v13 = sub_1C152070C();
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14)
    {
      uint64_t v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        unint64_t v16 = *v15;
        if (*v15 >= 4) {
          break;
        }
        v15 += 2;
        if (!--v14) {
          goto LABEL_7;
        }
      }
      uint64_t v20 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      uint64_t v3 = (void *)swift_allocError();
      *(void *)uint64_t v21 = v20;
      *(void *)(v21 + 8) = v16;
      *(void *)(v21 + 16) = &unk_1F1B843C8;
      *(_OWORD *)(v21 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v20, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      goto LABEL_22;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1C087AD00();
  long long v55 = 0uLL;
  sub_1C15206EC();
  uint64_t v17 = v54;
  switch((char)v59)
  {
    case 1:
      sub_1BFEFF3E8(0, &qword_1EB891390, (uint64_t (*)(void))sub_1C087B428, (uint64_t)&type metadata for FormatSystemColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
      long long v59 = xmmword_1C152C800;
      sub_1C087B47C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      char v22 = v55;
      uint64_t v23 = *((void *)&v55 + 1);
      char v24 = v56;
      uint64_t v25 = swift_allocObject();
      *(unsigned char *)(v25 + 16) = v22;
      *(void *)(v25 + 24) = v23;
      *(unsigned char *)(v25 + 32) = v24;
      unint64_t v19 = v25 | 0x1000000000000000;
      break;
    case 2:
      sub_1BFEFF3E8(0, &qword_1EB86C518, (uint64_t (*)(void))sub_1C087B344, (uint64_t)&type metadata for FormatFixedColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
      long long v59 = xmmword_1C152C800;
      sub_1C087B398();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      char v26 = v55;
      uint64_t v27 = *((void *)&v55 + 1);
      char v28 = v56;
      uint64_t v29 = swift_allocObject();
      *(unsigned char *)(v29 + 16) = v26;
      *(void *)(v29 + 24) = v27;
      *(unsigned char *)(v29 + 32) = v28;
      unint64_t v19 = v29 | 0x2000000000000000;
      break;
    case 3:
      sub_1BFEFF3E8(0, &qword_1EB878418, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
      long long v59 = xmmword_1C152C800;
      sub_1C087B2B0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      long long v30 = v55;
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v30;
      unint64_t v19 = v31 | 0x3000000000000000;
      break;
    case 4:
      long long v59 = xmmword_1C152C800;
      sub_1BFEB6C1C();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      long long v32 = v55;
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = v32;
      unint64_t v19 = v33 | 0x4000000000000000;
      break;
    case 5:
      long long v59 = xmmword_1C152C800;
      sub_1C087B234();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      long long v34 = v55;
      char v35 = v56;
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v34;
      *(unsigned char *)(v36 + 32) = v35;
      unint64_t v37 = 0x5000000000000000;
      goto LABEL_24;
    case 6:
      long long v59 = xmmword_1C152C800;
      sub_1C087B1D0();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      long long v53 = v55;
      uint64_t v38 = v56;
      uint64_t v39 = v57;
      char v40 = v58;
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = v53;
      *(void *)(v41 + 32) = v38;
      *(void *)(v41 + 40) = v39;
      *(unsigned char *)(v41 + 48) = v40;
      unint64_t v19 = v41 | 0x6000000000000000;
      break;
    case 7:
      long long v59 = xmmword_1C152C800;
      sub_1BFEB6B14();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      long long v53 = v55;
      uint64_t v42 = v56;
      char v43 = v57;
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = v53;
      *(void *)(v44 + 32) = v42;
      *(unsigned char *)(v44 + 40) = v43;
      unint64_t v19 = v44 | 0x7000000000000000;
      break;
    case 8:
      sub_1BFEFF3E8(0, &qword_1EB87EFF8, (uint64_t (*)(void))sub_1C003F2E8, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
      long long v59 = xmmword_1C152C800;
      sub_1C087B110();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      long long v45 = v55;
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v45;
      unint64_t v19 = v46 | 0x8000000000000000;
      break;
    case 9:
      sub_1C087AEA4(0, &qword_1EA19D8F8, (void (*)(void))sub_1C087AFF4);
      long long v59 = xmmword_1C152C800;
      sub_1C087B048();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      long long v53 = v55;
      uint64_t v47 = v56;
      char v48 = v57;
      uint64_t v49 = v58;
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v53;
      *(void *)(v36 + 32) = v47;
      *(unsigned char *)(v36 + 40) = v48;
      *(void *)(v36 + 48) = v49;
      unint64_t v37 = 0x9000000000000000;
      goto LABEL_24;
    case 10:
      sub_1C087AEA4(0, &qword_1EA19D8E0, (void (*)(void))sub_1C087AF20);
      long long v59 = xmmword_1C152C800;
      sub_1C087AF74();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      long long v53 = v55;
      uint64_t v50 = v56;
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v53;
      *(void *)(v36 + 32) = v50;
      unint64_t v37 = 0xA000000000000000;
      goto LABEL_24;
    case 11:
      sub_1C087AD54();
      long long v59 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EA19D8D8, (void (*)(uint64_t))sub_1C087AD54);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      long long v53 = v55;
      uint64_t v52 = v56;
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = v53;
      *(void *)(v36 + 32) = v52;
      unint64_t v37 = 0xB000000000000000;
LABEL_24:
      unint64_t v19 = v36 | v37;
      break;
    default:
      sub_1C08FC718(0, (unint64_t *)&qword_1EB873EF8, MEMORY[0x1E4FBB1A0], (uint64_t)&protocol witness table for String, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FormatValue);
      long long v59 = xmmword_1C152C800;
      sub_1C08662B4();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v12);
      long long v18 = v55;
      unint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = v18;
      break;
  }
  *uint64_t v17 = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatNode.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  double v95 = a2;
  *(void *)&long long v96 = sub_1C151635C();
  *(void *)&long long v94 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v4 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF3E8(0, &qword_1EB87A530, (uint64_t (*)(void))sub_1BFEB6A24, (uint64_t)&type metadata for FormatCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v92 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BFEB6A24();
  uint64_t v10 = (void *)v97;
  sub_1C1520EBC();
  char v11 = v10;
  if (v10)
  {
LABEL_54:
    sub_1C0038728(a1, (uint64_t)v11);
    swift_willThrow();

    uint64_t v88 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v88);
  }
  *(void *)&long long v97 = v7;
  uint64_t v12 = v95;
  uint64_t v13 = a1[3];
  double v93 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v14 = sub_1C1520EAC();
  LOBYTE(v13) = Dictionary<>.errorOnUnknownKeys.getter(v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = v6;
  uint64_t v16 = v96;
  if (v13)
  {
    uint64_t v17 = sub_1C152070C();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      unint64_t v19 = (unint64_t *)(v17 + 40);
      while (1)
      {
        unint64_t v20 = *v19;
        if (*v19 >= 4) {
          break;
        }
        v19 += 2;
        if (!--v18) {
          goto LABEL_7;
        }
      }
      uint64_t v23 = *(v19 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1C02570B4();
      char v11 = (void *)swift_allocError();
      *(void *)uint64_t v24 = v23;
      *(void *)(v24 + 8) = v20;
      *(void *)(v24 + 16) = &unk_1F1B86528;
      *(_OWORD *)(v24 + 24) = xmmword_1C15363B0;
      swift_willThrow();
      sub_1C0257108(v23, v20);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      a1 = v93;
      goto LABEL_54;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BFEB6A78();
  long long v99 = 0uLL;
  sub_1C15206EC();
  switch((char)v98)
  {
    case 1:
      type metadata accessor for FormatVBoxNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87DB98, (void (*)(uint64_t))type metadata accessor for FormatVBoxNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v25 = v98;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v25;
      unint64_t v22 = v26 | 2;
      break;
    case 2:
      type metadata accessor for FormatHOverlayNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(qword_1EB87EA98, (void (*)(uint64_t))type metadata accessor for FormatHOverlayNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v27 = v98;
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v27;
      unint64_t v22 = v28 | 4;
      break;
    case 3:
      type metadata accessor for FormatVOverlayNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB888878, (void (*)(uint64_t))type metadata accessor for FormatVOverlayNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v29 = v98;
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = v29;
      unint64_t v22 = v30 | 6;
      break;
    case 4:
      type metadata accessor for FormatViewNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87DC80, (void (*)(uint64_t))type metadata accessor for FormatViewNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v31 = v98;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v31;
      unint64_t v22 = v32 | 0x1000000000000000;
      break;
    case 5:
      type metadata accessor for FormatTextNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87DA78, (void (*)(uint64_t))type metadata accessor for FormatTextNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v33 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v33;
      unint64_t v35 = 0x1000000000000002;
      goto LABEL_52;
    case 6:
      type metadata accessor for FormatImageNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87DFF8, (void (*)(uint64_t))type metadata accessor for FormatImageNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v36 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v36;
      unint64_t v37 = 0x1000000000000002;
      goto LABEL_51;
    case 7:
      type metadata accessor for FormatItemNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87D888, (void (*)(uint64_t))type metadata accessor for FormatItemNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v38 = v98;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v38;
      unint64_t v40 = 0x1000000000000002;
      goto LABEL_56;
    case 8:
      type metadata accessor for FormatSpaceNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87E1E8, (void (*)(uint64_t))type metadata accessor for FormatSpaceNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v41 = v98;
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v41;
      unint64_t v22 = v42 | 0x2000000000000000;
      break;
    case 9:
      type metadata accessor for FormatSnippetNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87E868, (void (*)(uint64_t))type metadata accessor for FormatSnippetNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v43 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v43;
      unint64_t v35 = 0x2000000000000002;
      goto LABEL_52;
    case 10:
      type metadata accessor for FormatSupplementaryNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87F928, (void (*)(uint64_t))type metadata accessor for FormatSupplementaryNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v44 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v44;
      unint64_t v37 = 0x2000000000000002;
      goto LABEL_51;
    case 11:
      type metadata accessor for FormatSwitchNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87E5D8, (void (*)(uint64_t))type metadata accessor for FormatSwitchNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v45 = v98;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v45;
      unint64_t v40 = 0x2000000000000002;
      goto LABEL_56;
    case 12:
      type metadata accessor for FormatSlotNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87D9B0, (void (*)(uint64_t))type metadata accessor for FormatSlotNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v46 = v98;
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v46;
      unint64_t v22 = v47 | 0x3000000000000000;
      break;
    case 13:
      type metadata accessor for FormatAccessibilityNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87F728, (void (*)(uint64_t))type metadata accessor for FormatAccessibilityNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v48 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v48;
      unint64_t v35 = 0x3000000000000002;
      goto LABEL_52;
    case 14:
      type metadata accessor for FormatButtonNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87E2A8, (void (*)(uint64_t))type metadata accessor for FormatButtonNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v49 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v49;
      unint64_t v37 = 0x3000000000000002;
      goto LABEL_51;
    case 15:
      type metadata accessor for FormatGroupNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87DEF0, (void (*)(uint64_t))type metadata accessor for FormatGroupNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v50 = v98;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v50;
      unint64_t v40 = 0x3000000000000002;
      goto LABEL_56;
    case 16:
      type metadata accessor for FormatWebEmbedNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87EC40, (void (*)(uint64_t))type metadata accessor for FormatWebEmbedNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v51 = v98;
      uint64_t v52 = swift_allocObject();
      *(void *)(v52 + 16) = v51;
      unint64_t v22 = v52 | 0x4000000000000000;
      break;
    case 17:
      type metadata accessor for FormatFrameNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87DE38, (void (*)(uint64_t))type metadata accessor for FormatFrameNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v53 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v53;
      unint64_t v35 = 0x4000000000000002;
      goto LABEL_52;
    case 18:
      type metadata accessor for FormatRepeatNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87E500, (void (*)(uint64_t))type metadata accessor for FormatRepeatNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v54 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v54;
      unint64_t v37 = 0x4000000000000002;
      goto LABEL_51;
    case 19:
      type metadata accessor for FormatOptionsNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87E6C0, (void (*)(uint64_t))type metadata accessor for FormatOptionsNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v55 = v98;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v55;
      unint64_t v40 = 0x4000000000000002;
      goto LABEL_56;
    case 20:
      type metadata accessor for FormatStateViewNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87F010, (void (*)(uint64_t))type metadata accessor for FormatStateViewNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v56 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v56;
      unint64_t v35 = 0x5000000000000000;
      goto LABEL_52;
    case 21:
      type metadata accessor for FormatCustomNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87E400, (void (*)(uint64_t))type metadata accessor for FormatCustomNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v57 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v57;
      unint64_t v35 = 0x5000000000000002;
      goto LABEL_52;
    case 22:
      type metadata accessor for FormatPrintNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EA19DF58, (void (*)(uint64_t))type metadata accessor for FormatPrintNode);
      sub_1C152065C();
      uint64_t v58 = v107;
      uint64_t v59 = v97;
      if (!v107)
      {
        sub_1C151634C();
        uint64_t v60 = sub_1C151633C();
        uint64_t v62 = v61;
        (*(void (**)(char *, uint64_t))(v94 + 8))(v4, v16);
        uint64_t v63 = sub_1C00BA434((uint64_t)&unk_1F1B86578);
        uint64_t v58 = (void *)swift_allocObject();
        swift_beginAccess();
        v58[2] = v60;
        v58[3] = v62;
        v58[4] = 0;
        v58[5] = 0;
        swift_beginAccess();
        uint64_t v59 = v97;
        v58[6] = v63;
      }
      (*(void (**)(char *, uint64_t))(v59 + 8))(v9, v15);
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v58;
      unint64_t v37 = 0x5000000000000002;
      goto LABEL_51;
    case 23:
      type metadata accessor for FormatAdMetricsNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87ED80, (void (*)(uint64_t))type metadata accessor for FormatAdMetricsNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v64 = v98;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v64;
      unint64_t v40 = 0x5000000000000002;
      goto LABEL_56;
    case 24:
      type metadata accessor for FormatMicaNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EA19DF50, (void (*)(uint64_t))type metadata accessor for FormatMicaNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v65 = v98;
      uint64_t v66 = swift_allocObject();
      *(void *)(v66 + 16) = v65;
      unint64_t v22 = v66 | 0x6000000000000000;
      break;
    case 25:
      type metadata accessor for FormatLayeredMediaNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050((unint64_t *)&unk_1EB87C148, (void (*)(uint64_t))type metadata accessor for FormatLayeredMediaNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v67 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v67;
      unint64_t v35 = 0x6000000000000002;
      goto LABEL_52;
    case 26:
      type metadata accessor for FormatVideoNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050((unint64_t *)&unk_1EB85F168, (void (*)(uint64_t))type metadata accessor for FormatVideoNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v68 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v68;
      unint64_t v37 = 0x6000000000000002;
      goto LABEL_51;
    case 27:
      type metadata accessor for FormatIssueCoverNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB8603C8, (void (*)(uint64_t))type metadata accessor for FormatIssueCoverNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v69 = v98;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v69;
      unint64_t v40 = 0x6000000000000002;
      goto LABEL_56;
    case 28:
      long long v98 = xmmword_1C152C800;
      sub_1C006DA40();
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      long long v96 = v100;
      long long v97 = v99;
      long long v94 = v101;
      uint64_t v70 = v102;
      char v71 = v103;
      uint64_t v72 = v104;
      char v73 = v105;
      uint64_t v74 = v106;
      uint64_t v75 = swift_allocObject();
      long long v76 = v96;
      *(_OWORD *)(v75 + 16) = v97;
      *(_OWORD *)(v75 + 32) = v76;
      *(_OWORD *)(v75 + 48) = v94;
      *(void *)(v75 + 64) = v70;
      *(unsigned char *)(v75 + 72) = v71;
      *(void *)(v75 + 80) = v72;
      *(unsigned char *)(v75 + 88) = v73;
      unint64_t v22 = v75 | 0x7000000000000000;
      *(void *)(v75 + 96) = v74;
      break;
    case 29:
      type metadata accessor for FormatBlockNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87BF30, (void (*)(uint64_t))type metadata accessor for FormatBlockNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v77 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v77;
      unint64_t v35 = 0x7000000000000002;
      goto LABEL_52;
    case 30:
      type metadata accessor for FormatGeometryNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87E9D8, (void (*)(uint64_t))type metadata accessor for FormatGeometryNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v78 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v78;
      unint64_t v37 = 0x7000000000000002;
      goto LABEL_51;
    case 31:
      type metadata accessor for FormatVideoPlayerNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87F3B0, (void (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v79 = v98;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v79;
      unint64_t v40 = 0x7000000000000002;
      goto LABEL_56;
    case 32:
      type metadata accessor for FormatProgressViewNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB867150, (void (*)(uint64_t))type metadata accessor for FormatProgressViewNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v80 = v98;
      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = v80;
      unint64_t v22 = v81 | 0x8000000000000000;
      break;
    case 33:
      type metadata accessor for FormatItemBindingsNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB867060, (void (*)(uint64_t))type metadata accessor for FormatItemBindingsNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v82 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v82;
      unint64_t v35 = 0x8000000000000002;
      goto LABEL_52;
    case 34:
      type metadata accessor for FormatAuxiliaryNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB888A68, (void (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v83 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v83;
      unint64_t v37 = 0x8000000000000002;
      goto LABEL_51;
    case 35:
      type metadata accessor for FormatResetNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB8878E8, (void (*)(uint64_t))type metadata accessor for FormatResetNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v84 = v98;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v84;
      unint64_t v40 = 0x8000000000000002;
      goto LABEL_56;
    case 36:
      type metadata accessor for FormatVariableNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB866598, (void (*)(uint64_t))type metadata accessor for FormatVariableNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v85 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v85;
      unint64_t v35 = 0x9000000000000000;
      goto LABEL_52;
    case 37:
      type metadata accessor for FormatBreakpointNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EA198F58, (void (*)(uint64_t))type metadata accessor for FormatBreakpointNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v86 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v86;
      unint64_t v35 = 0x9000000000000002;
      goto LABEL_52;
    case 38:
      type metadata accessor for FormatPuzzleEmbedNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(qword_1EB866E78, (void (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v87 = v98;
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v87;
      unint64_t v37 = 0x9000000000000002;
LABEL_51:
      unint64_t v35 = v37 + 2;
LABEL_52:
      unint64_t v22 = v34 | v35;
      break;
    case 39:
      type metadata accessor for FormatSponsoredBannerNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB86D030, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v90 = v98;
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = v90;
      unint64_t v40 = 0x9000000000000002;
LABEL_56:
      unint64_t v22 = v39 | v40 | 4;
      break;
    default:
      type metadata accessor for FormatHBoxNode();
      long long v99 = xmmword_1C152C800;
      sub_1C085F050(&qword_1EB87D7A0, (void (*)(uint64_t))type metadata accessor for FormatHBoxNode);
      sub_1C15206EC();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v9, v15);
      uint64_t v21 = v98;
      unint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v21;
      break;
  }
  uint64_t v91 = (uint64_t)v93;
  *uint64_t v12 = v22;
  uint64_t v88 = v91;
  return __swift_destroy_boxed_opaque_existential_1(v88);
}

uint64_t Dictionary<>.errorOnUnknownKeys.getter(uint64_t a1)
{
  return sub_1BFEFE0A0(a1);
}

unint64_t sub_1BFEB6A24()
{
  unint64_t result = qword_1EB875298;
  if (!qword_1EB875298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875298);
  }
  return result;
}

unint64_t sub_1BFEB6A78()
{
  unint64_t result = qword_1EB886CF8;
  if (!qword_1EB886CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB886CF8);
  }
  return result;
}

uint64_t type metadata accessor for FormatSnippetNode()
{
  return self;
}

uint64_t type metadata accessor for FormatSwitchNode()
{
  return self;
}

unint64_t sub_1BFEB6B14()
{
  unint64_t result = qword_1EB875DF8;
  if (!qword_1EB875DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB875DF8);
  }
  return result;
}

uint64_t type metadata accessor for FormatTextNode()
{
  return self;
}

uint64_t type metadata accessor for FormatAccessibilityNode()
{
  return self;
}

uint64_t type metadata accessor for FormatHBoxNode()
{
  return self;
}

uint64_t type metadata accessor for FormatVOverlayNode()
{
  return self;
}

uint64_t type metadata accessor for FormatSlotNode()
{
  return self;
}

unint64_t sub_1BFEB6C1C()
{
  unint64_t result = qword_1EB876CA8;
  if (!qword_1EB876CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876CA8);
  }
  return result;
}

uint64_t sub_1BFEB6C70(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFE2F6D8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEB6CB4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEB6CFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FormatViewNode()
{
  return self;
}

uint64_t type metadata accessor for FormatRepeatNode()
{
  return self;
}

uint64_t type metadata accessor for FormatFrameNode()
{
  return self;
}

uint64_t type metadata accessor for FormatItemNode()
{
  return self;
}

uint64_t type metadata accessor for FormatGroupNode()
{
  return self;
}

uint64_t type metadata accessor for FormatWebEmbedNode()
{
  return self;
}

uint64_t type metadata accessor for FormatAdMetricsNode()
{
  return self;
}

uint64_t type metadata accessor for FormatButtonNode()
{
  return self;
}

uint64_t type metadata accessor for FormatSupplementaryNode()
{
  return self;
}

uint64_t type metadata accessor for FormatOptionsNode()
{
  return self;
}

uint64_t FormatPackageInventory.merging(with:)(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  sub_1BFF71E30();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v249 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF14F38(0, (unint64_t *)&qword_1EB8813E0, (uint64_t (*)(void))sub_1C0068948, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v272 = (uint64_t)&v249 - v9;
  uint64_t v10 = type metadata accessor for FormatCompilerOptions.Newsroom(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v271 = (uint64_t)&v249 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = (int *)type metadata accessor for FormatCompilerOptions(0);
  uint64_t v258 = *((void *)v274 - 1);
  MEMORY[0x1F4188790](v274);
  uint64_t v259 = (char *)&v249 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v270 = (uint64_t)&v249 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v260 = (char *)&v249 - v16;
  MEMORY[0x1F4188790](v17);
  v277 = (char **)((char *)&v249 - v18);
  MEMORY[0x1F4188790](v19);
  uint64_t v262 = (uint64_t)&v249 - v20;
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v21 - 8);
  unint64_t v263 = (unint64_t)&v249 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C151928C();
  uint64_t v266 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v261 = (uint64_t)&v249 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v249 - v26;
  if (!(a1 >> 62))
  {
    uint64_t v276 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v276) {
      goto LABEL_3;
    }
LABEL_208:
    swift_retain();
    return (uint64_t)v2;
  }
  swift_bridgeObjectRetain();
  uint64_t v247 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  uint64_t v276 = v247;
  if (!v247) {
    goto LABEL_208;
  }
LABEL_3:
  uint64_t v28 = v2[3];
  uint64_t v256 = v2[2];
  uint64_t v257 = v4;
  sub_1BFE79CBC(0, (unint64_t *)&unk_1EB8903B0, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBBE00]);
  uint64_t v29 = v266;
  unint64_t v30 = (*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80);
  uint64_t v269 = *(void *)(v266 + 72);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1C1529AE0;
  *(void *)&long long v275 = v30;
  uint64_t v264 = (void *)v31;
  uint64_t v265 = v2;
  v273 = *(void (**)(unint64_t, char *, uint64_t))(v29 + 16);
  v273(v31 + v30, (char *)v2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version, v23);
  uint64_t v255 = v28;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1C15204BC();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v278 = a1;
  uint64_t v279 = v32;
  int64_t v267 = v32 & ~(v32 >> 63);
  uint64_t v268 = v7;
  if (v32)
  {
    v326 = (void *)MEMORY[0x1E4FBC860];
    sub_1BFFC1230(0, v32 & ~(v32 >> 63), 0);
    if (v32 < 0)
    {
LABEL_211:
      __break(1u);
      goto LABEL_212;
    }
    uint64_t v33 = v326;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v34 = 0;
      unint64_t v35 = (void (**)(uint64_t, char *, uint64_t))(v266 + 32);
      do
      {
        uint64_t v36 = MEMORY[0x1C18C7CB0](v34, v278);
        v273((unint64_t)v27, (char *)(v36 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version), v23);
        swift_unknownObjectRelease();
        v326 = v33;
        unint64_t v38 = v33[2];
        unint64_t v37 = v33[3];
        if (v38 >= v37 >> 1)
        {
          sub_1BFFC1230(v37 > 1, v38 + 1, 1);
          uint64_t v33 = v326;
        }
        ++v34;
        void v33[2] = v38 + 1;
        (*v35)((uint64_t)v33 + v275 + v38 * v269, v27, v23);
      }
      while (v279 != v34);
    }
    else
    {
      uint64_t v65 = (void *)(a1 + 32);
      uint64_t v66 = (void (**)(uint64_t, uint64_t, uint64_t))(v266 + 32);
      uint64_t v67 = v279;
      uint64_t v68 = v261;
      do
      {
        v273(v68, (char *)(*v65 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_version), v23);
        v326 = v33;
        unint64_t v70 = v33[2];
        unint64_t v69 = v33[3];
        if (v70 >= v69 >> 1)
        {
          sub_1BFFC1230(v69 > 1, v70 + 1, 1);
          uint64_t v68 = v261;
          uint64_t v33 = v326;
        }
        void v33[2] = v70 + 1;
        (*v66)((uint64_t)v33 + v275 + v70 * v269, v68, v23);
        ++v65;
        --v67;
      }
      while (v67);
    }
  }
  else
  {
    uint64_t v33 = (void *)MEMORY[0x1E4FBC860];
  }
  v326 = v264;
  sub_1BFFC2D00((uint64_t)v33);
  swift_bridgeObjectRetain();
  sub_1BFFC3D2C(&v326);
  swift_bridgeObjectRelease();
  uint64_t v39 = v276;
  if (v326[2])
  {
    uint64_t v40 = v263;
    v273(v263, (char *)v326 + v275, v23);
    uint64_t v41 = 0;
    unint64_t v42 = v278;
  }
  else
  {
    uint64_t v41 = 1;
    unint64_t v42 = v278;
    uint64_t v40 = v263;
  }
  uint64_t v44 = v265;
  uint64_t v43 = v266;
  uint64_t v45 = v279;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v266 + 56))(v40, v41, 1, v23);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v40, 1, v23) == 1) {
    goto LABEL_222;
  }
  v327[0] = *((unsigned char *)v44 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role);
  uint64_t v46 = (char *)v44 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__direction;
  swift_beginAccess();
  char v325 = *v46;
  uint64_t v47 = (void *)((char *)v44 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
  swift_beginAccess();
  uint64_t v253 = *v47;
  uint64_t v261 = v47[1];
  uint64_t v48 = (void *)((char *)v44 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__comment);
  swift_beginAccess();
  uint64_t v49 = *v48;
  uint64_t v50 = v48[1];
  uint64_t v51 = (void *)((char *)v44 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
  swift_beginAccess();
  uint64_t v52 = v44;
  uint64_t v53 = (void (*)(unint64_t, char *, uint64_t))v51[1];
  uint64_t v54 = v51[2];
  uint64_t v55 = *v51;
  *(void *)&long long v321 = v55;
  *((void *)&v321 + 1) = v53;
  uint64_t v322 = v54;
  uint64_t v252 = v49;
  uint64_t v254 = v50;
  if (v45)
  {
    *(void *)&long long v323 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    *(void *)&long long v275 = v55;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFC0FC0(0, v267, 0);
    if (v45 < 0)
    {
LABEL_212:
      __break(1u);
      goto LABEL_213;
    }
    uint64_t v269 = v54;
    v273 = v53;
    uint64_t v56 = v323;
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v57 = 0;
      do
      {
        uint64_t v58 = (uint64_t *)(MEMORY[0x1C18C7CB0](v57, v278) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
        swift_beginAccess();
        uint64_t v60 = *v58;
        uint64_t v59 = v58[1];
        uint64_t v61 = v58[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        *(void *)&long long v323 = v56;
        unint64_t v63 = *(void *)(v56 + 16);
        unint64_t v62 = *(void *)(v56 + 24);
        if (v63 >= v62 >> 1)
        {
          sub_1BFFC0FC0(v62 > 1, v63 + 1, 1);
          uint64_t v56 = v323;
        }
        ++v57;
        *(void *)(v56 + 16) = v63 + 1;
        uint64_t v64 = (void *)(v56 + 24 * v63);
        v64[4] = v60;
        v64[5] = v59;
        v64[6] = v61;
      }
      while (v279 != v57);
    }
    else
    {
      char v71 = (void *)(v42 + 32);
      uint64_t v72 = v45;
      do
      {
        char v73 = (uint64_t *)(*v71 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__groups);
        swift_beginAccess();
        uint64_t v74 = *v73;
        uint64_t v75 = v73[1];
        uint64_t v76 = v73[2];
        *(void *)&long long v323 = v56;
        unint64_t v78 = *(void *)(v56 + 16);
        unint64_t v77 = *(void *)(v56 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v78 >= v77 >> 1)
        {
          sub_1BFFC0FC0(v77 > 1, v78 + 1, 1);
          uint64_t v56 = v323;
        }
        *(void *)(v56 + 16) = v78 + 1;
        uint64_t v79 = (void *)(v56 + 24 * v78);
        v79[4] = v74;
        v79[5] = v75;
        v79[6] = v76;
        ++v71;
        --v72;
      }
      while (v72);
    }
    unint64_t v42 = v278;
    uint64_t v45 = v279;
    uint64_t v52 = v265;
    uint64_t v39 = v276;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v56 = MEMORY[0x1E4FBC860];
  }
  sub_1BFFD3FD0(v56, &v323);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v321 = v323;
  uint64_t v322 = v324;
  uint64_t v80 = (void *)((char *)v52 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
  swift_beginAccess();
  uint64_t v81 = v80[1];
  uint64_t v316 = *v80;
  uint64_t v317 = v81;
  if (v45)
  {
    uint64_t v315 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFC1200(0, v267, 0);
    if (v45 < 0)
    {
LABEL_213:
      __break(1u);
      goto LABEL_214;
    }
    uint64_t v82 = v315;
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v83 = 0;
      do
      {
        uint64_t v84 = (long long *)(MEMORY[0x1C18C7CB0](v83, v42) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
        swift_beginAccess();
        long long v275 = *v84;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        uint64_t v315 = v82;
        unint64_t v86 = *(void *)(v82 + 16);
        unint64_t v85 = *(void *)(v82 + 24);
        if (v86 >= v85 >> 1)
        {
          sub_1BFFC1200(v85 > 1, v86 + 1, 1);
          uint64_t v82 = v315;
        }
        ++v83;
        *(void *)(v82 + 16) = v86 + 1;
        *(_OWORD *)(v82 + 16 * v86 + 32) = v275;
      }
      while (v279 != v83);
    }
    else
    {
      uint64_t v88 = (void *)(v42 + 32);
      do
      {
        long long v89 = (long long *)(*v88 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__items);
        swift_beginAccess();
        long long v275 = *v89;
        uint64_t v315 = v82;
        unint64_t v91 = *(void *)(v82 + 16);
        unint64_t v90 = *(void *)(v82 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v91 >= v90 >> 1)
        {
          sub_1BFFC1200(v90 > 1, v91 + 1, 1);
          uint64_t v82 = v315;
        }
        *(void *)(v82 + 16) = v91 + 1;
        *(_OWORD *)(v82 + 16 * v91 + 32) = v275;
        ++v88;
        --v45;
        unint64_t v42 = v278;
      }
      while (v45);
    }
    uint64_t v87 = v265;
    uint64_t v39 = v276;
    uint64_t v45 = v279;
  }
  else
  {
    uint64_t v87 = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v82 = MEMORY[0x1E4FBC860];
  }
  sub_1BFFD9780(v82, v320);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v319[0] = v320[0];
  uint64_t v92 = (void *)((char *)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
  swift_beginAccess();
  uint64_t v93 = v92[1];
  uint64_t v310 = *v92;
  uint64_t v311 = v93;
  if (v45)
  {
    uint64_t v309 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFC0F90(0, v267, 0);
    if (v45 < 0)
    {
LABEL_214:
      __break(1u);
      goto LABEL_215;
    }
    uint64_t v94 = v309;
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v95 = 0;
      do
      {
        long long v96 = (long long *)(MEMORY[0x1C18C7CB0](v95, v42) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
        swift_beginAccess();
        long long v275 = *v96;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        uint64_t v309 = v94;
        unint64_t v98 = *(void *)(v94 + 16);
        unint64_t v97 = *(void *)(v94 + 24);
        if (v98 >= v97 >> 1)
        {
          sub_1BFFC0F90(v97 > 1, v98 + 1, 1);
          uint64_t v94 = v309;
        }
        ++v95;
        *(void *)(v94 + 16) = v98 + 1;
        *(_OWORD *)(v94 + 16 * v98 + 32) = v275;
      }
      while (v279 != v95);
    }
    else
    {
      long long v99 = (void *)(v42 + 32);
      do
      {
        long long v100 = (long long *)(*v99 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__snippets);
        swift_beginAccess();
        long long v275 = *v100;
        uint64_t v309 = v94;
        unint64_t v102 = *(void *)(v94 + 16);
        unint64_t v101 = *(void *)(v94 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v102 >= v101 >> 1)
        {
          sub_1BFFC0F90(v101 > 1, v102 + 1, 1);
          uint64_t v94 = v309;
        }
        *(void *)(v94 + 16) = v102 + 1;
        *(_OWORD *)(v94 + 16 * v102 + 32) = v275;
        ++v99;
        --v45;
        unint64_t v42 = v278;
      }
      while (v45);
    }
    uint64_t v87 = v265;
    uint64_t v39 = v276;
    uint64_t v45 = v279;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v94 = MEMORY[0x1E4FBC860];
  }
  sub_1BFFD35C8(v94, &v318);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v314 = v318;
  char v103 = (void *)((char *)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v104 = *v103;
  uint64_t v105 = v103[1];
  if (v45)
  {
    uint64_t v306 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFC0F60(0, v267, 0);
    if (v45 < 0)
    {
LABEL_215:
      __break(1u);
      goto LABEL_216;
    }
    uint64_t v106 = v306;
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v107 = 0;
      do
      {
        uint64_t v108 = (long long *)(MEMORY[0x1C18C7CB0](v107, v42) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
        swift_beginAccess();
        long long v275 = *v108;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        uint64_t v306 = v106;
        unint64_t v110 = *(void *)(v106 + 16);
        unint64_t v109 = *(void *)(v106 + 24);
        if (v110 >= v109 >> 1)
        {
          sub_1BFFC0F60(v109 > 1, v110 + 1, 1);
          uint64_t v106 = v306;
        }
        ++v107;
        *(void *)(v106 + 16) = v110 + 1;
        *(_OWORD *)(v106 + 16 * v110 + 32) = v275;
      }
      while (v279 != v107);
    }
    else
    {
      uint64_t v112 = (void *)(v42 + 32);
      do
      {
        uint64_t v113 = (long long *)(*v112 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
        swift_beginAccess();
        long long v275 = *v113;
        uint64_t v306 = v106;
        unint64_t v115 = *(void *)(v106 + 16);
        unint64_t v114 = *(void *)(v106 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v115 >= v114 >> 1)
        {
          sub_1BFFC0F60(v114 > 1, v115 + 1, 1);
          uint64_t v106 = v306;
        }
        *(void *)(v106 + 16) = v115 + 1;
        *(_OWORD *)(v106 + 16 * v115 + 32) = v275;
        ++v112;
        --v45;
        unint64_t v42 = v278;
      }
      while (v45);
    }
    uint64_t v87 = v265;
    uint64_t v39 = v276;
    uint64_t v45 = v279;
    uint64_t v111 = *(void *)(v106 + 16);
    if (v111) {
      goto LABEL_81;
    }
LABEL_75:
    swift_bridgeObjectRelease();
    uint64_t v312 = v104;
    uint64_t v313 = v105;
    goto LABEL_84;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v111 = *(void *)(MEMORY[0x1E4FBC860] + 16);
  if (!v111) {
    goto LABEL_75;
  }
LABEL_81:
  uint64_t v306 = v104;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v116 = 32;
  do
  {
    uint64_t v117 = swift_bridgeObjectRetain();
    sub_1BFFC2C88(v117);
    v116 += 16;
    --v111;
  }
  while (v111);
  swift_bridgeObjectRelease();
  sub_1BFF94A5C(v306, &v312);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v104 = v312;
  uint64_t v105 = v313;
  uint64_t v87 = v265;
LABEL_84:
  *(void *)&long long v308 = v104;
  *((void *)&v308 + 1) = v105;
  uint64_t v118 = (void *)((char *)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
  swift_beginAccess();
  uint64_t v119 = v118[1];
  uint64_t v302 = *v118;
  uint64_t v303 = v119;
  if (v45)
  {
    uint64_t v301 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFC0D14(0, v267, 0);
    if (v45 < 0)
    {
LABEL_216:
      __break(1u);
      goto LABEL_217;
    }
    uint64_t v120 = v301;
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v121 = 0;
      do
      {
        uint64_t v122 = (long long *)(MEMORY[0x1C18C7CB0](v121, v42) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
        swift_beginAccess();
        long long v275 = *v122;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        uint64_t v301 = v120;
        unint64_t v124 = *(void *)(v120 + 16);
        unint64_t v123 = *(void *)(v120 + 24);
        if (v124 >= v123 >> 1)
        {
          sub_1BFFC0D14(v123 > 1, v124 + 1, 1);
          uint64_t v120 = v301;
        }
        ++v121;
        *(void *)(v120 + 16) = v124 + 1;
        *(_OWORD *)(v120 + 16 * v124 + 32) = v275;
      }
      while (v279 != v121);
    }
    else
    {
      uint64_t v125 = (void *)(v42 + 32);
      do
      {
        uint64_t v126 = (long long *)(*v125 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__slots);
        swift_beginAccess();
        long long v275 = *v126;
        uint64_t v301 = v120;
        unint64_t v128 = *(void *)(v120 + 16);
        unint64_t v127 = *(void *)(v120 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v128 >= v127 >> 1)
        {
          sub_1BFFC0D14(v127 > 1, v128 + 1, 1);
          uint64_t v120 = v301;
        }
        *(void *)(v120 + 16) = v128 + 1;
        *(_OWORD *)(v120 + 16 * v128 + 32) = v275;
        ++v125;
        --v45;
        unint64_t v42 = v278;
      }
      while (v45);
    }
    uint64_t v87 = v265;
    uint64_t v39 = v276;
    uint64_t v45 = v279;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v120 = MEMORY[0x1E4FBC860];
  }
  sub_1BFFC5CD4(v120, &v307);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v305 = v307;
  uint64_t v129 = (void *)((char *)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
  swift_beginAccess();
  uint64_t v130 = v129[1];
  uint64_t v297 = *v129;
  uint64_t v298 = v130;
  if (v45)
  {
    uint64_t v296 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFC0D44(0, v267, 0);
    if (v45 < 0)
    {
LABEL_217:
      __break(1u);
      goto LABEL_218;
    }
    uint64_t v131 = v296;
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v132 = 0;
      do
      {
        uint64_t v133 = (long long *)(MEMORY[0x1C18C7CB0](v132, v42)
                          + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
        swift_beginAccess();
        long long v275 = *v133;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        uint64_t v296 = v131;
        unint64_t v135 = *(void *)(v131 + 16);
        unint64_t v134 = *(void *)(v131 + 24);
        if (v135 >= v134 >> 1)
        {
          sub_1BFFC0D44(v134 > 1, v135 + 1, 1);
          uint64_t v131 = v296;
        }
        ++v132;
        *(void *)(v131 + 16) = v135 + 1;
        *(_OWORD *)(v131 + 16 * v135 + 32) = v275;
      }
      while (v279 != v132);
    }
    else
    {
      uint64_t v136 = (void *)(v42 + 32);
      do
      {
        uint64_t v137 = (long long *)(*v136 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__supplementaries);
        swift_beginAccess();
        long long v275 = *v137;
        uint64_t v296 = v131;
        unint64_t v139 = *(void *)(v131 + 16);
        unint64_t v138 = *(void *)(v131 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v139 >= v138 >> 1)
        {
          sub_1BFFC0D44(v138 > 1, v139 + 1, 1);
          uint64_t v131 = v296;
        }
        *(void *)(v131 + 16) = v139 + 1;
        *(_OWORD *)(v131 + 16 * v139 + 32) = v275;
        ++v136;
        --v45;
        unint64_t v42 = v278;
      }
      while (v45);
    }
    uint64_t v87 = v265;
    uint64_t v39 = v276;
    uint64_t v45 = v279;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v131 = MEMORY[0x1E4FBC860];
  }
  sub_1BFFC6064(v131, &v304);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v300 = v304;
  unint64_t v140 = (void *)((char *)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
  swift_beginAccess();
  uint64_t v141 = v140[1];
  uint64_t v293 = *v140;
  uint64_t v294 = v141;
  if (v45)
  {
    uint64_t v292 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BFFC11D0(0, v267, 0);
    if (v45 < 0)
    {
LABEL_218:
      __break(1u);
      goto LABEL_219;
    }
    uint64_t v142 = v292;
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v143 = 0;
      do
      {
        unint64_t v144 = (long long *)(MEMORY[0x1C18C7CB0](v143, v42) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
        swift_beginAccess();
        long long v275 = *v144;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        uint64_t v292 = v142;
        unint64_t v146 = *(void *)(v142 + 16);
        unint64_t v145 = *(void *)(v142 + 24);
        if (v146 >= v145 >> 1)
        {
          sub_1BFFC11D0(v145 > 1, v146 + 1, 1);
          uint64_t v142 = v292;
        }
        ++v143;
        *(void *)(v142 + 16) = v146 + 1;
        *(_OWORD *)(v142 + 16 * v146 + 32) = v275;
      }
      while (v279 != v143);
    }
    else
    {
      unint64_t v147 = (void *)(v42 + 32);
      do
      {
        unint64_t v148 = (long long *)(*v147 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__types);
        swift_beginAccess();
        long long v275 = *v148;
        uint64_t v292 = v142;
        unint64_t v150 = *(void *)(v142 + 16);
        unint64_t v149 = *(void *)(v142 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v150 >= v149 >> 1)
        {
          sub_1BFFC11D0(v149 > 1, v150 + 1, 1);
          uint64_t v142 = v292;
        }
        *(void *)(v142 + 16) = v150 + 1;
        *(_OWORD *)(v142 + 16 * v150 + 32) = v275;
        ++v147;
        --v45;
        unint64_t v42 = v278;
      }
      while (v45);
    }
    uint64_t v87 = v265;
    uint64_t v39 = v276;
    uint64_t v45 = v279;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v142 = MEMORY[0x1E4FBC860];
  }
  sub_1BFFD47AC(v142, &v299);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v295 = v299;
  uint64_t v151 = (void *)((char *)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
  swift_beginAccess();
  uint64_t v290 = *v151;
  if (v45)
  {
    uint64_t v289 = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BFFC0F30(0, v267, 0);
    if (v45 < 0)
    {
LABEL_219:
      __break(1u);
      goto LABEL_220;
    }
    if ((v42 & 0xC000000000000001) != 0)
    {
      uint64_t v152 = 0;
      uint64_t v153 = v289;
      do
      {
        long long v154 = (uint64_t *)(MEMORY[0x1C18C7CB0](v152, v42)
                         + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
        swift_beginAccess();
        uint64_t v155 = *v154;
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFFC0F30(0, *(void *)(v153 + 16) + 1, 1);
          uint64_t v153 = v289;
        }
        unint64_t v157 = *(void *)(v153 + 16);
        unint64_t v156 = *(void *)(v153 + 24);
        if (v157 >= v156 >> 1)
        {
          sub_1BFFC0F30(v156 > 1, v157 + 1, 1);
          uint64_t v153 = v289;
        }
        ++v152;
        *(void *)(v153 + 16) = v157 + 1;
        *(void *)(v153 + 8 * v157 + 32) = v155;
      }
      while (v45 != v152);
    }
    else
    {
      long long v159 = (void *)(v42 + 32);
      uint64_t v160 = v289;
      uint64_t v161 = v45;
      do
      {
        uint64_t v162 = (uint64_t *)(*v159 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__decorations);
        swift_beginAccess();
        uint64_t v163 = *v162;
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BFFC0F30(0, *(void *)(v160 + 16) + 1, 1);
          uint64_t v160 = v289;
        }
        unint64_t v165 = *(void *)(v160 + 16);
        unint64_t v164 = *(void *)(v160 + 24);
        if (v165 >= v164 >> 1)
        {
          sub_1BFFC0F30(v164 > 1, v165 + 1, 1);
          uint64_t v160 = v289;
        }
        *(void *)(v160 + 16) = v165 + 1;
        *(void *)(v160 + 8 * v165 + 32) = v163;
        ++v159;
        --v161;
        uint64_t v45 = v279;
      }
      while (v161);
    }
    uint64_t v158 = v289;
    uint64_t v87 = v265;
    uint64_t v39 = v276;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v158 = MEMORY[0x1E4FBC860];
  }
  sub_1C030569C(v158, (unint64_t *)&v291);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v166 = (void **)((char *)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  uint64_t v167 = *v166;
  uint64_t v288 = MEMORY[0x1E4FBC860];
  if (v39 < 1)
  {
    __break(1u);
    goto LABEL_211;
  }
  uint64_t v264 = (void *)(v42 & 0xC000000000000001);
  if ((v42 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v168 = 0;
    do
    {
      uint64_t v169 = MEMORY[0x1C18C7CB0](v168++, v42);
      uint64_t v170 = (uint64_t *)(v169 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
      swift_beginAccess();
      uint64_t v171 = *v170;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BFEDB748(v171);
    }
    while (v39 != v168);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v172 = 0;
    do
    {
      ++v172;
      swift_beginAccess();
      uint64_t v173 = swift_bridgeObjectRetain();
      sub_1BFEDB748(v173);
    }
    while (v39 != v172);
  }
  swift_bridgeObjectRelease();
  uint64_t v251 = sub_1BFFC26C0(v288, v167);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v174 = (void *)((char *)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
  swift_beginAccess();
  uint64_t v175 = *v174;
  uint64_t v286 = MEMORY[0x1E4FBC860];
  if (v264)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v176 = 0;
    do
    {
      uint64_t v177 = MEMORY[0x1C18C7CB0](v176++, v42);
      uint64_t v178 = (uint64_t *)(v177 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__selectors);
      swift_beginAccess();
      uint64_t v179 = *v178;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BFE72794(v179);
    }
    while (v39 != v176);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v180 = 0;
    do
    {
      ++v180;
      swift_beginAccess();
      uint64_t v181 = swift_bridgeObjectRetain();
      sub_1BFE72794(v181);
    }
    while (v39 != v180);
  }
  swift_bridgeObjectRelease();
  uint64_t v182 = sub_1BFFB9A98(v286, v175);
  swift_bridgeObjectRelease();
  uint64_t v183 = (char **)((char *)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
  swift_beginAccess();
  uint64_t v184 = v183[1];
  v282 = *v183;
  v283 = v184;
  uint64_t v250 = v182;
  if (!v45)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v187 = MEMORY[0x1E4FBC860];
LABEL_171:
    sub_1BFFC6404(v187, v287);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v285 = v287[0];
    uint64_t v194 = (char *)MEMORY[0x1E4FBC860];
    if (!v45)
    {
      uint64_t v200 = v277;
      uint64_t v195 = (uint64_t)v260;
LABEL_185:
      sub_1C1147A28((uint64_t)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, (uint64_t)v200, type metadata accessor for FormatCompilerOptions);
      uint64_t v204 = *((void *)v194 + 2);
      if (v204)
      {
        uint64_t v205 = v274[7];
        v273 = (void (*)(unint64_t, char *, uint64_t))((char *)v200 + v274[6]);
        uint64_t v269 = (uint64_t)v200 + v205;
        int64_t v206 = v274[8];
        uint64_t v207 = (uint64_t)&v194[(*(unsigned __int8 *)(v258 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v258 + 80)];
        uint64_t v266 = *(void *)(v258 + 72);
        int64_t v267 = v206;
        uint64_t v260 = v194;
        swift_bridgeObjectRetain();
        uint64_t v208 = v259;
        uint64_t v209 = (uint64_t)v268;
        do
        {
          uint64_t v279 = v204;
          sub_1C1147A28(v207, v195, type metadata accessor for FormatCompilerOptions);
          v282 = *v200;
          swift_bridgeObjectRetain();
          uint64_t v210 = swift_bridgeObjectRetain();
          sub_1BFFC2C5C(v210);
          *(void *)&long long v275 = v282;
          v282 = v200[1];
          swift_bridgeObjectRetain();
          uint64_t v211 = swift_bridgeObjectRetain();
          sub_1BFFC2C30(v211);
          uint64_t v212 = v282;
          uint64_t v213 = v272;
          sub_1C1147A90((uint64_t)v273, v272, (unint64_t *)&qword_1EB8813E0, (uint64_t (*)(void))sub_1C0068948, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
          uint64_t v214 = v271;
          sub_1BFF54774(v213, v271, type metadata accessor for FormatCompilerOptions.Newsroom);
          long long v215 = v274;
          sub_1BFFC4CF4(v269, v195 + v274[7], v209);
          uint64_t v216 = *(uint64_t *)((char *)v277 + v267);
          swift_bridgeObjectRetain();
          uint64_t v217 = swift_bridgeObjectRetain();
          uint64_t v218 = sub_1BFFC263C(v217, v216);
          *uint64_t v208 = v275;
          v208[1] = v212;
          uint64_t v200 = v277;
          sub_1C1147A28(v214, (uint64_t)v208 + v215[6], type metadata accessor for FormatCompilerOptions.Newsroom);
          sub_1C1147A28(v209, (uint64_t)v208 + v215[7], (uint64_t (*)(void))sub_1BFF71E30);
          uint64_t v219 = v215[8];
          uint64_t v220 = v279;
          *(void *)((char *)v208 + v219) = v218;
          sub_1C1147B04(v209, (uint64_t (*)(void))sub_1BFF71E30);
          sub_1C1147B04(v214, type metadata accessor for FormatCompilerOptions.Newsroom);
          uint64_t v221 = v270;
          sub_1BFF54774((uint64_t)v208, v270, type metadata accessor for FormatCompilerOptions);
          sub_1C1147B04(v195, type metadata accessor for FormatCompilerOptions);
          sub_1C1147B04((uint64_t)v200, type metadata accessor for FormatCompilerOptions);
          sub_1BFF54774(v221, (uint64_t)v200, type metadata accessor for FormatCompilerOptions);
          v207 += v266;
          uint64_t v204 = v220 - 1;
        }
        while (v204);
        swift_bridgeObjectRelease();
        unint64_t v42 = v278;
        uint64_t v87 = v265;
      }
      sub_1BFF54774((uint64_t)v200, v262, type metadata accessor for FormatCompilerOptions);
      swift_bridgeObjectRelease();
      unint64_t v222 = *(void *)((char *)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem + 8);
      uint64_t v279 = *(void *)((char *)v87 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
      if (v264)
      {
        uint64_t v223 = v279;
        sub_1BFEB9640(v279, v222);
        swift_bridgeObjectRetain();
        sub_1BFEB9640(v223, v222);
        uint64_t v224 = 0;
        unint64_t v225 = v222;
        do
        {
          uint64_t v228 = MEMORY[0x1C18C7CB0](v224, v278) + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem;
          uint64_t v227 = *(void *)(v228 + 8);
          if (v227 == 2)
          {
            sub_1BFEB9640(v223, v225);
            uint64_t v226 = v223;
            uint64_t v227 = v225;
          }
          else
          {
            uint64_t v226 = *(void *)v228;
            sub_1C0187DE0(*(void *)v228, *(void *)(v228 + 8));
          }
          swift_unknownObjectRelease();
          sub_1BFFD0438(v223, v225);
          ++v224;
          uint64_t v223 = v226;
          unint64_t v225 = v227;
        }
        while (v276 != v224);
        unint64_t v42 = v278;
      }
      else
      {
        uint64_t v236 = v279;
        sub_1BFEB9640(v279, v222);
        swift_bridgeObjectRetain();
        sub_1BFEB9640(v236, v222);
        uint64_t v237 = 0;
        unint64_t v238 = v222;
        do
        {
          uint64_t v239 = (uint64_t *)(*(void *)(v42 + 8 * v237 + 32)
                           + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_columnSystem);
          uint64_t v240 = *v239;
          unint64_t v241 = v239[1];
          uint64_t v226 = *v239;
          uint64_t v227 = v241;
          if (v241 == 2)
          {
            sub_1BFEB9640(v236, v238);
            uint64_t v226 = v236;
            uint64_t v227 = v238;
          }
          ++v237;
          sub_1BFEB9640(v240, v241);
          sub_1BFFD0438(v236, v238);
          uint64_t v236 = v226;
          unint64_t v238 = v227;
          unint64_t v42 = v278;
        }
        while (v276 != v237);
      }
      swift_bridgeObjectRelease();
      sub_1BFFD0438(v279, v222);
      v284[0] = v226;
      v284[1] = v227;
      uint64_t v229 = (void *)((char *)v265 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
      swift_beginAccess();
      uint64_t v230 = *v229;
      swift_bridgeObjectRetain();
      uint64_t v281 = sub_1BFFC2D2C(0);
      uint64_t v231 = v276;
      if (v264)
      {
        swift_bridgeObjectRetain();
        uint64_t v232 = 0;
        do
        {
          uint64_t v233 = MEMORY[0x1C18C7CB0](v232++, v42);
          uint64_t v234 = (uint64_t *)(v233 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
          swift_beginAccess();
          uint64_t v235 = *v234;
          swift_bridgeObjectRetain();
          swift_unknownObjectRelease();
          sub_1BFEC4CAC(v235);
        }
        while (v231 != v232);
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v242 = 0;
        do
        {
          ++v242;
          swift_beginAccess();
          uint64_t v243 = swift_bridgeObjectRetain();
          sub_1BFEC4CAC(v243);
        }
        while (v231 != v242);
      }
      swift_bridgeObjectRelease();
      uint64_t v244 = v254;
      uint64_t v245 = v281;
      uint64_t v281 = v230;
      sub_1BFEC4CAC(v245);
      uint64_t v246 = v281;
      swift_allocObject();
      return sub_1BFFD3970(v256, v255, v263, v327, &v325, v253, v261, v252, v244, &v321, v319, &v314, &v308, &v305, &v300, &v295, &v291, v251, v250,
               &v285,
               v262,
               v284,
               v246);
    }
    v282 = (char *)MEMORY[0x1E4FBC860];
    sub_1BFFC1188(0, v267, 0);
    uint64_t v195 = (uint64_t)v260;
    if ((v45 & 0x8000000000000000) == 0)
    {
      if (v264)
      {
        for (uint64_t i = 0; i != v45; ++i)
        {
          uint64_t v197 = MEMORY[0x1C18C7CB0](i, v42);
          sub_1C1147A28(v197 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v195, type metadata accessor for FormatCompilerOptions);
          swift_unknownObjectRelease();
          sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC1188);
          unint64_t v199 = *((void *)v282 + 2);
          unint64_t v198 = *((void *)v282 + 3);
          if (v199 >= v198 >> 1) {
            sub_1BFFC1188(v198 > 1, v199 + 1, 1);
          }
          sub_1BFFC0C6C(v199, v195, type metadata accessor for FormatCompilerOptions, type metadata accessor for FormatCompilerOptions);
        }
      }
      else
      {
        uint64_t v201 = (void *)(v42 + 32);
        do
        {
          sub_1C1147A28(*v201 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions, v195, type metadata accessor for FormatCompilerOptions);
          sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC1188);
          unint64_t v203 = *((void *)v282 + 2);
          unint64_t v202 = *((void *)v282 + 3);
          if (v203 >= v202 >> 1) {
            sub_1BFFC1188(v202 > 1, v203 + 1, 1);
          }
          sub_1BFFC0C6C(v203, v195, type metadata accessor for FormatCompilerOptions, type metadata accessor for FormatCompilerOptions);
          ++v201;
          --v45;
        }
        while (v45);
      }
      uint64_t v194 = v282;
      uint64_t v200 = v277;
      goto LABEL_185;
    }
    goto LABEL_221;
  }
  uint64_t v280 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFFC0D74(0, v267, 0);
  if ((v45 & 0x8000000000000000) == 0)
  {
    if (v264)
    {
      uint64_t v185 = 0;
      do
      {
        uint64_t v186 = (long long *)(MEMORY[0x1C18C7CB0](v185, v42)
                          + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
        swift_beginAccess();
        long long v275 = *v186;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_unknownObjectRelease();
        sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC0D74);
        uint64_t v187 = v280;
        unint64_t v189 = *(void *)(v280 + 16);
        unint64_t v188 = *(void *)(v280 + 24);
        if (v189 >= v188 >> 1)
        {
          sub_1BFFC0D74(v188 > 1, v189 + 1, 1);
          uint64_t v187 = v280;
        }
        ++v185;
        *(void *)(v187 + 16) = v189 + 1;
        *(_OWORD *)(v187 + 16 * v189 + 32) = v275;
      }
      while (v279 != v185);
    }
    else
    {
      uint64_t v190 = (void *)(v42 + 32);
      do
      {
        uint64_t v191 = (long long *)(*v190 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__localizations);
        swift_beginAccess();
        long long v275 = *v191;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C1146DC0((uint64_t (*)(void, uint64_t, uint64_t))sub_1BFFC0D74);
        uint64_t v187 = v280;
        unint64_t v193 = *(void *)(v280 + 16);
        unint64_t v192 = *(void *)(v280 + 24);
        if (v193 >= v192 >> 1)
        {
          sub_1BFFC0D74(v192 > 1, v193 + 1, 1);
          uint64_t v187 = v280;
        }
        *(void *)(v187 + 16) = v193 + 1;
        *(_OWORD *)(v187 + 16 * v193 + 32) = v275;
        ++v190;
        --v45;
        unint64_t v42 = v278;
      }
      while (v45);
    }
    uint64_t v87 = v265;
    uint64_t v45 = v279;
    goto LABEL_171;
  }
LABEL_220:
  __break(1u);
LABEL_221:
  __break(1u);
LABEL_222:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BFEB9484(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFEB9640(uint64_t a1, unint64_t a2)
{
  if (a2 != 2) {
    return sub_1C0187DE0(a1, a2);
  }
  return a1;
}

uint64_t sub_1BFEB9650(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB87A778, (uint64_t (*)(uint64_t))sub_1BFEBC130, (uint64_t (*)(void))sub_1BFEBC130, (uint64_t (*)(void))sub_1BFEBC130);
}

uint64_t FormatContentSubgroup.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v94 = a2;
  sub_1BFEBCA80(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v85 = (uint64_t)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1BFEBAC8C(0, (unint64_t *)&unk_1EB883228, (uint64_t (*)(void))sub_1BFEBC9D8, (uint64_t)&type metadata for FormatContentSubgroup.AltCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v87 = v6;
  uint64_t v86 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v93 = (char *)&v81 - v7;
  sub_1BFEBC130();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v91 = v8;
  uint64_t v92 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v84 = (uint64_t)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v89 = (uint64_t)&v81 - v12;
  sub_1BFEBC1C4(0);
  uint64_t v97 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v88 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v90 = (uint64_t)&v81 - v16;
  sub_1BFEC2810(0);
  MEMORY[0x1F4188790](v17 - 8);
  unint64_t v98 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for FormatMetadata();
  uint64_t v95 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  long long v96 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v102 = (uint64_t (*)(void))sub_1C151635C();
  *(void *)&long long v101 = *((void *)v102 - 1);
  MEMORY[0x1F4188790](v102);
  uint64_t v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAC8C(0, &qword_1EB87A550, (uint64_t (*)(void))sub_1BFEBCA2C, (uint64_t)&type metadata for FormatContentSubgroup.CodingKeys, v5);
  uint64_t v23 = v22;
  uint64_t v100 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v81 - v24;
  uint64_t v26 = type metadata accessor for FormatContentSubgroup();
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (uint64_t *)((char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = a1[3];
  uint64_t v104 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  sub_1BFEBCA2C();
  uint64_t v30 = v103;
  sub_1C1520EBC();
  if (v30) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
  }
  uint64_t v31 = v101;
  uint64_t v32 = v102;
  LOBYTE(v105) = 0;
  uint64_t v33 = sub_1C152060C();
  uint64_t v35 = v34;
  uint64_t v83 = v25;
  uint64_t v103 = v23;
  uint64_t v82 = (int *)v26;
  if (v34)
  {
    uint64_t v37 = v33;
  }
  else
  {
    sub_1C151634C();
    uint64_t v37 = sub_1C151633C();
    uint64_t v35 = v38;
    (*(void (**)(char *, uint64_t (*)(void)))(v31 + 8))(v21, v32);
  }
  uint64_t v39 = (uint64_t)v28;
  uint64_t *v28 = v37;
  v28[1] = v35;
  sub_1BFEBAA38(0, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
  LOBYTE(v106) = 2;
  sub_1BFEBC944();
  sub_1C152065C();
  uint64_t v40 = v105;
  if (!v105) {
    uint64_t v40 = MEMORY[0x1E4FBC860];
  }
  *(uint64_t *)((char *)v28 + v82[6]) = v40;
  sub_1BFEBC4B4();
  LOBYTE(v106) = 3;
  sub_1BFE38978((unint64_t *)&qword_1EB87A020);
  sub_1C152065C();
  uint64_t v41 = MEMORY[0x1E4FBC870];
  if (v105) {
    uint64_t v41 = v105;
  }
  *(uint64_t *)((char *)v28 + v82[7]) = v41;
  sub_1BFEBAA38(0, (unint64_t *)&qword_1EB879DE0, (uint64_t)&type metadata for FormatContentSlot, MEMORY[0x1E4FBB320]);
  LOBYTE(v106) = 5;
  sub_1BFEBC8B0();
  unint64_t v102 = 0;
  sub_1C152065C();
  uint64_t v42 = v105;
  uint64_t v43 = MEMORY[0x1E4FBC860];
  if (!v105) {
    uint64_t v42 = MEMORY[0x1E4FBC860];
  }
  *(uint64_t *)((char *)v28 + v82[8]) = v42;
  sub_1BFEBAA38(0, &qword_1EB890078, (uint64_t)&type metadata for FormatContentSubgroupSection, MEMORY[0x1E4FBB320]);
  LOBYTE(v106) = 6;
  sub_1BFEBC788();
  sub_1C152065C();
  uint64_t v44 = v105;
  if (!v105) {
    uint64_t v44 = v43;
  }
  *(uint64_t *)((char *)v28 + v82[12]) = v44;
  sub_1BFEBAA38(0, &qword_1EB88FFD8, (uint64_t)&type metadata for FormatPlaceholder, MEMORY[0x1E4FBB320]);
  LOBYTE(v106) = 4;
  sub_1BFEBC81C();
  sub_1C152065C();
  uint64_t v45 = v105;
  if (!v105) {
    uint64_t v45 = v43;
  }
  *(uint64_t *)((char *)v28 + v82[9]) = v45;
  LOBYTE(v105) = 7;
  sub_1BFEBC34C(&qword_1EB874B00, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  uint64_t v46 = (uint64_t)v98;
  uint64_t v47 = v99;
  sub_1C152065C();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v95 + 48))(v46, 1, v47) == 1)
  {
    uint64_t v48 = v96;
    FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v96, 0, 0, 0, 0);
    sub_1BFEBC514(v46, (uint64_t (*)(void))sub_1BFEC2810);
  }
  else
  {
    uint64_t v48 = v96;
    sub_1BFEBAAEC(v46, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  }
  uint64_t v49 = MEMORY[0x1E4FBC860];
  uint64_t v50 = (uint64_t)v82;
  sub_1BFEBAAEC((uint64_t)v48, (uint64_t)v28 + v82[10], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFEBAA38(0, (unint64_t *)&qword_1EB890050, (uint64_t)&type metadata for FormatContentSubgroupFilter, MEMORY[0x1E4FBB320]);
  LOBYTE(v106) = 8;
  sub_1BFEBC604();
  sub_1C152065C();
  if (v105) {
    uint64_t v51 = v105;
  }
  else {
    uint64_t v51 = v49;
  }
  *(uint64_t *)((char *)v28 + *(int *)(v50 + 44)) = v51;
  uint64_t v52 = v104;
  uint64_t v53 = v104[3];
  *(void *)&long long v101 = v104[4];
  __swift_project_boxed_opaque_existential_1(v104, v53);
  uint64_t v54 = sub_1C1520EAC();
  char v55 = Dictionary<>.bindingContent.getter(v54);
  swift_bridgeObjectRelease();
  if (v55)
  {
    sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    uint64_t v57 = v89;
    uint64_t v58 = (char *)(v89 + *(int *)(v56 + 48));
    sub_1C0AE1D98(v89);
    FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v58, 0, 0, 0, 0);
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = v90;
    sub_1BFEBAB54(v57, v90, (uint64_t (*)(void))sub_1BFEBC130);
    sub_1BFEC2AAC(0, &qword_1EB87A778, (uint64_t (*)(uint64_t))sub_1BFEBC130, MEMORY[0x1E4FBBE00]);
    unint64_t v60 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_1C1529AE0;
    uint64_t v62 = v61 + v60;
    uint64_t v63 = v59;
    sub_1BFEBAAEC(v57, v62, (uint64_t (*)(void))sub_1BFEBC130);
    *(void *)(v59 + *(int *)(v97 + 36)) = v61;
    (*(void (**)(char *, uint64_t))(v100 + 8))(v83, v103);
    uint64_t v64 = v94;
    uint64_t v65 = v52;
  }
  else
  {
    uint64_t v66 = v52[3];
    *(void *)&long long v101 = v52[4];
    __swift_project_boxed_opaque_existential_1(v52, v66);
    sub_1BFEBC9D8();
    sub_1C1520EBC();
    sub_1BFEBC598(0);
    sub_1BFEBC34C(&qword_1EB88F950, sub_1BFEBC598);
    sub_1C152065C();
    uint64_t v67 = v105;
    if (v105)
    {
      if (qword_1EB87BD00 != -1) {
        swift_once();
      }
      uint64_t v68 = sub_1C151928C();
      uint64_t v69 = __swift_project_value_buffer(v68, (uint64_t)qword_1EB8799C8);
      uint64_t v70 = v85;
      sub_1BFEDB774(v69, v67, v85);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v70, 1, v91) != 1)
      {
        unint64_t v102 = (uint64_t (*)(void))sub_1BFEBC130;
        uint64_t v76 = v84;
        sub_1BFEBAAEC(v85, v84, (uint64_t (*)(void))sub_1BFEBC130);
        uint64_t v77 = v89;
        sub_1BFEBAB54(v76, v89, (uint64_t (*)(void))sub_1BFEBC130);
        uint64_t v78 = v90;
        sub_1BFEBAB54(v77, v90, (uint64_t (*)(void))sub_1BFEBC130);
        sub_1BFEC2AAC(0, &qword_1EB87A778, (uint64_t (*)(uint64_t))sub_1BFEBC130, MEMORY[0x1E4FBBE00]);
        unint64_t v79 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
        uint64_t v80 = swift_allocObject();
        *(_OWORD *)(v80 + 16) = xmmword_1C1529AE0;
        sub_1BFEBAAEC(v77, v80 + v79, v102);
        *(void *)(v78 + *(int *)(v97 + 36)) = v80;
        sub_1BFEBC514(v76, (uint64_t (*)(void))sub_1BFEBC130);
        (*(void (**)(char *, uint64_t))(v86 + 8))(v93, v87);
        (*(void (**)(char *, uint64_t))(v100 + 8))(v83, v103);
        uint64_t v39 = (uint64_t)v28;
        uint64_t v63 = v78;
        uint64_t v64 = v94;
        uint64_t v50 = v26;
        uint64_t v65 = v104;
        goto LABEL_31;
      }
      sub_1BFEBC514(v85, (uint64_t (*)(void))sub_1BFEBCA80);
    }
    sub_1C00FCB2C();
    uint64_t v71 = swift_allocError();
    *uint64_t v72 = 2;
    *(void *)&long long v101 = v71;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v93, v87);
    uint64_t v39 = (uint64_t)v28;
    uint64_t v50 = v26;
    LOBYTE(v105) = 1;
    sub_1BFEBC34C(&qword_1EB8795A8, sub_1BFEBC1C4);
    char v73 = v88;
    uint64_t v74 = v103;
    uint64_t v75 = v83;
    sub_1C15206EC();
    uint64_t v65 = v104;
    (*(void (**)(char *, uint64_t))(v100 + 8))(v75, v74);

    uint64_t v63 = (uint64_t)v73;
    uint64_t v64 = v94;
  }
LABEL_31:
  sub_1BFEBAAEC(v63, v39 + *(int *)(v50 + 20), (uint64_t (*)(void))sub_1BFEBC1C4);
  sub_1BFEBAB54(v39, v64, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  return sub_1BFEBC514(v39, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
}

void sub_1BFEBAA38(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFEBAA84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEBAAEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEBAB54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEBABBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1BFEBAC24(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1BFEBAC8C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void *initializeWithCopy for FormatContentSubgroup(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  sub_1BFEBC130();
  swift_bridgeObjectRetain();
  unint64_t v110 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = *((void *)v6 + 1);
    *(void *)uint64_t v5 = *(void *)v6;
    *((void *)v5 + 1) = v7;
    uint64_t v8 = *((void *)v6 + 3);
    *((void *)v5 + 2) = *((void *)v6 + 2);
    *((void *)v5 + 3) = v8;
    uint64_t v9 = *((void *)v6 + 5);
    *((void *)v5 + 4) = *((void *)v6 + 4);
    *((void *)v5 + 5) = v9;
    *((_WORD *)v5 + 24) = *((_WORD *)v6 + 24);
    uint64_t v10 = *((void *)v6 + 8);
    *((void *)v5 + 7) = *((void *)v6 + 7);
    *((void *)v5 + 8) = v10;
    uint64_t v11 = *((void *)v6 + 10);
    *((void *)v5 + 9) = *((void *)v6 + 9);
    *((void *)v5 + 10) = v11;
    uint64_t v12 = *((void *)v6 + 12);
    *((void *)v5 + 11) = *((void *)v6 + 11);
    *((void *)v5 + 12) = v12;
    uint64_t v97 = *((void *)v6 + 14);
    *((void *)v5 + 13) = *((void *)v6 + 13);
    *((void *)v5 + 14) = v97;
    uint64_t v101 = *((void *)v6 + 16);
    *((void *)v5 + 15) = *((void *)v6 + 15);
    *((void *)v5 + 16) = v101;
    uint64_t v104 = *((void *)v6 + 18);
    *((void *)v5 + 17) = *((void *)v6 + 17);
    *((void *)v5 + 18) = v104;
    *((void *)v5 + 19) = *((void *)v6 + 19);
    long long v96 = v6 + 160;
    unint64_t v108 = *((void *)v6 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v108 >= 2)
    {
      uint64_t v14 = v5 + 160;
      if (v108 != 2)
      {
        v5[160] = *v96;
        *((void *)v5 + 21) = v108;
        swift_bridgeObjectRetain();
LABEL_12:
        uint64_t v34 = type metadata accessor for FormatPackage();
        uint64_t v35 = *(int *)(v34 + 92);
        uint64_t v36 = &v5[v35];
        uint64_t v37 = &v6[v35];
        uint64_t v38 = *(void *)&v6[v35 + 8];
        *(void *)uint64_t v36 = *(void *)&v6[v35];
        *((void *)v36 + 1) = v38;
        uint64_t v112 = (int *)type metadata accessor for FormatCompilerOptions(0);
        uint64_t v39 = v112[6];
        uint64_t v40 = &v36[v39];
        uint64_t v41 = v37;
        uint64_t v42 = &v37[v39];
        uint64_t v43 = *(void *)&v37[v39 + 8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v103 = v34;
        uint64_t v99 = v36;
        if (v43 == 1)
        {
          long long v44 = *((_OWORD *)v42 + 1);
          *(_OWORD *)uint64_t v40 = *(_OWORD *)v42;
          *((_OWORD *)v40 + 1) = v44;
          *((_OWORD *)v40 + 2) = *((_OWORD *)v42 + 2);
        }
        else
        {
          *(void *)uint64_t v40 = *(void *)v42;
          *((void *)v40 + 1) = v43;
          uint64_t v45 = *((void *)v42 + 3);
          *((void *)v40 + 2) = *((void *)v42 + 2);
          *((void *)v40 + 3) = v45;
          uint64_t v46 = *((void *)v42 + 5);
          *((void *)v40 + 4) = *((void *)v42 + 4);
          *((void *)v40 + 5) = v46;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        uint64_t v47 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        uint64_t v48 = &v40[v47];
        uint64_t v49 = &v42[v47];
        uint64_t v50 = sub_1C1518CDC();
        uint64_t v51 = *(void *)(v50 - 8);
        uint64_t v106 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48);
        if (v106(v49, 1, v50))
        {
          sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
        }
        uint64_t v53 = v112[7];
        uint64_t v54 = (char *)v99 + v53;
        char v55 = &v41[v53];
        uint64_t v102 = v50;
        if (v106(&v41[v53], 1, v50))
        {
          sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v54, v55, v50);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v54, 0, 1, v50);
        }
        *(void *)((char *)v99 + v112[8]) = *(void *)&v41[v112[8]];
        uint64_t v57 = *(int *)(v103 + 96);
        uint64_t v58 = &v5[v57];
        uint64_t v59 = &v6[v57];
        unint64_t v60 = v5;
        uint64_t v61 = sub_1C151928C();
        uint64_t v100 = *(void *)(v61 - 8);
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
        swift_bridgeObjectRetain();
        uint64_t v111 = v61;
        uint64_t v63 = v61;
        uint64_t v33 = v60;
        unint64_t v98 = v62;
        v62(v58, v59, v63);
        uint64_t v64 = *(int *)(v103 + 100);
        uint64_t v65 = &v60[v64];
        uint64_t v66 = &v6[v64];
        if (v106(&v6[v64], 1, v102))
        {
          sub_1BFEC2AAC(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
          memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v65, v66, v102);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v65, 0, 1, v102);
        }
        sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
        uint64_t v69 = *(int *)(v68 + 48);
        uint64_t v70 = &v33[v69];
        uint64_t v71 = &v6[v69];
        uint64_t v72 = *(void *)&v6[v69 + 8];
        *(void *)uint64_t v70 = *(void *)&v6[v69];
        *((void *)v70 + 1) = v72;
        uint64_t v21 = (int *)type metadata accessor for FormatMetadata();
        uint64_t v73 = v21[5];
        uint64_t v74 = &v70[v73];
        uint64_t v75 = &v71[v73];
        swift_bridgeObjectRetain();
        v98(v74, v75, v111);
        v98(&v70[v21[6]], &v71[v21[6]], v111);
        uint64_t v76 = v21[7];
        uint64_t v77 = &v70[v76];
        uint64_t v78 = &v71[v76];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(&v71[v76], 1, v111))
        {
          sub_1BFEC0CE8(0);
          memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
        }
        else
        {
          v98(v77, v78, v111);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v77, 0, 1, v111);
        }
        *(void *)&v70[v21[8]] = *(void *)&v71[v21[8]];
        *(void *)&v70[v21[9]] = *(void *)&v71[v21[9]];
        *(void *)&v70[v21[10]] = *(void *)&v71[v21[10]];
        *(void *)&v70[v21[11]] = *(void *)&v71[v21[11]];
        uint64_t v32 = v110;
        goto LABEL_28;
      }
      long long v13 = *(_OWORD *)v96;
    }
    else
    {
      long long v13 = *(_OWORD *)v96;
      uint64_t v14 = v5 + 160;
    }
    *uint64_t v14 = v13;
    goto LABEL_12;
  }
  uint64_t v15 = sub_1C1515FDC();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v5, v6, v15);
  sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
  uint64_t v17 = *(int *)(v16 + 48);
  uint64_t v105 = v5;
  uint64_t v18 = &v5[v17];
  uint64_t v19 = &v6[v17];
  uint64_t v20 = *(void *)&v6[v17 + 8];
  *(void *)uint64_t v18 = *(void *)&v6[v17];
  *((void *)v18 + 1) = v20;
  uint64_t v21 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v22 = v21[5];
  uint64_t v23 = &v18[v22];
  uint64_t v24 = &v19[v22];
  uint64_t v25 = sub_1C151928C();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  swift_bridgeObjectRetain();
  v27(v23, v24, v25);
  v27(&v18[v21[6]], &v19[v21[6]], v25);
  uint64_t v28 = v21[7];
  uint64_t v29 = &v18[v28];
  uint64_t v30 = &v19[v28];
  uint64_t v111 = v25;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(&v19[v28], 1, v25))
  {
    sub_1BFEC0CE8(0);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v27(v29, v30, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v25);
  }
  uint64_t v32 = v110;
  uint64_t v33 = v105;
  *(void *)&v18[v21[8]] = *(void *)&v19[v21[8]];
  *(void *)&v18[v21[9]] = *(void *)&v19[v21[9]];
  *(void *)&v18[v21[10]] = *(void *)&v19[v21[10]];
  *(void *)&v18[v21[11]] = *(void *)&v19[v21[11]];
LABEL_28:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  sub_1BFEBC1C4(0);
  *(void *)&v33[*(int *)(v80 + 36)] = *(void *)&v32[*(int *)(v80 + 36)];
  uint64_t v81 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v81) = *(void *)((char *)a2 + v81);
  uint64_t v82 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v82) = *(void *)((char *)a2 + v82);
  uint64_t v83 = a3[10];
  uint64_t v84 = (char *)a1 + v83;
  uint64_t v85 = (char *)a2 + v83;
  uint64_t v86 = *(void *)((char *)a2 + v83 + 8);
  *(void *)uint64_t v84 = *(void *)((char *)a2 + v83);
  *((void *)v84 + 1) = v86;
  type metadata accessor for FormatMetadata();
  uint64_t v87 = v21[5];
  uint64_t v107 = &v85[v87];
  unint64_t v109 = &v84[v87];
  sub_1C151928C();
  uint64_t v88 = *(void *)(v111 - 8);
  uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v88 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v89(v109, v107, v111);
  v89(&v84[v21[6]], &v85[v21[6]], v111);
  uint64_t v90 = v21[7];
  uint64_t v91 = &v84[v90];
  uint64_t v92 = &v85[v90];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(&v85[v90], 1, v111))
  {
    sub_1BFEC0CE8(0);
    memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
  }
  else
  {
    v89(v91, v92, v111);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v91, 0, 1, v111);
  }
  *(void *)&v84[v21[8]] = *(void *)&v85[v21[8]];
  *(void *)&v84[v21[9]] = *(void *)&v85[v21[9]];
  *(void *)&v84[v21[10]] = *(void *)&v85[v21[10]];
  *(void *)&v84[v21[11]] = *(void *)&v85[v21[11]];
  uint64_t v94 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v94) = *(void *)((char *)a2 + v94);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BFEBB860(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    type metadata accessor for FormatMetadata();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1BFEBB8D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    type metadata accessor for FormatMetadata();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

void sub_1BFEBB948(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t destroy for FormatContentSubgroup(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_1BFEBC130();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v4 + 168) >= 3uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v5 = (int *)type metadata accessor for FormatPackage();
    uint64_t v6 = v4 + v5[23];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = type metadata accessor for FormatCompilerOptions(0);
    uint64_t v8 = v6 + *(int *)(v7 + 24);
    if (*(void *)(v8 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v8 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
    uint64_t v10 = sub_1C1518CDC();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (!v12(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    }
    uint64_t v13 = v6 + *(int *)(v7 + 28);
    if (!v12(v13, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v13, v10);
    }
    uint64_t v36 = v11;
    swift_bridgeObjectRelease();
    uint64_t v14 = v4 + v5[24];
    uint64_t v15 = sub_1C151928C();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v17(v14, v15);
    uint64_t v18 = v4 + v5[25];
    if (!v12(v18, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v18, v10);
    }
    sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    uint64_t v20 = v4 + *(int *)(v19 + 48);
    swift_bridgeObjectRelease();
    uint64_t v21 = (int *)type metadata accessor for FormatMetadata();
    v17(v20 + v21[5], v15);
    v17(v20 + v21[6], v15);
    uint64_t v22 = v20 + v21[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v22, 1, v15)) {
      v17(v22, v15);
    }
  }
  else
  {
    uint64_t v23 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v4, v23);
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v25 = v4 + *(int *)(v24 + 48);
    swift_bridgeObjectRelease();
    uint64_t v21 = (int *)type metadata accessor for FormatMetadata();
    uint64_t v26 = v25 + v21[5];
    uint64_t v15 = sub_1C151928C();
    uint64_t v27 = *(void *)(v15 - 8);
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v28(v26, v15);
    v28(v25 + v21[6], v15);
    uint64_t v29 = v25 + v21[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v29, 1, v15)) {
      v28(v29, v15);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEBC1C4(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = a1 + *(int *)(a2 + 40);
  swift_bridgeObjectRelease();
  type metadata accessor for FormatMetadata();
  uint64_t v31 = v30 + v21[5];
  sub_1C151928C();
  uint64_t v32 = *(void *)(v15 - 8);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v33(v31, v15);
  v33(v30 + v21[6], v15);
  uint64_t v34 = v30 + v21[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v34, 1, v15)) {
    v33(v34, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BFEBC014(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_1BFEBC094(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = type metadata accessor for FormatPackage();
    uint64_t v7 = sub_1C00786E0((unint64_t *)&unk_1EB887270, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEBC130()
{
  if (!qword_1EB876780)
  {
    type metadata accessor for FormatPackage();
    sub_1C00BC5B4((unint64_t *)&unk_1EB887270, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    unint64_t v0 = type metadata accessor for FormatFileReference();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB876780);
    }
  }
}

void sub_1BFEBC1C4(uint64_t a1)
{
}

uint64_t sub_1BFEBC1E4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBC22C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBC274(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBC2BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBC304(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBC34C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBC394(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBC3DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBC424(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBC46C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BFEBC4B4()
{
  if (!qword_1EB87A010)
  {
    unint64_t v0 = sub_1C151F04C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A010);
    }
  }
}

uint64_t sub_1BFEBC514(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t Dictionary<>.bindingContent.getter(uint64_t a1)
{
  return sub_1BFEFE0A0(a1);
}

void sub_1BFEBC598(uint64_t a1)
{
}

uint64_t type metadata accessor for FormatPackage()
{
  uint64_t result = qword_1EB874560;
  if (!qword_1EB874560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1BFEBC604()
{
  unint64_t result = qword_1EB890060;
  if (!qword_1EB890060)
  {
    sub_1BFEBAA38(255, (unint64_t *)&qword_1EB890050, (uint64_t)&type metadata for FormatContentSubgroupFilter, MEMORY[0x1E4FBB320]);
    sub_1C006CA70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890060);
  }
  return result;
}

uint64_t sub_1BFEBC698(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C08FC718(255, (unint64_t *)&qword_1EB87A010, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB1B0], MEMORY[0x1E4FBB510]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBC724(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BFEBC788()
{
  unint64_t result = qword_1EB890080;
  if (!qword_1EB890080)
  {
    sub_1BFEBAA38(255, &qword_1EB890078, (uint64_t)&type metadata for FormatContentSubgroupSection, MEMORY[0x1E4FBB320]);
    sub_1C006BEA4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB890080);
  }
  return result;
}

unint64_t sub_1BFEBC81C()
{
  unint64_t result = qword_1EB88FFE0;
  if (!qword_1EB88FFE0)
  {
    sub_1BFEBAA38(255, &qword_1EB88FFD8, (uint64_t)&type metadata for FormatPlaceholder, MEMORY[0x1E4FBB320]);
    sub_1BFE38DB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88FFE0);
  }
  return result;
}

unint64_t sub_1BFEBC8B0()
{
  unint64_t result = qword_1EB879DE8;
  if (!qword_1EB879DE8)
  {
    sub_1BFEBAA38(255, (unint64_t *)&qword_1EB879DE0, (uint64_t)&type metadata for FormatContentSlot, MEMORY[0x1E4FBB320]);
    sub_1C007D080();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879DE8);
  }
  return result;
}

unint64_t sub_1BFEBC944()
{
  unint64_t result = qword_1EB879DC8;
  if (!qword_1EB879DC8)
  {
    sub_1BFEBAA38(255, (unint64_t *)&qword_1EB879DC0, (uint64_t)&type metadata for FormatProperty, MEMORY[0x1E4FBB320]);
    sub_1C0081A44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB879DC8);
  }
  return result;
}

unint64_t sub_1BFEBC9D8()
{
  unint64_t result = qword_1EB88A070;
  if (!qword_1EB88A070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB88A070);
  }
  return result;
}

unint64_t sub_1BFEBCA2C()
{
  unint64_t result = qword_1EB876FE0;
  if (!qword_1EB876FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB876FE0);
  }
  return result;
}

void sub_1BFEBCA80(uint64_t a1)
{
}

uint64_t FormatFileReferenceCollection.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v101 = type metadata accessor for FormatFileReferenceCollection.MetadataContainer();
  uint64_t v88 = *(void (***)(char *, char *, uint64_t))(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v104 = (char *)v72 - v3;
  sub_1BFEC2B10(0, &qword_1EB874B58, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v97 = (char *)v72 - v5;
  sub_1BFEC2B10(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  MEMORY[0x1F4188790](v6 - 8);
  long long v96 = (char *)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v84 = (uint64_t)v72 - v9;
  uint64_t v99 = sub_1C151928C();
  uint64_t v85 = *(void (***)(void, void, void))(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v95 = (char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v103 = (char *)v72 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v93 = (char *)v72 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v83 = (uint64_t)v72 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v100 = (char *)v72 - v18;
  uint64_t v107 = type metadata accessor for FormatMetadata();
  unint64_t v98 = *(void (***)(void, void))(v107 - 8);
  MEMORY[0x1F4188790](v107);
  uint64_t v102 = (char *)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v89 = (uint64_t)v72 - v21;
  sub_1BFEC2B10(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v91 = (char *)v72 - v23;
  uint64_t v90 = sub_1C152039C();
  uint64_t v80 = *(void (***)(char *, uint64_t))(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v25 = (char *)v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for FormatFileReference();
  uint64_t v78 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)v72 - v30;
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)v72 - v33;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v35 = v106;
  sub_1C1520E8C();
  uint64_t v36 = (uint64_t)a1;
  if (v35) {
    return __swift_destroy_boxed_opaque_existential_1(v36);
  }
  uint64_t v37 = v98;
  uint64_t v105 = v34;
  uint64_t v87 = v31;
  uint64_t v82 = v28;
  uint64_t v79 = v25;
  uint64_t v94 = (void *)v36;
  uint64_t v106 = v26;
  uint64_t v38 = sub_1C151ECBC();
  uint64_t v113 = v38;
  __swift_project_boxed_opaque_existential_1(&v111, v112);
  if (sub_1C15208CC())
  {
    uint64_t v39 = v94;
LABEL_26:
    uint64_t v71 = v81;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
    *uint64_t v71 = v38;
    uint64_t v36 = (uint64_t)v39;
    return __swift_destroy_boxed_opaque_existential_1(v36);
  }
  uint64_t v86 = v37 + 6;
  uint64_t v92 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 6);
  uint64_t v77 = (void (**)(char *, uint64_t, uint64_t))(v85 + 4);
  unint64_t v98 = (void (**)(void, void))(v85 + 1);
  uint64_t v85 = (void (**)(void, void, void))(v88 + 1);
  uint64_t v76 = (uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 6);
  uint64_t v75 = (void (**)(char *, char *, uint64_t))(v80 + 4);
  uint64_t v74 = (void (**)(uint64_t, uint64_t))(v80 + 1);
  uint64_t v88 = (void (**)(char *, char *, uint64_t))(v78 + 16);
  uint64_t v80 = (void (**)(char *, uint64_t))(v78 + 8);
  uint64_t v78 = (v78 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v72[1] = MEMORY[0x1E4FBC840] + 8;
  uint64_t v40 = (uint64_t)v100;
  uint64_t v41 = v99;
  uint64_t v39 = v94;
  while (1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v111, v112);
    swift_getWitnessTable();
    sub_1C15208BC();
    __swift_project_boxed_opaque_existential_1(v39, v39[3]);
    uint64_t v42 = sub_1C1520EAC();
    uint64_t v43 = v91;
    sub_1C152038C();
    uint64_t v44 = v90;
    uint64_t result = (*v76)(v43, 1, v90);
    if (result == 1) {
      break;
    }
    uint64_t v46 = (uint64_t)v79;
    (*v75)(v79, v43, v44);
    uint64_t v47 = v82;
    if (*(void *)(v42 + 16) && (unint64_t v48 = sub_1BFEFE43C(v46), (v49 & 1) != 0))
    {
      sub_1BFF6A008(*(void *)(v42 + 56) + 32 * v48, (uint64_t)&v109);
    }
    else
    {
      long long v109 = 0u;
      long long v110 = 0u;
    }
    (*v74)(v46, v44);
    if (*((void *)&v110 + 1))
    {
      char v50 = swift_dynamicCast();
      uint64_t v51 = v87;
      if (v50)
      {
        char v52 = v108;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        char v52 = 0;
      }
    }
    else
    {
      sub_1BFEFDB90((uint64_t)&v109, (uint64_t (*)(void))sub_1BFEFE510);
      swift_bridgeObjectRelease();
      char v52 = 0;
      uint64_t v51 = v87;
    }
    sub_1BFC66384((uint64_t)v39, (uint64_t)&v109);
    uint64_t v53 = *v88;
    uint64_t v54 = v106;
    (*v88)(v51, v105, v106);
    if (v52)
    {
      char v55 = (char *)v40;
      uint64_t v56 = v51;
      uint64_t v57 = *v80;
      (*v80)(v56, v54);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
      uint64_t v58 = v105;
    }
    else
    {
      uint64_t v59 = v89;
      FormatFileReference.metadata.getter(v54, v89);
      __swift_project_boxed_opaque_existential_1(&v109, *((uint64_t *)&v110 + 1));
      uint64_t v60 = sub_1C1520EAC();
      Dictionary<>.appVersion.getter(v60, v40);
      uint64_t v61 = v93;
      swift_bridgeObjectRelease();
      uint64_t v62 = sub_1C1520EAC();
      uint64_t v63 = v83;
      Dictionary<>.formatVersion.getter(v62, v83);
      swift_bridgeObjectRelease();
      uint64_t v64 = v84;
      sub_1BFEC29DC(v59 + *(int *)(v107 + 28), v84, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      int v65 = 1;
      if ((*v92)(v64, 1, v41) != 1)
      {
        (*v77)(v61, v64, v41);
        int v65 = sub_1C1518F6C();
        (*v98)(v61, v41);
      }
      int v73 = v65;
      sub_1BFEBE3AC(&qword_1EB874AF8);
      uint64_t v66 = v100;
      uint64_t v67 = v89;
      char v68 = sub_1C151805C();
      uint64_t v69 = v63;
      uint64_t v70 = (void (*)(char *, uint64_t))*v98;
      (*v98)(v69, v41);
      v70(v66, v41);
      sub_1BFEFDB90(v67, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      uint64_t v57 = *v80;
      (*v80)(v87, v106);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
      if ((v68 & 1) == 0 || (v73 & 1) == 0)
      {
        v57(v105, v106);
        uint64_t v40 = (uint64_t)v100;
        goto LABEL_5;
      }
      uint64_t v58 = v105;
      uint64_t v54 = v106;
      char v55 = v100;
      uint64_t v47 = v82;
    }
    v53(v47, v58, v54);
    sub_1C151ED5C();
    sub_1C151ED1C();
    v57(v58, v54);
    uint64_t v40 = (uint64_t)v55;
    uint64_t v41 = v99;
LABEL_5:
    __swift_project_boxed_opaque_existential_1(&v111, v112);
    if (sub_1C15208CC())
    {
      uint64_t v38 = v113;
      goto LABEL_26;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFEBDA20(_DWORD *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C1515FDC();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  uint64_t v5 = *(void *)(v31 + 64);
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = (v8 | 7) + v5;
  uint64_t v11 = v8 + 16;
  uint64_t v12 = *(void *)(v7 + 64);
  uint64_t v13 = v12 + v8;
  uint64_t v14 = (v12 + v8 + ((v12 + v8 + ((v8 + 16) & ~v8)) & ~v8)) & ~v8;
  if (!*(_DWORD *)(v7 + 84)) {
    ++v12;
  }
  unint64_t v15 = ((((((((v12 + 7 + v14) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v16 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v17 = *(void *)(v16 + 64) + v9;
  if (v15 + (v17 & ~v9) <= v15 + (v10 & ~(v8 | 7))) {
    unint64_t v18 = v15 + (v10 & ~(v8 | 7));
  }
  else {
    unint64_t v18 = v15 + (v17 & ~v9);
  }
  unsigned int v19 = *((unsigned __int8 *)a1 + v18);
  uint64_t v20 = v18 & 0xFFFFFFF8;
  if (v19 >= 2 && v20 != 0) {
    unsigned int v19 = *a1 + 2;
  }
  uint64_t v22 = ~v9;
  uint64_t v23 = ~v8;
  if (v19 == 1)
  {
    (*(void (**)(_DWORD *))(v16 + 8))(a1);
    unint64_t v24 = (unint64_t)a1 + v17;
  }
  else
  {
    (*(void (**)(_DWORD *, uint64_t))(v31 + 8))(a1, v32);
    unint64_t v24 = (unint64_t)a1 + v10;
  }
  unint64_t v25 = v24 & v22;
  swift_bridgeObjectRelease();
  unint64_t v26 = (v11 + v25) & v23;
  uint64_t v27 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  v27(v26, v6);
  uint64_t v28 = (v13 + v26) & v23;
  v27(v28, v6);
  uint64_t v29 = (v13 + v28) & v23;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v29, 1, v6)) {
    v27(v29, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t FormatFileReference.metadata.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v4 = MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v7 + 16))(v6, v4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    type metadata accessor for FormatMetadata();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_1BFEC1150((uint64_t)&v6[*(int *)(TupleTypeMetadata2 + 48)], a2);
  }
  else
  {
    sub_1BFEBE33C();
    sub_1BFEC1150((uint64_t)&v6[*(int *)(v10 + 48)], a2);
    uint64_t v8 = sub_1C1515FDC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
}

uint64_t sub_1BFEBDE54(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v57 = sub_1C1515FDC();
  uint64_t v5 = *(void *)(v57 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v9 | 7;
  uint64_t v11 = (v9 | 7) + v6;
  uint64_t v12 = v9 + 16;
  size_t v13 = *(void *)(v8 + 64);
  size_t v14 = v13 + v9;
  uint64_t v15 = (v13 + v9 + ((v13 + v9 + ((v9 + 16) & ~v9)) & ~v9)) & ~v9;
  if (!*(_DWORD *)(v8 + 84)) {
    ++v13;
  }
  size_t __n = v13;
  size_t v59 = v13 + 7;
  unint64_t v16 = ((((((((v13 + 7 + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v18 = *(void *)(v17 + 64) + v10;
  if (v16 + (v18 & ~v10) <= v16 + (v11 & ~(v9 | 7))) {
    unint64_t v19 = v16 + (v11 & ~(v9 | 7));
  }
  else {
    unint64_t v19 = v16 + (v18 & ~v10);
  }
  unsigned int v20 = *((unsigned __int8 *)a2 + v19);
  unint64_t v60 = v19;
  uint64_t v21 = v19 & 0xFFFFFFF8;
  if (v20 >= 2 && v21 != 0) {
    unsigned int v20 = *a2 + 2;
  }
  uint64_t v23 = ~v10;
  uint64_t v24 = ~v9;
  if (v20 == 1)
  {
    (*(void (**)(uint64_t, _DWORD *))(v17 + 16))(a1, a2);
    unint64_t v25 = (void *)((v18 + a1) & v23);
    unint64_t v26 = (void *)(((unint64_t)a2 + v18) & v23);
    void *v25 = *v26;
    v25[1] = v26[1];
    unint64_t v27 = ((unint64_t)v25 + v12) & v24;
    unint64_t v28 = ((unint64_t)v26 + v12) & v24;
    uint64_t v29 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
    swift_bridgeObjectRetain();
    v29(v27, v28, v7);
    unint64_t v30 = (v14 + v27) & v24;
    unint64_t v31 = (v14 + v28) & v24;
    v29(v30, v31, v7);
    uint64_t v32 = (void *)((v14 + v30) & v24);
    uint64_t v33 = (const void *)((v14 + v31) & v24);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v33, 1, v7))
    {
      memcpy(v32, v33, __n);
    }
    else
    {
      v29((unint64_t)v32, (unint64_t)v33, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v32, 0, 1, v7);
    }
    uint64_t v43 = (void *)(((unint64_t)v32 + v59) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v44 = (void *)(((unint64_t)v33 + v59) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v43 = *v44;
    uint64_t v45 = (void *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v46 = (void *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v45 = *v46;
    uint64_t v47 = (void *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v48 = (void *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v47 = *v48;
    *(void *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v49 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, _DWORD *, uint64_t))(v5 + 16))(a1, a2, v57);
    uint64_t v34 = (void *)((v11 + a1) & v23);
    uint64_t v35 = (void *)(((unint64_t)a2 + v11) & v23);
    *uint64_t v34 = *v35;
    v34[1] = v35[1];
    unint64_t v36 = ((unint64_t)v34 + v12) & v24;
    unint64_t v37 = ((unint64_t)v35 + v12) & v24;
    uint64_t v38 = *(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16);
    swift_bridgeObjectRetain();
    v38(v36, v37, v7);
    unint64_t v39 = (v14 + v36) & v24;
    unint64_t v40 = (v14 + v37) & v24;
    v38(v39, v40, v7);
    uint64_t v41 = (void *)((v14 + v39) & v24);
    uint64_t v42 = (const void *)((v14 + v40) & v24);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v42, 1, v7))
    {
      memcpy(v41, v42, __n);
    }
    else
    {
      v38((unint64_t)v41, (unint64_t)v42, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v41, 0, 1, v7);
    }
    char v49 = 0;
    char v50 = (void *)(((unint64_t)v41 + v59) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v51 = (void *)(((unint64_t)v42 + v59) & 0xFFFFFFFFFFFFFFF8);
    *char v50 = *v51;
    char v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v53 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
    *char v52 = *v53;
    uint64_t v54 = (void *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8);
    char v55 = (void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v54 = *v55;
    *(void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
  }
  *(unsigned char *)(a1 + v60) = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BFEBE33C()
{
  if (!qword_1EB871140)
  {
    sub_1C1515FDC();
    type metadata accessor for FormatMetadata();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB871140);
    }
  }
}

uint64_t sub_1BFEBE3AC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for FormatMetadata();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBE3F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatFileReference.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v92 = a4;
  uint64_t v82 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v89 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEC0618(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v84 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v83 = (char *)&v77 - v12;
  uint64_t v85 = type metadata accessor for FormatMetadata();
  uint64_t v81 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v101 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v80 = (char *)&v77 - v15;
  sub_1BFEC2DA8();
  uint64_t v86 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v87 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFF31C(0, &qword_1EB87A530, MEMORY[0x1E4FBBDC0]);
  uint64_t v98 = v18;
  uint64_t v97 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v102 = (char *)&v77 - v19;
  uint64_t v20 = sub_1C15166DC();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v99 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1C15166FC();
  uint64_t v88 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0618(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], v8);
  MEMORY[0x1F4188790](v25 - 8);
  unint64_t v27 = (char *)&v77 - v26;
  uint64_t v95 = sub_1C1515FDC();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v29 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = a2;
  uint64_t v100 = a3;
  uint64_t v91 = type metadata accessor for FormatFileReference();
  uint64_t v93 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  unint64_t v31 = (char *)&v77 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v90 = (char *)&v77 - v33;
  uint64_t v34 = a1[3];
  uint64_t v103 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v34);
  uint64_t v35 = v104;
  sub_1C1520E9C();
  if (v35)
  {
    unint64_t v36 = v35;
  }
  else
  {
    uint64_t v78 = v31;
    uint64_t v79 = v29;
    uint64_t v104 = v24;
    __swift_project_boxed_opaque_existential_1(&v105, v106);
    uint64_t v48 = sub_1C1520ABC();
    uint64_t v50 = v49;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
    uint64_t v51 = v27;
    sub_1C1515F7C();
    uint64_t v52 = v94;
    uint64_t v53 = v95;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v94 + 48))(v27, 1, v95) != 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v57 = v79;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v79, v51, v53);
      sub_1BFEBE33C();
      uint64_t v59 = v52;
      unint64_t v60 = v78;
      uint64_t v61 = &v78[*(int *)(v58 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v78, v57, v53);
      FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v61, 0, 0, 0, 0);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v57, v53);
      uint64_t v62 = v91;
      swift_storeEnumTagMultiPayload();
      uint64_t v63 = v93;
      uint64_t v64 = v90;
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v90, v60, v62);
      unint64_t v37 = v103;
      uint64_t v65 = v92;
LABEL_15:
      (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v65, v64, v62);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    }
    sub_1BFEC09E4((uint64_t)v27, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    sub_1C15166CC();
    sub_1BFEC0618(0, (unint64_t *)&qword_1EB87A8C0, (uint64_t (*)(uint64_t))sub_1C00653B4, MEMORY[0x1E4FBBE00]);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1529AE0;
    *(void *)(inited + 32) = 7107189;
    *(void *)(inited + 40) = 0xE300000000000000;
    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
    *(void *)(inited + 48) = v48;
    *(void *)(inited + 56) = v50;
    sub_1BFF99224(inited);
    sub_1BFF878DC(&qword_1EA1A5518, MEMORY[0x1E4F27DE0]);
    char v55 = v104;
    sub_1C1515CDC();
    uint64_t v56 = sub_1C15166EC();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v55, v22);
    unint64_t v36 = (void *)v56;
    swift_willThrow();
  }
  uint64_t v38 = v102;
  unint64_t v37 = v103;
  unint64_t v39 = v101;
  __swift_project_boxed_opaque_existential_1(v103, v103[3]);
  sub_1BFEB6A24();
  sub_1C1520EBC();
  __swift_project_boxed_opaque_existential_1(v37, v37[3]);
  uint64_t v40 = sub_1C1520EAC();
  char v41 = Dictionary<>.errorOnUnknownKeys.getter(v40);
  swift_bridgeObjectRelease();
  uint64_t v42 = v98;
  if ((v41 & 1) == 0)
  {
LABEL_10:
    type metadata accessor for FormatFileReference.CodingType();
    long long v105 = 0uLL;
    swift_getWitnessTable();
    sub_1C15206EC();
    if (v107)
    {
      long long v105 = xmmword_1C152C800;
      sub_1C15206EC();
      long long v105 = xmmword_1C1533700;
      sub_1BFF878DC(&qword_1EB874B00, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      uint64_t v47 = v85;
      sub_1C152065C();
      uint64_t v71 = (uint64_t)v84;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v84, 1, v47) == 1)
      {
        FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v39, 0, 0, 0, 0);

        (*(void (**)(char *, uint64_t))(v97 + 8))(v38, v42);
        sub_1BFEC09E4(v71, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v97 + 8))(v38, v42);

        sub_1BFEC1150(v71, (uint64_t)v39);
      }
      uint64_t v65 = v92;
      uint64_t v62 = v91;
      uint64_t v64 = v90;
      uint64_t v73 = v96;
      uint64_t v74 = (uint64_t)&v64[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v64, v89, v73);
      sub_1BFEC1150((uint64_t)v39, v74);
    }
    else
    {
      long long v105 = xmmword_1C152C800;
      sub_1BFF878DC(&qword_1EB873EA0, (void (*)(uint64_t))sub_1BFEC2DA8);
      sub_1C15206EC();
      long long v105 = xmmword_1C1533700;
      sub_1BFF878DC(&qword_1EB874B00, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      uint64_t v69 = (uint64_t)v83;
      uint64_t v70 = v85;
      sub_1C152065C();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v69, 1, v70) == 1)
      {
        uint64_t v72 = v80;
        FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v80, 0, 0, 0, 0);

        (*(void (**)(char *, uint64_t))(v97 + 8))(v38, v42);
        sub_1BFEC09E4(v69, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v97 + 8))(v38, v42);

        uint64_t v72 = v80;
        sub_1BFEC1150(v69, (uint64_t)v80);
      }
      uint64_t v65 = v92;
      uint64_t v62 = v91;
      uint64_t v64 = v90;
      sub_1BFEBE33C();
      uint64_t v76 = (uint64_t)&v64[*(int *)(v75 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v64, v87, v95);
      sub_1BFEC1150((uint64_t)v72, v76);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v63 = v93;
    goto LABEL_15;
  }
  uint64_t v43 = sub_1C152070C();
  uint64_t v44 = *(void *)(v43 + 16);
  if (!v44)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v45 = (unint64_t *)(v43 + 40);
  while (1)
  {
    unint64_t v46 = *v45;
    if (*v45 >= 4) {
      break;
    }
    v45 += 2;
    if (!--v44) {
      goto LABEL_9;
    }
  }
  uint64_t v66 = *(v45 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1C02570B4();
  swift_allocError();
  *(void *)uint64_t v67 = v66;
  *(void *)(v67 + 8) = v46;
  *(void *)(v67 + 16) = &unk_1F1B892A0;
  *(_OWORD *)(v67 + 24) = xmmword_1C15363B0;
  swift_willThrow();
  sub_1C0257108(v66, v46);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v38, v42);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
}

uint64_t sub_1BFEBF3E8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C1515FDC();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBF42C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBF474(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBF4BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEBF504(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FormatFileReference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFEBF564@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_1BFEC0CE8(0);
  __n128 v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 8))(a1, a2, v7);
  uint64_t v10 = sub_1C151928C();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, v10);
  }
  sub_1C151924C();
  return sub_1BFEC001C((uint64_t)v9);
}

uint64_t FormatFileReference.formatVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for FormatMetadata();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  __n128 v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  FormatFileReference.metadata.getter(a1, (uint64_t)v7);
  sub_1BFEC03F4((uint64_t)&v7[*(int *)(v5 + 36)], a2);
  return sub_1BFEBF838((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
}

uint64_t sub_1BFEBF750(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEBF7B8(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C03B8104(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFEBF838(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for FormatMetadata(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  v7(a1 + a2[6], v5);
  uint64_t v8 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFEBF9CC(uint64_t a1, void *a2)
{
  uint64_t v20 = a1;
  uint64_t v3 = (void (*)(uint64_t))MEMORY[0x1E4FAB0A8];
  sub_1BFEC2080(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v19 - v5;
  uint64_t v7 = sub_1C151928C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v19 - v12;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  uint64_t v14 = sub_1C1520EAC();
  Dictionary<>.appVersion.getter(v14, (uint64_t)v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1C1520EAC();
  Dictionary<>.formatVersion.getter(v15, (uint64_t)v10);
  swift_bridgeObjectRelease();
  uint64_t v16 = type metadata accessor for FormatMetadata();
  sub_1BFEC03F4(v20 + *(int *)(v16 + 28), (uint64_t)v6);
  uint64_t v21 = v10;
  LOBYTE(a2) = sub_1C0989CA8((void (*)(uint64_t *__return_ptr, char *))sub_1BFEC2B9C);
  sub_1BFEC0A54((uint64_t)v6, &qword_1EB871500, v3);
  sub_1BFEBF504(&qword_1EB874AF8, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
  LOBYTE(a2) = sub_1C151805C() & ((a2 == 2) | a2);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v10, v7);
  v17(v13, v7);
  return a2 & 1;
}

uint64_t Dictionary<>.formatVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_1C152039C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFD320(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v23 - v12;
  sub_1C152038C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (*(void *)(a1 + 16) && (unint64_t v15 = sub_1BFEFE43C((uint64_t)v10), (v16 & 1) != 0))
    {
      sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v15, (uint64_t)&v23);
    }
    else
    {
      long long v23 = 0u;
      long long v24 = 0u;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (*((void *)&v24 + 1))
    {
      uint64_t v17 = sub_1C151928C();
      int v18 = swift_dynamicCast();
      uint64_t v19 = *(void *)(v17 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, v18 ^ 1u, 1, v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v17) != 1) {
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a2, v13, v17);
      }
    }
    else
    {
      sub_1BFEFE4A0((uint64_t)&v23);
      uint64_t v20 = sub_1C151928C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
    }
    sub_1BFEC001C((uint64_t)v13);
    if (qword_1EB87BD00 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C151928C();
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB8799C8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a2, v22, v21);
  }
  return result;
}

uint64_t sub_1BFEC001C(uint64_t a1)
{
  sub_1BFEC04EC(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, char *a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v46 = a1;
  uint64_t v47 = a2;
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v48 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  char v16 = (char *)&v39 - v15;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v39 - v18;
  uint64_t v20 = sub_1C151928C();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  long long v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (char *)&v39 - v25;
  sub_1C15192AC();
  unint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v28 = v27(v19, 1, v20);
  uint64_t v43 = v23;
  uint64_t v40 = v26;
  if (v28 == 1)
  {
    sub_1C151924C();
    sub_1BFEC0984((uint64_t)v19, (uint64_t (*)(void))sub_1BFEC0CE8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v19, v20);
  }
  uint64_t v30 = a10;
  uint64_t v29 = a11;
  uint64_t v31 = a8;
  sub_1C15192AC();
  if (v27(v16, 1, v20) == 1)
  {
    uint64_t v32 = v43;
    sub_1C151923C();
    sub_1BFEC0984((uint64_t)v16, (uint64_t (*)(void))sub_1BFEC0CE8);
  }
  else
  {
    uint64_t v32 = v43;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v43, v16, v20);
  }
  uint64_t v33 = (uint64_t)v48;
  sub_1C15192AC();
  if (!a8) {
    uint64_t v31 = MEMORY[0x1E4FBC870];
  }
  if (a9) {
    uint64_t v34 = a9;
  }
  else {
    uint64_t v34 = MEMORY[0x1E4FBC870];
  }
  uint64_t v45 = v34;
  if (!a10) {
    uint64_t v30 = MEMORY[0x1E4FBC870];
  }
  if (!a11) {
    uint64_t v29 = MEMORY[0x1E4FBC870];
  }
  uint64_t v35 = v47;
  *(void *)a7 = v46;
  *((void *)a7 + 1) = v35;
  unint64_t v36 = (int *)type metadata accessor for FormatMetadata();
  unint64_t v37 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  v37(&a7[v36[5]], v40, v20);
  v37(&a7[v36[6]], v32, v20);
  uint64_t result = sub_1BFEC1200(v33, (uint64_t)&a7[v36[7]]);
  *(void *)&a7[v36[8]] = v31;
  *(void *)&a7[v36[9]] = v45;
  *(void *)&a7[v36[10]] = v30;
  *(void *)&a7[v36[11]] = v29;
  return result;
}

uint64_t sub_1BFEC03F4(uint64_t a1, uint64_t a2)
{
  sub_1BFEC0488(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BFEC0488(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC04EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC0550(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC05B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC0618(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC067C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC06E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEC0734(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFEC0798(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEC0488(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFEC0808(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEC0868(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEC08C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C046D828(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFEC0924(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEC0984(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEC09E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEC0618(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFEC0A54(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEC2080(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BFEC0AB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC0B14(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEC0B68(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEC0BBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC0C20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC0C84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC0CE8(uint64_t a1)
{
}

uint64_t sub_1BFEC0D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C151928C();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v28 = a3;
  uint64_t v29 = a2;
  uint64_t v9 = *(int *)(a3 + 36);
  uint64_t v30 = a1;
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = a2 + v9;
  uint64_t v12 = *(void *)(a2 + v9);
  uint64_t v13 = *(void *)(v11 + 8);
  void *v10 = v12;
  v10[1] = v13;
  uint64_t v14 = (int *)type metadata accessor for FormatMetadata();
  uint64_t v15 = v14[5];
  char v16 = (char *)v10 + v15;
  uint64_t v17 = v11 + v15;
  swift_bridgeObjectRetain();
  v8((uint64_t)v16, v17, v6);
  v8((uint64_t)v10 + v14[6], v11 + v14[6], v6);
  uint64_t v18 = v14[7];
  uint64_t v19 = (char *)v10 + v18;
  uint64_t v20 = (const void *)(v11 + v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11 + v18, 1, v6))
  {
    sub_1BFEC2080(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v19, (uint64_t)v20, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  *(void *)((char *)v10 + v14[8]) = *(void *)(v11 + v14[8]);
  *(void *)((char *)v10 + v14[9]) = *(void *)(v11 + v14[9]);
  *(void *)((char *)v10 + v14[10]) = *(void *)(v11 + v14[10]);
  *(void *)((char *)v10 + v14[11]) = *(void *)(v11 + v14[11]);
  uint64_t v22 = *(int *)(v28 + 40);
  uint64_t v23 = v30 + v22;
  uint64_t v24 = v29 + v22;
  uint64_t v25 = sub_1C1515FDC();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v23, v24, v25);
  return v30;
}

uint64_t sub_1BFEC0FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + *(int *)(a2 + 36);
  swift_bridgeObjectRelease();
  unint64_t v8 = (int *)type metadata accessor for FormatMetadata();
  v6(v7 + v8[5], v4);
  v6(v7 + v8[6], v4);
  uint64_t v9 = v7 + v8[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4)) {
    v6(v9, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + *(int *)(a2 + 40);
  uint64_t v11 = sub_1C1515FDC();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  return v12(v10, v11);
}

uint64_t sub_1BFEC1150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatMetadata()
{
  uint64_t result = qword_1EB874B08;
  if (!qword_1EB874B08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFEC1200(uint64_t a1, uint64_t a2)
{
  sub_1C0368F0C(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BFEC1280(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC12E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t Dictionary<>.appVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEFD320(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = sub_1C152039C();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEFD320(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v23 - v12;
  sub_1C152038C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (*(void *)(a1 + 16) && (unint64_t v15 = sub_1BFEFE43C((uint64_t)v10), (v16 & 1) != 0))
    {
      sub_1BFF6A008(*(void *)(a1 + 56) + 32 * v15, (uint64_t)&v23);
    }
    else
    {
      long long v23 = 0u;
      long long v24 = 0u;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (*((void *)&v24 + 1))
    {
      uint64_t v17 = sub_1C151928C();
      int v18 = swift_dynamicCast();
      uint64_t v19 = *(void *)(v17 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, v18 ^ 1u, 1, v17);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v17) != 1) {
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a2, v13, v17);
      }
    }
    else
    {
      sub_1BFEFE4A0((uint64_t)&v23);
      uint64_t v20 = sub_1C151928C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v13, 1, 1, v20);
    }
    sub_1BFEC001C((uint64_t)v13);
    if (qword_1EB8943F8 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1C151928C();
    uint64_t v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1EB893CD8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a2, v22, v21);
  }
  return result;
}

uint64_t sub_1BFEC170C@<X0>(uint64_t *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v92 = a4;
  uint64_t v93 = a5;
  uint64_t v88 = a3;
  uint64_t v89 = a2;
  uint64_t v91 = a6;
  sub_1BFEC2080(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v84 = (char *)&v73 - v8;
  uint64_t v9 = sub_1C1515FDC();
  uint64_t v82 = *(void *)(v9 - 8);
  uint64_t v83 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v79 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v78 = (char *)&v73 - v12;
  sub_1BFEC2080(0, (unint64_t *)&unk_1EB8710E0, MEMORY[0x1E4F26ED8]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v86 = (char *)&v73 - v14;
  uint64_t v85 = sub_1C15156FC();
  uint64_t v87 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v81 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v80 = (char *)&v73 - v17;
  uint64_t v18 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  long long v23 = (char *)&v73 - v22;
  sub_1BFEC2080(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v73 - v25;
  uint64_t v27 = sub_1C151928C();
  uint64_t v90 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v32 = (char *)&v73 - v31;
  uint64_t v33 = *a1;
  uint64_t v34 = a1[1];
  v94[0] = *a1;
  v94[1] = v34;
  sub_1BFF27ECC();
  uint64_t v35 = (void *)sub_1C151FF1C();
  if (v35[2] != 2)
  {
    uint64_t v47 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v91, 1, 1, v47);
    return swift_bridgeObjectRelease();
  }
  uint64_t v75 = v34;
  uint64_t v76 = v33;
  uint64_t v73 = v29;
  uint64_t v77 = v32;
  uint64_t v74 = v20;
  uint64_t v36 = v35[4];
  uint64_t v37 = v35[5];
  uint64_t v38 = v35[6];
  uint64_t v39 = v35[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = MEMORY[0x1C18C6220](v36, v37, v38, v39);
  uint64_t v42 = v41;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C15192BC();
  uint64_t v43 = v90;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v26, 1, v27) == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = &qword_1EB871500;
    uint64_t v45 = (void (*)(uint64_t))MEMORY[0x1E4FAB0A8];
    uint64_t v46 = (uint64_t)v26;
LABEL_4:
    sub_1BFEC0A54(v46, v44, v45);
LABEL_10:
    uint64_t v56 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v91, 1, 1, v56);
  }
  uint64_t v49 = v27;
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  uint64_t v51 = v77;
  v50(v77, v26, v49);
  uint64_t v52 = (uint64_t)v23;
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, v40, v42, v23, 0, 0, 0, 0);
  if ((sub_1BFEBF9CC((uint64_t)v23, v89) & 1) == 0)
  {
    sub_1BFEC2C64((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v51, v49);
    goto LABEL_10;
  }
  uint64_t v89 = v50;
  uint64_t v53 = v86;
  sub_1C151564C();
  uint64_t v54 = v87;
  uint64_t v55 = v85;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v53, 1, v85) == 1)
  {
    sub_1BFEC2C64(v52, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v77, v49);
    uint64_t v44 = (unint64_t *)&unk_1EB8710E0;
    uint64_t v45 = (void (*)(uint64_t))MEMORY[0x1E4F26ED8];
    uint64_t v46 = (uint64_t)v53;
    goto LABEL_4;
  }
  uint64_t v88 = v49;
  uint64_t v57 = v80;
  (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v80, v53, v55);
  uint64_t v58 = (void (*)(void *, void))sub_1C151567C();
  sub_1C151E80C();
  v58(v94, 0);
  uint64_t v59 = v81;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v81, v57, v55);
  uint64_t v60 = (uint64_t)v84;
  sub_1C151565C();
  uint64_t v61 = *(void (**)(char *, uint64_t))(v54 + 8);
  v61(v59, v55);
  v61(v57, v55);
  uint64_t v63 = v82;
  uint64_t v62 = v83;
  int v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v60, 1, v83);
  uint64_t v65 = v91;
  if (v64 == 1)
  {
    sub_1BFEC2C64(v52, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v77, v88);
    sub_1BFEC0A54(v60, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    uint64_t v66 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v65, 1, 1, v66);
  }
  else
  {
    uint64_t v67 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 32);
    char v68 = v78;
    v67(v78, v60, v62);
    uint64_t v69 = (uint64_t)v73;
    v89(v73, v77, v88);
    uint64_t v70 = (uint64_t)v74;
    sub_1BFEC1150(v52, (uint64_t)v74);
    uint64_t v71 = (uint64_t)v79;
    v67(v79, (uint64_t)v68, v62);
    sub_1BFEC40F4(v69, v70, v71, v65);
    uint64_t v72 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v65, 0, 1, v72);
  }
}

void sub_1BFEC201C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC2080(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFEC20EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C14195F4);
}

uint64_t FormatObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v34 = a4;
  sub_1BFEC2810(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v39 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for FormatMetadata();
  uint64_t v35 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v33 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v42 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatObject.CodingKeys();
  swift_getWitnessTable();
  uint64_t v12 = sub_1C152072C();
  uint64_t v36 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v40 = a3;
  uint64_t v41 = a2;
  uint64_t v15 = type metadata accessor for FormatObject();
  uint64_t v32 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v30 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v18 = v43;
  sub_1C1520EBC();
  if (v18) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v30 = v15;
  uint64_t v31 = v17;
  uint64_t v20 = v37;
  uint64_t v19 = v38;
  uint64_t v43 = a1;
  uint64_t v21 = (uint64_t)v39;
  char v45 = 0;
  uint64_t v22 = v41;
  sub_1C15206EC();
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v31, v42, v22);
  char v44 = 1;
  sub_1BFEBE3AC(&qword_1EB874B00);
  sub_1C152065C();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v21, 1, v19) == 1)
  {
    uint64_t v24 = v33;
    FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v33, 0, 0, 0, 0);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v12);
    sub_1BFEC2844(v21, (uint64_t (*)(void))sub_1BFEC2810);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v12);
    uint64_t v24 = v33;
    sub_1BFEC1150(v21, (uint64_t)v33);
  }
  uint64_t v25 = v34;
  uint64_t v26 = (uint64_t)v43;
  uint64_t v28 = v30;
  uint64_t v27 = v31;
  uint64_t v29 = v32;
  sub_1BFEC1150((uint64_t)v24, (uint64_t)&v31[*(int *)(v30 + 36)]);
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 16))(v25, v27, v28);
  __swift_destroy_boxed_opaque_existential_1(v26);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v27, v28);
}

uint64_t sub_1BFEC2650(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_1C151928C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  uint64_t v9 = (v8 + ((v4 + a1 + (v8 | 7)) & ~(v8 | 7)) + 16) & ~v8;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v10(v9, v5);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = (v11 + v8 + v9) & ~v8;
  v10(v12, v5);
  uint64_t v13 = (v11 + v8 + v12) & ~v8;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v13, 1, v5)) {
    v10(v13, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t getEnumTagSinglePayload for FormatMetadata(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C13734CC);
}

void sub_1BFEC2810(uint64_t a1)
{
}

uint64_t sub_1BFEC2844(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FormatObject.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1BFEC28BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  int v8 = a7 >> 6;
  if (v8 == 2)
  {
LABEL_4:
    swift_bridgeObjectRelease();
    return;
  }
  if (v8 != 1)
  {
    if (a7 >> 6) {
      return;
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEC41E8(a3, a4, a5, a6, a7 & 1);
}

uint64_t sub_1BFEC295C(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFEC2A48(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFEC29DC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1BFEC2B10(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BFEC2A48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC2AAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEC2B10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1BFEC2B64@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C1518F6C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BFEC2B9C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1BFEC2BBC(a1);
}

uint64_t sub_1BFEC2BBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C1518F6C();
  *a1 = result & 1;
  return result;
}

uint64_t destroy for FormatStyle()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FormatObject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFEC2C64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void destroy for FormatType(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  unsigned __int8 v8 = *(unsigned char *)(a1 + 80);
  sub_1BFEC28BC(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t destroy for FormatGroup(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 72) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BFEC2DA8()
{
  if (!qword_1EB873EA8)
  {
    sub_1C1515FDC();
    sub_1C085F050(&qword_1EB884CF0, MEMORY[0x1E4F276F0]);
    unint64_t v0 = type metadata accessor for FormatValue();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB873EA8);
    }
  }
}

uint64_t type metadata accessor for FormatFileReference.CodingType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BFEC2E54(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

char *initializeWithCopy for FormatMetadata(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  unsigned __int8 v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1C151928C();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  v12(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    sub_1BFEC0CE8(0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v18 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t FormatObject.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v23 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v23);
  uint64_t v24 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v26 = (char *)&v23 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v25 = (uint64_t *)((char *)&v23 - v8);
  uint64_t v9 = *(char **)(a2 + 16);
  uint64_t v27 = a2;
  uint64_t v28 = v9;
  type metadata accessor for FormatObject.CodingKeys();
  swift_getWitnessTable();
  uint64_t v10 = sub_1C152083C();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v23 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C1520F0C();
  char v31 = 0;
  uint64_t v14 = v29;
  sub_1C152080C();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v28 = v13;
  uint64_t v29 = v11;
  uint64_t v16 = (uint64_t)v24;
  uint64_t v17 = v25;
  uint64_t v18 = v27;
  sub_1BFEC3F7C(v27, (uint64_t)v25);
  uint64_t v19 = v26;
  FormatMetadata.init(identifier:minNewsVersion:maxNewsVersion:formatVersion:allowedSegmentSetIds:blockedSegmentSetIds:allowedPlatforms:blockedPlatforms:)(0, 0, 0, 0, 0, 0, v26, 0, 0, 0, 0);
  char v20 = _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(v17, v19);
  sub_1BFEC2844((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  sub_1BFEC2844((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  if (v20) {
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v10);
  }
  sub_1BFEC3F7C(v18, v16);
  char v30 = 1;
  sub_1BFEBE3AC(&qword_1EB85D128);
  uint64_t v21 = v28;
  sub_1C152080C();
  uint64_t v22 = v29;
  sub_1BFEC2844(v16, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v21, v10);
}

uint64_t _s8NewsFeed14FormatMetadataV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1C151928C();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC3EE8();
  uint64_t v9 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v29 - v16;
  MEMORY[0x1F4188790](v18);
  char v20 = (char *)&v29 - v19;
  uint64_t v21 = a1[1];
  uint64_t v22 = a2[1];
  if (!v21)
  {
    if (v22) {
      goto LABEL_21;
    }
    goto LABEL_8;
  }
  if (!v22) {
    goto LABEL_21;
  }
  if (*a1 == *a2 && v21 == v22 || (char v23 = sub_1C1520A9C(), v24 = 0, (v23 & 1) != 0))
  {
LABEL_8:
    uint64_t v32 = v5;
    uint64_t v25 = (int *)type metadata accessor for FormatMetadata();
    if ((sub_1C151922C() & 1) == 0 || (sub_1C151922C() & 1) == 0) {
      goto LABEL_21;
    }
    sub_1BFEC03F4((uint64_t)a1 + v25[7], (uint64_t)v20);
    sub_1BFEC03F4((uint64_t)a2 + v25[7], (uint64_t)v17);
    uint64_t v26 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_1BFEC03F4((uint64_t)v20, (uint64_t)v11);
    uint64_t v31 = v26;
    sub_1BFEC03F4((uint64_t)v17, v26);
    char v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
    if (v30((uint64_t)v11, 1, v4) == 1)
    {
      sub_1BFEC0984((uint64_t)v17, (uint64_t (*)(void))sub_1BFEC0CE8);
      sub_1BFEC0984((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
      if (v30(v31, 1, v4) == 1)
      {
        sub_1BFEC0984((uint64_t)v11, (uint64_t (*)(void))sub_1BFEC0CE8);
LABEL_17:
        if ((sub_1BFEC3898(*(void *)((char *)a1 + v25[8]), *(void *)((char *)a2 + v25[8])) & 1) != 0
          && (sub_1BFEC3898(*(void *)((char *)a1 + v25[9]), *(void *)((char *)a2 + v25[9])) & 1) != 0
          && (sub_1BFEC3A64(*(void *)((char *)a1 + v25[10]), *(void *)((char *)a2 + v25[10])) & 1) != 0)
        {
          char v24 = sub_1BFEC3A64(*(void *)((char *)a1 + v25[11]), *(void *)((char *)a2 + v25[11]));
          return v24 & 1;
        }
LABEL_21:
        char v24 = 0;
        return v24 & 1;
      }
    }
    else
    {
      sub_1BFEC03F4((uint64_t)v11, (uint64_t)v14);
      if (v30(v31, 1, v4) != 1)
      {
        uint64_t v27 = v32;
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v7, v31, v4);
        sub_1BFEBE3F0(&qword_1EB85C8B8, MEMORY[0x1E4FAB0A8]);
        LODWORD(v31) = sub_1C151E5CC();
        uint64_t v32 = *(void *)(v27 + 8);
        ((void (*)(char *, uint64_t))v32)(v7, v4);
        sub_1BFEC0984((uint64_t)v17, (uint64_t (*)(void))sub_1BFEC0CE8);
        sub_1BFEC0984((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
        ((void (*)(char *, uint64_t))v32)(v14, v4);
        sub_1BFEC0984((uint64_t)v11, (uint64_t (*)(void))sub_1BFEC0CE8);
        if ((v31 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_17;
      }
      sub_1BFEC0984((uint64_t)v17, (uint64_t (*)(void))sub_1BFEC0CE8);
      sub_1BFEC0984((uint64_t)v20, (uint64_t (*)(void))sub_1BFEC0CE8);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v4);
    }
    sub_1BFEC0984((uint64_t)v11, (uint64_t (*)(void))sub_1BFEC3EE8);
    goto LABEL_21;
  }
  return v24 & 1;
}

uint64_t sub_1BFEC3898(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_32;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    unsigned int v16 = *(_DWORD *)(*(void *)(v3 + 48) + 4 * v12);
    uint64_t result = MEMORY[0x1C18C88D0](*(void *)(a2 + 40), v16, 4);
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(_DWORD *)(v19 + 4 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(_DWORD *)(v19 + 4 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_1BFEC3A64(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 56);
  uint64_t v32 = result;
  uint64_t v33 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v34 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  if ((v7 & v5) == 0) {
    goto LABEL_8;
  }
  while (2)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    uint64_t v11 = (v8 - 1) & v8;
    unint64_t v12 = v10 | (v4 << 6);
LABEL_22:
    unsigned int v16 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v12);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    sub_1C1520DBC();
    unint64_t v35 = v11;
    int64_t v36 = v4;
    if (v18 == 1 || v18 == 2 || v18 == 3)
    {
      sub_1C1520DCC();
    }
    else
    {
      sub_1C1520DCC();
      sub_1C1520DDC();
      if (v18)
      {
        swift_bridgeObjectRetain_n();
        sub_1C151E77C();
        sub_1BFEE653C(v17, v18);
      }
    }
    uint64_t v19 = sub_1C1520E0C();
    uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v21 = v19 & ~v20;
    if (((*(void *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    {
LABEL_63:
      sub_1BFEE653C(v17, v18);
      return 0;
    }
    uint64_t v22 = ~v20;
    while (1)
    {
      char v23 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v21);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      switch(v25)
      {
        case 1:
          if (v18 == 1)
          {
            uint64_t v30 = *v23;
            uint64_t v31 = 1;
            goto LABEL_58;
          }
          goto LABEL_42;
        case 2:
          if (v18 == 2)
          {
            uint64_t v30 = *v23;
            uint64_t v31 = 2;
            goto LABEL_58;
          }
          goto LABEL_42;
        case 3:
          if (v18 == 3)
          {
            uint64_t v30 = *v23;
            uint64_t v31 = 3;
            goto LABEL_58;
          }
LABEL_42:
          sub_1BFE40340(v17, v18);
          sub_1BFE40340(v24, v25);
          sub_1BFEE653C(v24, v25);
          uint64_t v26 = v17;
          uint64_t v27 = v18;
          goto LABEL_43;
      }
      if ((unint64_t)(v18 - 1) < 3) {
        goto LABEL_42;
      }
      if (!v25)
      {
        sub_1BFE40340(v17, v18);
        sub_1BFE40340(v24, 0);
        sub_1BFE40340(v17, v18);
        sub_1BFE40340(v24, 0);
        sub_1BFEE653C(v24, 0);
        sub_1BFEE653C(v17, v18);
        sub_1BFEE653C(v24, 0);
        if (!v18) {
          goto LABEL_59;
        }
        sub_1BFEE653C(v17, v18);
        uint64_t v26 = v24;
LABEL_57:
        uint64_t v27 = 0;
LABEL_43:
        sub_1BFEE653C(v26, v27);
        goto LABEL_44;
      }
      if (!v18)
      {
        sub_1BFE40340(v17, 0);
        sub_1BFE40340(v24, v25);
        sub_1BFEE653C(v24, v25);
        uint64_t v26 = v17;
        goto LABEL_57;
      }
      if (v24 == v17 && v25 == v18) {
        break;
      }
      char v29 = sub_1C1520A9C();
      sub_1BFE40340(v17, v18);
      sub_1BFE40340(v24, v25);
      sub_1BFEE653C(v24, v25);
      sub_1BFEE653C(v17, v18);
      if (v29) {
        goto LABEL_59;
      }
LABEL_44:
      unint64_t v21 = (v21 + 1) & v22;
      if (((*(void *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
        goto LABEL_63;
      }
    }
    sub_1BFE40340(v17, v18);
    sub_1BFE40340(v17, v18);
    sub_1BFEE653C(v17, v18);
    uint64_t v30 = v17;
    uint64_t v31 = v18;
LABEL_58:
    sub_1BFEE653C(v30, v31);
LABEL_59:
    uint64_t v3 = v32;
    uint64_t result = sub_1BFEE653C(v17, v18);
    unint64_t v8 = v35;
    int64_t v4 = v36;
    if (v35) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v13 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_66;
  }
  if (v13 >= v34) {
    return 1;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v13);
  ++v4;
  if (v14) {
    goto LABEL_21;
  }
  int64_t v4 = v13 + 1;
  if (v13 + 1 >= v34) {
    return 1;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v4);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v4 = v13 + 2;
  if (v13 + 2 >= v34) {
    return 1;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v4);
  if (v14) {
    goto LABEL_21;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v34) {
    return 1;
  }
  unint64_t v14 = *(void *)(v33 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
LABEL_21:
    uint64_t v11 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v34) {
      return 1;
    }
    unint64_t v14 = *(void *)(v33 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_66:
  __break(1u);
  return result;
}

void sub_1BFEC3EE8()
{
  if (!qword_1EB85C8C0)
  {
    sub_1BFEC0488(255, &qword_1EB871500, MEMORY[0x1E4FAB0A8], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB85C8C0);
    }
  }
}

uint64_t sub_1BFEC3F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BFEC400C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEDB230(v2 + *(int *)(a1 + 36), (uint64_t)v7);
  return sub_1BFEC1150((uint64_t)v7, a2);
}

void sub_1BFEC400C()
{
  if (!qword_1EB882E40)
  {
    sub_1C006C050();
    unint64_t v0 = type metadata accessor for FormatCodingDefault();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB882E40);
    }
  }
}

uint64_t destroy for FormatItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 56) >= 0xFuLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFEC40F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1C151928C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t v9 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata();
  sub_1BFEC1150(a2, a4 + *(int *)(v9 + 36));
  uint64_t v10 = a4 + *(int *)(v9 + 40);
  uint64_t v11 = sub_1C1515FDC();
  unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  return v12(v10, a3, v11);
}

uint64_t sub_1BFEC41E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FormatFileReferenceCollection.MetadataContainer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t destroy for FormatSupplementary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BFEC42C4(uint64_t a1)
{
}

uint64_t sub_1BFEC42E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB86BAC0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
}

uint64_t destroy for FormatDecoration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 106) != 255)
  {
    uint64_t v3 = *(unsigned __int16 *)(a1 + 104) | (*(unsigned __int8 *)(a1 + 106) << 16);
    return sub_1BFFA742C(*(void *)(a1 + 96), v3, SBYTE2(v3), (uint64_t (*)(uint64_t, uint64_t, void))sub_1BFFDF4D8, (uint64_t (*)(void))sub_1BFFDF4E4);
  }
  return result;
}

uint64_t sub_1BFEC43D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB87A630, (uint64_t (*)(uint64_t))type metadata accessor for FeedItemSupplementaryAttributes, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes, (uint64_t (*)(void))type metadata accessor for FeedItemSupplementaryAttributes);
}

uint64_t sub_1BFEC441C(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, uint64_t a7, void *a8, int *a9, uint64_t *a10, uint64_t *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t *a15)
{
  uint64_t v87 = a7;
  uint64_t v110 = a3;
  uint64_t v111 = a4;
  long long v109 = (uint64_t *)a1;
  uint64_t v106 = a9;
  uint64_t v108 = type metadata accessor for FormatContent.Resolved();
  uint64_t v85 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v86 = v20;
  uint64_t v88 = (uint64_t)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v21 = a2[3];
  long long v129 = a2[2];
  long long v130 = v21;
  long long v131 = a2[4];
  long long v22 = a2[1];
  long long v127 = *a2;
  long long v128 = v22;
  int v84 = *a6;
  uint64_t v23 = a10[1];
  uint64_t v102 = *a10;
  uint64_t v24 = *a11;
  uint64_t v96 = a11[1];
  uint64_t v97 = v24;
  uint64_t v25 = a11[2];
  uint64_t v94 = a11[3];
  uint64_t v95 = v25;
  uint64_t v26 = a11[4];
  uint64_t v92 = a11[5];
  uint64_t v93 = v26;
  uint64_t v91 = a11[6];
  LODWORD(v26) = *((unsigned __int8 *)a11 + 56);
  int v89 = *((unsigned __int8 *)a11 + 57);
  int v90 = v26;
  uint64_t v28 = *a15;
  uint64_t v27 = a15[1];
  uint64_t v29 = a15[3];
  uint64_t v30 = v15[10];
  uint64_t v103 = a15[2];
  uint64_t v104 = v30;
  uint64_t v31 = v15[12];
  uint64_t v107 = v15[11];
  v113[2] = v30;
  v113[3] = v107;
  uint64_t v105 = v31;
  uint64_t v99 = v15;
  v113[4] = v31;
  uint64_t v32 = sub_1C151A31C();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v98 = v32;
  uint64_t v33 = sub_1C151879C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v36 = sub_1C035E7C8((void (*)(char *, char *))sub_1BFD2A8D4, (uint64_t)v113, v33, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v35);
  uint64_t v101 = 0;
  uint64_t v100 = sub_1BFEF4060(v36);
  swift_bridgeObjectRelease();
  long long v124 = v129;
  long long v125 = v130;
  long long v126 = v131;
  long long v122 = v127;
  long long v123 = v128;
  *(void *)&long long v118 = v102;
  *((void *)&v118 + 1) = v23;
  uint64_t v37 = v109;
  uint64_t v38 = a5;
  uint64_t v106 = (int *)sub_1BFEC8A6C((uint64_t)v109, (uint64_t)&v122, a8, v106, (uint64_t *)&v118, a5);
  long long v124 = v129;
  long long v125 = v130;
  long long v126 = v131;
  long long v122 = v127;
  long long v123 = v128;
  *(void *)&long long v118 = v28;
  *((void *)&v118 + 1) = v27;
  uint64_t v39 = v27;
  uint64_t v40 = v103;
  uint64_t v119 = v103;
  uint64_t v120 = v29;
  uint64_t v41 = v29;
  uint64_t v42 = v110;
  uint64_t v43 = v111;
  uint64_t v44 = v38;
  uint64_t v45 = v100;
  uint64_t v46 = sub_1BFEC6C08(v110, v111, (uint64_t *)&v122, v44, v100, (uint64_t *)&v118);
  uint64_t v47 = *((void *)&v130 + 1);
  v112[2] = v104;
  v112[3] = v107;
  v112[4] = v105;
  v112[5] = v42;
  v112[6] = v43;
  v112[7] = v46;
  uint64_t v105 = v46;
  v112[8] = v28;
  v112[9] = v39;
  v112[10] = v40;
  v112[11] = v41;
  v112[12] = v45;
  swift_bridgeObjectRetain();
  uint64_t v104 = sub_1C0183244((void (*)(uint64_t *__return_ptr, void *))sub_1BFEC4D88, (uint64_t)v112, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v48 = v37[1];
  uint64_t v101 = *v37;
  *(void *)&long long v122 = v101;
  *((void *)&v122 + 1) = v48;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  uint64_t v102 = *((void *)&v122 + 1);
  uint64_t v103 = v122;
  if (qword_1EB88CB60 != -1) {
    swift_once();
  }
  uint64_t v49 = qword_1EB93C7D0;
  unint64_t v50 = *(uint64_t *)((char *)v37 + *(int *)(v108 + 28));
  uint64_t v51 = (uint64_t *)(v129 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
  swift_beginAccess();
  uint64_t v52 = *v51;
  *(void *)&long long v122 = MEMORY[0x1E4FBC860];
  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C15204BC();
    uint64_t v53 = result;
    if (!result) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v53 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (!v53) {
      goto LABEL_14;
    }
  }
  if (v53 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v100 = v49;
  if ((v50 & 0xC000000000000001) != 0)
  {
    uint64_t v55 = 0;
    do
    {
      uint64_t v56 = MEMORY[0x1C18C7CB0](v55++, v50);
      uint64_t v57 = (uint64_t *)(v56 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__references);
      swift_beginAccess();
      uint64_t v58 = *v57;
      swift_bridgeObjectRetain();
      swift_unknownObjectRelease();
      sub_1BFEC4CAC(v58);
    }
    while (v53 != v55);
  }
  else
  {
    uint64_t v59 = 0;
    do
    {
      ++v59;
      swift_beginAccess();
      uint64_t v60 = swift_bridgeObjectRetain();
      sub_1BFEC4CAC(v60);
    }
    while (v53 != v59);
  }
LABEL_14:
  swift_bridgeObjectRelease();
  uint64_t v61 = v122;
  *(void *)&long long v122 = v52;
  sub_1BFEC4CAC(v61);
  unint64_t v62 = sub_1BFEC4F8C(v122);
  uint64_t v63 = (uint64_t)v109;
  if (v62)
  {
    unint64_t v64 = v62;
    *(void *)&long long v118 = v62;
    swift_bridgeObjectRetain();
    sub_1C1518DCC();
    swift_bridgeObjectRelease();
    uint64_t v65 = v122;
    if ((void)v122)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v65 = FormatPackageInventory.merging(with:)(v50);
      *(void *)&long long v122 = v65;
      *(void *)&long long v118 = v64;
      swift_retain();
      sub_1C1518DDC();
    }
  }
  else
  {
    uint64_t v65 = FormatPackageInventory.merging(with:)(v50);
  }
  *(void *)&long long v118 = v65;
  *((void *)&v118 + 1) = v101;
  uint64_t v120 = 0;
  uint64_t v121 = 0;
  uint64_t v119 = v48;
  char v117 = v84;
  sub_1BFECA54C(v87, (uint64_t)&v122, (uint64_t (*)(void))sub_1BFECFBEC);
  uint64_t v66 = v88;
  sub_1BFECA54C(v63, v88, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  unint64_t v67 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  unint64_t v68 = (v86 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  sub_1BFEDC2FC(v66, v69 + v67, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
  uint64_t v70 = (long long *)(v69 + v68);
  long long v71 = v130;
  v70[2] = v129;
  v70[3] = v71;
  v70[4] = v131;
  long long v72 = v128;
  *uint64_t v70 = v127;
  v70[1] = v72;
  uint64_t v73 = type metadata accessor for FeedGroupDebug();
  uint64_t v74 = swift_allocObject();
  uint64_t v75 = v74;
  if (*((void *)&v123 + 1))
  {
    sub_1BFC773DC(&v122, v74 + 16);
    *(void *)(v75 + 56) = sub_1BFD09AF4;
    *(void *)(v75 + 64) = v69;
    *((void *)&v115 + 1) = v73;
    uint64_t v116 = &protocol witness table for FeedGroupDebug;
    *(void *)&long long v114 = v75;
    swift_bridgeObjectRetain();
    sub_1BFEC4CD8((uint64_t)&v127);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BFEC4CD8((uint64_t)&v127);
    swift_release();
    sub_1BFEE2FE0((uint64_t)&v122, (uint64_t (*)(void))sub_1BFECFBEC);
    swift_deallocPartialClassInstance();
    long long v114 = 0u;
    long long v115 = 0u;
    uint64_t v116 = 0;
  }
  type metadata accessor for FeedGroupRegion();
  *(void *)&long long v122 = v97;
  *((void *)&v122 + 1) = v96;
  *(void *)&long long v123 = v95;
  *((void *)&v123 + 1) = v94;
  *(void *)&long long v124 = v93;
  *((void *)&v124 + 1) = v92;
  *(void *)&long long v125 = v91;
  BYTE8(v125) = v90;
  BYTE9(v125) = v89;
  uint64_t v76 = *(void *)(v63 + *(int *)(v108 + 40));
  swift_bridgeObjectRetain();
  uint64_t v77 = swift_bridgeObjectRetain();
  uint64_t v78 = sub_1BFEF3988(v77, v76);
  v113[5] = v107;
  swift_bridgeObjectRetain();
  uint64_t v79 = v111;
  swift_bridgeObjectRetain();
  uint64_t v80 = v98;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v82 = sub_1BFED90AC(v105, v110, v79, (uint64_t)v106, v103, v102, &v118, v104, &v117, (uint64_t)&v114, &v122, v78, a12, a13, a14, v80, v81);
  swift_bridgeObjectRelease();
  return v82;
}

uint64_t sub_1BFEC4CAC(uint64_t a1)
{
  return sub_1BFEB9484(a1, (uint64_t (*)(void))sub_1BFEB9650, (uint64_t (*)(void))sub_1BFEBC130);
}

uint64_t sub_1BFEC4CD8(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for FeedGroupRegion()
{
  return self;
}

uint64_t sub_1BFEC4D88@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BFEC5844(a1, v2[5], v2[6], v2[7], v2[8], v2[9], v2[10], v2[11], a2, v2[12], v2[2], v2[3], v2[4]);
}

uint64_t sub_1BFEC4DD0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFEC4E00(a1, a2, a3, *v3, (unint64_t *)&unk_1EB87A650, (uint64_t)&type metadata for FeedSlot);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BFEC4E00(char a1, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  if (a3)
  {
    unint64_t v8 = *((void *)a4 + 3);
    int64_t v9 = v8 >> 1;
    if ((uint64_t)(v8 >> 1) < a2)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v9 = a2;
      }
    }
  }
  else
  {
    int64_t v9 = a2;
  }
  uint64_t v10 = *((void *)a4 + 2);
  if (v9 <= v10) {
    uint64_t v11 = *((void *)a4 + 2);
  }
  else {
    uint64_t v11 = v9;
  }
  if (v11)
  {
    sub_1BFF66364(0, a5, a6, MEMORY[0x1E4FBBE00]);
    unint64_t v12 = (char *)swift_allocObject();
    int64_t v13 = _swift_stdlib_malloc_size(v12);
    uint64_t v14 = v13 - 32;
    if (v13 < 32) {
      uint64_t v14 = v13 + 31;
    }
    *((void *)v12 + 2) = v10;
    *((void *)v12 + 3) = 2 * (v14 >> 6);
  }
  else
  {
    unint64_t v12 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v15 = v12 + 32;
  unsigned int v16 = a4 + 32;
  if (a1)
  {
    if (v12 != a4 || v15 >= &v16[64 * v10]) {
      memmove(v15, v16, v10 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[64 * v10] || v15 >= &v16[64 * v10])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v12;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

unint64_t sub_1BFEC4F8C(uint64_t a1)
{
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int64_t v34 = (char *)&v27 - v7;
  sub_1BFEBC130();
  uint64_t v33 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    unint64_t v16 = MEMORY[0x1E4FBC860];
    if (*(void *)(MEMORY[0x1E4FBC860] + 16)) {
      return v16;
    }
    goto LABEL_14;
  }
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v14 = (void (**)(char *, char *, uint64_t))(v3 + 32);
  uint64_t v32 = v3;
  uint64_t v29 = v3 + 8;
  uint64_t v30 = (void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v15 = *(void *)(v9 + 72);
  uint64_t v27 = a1;
  uint64_t v28 = v15;
  unint64_t v16 = MEMORY[0x1E4FBC860];
  uint64_t v31 = v5;
  do
  {
    sub_1BFEC5344(v13, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEBB860(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
      sub_1BFEC53A8((uint64_t)&v11[*(int *)(v25 + 48)], (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1BFEC53A8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for FormatPackage);
      return 0;
    }
    uint64_t v17 = *v14;
    uint64_t v18 = v34;
    (*v14)(v34, v11, v2);
    (*v30)(v5, v18, v2);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v16 = sub_1BFEC5408(0, *(void *)(v16 + 16) + 1, 1, v16);
    }
    unint64_t v20 = *(void *)(v16 + 16);
    unint64_t v19 = *(void *)(v16 + 24);
    if (v20 >= v19 >> 1) {
      unint64_t v16 = sub_1BFEC5408(v19 > 1, v20 + 1, 1, v16);
    }
    sub_1BFEBB860(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    uint64_t v22 = (uint64_t)&v11[*(int *)(v21 + 48)];
    *(void *)(v16 + 16) = v20 + 1;
    uint64_t v23 = v32;
    unint64_t v24 = v16
        + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))
        + *(void *)(v32 + 72) * v20;
    uint64_t v5 = v31;
    v17((char *)v24, v31, v2);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v34, v2);
    sub_1BFEC53A8(v22, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    v13 += v28;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  if (!*(void *)(v16 + 16))
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v16;
}

uint64_t sub_1BFEC5344(uint64_t a1, uint64_t a2)
{
  sub_1BFEBC130();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFEC53A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEC5408(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, (unint64_t *)&unk_1EB890390, MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0], MEMORY[0x1E4F276F0]);
}

uint64_t sub_1BFEC5450@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t *a8@<X8>, char a9, void *a10, int *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21 = a8;
  uint64_t v22 = a1[1];
  uint64_t v52 = *a1;
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  uint64_t v25 = a1[5];
  uint64_t v26 = a1[6];
  uint64_t v27 = a1[7];
  uint64_t v28 = a1[8];
  uint64_t v29 = a1[9];
  if ((v24 & 0x8000000000000000) == 0)
  {
    uint64_t v44 = a8;
    uint64_t v30 = a1[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v31 = v30;
    uint64_t v32 = v22;
    uint64_t v33 = v23;
    uint64_t v34 = v25;
    uint64_t v35 = v26;
    uint64_t v36 = v27;
    uint64_t v37 = v28;
LABEL_9:
    *(void *)&long long v56 = v52;
    *((void *)&v56 + 1) = v32;
    uint64_t v57 = v31;
    uint64_t v58 = v33;
    uint64_t v59 = v24;
    uint64_t v60 = v34;
    uint64_t v61 = v35;
    uint64_t v62 = v36;
    uint64_t v63 = v37;
    uint64_t v64 = v29;
    unsigned __int8 v65 = a9 & 1;
    v55[0] = a12;
    v55[1] = a13;
    sub_1C01B3AD4(a14, (uint64_t)v54, &qword_1EB872DE0, (uint64_t)&type metadata for FeedGroupBindingOptions);
    v53[0] = a18;
    v53[1] = a19;
    v53[2] = a20;
    v53[3] = a21;
    uint64_t v42 = sub_1BFEC441C(a6, &v56, a3, a4, a7, &v65, a5, a10, a11, v55, v54, a15, a16, a17, v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = v44;
    goto LABEL_10;
  }
  uint64_t v45 = a1[2];
  *(void *)&long long v56 = a2;
  sub_1BFCFD694(0);
  sub_1C01B41E0((unint64_t *)&qword_1EB860C30, sub_1BFCFD694);
  sub_1C01B41E0((unint64_t *)&qword_1EB85F338, MEMORY[0x1E4FABC38]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v46 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_1C151E91C();
  if (!*(void *)(v38 + 16))
  {
    uint64_t v44 = v21;
    swift_bridgeObjectRelease();
    v24 &= ~0x8000000000000000;
LABEL_8:
    uint64_t v32 = v22;
    uint64_t v33 = v23;
    uint64_t v34 = v25;
    uint64_t v35 = v26;
    uint64_t v36 = v27;
    uint64_t v37 = v46;
    uint64_t v31 = v45;
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  unint64_t v39 = sub_1BFEF2D8C(v52, v22);
  if ((v40 & 1) == 0)
  {
    uint64_t v44 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 &= ~0x8000000000000000;
    goto LABEL_8;
  }
  uint64_t v41 = *(void *)(*(void *)(v38 + 56) + 8 * v39);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFECA54C(a5, (uint64_t)&v56, (uint64_t (*)(void))sub_1BFECFBEC);
  type metadata accessor for FeedGroupRegion();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v42 = FeedGroupRegion.init(groupIdentifier:pluginModel:feedGroupDebug:)(a3, a4, v41, (uint64_t)&v56);
  uint64_t result = sub_1C0033494();
LABEL_10:
  *uint64_t v21 = v42;
  return result;
}

uint64_t sub_1BFEC5844@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14 = v13;
  uint64_t v15 = a9;
  long long v16 = a1[1];
  long long v43 = *a1;
  long long v44 = v16;
  long long v17 = a1[3];
  long long v45 = a1[2];
  long long v46 = v17;
  uint64_t v47 = v45;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  uint64_t v42 = MEMORY[0x1E4FBC860];
  uint64_t v19 = *(void *)(v45 + 16);
  if (v19)
  {
    uint64_t v20 = *(void *)(type metadata accessor for FormatContentSlotItemObject.Resolved() - 8);
    uint64_t v21 = v45 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    uint64_t v22 = *(void *)(v20 + 72);
    swift_bridgeObjectRetain_n();
    while (1)
    {
      sub_1BFEC5C30(v21, a2, a3, a4, a5, a6, a7, a8, &v41, a10, &v43, a11, a12, a13);
      if (v14) {
        break;
      }
      uint64_t v14 = 0;
      sub_1BFEC5AD4(v41);
      v21 += v22;
      if (!--v19)
      {
        sub_1BFCA59C8((uint64_t)&v47);
        sub_1BFCA59C8((uint64_t)&v47);
        uint64_t v18 = v42;
        uint64_t v15 = a9;
        goto LABEL_6;
      }
    }
    sub_1BFCA59C8((uint64_t)&v47);
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
LABEL_6:
    uint64_t v42 = v18;
    sub_1BFEC626C(0, &qword_1EB880CD8, (uint64_t)&type metadata for SlotReference, MEMORY[0x1E4FBB320]);
    sub_1BFEC6304(&qword_1EB880CE0, &qword_1EB880CD8, (uint64_t)&type metadata for SlotReference);
    sub_1BFEC6BB4();
    uint64_t v23 = sub_1C151E91C();
    long long v24 = v43;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1C134163C(v18);
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_1BFEF4060(v25);
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_1BFEC63B4(v23);
    uint64_t v28 = sub_1BFEC65A4(v23);
    uint64_t v29 = sub_1BFEC6794(v23);
    swift_bridgeObjectRelease();
    unint64_t v31 = *((void *)&v44 + 1);
    unint64_t v30 = v44;
    *(_OWORD *)uint64_t v15 = v24;
    *(void *)(v15 + 16) = v26;
    *(void *)(v15 + 24) = v27;
    *(void *)(v15 + 32) = v28;
    *(void *)(v15 + 40) = v29;
    *(_OWORD *)(v15 + 48) = __PAIR128__(v31, v30);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFEC5AD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1C0EE3128(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFEC5C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v72 = a2;
  uint64_t v73 = a9;
  uint64_t v70 = a14;
  uint64_t v71 = a7;
  uint64_t v68 = a4;
  uint64_t v69 = a13;
  uint64_t v74 = a11;
  uint64_t v19 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFECA54C(a1, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:

      if (!a6) {
        goto LABEL_13;
      }
      goto LABEL_7;
    case 3u:
    case 6u:
    case 7u:
      sub_1BFEE2FE0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
      if (!a6) {
        goto LABEL_13;
      }
      goto LABEL_7;
    case 8u:
      id v57 = *(id *)v21;
      uint64_t v58 = *((void *)v21 + 1);
      uint64_t v59 = MEMORY[0x1E4FBB1A0];
      sub_1BFEC626C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v60 = swift_allocObject();
      *(_OWORD *)(v60 + 16) = xmmword_1C1527210;
      *(void *)(v60 + 32) = v72;
      *(void *)(v60 + 40) = a3;
      *(void *)(v60 + 48) = v57;
      *(void *)(v60 + 56) = v58;
      uint64_t v75 = v60;
      sub_1BFEC626C(0, (unint64_t *)&qword_1EB879F20, v59, MEMORY[0x1E4FBB320]);
      sub_1BFEC6304((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v59);
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_1C151E55C();
      uint64_t v63 = v62;
      uint64_t v64 = swift_bridgeObjectRelease();
      uint64_t v75 = v68;
      MEMORY[0x1F4188790](v64);
      uint64_t v66 = v69;
      uint64_t v65 = v70;
      *(&v68 - 6) = a12;
      *(&v68 - 5) = v66;
      *(&v68 - 4) = v65;
      *(&v68 - 3) = v61;
      *(&v68 - 2) = v63;
      sub_1C151A31C();
      sub_1C151ED5C();
      swift_getWitnessTable();
      uint64_t v67 = sub_1C151E97C();
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v73 = v67;
      return result;
    default:
      swift_unknownObjectRelease();
      if (!a6) {
        goto LABEL_13;
      }
LABEL_7:
      if (FormatContentSlotItemObject.Resolved.identifier.getter() == a5 && v22 == a6)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v23 = sub_1C1520A9C();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRetain();
      char v24 = sub_1BFF896B4(v71, a8, a10);
      swift_bridgeObjectRelease();
      if (v24)
      {
        sub_1BFEC626C(0, &qword_1EB880EA0, (uint64_t)&type metadata for SlotReference, MEMORY[0x1E4FBBE00]);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1C1529AE0;
        uint64_t v26 = MEMORY[0x1E4FBC870];
        uint64_t v27 = MEMORY[0x1E4FBC860];
        *(void *)(v25 + 32) = v71;
        *(void *)(v25 + 40) = a8;
        *(void *)(v25 + 48) = v26;
        *(void *)(v25 + 56) = v27;
        *(void *)(v25 + 64) = 0;
        *(void *)(v25 + 72) = 0;
        *uint64_t v73 = v25;
        return swift_bridgeObjectRetain();
      }
LABEL_13:
      uint64_t v29 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBBE00];
      sub_1BFEC626C(0, &qword_1EB880EA0, (uint64_t)&type metadata for SlotReference, MEMORY[0x1E4FBBE00]);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1C1529AE0;
      uint64_t v31 = MEMORY[0x1E4FBB1A0];
      sub_1BFEC626C(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], v29);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1C1527210;
      *(void *)(v32 + 32) = v72;
      *(void *)(v32 + 40) = a3;
      swift_bridgeObjectRetain();
      *(void *)(v32 + 48) = FormatContentSlotItemObject.Resolved.identifier.getter();
      *(void *)(v32 + 56) = v33;
      uint64_t v75 = v32;
      sub_1BFEC626C(0, (unint64_t *)&qword_1EB879F20, v31, MEMORY[0x1E4FBB320]);
      sub_1BFEC6304((unint64_t *)&qword_1EB879F30, (unint64_t *)&qword_1EB879F20, v31);
      uint64_t v34 = sub_1C151E55C();
      uint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v37 = v74[5];
      uint64_t v38 = FormatContentSlotItemObject.Resolved.identifier.getter();
      if (*(void *)(v37 + 16) && (unint64_t v40 = sub_1BFEF2D8C(v38, v39), (v41 & 1) != 0))
      {
        uint64_t v42 = *(void *)(*(void *)(v37 + 56) + 8 * v40);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v42 = MEMORY[0x1E4FBC870];
      }
      swift_bridgeObjectRelease();
      uint64_t v43 = v74[6];
      uint64_t v44 = FormatContentSlotItemObject.Resolved.identifier.getter();
      if (*(void *)(v43 + 16) && (unint64_t v46 = sub_1BFEF2D8C(v44, v45), (v47 & 1) != 0))
      {
        uint64_t v48 = *(void *)(*(void *)(v43 + 56) + 8 * v46);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v48 = MEMORY[0x1E4FBC860];
      }
      swift_bridgeObjectRelease();
      uint64_t v49 = v74[7];
      uint64_t v50 = FormatContentSlotItemObject.Resolved.identifier.getter();
      if (*(void *)(v49 + 16) && (unint64_t v52 = sub_1BFEF2D8C(v50, v51), (v53 & 1) != 0))
      {
        uint64_t v54 = (uint64_t *)(*(void *)(v49 + 56) + 16 * v52);
        uint64_t v55 = *v54;
        uint64_t v56 = v54[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v55 = 0;
        uint64_t v56 = 0;
      }
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v30 + 32) = v34;
      *(void *)(v30 + 40) = v36;
      *(void *)(v30 + 48) = v42;
      *(void *)(v30 + 56) = v48;
      *(void *)(v30 + 64) = v55;
      *(void *)(v30 + 72) = v56;
      *uint64_t v73 = v30;
      return result;
  }
}

void sub_1BFEC626C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEC62B8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1BFEC6304(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFEC626C(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEC635C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BFF67464(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEC63B4(uint64_t a1)
{
  sub_1BFEC6574(0);
  uint64_t result = sub_1C15204DC();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    long long v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t result = v16[1];
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 48 * i + 16);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v19 = (void *)(v3[6] + 16 * i);
    *uint64_t v19 = v17;
    v19[1] = result;
    *(void *)(v3[7] + 8 * i) = v18;
    uint64_t v20 = v3[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1BFEC6574(uint64_t a1)
{
}

uint64_t sub_1BFEC65A4(uint64_t a1)
{
  sub_1BFEC6764(0);
  uint64_t result = sub_1C15204DC();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    long long v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t result = v16[1];
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 48 * i + 24);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v19 = (void *)(v3[6] + 16 * i);
    *uint64_t v19 = v17;
    v19[1] = result;
    *(void *)(v3[7] + 8 * i) = v18;
    uint64_t v20 = v3[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1BFEC6764(uint64_t a1)
{
}

uint64_t sub_1BFEC6794(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v34 = MEMORY[0x1E4FBC868];
  uint64_t v38 = MEMORY[0x1E4FBC868];
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v36 = (unint64_t)(63 - v3) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v37 = 0;
  uint64_t v31 = v2;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v37 << 6);
      goto LABEL_6;
    }
    int64_t v13 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v13 >= v36) {
      goto LABEL_40;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    int64_t v15 = v37 + 1;
    if (!v14)
    {
      int64_t v15 = v37 + 2;
      if (v37 + 2 >= v36) {
        goto LABEL_40;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v37 + 3;
        if (v37 + 3 >= v36) {
          goto LABEL_40;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v37 + 4;
          if (v37 + 4 >= v36) {
            goto LABEL_40;
          }
          unint64_t v14 = *(void *)(v2 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v8 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v37 = v15;
LABEL_6:
    int64_t v9 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
    uint64_t v10 = v9[1];
    long long v11 = *(_OWORD *)(*(void *)(a1 + 56) + 48 * v8 + 32);
    if (!(void)v11)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFDB3920(0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = 0;
      goto LABEL_8;
    }
    uint64_t v33 = *v9;
    unint64_t v17 = *(void *)(v34 + 16);
    long long v32 = *(_OWORD *)(*(void *)(a1 + 56) + 48 * v8 + 32);
    if (*(void *)(v34 + 24) <= v17)
    {
      uint64_t v35 = v17 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFDB3920(v11);
      sub_1BFDB3920(v11);
      sub_1C1057698(v35, 1);
      uint64_t v18 = v38;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFDB3920(v11);
      sub_1BFDB3920(v11);
      uint64_t v18 = v34;
    }
    uint64_t v34 = v18;
    sub_1C1520DBC();
    sub_1C151E77C();
    uint64_t result = sub_1C1520E0C();
    uint64_t v19 = v34 + 64;
    uint64_t v20 = -1 << *(unsigned char *)(v34 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v34 + 64 + 8 * (v21 >> 6))) == 0)
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v20) >> 6;
      uint64_t v2 = v31;
      long long v24 = v32;
      while (++v22 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v22 == v26;
        if (v22 == v26) {
          unint64_t v22 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v19 + 8 * v22);
        if (v28 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v28)) + (v22 << 6);
          goto LABEL_39;
        }
      }
      goto LABEL_42;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v34 + 64 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    uint64_t v2 = v31;
    long long v24 = v32;
LABEL_39:
    *(void *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v29 = 16 * v23;
    uint64_t v30 = (void *)(*(void *)(v34 + 48) + v29);
    *uint64_t v30 = v33;
    v30[1] = v10;
    *(_OWORD *)(*(void *)(v34 + 56) + v29) = v24;
    ++*(void *)(v34 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v11;
LABEL_8:
    uint64_t result = sub_1BFDB3960(v12);
  }
  int64_t v16 = v37 + 5;
  if (v37 + 5 >= v36)
  {
LABEL_40:
    sub_1BFEFB808();
    return v34;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v37 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v36) {
      goto LABEL_40;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_25;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

unint64_t sub_1BFEC6BB4()
{
  unint64_t result = qword_1EB87D798;
  if (!qword_1EB87D798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB87D798);
  }
  return result;
}

uint64_t sub_1BFEC6C08(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v55 = a5;
  uint64_t v63 = a4;
  uint64_t v57 = a2;
  uint64_t v60 = a1;
  uint64_t v9 = *(void *)(v6 + 96);
  uint64_t v64 = *(void *)(v6 + 80);
  uint64_t v65 = v9;
  sub_1C151A31C();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v62 = sub_1C151879C();
  uint64_t v59 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)&v46 - v10;
  uint64_t v11 = a3[1];
  uint64_t v58 = *a3;
  uint64_t v67 = v11;
  uint64_t v12 = a3[3];
  uint64_t v56 = a3[2];
  uint64_t v14 = a3[4];
  uint64_t v13 = a3[5];
  uint64_t v16 = a3[6];
  uint64_t v15 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v17 = a3[9];
  uint64_t v54 = *a6;
  uint64_t v53 = a6[1];
  uint64_t v52 = a6[2];
  uint64_t v51 = a6[3];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_1C10468B0(v18);
  uint64_t v50 = 0;
  swift_bridgeObjectRelease();
  uint64_t v71 = v15;
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v19);
  uint64_t v69 = v17;
  swift_bridgeObjectRelease();
  uint64_t v70 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v68 = v13;
  swift_bridgeObjectRelease();
  uint64_t v20 = v14;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v71;
  uint64_t v79 = MEMORY[0x1E4FBC860];
  uint64_t v22 = *(void *)(v71 + 16);
  if (v22)
  {
    swift_bridgeObjectRetain();
    unint64_t v23 = (long long *)(v21 + 56);
    do
    {
      uint64_t v24 = *((void *)v23 + 4);
      uint64_t v71 = *((void *)v23 - 3);
      long long v72 = *(v23 - 1);
      long long v25 = *v23;
      long long v26 = v23[1];
      v23 += 4;
      long long v73 = v25;
      long long v74 = v26;
      uint64_t v75 = v24;
      uint64_t v27 = FormatContentSlot.Resolved.feedItemIdentifiers.getter();
      sub_1BFE72794(v27);
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease_n();
    uint64_t v28 = v79;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x1E4FBC860];
  }
  uint64_t v29 = sub_1BFEF4060(v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v49 = v15;
  swift_bridgeObjectRelease();
  uint64_t v48 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v46 = v20;
  swift_release();
  uint64_t v47 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v54;
  uint64_t v31 = v53;
  uint64_t v32 = v52;
  uint64_t v33 = v51;
  sub_1BFECFD44(v54, v53);
  uint64_t v34 = v55;
  swift_bridgeObjectRetain();
  uint64_t v35 = v57;
  swift_bridgeObjectRetain();
  uint64_t v45 = &v78;
  uint64_t v36 = v60;
  uint64_t v37 = sub_1C1354C74(v29, v30, v31, v32, v33, v34, v60, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFECFD88(v30, v31);
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_1BFEF4060(v37);
  swift_bridgeObjectRelease();
  uint64_t v71 = v58;
  *(void *)&long long v72 = v67;
  *((void *)&v72 + 1) = v56;
  *(void *)&long long v73 = v47;
  *((void *)&v73 + 1) = v46;
  *(void *)&long long v74 = v68;
  *((void *)&v74 + 1) = v48;
  uint64_t v75 = v49;
  uint64_t v76 = v70;
  uint64_t v77 = v69;
  uint64_t v39 = FormatContentSubgroup.Resolved.placeholderIdentifiers.getter();
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1C1354FA4(v39, v36, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEF4060(v40);
  swift_bridgeObjectRelease();
  uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 16))(v61, v63, v62);
  MEMORY[0x1F4188790](v41);
  uint64_t v42 = *(void *)(v66 + 88);
  *(&v46 - 6) = v64;
  *(&v46 - 5) = v42;
  *(&v46 - 4) = v65;
  *(&v46 - 3) = v38;
  swift_getWitnessTable();
  uint64_t v43 = sub_1C151E9CC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t FormatContentSlot.Resolved.feedItemIdentifiers.getter()
{
  uint64_t v109 = type metadata accessor for FormatCustomItem.Resolved();
  uint64_t v117 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v120 = (uint64_t *)((char *)&v108 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C12416CC(0);
  MEMORY[0x1F4188790](v2 - 8);
  long long v122 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v121 = (uint64_t)&v108 - v5;
  uint64_t v125 = type metadata accessor for PuzzleStatistic();
  uint64_t v118 = *(void *)(v125 - 8);
  MEMORY[0x1F4188790](v125);
  long long v129 = (id *)((char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C0153798(0);
  MEMORY[0x1F4188790](v7 - 8);
  long long v124 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v123 = (uint64_t)&v108 - v10;
  long long v126 = (const char *)type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v119 = (char *)*((void *)v126 - 1);
  MEMORY[0x1F4188790](v126);
  uint64_t v12 = (unint64_t *)((char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEE6554(0);
  MEMORY[0x1F4188790](v13 - 8);
  long long v128 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  long long v127 = (char *)&v108 - v16;
  uint64_t v17 = v0[1];
  uint64_t v18 = v0[2];
  uint64_t v20 = v0[3];
  uint64_t v19 = v0[4];
  uint64_t v22 = v0[5];
  uint64_t v21 = v0[6];
  uint64_t v23 = v0[7];
  uint64_t v133 = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v24 = sub_1C123FE50(v19);
  uint64_t v110 = v23;
  swift_bridgeObjectRelease();
  uint64_t v111 = v21;
  swift_bridgeObjectRelease();
  uint64_t v112 = v22;
  swift_bridgeObjectRelease();
  uint64_t v113 = v20;
  swift_bridgeObjectRelease();
  uint64_t v114 = v18;
  swift_bridgeObjectRelease();
  uint64_t v115 = v17;
  swift_bridgeObjectRelease();
  uint64_t v116 = v19;
  uint64_t result = swift_bridgeObjectRelease_n();
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v26) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v26 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v26) {
      goto LABEL_10;
    }
  }
  if (v26 < 1)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  uint64_t v27 = 0;
  do
  {
    if ((v24 & 0xC000000000000001) != 0) {
      MEMORY[0x1C18C7CB0](v27, v24);
    }
    else {
      swift_unknownObjectRetain();
    }
    ++v27;
    id v28 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    uint64_t v29 = sub_1C151E62C();
    uint64_t v31 = v30;
    swift_unknownObjectRelease_n();

    sub_1BFEFFC1C(&v131, v29, v31);
    swift_bridgeObjectRelease();
  }
  while (v26 != v27);
LABEL_10:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = v116;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v33 = sub_1C1240248(v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v34) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v34) {
      goto LABEL_19;
    }
  }
  if (v34 < 1)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  uint64_t v35 = 0;
  do
  {
    if ((v33 & 0xC000000000000001) != 0) {
      id v36 = (id)MEMORY[0x1C18C7CB0](v35, v33);
    }
    else {
      id v36 = *(id *)(v33 + 8 * v35 + 32);
    }
    ++v35;
    id v37 = v36;
    id v38 = objc_msgSend(v37, sel_identifier);
    uint64_t v39 = sub_1C151E62C();
    uint64_t v41 = v40;

    sub_1BFEFFC1C(&v131, v39, v41);
    swift_bridgeObjectRelease();
  }
  while (v34 != v35);
LABEL_19:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v42 = v116;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v43 = sub_1C1240400(v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  if (v43 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (v44)
    {
LABEL_21:
      if (v44 >= 1)
      {
        uint64_t v45 = 0;
        do
        {
          if ((v43 & 0xC000000000000001) != 0) {
            MEMORY[0x1C18C7CB0](v45, v43);
          }
          else {
            swift_unknownObjectRetain();
          }
          ++v45;
          id v46 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
          uint64_t v47 = sub_1C151E62C();
          uint64_t v49 = v48;
          swift_unknownObjectRelease_n();

          sub_1BFEFFC1C(&v131, v47, v49);
          swift_bridgeObjectRelease();
        }
        while (v44 != v45);
        goto LABEL_28;
      }
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
  }
  else
  {
    uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v44) {
      goto LABEL_21;
    }
  }
LABEL_28:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v50 = v116;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v51 = sub_1C12405B8(v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  unint64_t v52 = 0;
  unint64_t v53 = *(void *)(v51 + 16);
  uint64_t v54 = (void (**)(const char *, uint64_t, uint64_t, const char *))(v119 + 56);
  uint64_t v55 = (unsigned int (**)(uint64_t, uint64_t, const char *))(v119 + 48);
  while (1)
  {
    uint64_t v56 = (uint64_t)v128;
    if (v52 == v53)
    {
      uint64_t v57 = 1;
      unint64_t v52 = v53;
      uint64_t v58 = v127;
    }
    else
    {
      uint64_t v58 = v127;
      if (v52 >= *(void *)(v51 + 16))
      {
        __break(1u);
        goto LABEL_44;
      }
      sub_1C0081004(v51+ ((v119[80] + 32) & ~(unint64_t)v119[80])+ *((void *)v119 + 9) * v52, (uint64_t)v127, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      uint64_t v57 = 0;
      ++v52;
    }
    uint64_t v59 = v126;
    (*v54)(v58, v57, 1, v126);
    sub_1BFDDF70C((uint64_t)v58, v56, (uint64_t (*)(void))sub_1BFEE6554);
    if ((*v55)(v56, 1, v59) == 1) {
      break;
    }
    sub_1BFDDF70C(v56, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
    unint64_t v50 = *v12;
    uint64_t v60 = v12[1];
    swift_bridgeObjectRetain();
    sub_1BFE0ADD4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
    sub_1BFEFFC1C(&v131, v50, v60);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v61 = v116;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v50 = sub_1C12408C8(v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  if (!(v50 >> 62))
  {
    uint64_t v62 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v62) {
      goto LABEL_45;
    }
    goto LABEL_37;
  }
LABEL_44:
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_1C15204BC();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v62) {
    goto LABEL_45;
  }
LABEL_37:
  if (v62 < 1) {
    goto LABEL_74;
  }
  uint64_t v63 = 0;
  do
  {
    if ((v50 & 0xC000000000000001) != 0) {
      MEMORY[0x1C18C7CB0](v63, v50);
    }
    else {
      swift_unknownObjectRetain();
    }
    ++v63;
    id v64 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    uint64_t v65 = sub_1C151E62C();
    uint64_t v67 = v66;
    swift_unknownObjectRelease_n();

    sub_1BFEFFC1C(&v131, v65, v67);
    swift_bridgeObjectRelease();
  }
  while (v62 != v63);
LABEL_45:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v68 = v116;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v69 = sub_1C1240A80(v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  if (v69 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v70 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v70) {
      goto LABEL_54;
    }
  }
  else
  {
    uint64_t v70 = *(void *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v70) {
      goto LABEL_54;
    }
  }
  if (v70 < 1)
  {
LABEL_75:
    __break(1u);
    return result;
  }
  uint64_t v71 = 0;
  do
  {
    if ((v69 & 0xC000000000000001) != 0) {
      MEMORY[0x1C18C7CB0](v71, v69);
    }
    else {
      swift_unknownObjectRetain();
    }
    ++v71;
    id v72 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    uint64_t v73 = sub_1C151E62C();
    uint64_t v75 = v74;
    swift_unknownObjectRelease_n();

    sub_1BFEFFC1C(&v131, v73, v75);
    swift_bridgeObjectRelease();
  }
  while (v70 != v71);
LABEL_54:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v76 = v116;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v77 = sub_1C1240C38(v76);
  uint64_t v108 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v78 = v77;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  unint64_t v79 = 0;
  uint64_t v80 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56);
  unint64_t v81 = *(void *)(v78 + 16);
  uint64_t v82 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
  long long v127 = "fastestTimeByDifficultyLevel";
  long long v128 = "uzzlesSolved";
  long long v126 = "averageTimeByDifficultyLevel";
  uint64_t v119 = "fficultyLevel";
  while (1)
  {
    uint64_t v86 = (uint64_t)v124;
    uint64_t v85 = v125;
    uint64_t v87 = v123;
    if (v79 == v81)
    {
      uint64_t v88 = 1;
      unint64_t v79 = v81;
    }
    else
    {
      if (v79 >= *(void *)(v78 + 16))
      {
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      sub_1C0081004(v78+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(void *)(v118 + 72) * v79, v123, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v88 = 0;
      ++v79;
    }
    (*v80)(v87, v88, 1, v85);
    sub_1BFDDF70C(v87, v86, (uint64_t (*)(void))sub_1C0153798);
    if ((*v82)(v86, 1, v85) == 1) {
      break;
    }
    int v89 = v129;
    sub_1BFDDF70C(v86, (uint64_t)v129, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    id v90 = objc_msgSend(*v89, sel_identifier);
    uint64_t v91 = sub_1C151E62C();
    uint64_t v93 = v92;

    PuzzleStatisticCategory.statisticType.getter(&v130);
    uint64_t v131 = v91;
    uint64_t v132 = v93;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v83 = v131;
    uint64_t v84 = v132;
    sub_1BFE0ADD4((uint64_t)v129, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
    sub_1BFEFFC1C(&v131, v83, v84);
    uint64_t result = swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v94 = v116;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v95 = sub_1C1240F48(v94);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease_n();
  unint64_t v96 = 0;
  unint64_t v97 = *(void *)(v95 + 16);
  uint64_t v98 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56);
  uint64_t v99 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48);
  uint64_t v100 = v109;
  while (1)
  {
    uint64_t v101 = (uint64_t)v122;
    if (v96 == v97)
    {
      uint64_t v102 = 1;
      unint64_t v96 = v97;
      uint64_t v103 = v121;
    }
    else
    {
      uint64_t v103 = v121;
      if (v96 >= *(void *)(v95 + 16)) {
        goto LABEL_70;
      }
      sub_1C0081004(v95+ ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80))+ *(void *)(v117 + 72) * v96, v121, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      uint64_t v102 = 0;
      ++v96;
    }
    (*v98)(v103, v102, 1, v100);
    sub_1BFDDF70C(v103, v101, (uint64_t (*)(void))sub_1C12416CC);
    if ((*v99)(v101, 1, v100) == 1) {
      break;
    }
    uint64_t v104 = v101;
    uint64_t v105 = v120;
    sub_1BFDDF70C(v104, (uint64_t)v120, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
    uint64_t v106 = *v105;
    uint64_t v107 = v105[1];
    swift_bridgeObjectRetain();
    sub_1BFE0ADD4((uint64_t)v105, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
    sub_1BFEFFC1C(&v131, v106, v107);
    uint64_t result = swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v133;
}

void sub_1BFEC84E0()
{
  if (!qword_1EB894670)
  {
    sub_1BFC9DBE8(255, (unint64_t *)&qword_1EB895E90);
    unint64_t v0 = sub_1C15194BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB894670);
    }
  }
}

void sub_1BFEC8548(uint64_t a1)
{
}

uint64_t FormatContentSubgroup.Resolved.placeholderIdentifiers.getter()
{
  uint64_t v47 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v36 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v2 = (char *)v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = v0[1];
  uint64_t v4 = v0[4];
  v35[8] = v0[3];
  v35[9] = v3;
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v8 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v9 = v0[9];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_1C10468B0(v7);
  v35[7] = 0;
  swift_bridgeObjectRelease();
  uint64_t v48 = v8;
  swift_bridgeObjectRetain();
  sub_1BFEE0654(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35[6] = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v48;
  uint64_t v48 = MEMORY[0x1E4FBC860];
  uint64_t v38 = *(void *)(v11 + 16);
  if (v38)
  {
    v35[1] = v9;
    v35[2] = v7;
    v35[3] = v8;
    v35[4] = v6;
    v35[5] = v4;
    uint64_t v37 = v11 + 32;
    v35[0] = v11;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    do
    {
      uint64_t v13 = (void *)(v37 + (v12 << 6));
      uint64_t v14 = v13[4];
      uint64_t v15 = *(void *)(v14 + 16);
      if (v15)
      {
        uint64_t v46 = v12;
        uint64_t v16 = v13[2];
        uint64_t v17 = v13[3];
        uint64_t v18 = v13[5];
        uint64_t v19 = v13[6];
        uint64_t v20 = v13[7];
        uint64_t v21 = v36;
        uint64_t v22 = v14 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
        uint64_t v44 = v13[1];
        swift_bridgeObjectRetain();
        uint64_t v43 = v16;
        swift_bridgeObjectRetain();
        uint64_t v42 = v17;
        swift_bridgeObjectRetain();
        uint64_t v45 = v14;
        swift_bridgeObjectRetain_n();
        uint64_t v41 = v18;
        swift_bridgeObjectRetain();
        uint64_t v40 = v19;
        swift_bridgeObjectRetain();
        uint64_t v39 = v20;
        swift_bridgeObjectRetain();
        uint64_t v23 = *(void *)(v21 + 72);
        unint64_t v24 = (void *)MEMORY[0x1E4FBC860];
        do
        {
          sub_1BFECBB50(v22, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          if (swift_getEnumCaseMultiPayload() <= 7)
          {
            sub_1BFECF124((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
          }
          else
          {
            uint64_t v25 = *(void *)v2;
            uint64_t v26 = *((void *)v2 + 1);
            char v27 = v2[16];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v24 = sub_1C0EE3114(0, v24[2] + 1, 1, v24);
            }
            unint64_t v29 = v24[2];
            unint64_t v28 = v24[3];
            if (v29 >= v28 >> 1) {
              unint64_t v24 = sub_1C0EE3114((void *)(v28 > 1), v29 + 1, 1, v24);
            }
            _OWORD v24[2] = v29 + 1;
            uint64_t v30 = &v24[3 * v29];
            void v30[4] = v25;
            v30[5] = v26;
            *((unsigned char *)v30 + 48) = v27;
          }
          v22 += v23;
          --v15;
        }
        while (v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        uint64_t v12 = v46;
      }
      else
      {
        unint64_t v24 = (void *)MEMORY[0x1E4FBC860];
      }
      ++v12;
      sub_1BFEC8A4C((uint64_t)v24);
    }
    while (v12 != v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v31 = v48;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = MEMORY[0x1E4FBC860];
  }
  uint64_t v32 = sub_1C0E0F108(v31);
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_1BFEF4060(v32);
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_1BFEC8A4C(uint64_t a1)
{
  return sub_1BFF48580(a1, (uint64_t (*)(void))sub_1C0EE3114);
}

uint64_t sub_1BFEC8A6C(uint64_t a1, uint64_t a2, void *a3, int *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v187 = a6;
  unint64_t v193 = a4;
  uint64_t v180 = a3;
  uint64_t v197 = a1;
  sub_1BFECFC20(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v164 = (uint64_t)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFF00BEC();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v163 = (uint64_t)&v155 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_1C1515FDC();
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x1F4188790](v160);
  uint64_t v161 = (char *)&v155 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE6554(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v183 = (uint64_t)&v155 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v182 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v162 = (uint64_t *)((char *)&v155 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECA0F4(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v178 = (char *)&v155 - v19;
  uint64_t v156 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v156);
  uint64_t v177 = (uint64_t)&v155 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v155 = (uint64_t)&v155 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v179 = (_WORD *)((char *)&v155 - v24);
  uint64_t v25 = *(void *)(v6 + 80);
  uint64_t v188 = v6;
  uint64_t v26 = *(void *)(v6 + 96);
  uint64_t v185 = v25;
  uint64_t v186 = v26;
  sub_1C151A31C();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v27 = sub_1C151879C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v173 = sub_1C152012C();
  uint64_t v172 = *(void *)(v173 - 8);
  MEMORY[0x1F4188790](v173);
  uint64_t v168 = (char *)&v155 - v29;
  sub_1BFFFCF8C(255);
  uint64_t v175 = v27;
  uint64_t v165 = WitnessTable;
  uint64_t v30 = sub_1C152034C();
  swift_getWitnessTable();
  uint64_t v171 = v30;
  uint64_t v31 = sub_1C152049C();
  uint64_t v32 = type metadata accessor for FeedHeadline(255);
  swift_getWitnessTable();
  uint64_t v169 = v31;
  uint64_t v176 = v32;
  uint64_t v170 = sub_1C152034C();
  uint64_t v167 = *(void *)(v170 - 8);
  MEMORY[0x1F4188790](v170);
  uint64_t v166 = (char *)&v155 - v33;
  MEMORY[0x1F4188790](v34);
  uint64_t v158 = (uint64_t)&v155 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v174 = (uint64_t)&v155 - v37;
  MEMORY[0x1F4188790](v38);
  uint64_t v184 = (char *)&v155 - v39;
  sub_1BFEE3854(0);
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v42 = (char *)&v155 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_1C151D6DC();
  uint64_t v43 = *(void *)(v181 - 8);
  MEMORY[0x1F4188790](v181);
  unint64_t v157 = (char *)&v155 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = *(void *)(a2 + 40);
  uint64_t v46 = *a5;
  uint64_t v47 = a5[1];
  sub_1BFECA0F4(0, &qword_1EB87A690, (uint64_t (*)(uint64_t))type metadata accessor for FeedGroupItem, MEMORY[0x1E4FBBE00]);
  uint64_t v49 = v48;
  uint64_t v190 = type metadata accessor for FeedGroupItem();
  uint64_t v50 = *(unsigned __int8 *)(*(void *)(v190 - 8) + 80);
  unint64_t v51 = (uint64_t *)((v50 + 32) & ~v50);
  uint64_t v191 = (char *)v51 + *(void *)(*(void *)(v190 - 8) + 72);
  uint64_t v192 = v49;
  uint64_t v194 = v50 | 7;
  uint64_t v52 = swift_allocObject();
  long long v195 = xmmword_1C1529AE0;
  *(_OWORD *)(v52 + 16) = xmmword_1C1529AE0;
  uint64_t v196 = v51;
  unint64_t v53 = (uint64_t *)((char *)v51 + v52);
  uint64_t v54 = type metadata accessor for FormatContent.Resolved();
  uint64_t v55 = *(void *)(v197 + *(int *)(v54 + 36));
  unint64_t v189 = (int *)v16;
  if (v46)
  {
    swift_bridgeObjectRetain();
    uint64_t v56 = v46;
  }
  else
  {
    uint64_t v56 = MEMORY[0x1E4FBC860];
  }
  uint64_t v199 = v55;
  swift_bridgeObjectRetain();
  sub_1BFEDB748(v56);
  uint64_t v57 = v199;
  if (v46) {
    swift_bridgeObjectRetain();
  }
  else {
    uint64_t v47 = MEMORY[0x1E4FBC860];
  }
  uint64_t v199 = v45;
  swift_bridgeObjectRetain();
  sub_1BFEDB748(v47);
  uint64_t v58 = v199;
  *unint64_t v53 = v57;
  v53[1] = v58;
  swift_storeEnumTagMultiPayload();
  uint64_t v59 = (uint64_t)v193;
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_1BFECFC54(v52, v59);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v202 = v60;
  sub_1BFECA54C(v197 + *(int *)(v54 + 72), (uint64_t)v42, (uint64_t (*)(void))sub_1BFEE3854);
  uint64_t v61 = v181;
  int v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v42, 1, v181);
  unint64_t v193 = (int *)v54;
  if (v62 == 1)
  {
    sub_1BFEE2FE0((uint64_t)v42, (uint64_t (*)(void))sub_1BFEE3854);
  }
  else
  {
    uint64_t v63 = v157;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v157, v42, v61);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = v195;
    uint64_t v65 = (uint64_t *)((char *)v196 + v64);
    uint64_t v66 = sub_1C151D63C();
    uint64_t v68 = v67;
    uint64_t v69 = type metadata accessor for FeedSponsorshipBannerAd();
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))((char *)v65 + *(int *)(v69 + 20), v63, v61);
    *uint64_t v65 = v66;
    v65[1] = v68;
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v64);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v63, v61);
  }
  uint64_t v70 = v193;
  uint64_t v71 = v180;
  uint64_t v72 = *(void *)(v197 + v193[11]);
  if (v72)
  {
    uint64_t v73 = v197;
    uint64_t v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = v195;
    uint64_t v75 = v70[16];
    uint64_t v76 = *(void **)(v73 + v70[15]);
    unint64_t v77 = (char *)v196 + v74;
    char v78 = *(unsigned char *)(v73 + v75);
    *(void *)unint64_t v77 = v72;
    *((void *)v77 + 1) = v76;
    v77[16] = v78;
    swift_storeEnumTagMultiPayload();
    id v79 = v76;
    swift_unknownObjectRetain();
    sub_1BFED84D8(v74);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  if (v71)
  {
    uint64_t v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = v195;
    *(uint64_t *)((char *)v196 + v80) = (uint64_t)v71;
    swift_storeEnumTagMultiPayload();
    id v81 = v71;
    sub_1BFED84D8(v80);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    id v82 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asSportsEvent);
    swift_unknownObjectRelease();
    if (v82)
    {
      uint64_t v83 = swift_allocObject();
      *(_OWORD *)(v83 + 16) = v195;
      uint64_t v84 = (char *)v196 + v83;
      id v85 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
      uint64_t v86 = sub_1C151E62C();
      uint64_t v88 = v87;

      *(void *)uint64_t v84 = v86;
      *((void *)v84 + 1) = v88;
      *((void *)v84 + 2) = v82;
      *((void *)v84 + 3) = 0;
      v84[32] = 0;
      swift_storeEnumTagMultiPayload();
      sub_1BFED84D8(v83);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      swift_unknownObjectRelease();
    }
  }
  int v89 = v193;
  id v90 = *(void **)(v197 + v193[12]);
  if (v90)
  {
    uint64_t v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = v195;
    uint64_t v92 = (char *)v196 + v91;
    id v93 = objc_allocWithZone(MEMORY[0x1E4F7E420]);
    id v94 = v90;
    id v95 = objc_msgSend(v93, sel_init);
    sub_1C01B3090(v94, v185, *(void *)(v188 + 88), v186, &v199);
    LODWORD(v181) = v199;
    uint64_t v96 = qword_1F1B67CC0;
    id v97 = v94;
    id v98 = objc_msgSend(v97, sel_identifier);
    uint64_t v99 = sub_1C151E62C();
    uint64_t v101 = v100;

    LOBYTE(v201[0]) = 0;
    *(void *)uint64_t v92 = v97;
    *((void *)v92 + 1) = v99;
    *((void *)v92 + 2) = v101;
    *((_WORD *)v92 + 12) = 0;
    *((void *)v92 + 4) = 0;
    v92[40] = 0;
    *((void *)v92 + 6) = v96;
    *((void *)v92 + 7) = v95;
    v92[64] = 0;
    *(_OWORD *)(v92 + 72) = xmmword_1C152C800;
    *(_OWORD *)(v92 + 88) = 0u;
    *(_OWORD *)(v92 + 104) = 0u;
    *((void *)v92 + 15) = 0;
    *((void *)v92 + 16) = 5;
    v92[136] = v181;
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v91);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();

    uint64_t v102 = v189;
    uint64_t v103 = v184;
  }
  else
  {
    uint64_t v118 = *(void **)(v197 + v193[13]);
    uint64_t v102 = v189;
    uint64_t v103 = v184;
    if (v118)
    {
      if (objc_msgSend(*(id *)(v197 + v193[13]), sel_respondsToSelector_, sel_parentIssue))
      {
        id v119 = objc_msgSend(v118, sel_parentIssue);
        if (v119)
        {
          uint64_t v120 = v119;
          uint64_t v121 = swift_allocObject();
          *(_OWORD *)(v121 + 16) = v195;
          long long v122 = (char *)v196 + v121;
          id v123 = objc_allocWithZone(MEMORY[0x1E4F7E420]);
          id v124 = v120;
          id v125 = objc_msgSend(v123, sel_init);
          sub_1C01B3090(v124, v185, *(void *)(v188 + 88), v186, &v199);
          char v126 = v199;
          uint64_t v127 = qword_1F1B67CE8;
          id v128 = v124;
          id v129 = objc_msgSend(v128, sel_identifier);
          uint64_t v130 = sub_1C151E62C();
          uint64_t v132 = v131;

          LOBYTE(v201[0]) = 0;
          *(void *)long long v122 = v128;
          *((void *)v122 + 1) = v130;
          *((void *)v122 + 2) = v132;
          *((_WORD *)v122 + 12) = 0;
          *((void *)v122 + 4) = 0;
          v122[40] = 0;
          *((void *)v122 + 6) = v127;
          *((void *)v122 + 7) = v125;
          uint64_t v103 = v184;
          v122[64] = 0;
          *(_OWORD *)(v122 + 72) = xmmword_1C152C800;
          *(_OWORD *)(v122 + 88) = 0u;
          *(_OWORD *)(v122 + 104) = 0u;
          *((void *)v122 + 15) = 0;
          *((void *)v122 + 16) = 5;
          v122[136] = v126;
          uint64_t v102 = v189;
          swift_storeEnumTagMultiPayload();
          sub_1BFED84D8(v121);
          swift_setDeallocating();
          int v89 = v193;
          swift_arrayDestroy();
          swift_deallocClassInstance();
        }
      }
    }
  }
  uint64_t v104 = *(void **)(v197 + v89[13]);
  if (v104)
  {
    swift_unknownObjectRetain();
    uint64_t v105 = v168;
    MEMORY[0x1C18C64E0](v175, v165);
    uint64_t v106 = (void *)swift_allocObject();
    uint64_t v107 = *(void *)(v188 + 88);
    v106[2] = v185;
    v106[3] = v107;
    v106[4] = v186;
    v106[5] = v104;
    swift_unknownObjectRetain();
    uint64_t v108 = v173;
    swift_getWitnessTable();
    uint64_t v109 = (uint64_t)v103;
    uint64_t v110 = v166;
    uint64_t v111 = v176;
    sub_1C152057C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v172 + 8))(v105, v108);
    v201[3] = (void *)swift_getWitnessTable();
    v201[2] = (void *)swift_getWitnessTable();
    v201[1] = (void *)swift_getWitnessTable();
    uint64_t v112 = v170;
    swift_getWitnessTable();
    sub_1C151F12C();
    (*(void (**)(char *, uint64_t))(v167 + 8))(v110, v112);
    uint64_t v113 = v174;
    sub_1BFECA54C(v109, v174, (uint64_t (*)(void))sub_1BFFFCF8C);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 48))(v113, 1, v111) == 1)
    {
      sub_1BFEE2FE0(v113, (uint64_t (*)(void))sub_1BFFFCF8C);
      uint64_t v114 = (int *)v156;
      uint64_t v115 = v179;
      uint64_t v116 = (char *)v179 + *(int *)(v156 + 24);
      uint64_t v117 = type metadata accessor for SharedItem();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v116, 1, 1, v117);
      *uint64_t v115 = 258;
      *((unsigned char *)v115 + v114[7]) = 1;
      *((unsigned char *)v115 + v114[8]) = 0;
      *((unsigned char *)v115 + v114[9]) = 0;
      *((unsigned char *)v115 + v114[10]) = 0;
    }
    else
    {
      uint64_t v133 = v155;
      sub_1BFECA54C(v113 + *(int *)(v111 + 40), v155, type metadata accessor for FeedHeadline.State);
      sub_1BFEE2FE0(v113, type metadata accessor for FeedHeadline);
      uint64_t v115 = v179;
      sub_1BFEDC2FC(v133, (uint64_t)v179, type metadata accessor for FeedHeadline.State);
    }
    unint64_t v134 = v196;
    uint64_t v135 = swift_allocObject();
    *(_OWORD *)(v135 + 16) = v195;
    uint64_t v136 = sub_1C151D2DC();
    uint64_t v137 = (uint64_t)v178;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v178, 1, 1, v136);
    uint64_t v138 = v177;
    sub_1BFECA54C((uint64_t)v115, v177, type metadata accessor for FeedHeadline.State);
    v201[0] = 0;
    uint64_t v199 = 0;
    char v200 = 1;
    char v198 = 0;
    swift_unknownObjectRetain();
    FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v104, 0, &v198, v137, v138, v201, (uint64_t)v134 + v135, (uint64_t)&v199);
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v135);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_unknownObjectRelease();
    sub_1BFEE2FE0((uint64_t)v115, type metadata accessor for FeedHeadline.State);
    sub_1BFEE2FE0(v109, (uint64_t (*)(void))sub_1BFFFCF8C);
    int v89 = v193;
    uint64_t v102 = v189;
  }
  uint64_t v139 = v183;
  sub_1BFECA54C(v197 + v89[14], v183, (uint64_t (*)(void))sub_1BFEE6554);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v182 + 48))(v139, 1, v102) == 1)
  {
    unint64_t v140 = (uint64_t (*)(void))sub_1BFEE6554;
    uint64_t v141 = v139;
  }
  else
  {
    uint64_t v142 = v162;
    sub_1BFEDC2FC(v139, (uint64_t)v162, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
    uint64_t v143 = swift_allocObject();
    *(_OWORD *)(v143 + 16) = v195;
    uint64_t v196 = (uint64_t *)((char *)v196 + v143);
    uint64_t v144 = v142[1];
    uint64_t v197 = *v142;
    *(void *)&long long v195 = v144;
    unint64_t v145 = (char *)v142 + v102[5];
    unint64_t v146 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v147 = (uint64_t)v161;
    (*(void (**)(char *, char *, uint64_t))(v159 + 16))(v161, &v145[v146[5]], v160);
    uint64_t v148 = v163;
    sub_1BFECA54C((uint64_t)&v145[v146[6]], v163, (uint64_t (*)(void))sub_1BFF00BEC);
    uint64_t v149 = *(uint64_t *)((char *)v142 + v102[6]);
    uint64_t v150 = *(uint64_t *)((char *)v142 + v102[7]);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v151 = v158;
    sub_1C01B3704((uint64_t)v142, v158);
    uint64_t v152 = (uint64_t)v142 + v102[8];
    uint64_t v153 = v164;
    sub_1BFECA54C(v152, v164, (uint64_t (*)(void))sub_1BFECFC20);
    FeedWebEmbed.init(identifier:url:actionURL:indexFileURLPromise:dataURLPromise:headline:dataVisualization:isLiveUpdating:)(v197, v195, v147, v148, v149, v150, v151, v153, v196, v145[v146[10]] & 1);
    swift_storeEnumTagMultiPayload();
    sub_1BFED84D8(v143);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    unint64_t v140 = (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved;
    uint64_t v141 = (uint64_t)v142;
  }
  sub_1BFEE2FE0(v141, v140);
  return v202;
}

void sub_1BFECA0F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFECA158(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFECA1BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFECA220(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFECA284(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFECA2D8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFECA32C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFECA390(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFECA3F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFECA458(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFECA4AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t FormatFeedGroup.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FormatFeedGroup();
  return sub_1BFECA6EC(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for FormatContent.Resolved);
}

uint64_t sub_1BFECA54C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFECA5B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFECA61C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFECA684(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFECA6EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFECA754(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t FormatFeedGroup.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FormatFeedGroup() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for FormatFeedGroup()
{
  uint64_t result = qword_1EB87CB60;
  if (!qword_1EB87CB60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFECA848(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentSlotItemResolution();
  uint64_t v78 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v77 = (id *)((char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v76 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v76);
  id v79 = (id *)((char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFEC8548(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v70 - v14;
  uint64_t v84 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v84);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v75 = (id *)((char *)&v70 - v19);
  MEMORY[0x1F4188790](v20);
  uint64_t v74 = (uint64_t)&v70 - v21;
  uint64_t v22 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  id v97 = (id *)((char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  uint64_t v27 = (char *)&v70 - v26;
  MEMORY[0x1F4188790](v28);
  uint64_t v95 = (uint64_t)&v70 - v29;
  MEMORY[0x1F4188790](v30);
  id v94 = (id *)((char *)&v70 - v31);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v70 - v33;
  uint64_t result = *(void *)(a2 + 32);
  uint64_t v88 = *(void *)(result + 16);
  if (v88)
  {
    unint64_t v36 = result + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v85 = *(void *)(a2 + 56);
    unint64_t v86 = v36;
    uint64_t v89 = result;
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v37 = 0;
    uint64_t v73 = "uzzlesSolved";
    uint64_t v72 = "fastestTimeByDifficultyLevel";
    uint64_t v71 = "averageTimeByDifficultyLevel";
    uint64_t v70 = "fficultyLevel";
    uint64_t v91 = v15;
    uint64_t v92 = v6;
    id v81 = v17;
    id v82 = v12;
    uint64_t v96 = v22;
    id v90 = v34;
    uint64_t v83 = a1;
    uint64_t v87 = v23;
    while (2)
    {
      if (v37 >= *(void *)(v89 + 16))
      {
        __break(1u);
      }
      else
      {
        unint64_t v93 = v37 + 1;
        sub_1C0BF9308(v86 + *(void *)(v23 + 72) * v37, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        sub_1C0BF9308((uint64_t)v34, (uint64_t)v94, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:

            break;
          case 2u:
          case 4u:
          case 5u:
            swift_unknownObjectRelease();
            break;
          case 3u:
            uint64_t v38 = v74;
            sub_1BFDDF6A4((uint64_t)v94, v74, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
            sub_1C0BF9308(v38 + *(int *)(v84 + 36), (uint64_t)v15, (uint64_t (*)(void))sub_1BFEC8548);
            sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
            uint64_t v40 = v39;
            uint64_t v41 = *(void *)(v39 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v15, 1, v39) != 1)
            {
              sub_1C151948C();
              (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v40);
              sub_1BFECF0C4(v38, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
              uint64_t v34 = v90;
              goto LABEL_14;
            }
            sub_1BFECF0C4((uint64_t)v15, (uint64_t (*)(void))sub_1BFEC8548);
            sub_1BFECF0C4(v38, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
            uint64_t v34 = v90;
            break;
          case 6u:
          case 7u:
            sub_1BFECF0C4((uint64_t)v94, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
            break;
          case 8u:
            swift_bridgeObjectRelease();
            break;
          default:
LABEL_14:
            uint64_t v42 = swift_unknownObjectRetain();
            MEMORY[0x1C18C66D0](v42);
            if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C151EC8C();
            }
            sub_1C151ECEC();
            sub_1C151EBEC();
            swift_unknownObjectRelease();
            uint64_t v15 = v91;
            break;
        }
        sub_1C0BF9308((uint64_t)v34, v95, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            id v43 = *(id *)v95;
            id v44 = objc_msgSend(*(id *)v95, sel_identifier);
            id v45 = (id)sub_1C151E62C();
            uint64_t v47 = v46;

            goto LABEL_21;
          case 3u:
            uint64_t v48 = v75;
            sub_1BFDDF6A4(v95, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
            id v45 = *v48;
            uint64_t v47 = (uint64_t)v48[1];
            swift_bridgeObjectRetain();
            sub_1BFECF0C4((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
            goto LABEL_22;
          case 6u:
            uint64_t v64 = v79;
            sub_1BFDDF6A4(v95, (uint64_t)v79, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
            id v65 = objc_msgSend(*v64, sel_identifier, v70, v71, v72, v73);
            uint64_t v66 = sub_1C151E62C();
            uint64_t v68 = v67;

            PuzzleStatisticCategory.statisticType.getter(&v100);
            uint64_t v50 = v85;
            id v98 = (void *)v66;
            uint64_t v99 = v68;
            swift_bridgeObjectRetain();
            sub_1C151E80C();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v45 = v98;
            uint64_t v47 = v99;
            sub_1BFECF0C4((uint64_t)v79, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
            uint64_t v15 = v91;
            uint64_t v6 = v92;
            if (!*(void *)(v50 + 16)) {
              goto LABEL_3;
            }
            goto LABEL_23;
          case 7u:
            uint64_t v69 = v77;
            sub_1BFDDF6A4(v95, (uint64_t)v77, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
            id v45 = *v69;
            uint64_t v47 = (uint64_t)v69[1];
            swift_bridgeObjectRetain();
            sub_1BFECF0C4((uint64_t)v69, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
            goto LABEL_22;
          case 8u:
            id v45 = *(id *)v95;
            uint64_t v47 = *(void *)(v95 + 8);
            goto LABEL_22;
          default:
            id v44 = objc_msgSend(*(id *)v95, sel_identifier);
            id v45 = (id)sub_1C151E62C();
            uint64_t v47 = v49;
            swift_unknownObjectRelease();
LABEL_21:

            uint64_t v15 = v91;
LABEL_22:
            uint64_t v50 = v85;
            if (!*(void *)(v85 + 16)) {
              goto LABEL_3;
            }
LABEL_23:
            unint64_t v51 = sub_1BFEF2D8C((uint64_t)v45, v47);
            if (v52)
            {
              uint64_t v53 = *(void *)(*(void *)(v50 + 56) + 16 * v51);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v54 = *(void *)(v53 + 16);
              if (v54)
              {
                uint64_t v55 = *(unsigned __int8 *)(v78 + 80);
                uint64_t v80 = v53;
                uint64_t v56 = v53 + ((v55 + 32) & ~v55);
                uint64_t v57 = *(void *)(v78 + 72);
                while (2)
                {
                  sub_1C0BF9308(v56, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                  sub_1C0BF9308((uint64_t)v6, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                  sub_1BFECF0C4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemResolution);
                  sub_1C0BF9308((uint64_t)v27, (uint64_t)v97, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 1u:

                      goto LABEL_27;
                    case 2u:
                    case 4u:
                    case 5u:
                      swift_unknownObjectRelease();
                      goto LABEL_27;
                    case 3u:
                      uint64_t v58 = (uint64_t)v81;
                      sub_1BFDDF6A4((uint64_t)v97, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                      uint64_t v59 = (uint64_t)v82;
                      sub_1C0BF9308(v58 + *(int *)(v84 + 36), (uint64_t)v82, (uint64_t (*)(void))sub_1BFEC8548);
                      sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
                      uint64_t v61 = v60;
                      uint64_t v62 = *(void *)(v60 - 8);
                      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v59, 1, v60) == 1)
                      {
                        sub_1BFECF0C4(v59, (uint64_t (*)(void))sub_1BFEC8548);
                        sub_1BFECF0C4(v58, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                        a1 = v83;
LABEL_27:
                        sub_1BFECF0C4((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                      }
                      else
                      {
                        sub_1C151948C();
                        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v59, v61);
                        sub_1BFECF0C4(v58, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
                        a1 = v83;
LABEL_36:
                        sub_1BFECF0C4((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                        uint64_t v63 = swift_unknownObjectRetain();
                        MEMORY[0x1C18C66D0](v63);
                        if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8)
                                                                                          + 0x18) >> 1)
                          sub_1C151EC8C();
                        sub_1C151ECEC();
                        sub_1C151EBEC();
                        swift_unknownObjectRelease();
                        uint64_t v6 = v92;
                      }
                      v56 += v57;
                      if (--v54) {
                        continue;
                      }
                      goto LABEL_39;
                    case 6u:
                    case 7u:
                      sub_1BFECF0C4((uint64_t)v97, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
                      goto LABEL_27;
                    case 8u:
                      swift_bridgeObjectRelease();
                      goto LABEL_27;
                    default:
                      goto LABEL_36;
                  }
                }
              }
LABEL_39:
              swift_bridgeObjectRelease();
              uint64_t v15 = v91;
            }
            else
            {
LABEL_3:
              swift_bridgeObjectRelease();
            }
            uint64_t v34 = v90;
            unint64_t v37 = v93;
            uint64_t result = sub_1BFECF0C4((uint64_t)v90, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
            uint64_t v23 = v87;
            if (v37 != v88) {
              continue;
            }
            uint64_t result = swift_bridgeObjectRelease();
            break;
        }
      }
      break;
    }
  }
  return result;
}

uint64_t FormatContentSlotItemObject.Resolved.identifier.getter()
{
  uint64_t v1 = type metadata accessor for FormatCustomItem.Resolved();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (id *)((char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (id *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (id *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BFECBC20(v0, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FormatContentSlotItemObject.Resolved);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v13 = *v12;
      id v14 = objc_msgSend(*v12, sel_identifier);
      uint64_t v15 = sub_1C151E62C();

      break;
    case 3u:
      sub_1BFE07F94((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      uint64_t v15 = (uint64_t)*v9;
      swift_bridgeObjectRetain();
      sub_1BFE0AD74((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatWebEmbed.Resolved);
      break;
    case 6u:
      sub_1BFE07F94((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      uint64_t v15 = PuzzleStatistic.identifier.getter();
      sub_1BFE0AD74((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PuzzleStatistic);
      break;
    case 7u:
      sub_1BFE07F94((uint64_t)v12, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      uint64_t v15 = (uint64_t)*v3;
      swift_bridgeObjectRetain();
      sub_1BFE0AD74((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FormatCustomItem.Resolved);
      break;
    case 8u:
      uint64_t v15 = (uint64_t)*v12;
      break;
    default:
      id v16 = objc_msgSend(*v12, sel_identifier);
      uint64_t v15 = sub_1C151E62C();
      swift_unknownObjectRelease();

      break;
  }
  return v15;
}

uint64_t type metadata accessor for FormatCustomItem.Resolved()
{
  uint64_t result = qword_1EB881AB0;
  if (!qword_1EB881AB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for PuzzleStatistic()
{
  uint64_t result = qword_1EB8849E0;
  if (!qword_1EB8849E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFECBA84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFECBAE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFECBB50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFECBBB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFECBC20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FormatContentSlotItemObject.Resolved()
{
  uint64_t result = qword_1EB883160;
  if (!qword_1EB883160) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *_s8ResolvedOwcp(void *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = *(void **)a2;
      *a1 = *(void *)a2;
      id v5 = v4;
      goto LABEL_77;
    case 3u:
      uint64_t v6 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v6;
      long long v154 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      uint64_t v7 = v154[5];
      uint64_t v155 = a1;
      uint64_t v8 = (void *)((char *)a1 + v7);
      uint64_t v9 = a2 + v7;
      uint64_t v10 = *(void *)(a2 + v7 + 8);
      *uint64_t v8 = *(void *)(a2 + v7);
      v8[1] = v10;
      uint64_t v11 = (int *)type metadata accessor for FormatWebEmbed();
      uint64_t v12 = v11[5];
      uint64_t v150 = v9 + v12;
      __dsta = (char *)v8 + v12;
      uint64_t v13 = sub_1C1515FDC();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(__dsta, v150, v13);
      uint64_t v16 = v11[6];
      uint64_t v17 = (char *)v8 + v16;
      uint64_t v18 = (const void *)(v9 + v16);
      uint64_t v148 = v13;
      uint64_t v147 = (void (*)(char *, char *, uint64_t))v15;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v9 + v16, 1, v13))
      {
        sub_1BFECA458(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        v15(v17, (uint64_t)v18, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      }
      *(void *)((char *)v8 + v11[7]) = *(void *)(v9 + v11[7]);
      uint64_t v39 = v11[8];
      uint64_t v40 = (void *)((char *)v8 + v39);
      uint64_t v41 = (void *)(v9 + v39);
      uint64_t v42 = v41[1];
      *uint64_t v40 = *v41;
      v40[1] = v42;
      uint64_t v43 = v11[9];
      id v44 = (void *)((char *)v8 + v43);
      id v45 = (void *)(v9 + v43);
      uint64_t v46 = v45[1];
      *id v44 = *v45;
      v44[1] = v46;
      *(void *)((char *)v8 + v11[10]) = *(void *)(v9 + v11[10]);
      *(void *)((char *)v8 + v11[11]) = *(void *)(v9 + v11[11]);
      *(void *)((char *)v8 + v11[12]) = *(void *)(v9 + v11[12]);
      *(void *)((char *)v155 + v154[6]) = *(void *)(a2 + v154[6]);
      *(void *)((char *)v155 + v154[7]) = *(void *)(a2 + v154[7]);
      uint64_t v47 = v154[8];
      __dst = (void *)((char *)v155 + v47);
      uint64_t v48 = (uint64_t *)(a2 + v47);
      uint64_t v49 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v149 = *(void *)(v49 - 8);
      uint64_t v151 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v149 + 48);
      uint64_t v50 = v49;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v151(v48, 1, v50))
      {
        sub_1BFECA458(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(__dst, v48, *(void *)(*(void *)(v51 - 8) + 64));
        a1 = v155;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v54 = *v48;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v55 = v48[1];
          void *__dst = v54;
          __dst[1] = v55;
          uint64_t v56 = type metadata accessor for GenericDataVisualization();
          uint64_t v57 = *(int *)(v56 + 20);
          uint64_t v58 = (char *)__dst + v57;
          uint64_t v59 = (char *)v48 + v57;
          swift_bridgeObjectRetain();
          v147(v58, v59, v148);
          *(void *)((char *)__dst + *(int *)(v56 + 24)) = *(uint64_t *)((char *)v48 + *(int *)(v56 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          void *__dst = v54;
          swift_retain();
        }
        a1 = v155;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v149 + 56))(__dst, 0, 1, v50);
      }
      uint64_t v79 = v154[9];
      uint64_t v80 = (char *)a1 + v79;
      id v81 = (const void *)(a2 + v79);
      sub_1BFE07F38(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
      uint64_t v83 = v82;
      uint64_t v84 = *(void *)(v82 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v84 + 48))(v81, 1, v82))
      {
        sub_1BFEC8548(0);
        memcpy(v80, v81, *(void *)(*(void *)(v85 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(v84 + 16))(v80, v81, v83);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v80, 0, 1, v83);
      }
      goto LABEL_77;
    case 6u:
      *a1 = *(void *)a2;
      uint64_t v30 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      uint64_t v31 = (void *)((char *)a1 + v30);
      uint64_t v32 = (void *)(a2 + v30);
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_unknownObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v64 = type metadata accessor for PuzzleStatisticValue(0);
          int v65 = swift_getEnumCaseMultiPayload();
          if (v65 == 5)
          {
            uint64_t v117 = type metadata accessor for PuzzleStreak();
            uint64_t v118 = *(void *)(v117 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v118 + 48))(v32, 1, v117))
            {
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v31, v32, *(void *)(*(void *)(v119 - 8) + 64));
            }
            else
            {
              uint64_t v129 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v129 - 8) + 16))(v31, v32, v129);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v118 + 56))(v31, 0, 1, v117);
            }
            uint64_t v120 = a1;
          }
          else
          {
            if (v65 != 4)
            {
              uint64_t v120 = a1;
              memcpy(v31, v32, *(void *)(*(void *)(v64 - 8) + 64));
              goto LABEL_57;
            }
            uint64_t v66 = type metadata accessor for PuzzleStreak();
            uint64_t v67 = *(void *)(v66 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v67 + 48))(v32, 1, v66))
            {
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v31, v32, *(void *)(*(void *)(v68 - 8) + 64));
            }
            else
            {
              uint64_t v127 = sub_1C151555C();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v127 - 8) + 16))(v31, v32, v127);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v31, 0, 1, v66);
            }
            uint64_t v120 = a1;
          }
          swift_storeEnumTagMultiPayload();
LABEL_57:
          uint64_t v130 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v131 = *(int *)(v130 + 20);
          uint64_t v132 = (char *)v31 + v131;
          uint64_t v133 = (char *)v32 + v131;
          int v134 = swift_getEnumCaseMultiPayload();
          if (v134 == 5)
          {
            uint64_t v135 = type metadata accessor for PuzzleStreak();
            uint64_t v136 = *(void *)(v135 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v133, 1, v135))
            {
LABEL_62:
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v132, v133, *(void *)(*(void *)(v137 - 8) + 64));
              goto LABEL_65;
            }
          }
          else
          {
            if (v134 != 4)
            {
              memcpy(v132, v133, *(void *)(*(void *)(v64 - 8) + 64));
              a1 = v120;
              goto LABEL_66;
            }
            uint64_t v135 = type metadata accessor for PuzzleStreak();
            uint64_t v136 = *(void *)(v135 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48))(v133, 1, v135)) {
              goto LABEL_62;
            }
          }
          uint64_t v138 = sub_1C151555C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v132, v133, v138);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56))(v132, 0, 1, v135);
LABEL_65:
          swift_storeEnumTagMultiPayload();
          a1 = v120;
LABEL_66:
          uint64_t v139 = *(int *)(v130 + 24);
          unint64_t v140 = (char *)v31 + v139;
          uint64_t v32 = (void *)((char *)v32 + v139);
          int v141 = swift_getEnumCaseMultiPayload();
          if (v141 == 5)
          {
            uint64_t v142 = type metadata accessor for PuzzleStreak();
            uint64_t v143 = *(void *)(v142 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v143 + 48))(v32, 1, v142))
            {
LABEL_71:
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v140, v32, *(void *)(*(void *)(v144 - 8) + 64));
              goto LABEL_75;
            }
          }
          else
          {
            if (v141 != 4)
            {
              size_t v63 = *(void *)(*(void *)(v64 - 8) + 64);
              uint64_t v116 = v140;
              goto LABEL_73;
            }
            uint64_t v142 = type metadata accessor for PuzzleStreak();
            uint64_t v143 = *(void *)(v142 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v143 + 48))(v32, 1, v142)) {
              goto LABEL_71;
            }
          }
          uint64_t v145 = sub_1C151555C();
          (*(void (**)(char *, void *, uint64_t))(*(void *)(v145 - 8) + 16))(v140, v32, v145);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
          goto LABEL_75;
        case 2u:
          uint64_t v60 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          uint64_t v61 = *((void *)v60 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v61 + 48))(v32, 1, v60))
          {
            sub_1BFECA458(0, &qword_1EB884BF0, (void (*)(uint64_t))type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult);
            size_t v63 = *(void *)(*(void *)(v62 - 8) + 64);
            goto LABEL_44;
          }
          uint64_t v86 = sub_1C151631C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v86 - 8) + 16))(v31, v32, v86);
          uint64_t v87 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
          uint64_t v88 = v87[5];
          uint64_t v89 = (void *)((char *)v31 + v88);
          id v90 = (void *)((char *)v32 + v88);
          uint64_t v91 = v90[1];
          *uint64_t v89 = *v90;
          v89[1] = v91;
          uint64_t v92 = v87[6];
          unint64_t v93 = (char *)v31 + v92;
          id v94 = (void *)((char *)v32 + v92);
          uint64_t v95 = v94[1];
          *(void *)unint64_t v93 = *v94;
          *((void *)v93 + 1) = v95;
          uint64_t v96 = v94 + 2;
          unint64_t v97 = v94[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v97 >> 60 == 15)
          {
            *((_OWORD *)v93 + 1) = *(_OWORD *)v96;
          }
          else
          {
            uint64_t v121 = *v96;
            sub_1BFE95820(*v96, v97);
            *((void *)v93 + 2) = v121;
            *((void *)v93 + 3) = v97;
          }
          *(void *)((char *)v31 + v87[7]) = *(void *)((char *)v32 + v87[7]);
          *(void *)((char *)v31 + v87[8]) = *(void *)((char *)v32 + v87[8]);
          *(void *)((char *)v31 + v60[5]) = *(void *)((char *)v32 + v60[5]);
          *(void *)((char *)v31 + v60[6]) = *(void *)((char *)v32 + v60[6]);
          uint64_t v122 = v60[7];
          id v123 = (void *)((char *)v31 + v122);
          id v124 = (void *)((char *)v32 + v122);
          uint64_t v125 = v124[1];
          *id v123 = *v124;
          v123[1] = v125;
          char v126 = *(void (**)(void *, void, uint64_t, int *))(v61 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v126(v31, 0, 1, v60);
          goto LABEL_76;
        case 3u:
          uint64_t v69 = a1;
          uint64_t v70 = v32[1];
          *uint64_t v31 = *v32;
          v31[1] = v70;
          *((unsigned char *)v31 + 16) = *((unsigned char *)v32 + 16);
          uint64_t v71 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v72 = v71[6];
          uint64_t v73 = (char *)v31 + v72;
          uint64_t v74 = (char *)v32 + v72;
          uint64_t v75 = type metadata accessor for PuzzleStreak();
          uint64_t v76 = *(void *)(v75 - 8);
          unint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
          if (v77(v74, 1, v75))
          {
            sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v73, v74, *(void *)(*(void *)(v78 - 8) + 64));
          }
          else
          {
            uint64_t v98 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16))(v73, v74, v98);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v73, 0, 1, v75);
          }
          a1 = v69;
          uint64_t v99 = v71[7];
          char v100 = (char *)v31 + v99;
          uint64_t v101 = (char *)v32 + v99;
          if (v77((char *)v32 + v99, 1, v75))
          {
            sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
            memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
          }
          else
          {
            uint64_t v103 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v100, v101, v103);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56))(v100, 0, 1, v75);
          }
          uint64_t v104 = v71[8];
          uint64_t v105 = (_OWORD *)((char *)v31 + v104);
          uint64_t v106 = (_OWORD *)((char *)v32 + v104);
          long long v107 = v106[1];
          *uint64_t v105 = *v106;
          v105[1] = v107;
          *(_OWORD *)((char *)v105 + 25) = *(_OWORD *)((char *)v106 + 25);
          uint64_t v108 = v71[9];
          uint64_t v109 = (_OWORD *)((char *)v31 + v108);
          uint64_t v110 = (_OWORD *)((char *)v32 + v108);
          *(_OWORD *)((char *)v109 + 25) = *(_OWORD *)((char *)v110 + 25);
          long long v111 = v110[1];
          *uint64_t v109 = *v110;
          v109[1] = v111;
          uint64_t v112 = v71[10];
          uint64_t v113 = (_OWORD *)((char *)v31 + v112);
          uint64_t v114 = (_OWORD *)((char *)v32 + v112);
          long long v115 = v114[1];
          *uint64_t v113 = *v114;
          v113[1] = v115;
          *(_OWORD *)((char *)v113 + 25) = *(_OWORD *)((char *)v114 + 25);
          goto LABEL_76;
        default:
          uint64_t v33 = type metadata accessor for PuzzleStatisticValue(0);
          int v34 = swift_getEnumCaseMultiPayload();
          if (v34 == 5)
          {
            uint64_t v35 = type metadata accessor for PuzzleStreak();
            uint64_t v36 = *(void *)(v35 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48))(v32, 1, v35)) {
              goto LABEL_12;
            }
          }
          else
          {
            if (v34 != 4)
            {
              size_t v63 = *(void *)(*(void *)(v33 - 8) + 64);
LABEL_44:
              uint64_t v116 = (char *)v31;
LABEL_73:
              memcpy(v116, v32, v63);
              goto LABEL_76;
            }
            uint64_t v35 = type metadata accessor for PuzzleStreak();
            uint64_t v36 = *(void *)(v35 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v36 + 48))(v32, 1, v35))
            {
LABEL_12:
              sub_1BFECA458(0, &qword_1EB882A40, (void (*)(uint64_t))type metadata accessor for PuzzleStreak);
              memcpy(v31, v32, *(void *)(*(void *)(v37 - 8) + 64));
              goto LABEL_75;
            }
          }
          uint64_t v128 = sub_1C151555C();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v128 - 8) + 16))(v31, v32, v128);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v31, 0, 1, v35);
LABEL_75:
          swift_storeEnumTagMultiPayload();
LABEL_76:
          swift_storeEnumTagMultiPayload();
LABEL_77:
          swift_storeEnumTagMultiPayload();
          return a1;
      }
    case 7u:
      uint64_t v20 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v20;
      uint64_t v21 = *(void *)(a2 + 24);
      a1[2] = *(void *)(a2 + 16);
      a1[3] = v21;
      uint64_t v22 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v23 = *(int *)(v22 + 24);
      uint64_t v156 = a1;
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (const void *)(a2 + v23);
      uint64_t v26 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v28(v25, 1, v26))
      {
        sub_1BFECA458(0, &qword_1EB887B40, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        uint64_t v52 = sub_1C1515FDC();
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v52 - 8) + 16))(v24, v25, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      a1 = v156;
      *(void *)((char *)v156 + *(int *)(v22 + 28)) = *(void *)(a2 + *(int *)(v22 + 28));
      swift_bridgeObjectRetain();
      goto LABEL_77;
    case 8u:
      uint64_t v38 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v38;
      *((unsigned char *)a1 + 16) = *(unsigned char *)(a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_77;
    default:
      *a1 = *(void *)a2;
      swift_unknownObjectRetain();
      goto LABEL_77;
  }
}

uint64_t _s8ResolvedVwxx_2(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v6 = a1 + a2[14];
  uint64_t v7 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + v7[5];
    swift_bridgeObjectRelease();
    uint64_t v9 = type metadata accessor for FormatWebEmbed();
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v25(v10, v11);
    uint64_t v13 = v8 + *(int *)(v9 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11)) {
      v25(v13, v11);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v14 = v6 + v7[8];
    uint64_t v15 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = type metadata accessor for GenericDataVisualization();
        v25(v14 + *(int *)(v16 + 20), v11);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v17 = v6 + v7[9];
    sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v21 = a1 + a2[18];
  uint64_t v22 = sub_1C151D6DC();
  uint64_t v26 = *(void *)(v22 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v21, 1, v22);
  if (!result)
  {
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 8);
    return v24(v21, v22);
  }
  return result;
}

void *_s8ResolvedVwcp_2(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
  uint64_t v14 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[12];
  uint64_t v16 = a3[13];
  uint64_t v17 = *(void **)((char *)a2 + v15);
  *(void *)((char *)a1 + v15) = v17;
  uint64_t v96 = v17;
  *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
  uint64_t v89 = a3;
  uint64_t v18 = a3[14];
  uint64_t v92 = a1;
  uint64_t v99 = (void *)((char *)a1 + v18);
  uint64_t v91 = a2;
  uint64_t v19 = (void *)((char *)a2 + v18);
  uint64_t v20 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v93 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v22 = v96;
  swift_unknownObjectRetain();
  if (v93(v19, 1, v20))
  {
    sub_1BFEE6554(0);
    memcpy(v99, v19, *(void *)(*(void *)(v23 - 8) + 64));
    uint64_t v24 = v91;
    uint64_t v25 = a1;
    uint64_t v26 = v89;
  }
  else
  {
    uint64_t v88 = v21;
    uint64_t v27 = v19[1];
    *uint64_t v99 = *v19;
    v99[1] = v27;
    unint64_t v97 = v19;
    uint64_t v98 = (int *)v20;
    uint64_t v28 = *(int *)(v20 + 20);
    uint64_t v29 = (void *)((char *)v99 + v28);
    uint64_t v30 = (char *)v19 + v28;
    uint64_t v31 = *(void *)((char *)v19 + v28 + 8);
    *uint64_t v29 = *(void *)((char *)v19 + v28);
    v29[1] = v31;
    uint64_t v32 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v33 = v32[5];
    int v34 = (char *)v29 + v33;
    id v94 = &v30[v33];
    uint64_t v35 = sub_1C1515FDC();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(v34, v94, v35);
    uint64_t v38 = v32[6];
    uint64_t v39 = (char *)v29 + v38;
    uint64_t v40 = &v30[v38];
    uint64_t v85 = v35;
    uint64_t v84 = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(&v30[v38], 1, v35))
    {
      uint64_t v41 = v99;
      sub_1BFF95180(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      uint64_t v43 = v37;
      uint64_t v41 = v99;
      v43(v39, v40, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v35);
    }
    uint64_t v26 = v89;
    *(void *)((char *)v29 + v32[7]) = *(void *)&v30[v32[7]];
    uint64_t v44 = v32[8];
    id v45 = (void *)((char *)v29 + v44);
    uint64_t v46 = &v30[v44];
    uint64_t v90 = *((void *)v46 + 1);
    *id v45 = *(void *)v46;
    v45[1] = v90;
    uint64_t v47 = v32[9];
    uint64_t v48 = (void *)((char *)v29 + v47);
    uint64_t v49 = &v30[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *uint64_t v48 = *(void *)v49;
    v48[1] = v50;
    *(void *)((char *)v29 + v32[10]) = *(void *)&v30[v32[10]];
    *(void *)((char *)v29 + v32[11]) = *(void *)&v30[v32[11]];
    *(void *)((char *)v29 + v32[12]) = *(void *)&v30[v32[12]];
    *(void *)((char *)v41 + v98[6]) = *(void *)((char *)v97 + v98[6]);
    *(void *)((char *)v41 + v98[7]) = *(void *)((char *)v97 + v98[7]);
    uint64_t v51 = v98[8];
    __dst = (void *)((char *)v41 + v51);
    uint64_t v52 = (void *)((char *)v97 + v51);
    uint64_t v53 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v86 = *(void *)(v53 - 8);
    uint64_t v54 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v86 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v54(v52, 1, v53))
    {
      sub_1BFF95180(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
      memcpy(__dst, v52, *(void *)(*(void *)(v55 - 8) + 64));
      uint64_t v24 = v91;
      uint64_t v25 = v92;
      uint64_t v56 = v98;
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v58 = *v52;
      uint64_t v24 = v91;
      uint64_t v25 = v92;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v95 = v53;
        uint64_t v59 = v52[1];
        void *__dst = v58;
        __dst[1] = v59;
        uint64_t v60 = v52;
        uint64_t v61 = type metadata accessor for GenericDataVisualization();
        uint64_t v62 = *(int *)(v61 + 20);
        size_t v63 = (char *)__dst + v62;
        uint64_t v64 = (char *)v60 + v62;
        uint64_t v53 = v95;
        swift_bridgeObjectRetain();
        v84(v63, v64, v85);
        *(void *)((char *)__dst + *(int *)(v61 + 24)) = *(uint64_t *)((char *)v60 + *(int *)(v61 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        void *__dst = v58;
        swift_retain();
      }
      uint64_t v56 = v98;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(__dst, 0, 1, v53);
    }
    uint64_t v65 = v56[9];
    uint64_t v66 = (char *)v99 + v65;
    uint64_t v67 = (char *)v97 + v65;
    sub_1C0BF59D0(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
    uint64_t v69 = v68;
    uint64_t v70 = *(void *)(v68 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v67, 1, v68))
    {
      sub_1BFEC8548(0);
      memcpy(v66, v67, *(void *)(*(void *)(v71 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v66, v67, v69);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v66, 0, 1, v69);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v88 + 56))(v99, 0, 1, v56);
  }
  uint64_t v72 = v26[15];
  uint64_t v73 = v26[16];
  uint64_t v74 = *(void **)((char *)v24 + v72);
  *(void *)((char *)v25 + v72) = v74;
  *((unsigned char *)v25 + v73) = *((unsigned char *)v24 + v73);
  uint64_t v75 = v26[18];
  *(void *)((char *)v25 + v26[17]) = *(void *)((char *)v24 + v26[17]);
  uint64_t v76 = (char *)v25 + v75;
  unint64_t v77 = (char *)v24 + v75;
  uint64_t v78 = sub_1C151D6DC();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
  id v81 = v74;
  swift_bridgeObjectRetain();
  if (v80(v77, 1, v78))
  {
    sub_1BFEE3854(0);
    memcpy(v76, v77, *(void *)(*(void *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v76, v77, v78);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  }
  return v25;
}

uint64_t destroy for FormatFeedGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v3 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v4 = v2 + v3[5];
  uint64_t v5 = sub_1C151631C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  uint64_t v6 = v2 + v3[14];
  uint64_t v7 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v7 - 1) + 48))(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + v7[5];
    swift_bridgeObjectRelease();
    uint64_t v9 = type metadata accessor for FormatWebEmbed();
    uint64_t v10 = v8 + *(int *)(v9 + 20);
    uint64_t v11 = sub_1C1515FDC();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v25(v10, v11);
    uint64_t v13 = v8 + *(int *)(v9 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11)) {
      v25(v13, v11);
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v14 = v6 + v7[8];
    uint64_t v15 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = type metadata accessor for GenericDataVisualization();
        v25(v14 + *(int *)(v16 + 20), v11);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    uint64_t v17 = v6 + v7[9];
    sub_1BFEC84E0();
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18)) {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v21 = v2 + v3[18];
  uint64_t v22 = sub_1C151D6DC();
  uint64_t v23 = *(void *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22)) {
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

void *initializeWithCopy for FormatFeedGroup(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = (void *)((char *)a1 + v3);
  uint64_t v5 = (char *)a2 + v3;
  uint64_t v6 = *(void *)((char *)a2 + v3 + 8);
  *uint64_t v4 = *(void *)((char *)a2 + v3);
  v4[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for FormatContent.Resolved();
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)v4 + v8;
  uint64_t v10 = &v5[v8];
  uint64_t v11 = sub_1C151631C();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(void *)((char *)v4 + v7[6]) = *(void *)&v5[v7[6]];
  *(void *)((char *)v4 + v7[7]) = *(void *)&v5[v7[7]];
  *(void *)((char *)v4 + v7[8]) = *(void *)&v5[v7[8]];
  *(void *)((char *)v4 + v7[9]) = *(void *)&v5[v7[9]];
  *(void *)((char *)v4 + v7[10]) = *(void *)&v5[v7[10]];
  *(void *)((char *)v4 + v7[11]) = *(void *)&v5[v7[11]];
  uint64_t v13 = v7[12];
  uint64_t v112 = *(void **)&v5[v13];
  *(void *)((char *)v4 + v13) = v112;
  *(void *)((char *)v4 + v7[13]) = *(void *)&v5[v7[13]];
  uint64_t v103 = v7;
  uint64_t v14 = v7[14];
  long long v115 = (void *)((char *)v4 + v14);
  uint64_t v106 = v5;
  uint64_t v15 = &v5[v14];
  uint64_t v16 = type metadata accessor for FormatWebEmbed.Resolved();
  uint64_t v102 = *(void *)(v16 - 8);
  uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v17 = v112;
  swift_unknownObjectRetain();
  if (v109(v15, 1, v16))
  {
    sub_1BFECFA84(0, &qword_1EB896EE0, (void (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved);
    memcpy(v115, v15, *(void *)(*(void *)(v18 - 8) + 64));
    uint64_t v20 = a2;
    uint64_t v19 = a1;
    uint64_t v21 = v106;
    uint64_t v22 = v103;
  }
  else
  {
    uint64_t v23 = *((void *)v15 + 1);
    *long long v115 = *(void *)v15;
    v115[1] = v23;
    uint64_t v101 = (int *)v16;
    uint64_t v24 = *(int *)(v16 + 20);
    uint64_t v25 = (void *)((char *)v115 + v24);
    uint64_t v113 = v15;
    uint64_t v26 = &v15[v24];
    uint64_t v27 = *(void *)&v15[v24 + 8];
    void *v25 = *(void *)&v15[v24];
    v25[1] = v27;
    uint64_t v28 = (int *)type metadata accessor for FormatWebEmbed();
    uint64_t v29 = v28[5];
    uint64_t v30 = (char *)v25 + v29;
    uint64_t v110 = &v26[v29];
    uint64_t v31 = sub_1C1515FDC();
    uint64_t v32 = *(void *)(v31 - 8);
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33(v30, v110, v31);
    uint64_t v34 = v28[6];
    uint64_t v35 = (char *)v25 + v34;
    uint64_t v36 = &v26[v34];
    uint64_t v98 = v31;
    unint64_t v97 = v33;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v26[v34], 1, v31))
    {
      sub_1BFECFA84(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      v33(v35, v36, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
    }
    uint64_t v22 = v103;
    *(void *)((char *)v25 + v28[7]) = *(void *)&v26[v28[7]];
    uint64_t v38 = v28[8];
    uint64_t v39 = (void *)((char *)v25 + v38);
    uint64_t v40 = &v26[v38];
    uint64_t v104 = *((void *)v40 + 1);
    *uint64_t v39 = *(void *)v40;
    v39[1] = v104;
    uint64_t v41 = v28[9];
    uint64_t v42 = (void *)((char *)v25 + v41);
    uint64_t v43 = &v26[v41];
    uint64_t v44 = *((void *)v43 + 1);
    *uint64_t v42 = *(void *)v43;
    v42[1] = v44;
    *(void *)((char *)v25 + v28[10]) = *(void *)&v26[v28[10]];
    *(void *)((char *)v25 + v28[11]) = *(void *)&v26[v28[11]];
    *(void *)((char *)v25 + v28[12]) = *(void *)&v26[v28[12]];
    *(void *)((char *)v115 + v101[6]) = *(void *)((char *)v113 + v101[6]);
    *(void *)((char *)v115 + v101[7]) = *(void *)((char *)v113 + v101[7]);
    uint64_t v45 = v101[8];
    __dst = (void *)((char *)v115 + v45);
    uint64_t v46 = (void *)((char *)v113 + v45);
    uint64_t v47 = type metadata accessor for WebEmbedDataVisualization();
    uint64_t v48 = *(void *)(v47 - 8);
    char v100 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v48 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v100(v46, 1, v47))
    {
      sub_1BFECFA84(0, &qword_1EB88BF40, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
      memcpy(__dst, v46, *(void *)(*(void *)(v49 - 8) + 64));
      uint64_t v20 = a2;
      uint64_t v21 = v106;
      uint64_t v50 = v101;
    }
    else
    {
      uint64_t v111 = v48;
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v52 = *v46;
      uint64_t v20 = a2;
      uint64_t v50 = v101;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v105 = v47;
        uint64_t v53 = v46[1];
        void *__dst = v52;
        __dst[1] = v53;
        uint64_t v54 = type metadata accessor for GenericDataVisualization();
        uint64_t v55 = *(int *)(v54 + 20);
        uint64_t v56 = (char *)__dst + v55;
        uint64_t v57 = (char *)v46 + v55;
        uint64_t v47 = v105;
        swift_bridgeObjectRetain();
        v97(v56, v57, v98);
        *(void *)((char *)__dst + *(int *)(v54 + 24)) = *(uint64_t *)((char *)v46 + *(int *)(v54 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        void *__dst = v52;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(__dst, 0, 1, v47);
      uint64_t v21 = v106;
    }
    uint64_t v58 = v50[9];
    uint64_t v59 = (char *)v115 + v58;
    uint64_t v60 = (char *)v113 + v58;
    sub_1BFEC84E0();
    uint64_t v62 = v61;
    uint64_t v63 = *(void *)(v61 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v60, 1, v61))
    {
      sub_1BFECFA84(0, &qword_1EB894680, (void (*)(uint64_t))sub_1BFEC84E0);
      memcpy(v59, v60, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v59, v60, v62);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v59, 0, 1, v62);
    }
    uint64_t v19 = a1;
    (*(void (**)(void *, void, uint64_t, int *))(v102 + 56))(v115, 0, 1, v50);
  }
  uint64_t v65 = v22[15];
  uint64_t v66 = *(void **)&v21[v65];
  *(void *)((char *)v4 + v65) = v66;
  *((unsigned char *)v4 + v22[16]) = v21[v22[16]];
  *(void *)((char *)v4 + v22[17]) = *(void *)&v21[v22[17]];
  uint64_t v67 = v22[18];
  uint64_t v68 = (char *)v4 + v67;
  uint64_t v69 = &v21[v67];
  uint64_t v70 = sub_1C151D6DC();
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
  id v73 = v66;
  swift_bridgeObjectRetain();
  if (v72(v69, 1, v70))
  {
    sub_1BFECFA84(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8]);
    memcpy(v68, v69, *(void *)(*(void *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v68, v69, v70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  uint64_t v75 = a3[6];
  uint64_t v76 = a3[7];
  unint64_t v77 = (void *)((char *)v19 + v75);
  uint64_t v78 = (void *)((char *)v20 + v75);
  uint64_t v79 = v78[1];
  *unint64_t v77 = *v78;
  v77[1] = v79;
  *((unsigned char *)v19 + v76) = *((unsigned char *)v20 + v76);
  uint64_t v80 = a3[9];
  *((unsigned char *)v19 + a3[8]) = *((unsigned char *)v20 + a3[8]);
  *(void *)((char *)v19 + v80) = *(void *)((char *)v20 + v80);
  uint64_t v81 = a3[11];
  *(void *)((char *)v19 + a3[10]) = *(void *)((char *)v20 + a3[10]);
  *(void *)((char *)v19 + v81) = *(void *)((char *)v20 + v81);
  uint64_t v82 = a3[12];
  uint64_t v83 = a3[13];
  uint64_t v84 = (char *)v19 + v82;
  uint64_t v85 = (char *)v20 + v82;
  *(void *)uint64_t v84 = *(void *)v85;
  v84[8] = v85[8];
  uint64_t v86 = (char *)v19 + v83;
  uint64_t v87 = (char *)v20 + v83;
  *(void *)uint64_t v86 = *(void *)v87;
  v86[8] = v87[8];
  uint64_t v88 = a3[14];
  uint64_t v89 = a3[15];
  uint64_t v90 = (char *)v19 + v88;
  uint64_t v91 = (char *)v20 + v88;
  *(void *)uint64_t v90 = *(void *)v91;
  v90[8] = v91[8];
  uint64_t v92 = (char *)v19 + v89;
  unint64_t v93 = (char *)v20 + v89;
  *(void *)uint64_t v92 = *(void *)v93;
  v92[8] = v93[8];
  uint64_t v94 = a3[17];
  *((unsigned char *)v19 + a3[16]) = *((unsigned char *)v20 + a3[16]);
  *(void *)((char *)v19 + v94) = *(void *)((char *)v20 + v94);
  uint64_t v95 = a3[19];
  *(void *)((char *)v19 + a3[18]) = *(void *)((char *)v20 + a3[18]);
  *(void *)((char *)v19 + v95) = *(void *)((char *)v20 + v95);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return v19;
}

uint64_t type metadata accessor for FormatWebEmbed.Resolved()
{
  uint64_t result = qword_1EB894758;
  if (!qword_1EB894758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s8ResolvedVwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C0DEC2A8);
}

void sub_1BFECEE20(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C151ED5C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFECEE7C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    unint64_t v6 = sub_1C151ED5C();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1BFECEED8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFECEF3C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC9DBE8(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1BFECEFA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECF004(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECF064(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECF0C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECF124(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECF184(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void _s8ResolvedOwxx(void **a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 4u:
    case 5u:
      swift_unknownObjectRelease();
      break;
    case 1u:
      uint64_t v2 = *a1;

      break;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v3 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
      uint64_t v4 = (char *)a1 + v3[5];
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for FormatWebEmbed();
      unint64_t v6 = &v4[*(int *)(v5 + 20)];
      uint64_t v7 = sub_1C1515FDC();
      uint64_t v8 = *(void *)(v7 - 8);
      unint64_t v9 = *(void (**)(char *, uint64_t))(v8 + 8);
      v9(v6, v7);
      uint64_t v10 = &v4[*(int *)(v5 + 24)];
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
        v9(v10, v7);
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v11 = (char *)a1 + v3[8];
      uint64_t v12 = type metadata accessor for WebEmbedDataVisualization();
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v13 = type metadata accessor for GenericDataVisualization();
          v9(&v11[*(int *)(v13 + 20)], v7);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      uint64_t v42 = (char *)a1 + v3[9];
      sub_1BFE07F38(0, (unint64_t *)&qword_1EB894670, (uint64_t)&qword_1EB895E90, (uint64_t)&protocolRef_FCHeadlineProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BFC9DBE8);
      uint64_t v44 = v43;
      uint64_t v45 = *(void *)(v43 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v42, 1, v43))
      {
        uint64_t v39 = *(void (**)(char *, uint64_t))(v45 + 8);
        uint64_t v41 = v42;
        uint64_t v40 = v44;
        goto LABEL_45;
      }
      break;
    case 6u:
      swift_unknownObjectRelease();
      uint64_t v14 = (char *)a1 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_29;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v19 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v14, 1, v19))
            {
              uint64_t v20 = sub_1C151555C();
              (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v14, v20);
            }
          }
          uint64_t v21 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v22 = &v14[*(int *)(v21 + 20)];
          int v23 = swift_getEnumCaseMultiPayload();
          if (v23 == 5 || v23 == 4)
          {
            uint64_t v24 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v22, 1, v24))
            {
              uint64_t v25 = sub_1C151555C();
              (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v22, v25);
            }
          }
          v14 += *(int *)(v21 + 24);
LABEL_29:
          int v26 = swift_getEnumCaseMultiPayload();
          if (v26 == 5 || v26 == 4)
          {
            uint64_t v27 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v14, 1, v27))goto LABEL_40; {
          }
            }
          return;
        case 2u:
          uint64_t v28 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v14, 1, v28)) {
            return;
          }
          uint64_t v29 = sub_1C151631C();
          (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v14, v29);
          uint64_t v30 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v31 = &v14[*(int *)(v30 + 24)];
          swift_bridgeObjectRelease();
          unint64_t v32 = *((void *)v31 + 3);
          if (v32 >> 60 != 15) {
            sub_1BFE95664(*((void *)v31 + 2), v32);
          }
          swift_bridgeObjectRelease();
          goto LABEL_17;
        case 3u:
          uint64_t v33 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v34 = &v14[*(int *)(v33 + 24)];
          uint64_t v35 = type metadata accessor for PuzzleStreak();
          uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48);
          if (!v36(v34, 1, v35))
          {
            uint64_t v37 = sub_1C151555C();
            (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v34, v37);
          }
          v14 += *(int *)(v33 + 28);
          if (v36(v14, 1, v35)) {
            return;
          }
LABEL_40:
          uint64_t v38 = sub_1C151555C();
          uint64_t v39 = *(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8);
          uint64_t v40 = v38;
          uint64_t v41 = v14;
          break;
        default:
          return;
      }
LABEL_45:
      v39(v41, v40);
      break;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = (char *)a1 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v16 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
      {
        uint64_t v17 = sub_1C1515FDC();
        (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v15, v17);
      }
      goto LABEL_17;
    case 8u:
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

void sub_1BFECFA20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFECFA84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFECFAD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFECFB3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for FormatContentSlotItemResolution()
{
  uint64_t result = qword_1EB880630;
  if (!qword_1EB880630) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BFECFBEC(uint64_t a1)
{
}

void sub_1BFECFC20(uint64_t a1)
{
}

uint64_t sub_1BFECFC54(uint64_t a1, uint64_t a2)
{
  return sub_1C01B2674(a1, a2, (uint64_t (*)(void))type metadata accessor for FeedGroupItem, (uint64_t (*)(void))type metadata accessor for FeedGroupItem, (void (*)(char *, char *))sub_1BFED30EC);
}

uint64_t sub_1BFECFC84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECFCE4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECFD44(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFECFD88(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for FeedGroupDebug()
{
  return self;
}

uint64_t sub_1BFECFDF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECFE50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECFEB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECFF10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECFF70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFECFFD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFED0030(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s8NewsFeed0B9GroupItemO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1BFED78F4();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t)&v6[*(int *)(v7 + 56)];
  sub_1BFED3A84(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  sub_1BFED3A84(a2, v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  type metadata accessor for FeedGroupItem();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1BFED03E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_23;
      }
      goto LABEL_28;
    case 2u:
      sub_1BFED03E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_28;
      }
      goto LABEL_23;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_9;
      }
      goto LABEL_27;
    case 4u:
      sub_1BFED03E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_28;
      }
      goto LABEL_23;
    case 5u:
      if (swift_getEnumCaseMultiPayload() != 5) {
        goto LABEL_27;
      }
      goto LABEL_9;
    case 6u:
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_27;
      }
      goto LABEL_9;
    case 7u:
      sub_1BFED03E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_28;
      }
      goto LABEL_23;
    case 8u:
      sub_1BFED03E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_28;
      }
      goto LABEL_23;
    case 9u:
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_27;
      }
      goto LABEL_9;
    case 0xAu:
      sub_1BFED03E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      if (swift_getEnumCaseMultiPayload() == 10) {
        goto LABEL_23;
      }
      goto LABEL_28;
    case 0xBu:
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_27;
      }
      goto LABEL_9;
    case 0xCu:
      if (swift_getEnumCaseMultiPayload() == 12)
      {
LABEL_9:
        sub_1BFED03E0(v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        uint64_t v9 = 1;
        uint64_t v8 = (uint64_t)v6;
      }
      else
      {
LABEL_27:
        sub_1BFED03E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
LABEL_28:
        uint64_t v9 = 0;
      }
      break;
    default:
      sub_1BFED03E0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_28;
      }
LABEL_23:
      uint64_t v9 = 1;
      break;
  }
  sub_1BFED03E0(v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  return v9;
}

uint64_t sub_1BFED03E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFED0440(uint64_t a1)
{
  v435 = (ValueMetadata *)type metadata accessor for FeedSponsorshipBannerAd();
  MEMORY[0x1F4188790](v435);
  uint64_t v443 = (uint64_t)v427 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v434 = (ValueMetadata *)type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v434);
  uint64_t v442 = (uint64_t)v427 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v433 = (ValueMetadata *)type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v433);
  uint64_t v441 = (uint64_t)v427 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v432 = (ValueMetadata *)type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v432);
  uint64_t v440 = (uint64_t)v427 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v431 = (ValueMetadata *)type metadata accessor for FeedWeather(0);
  MEMORY[0x1F4188790](v431);
  uint64_t v439 = (uint64_t)v427 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedGroupItem();
  uint64_t v449 = *(void *)(v7 - 8);
  uint64_t v450 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v427 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v448 = (uint64_t)v427 - v11;
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v446 = a1 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v447 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v16 = 0;
  uint64_t v17 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v451 = a1;
  v438 = v9;
  while (2)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v16 << 6);
LABEL_22:
      uint64_t v24 = v448;
      sub_1BFED3A84(*(void *)(v451 + 48) + *(void *)(v449 + 72) * v20, v448, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      sub_1BFED3084(v24, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          long long v219 = *((_OWORD *)v9 + 7);
          long long v459 = *((_OWORD *)v9 + 6);
          v460[0] = v219;
          *(_OWORD *)((char *)v460 + 9) = *(_OWORD *)(v9 + 121);
          long long v220 = *((_OWORD *)v9 + 3);
          long long v455 = *((_OWORD *)v9 + 2);
          long long v456 = v220;
          long long v221 = *((_OWORD *)v9 + 5);
          long long v457 = *((_OWORD *)v9 + 4);
          long long v458 = v221;
          long long v222 = *((_OWORD *)v9 + 1);
          long long v453 = *(_OWORD *)v9;
          long long v454 = v222;
          v477 = &type metadata for FeedIssue;
          uint64_t v223 = (_OWORD *)swift_allocObject();
          *(void *)&long long v476 = v223;
          long long v224 = *((_OWORD *)v9 + 7);
          v223[7] = *((_OWORD *)v9 + 6);
          v223[8] = v224;
          *(_OWORD *)((char *)v223 + 137) = *(_OWORD *)(v9 + 121);
          long long v225 = *((_OWORD *)v9 + 3);
          v223[3] = *((_OWORD *)v9 + 2);
          v223[4] = v225;
          long long v226 = *((_OWORD *)v9 + 5);
          v223[5] = *((_OWORD *)v9 + 4);
          v223[6] = v226;
          long long v227 = *((_OWORD *)v9 + 1);
          v223[1] = *(_OWORD *)v9;
          v223[2] = v227;
          __swift_project_boxed_opaque_existential_1(&v476, (uint64_t)&type metadata for FeedIssue);
          swift_getDynamicType();
          sub_1C0187FB0((uint64_t)&v453);
          uint64_t v228 = sub_1C1520FAC();
          uint64_t v230 = v229;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          v477 = &type metadata for FeedIssue;
          v478 = &protocol witness table for FeedIssue;
          uint64_t v231 = (_OWORD *)swift_allocObject();
          *(void *)&long long v476 = v231;
          long long v232 = v460[0];
          v231[7] = v459;
          v231[8] = v232;
          *(_OWORD *)((char *)v231 + 137) = *(_OWORD *)((char *)v460 + 9);
          long long v233 = v456;
          v231[3] = v455;
          v231[4] = v233;
          long long v234 = v458;
          v231[5] = v457;
          v231[6] = v234;
          long long v235 = v454;
          v231[1] = v453;
          v231[2] = v235;
          sub_1BFC773DC(&v476, (uint64_t)&v472);
          sub_1C0187FB0((uint64_t)&v453);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v471 = v17;
          unint64_t v238 = sub_1BFEF2D8C(v228, v230);
          uint64_t v239 = v17[2];
          BOOL v240 = (v237 & 1) == 0;
          uint64_t v241 = v239 + v240;
          if (__OFADD__(v239, v240)) {
            goto LABEL_187;
          }
          char v242 = v237;
          if (v17[3] < v241)
          {
            sub_1BFED7298(v241, isUniquelyReferenced_nonNull_native);
            unint64_t v243 = sub_1BFEF2D8C(v228, v230);
            if ((v242 & 1) != (v244 & 1)) {
              goto LABEL_206;
            }
            unint64_t v238 = v243;
            uint64_t v17 = v471;
            if ((v242 & 1) == 0) {
              goto LABEL_68;
            }
LABEL_127:
            uint64_t v408 = v17[7] + 40 * v238;
            __swift_destroy_boxed_opaque_existential_1(v408);
            sub_1BFC773DC(&v472, v408);
LABEL_128:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C01880A4((uint64_t)&v453);
            continue;
          }
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v17 = v471;
            if (v237) {
              goto LABEL_127;
            }
          }
          else
          {
            sub_1C1070110();
            uint64_t v17 = v471;
            if (v242) {
              goto LABEL_127;
            }
          }
LABEL_68:
          unint64_t v452 = v15;
          uint64_t v245 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v472, (uint64_t)v474);
          __n128 v246 = MEMORY[0x1F4188790](v245);
          uint64_t v248 = (_OWORD *)((char *)v427 - ((v247 + 15) & 0xFFFFFFFFFFFFFFF0));
          (*(void (**)(_OWORD *, __n128))(v249 + 16))(v248, v246);
          v469 = &type metadata for FeedIssue;
          v470 = &protocol witness table for FeedIssue;
          uint64_t v250 = (_OWORD *)swift_allocObject();
          *(void *)&long long v468 = v250;
          long long v251 = v248[3];
          v250[3] = v248[2];
          v250[4] = v251;
          long long v252 = v248[1];
          v250[1] = *v248;
          v250[2] = v252;
          *(_OWORD *)((char *)v250 + 137) = *(_OWORD *)((char *)v248 + 121);
          long long v253 = v248[7];
          v250[7] = v248[6];
          v250[8] = v253;
          long long v254 = v248[5];
          v250[5] = v248[4];
          v250[6] = v254;
          v17[(v238 >> 6) + 8] |= 1 << v238;
          uint64_t v255 = (uint64_t *)(v17[6] + 16 * v238);
          *uint64_t v255 = v228;
          v255[1] = v230;
          sub_1BFC773DC(&v468, v17[7] + 40 * v238);
          uint64_t v256 = v17[2];
          BOOL v52 = __OFADD__(v256, 1);
          uint64_t v257 = v256 + 1;
          if (v52) {
            goto LABEL_199;
          }
          void v17[2] = v257;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v472);
          swift_bridgeObjectRetain();
          unint64_t v15 = v452;
          goto LABEL_128;
        case 2u:
          uint64_t v172 = *(void *)v9;
          uint64_t v173 = *((void *)v9 + 1);
          *((void *)&v454 + 1) = &type metadata for FeedOptionList;
          *(void *)&long long v453 = v172;
          *((void *)&v453 + 1) = v173;
          __swift_project_boxed_opaque_existential_1(&v453, (uint64_t)&type metadata for FeedOptionList);
          swift_getDynamicType();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v174 = sub_1C1520FAC();
          uint64_t v176 = v175;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v453);
          *((void *)&v454 + 1) = &type metadata for FeedOptionList;
          *(void *)&long long v455 = &protocol witness table for FeedOptionList;
          *(void *)&long long v453 = v172;
          *((void *)&v453 + 1) = v173;
          sub_1BFC773DC(&v453, (uint64_t)&v476);
          char v177 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v468 = v17;
          unint64_t v179 = sub_1BFEF2D8C(v174, v176);
          uint64_t v180 = v17[2];
          BOOL v181 = (v178 & 1) == 0;
          uint64_t v182 = v180 + v181;
          if (__OFADD__(v180, v181)) {
            goto LABEL_185;
          }
          char v183 = v178;
          if (v17[3] >= v182)
          {
            if (v177)
            {
              uint64_t v17 = (void *)v468;
              if (v178) {
                goto LABEL_116;
              }
            }
            else
            {
              sub_1C1070110();
              uint64_t v17 = (void *)v468;
              if (v183) {
                goto LABEL_116;
              }
            }
          }
          else
          {
            sub_1BFED7298(v182, v177);
            unint64_t v184 = sub_1BFEF2D8C(v174, v176);
            if ((v183 & 1) != (v185 & 1)) {
              goto LABEL_206;
            }
            unint64_t v179 = v184;
            uint64_t v17 = (void *)v468;
            if (v183)
            {
LABEL_116:
              uint64_t v405 = v17[7] + 40 * v179;
              __swift_destroy_boxed_opaque_existential_1(v405);
              sub_1BFC773DC(&v476, v405);
              goto LABEL_5;
            }
          }
          unint64_t v452 = v15;
          uint64_t v186 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v476, (uint64_t)v477);
          __n128 v187 = MEMORY[0x1F4188790](v186);
          unint64_t v189 = (long long *)((char *)v427 - ((v188 + 15) & 0xFFFFFFFFFFFFFFF0));
          (*(void (**)(long long *, __n128))(v190 + 16))(v189, v187);
          v474 = &type metadata for FeedOptionList;
          v475 = &protocol witness table for FeedOptionList;
          long long v472 = *v189;
          v17[(v179 >> 6) + 8] |= 1 << v179;
          uint64_t v191 = (uint64_t *)(v17[6] + 16 * v179);
          *uint64_t v191 = v174;
          v191[1] = v176;
          sub_1BFC773DC(&v472, v17[7] + 40 * v179);
          uint64_t v192 = v17[2];
          BOOL v52 = __OFADD__(v192, 1);
          uint64_t v193 = v192 + 1;
          if (v52) {
            goto LABEL_197;
          }
          void v17[2] = v193;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          swift_bridgeObjectRetain();
          unint64_t v15 = v452;
          goto LABEL_5;
        case 3u:
          uint64_t v194 = v439;
          sub_1BFED3084((uint64_t)v9, v439, type metadata accessor for FeedWeather);
          long long v195 = v431;
          *((void *)&v454 + 1) = v431;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v453);
          sub_1BFED3A84(v194, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedWeather);
          __swift_project_boxed_opaque_existential_1(&v453, *((uint64_t *)&v454 + 1));
          swift_getDynamicType();
          uint64_t v197 = sub_1C1520FAC();
          uint64_t v199 = v198;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v453);
          *((void *)&v454 + 1) = v195;
          *(void *)&long long v455 = &protocol witness table for FeedWeather;
          char v200 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v453);
          sub_1BFED3A84(v194, (uint64_t)v200, type metadata accessor for FeedWeather);
          sub_1BFC773DC(&v453, (uint64_t)&v476);
          char v201 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v468 = v17;
          unint64_t v203 = sub_1BFEF2D8C(v197, v199);
          uint64_t v204 = v17[2];
          BOOL v205 = (v202 & 1) == 0;
          uint64_t v206 = v204 + v205;
          if (__OFADD__(v204, v205)) {
            goto LABEL_186;
          }
          char v207 = v202;
          if (v17[3] >= v206)
          {
            if (v201)
            {
              uint64_t v17 = (void *)v468;
              if (v202) {
                goto LABEL_123;
              }
            }
            else
            {
              sub_1C1070110();
              uint64_t v17 = (void *)v468;
              if (v207) {
                goto LABEL_123;
              }
            }
          }
          else
          {
            sub_1BFED7298(v206, v201);
            unint64_t v208 = sub_1BFEF2D8C(v197, v199);
            if ((v207 & 1) != (v209 & 1)) {
              goto LABEL_206;
            }
            unint64_t v203 = v208;
            uint64_t v17 = (void *)v468;
            if (v207)
            {
LABEL_123:
              uint64_t v407 = v17[7] + 40 * v203;
              __swift_destroy_boxed_opaque_existential_1(v407);
              sub_1BFC773DC(&v476, v407);
              goto LABEL_124;
            }
          }
          unint64_t v452 = v15;
          uint64_t v210 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v476, (uint64_t)v477);
          __n128 v211 = MEMORY[0x1F4188790](v210);
          uint64_t v213 = (char *)v427 - ((v212 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v214 + 16))(v213, v211);
          v474 = v431;
          v475 = &protocol witness table for FeedWeather;
          long long v215 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v472);
          sub_1BFED3084((uint64_t)v213, (uint64_t)v215, type metadata accessor for FeedWeather);
          v17[(v203 >> 6) + 8] |= 1 << v203;
          uint64_t v216 = (uint64_t *)(v17[6] + 16 * v203);
          *uint64_t v216 = v197;
          v216[1] = v199;
          sub_1BFC773DC(&v472, v17[7] + 40 * v203);
          uint64_t v217 = v17[2];
          BOOL v52 = __OFADD__(v217, 1);
          uint64_t v218 = v217 + 1;
          if (v52) {
            goto LABEL_198;
          }
          void v17[2] = v218;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          swift_bridgeObjectRetain();
          unint64_t v15 = v452;
LABEL_124:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFED03E0(v439, type metadata accessor for FeedWeather);
          continue;
        case 4u:
          long long v79 = *((_OWORD *)v9 + 13);
          long long v464 = *((_OWORD *)v9 + 12);
          long long v465 = v79;
          long long v466 = *((_OWORD *)v9 + 14);
          uint64_t v467 = *((void *)v9 + 30);
          long long v80 = *((_OWORD *)v9 + 9);
          v460[1] = *((_OWORD *)v9 + 8);
          long long v461 = v80;
          long long v81 = *((_OWORD *)v9 + 11);
          long long v462 = *((_OWORD *)v9 + 10);
          long long v463 = v81;
          long long v82 = *((_OWORD *)v9 + 5);
          long long v457 = *((_OWORD *)v9 + 4);
          long long v458 = v82;
          long long v83 = *((_OWORD *)v9 + 7);
          long long v459 = *((_OWORD *)v9 + 6);
          v460[0] = v83;
          long long v84 = *((_OWORD *)v9 + 1);
          long long v453 = *(_OWORD *)v9;
          long long v454 = v84;
          long long v85 = *((_OWORD *)v9 + 3);
          long long v455 = *((_OWORD *)v9 + 2);
          long long v456 = v85;
          v477 = &type metadata for FeedPaywall;
          uint64_t v86 = swift_allocObject();
          *(void *)&long long v476 = v86;
          long long v87 = *((_OWORD *)v9 + 13);
          *(_OWORD *)(v86 + 208) = *((_OWORD *)v9 + 12);
          *(_OWORD *)(v86 + 224) = v87;
          *(_OWORD *)(v86 + 240) = *((_OWORD *)v9 + 14);
          *(void *)(v86 + 256) = *((void *)v9 + 30);
          long long v88 = *((_OWORD *)v9 + 9);
          *(_OWORD *)(v86 + 144) = *((_OWORD *)v9 + 8);
          *(_OWORD *)(v86 + 160) = v88;
          long long v89 = *((_OWORD *)v9 + 11);
          *(_OWORD *)(v86 + 176) = *((_OWORD *)v9 + 10);
          *(_OWORD *)(v86 + 192) = v89;
          long long v90 = *((_OWORD *)v9 + 5);
          *(_OWORD *)(v86 + 80) = *((_OWORD *)v9 + 4);
          *(_OWORD *)(v86 + 96) = v90;
          long long v91 = *((_OWORD *)v9 + 7);
          *(_OWORD *)(v86 + 112) = *((_OWORD *)v9 + 6);
          *(_OWORD *)(v86 + 128) = v91;
          long long v92 = *((_OWORD *)v9 + 1);
          *(_OWORD *)(v86 + 16) = *(_OWORD *)v9;
          *(_OWORD *)(v86 + 32) = v92;
          long long v93 = *((_OWORD *)v9 + 3);
          *(_OWORD *)(v86 + 48) = *((_OWORD *)v9 + 2);
          *(_OWORD *)(v86 + 64) = v93;
          __swift_project_boxed_opaque_existential_1(&v476, (uint64_t)&type metadata for FeedPaywall);
          swift_getDynamicType();
          sub_1C0642468((uint64_t)&v453);
          uint64_t v94 = sub_1C1520FAC();
          uint64_t v96 = v95;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          v477 = &type metadata for FeedPaywall;
          v478 = &protocol witness table for FeedPaywall;
          uint64_t v97 = swift_allocObject();
          *(void *)&long long v476 = v97;
          long long v98 = v465;
          *(_OWORD *)(v97 + 208) = v464;
          *(_OWORD *)(v97 + 224) = v98;
          *(_OWORD *)(v97 + 240) = v466;
          *(void *)(v97 + 256) = v467;
          long long v99 = v461;
          *(_OWORD *)(v97 + 144) = v460[1];
          *(_OWORD *)(v97 + 160) = v99;
          long long v100 = v463;
          *(_OWORD *)(v97 + 176) = v462;
          *(_OWORD *)(v97 + 192) = v100;
          long long v101 = v458;
          *(_OWORD *)(v97 + 80) = v457;
          *(_OWORD *)(v97 + 96) = v101;
          long long v102 = v460[0];
          *(_OWORD *)(v97 + 112) = v459;
          *(_OWORD *)(v97 + 128) = v102;
          long long v103 = v454;
          *(_OWORD *)(v97 + 16) = v453;
          *(_OWORD *)(v97 + 32) = v103;
          long long v104 = v456;
          *(_OWORD *)(v97 + 48) = v455;
          *(_OWORD *)(v97 + 64) = v104;
          sub_1BFC773DC(&v476, (uint64_t)&v472);
          char v105 = swift_isUniquelyReferenced_nonNull_native();
          v471 = v17;
          unint64_t v107 = sub_1BFEF2D8C(v94, v96);
          uint64_t v108 = v17[2];
          BOOL v109 = (v106 & 1) == 0;
          uint64_t v110 = v108 + v109;
          if (__OFADD__(v108, v109)) {
            goto LABEL_182;
          }
          char v111 = v106;
          if (v17[3] >= v110)
          {
            if (v105)
            {
              uint64_t v17 = v471;
              if (v106) {
                goto LABEL_4;
              }
            }
            else
            {
              sub_1C1070110();
              uint64_t v17 = v471;
              if (v111) {
                goto LABEL_4;
              }
            }
          }
          else
          {
            sub_1BFED7298(v110, v105);
            unint64_t v112 = sub_1BFEF2D8C(v94, v96);
            if ((v111 & 1) != (v113 & 1)) {
              goto LABEL_206;
            }
            unint64_t v107 = v112;
            uint64_t v17 = v471;
            if (v111)
            {
LABEL_4:
              uint64_t v18 = v17[7] + 40 * v107;
              __swift_destroy_boxed_opaque_existential_1(v18);
              sub_1BFC773DC(&v472, v18);
              goto LABEL_5;
            }
          }
          unint64_t v452 = v15;
          uint64_t v387 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v472, (uint64_t)v474);
          __n128 v388 = MEMORY[0x1F4188790](v387);
          v390 = (char *)v427 - ((v389 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v391 + 16))(v390, v388);
          v469 = &type metadata for FeedPaywall;
          v470 = &protocol witness table for FeedPaywall;
          uint64_t v392 = swift_allocObject();
          *(void *)&long long v468 = v392;
          long long v393 = *((_OWORD *)v390 + 13);
          *(_OWORD *)(v392 + 208) = *((_OWORD *)v390 + 12);
          *(_OWORD *)(v392 + 224) = v393;
          *(_OWORD *)(v392 + 240) = *((_OWORD *)v390 + 14);
          *(void *)(v392 + 256) = *((void *)v390 + 30);
          long long v394 = *((_OWORD *)v390 + 9);
          *(_OWORD *)(v392 + 144) = *((_OWORD *)v390 + 8);
          *(_OWORD *)(v392 + 160) = v394;
          long long v395 = *((_OWORD *)v390 + 11);
          *(_OWORD *)(v392 + 176) = *((_OWORD *)v390 + 10);
          *(_OWORD *)(v392 + 192) = v395;
          long long v396 = *((_OWORD *)v390 + 5);
          *(_OWORD *)(v392 + 80) = *((_OWORD *)v390 + 4);
          *(_OWORD *)(v392 + 96) = v396;
          long long v397 = *((_OWORD *)v390 + 7);
          *(_OWORD *)(v392 + 112) = *((_OWORD *)v390 + 6);
          *(_OWORD *)(v392 + 128) = v397;
          long long v398 = *((_OWORD *)v390 + 1);
          *(_OWORD *)(v392 + 16) = *(_OWORD *)v390;
          *(_OWORD *)(v392 + 32) = v398;
          long long v399 = *((_OWORD *)v390 + 3);
          *(_OWORD *)(v392 + 48) = *((_OWORD *)v390 + 2);
          *(_OWORD *)(v392 + 64) = v399;
          v17[(v107 >> 6) + 8] |= 1 << v107;
          v400 = (uint64_t *)(v17[6] + 16 * v107);
          uint64_t *v400 = v94;
          v400[1] = v96;
          sub_1BFC773DC(&v468, v17[7] + 40 * v107);
          uint64_t v401 = v17[2];
          BOOL v52 = __OFADD__(v401, 1);
          uint64_t v402 = v401 + 1;
          if (v52) {
            goto LABEL_204;
          }
          void v17[2] = v402;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v472);
          swift_bridgeObjectRetain();
          unint64_t v15 = v452;
          goto LABEL_5;
        case 5u:
          uint64_t v282 = v440;
          sub_1BFED3084((uint64_t)v9, v440, type metadata accessor for FeedHeadline);
          v283 = v432;
          *((void *)&v454 + 1) = v432;
          v284 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v453);
          sub_1BFED3A84(v282, (uint64_t)v284, type metadata accessor for FeedHeadline);
          __swift_project_boxed_opaque_existential_1(&v453, *((uint64_t *)&v454 + 1));
          swift_getDynamicType();
          uint64_t v285 = sub_1C1520FAC();
          uint64_t v287 = v286;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v453);
          *((void *)&v454 + 1) = v283;
          *(void *)&long long v455 = &protocol witness table for FeedHeadline;
          uint64_t v288 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v453);
          sub_1BFED3A84(v282, (uint64_t)v288, type metadata accessor for FeedHeadline);
          sub_1BFC773DC(&v453, (uint64_t)&v476);
          char v289 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v468 = v17;
          unint64_t v291 = sub_1BFEF2D8C(v285, v287);
          uint64_t v292 = v17[2];
          BOOL v293 = (v290 & 1) == 0;
          uint64_t v294 = v292 + v293;
          if (__OFADD__(v292, v293)) {
            goto LABEL_189;
          }
          char v295 = v290;
          if (v17[3] >= v294)
          {
            if (v289)
            {
              uint64_t v17 = (void *)v468;
              if (v290) {
                goto LABEL_135;
              }
            }
            else
            {
              sub_1C1070110();
              uint64_t v17 = (void *)v468;
              if (v295) {
                goto LABEL_135;
              }
            }
          }
          else
          {
            sub_1BFED7298(v294, v289);
            unint64_t v296 = sub_1BFEF2D8C(v285, v287);
            if ((v295 & 1) != (v297 & 1)) {
              goto LABEL_206;
            }
            unint64_t v291 = v296;
            uint64_t v17 = (void *)v468;
            if (v295)
            {
LABEL_135:
              uint64_t v410 = v17[7] + 40 * v291;
              __swift_destroy_boxed_opaque_existential_1(v410);
              sub_1BFC773DC(&v476, v410);
              goto LABEL_136;
            }
          }
          unint64_t v452 = v15;
          uint64_t v298 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v476, (uint64_t)v477);
          __n128 v299 = MEMORY[0x1F4188790](v298);
          uint64_t v301 = (char *)v427 - ((v300 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v302 + 16))(v301, v299);
          v474 = v432;
          v475 = &protocol witness table for FeedHeadline;
          uint64_t v303 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v472);
          sub_1BFED3084((uint64_t)v301, (uint64_t)v303, type metadata accessor for FeedHeadline);
          v17[(v291 >> 6) + 8] |= 1 << v291;
          long long v304 = (uint64_t *)(v17[6] + 16 * v291);
          uint64_t *v304 = v285;
          v304[1] = v287;
          sub_1BFC773DC(&v472, v17[7] + 40 * v291);
          uint64_t v305 = v17[2];
          BOOL v52 = __OFADD__(v305, 1);
          uint64_t v306 = v305 + 1;
          if (v52) {
            goto LABEL_201;
          }
          void v17[2] = v306;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          swift_bridgeObjectRetain();
          unint64_t v15 = v452;
LABEL_136:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFED03E0(v440, type metadata accessor for FeedHeadline);
          continue;
        case 6u:
          uint64_t v307 = v441;
          sub_1BFED3084((uint64_t)v9, v441, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
          long long v308 = v433;
          *((void *)&v454 + 1) = v433;
          uint64_t v309 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v453);
          sub_1BFED3A84(v307, (uint64_t)v309, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
          __swift_project_boxed_opaque_existential_1(&v453, *((uint64_t *)&v454 + 1));
          swift_getDynamicType();
          uint64_t v310 = sub_1C1520FAC();
          uint64_t v312 = v311;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v453);
          *((void *)&v454 + 1) = v308;
          *(void *)&long long v455 = &protocol witness table for FeedWebEmbed;
          uint64_t v313 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v453);
          sub_1BFED3A84(v307, (uint64_t)v313, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
          sub_1BFC773DC(&v453, (uint64_t)&v476);
          char v314 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v468 = v17;
          unint64_t v316 = sub_1BFEF2D8C(v310, v312);
          uint64_t v317 = v17[2];
          BOOL v318 = (v315 & 1) == 0;
          uint64_t v319 = v317 + v318;
          if (__OFADD__(v317, v318)) {
            goto LABEL_190;
          }
          char v320 = v315;
          if (v17[3] >= v319)
          {
            if (v314)
            {
              uint64_t v17 = (void *)v468;
              if (v315) {
                goto LABEL_139;
              }
            }
            else
            {
              sub_1C1070110();
              uint64_t v17 = (void *)v468;
              if (v320) {
                goto LABEL_139;
              }
            }
          }
          else
          {
            sub_1BFED7298(v319, v314);
            unint64_t v321 = sub_1BFEF2D8C(v310, v312);
            if ((v320 & 1) != (v322 & 1)) {
              goto LABEL_206;
            }
            unint64_t v316 = v321;
            uint64_t v17 = (void *)v468;
            if (v320)
            {
LABEL_139:
              uint64_t v411 = v17[7] + 40 * v316;
              __swift_destroy_boxed_opaque_existential_1(v411);
              sub_1BFC773DC(&v476, v411);
              goto LABEL_140;
            }
          }
          unint64_t v452 = v15;
          uint64_t v323 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v476, (uint64_t)v477);
          __n128 v324 = MEMORY[0x1F4188790](v323);
          v326 = (char *)v427 - ((v325 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v327 + 16))(v326, v324);
          v474 = v433;
          v475 = &protocol witness table for FeedWebEmbed;
          v328 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v472);
          sub_1BFED3084((uint64_t)v326, (uint64_t)v328, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
          v17[(v316 >> 6) + 8] |= 1 << v316;
          v329 = (uint64_t *)(v17[6] + 16 * v316);
          uint64_t *v329 = v310;
          v329[1] = v312;
          sub_1BFC773DC(&v472, v17[7] + 40 * v316);
          uint64_t v330 = v17[2];
          BOOL v52 = __OFADD__(v330, 1);
          uint64_t v331 = v330 + 1;
          if (v52) {
            goto LABEL_202;
          }
          void v17[2] = v331;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          swift_bridgeObjectRetain();
          unint64_t v15 = v452;
LABEL_140:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFED03E0(v441, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
          continue;
        case 7u:
          int64_t v445 = v16;
          uint64_t v258 = *(void **)v9;
          *((void *)&v454 + 1) = &type metadata for FeedDescriptor;
          *(void *)&long long v453 = v258;
          __swift_project_boxed_opaque_existential_1(&v453, (uint64_t)&type metadata for FeedDescriptor);
          swift_getDynamicType();
          id v259 = v258;
          uint64_t v260 = sub_1C1520FAC();
          uint64_t v262 = v261;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v453);
          *((void *)&v454 + 1) = &type metadata for FeedDescriptor;
          *(void *)&long long v455 = &protocol witness table for FeedDescriptor;
          *(void *)&long long v453 = v259;
          sub_1BFC773DC(&v453, (uint64_t)&v476);
          id v263 = v259;
          char v264 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v468 = v17;
          unint64_t v266 = sub_1BFEF2D8C(v260, v262);
          uint64_t v267 = v17[2];
          BOOL v268 = (v265 & 1) == 0;
          uint64_t v269 = v267 + v268;
          if (__OFADD__(v267, v268)) {
            goto LABEL_188;
          }
          char v270 = v265;
          if (v17[3] >= v269)
          {
            if (v264)
            {
              uint64_t v17 = (void *)v468;
              if (v265) {
                goto LABEL_131;
              }
            }
            else
            {
              sub_1C1070110();
              uint64_t v17 = (void *)v468;
              if (v270) {
                goto LABEL_131;
              }
            }
          }
          else
          {
            sub_1BFED7298(v269, v264);
            unint64_t v271 = sub_1BFEF2D8C(v260, v262);
            if ((v270 & 1) != (v272 & 1)) {
              goto LABEL_206;
            }
            unint64_t v266 = v271;
            uint64_t v17 = (void *)v468;
            if (v270)
            {
LABEL_131:
              uint64_t v409 = v17[7] + 40 * v266;
              __swift_destroy_boxed_opaque_existential_1(v409);
              sub_1BFC773DC(&v476, v409);
              int64_t v16 = v445;
              goto LABEL_132;
            }
          }
          unint64_t v452 = v15;
          uint64_t v273 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v476, (uint64_t)v477);
          __n128 v274 = MEMORY[0x1F4188790](v273);
          uint64_t v276 = (void *)((char *)v427 - ((v275 + 15) & 0xFFFFFFFFFFFFFFF0));
          (*(void (**)(uint64_t *, __n128))(v277 + 16))(v276, v274);
          uint64_t v278 = *v276;
          v475 = &protocol witness table for FeedDescriptor;
          v474 = &type metadata for FeedDescriptor;
          *(void *)&long long v472 = v278;
          v17[(v266 >> 6) + 8] |= 1 << v266;
          uint64_t v279 = (uint64_t *)(v17[6] + 16 * v266);
          uint64_t *v279 = v260;
          v279[1] = v262;
          sub_1BFC773DC(&v472, v17[7] + 40 * v266);
          uint64_t v280 = v17[2];
          BOOL v52 = __OFADD__(v280, 1);
          uint64_t v281 = v280 + 1;
          if (v52) {
            goto LABEL_200;
          }
          void v17[2] = v281;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          swift_bridgeObjectRetain();
          int64_t v16 = v445;
          unint64_t v15 = v452;
LABEL_132:

LABEL_5:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          continue;
        case 8u:
          unint64_t v452 = v15;
          int64_t v445 = v16;
          uint64_t v333 = *(void *)v9;
          uint64_t v332 = *((void *)v9 + 1);
          uint64_t v334 = *((void *)v9 + 2);
          uint64_t v335 = *((void *)v9 + 3);
          char v336 = v9[32];
          *((void *)&v454 + 1) = &type metadata for FeedSportsEvent;
          uint64_t v337 = swift_allocObject();
          *(void *)&long long v453 = v337;
          *(void *)(v337 + 16) = v333;
          *(void *)(v337 + 24) = v332;
          *(void *)(v337 + 32) = v334;
          *(void *)(v337 + 40) = v335;
          *(unsigned char *)(v337 + 48) = v336;
          __swift_project_boxed_opaque_existential_1(&v453, (uint64_t)&type metadata for FeedSportsEvent);
          swift_getDynamicType();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          uint64_t v338 = sub_1C1520FAC();
          uint64_t v340 = v339;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v453);
          *((void *)&v454 + 1) = &type metadata for FeedSportsEvent;
          *(void *)&long long v455 = &protocol witness table for FeedSportsEvent;
          uint64_t v341 = swift_allocObject();
          *(void *)&long long v453 = v341;
          *(void *)(v341 + 16) = v333;
          *(void *)(v341 + 24) = v332;
          *(void *)(v341 + 32) = v334;
          *(void *)(v341 + 40) = v335;
          *(unsigned char *)(v341 + 48) = v336;
          sub_1BFC773DC(&v453, (uint64_t)&v476);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          char v342 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v468 = v17;
          unint64_t v344 = sub_1BFEF2D8C(v338, v340);
          uint64_t v345 = v17[2];
          BOOL v346 = (v343 & 1) == 0;
          uint64_t v347 = v345 + v346;
          if (__OFADD__(v345, v346)) {
            goto LABEL_191;
          }
          char v348 = v343;
          if (v17[3] >= v347)
          {
            uint64_t v9 = v438;
            if (v342)
            {
              uint64_t v17 = (void *)v468;
              if (v343) {
                goto LABEL_143;
              }
            }
            else
            {
              sub_1C1070110();
              uint64_t v17 = (void *)v468;
              if (v348) {
                goto LABEL_143;
              }
            }
          }
          else
          {
            sub_1BFED7298(v347, v342);
            unint64_t v349 = sub_1BFEF2D8C(v338, v340);
            uint64_t v9 = v438;
            if ((v348 & 1) != (v350 & 1)) {
              goto LABEL_206;
            }
            unint64_t v344 = v349;
            uint64_t v17 = (void *)v468;
            if (v348)
            {
LABEL_143:
              uint64_t v412 = v17[7] + 40 * v344;
              __swift_destroy_boxed_opaque_existential_1(v412);
              sub_1BFC773DC(&v476, v412);
              goto LABEL_144;
            }
          }
          uint64_t v351 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v476, (uint64_t)v477);
          v436 = v427;
          __n128 v352 = MEMORY[0x1F4188790](v351);
          v354 = (char *)v427 - ((v353 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v355 + 16))(v354, v352);
          uint64_t v356 = *(void *)v354;
          *(void *)&long long v444 = *((void *)v354 + 3);
          LODWORD(v437) = v354[32];
          v474 = &type metadata for FeedSportsEvent;
          v475 = &protocol witness table for FeedSportsEvent;
          uint64_t v357 = swift_allocObject();
          *(void *)&long long v472 = v357;
          *(void *)(v357 + 16) = v356;
          *(_OWORD *)(v357 + 24) = *(_OWORD *)(v354 + 8);
          *(void *)(v357 + 40) = v444;
          *(unsigned char *)(v357 + 48) = v437;
          v17[(v344 >> 6) + 8] |= 1 << v344;
          v358 = (uint64_t *)(v17[6] + 16 * v344);
          uint64_t *v358 = v338;
          v358[1] = v340;
          sub_1BFC773DC(&v472, v17[7] + 40 * v344);
          uint64_t v359 = v17[2];
          BOOL v52 = __OFADD__(v359, 1);
          uint64_t v360 = v359 + 1;
          if (v52) {
            goto LABEL_203;
          }
          void v17[2] = v360;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          swift_bridgeObjectRetain();
LABEL_144:
          unint64_t v15 = v452;
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
LABEL_145:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int64_t v16 = v445;
          continue;
        case 9u:
          long long v114 = *((_OWORD *)v9 + 11);
          long long v462 = *((_OWORD *)v9 + 10);
          long long v463 = v114;
          long long v464 = *((_OWORD *)v9 + 12);
          long long v115 = *((_OWORD *)v9 + 7);
          long long v459 = *((_OWORD *)v9 + 6);
          v460[0] = v115;
          long long v116 = *((_OWORD *)v9 + 9);
          v460[1] = *((_OWORD *)v9 + 8);
          long long v461 = v116;
          long long v117 = *((_OWORD *)v9 + 3);
          long long v455 = *((_OWORD *)v9 + 2);
          long long v456 = v117;
          long long v118 = *((_OWORD *)v9 + 5);
          long long v457 = *((_OWORD *)v9 + 4);
          long long v458 = v118;
          long long v119 = *((_OWORD *)v9 + 1);
          long long v453 = *(_OWORD *)v9;
          long long v454 = v119;
          v477 = &type metadata for FeedPuzzle;
          *(void *)&long long v476 = swift_allocObject();
          sub_1C01F09C0((uint64_t)&v453, v476 + 16);
          __swift_project_boxed_opaque_existential_1(&v476, (uint64_t)v477);
          swift_getDynamicType();
          uint64_t v120 = sub_1C1520FAC();
          uint64_t v122 = v121;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          v477 = &type metadata for FeedPuzzle;
          v478 = &protocol witness table for FeedPuzzle;
          *(void *)&long long v476 = swift_allocObject();
          sub_1C01F09C0((uint64_t)&v453, v476 + 16);
          sub_1BFC773DC(&v476, (uint64_t)&v472);
          char v123 = swift_isUniquelyReferenced_nonNull_native();
          v471 = v17;
          unint64_t v125 = sub_1BFEF2D8C(v120, v122);
          uint64_t v126 = v17[2];
          BOOL v127 = (v124 & 1) == 0;
          uint64_t v128 = v126 + v127;
          if (__OFADD__(v126, v127)) {
            goto LABEL_183;
          }
          char v129 = v124;
          if (v17[3] >= v128)
          {
            if (v123)
            {
              uint64_t v17 = v471;
              if (v124) {
                goto LABEL_108;
              }
            }
            else
            {
              sub_1C1070110();
              uint64_t v17 = v471;
              if (v129) {
                goto LABEL_108;
              }
            }
          }
          else
          {
            sub_1BFED7298(v128, v123);
            unint64_t v130 = sub_1BFEF2D8C(v120, v122);
            if ((v129 & 1) != (v131 & 1)) {
              goto LABEL_206;
            }
            unint64_t v125 = v130;
            uint64_t v17 = v471;
            if (v129)
            {
LABEL_108:
              uint64_t v403 = v17[7] + 40 * v125;
              __swift_destroy_boxed_opaque_existential_1(v403);
              sub_1BFC773DC(&v472, v403);
              goto LABEL_109;
            }
          }
          unint64_t v452 = v15;
          uint64_t v132 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v472, (uint64_t)v474);
          __n128 v133 = MEMORY[0x1F4188790](v132);
          uint64_t v135 = (_OWORD *)((char *)v427 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0));
          (*(void (**)(_OWORD *, __n128))(v136 + 16))(v135, v133);
          v469 = &type metadata for FeedPuzzle;
          v470 = &protocol witness table for FeedPuzzle;
          uint64_t v137 = (_OWORD *)swift_allocObject();
          *(void *)&long long v468 = v137;
          long long v138 = v135[11];
          v137[11] = v135[10];
          v137[12] = v138;
          v137[13] = v135[12];
          long long v139 = v135[7];
          v137[7] = v135[6];
          v137[8] = v139;
          long long v140 = v135[9];
          v137[9] = v135[8];
          v137[10] = v140;
          long long v141 = v135[3];
          v137[3] = v135[2];
          v137[4] = v141;
          long long v142 = v135[5];
          v137[5] = v135[4];
          v137[6] = v142;
          long long v143 = v135[1];
          v137[1] = *v135;
          v137[2] = v143;
          v17[(v125 >> 6) + 8] |= 1 << v125;
          uint64_t v144 = (uint64_t *)(v17[6] + 16 * v125);
          *uint64_t v144 = v120;
          v144[1] = v122;
          sub_1BFC773DC(&v468, v17[7] + 40 * v125);
          uint64_t v145 = v17[2];
          BOOL v52 = __OFADD__(v145, 1);
          uint64_t v146 = v145 + 1;
          if (v52) {
            goto LABEL_195;
          }
          void v17[2] = v146;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v472);
          swift_bridgeObjectRetain();
          unint64_t v15 = v452;
LABEL_109:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C01F0A74((uint64_t)&v453);
          continue;
        case 0xAu:
          unint64_t v452 = v15;
          int64_t v445 = v16;
          *(void *)&long long v444 = v17;
          uint64_t v362 = *(void *)v9;
          uint64_t v361 = *((void *)v9 + 1);
          unsigned __int8 v363 = v9[16];
          LODWORD(v437) = v363;
          uint64_t v364 = *((void *)v9 + 3);
          unint64_t v365 = *((void *)v9 + 4);
          v436 = (void *)*((void *)v9 + 5);
          v366 = v436;
          v367 = v9;
          uint64_t v368 = *((void *)v9 + 6);
          v369 = (void *)*((void *)v367 + 7);
          *((void *)&v454 + 1) = &type metadata for FeedPuzzleType;
          uint64_t v370 = swift_allocObject();
          *(void *)&long long v453 = v370;
          *(void *)(v370 + 16) = v362;
          *(void *)(v370 + 24) = v361;
          *(unsigned char *)(v370 + 32) = v363;
          *(void *)(v370 + 40) = v364;
          *(void *)(v370 + 48) = v365;
          *(void *)(v370 + 56) = v366;
          *(void *)(v370 + 64) = v368;
          *(void *)(v370 + 72) = v369;
          __swift_project_boxed_opaque_existential_1(&v453, (uint64_t)&type metadata for FeedPuzzleType);
          swift_getDynamicType();
          sub_1BFF7FF04(v364, v365);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          uint64_t v371 = sub_1C1520FAC();
          uint64_t v373 = v372;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v453);
          *((void *)&v454 + 1) = &type metadata for FeedPuzzleType;
          *(void *)&long long v455 = &protocol witness table for FeedPuzzleType;
          uint64_t v374 = swift_allocObject();
          *(void *)&long long v453 = v374;
          *(void *)(v374 + 16) = v362;
          *(void *)(v374 + 24) = v361;
          *(unsigned char *)(v374 + 32) = v437;
          *(void *)(v374 + 40) = v364;
          *(void *)(v374 + 48) = v365;
          *(void *)(v374 + 56) = v436;
          *(void *)(v374 + 64) = v368;
          *(void *)(v374 + 72) = v369;
          sub_1BFC773DC(&v453, (uint64_t)&v476);
          sub_1BFF7FF04(v364, v365);
          uint64_t v437 = v368;
          swift_bridgeObjectRetain();
          v436 = v369;
          swift_unknownObjectRetain();
          char v375 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v468 = v444;
          uint64_t v376 = v371;
          uint64_t v377 = v373;
          unint64_t v379 = sub_1BFEF2D8C(v371, v373);
          uint64_t v380 = *(void *)(v444 + 16);
          BOOL v381 = (v378 & 1) == 0;
          uint64_t v382 = v380 + v381;
          if (__OFADD__(v380, v381)) {
            goto LABEL_192;
          }
          char v383 = v378;
          if (*(void *)(v444 + 24) >= v382)
          {
            uint64_t v9 = v438;
            if ((v375 & 1) == 0) {
              sub_1C1070110();
            }
          }
          else
          {
            sub_1BFED7298(v382, v375);
            unint64_t v384 = sub_1BFEF2D8C(v376, v377);
            uint64_t v9 = v438;
            if ((v383 & 1) != (v385 & 1)) {
              goto LABEL_206;
            }
            unint64_t v379 = v384;
          }
          int64_t v16 = v445;
          uint64_t v17 = (void *)v468;
          if (v383)
          {
            uint64_t v413 = *(void *)(v468 + 56) + 40 * v379;
            __swift_destroy_boxed_opaque_existential_1(v413);
            sub_1BFC773DC(&v476, v413);
          }
          else
          {
            unint64_t v428 = v365;
            uint64_t v429 = v364;
            uint64_t v414 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v476, (uint64_t)v477);
            v427[1] = v427;
            __n128 v415 = MEMORY[0x1F4188790](v414);
            v417 = (char *)v427 - ((v416 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, __n128))(v418 + 16))(v417, v415);
            uint64_t v419 = *(void *)v417;
            uint64_t v420 = *((void *)v417 + 1);
            char v421 = v417[16];
            long long v444 = *(_OWORD *)(v417 + 24);
            uint64_t v430 = *((void *)v417 + 5);
            v474 = &type metadata for FeedPuzzleType;
            v475 = &protocol witness table for FeedPuzzleType;
            uint64_t v422 = swift_allocObject();
            *(void *)&long long v472 = v422;
            *(void *)(v422 + 16) = v419;
            *(void *)(v422 + 24) = v420;
            *(unsigned char *)(v422 + 32) = v421;
            *(_OWORD *)(v422 + 40) = v444;
            *(void *)(v422 + 56) = v430;
            *(_OWORD *)(v422 + 64) = *((_OWORD *)v417 + 3);
            v17[(v379 >> 6) + 8] |= 1 << v379;
            v423 = (uint64_t *)(v17[6] + 16 * v379);
            uint64_t *v423 = v376;
            v423[1] = v377;
            sub_1BFC773DC(&v472, v17[7] + 40 * v379);
            uint64_t v424 = v17[2];
            BOOL v52 = __OFADD__(v424, 1);
            uint64_t v425 = v424 + 1;
            if (v52) {
              goto LABEL_205;
            }
            void v17[2] = v425;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
            swift_bridgeObjectRetain();
            int64_t v16 = v445;
            unint64_t v365 = v428;
            uint64_t v364 = v429;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFEEFC20(v364, v365);
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v15 = v452;
          continue;
        case 0xBu:
          uint64_t v54 = v442;
          sub_1BFED3084((uint64_t)v9, v442, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
          uint64_t v55 = v434;
          *((void *)&v454 + 1) = v434;
          uint64_t v56 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v453);
          sub_1BFED3A84(v54, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
          __swift_project_boxed_opaque_existential_1(&v453, *((uint64_t *)&v454 + 1));
          swift_getDynamicType();
          uint64_t v57 = sub_1C1520FAC();
          uint64_t v59 = v58;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v453);
          *((void *)&v454 + 1) = v55;
          *(void *)&long long v455 = &protocol witness table for FeedPuzzleStatistic;
          uint64_t v60 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v453);
          sub_1BFED3A84(v54, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
          sub_1BFC773DC(&v453, (uint64_t)&v476);
          char v61 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v468 = v17;
          unint64_t v63 = sub_1BFEF2D8C(v57, v59);
          uint64_t v64 = v17[2];
          BOOL v65 = (v62 & 1) == 0;
          uint64_t v66 = v64 + v65;
          if (__OFADD__(v64, v65)) {
            goto LABEL_181;
          }
          char v67 = v62;
          if (v17[3] >= v66)
          {
            if (v61)
            {
              uint64_t v17 = (void *)v468;
              if (v62) {
                goto LABEL_100;
              }
            }
            else
            {
              sub_1C1070110();
              uint64_t v17 = (void *)v468;
              if (v67) {
                goto LABEL_100;
              }
            }
          }
          else
          {
            sub_1BFED7298(v66, v61);
            unint64_t v68 = sub_1BFEF2D8C(v57, v59);
            if ((v67 & 1) != (v69 & 1)) {
              goto LABEL_206;
            }
            unint64_t v63 = v68;
            uint64_t v17 = (void *)v468;
            if (v67)
            {
LABEL_100:
              uint64_t v386 = v17[7] + 40 * v63;
              __swift_destroy_boxed_opaque_existential_1(v386);
              sub_1BFC773DC(&v476, v386);
              goto LABEL_101;
            }
          }
          unint64_t v452 = v15;
          uint64_t v70 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v476, (uint64_t)v477);
          __n128 v71 = MEMORY[0x1F4188790](v70);
          id v73 = (char *)v427 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v74 + 16))(v73, v71);
          v474 = v434;
          v475 = &protocol witness table for FeedPuzzleStatistic;
          uint64_t v75 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v472);
          sub_1BFED3084((uint64_t)v73, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
          v17[(v63 >> 6) + 8] |= 1 << v63;
          uint64_t v76 = (uint64_t *)(v17[6] + 16 * v63);
          *uint64_t v76 = v57;
          v76[1] = v59;
          sub_1BFC773DC(&v472, v17[7] + 40 * v63);
          uint64_t v77 = v17[2];
          BOOL v52 = __OFADD__(v77, 1);
          uint64_t v78 = v77 + 1;
          if (v52) {
            goto LABEL_194;
          }
          void v17[2] = v78;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          swift_bridgeObjectRetain();
          unint64_t v15 = v452;
LABEL_101:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFED03E0(v442, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
          continue;
        case 0xCu:
          uint64_t v147 = v443;
          sub_1BFED3084((uint64_t)v9, v443, (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd);
          uint64_t v148 = v435;
          *((void *)&v454 + 1) = v435;
          uint64_t v149 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v453);
          sub_1BFED3A84(v147, (uint64_t)v149, (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd);
          __swift_project_boxed_opaque_existential_1(&v453, *((uint64_t *)&v454 + 1));
          swift_getDynamicType();
          uint64_t v150 = sub_1C1520FAC();
          uint64_t v152 = v151;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v453);
          *((void *)&v454 + 1) = v148;
          *(void *)&long long v455 = &protocol witness table for FeedSponsorshipBannerAd;
          uint64_t v153 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v453);
          sub_1BFED3A84(v147, (uint64_t)v153, (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd);
          sub_1BFC773DC(&v453, (uint64_t)&v476);
          char v154 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v468 = v17;
          unint64_t v156 = sub_1BFEF2D8C(v150, v152);
          uint64_t v157 = v17[2];
          BOOL v158 = (v155 & 1) == 0;
          uint64_t v159 = v157 + v158;
          if (__OFADD__(v157, v158)) {
            goto LABEL_184;
          }
          char v160 = v155;
          if (v17[3] >= v159)
          {
            if (v154)
            {
              uint64_t v17 = (void *)v468;
              if (v155) {
                goto LABEL_112;
              }
            }
            else
            {
              sub_1C1070110();
              uint64_t v17 = (void *)v468;
              if (v160) {
                goto LABEL_112;
              }
            }
          }
          else
          {
            sub_1BFED7298(v159, v154);
            unint64_t v161 = sub_1BFEF2D8C(v150, v152);
            if ((v160 & 1) != (v162 & 1)) {
              goto LABEL_206;
            }
            unint64_t v156 = v161;
            uint64_t v17 = (void *)v468;
            if (v160)
            {
LABEL_112:
              uint64_t v404 = v17[7] + 40 * v156;
              __swift_destroy_boxed_opaque_existential_1(v404);
              sub_1BFC773DC(&v476, v404);
              goto LABEL_113;
            }
          }
          unint64_t v452 = v15;
          uint64_t v163 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v476, (uint64_t)v477);
          __n128 v164 = MEMORY[0x1F4188790](v163);
          uint64_t v166 = (char *)v427 - ((v165 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v167 + 16))(v166, v164);
          v474 = v435;
          v475 = &protocol witness table for FeedSponsorshipBannerAd;
          uint64_t v168 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v472);
          sub_1BFED3084((uint64_t)v166, (uint64_t)v168, (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd);
          v17[(v156 >> 6) + 8] |= 1 << v156;
          uint64_t v169 = (uint64_t *)(v17[6] + 16 * v156);
          *uint64_t v169 = v150;
          v169[1] = v152;
          sub_1BFC773DC(&v472, v17[7] + 40 * v156);
          uint64_t v170 = v17[2];
          BOOL v52 = __OFADD__(v170, 1);
          uint64_t v171 = v170 + 1;
          if (v52) {
            goto LABEL_196;
          }
          void v17[2] = v171;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          swift_bridgeObjectRetain();
          unint64_t v15 = v452;
LABEL_113:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1BFED03E0(v443, (uint64_t (*)(void))type metadata accessor for FeedSponsorshipBannerAd);
          continue;
        default:
          unint64_t v452 = v15;
          int64_t v445 = v16;
          uint64_t v25 = *(void *)v9;
          int v26 = (void *)*((void *)v9 + 1);
          char v27 = v9[16];
          *((void *)&v454 + 1) = &type metadata for FeedGroupTag;
          *(void *)&long long v453 = v25;
          *((void *)&v453 + 1) = v26;
          LOBYTE(v454) = v27;
          __swift_project_boxed_opaque_existential_1(&v453, (uint64_t)&type metadata for FeedGroupTag);
          swift_getDynamicType();
          id v28 = v26;
          swift_unknownObjectRetain();
          uint64_t v29 = sub_1C1520FAC();
          uint64_t v31 = v30;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v453);
          *((void *)&v454 + 1) = &type metadata for FeedGroupTag;
          *(void *)&long long v455 = &protocol witness table for FeedGroupTag;
          *(void *)&long long v453 = v25;
          *((void *)&v453 + 1) = v26;
          LOBYTE(v454) = v27;
          sub_1BFC773DC(&v453, (uint64_t)&v476);
          swift_unknownObjectRetain();
          id v32 = v28;
          char v33 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&long long v468 = v17;
          unint64_t v35 = sub_1BFEF2D8C(v29, v31);
          uint64_t v36 = v17[2];
          BOOL v37 = (v34 & 1) == 0;
          uint64_t v38 = v36 + v37;
          if (__OFADD__(v36, v37)) {
            goto LABEL_180;
          }
          char v39 = v34;
          if (v17[3] >= v38)
          {
            if (v33)
            {
              uint64_t v17 = (void *)v468;
              if (v34) {
                goto LABEL_119;
              }
            }
            else
            {
              sub_1C1070110();
              uint64_t v17 = (void *)v468;
              if (v39) {
                goto LABEL_119;
              }
            }
          }
          else
          {
            sub_1BFED7298(v38, v33);
            unint64_t v40 = sub_1BFEF2D8C(v29, v31);
            if ((v39 & 1) != (v41 & 1)) {
              goto LABEL_206;
            }
            unint64_t v35 = v40;
            uint64_t v17 = (void *)v468;
            if (v39)
            {
LABEL_119:
              uint64_t v406 = v17[7] + 40 * v35;
              __swift_destroy_boxed_opaque_existential_1(v406);
              sub_1BFC773DC(&v476, v406);
              unint64_t v15 = v452;
              goto LABEL_120;
            }
          }
          *(void *)&long long v444 = v32;
          uint64_t v42 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v476, (uint64_t)v477);
          __n128 v43 = MEMORY[0x1F4188790](v42);
          uint64_t v45 = (char *)v427 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v46 + 16))(v45, v43);
          uint64_t v47 = *(void *)v45;
          uint64_t v48 = *((void *)v45 + 1);
          char v49 = v45[16];
          v474 = &type metadata for FeedGroupTag;
          v475 = &protocol witness table for FeedGroupTag;
          *(void *)&long long v472 = v47;
          *((void *)&v472 + 1) = v48;
          char v473 = v49;
          v17[(v35 >> 6) + 8] |= 1 << v35;
          uint64_t v50 = (uint64_t *)(v17[6] + 16 * v35);
          *uint64_t v50 = v29;
          v50[1] = v31;
          sub_1BFC773DC(&v472, v17[7] + 40 * v35);
          uint64_t v51 = v17[2];
          BOOL v52 = __OFADD__(v51, 1);
          uint64_t v53 = v51 + 1;
          if (v52) {
            goto LABEL_193;
          }
          void v17[2] = v53;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v476);
          swift_bridgeObjectRetain();
          unint64_t v15 = v452;
          id v32 = (id)v444;
LABEL_120:

          swift_unknownObjectRelease();
          goto LABEL_145;
      }
    }
    break;
  }
  int64_t v21 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
  }
  else
  {
    if (v21 >= v447) {
      goto LABEL_177;
    }
    unint64_t v22 = *(void *)(v446 + 8 * v21);
    ++v16;
    if (v22) {
      goto LABEL_21;
    }
    int64_t v16 = v21 + 1;
    if (v21 + 1 >= v447) {
      goto LABEL_177;
    }
    unint64_t v22 = *(void *)(v446 + 8 * v16);
    if (v22) {
      goto LABEL_21;
    }
    int64_t v16 = v21 + 2;
    if (v21 + 2 >= v447) {
      goto LABEL_177;
    }
    unint64_t v22 = *(void *)(v446 + 8 * v16);
    if (v22) {
      goto LABEL_21;
    }
    int64_t v23 = v21 + 3;
    if (v23 >= v447)
    {
LABEL_177:
      swift_release();
      return (uint64_t)v17;
    }
    unint64_t v22 = *(void *)(v446 + 8 * v23);
    if (v22)
    {
      int64_t v16 = v23;
LABEL_21:
      unint64_t v15 = (v22 - 1) & v22;
      unint64_t v20 = __clz(__rbit64(v22)) + (v16 << 6);
      goto LABEL_22;
    }
    while (1)
    {
      int64_t v16 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        break;
      }
      if (v16 >= v447) {
        goto LABEL_177;
      }
      unint64_t v22 = *(void *)(v446 + 8 * v16);
      ++v23;
      if (v22) {
        goto LABEL_21;
      }
    }
  }
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  __break(1u);
LABEL_189:
  __break(1u);
LABEL_190:
  __break(1u);
LABEL_191:
  __break(1u);
LABEL_192:
  __break(1u);
LABEL_193:
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  __break(1u);
LABEL_202:
  __break(1u);
LABEL_203:
  __break(1u);
LABEL_204:
  __break(1u);
LABEL_205:
  __break(1u);
LABEL_206:
  uint64_t result = sub_1C1520CFC();
  __break(1u);
  return result;
}

uint64_t sub_1BFED3084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFED30EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_1C02CDDB8(0, (unint64_t *)&qword_1EB87D4F8, (void (*)(uint64_t))type metadata accessor for FeedGroupItem);
  uint64_t v32 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = type metadata accessor for FeedGroupItem();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v30 = (char *)&v27 - v14;
  uint64_t v15 = *v3;
  sub_1C1520DBC();
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  sub_1BFED5EC4();
  sub_1C151E77C();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1C1520E0C();
  uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
  unint64_t v18 = v16 & ~v17;
  if (((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  id v28 = v3;
  uint64_t v29 = a1;
  uint64_t v31 = ~v17;
  uint64_t v19 = *(void *)(v10 + 72);
  while (2)
  {
    sub_1C02CDE74(*(void *)(v15 + 48) + v19 * v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    uint64_t v20 = (uint64_t)&v8[*(int *)(v32 + 48)];
    sub_1C02CDE74((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    sub_1C02CDE74(v33, v20, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_5;
        }
        goto LABEL_34;
      case 2u:
        sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        if (swift_getEnumCaseMultiPayload() == 2) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 3u:
        if (swift_getEnumCaseMultiPayload() != 3) {
          goto LABEL_4;
        }
        goto LABEL_30;
      case 4u:
        sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        if (swift_getEnumCaseMultiPayload() == 4) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 5u:
        if (swift_getEnumCaseMultiPayload() == 5) {
          goto LABEL_30;
        }
        goto LABEL_4;
      case 6u:
        if (swift_getEnumCaseMultiPayload() == 6) {
          goto LABEL_30;
        }
        goto LABEL_4;
      case 7u:
        sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        if (swift_getEnumCaseMultiPayload() == 7) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 8u:
        sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        if (swift_getEnumCaseMultiPayload() == 8) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 9u:
        if (swift_getEnumCaseMultiPayload() == 9) {
          goto LABEL_30;
        }
        goto LABEL_4;
      case 0xAu:
        sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        if (swift_getEnumCaseMultiPayload() == 10) {
          goto LABEL_34;
        }
        goto LABEL_5;
      case 0xBu:
        if (swift_getEnumCaseMultiPayload() == 11) {
          goto LABEL_30;
        }
        goto LABEL_4;
      case 0xCu:
        if (swift_getEnumCaseMultiPayload() == 12)
        {
LABEL_30:
          sub_1BFEFE988(v20, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
LABEL_35:
          int v26 = v28;
          uint64_t v25 = v29;
          sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
          sub_1BFEFE988((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
          swift_bridgeObjectRelease();
          sub_1BFEFE988(v33, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
          sub_1C02CDE74(*(void *)(*v26 + 48) + v19 * v18, v25, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
          return 0;
        }
LABEL_4:
        sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
LABEL_5:
        sub_1BFEFE988(v20, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        sub_1BFEFE988((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        unint64_t v18 = (v18 + 1) & v31;
        if ((*(void *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18)) {
          continue;
        }
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
LABEL_33:
        uint64_t v21 = (uint64_t)v30;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v23 = v33;
        sub_1C02CDE74(v33, v21, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        uint64_t v34 = *v3;
        *uint64_t v3 = 0x8000000000000000;
        sub_1BFED7330(v21, v18, isUniquelyReferenced_nonNull_native);
        *uint64_t v3 = v34;
        swift_bridgeObjectRelease();
        sub_1C02CDEDC(v23, a1, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        return 1;
      default:
        sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        if (swift_getEnumCaseMultiPayload()) {
          goto LABEL_5;
        }
LABEL_34:
        uint64_t v8 = (char *)v20;
        goto LABEL_35;
    }
  }
}

uint64_t sub_1BFED36DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFED3744(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFED37AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFED3814(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFED387C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFED38E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFED394C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFED39B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFED3A1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFED3A84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFED3AEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FeedGroupItem()
{
  uint64_t result = qword_1EB87D450;
  if (!qword_1EB87D450) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeWithCopy for FeedGroupItem(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = *(void **)a2;
      uint64_t v7 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v7;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      uint64_t v8 = *(void **)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v8;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      uint64_t v9 = *(void *)(a2 + 80);
      id v10 = v6;
      swift_bridgeObjectRetain();
      id v11 = v8;
      if (v9 == 1)
      {
        long long v12 = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 88) = v12;
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      }
      else
      {
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = v9;
        uint64_t v77 = *(void *)(a2 + 96);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = v77;
        long long v79 = *(void **)(a2 + 104);
        uint64_t v78 = *(void *)(a2 + 112);
        *(void *)(a1 + 104) = v79;
        *(void *)(a1 + 112) = v78;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v80 = v79;
      }
      long long v81 = (void *)(a2 + 120);
      unint64_t v82 = *(void *)(a2 + 128);
      if (v82 >= 0x11)
      {
        *(void *)(a1 + 120) = *v81;
        *(void *)(a1 + 128) = v82;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 120) = *(_OWORD *)v81;
      }
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      goto LABEL_136;
    case 2u:
      uint64_t v13 = *(void **)a2;
      uint64_t v14 = *(void *)(a2 + 8);
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v15 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v15;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v16 = (int *)type metadata accessor for FeedWeather(0);
      uint64_t v17 = v16[7];
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      uint64_t v20 = sub_1C151E2BC();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      *(unsigned char *)(a1 + v16[8]) = *(unsigned char *)(a2 + v16[8]);
      uint64_t v22 = v16[9];
      uint64_t v23 = a1 + v22;
      uint64_t v24 = a2 + v22;
      sub_1BFEEF884(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
      uint64_t v26 = v25;
      uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
      v27(v23, v24, v25);
      id v28 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v27(v23 + v28[5], v24 + v28[5], v26);
      v27(v23 + v28[6], v24 + v28[6], v26);
      v27(v23 + v28[7], v24 + v28[7], v26);
      uint64_t v29 = v16[10];
      uint64_t v30 = (void *)(a1 + v29);
      uint64_t v31 = (void *)(a2 + v29);
      uint64_t v32 = v31[1];
      *uint64_t v30 = *v31;
      v30[1] = v32;
      swift_bridgeObjectRetain();
      goto LABEL_136;
    case 4u:
      uint64_t v33 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v33;
      uint64_t v34 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v34;
      uint64_t v35 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v35;
      *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      uint64_t v36 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v36;
      uint64_t v37 = *(void *)(a2 + 96);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = v37;
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      uint64_t v38 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v38;
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      uint64_t v39 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v39;
      uint64_t v40 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v40;
      *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      uint64_t v41 = *(void *)(a2 + 200);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v41;
      *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
      uint64_t v42 = *(void *)(a2 + 216);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = v42;
      uint64_t v287 = (void *)(a2 + 232);
      unint64_t v43 = *(void *)(a2 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43 >= 0x11)
      {
        *(void *)(a1 + 232) = *v287;
        *(void *)(a1 + 240) = v43;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 232) = *(_OWORD *)v287;
      }
      goto LABEL_136;
    case 5u:
      uint64_t v44 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v44;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v45 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v45;
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      uint64_t v288 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v46 = v288[10];
      uint64_t v47 = (unsigned char *)(a1 + v46);
      uint64_t v48 = a2 + v46;
      *uint64_t v47 = *(unsigned char *)(a2 + v46);
      v47[1] = *(unsigned char *)(a2 + v46 + 1);
      uint64_t v49 = type metadata accessor for FeedHeadline.State(0);
      uint64_t v50 = *(int *)(v49 + 24);
      __dst = &v47[v50];
      uint64_t v286 = (int *)v49;
      uint64_t v51 = (char *)(v48 + v50);
      BOOL v52 = (int *)type metadata accessor for SharedItem();
      uint64_t v282 = *((void *)v52 - 1);
      uint64_t v53 = *(unsigned int (**)(char *, uint64_t, int *))(v282 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v53(v51, 1, v52))
      {
        uint64_t v54 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v51, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        uint64_t v113 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(__dst, v51, v113);
        __dst[v52[5]] = v51[v52[5]];
        uint64_t v114 = v52[6];
        long long v115 = *(void **)&v51[v114];
        *(void *)&__dst[v114] = v115;
        uint64_t v116 = v52[7];
        char v290 = &__dst[v116];
        uint64_t v281 = &v51[v116];
        uint64_t v117 = sub_1C1515FDC();
        long long v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16);
        id v119 = v115;
        v118(v290, v281, v117);
        (*(void (**)(char *, void, uint64_t, int *))(v282 + 56))(__dst, 0, 1, v52);
      }
      v47[v286[7]] = *(unsigned char *)(v48 + v286[7]);
      v47[v286[8]] = *(unsigned char *)(v48 + v286[8]);
      v47[v286[9]] = *(unsigned char *)(v48 + v286[9]);
      v47[v286[10]] = *(unsigned char *)(v48 + v286[10]);
      uint64_t v120 = v288[11];
      uint64_t v121 = (void *)(a1 + v120);
      uint64_t v122 = (const void *)(a2 + v120);
      uint64_t v123 = sub_1C151D2DC();
      uint64_t v124 = *(void *)(v123 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v124 + 48))(v122, 1, v123))
      {
        sub_1BFEEF884(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
        memcpy(v121, v122, *(void *)(*(void *)(v125 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v124 + 16))(v121, v122, v123);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
      }
      uint64_t v139 = v288[12];
      long long v140 = (void *)(a1 + v139);
      long long v141 = (void *)(a2 + v139);
      unint64_t v142 = v141[1];
      if (v142 >= 0x11)
      {
        *long long v140 = *v141;
        v140[1] = v142;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)long long v140 = *(_OWORD *)v141;
      }
      uint64_t v143 = v288[13];
      unint64_t v144 = *(void *)(a2 + v143);
      if (v144 >= 2)
      {
        if (v144 == 2)
        {
          *(void *)(a1 + v143) = 2;
        }
        else
        {
          *(void *)(a1 + v143) = v144;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)(a1 + v143) = v144;
      }
      uint64_t v180 = v288[14];
      BOOL v181 = *(void **)(a2 + v180);
      *(void *)(a1 + v180) = v181;
      id v182 = v181;
      goto LABEL_136;
    case 6u:
      uint64_t v55 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v55;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v56 = (void *)(a2 + 24);
      unint64_t v57 = *(void *)(a2 + 32);
      if (v57 >= 0x11)
      {
        *(void *)(a1 + 24) = *v56;
        *(void *)(a1 + 32) = v57;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v56;
      }
      uint64_t v83 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v83;
      long long v84 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v85 = v84[8];
      uint64_t v86 = a1 + v85;
      uint64_t v87 = a2 + v85;
      uint64_t v88 = sub_1C1515FDC();
      uint64_t v89 = *(void *)(v88 - 8);
      long long v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16);
      swift_bridgeObjectRetain();
      v90(v86, v87, v88);
      uint64_t v91 = v84[9];
      long long v92 = (void *)(a1 + v91);
      long long v93 = (const void *)(a2 + v91);
      uint64_t v289 = v88;
      __dsta = (void (*)(char *, char *, uint64_t))v90;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(a2 + v91, 1, v88))
      {
        sub_1BFEEF884(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        v90((uint64_t)v92, (uint64_t)v93, v88);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v92, 0, 1, v88);
      }
      *(void *)(a1 + v84[10]) = *(void *)(a2 + v84[10]);
      *(void *)(a1 + v84[11]) = *(void *)(a2 + v84[11]);
      uint64_t v126 = v84[12];
      BOOL v127 = (void *)(a1 + v126);
      unint64_t v291 = v84;
      uint64_t v128 = (void *)(a2 + v126);
      uint64_t v129 = type metadata accessor for FeedHeadline(0);
      uint64_t v130 = *(void *)(v129 - 8);
      char v131 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v130 + 48);
      swift_retain();
      swift_retain();
      if (v131(v128, 1, v129))
      {
        sub_1BFEEF884(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
        memcpy(v127, v128, *(void *)(*(void *)(v132 - 8) + 64));
        __n128 v133 = v291;
      }
      else
      {
        uint64_t v279 = v130;
        uint64_t v280 = (int *)v129;
        uint64_t v145 = v128[1];
        void *v127 = *v128;
        v127[1] = v145;
        v127[2] = v128[2];
        *((unsigned char *)v127 + 24) = *((unsigned char *)v128 + 24);
        uint64_t v146 = v128[5];
        v127[4] = v128[4];
        v127[5] = v146;
        v127[6] = v128[6];
        *((unsigned char *)v127 + 56) = *((unsigned char *)v128 + 56);
        uint64_t v147 = *(int *)(v129 + 40);
        uint64_t v148 = (char *)v127 + v147;
        v283 = v128;
        uint64_t v149 = (char *)v128 + v147;
        unsigned char *v148 = *((unsigned char *)v128 + v147);
        v148[1] = *((unsigned char *)v128 + v147 + 1);
        uint64_t v150 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v151 = *(int *)(v150 + 24);
        uint64_t v277 = &v148[v151];
        uint64_t v278 = (int *)v150;
        uint64_t v152 = &v149[v151];
        uint64_t v153 = (int *)type metadata accessor for SharedItem();
        uint64_t v276 = *((void *)v153 - 1);
        char v154 = *(unsigned int (**)(char *, uint64_t, int *))(v276 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v154(v152, 1, v153))
        {
          uint64_t v155 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v277, v152, *(void *)(*(void *)(v155 - 8) + 64));
        }
        else
        {
          uint64_t v183 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(v277, v152, v183);
          v277[v153[5]] = v152[v153[5]];
          uint64_t v184 = v153[6];
          char v185 = *(void **)&v152[v184];
          *(void *)&v277[v184] = v185;
          uint64_t v186 = v153[7];
          __n128 v187 = &v277[v186];
          uint64_t v188 = &v152[v186];
          id v189 = v185;
          __dsta(v187, v188, v289);
          (*(void (**)(char *, void, uint64_t, int *))(v276 + 56))(v277, 0, 1, v153);
        }
        v148[v278[7]] = v149[v278[7]];
        v148[v278[8]] = v149[v278[8]];
        v148[v278[9]] = v149[v278[9]];
        v148[v278[10]] = v149[v278[10]];
        uint64_t v190 = v280[11];
        uint64_t v191 = (char *)v127 + v190;
        uint64_t v192 = (char *)v128 + v190;
        uint64_t v193 = sub_1C151D2DC();
        uint64_t v194 = *(void *)(v193 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v194 + 48))(v192, 1, v193))
        {
          sub_1BFEEF884(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v191, v192, *(void *)(*(void *)(v195 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v191, v192, v193);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v194 + 56))(v191, 0, 1, v193);
        }
        __n128 v133 = v291;
        uint64_t v196 = v280[12];
        uint64_t v197 = (void *)((char *)v127 + v196);
        uint64_t v198 = (void *)((char *)v283 + v196);
        unint64_t v199 = v198[1];
        if (v199 >= 0x11)
        {
          *uint64_t v197 = *v198;
          v197[1] = v199;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v197 = *(_OWORD *)v198;
        }
        uint64_t v200 = v280[13];
        unint64_t v201 = *(void *)((char *)v283 + v200);
        if (v201 >= 2)
        {
          if (v201 == 2)
          {
            *(void *)((char *)v127 + v200) = 2;
          }
          else
          {
            *(void *)((char *)v127 + v200) = v201;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v127 + v200) = v201;
        }
        uint64_t v219 = v280[14];
        long long v220 = *(void **)((char *)v283 + v219);
        *(void *)((char *)v127 + v219) = v220;
        long long v221 = *(void (**)(void *, void, uint64_t, int *))(v279 + 56);
        id v222 = v220;
        v221(v127, 0, 1, v280);
      }
      uint64_t v223 = v133[13];
      long long v224 = (void *)(a1 + v223);
      long long v225 = (uint64_t *)(a2 + v223);
      uint64_t v226 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v227 = *(void *)(v226 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v227 + 48))(v225, 1, v226))
      {
        sub_1BFEEF884(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v224, v225, *(void *)(*(void *)(v228 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v230 = *v225;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v231 = v225[1];
          *long long v224 = v230;
          v224[1] = v231;
          uint64_t v232 = type metadata accessor for GenericDataVisualization();
          uint64_t v233 = *(int *)(v232 + 20);
          long long v234 = (char *)v224 + v233;
          long long v235 = (char *)v225 + v233;
          swift_bridgeObjectRetain();
          uint64_t v236 = v235;
          __n128 v133 = v291;
          __dsta(v234, v236, v289);
          *(void *)((char *)v224 + *(int *)(v232 + 24)) = *(uint64_t *)((char *)v225 + *(int *)(v232 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          *long long v224 = v230;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v227 + 56))(v224, 0, 1, v226);
      }
      *(unsigned char *)(a1 + v133[14]) = *(unsigned char *)(a2 + v133[14]);
      goto LABEL_136;
    case 7u:
      uint64_t v58 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v59 = v58;
      goto LABEL_136;
    case 8u:
      uint64_t v60 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v60;
      uint64_t v61 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v61;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_136;
    case 9u:
      uint64_t v62 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v62;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      unint64_t v63 = (void *)(a2 + 24);
      unint64_t v64 = *(void *)(a2 + 32);
      if (v64 >= 0x11)
      {
        *(void *)(a1 + 24) = *v63;
        *(void *)(a1 + 32) = v64;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v63;
      }
      uint64_t v95 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v95;
      uint64_t v96 = *(void **)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v96;
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      uint64_t v97 = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v98 = v96;
      swift_bridgeObjectRetain();
      if (v97)
      {
        uint64_t v99 = *(void *)(a2 + 120);
        *(void *)(a1 + 112) = v97;
        *(void *)(a1 + 120) = v99;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v97 - 8))(a1 + 88, a2 + 88, v97);
      }
      else
      {
        long long v134 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v134;
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
      }
      uint64_t v135 = (_OWORD *)(a1 + 128);
      uint64_t v136 = (_OWORD *)(a2 + 128);
      uint64_t v137 = *(void *)(a2 + 152);
      if (v137)
      {
        uint64_t v138 = *(void *)(a2 + 160);
        *(void *)(a1 + 152) = v137;
        *(void *)(a1 + 160) = v138;
        (**(void (***)(_OWORD *, _OWORD *))(v137 - 8))(v135, v136);
      }
      else
      {
        long long v156 = *(_OWORD *)(a2 + 144);
        *uint64_t v135 = *v136;
        *(_OWORD *)(a1 + 144) = v156;
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
      }
      uint64_t v157 = (_OWORD *)(a1 + 168);
      BOOL v158 = (_OWORD *)(a2 + 168);
      uint64_t v159 = *(void *)(a2 + 192);
      if (v159)
      {
        uint64_t v160 = *(void *)(a2 + 200);
        *(void *)(a1 + 192) = v159;
        *(void *)(a1 + 200) = v160;
        (**(void (***)(_OWORD *, _OWORD *))(v159 - 8))(v157, v158);
      }
      else
      {
        long long v161 = *(_OWORD *)(a2 + 184);
        *uint64_t v157 = *v158;
        *(_OWORD *)(a1 + 184) = v161;
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
      }
      goto LABEL_136;
    case 0xAu:
      uint64_t v65 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v65;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t v66 = (void *)(a2 + 24);
      unint64_t v67 = *(void *)(a2 + 32);
      if (v67 >= 0x11)
      {
        *(void *)(a1 + 24) = *v66;
        *(void *)(a1 + 32) = v67;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v66;
      }
      uint64_t v100 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v100;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_136;
    case 0xBu:
      uint64_t v68 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v68;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      char v69 = (void *)(a2 + 24);
      unint64_t v70 = *(void *)(a2 + 32);
      if (v70 >= 0x11)
      {
        *(void *)(a1 + 24) = *v69;
        *(void *)(a1 + 32) = v70;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)v69;
      }
      break;
    case 0xCu:
      uint64_t v71 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v71;
      uint64_t v72 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      uint64_t v73 = a1 + v72;
      uint64_t v74 = a2 + v72;
      uint64_t v75 = sub_1C151D6DC();
      uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16);
      swift_bridgeObjectRetain();
      v76(v73, v74, v75);
      goto LABEL_136;
    default:
      uint64_t v4 = *(void **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      swift_unknownObjectRetain();
      id v5 = v4;
      goto LABEL_136;
  }
  uint64_t v101 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v101;
  uint64_t v102 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  uint64_t v103 = a1 + v102;
  uint64_t v104 = a2 + v102;
  *(void *)(a1 + v102) = *(void *)(a2 + v102);
  uint64_t v105 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  char v106 = (void *)(v103 + v105);
  unint64_t v107 = (void *)(v104 + v105);
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v166 = type metadata accessor for PuzzleStatisticValue(0);
      int v167 = swift_getEnumCaseMultiPayload();
      if (v167 == 5)
      {
        uint64_t v168 = type metadata accessor for PuzzleStreak();
        uint64_t v169 = *(void *)(v168 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v169 + 48))(v107, 1, v168))
        {
LABEL_71:
          sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v106, v107, *(void *)(*(void *)(v170 - 8) + 64));
          goto LABEL_115;
        }
      }
      else
      {
        if (v167 != 4)
        {
          memcpy(v106, v107, *(void *)(*(void *)(v166 - 8) + 64));
          goto LABEL_116;
        }
        uint64_t v168 = type metadata accessor for PuzzleStreak();
        uint64_t v169 = *(void *)(v168 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v169 + 48))(v107, 1, v168)) {
          goto LABEL_71;
        }
      }
      uint64_t v258 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v258 - 8) + 16))(v106, v107, v258);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v169 + 56))(v106, 0, 1, v168);
LABEL_115:
      swift_storeEnumTagMultiPayload();
LABEL_116:
      uint64_t v259 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v260 = *(int *)(v259 + 20);
      uint64_t v261 = (char *)v106 + v260;
      uint64_t v262 = (char *)v107 + v260;
      int v263 = swift_getEnumCaseMultiPayload();
      if (v263 == 5)
      {
        uint64_t v264 = type metadata accessor for PuzzleStreak();
        uint64_t v265 = *(void *)(v264 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v265 + 48))(v262, 1, v264))
        {
LABEL_121:
          sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v261, v262, *(void *)(*(void *)(v266 - 8) + 64));
          goto LABEL_124;
        }
      }
      else
      {
        if (v263 != 4)
        {
          memcpy(v261, v262, *(void *)(*(void *)(v166 - 8) + 64));
          goto LABEL_125;
        }
        uint64_t v264 = type metadata accessor for PuzzleStreak();
        uint64_t v265 = *(void *)(v264 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v265 + 48))(v262, 1, v264)) {
          goto LABEL_121;
        }
      }
      uint64_t v267 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 16))(v261, v262, v267);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v265 + 56))(v261, 0, 1, v264);
LABEL_124:
      swift_storeEnumTagMultiPayload();
LABEL_125:
      uint64_t v268 = *(int *)(v259 + 24);
      uint64_t v269 = (char *)v106 + v268;
      unint64_t v107 = (void *)((char *)v107 + v268);
      int v270 = swift_getEnumCaseMultiPayload();
      if (v270 == 5)
      {
        uint64_t v271 = type metadata accessor for PuzzleStreak();
        uint64_t v272 = *(void *)(v271 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v272 + 48))(v107, 1, v271))
        {
LABEL_130:
          sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v269, v107, *(void *)(*(void *)(v273 - 8) + 64));
          goto LABEL_134;
        }
      }
      else
      {
        if (v270 != 4)
        {
          size_t v165 = *(void *)(*(void *)(v166 - 8) + 64);
          uint64_t v250 = v269;
          goto LABEL_132;
        }
        uint64_t v271 = type metadata accessor for PuzzleStreak();
        uint64_t v272 = *(void *)(v271 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v272 + 48))(v107, 1, v271)) {
          goto LABEL_130;
        }
      }
      uint64_t v274 = sub_1C151555C();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v274 - 8) + 16))(v269, v107, v274);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v272 + 56))(v269, 0, 1, v271);
      goto LABEL_134;
    case 2u:
      char v162 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v163 = *((void *)v162 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v163 + 48))(v107, 1, v162))
      {
        sub_1BFEEF884(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        size_t v165 = *(void *)(*(void *)(v164 - 8) + 64);
        goto LABEL_105;
      }
      uint64_t v202 = sub_1C151631C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v202 - 8) + 16))(v106, v107, v202);
      unint64_t v203 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v204 = v203[5];
      BOOL v205 = (void *)((char *)v106 + v204);
      uint64_t v206 = (void *)((char *)v107 + v204);
      uint64_t v207 = v206[1];
      *BOOL v205 = *v206;
      v205[1] = v207;
      uint64_t v208 = v203[6];
      char v209 = (char *)v106 + v208;
      uint64_t v210 = (void *)((char *)v107 + v208);
      uint64_t v211 = v210[1];
      *(void *)char v209 = *v210;
      *((void *)v209 + 1) = v211;
      uint64_t v212 = v210 + 2;
      unint64_t v213 = v210[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v213 >> 60 == 15)
      {
        *((_OWORD *)v209 + 1) = *(_OWORD *)v212;
      }
      else
      {
        uint64_t v251 = *v212;
        sub_1BFE95820(*v212, v213);
        *((void *)v209 + 2) = v251;
        *((void *)v209 + 3) = v213;
      }
      *(void *)((char *)v106 + v203[7]) = *(void *)((char *)v107 + v203[7]);
      *(void *)((char *)v106 + v203[8]) = *(void *)((char *)v107 + v203[8]);
      *(void *)((char *)v106 + v162[5]) = *(void *)((char *)v107 + v162[5]);
      *(void *)((char *)v106 + v162[6]) = *(void *)((char *)v107 + v162[6]);
      uint64_t v252 = v162[7];
      long long v253 = (void *)((char *)v106 + v252);
      long long v254 = (void *)((char *)v107 + v252);
      uint64_t v255 = v254[1];
      *long long v253 = *v254;
      v253[1] = v255;
      uint64_t v256 = *(void (**)(void *, void, uint64_t, int *))(v163 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v256(v106, 0, 1, v162);
      goto LABEL_135;
    case 3u:
      uint64_t v171 = v107[1];
      *char v106 = *v107;
      v106[1] = v171;
      *((unsigned char *)v106 + 16) = *((unsigned char *)v107 + 16);
      uint64_t v172 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v173 = v172[6];
      uint64_t v174 = (char *)v106 + v173;
      uint64_t v175 = (char *)v107 + v173;
      uint64_t v176 = type metadata accessor for PuzzleStreak();
      uint64_t v177 = *(void *)(v176 - 8);
      char v178 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48);
      if (v178(v175, 1, v176))
      {
        sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v174, v175, *(void *)(*(void *)(v179 - 8) + 64));
      }
      else
      {
        uint64_t v214 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16))(v174, v175, v214);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v174, 0, 1, v176);
      }
      uint64_t v215 = v172[7];
      uint64_t v216 = (char *)v106 + v215;
      uint64_t v217 = (char *)v107 + v215;
      if (v178((char *)v107 + v215, 1, v176))
      {
        sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v216, v217, *(void *)(*(void *)(v218 - 8) + 64));
      }
      else
      {
        uint64_t v237 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 16))(v216, v217, v237);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v216, 0, 1, v176);
      }
      uint64_t v238 = v172[8];
      uint64_t v239 = (_OWORD *)((char *)v106 + v238);
      BOOL v240 = (_OWORD *)((char *)v107 + v238);
      long long v241 = v240[1];
      *uint64_t v239 = *v240;
      v239[1] = v241;
      *(_OWORD *)((char *)v239 + 25) = *(_OWORD *)((char *)v240 + 25);
      uint64_t v242 = v172[9];
      unint64_t v243 = (_OWORD *)((char *)v106 + v242);
      char v244 = (_OWORD *)((char *)v107 + v242);
      *(_OWORD *)((char *)v243 + 25) = *(_OWORD *)((char *)v244 + 25);
      long long v245 = v244[1];
      *unint64_t v243 = *v244;
      v243[1] = v245;
      uint64_t v246 = v172[10];
      uint64_t v247 = (_OWORD *)((char *)v106 + v246);
      uint64_t v248 = (_OWORD *)((char *)v107 + v246);
      long long v249 = v248[1];
      *uint64_t v247 = *v248;
      v247[1] = v249;
      *(_OWORD *)((char *)v247 + 25) = *(_OWORD *)((char *)v248 + 25);
      goto LABEL_135;
    default:
      uint64_t v108 = type metadata accessor for PuzzleStatisticValue(0);
      int v109 = swift_getEnumCaseMultiPayload();
      if (v109 == 5)
      {
        uint64_t v110 = type metadata accessor for PuzzleStreak();
        uint64_t v111 = *(void *)(v110 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v111 + 48))(v107, 1, v110)) {
          goto LABEL_39;
        }
      }
      else
      {
        if (v109 != 4)
        {
          size_t v165 = *(void *)(*(void *)(v108 - 8) + 64);
LABEL_105:
          uint64_t v250 = (char *)v106;
LABEL_132:
          memcpy(v250, v107, v165);
          goto LABEL_135;
        }
        uint64_t v110 = type metadata accessor for PuzzleStreak();
        uint64_t v111 = *(void *)(v110 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v111 + 48))(v107, 1, v110))
        {
LABEL_39:
          sub_1BFEEF884(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v106, v107, *(void *)(*(void *)(v112 - 8) + 64));
          goto LABEL_134;
        }
      }
      uint64_t v257 = sub_1C151555C();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v257 - 8) + 16))(v106, v107, v257);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v106, 0, 1, v110);
LABEL_134:
      swift_storeEnumTagMultiPayload();
LABEL_135:
      swift_storeEnumTagMultiPayload();
LABEL_136:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t sub_1BFED5EC4()
{
  uint64_t v1 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFED3A84(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  uint64_t v4 = 6775156;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = 0x6575737369;
      break;
    case 2u:
      uint64_t v4 = 0x736E6F6974706FLL;
      break;
    case 3u:
      uint64_t v4 = 0x72656874616577;
      break;
    case 4u:
      uint64_t v4 = 0x6C6C6177796170;
      break;
    case 5u:
      uint64_t v4 = 0x656E696C64616568;
      break;
    case 6u:
      uint64_t v4 = 0x6465626D45626577;
      break;
    case 7u:
      uint64_t v4 = 1684366694;
      break;
    case 8u:
      uint64_t v4 = 0x76457374726F7073;
      break;
    case 9u:
      uint64_t v4 = 0x656C7A7A7570;
      break;
    case 0xAu:
      uint64_t v4 = 0x7954656C7A7A7570;
      break;
    case 0xBu:
      uint64_t v4 = 0x7453656C7A7A7570;
      break;
    case 0xCu:
      uint64_t v4 = 0x65726F736E6F7073;
      break;
    default:
      break;
  }
  sub_1BFED03E0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  return v4;
}

uint64_t sub_1BFED60E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFED6148(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void destroy for FeedGroupItem(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_unknownObjectRelease();
      id v2 = *(id *)(a1 + 8);
      goto LABEL_40;
    case 1u:

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 128) < 0x11uLL) {
        return;
      }
      goto LABEL_36;
    case 2u:
LABEL_80:
      swift_bridgeObjectRelease();
      goto LABEL_36;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v3 = type metadata accessor for FeedWeather(0);
      uint64_t v4 = a1 + *(int *)(v3 + 28);
      uint64_t v5 = sub_1C151E2BC();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      uint64_t v6 = a1 + *(int *)(v3 + 36);
      sub_1BFEEF884(0, (unint64_t *)&qword_1EB87C670, (uint64_t (*)(uint64_t))sub_1C01F2F9C, MEMORY[0x1E4F26DB0]);
      uint64_t v8 = v7;
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v9(v6, v7);
      id v10 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v9(v6 + v10[5], v8);
      v9(v6 + v10[6], v8);
      v9(v6 + v10[7], v8);
      goto LABEL_36;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 240) < 0x11uLL) {
        return;
      }
      goto LABEL_36;
    case 5u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      id v11 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v12 = a1 + v11[10];
      uint64_t v13 = v12 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      uint64_t v14 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
      {
        uint64_t v15 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v13, v15);

        uint64_t v16 = v13 + *(int *)(v14 + 28);
        uint64_t v17 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      }
      uint64_t v18 = a1 + v11[11];
      uint64_t v19 = sub_1C151D2DC();
      uint64_t v20 = *(void *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      }
      if (*(void *)(a1 + v11[12] + 8) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + v11[13]) >= 3uLL) {
        swift_unknownObjectRelease();
      }
      id v2 = *(id *)(a1 + v11[14]);
      goto LABEL_40;
    case 6u:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v21 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v22 = a1 + v21[8];
      uint64_t v23 = sub_1C1515FDC();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v25(v22, v23);
      uint64_t v26 = a1 + v21[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v26, 1, v23)) {
        v25(v26, v23);
      }
      swift_release();
      swift_release();
      uint64_t v27 = a1 + v21[12];
      id v28 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v28 - 1) + 48))(v27, 1, v28))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v29 = v28[10];
        uint64_t v30 = v27 + v29 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v31 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31))
        {
          uint64_t v32 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v30, v32);

          v25(v30 + *(int *)(v31 + 28), v23);
        }
        uint64_t v33 = v27 + v28[11];
        uint64_t v34 = sub_1C151D2DC();
        uint64_t v35 = *(void *)(v34 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
        }
        if (*(void *)(v27 + v28[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v27 + v28[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }
      }
      uint64_t v36 = a1 + v21[13];
      uint64_t v37 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v36, 1, v37)) {
        return;
      }
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for GenericDataVisualization();
        v25(v36 + *(int *)(v38 + 20), v23);
LABEL_36:
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
      return;
    case 7u:
      id v2 = *(id *)a1;
LABEL_40:

      return;
    case 8u:
      goto LABEL_53;
    case 9u:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 112)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      }
      if (*(void *)(a1 + 152)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 128);
      }
      if (*(void *)(a1 + 192)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 168);
      }
      return;
    case 0xAu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_53:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      break;
    case 0xBu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v39 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      uint64_t v40 = v39 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_73;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v44 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v40, 1, v44))
            {
              uint64_t v45 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v40, v45);
            }
          }
          uint64_t v46 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v47 = v40 + *(int *)(v46 + 20);
          int v48 = swift_getEnumCaseMultiPayload();
          if (v48 == 5 || v48 == 4)
          {
            uint64_t v49 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v47, 1, v49))
            {
              uint64_t v50 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v47, v50);
            }
          }
          v40 += *(int *)(v46 + 24);
LABEL_73:
          int v51 = swift_getEnumCaseMultiPayload();
          if (v51 == 5 || v51 == 4)
          {
            uint64_t v52 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v40, 1, v52))goto LABEL_88; {
          }
            }
          return;
        case 2u:
          uint64_t v53 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v40, 1, v53)) {
            return;
          }
          uint64_t v54 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v40, v54);
          uint64_t v55 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v56 = v40 + *(int *)(v55 + 24);
          swift_bridgeObjectRelease();
          unint64_t v57 = *(void *)(v56 + 24);
          if (v57 >> 60 != 15) {
            sub_1BFE95664(*(void *)(v56 + 16), v57);
          }
          goto LABEL_80;
        case 3u:
          uint64_t v58 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v59 = v40 + *(int *)(v58 + 24);
          uint64_t v60 = type metadata accessor for PuzzleStreak();
          uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48);
          if (!v61(v59, 1, v60))
          {
            uint64_t v62 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v59, v62);
          }
          v40 += *(int *)(v58 + 28);
          if (v61(v40, 1, v60)) {
            return;
          }
LABEL_88:
          uint64_t v41 = sub_1C151555C();
          goto LABEL_61;
        default:
          return;
      }
    case 0xCu:
      swift_bridgeObjectRelease();
      uint64_t v40 = a1 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      uint64_t v41 = sub_1C151D6DC();
LABEL_61:
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8);
      v42(v40, v41);
      break;
    default:
      return;
  }
}

void destroy for FeedGroupTag(uint64_t a1)
{
  swift_unknownObjectRelease();
  id v2 = *(void **)(a1 + 8);
}

uint64_t sub_1BFED6EFC(uint64_t a1, char a2, void (*a3)(void), void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v6 = v4;
  uint64_t v8 = *v4;
  a3(0);
  char v38 = a2;
  uint64_t v9 = sub_1C15204EC();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v37 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v8 + 64);
    int64_t v36 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v16 << 6);
      }
      else
      {
        int64_t v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v16;
        if (!v22)
        {
          int64_t v16 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v16];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              swift_release();
              uint64_t v6 = v4;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v35;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v16 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v16];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v23;
          }
        }
LABEL_21:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      uint64_t v24 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      uint64_t v27 = *(void *)(v8 + 56) + 40 * v20;
      if (v38)
      {
        a4(v27, v39);
      }
      else
      {
        sub_1BFC66384(v27, (uint64_t)v39);
        swift_bridgeObjectRetain();
      }
      sub_1C1520DBC();
      sub_1C151E77C();
      uint64_t result = sub_1C1520E0C();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v14 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
      *uint64_t v18 = v26;
      v18[1] = v25;
      uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v39, *(void *)(v10 + 56) + 40 * v17);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v6 = v10;
  return result;
}

void sub_1BFED7220()
{
  if (!qword_1EB87A3F0)
  {
    sub_1BFC845BC(255, (unint64_t *)&qword_1EB872200);
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A3F0);
    }
  }
}

uint64_t sub_1BFED7298(uint64_t a1, char a2)
{
  return sub_1BFED6EFC(a1, a2, (void (*)(void))sub_1BFED7220, (void (*)(uint64_t, unsigned char *))sub_1BFC773DC);
}

uint64_t type metadata accessor for FeedWeather(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB87D2F0);
}

uint64_t type metadata accessor for FeedSponsorshipBannerAd()
{
  uint64_t result = qword_1EB881378;
  if (!qword_1EB881378) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFED7330(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v29 = a1;
  sub_1C02CDDB8(0, (unint64_t *)&qword_1EB87D4F8, (void (*)(uint64_t))type metadata accessor for FeedGroupItem);
  uint64_t v28 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = type metadata accessor for FeedGroupItem();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *(void *)(*(void *)v3 + 16);
  unint64_t v14 = *(void *)(*(void *)v3 + 24);
  uint64_t v26 = v10;
  uint64_t v27 = v3;
  if (v14 <= v13 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1BFED7F60();
    }
    else
    {
      if (v14 > v13)
      {
        sub_1C02C7614((uint64_t (*)(void))type metadata accessor for FeedGroupItem, (void (*)(void, __n128))sub_1BFED7EC8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        goto LABEL_38;
      }
      sub_1BFED7994();
    }
    uint64_t v15 = *(void *)v3;
    sub_1C1520DBC();
    sub_1BFED5EC4();
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t v3 = &v30;
    uint64_t v16 = sub_1C1520E0C();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v18 = ~v17;
      uint64_t v19 = *(void *)(v10 + 72);
      while (1)
      {
        sub_1C02CDE74(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        uint64_t v3 = &v8[*(int *)(v28 + 48)];
        sub_1C02CDE74((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        sub_1C02CDE74(v29, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
            if (swift_getEnumCaseMultiPayload() != 1) {
              goto LABEL_12;
            }
            goto LABEL_37;
          case 2u:
            sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
            if (swift_getEnumCaseMultiPayload() == 2) {
              goto LABEL_37;
            }
            goto LABEL_12;
          case 3u:
            if (swift_getEnumCaseMultiPayload() == 3) {
              goto LABEL_41;
            }
            goto LABEL_11;
          case 4u:
            sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
            if (swift_getEnumCaseMultiPayload() == 4) {
              goto LABEL_37;
            }
            goto LABEL_12;
          case 5u:
            if (swift_getEnumCaseMultiPayload() == 5) {
              goto LABEL_41;
            }
            goto LABEL_11;
          case 6u:
            if (swift_getEnumCaseMultiPayload() == 6) {
              goto LABEL_41;
            }
            goto LABEL_11;
          case 7u:
            sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
            if (swift_getEnumCaseMultiPayload() == 7) {
              goto LABEL_37;
            }
            goto LABEL_12;
          case 8u:
            sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
            if (swift_getEnumCaseMultiPayload() == 8) {
              goto LABEL_37;
            }
            goto LABEL_12;
          case 9u:
            if (swift_getEnumCaseMultiPayload() == 9) {
              goto LABEL_41;
            }
            goto LABEL_11;
          case 0xAu:
            sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
            if (swift_getEnumCaseMultiPayload() == 10) {
              goto LABEL_37;
            }
            goto LABEL_12;
          case 0xBu:
            if (swift_getEnumCaseMultiPayload() == 11) {
              goto LABEL_41;
            }
            goto LABEL_11;
          case 0xCu:
            if (swift_getEnumCaseMultiPayload() == 12) {
              goto LABEL_41;
            }
LABEL_11:
            sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
            goto LABEL_12;
          default:
            sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
            if (!swift_getEnumCaseMultiPayload())
            {
LABEL_37:
              uint64_t v8 = v3;
              goto LABEL_42;
            }
LABEL_12:
            sub_1BFEFE988((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
            sub_1BFEFE988((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
            a2 = (a2 + 1) & v18;
            if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_38;
            }
            break;
        }
      }
    }
  }
LABEL_38:
  uint64_t v20 = *(void *)v27;
  *(void *)(*(void *)v27 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1C02CDEDC(v29, *(void *)(v20 + 48) + *(void *)(v26 + 72) * a2, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
LABEL_41:
    sub_1BFEFE988((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
LABEL_42:
    sub_1BFEFE988((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    sub_1BFEFE988((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    uint64_t result = sub_1C1520CEC();
    __break(1u);
  }
  else
  {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_1BFED78F4()
{
  if (!qword_1EB87D4F8)
  {
    type metadata accessor for FeedGroupItem();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB87D4F8);
    }
  }
}

uint64_t _s8NewsFeed12FeedGroupTagVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_unknownObjectRetain();
  id v4 = v3;
  return a1;
}

uint64_t sub_1BFED7994()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FeedGroupItem();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v32 - v6;
  uint64_t v8 = *v0;
  sub_1BFED7EC8();
  uint64_t v9 = sub_1C152008C();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    uint64_t result = swift_release();
LABEL_36:
    *uint64_t v1 = v10;
    return result;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 56);
  unint64_t v32 = v0;
  uint64_t v33 = v8 + 56;
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v34 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (v14)
  {
    unint64_t v22 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v23 = v22 | (v17 << 6);
LABEL_33:
    uint64_t v31 = *(void *)(v35 + 72);
    sub_1C02CDE74(*(void *)(v8 + 48) + v31 * v23, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    sub_1C1520DBC();
    sub_1C02CDE74((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    swift_getEnumCaseMultiPayload();
    sub_1BFEFE988((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    sub_1C151E77C();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C1520E0C();
    uint64_t v18 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v29 = v20 == v28;
        if (v20 == v28) {
          unint64_t v20 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v15 + 8 * v20);
      }
      while (v30 == -1);
      unint64_t v21 = __clz(__rbit64(~v30)) + (v20 << 6);
    }
    *(void *)(v15 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = sub_1C02CDEDC((uint64_t)v7, *(void *)(v10 + 48) + v21 * v31, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
    ++*(void *)(v10 + 16);
  }
  int64_t v24 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v24 >= v34) {
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v33 + 8 * v24);
  ++v17;
  if (v25) {
    goto LABEL_32;
  }
  int64_t v17 = v24 + 1;
  if (v24 + 1 >= v34) {
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v33 + 8 * v17);
  if (v25) {
    goto LABEL_32;
  }
  int64_t v17 = v24 + 2;
  if (v24 + 2 >= v34) {
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v33 + 8 * v17);
  if (v25)
  {
LABEL_32:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v17 << 6);
    goto LABEL_33;
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v34)
  {
LABEL_34:
    uint64_t result = swift_release_n();
    uint64_t v1 = v32;
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v33 + 8 * v26);
  if (v25)
  {
    int64_t v17 = v26;
    goto LABEL_32;
  }
  while (1)
  {
    int64_t v17 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v17 >= v34) {
      goto LABEL_34;
    }
    unint64_t v25 = *(void *)(v33 + 8 * v17);
    ++v26;
    if (v25) {
      goto LABEL_32;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_1BFED7EC8()
{
  if (!qword_1EB87A348)
  {
    type metadata accessor for FeedGroupItem();
    sub_1C02CDA54(&qword_1EB8739B0, 255, (void (*)(uint64_t))type metadata accessor for FeedGroupItem);
    unint64_t v0 = sub_1C15200BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A348);
    }
  }
}

uint64_t sub_1BFED7F60()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FeedGroupItem();
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  MEMORY[0x1F4188790](v2);
  id v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = *v0;
  sub_1BFED7EC8();
  uint64_t v9 = sub_1C152008C();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 56);
    uint64_t v35 = (void *)(v8 + 56);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    uint64_t v33 = v0;
    int64_t v34 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = v9 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v22 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v23 = v22 | (v17 << 6);
      }
      else
      {
        int64_t v24 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v24 >= v34) {
          goto LABEL_34;
        }
        unint64_t v25 = v35[v24];
        ++v17;
        if (!v25)
        {
          int64_t v17 = v24 + 1;
          if (v24 + 1 >= v34) {
            goto LABEL_34;
          }
          unint64_t v25 = v35[v17];
          if (!v25)
          {
            int64_t v17 = v24 + 2;
            if (v24 + 2 >= v34) {
              goto LABEL_34;
            }
            unint64_t v25 = v35[v17];
            if (!v25)
            {
              int64_t v26 = v24 + 3;
              if (v26 >= v34)
              {
LABEL_34:
                swift_release();
                uint64_t v1 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v8 + 32);
                if (v32 > 63) {
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v35 = -1 << v32;
                }
                *(void *)(v8 + 16) = 0;
                break;
              }
              unint64_t v25 = v35[v26];
              if (!v25)
              {
                while (1)
                {
                  int64_t v17 = v26 + 1;
                  if (__OFADD__(v26, 1)) {
                    goto LABEL_40;
                  }
                  if (v17 >= v34) {
                    goto LABEL_34;
                  }
                  unint64_t v25 = v35[v17];
                  ++v26;
                  if (v25) {
                    goto LABEL_32;
                  }
                }
              }
              int64_t v17 = v26;
            }
          }
        }
LABEL_32:
        unint64_t v14 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v17 << 6);
      }
      uint64_t v31 = *(void *)(v36 + 72);
      sub_1C02CDEDC(*(void *)(v8 + 48) + v31 * v23, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      sub_1C1520DBC();
      sub_1C02CDE74((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      swift_getEnumCaseMultiPayload();
      sub_1BFEFE988((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      sub_1C151E77C();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C1520E0C();
      uint64_t v18 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v29 = v20 == v28;
          if (v20 == v28) {
            unint64_t v20 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v15 + 8 * v20);
        }
        while (v30 == -1);
        unint64_t v21 = __clz(__rbit64(~v30)) + (v20 << 6);
      }
      *(void *)(v15 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      uint64_t result = sub_1C02CDEDC((uint64_t)v7, *(void *)(v10 + 48) + v21 * v31, (uint64_t (*)(void))type metadata accessor for FeedGroupItem);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v10;
  return result;
}

void sub_1BFED84D8(uint64_t a1)
{
}

uint64_t FormatFileVersionURIReferenceCollection.init(from:)@<X0>(void *a1@<X0>, void (**a2)(char *, uint64_t)@<X1>, void (**a3)(char *, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v46 = a4;
  uint64_t v7 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v53 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1C1515FDC();
  *(void *)&long long v60 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  int v51 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for FormatFileReference();
  uint64_t v42 = *(void (***)(uint64_t, uint64_t))(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v50 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v49 = (uint64_t)&v40 - v12;
  uint64_t v61 = a2;
  unint64_t v64 = a3;
  uint64_t v13 = type metadata accessor for FormatFileVersionURIReferenceCollection.VersionMetadata();
  uint64_t v48 = sub_1C151FD8C();
  uint64_t v40 = *(void (***)(char *, uint64_t))(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v41 = *(void (***)(char *, uint64_t))(v13 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v40 - v17;
  sub_1BFEC42C4(0);
  uint64_t v20 = v19;
  MEMORY[0x1F4188790](v19);
  unint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v23 = v62;
  sub_1C1520E8C();
  if (!v23)
  {
    unint64_t v63 = v22;
    uint64_t v59 = v20;
    uint64_t v47 = v18;
    unint64_t v57 = v15;
    uint64_t v58 = v13;
    uint64_t v24 = sub_1C151ECBC();
    uint64_t v69 = v24;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    if ((sub_1C15208CC() & 1) == 0)
    {
      uint64_t v54 = (unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 6);
      uint64_t v45 = (void (**)(char *, char *, uint64_t))(v41 + 4);
      uint64_t v44 = (void (**)(char *, char *, uint64_t))(v60 + 16);
      unint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v42 + 2);
      ++v42;
      ++v41;
      ++v40;
      long long v60 = xmmword_1C1529AE0;
      uint64_t v25 = (uint64_t)v63;
      int64_t v26 = v64;
      uint64_t v55 = a1;
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v67, v68);
        sub_1BFEBF504(&qword_1EB88D508, sub_1BFEC42C4);
        sub_1C15208BC();
        sub_1BFED8EB0(0, &qword_1EB88ABA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))type metadata accessor for FormatVersionableValue);
        uint64_t v62 = &v40;
        uint64_t v66 = *(void *)(v25 + *(int *)(v32 + 44));
        MEMORY[0x1F4188790](v32);
        uint64_t v33 = v61;
        *(&v40 - 4) = v61;
        *(&v40 - 3) = v26;
        *(&v40 - 2) = (void (**)(char *, uint64_t))a1;
        *(&v40 - 1) = (void (**)(char *, uint64_t))v25;
        sub_1BFED9C20();
        sub_1BFEBF504((unint64_t *)&unk_1EB879F40, (void (*)(uint64_t))sub_1BFED9C20);
        swift_bridgeObjectRetain();
        uint64_t v34 = v58;
        uint64_t v35 = sub_1C151E97C();
        uint64_t v36 = swift_bridgeObjectRelease();
        uint64_t v62 = &v40;
        uint64_t v65 = v35;
        MEMORY[0x1F4188790](v36);
        *(&v40 - 2) = v33;
        *(&v40 - 1) = v26;
        sub_1C151ED5C();
        swift_getWitnessTable();
        uint64_t v37 = sub_1C151E9FC();
        swift_bridgeObjectRelease();
        uint64_t v65 = v37;
        swift_getWitnessTable();
        char v38 = v57;
        sub_1C151F12C();
        swift_bridgeObjectRelease();
        if ((*v54)(v38, 1, v34) == 1)
        {
          uint64_t v25 = (uint64_t)v63;
          sub_1BFEC2C64((uint64_t)v63, (uint64_t (*)(void))sub_1BFEC42C4);
          (*v40)(v38, v48);
          a1 = v55;
          int64_t v26 = v64;
        }
        else
        {
          char v27 = v47;
          (*v45)(v47, v38, v34);
          uint64_t v28 = (uint64_t)v51;
          (*v44)(v51, &v27[*(int *)(v34 + 40)], v52);
          uint64_t v29 = v53;
          sub_1BFED9048((uint64_t)&v27[*(int *)(v34 + 36)], v53);
          uint64_t v30 = v49;
          int64_t v26 = v64;
          FormatFileReference.init(url:metadata:)(v28, v29, v49);
          uint64_t v31 = v56;
          (*v43)(v50, v30, v56);
          sub_1C151ED5C();
          sub_1C151ED1C();
          (*v42)(v30, v31);
          (*v41)(v27, v34);
          uint64_t v25 = (uint64_t)v63;
          sub_1BFEC2C64((uint64_t)v63, (uint64_t (*)(void))sub_1BFEC42C4);
          a1 = v55;
        }
        __swift_project_boxed_opaque_existential_1(v67, v68);
      }
      while ((sub_1C15208CC() & 1) == 0);
      uint64_t v24 = v69;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    *uint64_t v46 = v24;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BFED8E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C14194A8);
}

void sub_1BFED8EB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v7 = (void (*)(uint64_t))MEMORY[0x1E4F276F0];
    uint64_t v8 = sub_1BFEBF504((unint64_t *)&unk_1EB871120, MEMORY[0x1E4F276F0]);
    uint64_t v9 = sub_1BFEBF504((unint64_t *)&unk_1EB8710F0, v7);
    unint64_t v10 = a3(a1, v6, v8, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t FormatFileReference.init(url:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1BFEBE33C();
  uint64_t v7 = a3 + *(int *)(v6 + 48);
  uint64_t v8 = sub_1C1515FDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a3, a1, v8);
  sub_1BFEC1150(a2, v7);
  type metadata accessor for FormatFileReference();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BFED9048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFED90AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, uint64_t a8, char *a9, uint64_t a10, long long *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return sub_1BFED939C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1BFED918C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
  }
  else
  {
    sub_1C152088C();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C151E80C();
    MEMORY[0x1F4188790](v2);
    sub_1C151ED5C();
    swift_getWitnessTable();
    sub_1C151E97C();
    sub_1BFED9C20();
    sub_1BFED96CC((unint64_t *)&qword_1EB879F30, 255, (void (*)(uint64_t))sub_1BFED9C20);
    sub_1C151E55C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
  }
  return 0x6E6F697369766572;
}

uint64_t sub_1BFED939C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, uint64_t a8, char *a9, uint64_t a10, long long *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18 = v17;
  long long v35 = a7[1];
  long long v36 = *a7;
  uint64_t v34 = *((void *)a7 + 4);
  char v37 = *a9;
  long long v43 = a11[1];
  long long v44 = *a11;
  long long v42 = a11[2];
  uint64_t v41 = *((void *)a11 + 6);
  char v39 = *((unsigned char *)a11 + 57);
  char v40 = *((unsigned char *)a11 + 56);
  *(_OWORD *)(v17 + 208) = 0u;
  *(_OWORD *)(v17 + 224) = 0u;
  *(_OWORD *)(v17 + 233) = 0u;
  *(_OWORD *)(v17 + 192) = 0u;
  uint64_t v20 = (_OWORD *)(v17 + 192);
  *(unsigned char *)(v17 + 249) = 1;
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  uint64_t v54 = a1;
  uint64_t v50 = a16;
  uint64_t v51 = a17;
  uint64_t v21 = sub_1C151ED5C();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v54 = sub_1C035E7C8((void (*)(char *, char *))sub_1BFD204E0, (uint64_t)v49, v21, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v22);
  sub_1BFED9C20();
  sub_1BFED96CC((unint64_t *)&qword_1EB879F30, 255, (void (*)(uint64_t))sub_1BFED9C20);
  sub_1C151E55C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  uint64_t v23 = v53;
  *(void *)(v17 + 32) = v52;
  *(void *)(v17 + 40) = v23;
  uint64_t v24 = sub_1BFED918C(a13, a14);
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  *(void *)(v18 + 120) = v24;
  *(void *)(v18 + 128) = v26;
  uint64_t v52 = a1;
  uint64_t v47 = a16;
  uint64_t v48 = a17;
  uint64_t v27 = type metadata accessor for FeedItem(0);
  *(void *)(v18 + 64) = sub_1C035E7C8((void (*)(char *, char *))sub_1BFCD260C, (uint64_t)v46, v21, v27, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v28);
  *(void *)(v18 + 72) = a4;
  *(void *)(v18 + 48) = a5;
  *(void *)(v18 + 56) = a6;
  *(_OWORD *)(v18 + 80) = v36;
  *(_OWORD *)(v18 + 96) = v35;
  *(void *)(v18 + 112) = v34;
  *(void *)(v18 + 136) = a8;
  *(unsigned char *)(v18 + 144) = v37;
  sub_1BFED9CD0(a10, v18 + 152);
  swift_beginAccess();
  *uint64_t v20 = v44;
  *(_OWORD *)(v18 + 208) = v43;
  *(_OWORD *)(v18 + 224) = v42;
  *(void *)(v18 + 240) = v41;
  *(unsigned char *)(v18 + 248) = v40;
  *(unsigned char *)(v18 + 249) = v39;
  *(void *)(v18 + 256) = a12;
  return v18;
}

uint64_t sub_1BFED96CC(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FeedGroupType.shortDescription.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = 0x6574496F73726570;
  sub_1BFED9C78();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C152C7E0;
  *(void *)(inited + 32) = 0x696669746E656469;
  *(void *)(inited + 40) = 0xEA00000000007265;
  unint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = sub_1C151811C();
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v11;
  *(void *)(inited + 72) = v10;
  *(void *)(inited + 80) = 1684957547;
  *(void *)(inited + 88) = 0xE400000000000000;
  uint64_t v12 = *(void (**)(unint64_t, uint64_t))(a2 + 64);
  *(void *)(inited + 120) = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 96));
  uint64_t v37 = a2;
  v12(a1, a2);
  *(void *)(inited + 128) = 0x6574496F73726570;
  *(void *)(inited + 136) = 0xEF746E756F43736DLL;
  char v38 = (void *)inited;
  uint64_t v13 = *(uint64_t (**)(unint64_t, unint64_t))(v8 + 32);
  unint64_t v14 = v13(a1, v8);
  if (v14 >> 62) {
    goto LABEL_16;
  }
  for (uint64_t i = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10); ; uint64_t i = sub_1C15204BC())
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x1E4FBB550];
    v38[18] = i;
    v38[21] = v16;
    v38[22] = v6;
    v38[23] = 0xEA0000000000736DLL;
    unint64_t v17 = v13(a1, v8);
    uint64_t v6 = v17;
    if (v17 >> 62)
    {
      uint64_t v18 = sub_1C15204BC();
      if (!v18)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        uint64_t v20 = MEMORY[0x1E4FBC860];
LABEL_19:
        sub_1BFED9C20();
        v38[24] = v20;
        v38[27] = v28;
        v38[28] = 6775156;
        v38[29] = 0xE300000000000000;
        uint64_t v29 = (void *)(*(uint64_t (**)(unint64_t))(v37 + 104))(a1);
        if (v29)
        {
          id v30 = objc_msgSend(v29, sel_identifier);
          swift_unknownObjectRelease();
          uint64_t v31 = sub_1C151E62C();
          unint64_t v33 = v32;

          uint64_t v34 = v38 + 30;
          v38[33] = MEMORY[0x1E4FBB1A0];
          if (v33)
          {
            *uint64_t v34 = v31;
LABEL_24:
            v38[31] = v33;
            sub_1BFF99224((uint64_t)v38);
            a3[3] = sub_1C151870C();
            a3[4] = swift_getWitnessTable();
            __swift_allocate_boxed_opaque_existential_0(a3);
            return sub_1C15186FC();
          }
        }
        else
        {
          uint64_t v34 = v38 + 30;
          v38[33] = MEMORY[0x1E4FBB1A0];
        }
        *uint64_t v34 = 7104878;
        unint64_t v33 = 0xE300000000000000;
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v18) {
        goto LABEL_18;
      }
    }
    uint64_t v41 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1BFF661B8(0, v18 & ~(v18 >> 63), 0);
    if (v18 < 0) {
      break;
    }
    long long v35 = a3;
    unint64_t v36 = a1;
    a3 = 0;
    uint64_t v20 = v41;
    uint64_t v39 = v6;
    unint64_t v40 = v6 & 0xC000000000000001;
    unint64_t v8 = 0xE400000000000000;
    while ((uint64_t *)v18 != a3)
    {
      if (v40)
      {
        uint64_t v21 = (void *)MEMORY[0x1C18C7CB0](a3, v6);
      }
      else
      {
        uint64_t v21 = *(void **)(v6 + 8 * (void)a3 + 32);
        swift_unknownObjectRetain();
      }
      sub_1C15200FC();
      id v22 = objc_msgSend(v21, sel_itemID);
      uint64_t v23 = sub_1C151E62C();
      uint64_t v13 = v24;
      swift_bridgeObjectRelease();

      sub_1C151E80C();
      objc_msgSend(v21, sel_hasThumbnail);
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      objc_msgSend(v21, sel_hasVideo);
      sub_1C151E80C();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = v23;
      a1 = *(void *)(v41 + 16);
      unint64_t v26 = *(void *)(v41 + 24);
      if (a1 >= v26 >> 1) {
        sub_1BFF661B8(v26 > 1, a1 + 1, 1);
      }
      a3 = (uint64_t *)((char *)a3 + 1);
      *(void *)(v41 + 16) = a1 + 1;
      uint64_t v27 = v41 + 16 * a1;
      *(void *)(v27 + 32) = v25;
      *(void *)(v27 + 40) = v13;
      uint64_t v6 = v39;
      if ((uint64_t *)v18 == a3)
      {
        swift_bridgeObjectRelease();
        a3 = v35;
        a1 = v36;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_16:
    ;
  }
  __break(1u);
  return result;
}

void sub_1BFED9C20()
{
  if (!qword_1EB879F20)
  {
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB879F20);
    }
  }
}

void sub_1BFED9C78()
{
  if (!qword_1EB87A8C0)
  {
    sub_1C00653B4();
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A8C0);
    }
  }
}

uint64_t sub_1BFED9CD0(uint64_t a1, uint64_t a2)
{
  sub_1BFED9E2C(0, qword_1EB8724F0, (uint64_t (*)(uint64_t))sub_1C00895C4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BFED9D64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFED9DC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFED9E2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFED9E90(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1BFED9EFC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB87A738, type metadata accessor for FormatResource, type metadata accessor for FormatResource, type metadata accessor for FormatResource);
}

uint64_t type metadata accessor for FormatResource(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB874BF8);
}

uint64_t initializeWithCopy for FormatCompilerOptions.Newsroom(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6 == 1)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v8 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = sub_1C1518CDC();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t FormatContentSubgroupCollection.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v97 = type metadata accessor for FormatContentSubgroupCollection.MetadataContainer();
  MEMORY[0x1F4188790](v97);
  uint64_t v104 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEC2A48(0, &qword_1EB874B58, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v96 = (char *)&v75 - v6;
  sub_1BFEC2A48(0, &qword_1EB871500, MEMORY[0x1E4FAB0A8], v4);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v95 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v88 = (uint64_t)&v75 - v10;
  uint64_t v102 = sub_1C151928C();
  unint64_t v82 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v94 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v103 = (char *)&v75 - v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v99 = (char *)&v75 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v87 = (uint64_t)&v75 - v17;
  MEMORY[0x1F4188790](v18);
  id v98 = (char *)&v75 - v19;
  sub_1BFEBAC24(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v89 = (char *)&v75 - v21;
  uint64_t v108 = type metadata accessor for FormatMetadata();
  long long v93 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v108 - 8);
  MEMORY[0x1F4188790](v108);
  unint64_t v107 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v100 = (char *)&v75 - v24;
  sub_1BFEC2A48(0, (unint64_t *)&qword_1EB87A390, MEMORY[0x1E4FBBC50], v4);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v91 = (char *)&v75 - v26;
  uint64_t v90 = sub_1C152039C();
  long long v81 = *(void (***)(uint64_t, uint64_t))(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v28 = (char *)&v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for FormatContentSubgroup();
  uint64_t v80 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v34 = (char *)&v75 - v33;
  MEMORY[0x1F4188790](v35);
  uint64_t v37 = (char *)&v75 - v36;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v38 = (uint64_t)v106;
  sub_1C1520E8C();
  uint64_t v39 = a1;
  if (v38) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  }
  unint64_t v40 = v93;
  char v106 = v37;
  long long v92 = v34;
  uint64_t v76 = v31;
  uint64_t v101 = v29;
  uint64_t v83 = v28;
  uint64_t v105 = v39;
  __swift_project_boxed_opaque_existential_1(&v111, v112);
  if (sub_1C15208CC())
  {
    unint64_t v41 = MEMORY[0x1E4FBC860];
    goto LABEL_31;
  }
  uint64_t v86 = v40 + 6;
  long long v93 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 6);
  long long v84 = (void (**)(char *, uint64_t, uint64_t))(v82 + 4);
  long long v42 = (void (**)(uint64_t, uint64_t))(v82 + 1);
  unint64_t v82 = (uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 6);
  long long v79 = (void (**)(char *, char *, uint64_t))(v81 + 4);
  ++v81;
  unint64_t v41 = MEMORY[0x1E4FBC860];
  uint64_t v78 = MEMORY[0x1E4FBC840] + 8;
  uint64_t v43 = (uint64_t)v98;
  uint64_t v45 = (uint64_t)v100;
  uint64_t v44 = v101;
  do
  {
    unint64_t v77 = v41;
    while (1)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v111, v112);
      sub_1BFEDB1E8(&qword_1EB876FF8, (void (*)(uint64_t))type metadata accessor for FormatContentSubgroup);
      sub_1C15208BC();
      __swift_project_boxed_opaque_existential_1(v105, v105[3]);
      uint64_t v47 = sub_1C1520EAC();
      uint64_t v48 = v91;
      sub_1C152038C();
      uint64_t v49 = v90;
      uint64_t result = (*v82)(v48, 1, v90);
      if (result == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v51 = (uint64_t)v83;
      (*v79)(v83, v48, v49);
      if (*(void *)(v47 + 16) && (unint64_t v52 = sub_1BFEFE43C(v51), (v53 & 1) != 0))
      {
        sub_1BFF6A008(*(void *)(v47 + 56) + 32 * v52, (uint64_t)&v109);
      }
      else
      {
        long long v109 = 0u;
        long long v110 = 0u;
      }
      (*v81)(v51, v49);
      if (*((void *)&v110 + 1)) {
        break;
      }
      sub_1C098A6E8((uint64_t)&v109, (uint64_t (*)(void))sub_1BFEFE510);
      swift_bridgeObjectRelease();
      uint64_t v55 = (uint64_t)v92;
      uint64_t v56 = (uint64_t)v106;
LABEL_18:
      sub_1BFC66384((uint64_t)v105, (uint64_t)&v109);
      sub_1BFEDB138(v56, v55);
      uint64_t v58 = (uint64_t)v89;
LABEL_19:
      sub_1BFEDB230(v55 + *(int *)(v44 + 40), v58);
      sub_1BFEBAA84(v58, v45, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      __swift_project_boxed_opaque_existential_1(&v109, *((uint64_t *)&v110 + 1));
      uint64_t v59 = sub_1C1520EAC();
      Dictionary<>.appVersion.getter(v59, v43);
      swift_bridgeObjectRelease();
      uint64_t v60 = sub_1C1520EAC();
      uint64_t v61 = v87;
      Dictionary<>.formatVersion.getter(v60, v87);
      swift_bridgeObjectRelease();
      uint64_t v62 = v88;
      sub_1BFEC295C(v45 + *(int *)(v108 + 28), v88, &qword_1EB871500, MEMORY[0x1E4FAB0A8]);
      char v63 = 1;
      uint64_t v64 = v102;
      int v65 = (*v93)(v62, 1, v102);
      uint64_t v66 = v99;
      if (v65 != 1)
      {
        (*v84)(v99, v62, v64);
        char v63 = sub_1C1518F6C();
        (*v42)((uint64_t)v66, v64);
      }
      sub_1BFEDB1E8(&qword_1EB874AF8, (void (*)(uint64_t))type metadata accessor for FormatMetadata);
      char v67 = sub_1C151805C();
      uint64_t v68 = *v42;
      (*v42)(v61, v64);
      v68(v43, v64);
      sub_1C098A6E8(v45, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
      sub_1C098A6E8((uint64_t)v92, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
      uint64_t v56 = (uint64_t)v106;
      if (v67 & 1) != 0 && (v63) {
        goto LABEL_24;
      }
      sub_1C098A6E8((uint64_t)v106, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
      __swift_project_boxed_opaque_existential_1(&v111, v112);
      char v46 = sub_1C15208CC();
      uint64_t v44 = v101;
      if (v46)
      {
        unint64_t v41 = v77;
        goto LABEL_31;
      }
    }
    char v54 = swift_dynamicCast();
    uint64_t v55 = (uint64_t)v92;
    uint64_t v56 = (uint64_t)v106;
    if ((v54 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    char v57 = v113;
    swift_bridgeObjectRelease();
    sub_1BFC66384((uint64_t)v105, (uint64_t)&v109);
    sub_1BFEDB138(v56, v55);
    uint64_t v58 = (uint64_t)v89;
    if ((v57 & 1) == 0) {
      goto LABEL_19;
    }
    sub_1C098A6E8(v55, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
LABEL_24:
    sub_1BFEDB138(v56, (uint64_t)v76);
    unint64_t v69 = v77;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v69 = sub_1BFEDB2CC(0, *(void *)(v69 + 16) + 1, 1, v69);
    }
    uint64_t v70 = v80;
    unint64_t v72 = *(void *)(v69 + 16);
    unint64_t v71 = *(void *)(v69 + 24);
    uint64_t v73 = v69;
    if (v72 >= v71 >> 1) {
      uint64_t v73 = sub_1BFEDB2CC(v71 > 1, v72 + 1, 1, v69);
    }
    uint64_t v44 = v101;
    unint64_t v77 = v73;
    *(void *)(v73 + 16) = v72 + 1;
    sub_1BFEBAA84((uint64_t)v76, v73+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v72, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
    sub_1C098A6E8(v56, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
    __swift_project_boxed_opaque_existential_1(&v111, v112);
    char v74 = sub_1C15208CC();
    unint64_t v41 = v77;
  }
  while ((v74 & 1) == 0);
LABEL_31:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
  *uint64_t v85 = v41;
  uint64_t v39 = v105;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_1BFEDB138(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FormatContentSubgroup();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FormatContentSubgroup()
{
  uint64_t result = qword_1EB877000;
  if (!qword_1EB877000) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFEDB1E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEDB230(uint64_t a1, uint64_t a2)
{
  sub_1BFEBAC24(0, (unint64_t *)&qword_1EB882E40, (uint64_t (*)(void))sub_1C006C050, (uint64_t)&type metadata for FormatCodingMetadataStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFEDB2CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB87A7B8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(void))type metadata accessor for FormatContentSubgroup);
}

uint64_t type metadata accessor for FormatContentSubgroupCollection.MetadataContainer()
{
  uint64_t result = qword_1EB8790F0;
  if (!qword_1EB8790F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BFEDB360()
{
  if (!qword_1EB88D808)
  {
    sub_1BFC845BC(255, &qword_1EB88D800);
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88D808);
    }
  }
}

uint64_t sub_1BFEDB3C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FormatOption();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  uint64_t v42 = MEMORY[0x1E4FBC860];
  uint64_t v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__options);
  swift_beginAccess();
  uint64_t v8 = *v7;
  int64_t v9 = *(void *)(*v7 + 16);
  uint64_t v39 = v3;
  if (v9)
  {
    uint64_t v38 = v1;
    uint64_t v41 = v6;
    swift_bridgeObjectRetain();
    sub_1BFF9524C(0, v9, 0);
    uint64_t v10 = v41;
    uint64_t v11 = *(unsigned __int8 *)(v3 + 80);
    v37[1] = v8;
    uint64_t v12 = v8 + ((v11 + 32) & ~v11);
    uint64_t v13 = *(void *)(v3 + 72);
    do
    {
      sub_1C019FFF0(v12, (uint64_t)v5);
      uint64_t v14 = swift_allocBox();
      sub_1C00AB068((uint64_t)v5, v15);
      uint64_t v41 = v10;
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BFF9524C(v16 > 1, v17 + 1, 1);
        uint64_t v10 = v41;
      }
      *(void *)(v10 + 16) = v17 + 1;
      *(void *)(v10 + 8 * v17 + 32) = v14 | 0x4000000000000000;
      v12 += v13;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x1E4FBC860];
    uint64_t v1 = v38;
  }
  else
  {
    uint64_t v10 = v6;
  }
  sub_1BFF1B81C(v10);
  uint64_t v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__styles);
  swift_beginAccess();
  uint64_t v19 = *v18;
  uint64_t v40 = v6;
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20)
  {
    uint64_t v26 = v6;
    int64_t v27 = *(void *)(v6 + 16);
    if (v27) {
      goto LABEL_12;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1BFF955D8();
  unint64_t v22 = (*(unsigned __int8 *)(*(void *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v21 - 8) + 80);
  uint64_t v23 = *(void *)(*(void *)(v21 - 8) + 72);
  swift_bridgeObjectRetain();
  unint64_t v24 = v22 + 64;
  do
  {
    uint64_t v25 = swift_bridgeObjectRetain();
    sub_1BFEDB748(v25);
    v24 += v23;
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
  uint64_t v26 = v40;
  int64_t v27 = *(void *)(v40 + 16);
  if (!v27) {
    goto LABEL_18;
  }
LABEL_12:
  uint64_t v40 = v6;
  sub_1BFF9524C(0, v27, 0);
  uint64_t v28 = v40;
  uint64_t v29 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v38 = v26;
  uint64_t v30 = v26 + ((v29 + 32) & ~v29);
  uint64_t v31 = *(void *)(v39 + 72);
  do
  {
    sub_1C019FFF0(v30, (uint64_t)v5);
    uint64_t v32 = swift_allocBox();
    sub_1C00AB068((uint64_t)v5, v33);
    uint64_t v40 = v28;
    unint64_t v35 = *(void *)(v28 + 16);
    unint64_t v34 = *(void *)(v28 + 24);
    if (v35 >= v34 >> 1)
    {
      sub_1BFF9524C(v34 > 1, v35 + 1, 1);
      uint64_t v28 = v40;
    }
    *(void *)(v28 + 16) = v35 + 1;
    *(void *)(v28 + 8 * v35 + 32) = v32 | 0xB000000000000000;
    v30 += v31;
    --v27;
  }
  while (v27);
  swift_bridgeObjectRelease();
LABEL_19:
  sub_1BFF1B81C(v28);
  return v42;
}

uint64_t sub_1BFEDB748(uint64_t a1)
{
  return sub_1BFEB9484(a1, (uint64_t (*)(void))sub_1BFFE1F7C, (uint64_t (*)(void))type metadata accessor for FormatOption);
}

uint64_t sub_1BFEDB774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v12[2] = a1;
  swift_bridgeObjectRetain();
  sub_1BFEDB93C((uint64_t (*)(char *))sub_1BFEDBC1C, (uint64_t)v12, a2);
  sub_1BFEBC130();
  uint64_t v6 = v5;
  sub_1C151928C();
  sub_1BFEBC34C((unint64_t *)&qword_1EB8714E0, MEMORY[0x1E4FAB0A8]);
  uint64_t v7 = sub_1C151EC0C();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    sub_1BFEBAB54(v7+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(*(void *)(v6 - 8) + 72) * (v8 - 1), a3, (uint64_t (*)(void))sub_1BFEBC130);
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v10, 1, v6);
  return swift_bridgeObjectRelease();
}

void sub_1BFEDB93C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_1BFEBC130();
  uint64_t v23 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    unint64_t v12 = 0;
    uint64_t v13 = MEMORY[0x1E4FBC860];
    v19[1] = a2;
    uint64_t v20 = a3;
    v19[0] = a1;
    while (v12 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_1C063FDFC(a3 + v14 + v15 * v12, (uint64_t)v11, (uint64_t (*)(void))sub_1BFEBC130);
      char v16 = a1(v11);
      if (v3)
      {
        sub_1C0641CA0((uint64_t)v11, (uint64_t (*)(void))sub_1BFEBC130);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_1BFEA4850((uint64_t)v11, v22, (uint64_t (*)(void))sub_1BFEBC130);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1BFEDBBD4(0, *(void *)(v13 + 16) + 1, 1);
        }
        uint64_t v13 = v24;
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1BFEDBBD4(v17 > 1, v18 + 1, 1);
          uint64_t v13 = v24;
        }
        *(void *)(v13 + 16) = v18 + 1;
        sub_1BFEA4850(v22, v13 + v14 + v18 * v15, (uint64_t (*)(void))sub_1BFEBC130);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_1C0641CA0((uint64_t)v11, (uint64_t (*)(void))sub_1BFEBC130);
      }
      if (v21 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BFEDBBD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C05F8AC4(a1, a2, a3, (void *)*v3, sub_1BFFFD90C, (uint64_t (*)(void))sub_1BFEBC130);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1BFEDBC1C(uint64_t a1)
{
  return sub_1BFEDBC3C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1BFEDBC3C(uint64_t a1, uint64_t a2)
{
  v21[1] = a2;
  sub_1BFEBC130();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FormatMetadata();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC0CE8(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C151928C();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEBAB54(a1, (uint64_t)v5, (uint64_t (*)(void))sub_1BFEBC130);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BFEBB8D4(0, &qword_1EA196E38, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    sub_1BFEBAAEC((uint64_t)&v5[*(int *)(v16 + 48)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    sub_1BFEBC514((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BFEBB8D4(0, (unint64_t *)&qword_1EB871140, MEMORY[0x1E4F276F0]);
    sub_1BFEBAAEC((uint64_t)&v5[*(int *)(v17 + 48)], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
    uint64_t v18 = sub_1C1515FDC();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v5, v18);
  }
  sub_1BFEBAB54((uint64_t)&v8[*(int *)(v6 + 28)], (uint64_t)v11, (uint64_t (*)(void))sub_1BFEC0CE8);
  sub_1BFEBC514((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for FormatMetadata);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1BFEBC514((uint64_t)v11, (uint64_t (*)(void))sub_1BFEC0CE8);
    char v19 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    char v19 = sub_1C1518F6C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return v19 & 1;
}

uint64_t FeedGroupType.tag.getter()
{
  return 0;
}

uint64_t sub_1BFEDBFE0@<X0>(void *a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v30 = a3;
  sub_1BFFFCF8C(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FeedHeadline(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (id *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1C151A31C();
  BlueprintItem<>.feedItem.getter(v15, a2);
  FeedItem.feedHeadline.getter((uint64_t)v7);
  sub_1BFEE2FE0((uint64_t)v10, type metadata accessor for FeedItem);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) != 1)
  {
    sub_1BFEDC2FC((uint64_t)v7, (uint64_t)v14, type metadata accessor for FeedHeadline);
    id v18 = objc_msgSend(v14[5], sel_identifier);
    uint64_t v19 = sub_1C151E62C();
    uint64_t v21 = v20;

    id v22 = objc_msgSend(a1, sel_identifier);
    uint64_t v23 = sub_1C151E62C();
    uint64_t v25 = v24;

    if (v19 == v23 && v21 == v25)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v17 = v30;
    }
    else
    {
      char v27 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v30;
      if ((v27 & 1) == 0)
      {
        sub_1BFEE2FE0((uint64_t)v14, type metadata accessor for FeedHeadline);
        uint64_t v16 = 1;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v17, v16, 1, v11);
      }
    }
    sub_1BFEDC2FC((uint64_t)v14, v17, type metadata accessor for FeedHeadline);
    uint64_t v16 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v17, v16, 1, v11);
  }
  sub_1BFEE2FE0((uint64_t)v7, (uint64_t (*)(void))sub_1BFFFCF8C);
  uint64_t v16 = 1;
  uint64_t v17 = v30;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v17, v16, 1, v11);
}

uint64_t sub_1BFEDC2FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t FeedItem.externalContentCacheIdentifier.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEC62B8(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t v6 = v5;
  uint64_t v7 = swift_allocObject();
  long long v46 = xmmword_1C1527210;
  *(_OWORD *)(v7 + 16) = xmmword_1C1527210;
  *(void *)(v7 + 32) = FeedItem.identifier.getter();
  *(void *)(v7 + 40) = v8;
  FeedItem.visibility.getter(v60);
  unint64_t v9 = v60[0];
  uint64_t v47 = v6;
  if (v60[0] == 2)
  {
    unint64_t v10 = 0xE700000000000000;
    uint64_t v11 = 0x656C6269736976;
  }
  else
  {
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = v46;
    *(void *)(v12 + 32) = 0x6E6564646968;
    *(void *)(v12 + 40) = 0xE600000000000000;
    *(void *)&v58[0] = v9;
    sub_1C01A6E20(v9);
    *(void *)(v12 + 48) = FeedItemHiddenReason.description.getter();
    *(void *)(v12 + 56) = v13;
    *(void *)&v58[0] = v12;
    sub_1BFEC62B8(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1BFE99E40();
    uint64_t v11 = sub_1C151E55C();
    unint64_t v10 = v14;
    swift_bridgeObjectRelease();
    sub_1C0A63304(v9);
    sub_1C0A63304(v9);
  }
  *(void *)(v7 + 48) = v11;
  *(void *)(v7 + 56) = v10;
  *(void *)&v58[0] = v7;
  sub_1BFEC62B8(0, (unint64_t *)&qword_1EB879F20, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  uint64_t v16 = v15;
  unint64_t v45 = sub_1BFE99E40();
  *(void *)&long long v46 = v16;
  uint64_t v17 = sub_1C151E55C();
  uint64_t v43 = v18;
  uint64_t v44 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1BFEDCA88();
  uint64_t v41 = v20;
  FeedItem.feedIssue.getter((uint64_t)v56);
  uint64_t v21 = MEMORY[0x1E4FBB718];
  sub_1C0A60978((uint64_t)v56, (uint64_t)v57, (uint64_t)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEC62B8);
  sub_1C0A60978((uint64_t)v57, (uint64_t)v58, (uint64_t)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, v21, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEC62B8);
  int v22 = sub_1C00A0A24((uint64_t *)v58);
  uint64_t v42 = v19;
  if (v22 == 1) {
    goto LABEL_6;
  }
  long long v54 = v58[6];
  v55[0] = v59[0];
  *(_OWORD *)((char *)v55 + 9) = *(_OWORD *)((char *)v59 + 9);
  long long v50 = v58[2];
  long long v51 = v58[3];
  long long v52 = v58[4];
  long long v53 = v58[5];
  long long v48 = v58[0];
  long long v49 = v58[1];
  uint64_t v23 = FeedIssue.feedContextIdentifier.getter();
  unint64_t v25 = v24;
  sub_1C01B3B54((uint64_t)v57);
  if (!v25)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    uint64_t v23 = 0;
    unint64_t v25 = 0xE000000000000000;
  }
  uint64_t v26 = sub_1BFEDCD18();
  uint64_t v28 = v27;
  uint64_t v29 = sub_1C0A62840();
  uint64_t v31 = v30;
  sub_1BFEEB0CC(v1, (uint64_t)v4, type metadata accessor for FeedItem);
  if (swift_getEnumCaseMultiPayload() == 11)
  {
    v56[0] = sub_1C151A0BC();
    sub_1BFF01BC4();
    uint64_t v32 = sub_1C151FF2C();
    unint64_t v34 = v33;
    swift_release();
  }
  else
  {
    sub_1BFEEB3A0((uint64_t)v4, type metadata accessor for FeedItem);
    uint64_t v32 = 0;
    unint64_t v34 = 0xE000000000000000;
  }
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1C15445C0;
  uint64_t v36 = v43;
  *(void *)(v35 + 32) = v44;
  *(void *)(v35 + 40) = v36;
  uint64_t v37 = v41;
  *(void *)(v35 + 48) = v42;
  *(void *)(v35 + 56) = v37;
  *(void *)(v35 + 64) = v23;
  *(void *)(v35 + 72) = v25;
  *(void *)(v35 + 80) = v26;
  *(void *)(v35 + 88) = v28;
  *(void *)(v35 + 96) = v29;
  *(void *)(v35 + 104) = v31;
  *(void *)(v35 + 112) = v32;
  *(void *)(v35 + 120) = v34;
  v56[0] = v35;
  uint64_t v38 = sub_1C151E55C();
  swift_bridgeObjectRelease();
  return v38;
}

uint64_t FeedItem.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v2, (uint64_t)v9, type metadata accessor for FeedItem);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v14 = *((void *)v9 + 9);
      unint64_t v11 = *((void *)v9 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v13 = v14;
      goto LABEL_7;
    case 2:
    case 4:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 13:
    case 15:
      uint64_t result = sub_1BFEEB3A0((uint64_t)v9, type metadata accessor for FeedItem);
      break;
    case 3:
      sub_1BFEEFA80((uint64_t)v9, (uint64_t)v6, type metadata accessor for FeedHeadline);
      unint64_t v15 = *(void *)&v6[*(int *)(v4 + 52)];
      sub_1BFEDCA78(v15);
      uint64_t result = sub_1BFEEB3A0((uint64_t)v6, type metadata accessor for FeedHeadline);
      *a1 = v15;
      return result;
    case 5:
      long long v16 = *((_OWORD *)v9 + 7);
      long long v33 = *((_OWORD *)v9 + 6);
      v34[0] = v16;
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)(v9 + 121);
      long long v17 = *((_OWORD *)v9 + 3);
      long long v29 = *((_OWORD *)v9 + 2);
      long long v30 = v17;
      long long v18 = *((_OWORD *)v9 + 5);
      long long v31 = *((_OWORD *)v9 + 4);
      long long v32 = v18;
      long long v19 = *((_OWORD *)v9 + 1);
      long long v27 = *(_OWORD *)v9;
      long long v28 = v19;
      uint64_t result = sub_1C01880A4((uint64_t)&v27);
      break;
    case 11:
      uint64_t result = swift_release();
      break;
    case 12:
      goto LABEL_12;
    case 14:
      sub_1BFEEFC20(*((void *)v9 + 3), *((void *)v9 + 4));
LABEL_12:
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 16:
      long long v20 = *((_OWORD *)v9 + 13);
      v34[5] = *((_OWORD *)v9 + 12);
      v34[6] = v20;
      v34[7] = *((_OWORD *)v9 + 14);
      uint64_t v35 = *((void *)v9 + 30);
      long long v21 = *((_OWORD *)v9 + 9);
      v34[1] = *((_OWORD *)v9 + 8);
      v34[2] = v21;
      long long v22 = *((_OWORD *)v9 + 11);
      v34[3] = *((_OWORD *)v9 + 10);
      v34[4] = v22;
      long long v23 = *((_OWORD *)v9 + 5);
      long long v31 = *((_OWORD *)v9 + 4);
      long long v32 = v23;
      long long v24 = *((_OWORD *)v9 + 7);
      long long v33 = *((_OWORD *)v9 + 6);
      v34[0] = v24;
      long long v25 = *((_OWORD *)v9 + 1);
      long long v27 = *(_OWORD *)v9;
      long long v28 = v25;
      long long v26 = *((_OWORD *)v9 + 3);
      long long v29 = *((_OWORD *)v9 + 2);
      long long v30 = v26;
      uint64_t result = sub_1C01F0AC8((uint64_t)&v27);
      break;
    case 17:
      break;
    default:
      uint64_t v12 = *((void *)v9 + 5);
      unint64_t v11 = *((void *)v9 + 6);
      swift_bridgeObjectRelease();
      uint64_t v13 = v12;
LABEL_7:
      uint64_t result = sub_1BFEEFC20(v13, v11);
      break;
  }
  *a1 = 2;
  return result;
}

unint64_t sub_1BFEDCA78(unint64_t result)
{
  if (result != 2) {
    return sub_1C01A6E20(result);
  }
  return result;
}

uint64_t sub_1BFEDCA88()
{
  sub_1BFEEF8E8(0, (unint64_t *)&qword_1EB87C618, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)v14 - v1;
  uint64_t v3 = FeedItem.headline.getter();
  if (!v3) {
    return 0;
  }
  uint64_t v4 = (void *)v3;
  if (qword_1EB87C520 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_1EB87E9C8;
  id v6 = objc_msgSend(v4, sel_articleID);
  uint64_t v7 = sub_1C151E62C();
  uint64_t v9 = v8;

  v14[1] = *(void *)(v5 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
  MEMORY[0x1F4188790](v10);
  v14[-4] = v5;
  v14[-3] = v7;
  v14[-2] = v9;
  sub_1C1517ECC();
  swift_retain();
  sub_1C1518D3C();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v11 = type metadata accessor for SharedItem();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v2, 1, v11) == 1)
  {
    sub_1BFEDD9AC((uint64_t)v2, (unint64_t *)&qword_1EB87C618, (uint64_t (*)(uint64_t))type metadata accessor for SharedItem);
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = sub_1C1515E2C();
    sub_1BFEEB3A0((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for SharedItem);
  }
  swift_unknownObjectRelease();
  return v12;
}

uint64_t sub_1BFEDCD18()
{
  uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v15 - v2;
  sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, v0);
  MEMORY[0x1F4188790](v4 - 8);
  id v6 = (char *)&v15 - v5;
  uint64_t v7 = type metadata accessor for FeedHeadline(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  FeedItem.feedHeadline.getter((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BFEDD9AC((uint64_t)v6, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
    return 0;
  }
  else
  {
    sub_1BFEEFA80((uint64_t)v6, (uint64_t)v10, type metadata accessor for FeedHeadline);
    uint64_t v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F7A860];
    sub_1BFEDD238((uint64_t)&v10[*(int *)(v7 + 44)], (uint64_t)v3, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
    uint64_t v13 = sub_1C151D2DC();
    int v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v3, 1, v13);
    sub_1BFEDD9AC((uint64_t)v3, (unint64_t *)&unk_1EB8716B0, v12);
    sub_1BFEEB3A0((uint64_t)v10, type metadata accessor for FeedHeadline);
    if (v14 == 1) {
      return 0;
    }
    else {
      return 0x644165766974616ELL;
    }
  }
}

uint64_t getEnumTagSinglePayload for FeedHeadline(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C01A7EE0);
}

uint64_t FeedItem.feedHeadline.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v4);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v2, (uint64_t)v9, type metadata accessor for FeedItem);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 5) < 0xC)
  {
LABEL_3:
    sub_1BFEEB3A0((uint64_t)v9, type metadata accessor for FeedItem);
LABEL_4:
    uint64_t v11 = type metadata accessor for FeedHeadline(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    switch((int)result)
    {
      case 3:
        sub_1BFEEFA80((uint64_t)v9, a1, type metadata accessor for FeedHeadline);
        uint64_t v12 = type metadata accessor for FeedHeadline(0);
        uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a1, 0, 1, v12);
        break;
      case 4:
        sub_1BFEEFA80((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        sub_1BFEDD238((uint64_t)&v6[*(int *)(v4 + 48)], a1, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
        uint64_t result = sub_1BFEEB3A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
        break;
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
        __break(1u);
        break;
      case 17:
        goto LABEL_4;
      default:
        goto LABEL_3;
    }
  }
  return result;
}

uint64_t sub_1BFEDD238(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFEEF8E8(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

BOOL sub_1BFEDD2B8(uint64_t a1, char a2)
{
  sub_1BFEDD8F4();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SharedItem();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  _OWORD v15[3] = type metadata accessor for FormatNodeContext();
  v15[4] = &off_1F1BFC148;
  v15[0] = a1;
  swift_retain();
  sub_1BFEDD4CC(v15, (uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  sub_1C097768C((uint64_t)v10, (uint64_t)v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  int v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (a2) {
    BOOL v12 = v11 != 1;
  }
  else {
    BOOL v12 = v11 == 1;
  }
  sub_1BFEDD94C((uint64_t)v6, (uint64_t (*)(void))sub_1BFEDD8F4);
  return v12;
}

uint64_t type metadata accessor for FormatNodeContext()
{
  uint64_t result = qword_1EB875770;
  if (!qword_1EB875770) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFEDD4CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = type metadata accessor for FeedItem.SharedState(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v35 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEDD8F4();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v33 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v10);
  BOOL v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 32);
  uint64_t v16 = sub_1BFEDDD68((unint64_t *)&unk_1EB873778, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  uint64_t v17 = v38;
  uint64_t result = v15(v10, v10, v16, v13, v14);
  if (!v17)
  {
    sub_1BFEDDEE8((uint64_t)&v12[*(int *)(v10 + 40)], (uint64_t)v7);
    uint64_t v19 = v35;
    sub_1BFEDDDB0((uint64_t)&v7[*(int *)(v5 + 24)], v35, type metadata accessor for FeedItem.SharedState);
    uint64_t v20 = type metadata accessor for SharedItem();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = 1;
    long long v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
    int v24 = v23(v19, 1, v20);
    uint64_t v25 = (uint64_t)v12;
    uint64_t v26 = v33;
    if (v24 != 1)
    {
      sub_1BFEDDDB0(v35, v33, (uint64_t (*)(void))type metadata accessor for SharedItem);
      uint64_t v22 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v26, v22, 1, v20);
    int v27 = v23(v26, 1, v20);
    uint64_t v28 = v34;
    if (v27 == 1)
    {
      sub_1BFEDDA1C(v26, (uint64_t (*)(void))sub_1BFEDD8F4);
      type metadata accessor for FormatLayoutError();
      sub_1BFEDDD68((unint64_t *)&qword_1EB875690, (void (*)(uint64_t))type metadata accessor for FormatLayoutError);
      swift_allocError();
      long long v30 = v29;
      uint64_t v36 = 0;
      unint64_t v37 = 0xE000000000000000;
      sub_1C152036C();
      unint64_t v31 = v37;
      *long long v30 = v36;
      v30[1] = v31;
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return sub_1BFEDDA1C(v25, type metadata accessor for FeedHeadline);
    }
    else
    {
      sub_1BFEDDA1C(v25, type metadata accessor for FeedHeadline);
      return sub_1BFEDDDB0(v26, v28, (uint64_t (*)(void))type metadata accessor for SharedItem);
    }
  }
  return result;
}

void sub_1BFEDD8F4()
{
  if (!qword_1EB87C618)
  {
    type metadata accessor for SharedItem();
    unint64_t v0 = sub_1C151FD8C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87C618);
    }
  }
}

uint64_t sub_1BFEDD94C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEDD9AC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEEF8E8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFEDDA1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEDDA7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_itemsByArticleID);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1BFEF2D8C(a2, a3);
    if (v10)
    {
      unint64_t v11 = v9;
      uint64_t v12 = *(void *)(v8 + 56);
      uint64_t v13 = type metadata accessor for SharedItem();
      uint64_t v14 = *(void *)(v13 - 8);
      sub_1C0977524(v12 + *(void *)(v14 + 72) * v11, a4);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
    }
    else
    {
      uint64_t v16 = type metadata accessor for SharedItem();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a4, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = type metadata accessor for SharedItem();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a4, 1, 1, v15);
  }
  return swift_endAccess();
}

uint64_t static FeedHeadline.State.default.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v2 = (int *)type metadata accessor for FeedHeadline.State(0);
  uint64_t v3 = (char *)a1 + v2[6];
  uint64_t v4 = type metadata accessor for SharedItem();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *a1 = 258;
  *((unsigned char *)a1 + v2[7]) = 1;
  *((unsigned char *)a1 + v2[8]) = 0;
  *((unsigned char *)a1 + v2[9]) = 0;
  *((unsigned char *)a1 + v2[10]) = 0;
  return result;
}

uint64_t storeEnumTagSinglePayload for SharedItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C13A54E8);
}

uint64_t sub_1BFEDDCD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEDDD20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEDDD68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BFEDDDB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEDDE18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEDDE80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEDDEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedHeadline.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFEDDF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BFEDDF70(a1, a2, a3);
}

uint64_t sub_1BFEDDF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BFEDDFA0(a1, *(void *)(v3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), a2, a3);
}

uint64_t sub_1BFEDDFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v22 = a4;
  uint64_t v7 = sub_1C151FD8C();
  MEMORY[0x1F4188790](v7);
  char v10 = (char *)v21 - v9;
  uint64_t v11 = *(void *)(a2 + 16);
  if (v11)
  {
    v21[1] = a1;
    uint64_t v12 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    uint64_t v13 = a2 + 40 * v11 - 8;
    while (1)
    {
      sub_1BFC66384(v13, (uint64_t)v23);
      sub_1BFFFCF34();
      char v14 = swift_dynamicCast();
      uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 56);
      if (v14) {
        break;
      }
      --v11;
      v15(v10, 1, 1, a3);
      (*v12)(v10, v7);
      v13 -= 40;
      if (!v11)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    uint64_t v20 = *(void *)(a3 - 8);
    v15(v10, 0, 1, a3);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(v22, v10, a3);
  }
  else
  {
LABEL_6:
    sub_1BFF7DFA8();
    swift_allocError();
    uint64_t v17 = v16;
    *uint64_t v16 = sub_1C1520FAC();
    v17[1] = v18;
    *((unsigned char *)v17 + 56) = 6;
    return swift_willThrow();
  }
}

uint64_t sub_1BFEDE1D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB87A5C8, (uint64_t (*)(uint64_t))sub_1BFEDE21C, (uint64_t (*)(void))sub_1BFEDE21C, (uint64_t (*)(void))sub_1BFEDE21C);
}

void sub_1BFEDE21C()
{
  if (!qword_1EB871700)
  {
    type metadata accessor for FeedBannerAd();
    sub_1C151D7BC();
    sub_1C151D87C();
    sub_1C002C724(&qword_1EB895030, (void (*)(uint64_t))type metadata accessor for FeedBannerAd);
    sub_1C002C724(&qword_1EB894940, MEMORY[0x1E4F7AE10]);
    unint64_t v0 = sub_1C151D3DC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB871700);
    }
  }
}

uint64_t destroy for FormatLocalization()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

int64_t sub_1BFEDE374(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BFEDE458()
{
  return FeedAppConfigManager.segmentSetIds.getter();
}

uint64_t FeedAppConfigManager.segmentSetIds.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  unsigned __int8 v2 = objc_msgSend(v1, sel_respondsToSelector_, sel_segmentSetIDs);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  unint64_t v4 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    id v5 = objc_msgSend(v1, sel_segmentSetIDs);
    if (!v5) {
      return MEMORY[0x1E4FBC870];
    }
    uint64_t v6 = v5;
    sub_1BFC39268(0, (unint64_t *)&qword_1EB87A320);
    unint64_t v4 = sub_1C151EBCC();
  }
  if (!(v4 >> 62))
  {
    uint64_t v7 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_6;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBC860];
LABEL_18:
    uint64_t v16 = sub_1C0605064(v10);
    swift_bridgeObjectRelease();
    return v16;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C15204BC();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_17;
  }
LABEL_6:
  uint64_t v17 = v3;
  uint64_t result = sub_1BFEDE894(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    uint64_t v10 = v17;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x1C18C7CB0](v9, v4);
      }
      else {
        id v11 = *(id *)(v4 + 8 * v9 + 32);
      }
      uint64_t v12 = v11;
      unsigned int v13 = objc_msgSend(v11, sel_intValue);

      unint64_t v15 = *(void *)(v17 + 16);
      unint64_t v14 = *(void *)(v17 + 24);
      if (v15 >= v14 >> 1) {
        sub_1BFEDE894(v14 > 1, v15 + 1, 1);
      }
      ++v9;
      *(void *)(v17 + 16) = v15 + 1;
      *(_DWORD *)(v17 + 4 * v15 + 32) = v13;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFEDE668(_DWORD *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x1C18C88D0](*(void *)(v6 + 40), a2, 4);
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1BFEDE76C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v10 + 4 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1BFEDE76C(uint64_t result, unint64_t a2, char a3)
{
  unsigned int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C02BBB48();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1C02C6AD0();
      goto LABEL_14;
    }
    sub_1C02C893C();
  }
  uint64_t v8 = *v3;
  uint64_t result = MEMORY[0x1C18C88D0](*(void *)(*v3 + 40), v5, 4);
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1C1520CEC();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v10 + 4 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1BFEDE894(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BFEDE8B4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BFEDE8B4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1BFF66364(0, &qword_1EB85E760, MEMORY[0x1E4FBC150], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  BOOL v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

id sub_1BFEDEA34()
{
  id v1 = objc_msgSend(*(id *)(*(void *)v0 + 16), sel_possiblyUnfetchedAppConfiguration);
  if (objc_msgSend(v1, sel_respondsToSelector_, sel_timesOfDayConfiguration))
  {
    id v2 = objc_msgSend(v1, sel_timesOfDayConfiguration);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v2;
}

uint64_t sub_1BFEDEABC@<X0>(void *a1@<X8>)
{
  if (qword_1EB8815C0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = unk_1EB885C20;
  *a1 = qword_1EB885C18;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *sub_1BFEDEB48()
{
  uint64_t v43 = sub_1C151631C();
  uint64_t v0 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v2 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1C151661C();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C151586C();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EB87BD28 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_project_value_buffer(v3, (uint64_t)qword_1EB879A00);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v10, v3);
  sub_1BFEDF284();
  uint64_t v11 = sub_1C15165FC();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1C1529AE0;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, *MEMORY[0x1E4F27C68], v11);
  sub_1C00B78C4(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C151630C();
  sub_1C151652C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v43);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v15 = sub_1C151584C();
  if (v16)
  {
LABEL_8:
    uint64_t v17 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    switch(v15)
    {
      case 1:
        uint64_t v17 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v19 = v17[2];
        unint64_t v18 = v17[3];
        if (v19 >= v18 >> 1) {
          uint64_t v17 = sub_1BFEF9B68((void *)(v18 > 1), v19 + 1, 1, v17);
        }
        void v17[2] = v19 + 1;
        uint64_t v20 = &v17[2 * v19];
        v20[4] = 0xD000000000000017;
        uint64_t v21 = v20 + 4;
        uint64_t v22 = "date-day-of-week-sunday";
        break;
      case 2:
        uint64_t v17 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v24 = v17[2];
        unint64_t v23 = v17[3];
        if (v24 >= v23 >> 1) {
          uint64_t v17 = sub_1BFEF9B68((void *)(v23 > 1), v24 + 1, 1, v17);
        }
        void v17[2] = v24 + 1;
        uint64_t v25 = &v17[2 * v24];
        v25[4] = 0xD000000000000017;
        uint64_t v21 = v25 + 4;
        uint64_t v22 = "date-day-of-week-monday";
        break;
      case 3:
        uint64_t v17 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v27 = v17[2];
        unint64_t v26 = v17[3];
        if (v27 >= v26 >> 1) {
          uint64_t v17 = sub_1BFEF9B68((void *)(v26 > 1), v27 + 1, 1, v17);
        }
        void v17[2] = v27 + 1;
        uint64_t v28 = &v17[2 * v27];
        void v28[4] = 0xD000000000000018;
        uint64_t v21 = v28 + 4;
        uint64_t v22 = "date-day-of-week-tuesday";
        break;
      case 4:
        uint64_t v17 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v30 = v17[2];
        unint64_t v29 = v17[3];
        if (v30 >= v29 >> 1) {
          uint64_t v17 = sub_1BFEF9B68((void *)(v29 > 1), v30 + 1, 1, v17);
        }
        void v17[2] = v30 + 1;
        unint64_t v31 = &v17[2 * v30];
        v31[4] = 0xD00000000000001ALL;
        uint64_t v21 = v31 + 4;
        uint64_t v22 = "date-day-of-week-wednesday";
        break;
      case 5:
        uint64_t v17 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v33 = v17[2];
        unint64_t v32 = v17[3];
        if (v33 >= v32 >> 1) {
          uint64_t v17 = sub_1BFEF9B68((void *)(v32 > 1), v33 + 1, 1, v17);
        }
        void v17[2] = v33 + 1;
        uint64_t v34 = &v17[2 * v33];
        v34[4] = 0xD000000000000019;
        uint64_t v21 = v34 + 4;
        uint64_t v22 = "date-day-of-week-thursday";
        break;
      case 6:
        uint64_t v17 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v36 = v17[2];
        unint64_t v35 = v17[3];
        if (v36 >= v35 >> 1) {
          uint64_t v17 = sub_1BFEF9B68((void *)(v35 > 1), v36 + 1, 1, v17);
        }
        void v17[2] = v36 + 1;
        unint64_t v37 = &v17[2 * v36];
        v37[4] = 0xD000000000000017;
        uint64_t v21 = v37 + 4;
        uint64_t v22 = "date-day-of-week-friday";
        break;
      case 7:
        uint64_t v17 = sub_1BFEF9B68(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v39 = v17[2];
        unint64_t v38 = v17[3];
        if (v39 >= v38 >> 1) {
          uint64_t v17 = sub_1BFEF9B68((void *)(v38 > 1), v39 + 1, 1, v17);
        }
        void v17[2] = v39 + 1;
        uint64_t v40 = &v17[2 * v39];
        v40[4] = 0xD000000000000019;
        uint64_t v21 = v40 + 4;
        uint64_t v22 = "date-day-of-week-saturday";
        break;
      default:
        goto LABEL_8;
    }
    v21[1] = (unint64_t)(v22 - 32) | 0x8000000000000000;
  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v45);
  return v17;
}

void sub_1BFEDF1F0()
{
  if (!qword_1EB87A340)
  {
    sub_1C15165FC();
    sub_1C00BC5B4(&qword_1EB871188, MEMORY[0x1E4F27C88]);
    unint64_t v0 = sub_1C15200BC();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A340);
    }
  }
}

void sub_1BFEDF284()
{
  if (!qword_1EB87A578)
  {
    sub_1C15165FC();
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A578);
    }
  }
}

uint64_t UIContentSizeCategory.description.getter()
{
  uint64_t v0 = 0x4C5858585F5841;
  uint64_t v1 = sub_1C151E62C();
  uint64_t v3 = v2;
  if (v1 == sub_1C151E62C() && v3 == v4)
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    return v0;
  }
  char v6 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    uint64_t v0 = 0x4C58585F5841;
    uint64_t v7 = sub_1C151E62C();
    uint64_t v9 = v8;
    if (v7 == sub_1C151E62C() && v9 == v10) {
      goto LABEL_12;
    }
    char v12 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12) {
      return v0;
    }
    uint64_t v0 = 0x4C585F5841;
    uint64_t v14 = sub_1C151E62C();
    uint64_t v16 = v15;
    if (v14 == sub_1C151E62C() && v16 == v17) {
      goto LABEL_12;
    }
    char v18 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18) {
      return v0;
    }
    uint64_t v0 = 1281316929;
    uint64_t v19 = sub_1C151E62C();
    uint64_t v21 = v20;
    if (v19 == sub_1C151E62C() && v21 == v22) {
      goto LABEL_12;
    }
    char v23 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23) {
      return v0;
    }
    uint64_t v0 = 1298094145;
    uint64_t v24 = sub_1C151E62C();
    uint64_t v26 = v25;
    if (v24 == sub_1C151E62C() && v26 == v27) {
      goto LABEL_12;
    }
    char v28 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v28) {
      return v0;
    }
    uint64_t v0 = 1280858200;
    uint64_t v29 = sub_1C151E62C();
    uint64_t v31 = v30;
    if (v29 == sub_1C151E62C() && v31 == v32) {
      goto LABEL_12;
    }
    char v33 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v33) {
      return v0;
    }
    uint64_t v0 = 5003352;
    uint64_t v34 = sub_1C151E62C();
    uint64_t v36 = v35;
    if (v34 == sub_1C151E62C() && v36 == v37) {
      goto LABEL_12;
    }
    char v38 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v38) {
      return v0;
    }
    uint64_t v39 = sub_1C151E62C();
    uint64_t v41 = v40;
    if (v39 == sub_1C151E62C() && v41 == v42)
    {
      swift_bridgeObjectRelease_n();
      return 19544;
    }
    char v43 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v43) {
      return 19544;
    }
    uint64_t v44 = sub_1C151E62C();
    uint64_t v46 = v45;
    if (v44 == sub_1C151E62C() && v46 == v47)
    {
      swift_bridgeObjectRelease_n();
      return 76;
    }
    char v48 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v48) {
      return 76;
    }
    uint64_t v49 = sub_1C151E62C();
    uint64_t v51 = v50;
    if (v49 == sub_1C151E62C() && v51 == v52)
    {
      swift_bridgeObjectRelease_n();
      return 77;
    }
    char v53 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v53) {
      return 77;
    }
    uint64_t v54 = sub_1C151E62C();
    uint64_t v56 = v55;
    if (v54 == sub_1C151E62C() && v56 == v57)
    {
      swift_bridgeObjectRelease_n();
      return 83;
    }
    char v58 = sub_1C1520A9C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v58) {
      return 83;
    }
    uint64_t v59 = sub_1C151E62C();
    uint64_t v61 = v60;
    if (v59 == sub_1C151E62C() && v61 == v62)
    {
      swift_bridgeObjectRelease_n();
      return 21336;
    }
    else
    {
      char v63 = sub_1C1520A9C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v63) {
        return 21336;
      }
      else {
        return 0x6669636570736E75;
      }
    }
  }
  return v0;
}

uint64_t sub_1BFEDF938(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1BFEDF9D8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1BFEDFA3C()
{
  unint64_t result = qword_1EB87A338;
  if (!qword_1EB87A338)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB87A338);
  }
  return result;
}

uint64_t sub_1BFEDFA7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + qword_1EA1AA1F8);
  uint64_t v5 = *(void *)(v1 + qword_1EA1AA1F8 + 24);
  uint64_t v4 = *(void *)(v1 + qword_1EA1AA1F8 + 32);
  __swift_project_boxed_opaque_existential_1(v3, v5);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 8))(v5);
  switch(result)
  {
    case 0:
      *(void *)(a1 + 48) = 0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      return result;
    case 1:
    case 2:
      if (qword_1EB8612C0 != -1) {
        swift_once();
      }
      unint64_t v7 = &qword_1EB93C360;
      goto LABEL_15;
    case 3:
      if (qword_1EA1949D0 != -1) {
        swift_once();
      }
      unint64_t v7 = &qword_1EA2B52E0;
      goto LABEL_15;
    case 4:
    case 5:
      if (qword_1EA1949C0 != -1) {
        swift_once();
      }
      unint64_t v7 = &qword_1EA2B5270;
      goto LABEL_15;
    case 6:
      if (qword_1EA1949C8 != -1) {
        swift_once();
      }
      unint64_t v7 = &qword_1EA2B52A8;
LABEL_15:
      uint64_t v8 = v7[1];
      uint64_t v9 = v7[2];
      uint64_t v10 = v7[3];
      uint64_t v11 = v7[4];
      uint64_t v12 = v7[5];
      uint64_t v13 = v7[6];
      *(void *)a1 = *v7;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v10;
      *(void *)(a1 + 32) = v11;
      *(void *)(a1 + 40) = v12;
      *(void *)(a1 + 48) = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      uint64_t result = sub_1C152040C();
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_1BFEDFCB4()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  return *(void *)(v1 + 16);
}

uint64_t type metadata accessor for FormatSystem()
{
  return self;
}

uint64_t sub_1BFEDFD18()
{
  return FeedUserInfo.layoutSelectors.getter();
}

uint64_t FeedUserInfo.layoutSelectors.getter()
{
  uint64_t v7 = FeedUserInfo.contextSelectors.getter();
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_shortcutsOnboardingState);
  if (!v1)
  {
    uint64_t v3 = 0xD000000000000021;
    uint64_t v4 = "user-info-shortcuts-not-onboarded";
LABEL_7:
    unint64_t v2 = (unint64_t)(v4 - 32) | 0x8000000000000000;
    goto LABEL_8;
  }
  if (v1 == (id)1)
  {
    uint64_t v3 = 0xD000000000000022;
    uint64_t v4 = "user-info-shortcuts-auto-onboarded";
    goto LABEL_7;
  }
  if (v1 == (id)2)
  {
    unint64_t v2 = 0x80000001C161B2F0;
    uint64_t v3 = 0xD00000000000001DLL;
LABEL_8:
    sub_1BFEFFC1C(&v6, v3, v2);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t FeedUserInfo.contextSelectors.getter()
{
  uint64_t v12 = MEMORY[0x1E4FBC870];
  id v1 = *(void **)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_progressivePersonalization);
  if (!v2)
  {
    uint64_t v3 = 0xD00000000000002DLL;
    uint64_t v4 = "user-info-progressive-personalization-unknown";
    goto LABEL_7;
  }
  if (v2 == (id)1)
  {
    uint64_t v3 = 0xD00000000000002FLL;
    uint64_t v4 = "user-info-progressive-personalization-opted-out";
    goto LABEL_7;
  }
  if (v2 == (id)2)
  {
    uint64_t v3 = 0xD00000000000002ELL;
    uint64_t v4 = "user-info-progressive-personalization-opted-in";
LABEL_7:
    sub_1BFEFFC1C(&v11, v3, (unint64_t)(v4 - 32) | 0x8000000000000000);
    swift_bridgeObjectRelease();
  }
  if (objc_msgSend(v1, sel_sportsSyncState) != (id)2
    || (id v5 = objc_msgSend(self, sel_sharedAccount),
        unsigned int v6 = objc_msgSend(v5, sel_isUserSignedInToiCloud),
        v5,
        !v6)
    || (id v7 = objc_msgSend(v1, sel_sportsOnboardingState)) == 0)
  {
    uint64_t v9 = 0xD00000000000001ELL;
    uint64_t v8 = 0x80000001C161B1C0;
    goto LABEL_14;
  }
  if (v7 == (id)1)
  {
    uint64_t v8 = 0x80000001C161B1E0;
    uint64_t v9 = 0xD00000000000001ALL;
LABEL_14:
    sub_1BFEFFC1C(&v11, v9, v8);
    swift_bridgeObjectRelease();
  }
  return v12;
}

unint64_t FeedKind.selector.getter()
{
  unint64_t result = *v0;
  switch(*v0)
  {
    case 1:
    case 0xD:
    case 0x13:
      unint64_t result = 0x6E696B2D64656566;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
    case 9:
    case 0x14:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000014;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xC:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000010;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x10:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x12:
      unint64_t result = 0xD000000000000019;
      break;
    case 0x15:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x16:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x17:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x18:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BFEE01D0()
{
  id v1 = objc_msgSend(objc_msgSend(*(id *)(*(void *)v0 + 16), sel_appConfiguration), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  id v2 = objc_msgSend(v1, sel_puzzleRanksByPuzzleTypeID);

  if (v2)
  {
    sub_1BFEE02A4();
    uint64_t v3 = sub_1C151E33C();

    return v3;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1E4FBC860];
    return sub_1C018EF9C(v5);
  }
}

void sub_1BFEE02A4()
{
  if (!qword_1EB863370)
  {
    sub_1BFC39268(255, (unint64_t *)&unk_1EB863390);
    unint64_t v0 = sub_1C151ED5C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB863370);
    }
  }
}

uint64_t sub_1BFEE030C(uint64_t a1, uint64_t a2)
{
  sub_1BFF14E68(0, (unint64_t *)&qword_1EB8813E0, (uint64_t (*)(void))sub_1C0068948, (uint64_t)&type metadata for FormatCodingEmptyNewsroomStrategy, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCodingDefault);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFEE03A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t FormatContent.Resolved.headlinesIncludingAuxiliaries.getter()
{
  type metadata accessor for FormatContent.Resolved();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C0BF0D44(v0);
  swift_bridgeObjectRelease();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t *)(v1 + 48);
    do
    {
      uint64_t v4 = *v3;
      uint64_t v5 = v3[1];
      uint64_t v6 = v3[2];
      uint64_t v7 = v3[3];
      uint64_t v8 = v3[4];
      uint64_t v9 = v3[5];
      uint64_t v10 = *(v3 - 1);
      v12[0] = *(v3 - 2);
      v12[1] = v10;
      v12[2] = v4;
      void v12[3] = v5;
      void v12[4] = v6;
      v12[5] = v7;
      v12[6] = v8;
      v12[7] = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BFECA848(&v13, (uint64_t)v12);
      v3 += 8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
    return v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t sub_1BFEE0654(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1C0EDFD18(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[8 * v9 + 4];
  if (a1 + 32 < v10 + (v8 << 6) && v10 < a1 + 32 + (v8 << 6)) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void *sub_1BFEE07AC(void *result, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = a4[3];
  uint64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    uint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v9 = a2;
    }
LABEL_8:
    uint64_t v10 = a4[2];
    if (v9 <= v10) {
      uint64_t v11 = a4[2];
    }
    else {
      uint64_t v11 = v9;
    }
    if (v11)
    {
      sub_1BFE9DFF4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (void *)swift_allocObject();
      int64_t v13 = _swift_stdlib_malloc_size(v12);
      uint64_t v14 = v13 - 32;
      if (v13 < 32) {
        uint64_t v14 = v13 + 31;
      }
      v12[2] = v10;
      void v12[3] = 2 * (v14 >> 6);
      int64_t v15 = v12 + 4;
      if (v7) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
      int64_t v15 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v12 != a4 || v15 >= &a4[8 * v10 + 4]) {
          memmove(v15, a4 + 4, v10 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BFEE08E4(0, v10, (unint64_t)v15, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFEE08E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void *_s17ResolvedContainerOwcp(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  sub_1BFEE0A78();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  return a1;
}

uint64_t sub_1BFEE0A78()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t (*sub_1BFEE0B10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12))()
{
  uint64_t v13 = v12;
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  uint64_t v60 = a1;
  uint64_t v18 = sub_1C151BDDC();
  uint64_t v65 = *(void *)(v18 - 8);
  uint64_t v66 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v64 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  char v63 = (char *)&v49 - v21;
  uint64_t v58 = sub_1C151BCEC();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v59 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a7;
  *(void *)&long long v68 = a7;
  *((void *)&v68 + 1) = a8;
  uint64_t v56 = a8;
  uint64_t v53 = a11;
  uint64_t v69 = a11;
  uint64_t v70 = a12;
  uint64_t v54 = a12;
  uint64_t v23 = sub_1C151A79C();
  uint64_t v50 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v49 - v24;
  *(void *)&long long v68 = a5;
  *((void *)&v68 + 1) = a6;
  uint64_t v51 = a9;
  uint64_t v69 = a9;
  uint64_t v70 = a10;
  uint64_t v52 = a10;
  uint64_t v26 = sub_1C151CC9C();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v49 - v28;
  if (swift_conformsToProtocol2()) {
    uint64_t v30 = a6;
  }
  else {
    uint64_t v30 = 0;
  }
  if (v30 && (swift_conformsToProtocol2() ? (uint64_t v31 = a5) : (uint64_t v31 = 0), v31))
  {
    if (sub_1C151B60C())
    {
      if (qword_1EB87B058 != -1) {
        swift_once();
      }
      id v32 = (id)qword_1EB93C6F8;
      sub_1C151F38C();
      sub_1C15197BC();

      return (uint64_t (*)())nullsub_1;
    }
    else
    {
      *(void *)&long long v68 = a5;
      *((void *)&v68 + 1) = a6;
      uint64_t v69 = v55;
      uint64_t v70 = v56;
      uint64_t v71 = v51;
      uint64_t v72 = v52;
      uint64_t v73 = v53;
      uint64_t v74 = v54;
      type metadata accessor for FeedAdPipelineProcessorTask();
      uint64_t v56 = v13[4];
      uint64_t v55 = v13[5];
      sub_1BFC66384((uint64_t)(v13 + 6), (uint64_t)&v68);
      uint64_t v54 = v13[11];
      sub_1BFC66384((uint64_t)(v13 + 12), (uint64_t)v67);
      uint64_t v34 = v13[17];
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v29, v60, v26);
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v25, v61, v23);
      uint64_t v35 = (uint64_t)v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v59, v62, v58);
      swift_allocObject();
      uint64_t v36 = sub_1C1360378(v56, v55, &v68, v54, v67, v34, (uint64_t)v29, (uint64_t)v25, v35);
      MEMORY[0x1C18C9C60](v13 + 2);
      v36[3] = v13[3];
      swift_unknownObjectWeakAssign();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_unknownObjectRelease();
      uint64_t v37 = v63;
      sub_1C151B5FC();
      uint64_t v39 = v64;
      uint64_t v38 = v65;
      uint64_t v40 = v66;
      (*(void (**)(char *, void, uint64_t))(v65 + 104))(v64, *MEMORY[0x1E4FACE20], v66);
      char v41 = sub_1C151BDCC();
      uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
      v42(v39, v40);
      v42(v37, v40);
      char v43 = 0;
      uint64_t v44 = 0;
      if (v41)
      {
        char v43 = sub_1C135E4C8();
        uint64_t v44 = v45;
      }
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v43;
      *(void *)(v46 + 24) = v44;
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = v46;
      *(void *)(v47 + 24) = v36;
      return sub_1C13613E4;
    }
  }
  else
  {
    uint64_t result = (uint64_t (*)())sub_1C152040C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BFEE1198(uint64_t a1)
{
  uint64_t v26 = a1;
  unint64_t v2 = (void *)*v1;
  uint64_t v3 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v24 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = v2[11];
  uint64_t v6 = v2[15];
  uint64_t v7 = sub_1C151A31C();
  MEMORY[0x1F4188790](v7);
  sub_1BFEE1610(0, &qword_1EB873480, (void (*)(uint64_t))type metadata accessor for FeedItem);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v25 = type metadata accessor for FeedItem(0);
  uint64_t v11 = *(void *)(v25 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v25);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v23 - v15;
  uint64_t v17 = v2[14];
  uint64_t v27 = v2[10];
  uint64_t v28 = v5;
  uint64_t v29 = v17;
  uint64_t v30 = v6;
  sub_1C151CC9C();
  sub_1C151CCAC();
  sub_1BFEE195C();
  if (!swift_dynamicCast())
  {
    uint64_t v33 = 0;
    long long v31 = 0u;
    long long v32 = 0u;
    sub_1C002C7FC((uint64_t)&v31, &qword_1EA198198, (void (*)(uint64_t))sub_1BFEE195C);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, 1, 1, v25);
    return sub_1C002C7FC((uint64_t)v10, &qword_1EB873480, (void (*)(uint64_t))type metadata accessor for FeedItem);
  }
  uint64_t v18 = v24;
  uint64_t v19 = *((void *)&v32 + 1);
  uint64_t v20 = v33;
  __swift_project_boxed_opaque_existential_1(&v31, *((uint64_t *)&v32 + 1));
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  uint64_t v21 = v25;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v21) == 1) {
    return sub_1C002C7FC((uint64_t)v10, &qword_1EB873480, (void (*)(uint64_t))type metadata accessor for FeedItem);
  }
  sub_1BFEE3280((uint64_t)v10, (uint64_t)v16, type metadata accessor for FeedItem);
  sub_1BFEEB064((uint64_t)v16, (uint64_t)v14, type metadata accessor for FeedItem);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_1BFEE3280((uint64_t)v14, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    sub_1BFEF03A4(v18, v26);
    sub_1BFEE189C((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    return sub_1BFEE189C((uint64_t)v16, type metadata accessor for FeedItem);
  }
  else
  {
    sub_1BFEE189C((uint64_t)v16, type metadata accessor for FeedItem);
    return sub_1BFEE189C((uint64_t)v14, type metadata accessor for FeedItem);
  }
}

void sub_1BFEE1610(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEE1664(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE16C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEE171C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE1780(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEE17D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE1838(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFEE189C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE18FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1BFEE195C()
{
  unint64_t result = qword_1EB872840;
  if (!qword_1EB872840)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB872840);
  }
  return result;
}

uint64_t sub_1BFEE19B4(uint64_t a1)
{
  uint64_t v27 = a1;
  unint64_t v2 = (void *)*v1;
  uint64_t v3 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v25 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v2[11];
  uint64_t v6 = v2[15];
  uint64_t v7 = sub_1C151A31C();
  MEMORY[0x1F4188790](v7);
  sub_1BFEE16C8(0, &qword_1EB873480, (void (*)(uint64_t))type metadata accessor for FeedItem);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v26 = type metadata accessor for FeedItem(0);
  uint64_t v11 = *(void *)(v26 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v26);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = v2[14];
  uint64_t v28 = v2[10];
  uint64_t v29 = v5;
  uint64_t v30 = v17;
  uint64_t v31 = v6;
  sub_1C151CC9C();
  sub_1C151CCAC();
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB872840);
  if (!swift_dynamicCast())
  {
    uint64_t v34 = 0;
    long long v32 = 0u;
    long long v33 = 0u;
    sub_1BFE4D118((uint64_t)&v32, &qword_1EA198198, (unint64_t *)&qword_1EB872840);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, 1, 1, v26);
    return sub_1BFEE4A2C((uint64_t)v10, &qword_1EB873480, (void (*)(uint64_t))type metadata accessor for FeedItem);
  }
  uint64_t v18 = (uint64_t)v16;
  uint64_t v19 = (uint64_t)v25;
  uint64_t v20 = *((void *)&v33 + 1);
  uint64_t v21 = v34;
  __swift_project_boxed_opaque_existential_1(&v32, *((uint64_t *)&v33 + 1));
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  uint64_t v22 = v26;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v22) == 1) {
    return sub_1BFEE4A2C((uint64_t)v10, &qword_1EB873480, (void (*)(uint64_t))type metadata accessor for FeedItem);
  }
  sub_1BFEE3350((uint64_t)v10, v18, type metadata accessor for FeedItem);
  sub_1BFEEB134(v18, (uint64_t)v14, type metadata accessor for FeedItem);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_1BFEE3350((uint64_t)v14, v19, type metadata accessor for FeedHeadline);
    if ((*(unsigned char *)(v19 + 32) & 8) != 0) {
      sub_1C0A6DC14(v19, v27);
    }
    sub_1BFEE3040(v19, type metadata accessor for FeedHeadline);
    return sub_1BFEE3040(v18, type metadata accessor for FeedItem);
  }
  else
  {
    sub_1BFEE3040(v18, type metadata accessor for FeedItem);
    return sub_1BFEE3040((uint64_t)v14, type metadata accessor for FeedItem);
  }
}

unint64_t sub_1BFEE1E48(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v110 = a1;
  uint64_t v3 = *v1;
  unint64_t v107 = v3;
  uint64_t v90 = sub_1C151D75C();
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v89 = (uint64_t)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v100 = (uint64_t)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1C151BEEC();
  uint64_t v95 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v94 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v103 = (uint64_t)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_1C151D76C();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v91 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_1C151D33C();
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v102 = (uint64_t)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v97);
  uint64_t v101 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE3558(0, &qword_1EB8715C8, MEMORY[0x1E4FAD280]);
  MEMORY[0x1F4188790](v13 - 8);
  char v106 = (char *)&v87 - v14;
  uint64_t v15 = sub_1C151C1DC();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v108 = v15;
  uint64_t v109 = v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v105 = (char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *((void *)v3 + 11);
  uint64_t v19 = *((void *)v3 + 15);
  uint64_t v20 = sub_1C151A31C();
  MEMORY[0x1F4188790](v20);
  sub_1BFEE3558(0, &qword_1EB873480, (void (*)(uint64_t))type metadata accessor for FeedItem);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v87 - v22;
  uint64_t v24 = type metadata accessor for FeedItem(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v104 = (uint64_t)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v87 - v28;
  uint64_t v30 = *((void *)v3 + 14);
  uint64_t v111 = *((void *)v3 + 10);
  uint64_t v112 = v18;
  uint64_t v31 = v110;
  uint64_t v113 = v30;
  uint64_t v114 = v19;
  sub_1C151CC9C();
  sub_1C151CCAC();
  sub_1BFC845BC(0, (unint64_t *)&qword_1EB872840);
  if (!swift_dynamicCast())
  {
    uint64_t v117 = 0;
    long long v115 = 0u;
    long long v116 = 0u;
    sub_1BFE4D118((uint64_t)&v115, &qword_1EA198198, (unint64_t *)&qword_1EB872840);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
    goto LABEL_6;
  }
  uint64_t v32 = *((void *)&v116 + 1);
  uint64_t v33 = v117;
  __swift_project_boxed_opaque_existential_1(&v115, *((uint64_t *)&v116 + 1));
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v24);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v115);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
LABEL_6:
    uint64_t v39 = &qword_1EB873480;
    uint64_t v40 = (void (*)(uint64_t))type metadata accessor for FeedItem;
    uint64_t v41 = (uint64_t)v23;
    return sub_1BFEE4B44(v41, v39, v40);
  }
  uint64_t v34 = (uint64_t)v29;
  sub_1BFEE3488((uint64_t)v23, (uint64_t)v29, type metadata accessor for FeedItem);
  sub_1C151676C();
  long long v35 = *((_OWORD *)v107 + 8);
  long long v115 = *((_OWORD *)v107 + 6);
  long long v116 = v35;
  sub_1C151A79C();
  uint64_t v36 = v106;
  sub_1C151A77C();
  uint64_t v38 = v108;
  uint64_t v37 = v109;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v36, 1, v108) == 1)
  {
    sub_1BFEE3160((uint64_t)v29, type metadata accessor for FeedItem);
    uint64_t v39 = &qword_1EB8715C8;
    uint64_t v40 = (void (*)(uint64_t))MEMORY[0x1E4FAD280];
    uint64_t v41 = (uint64_t)v36;
    return sub_1BFEE4B44(v41, v39, v40);
  }
  char v43 = v105;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v105, v36, v38);
  uint64_t v44 = v104;
  sub_1BFEE6734(v34, v104);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 10:
      uint64_t v57 = v100;
      sub_1BFEE3488(v44, v100, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      uint64_t v58 = sub_1C151675C();
      uint64_t v59 = *(void *)(sub_1C151C1CC() + 16);
      swift_bridgeObjectRelease();
      if (v58 >= v59) {
        goto LABEL_29;
      }
      uint64_t v60 = sub_1C151C1CC();
      unint64_t result = sub_1C151675C();
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      if (result >= *(void *)(v60 + 16))
      {
LABEL_36:
        __break(1u);
        return result;
      }
      uint64_t v61 = v95;
      uint64_t v62 = v94;
      uint64_t v63 = v96;
      (*(void (**)(char *, unint64_t, uint64_t))(v95 + 16))(v94, v60+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * result, v96);
      swift_bridgeObjectRelease();
      char v64 = sub_1C151BEDC();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
      char v43 = v105;
      if ((v64 & 1) == 0) {
        goto LABEL_29;
      }
      uint64_t v65 = sub_1C151BCBC();
      if (v65)
      {
        uint64_t v66 = (void *)v65;
        uint64_t v67 = v89;
        sub_1C10FCE6C(v89);
        uint64_t v68 = v88;
        uint64_t v69 = v91;
        (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v91, v67, v90);
        uint64_t v70 = v92;
        (*(void (**)(char *, void, uint64_t))(v92 + 104))(v69, *MEMORY[0x1E4F7AD90], v93);
        objc_msgSend(v66, sel_frame);
        swift_beginAccess();
        sub_1C151D97C();
        swift_endAccess();

        (*(void (**)(char *, uint64_t))(v70 + 8))(v69, v93);
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v89, v90);
        uint64_t v71 = v100;
      }
      else
      {
LABEL_29:
        uint64_t v71 = v57;
      }
      sub_1BFEE3160(v71, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v38);
      return sub_1BFEE3160(v34, type metadata accessor for FeedItem);
    case 3:
      uint64_t v72 = v103;
      sub_1BFEE3488(v44, v103, type metadata accessor for FeedHeadline);
      uint64_t v73 = sub_1C151675C();
      uint64_t v74 = *(void *)(sub_1C151C1CC() + 16);
      swift_bridgeObjectRelease();
      if (v73 >= v74)
      {
LABEL_28:
        (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v38);
        sub_1BFEE3160(v34, type metadata accessor for FeedItem);
        return sub_1BFEE3160(v72, type metadata accessor for FeedHeadline);
      }
      uint64_t v75 = sub_1C151C1CC();
      unint64_t result = sub_1C151675C();
      if ((result & 0x8000000000000000) == 0)
      {
        if (result < *(void *)(v75 + 16))
        {
          uint64_t v76 = v95;
          unint64_t v77 = v94;
          uint64_t v78 = v96;
          (*(void (**)(char *, unint64_t, uint64_t))(v95 + 16))(v94, v75+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * result, v96);
          swift_bridgeObjectRelease();
          char v79 = sub_1C151BEDC();
          (*(void (**)(char *, uint64_t))(v76 + 8))(v77, v78);
          uint64_t v72 = v103;
          if (v79)
          {
            if (objc_msgSend(*(id *)(v103 + 40), sel_isDisplayingAsNativeAd))
            {
              uint64_t v80 = sub_1C151BCBC();
              if (v80)
              {
                long long v81 = (void *)v80;
                uint64_t v82 = *MEMORY[0x1E4F7AD88];
                uint64_t v83 = sub_1C151D74C();
                long long v84 = v91;
                (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 104))(v91, v82, v83);
                uint64_t v85 = v92;
                uint64_t v86 = v93;
                (*(void (**)(char *, void, uint64_t))(v92 + 104))(v84, *MEMORY[0x1E4F7ADC8], v93);
                objc_msgSend(v81, sel_frame);
                swift_beginAccess();
                sub_1C151D97C();
                swift_endAccess();

                (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v86);
                (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v38);
                sub_1BFEE3160(v34, type metadata accessor for FeedItem);
                return sub_1BFEE3160(v103, type metadata accessor for FeedHeadline);
              }
            }
          }
          goto LABEL_28;
        }
        goto LABEL_35;
      }
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    case 2:
      uint64_t v46 = v101;
      sub_1BFEE3488(v44, v101, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      uint64_t v47 = v102;
      sub_1C151DB8C();
      uint64_t v48 = v98;
      uint64_t v49 = v99;
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v98 + 88))(v47, v99) == *MEMORY[0x1E4F7A8C8])
      {
        (*(void (**)(uint64_t, uint64_t))(v48 + 96))(v47, v49);
        uint64_t v50 = (void *)sub_1C151BCBC();
        if (v50)
        {
          uint64_t v51 = v50;
          sub_1C10FCB20(v2, v31, v50);
          uint64_t v52 = *MEMORY[0x1E4F7AD88];
          uint64_t v53 = sub_1C151D74C();
          uint64_t v54 = v91;
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 104))(v91, v52, v53);
          uint64_t v55 = v92;
          uint64_t v56 = v93;
          (*(void (**)(char *, void, uint64_t))(v92 + 104))(v54, *MEMORY[0x1E4F7ADC8], v93);
          swift_beginAccess();
          sub_1C151D97C();
          swift_endAccess();

          (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);
          sub_1BFEE3160(v101, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
          (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v38);
          sub_1BFEE3160(v34, type metadata accessor for FeedItem);
          return __swift_destroy_boxed_opaque_existential_1(v102);
        }
        else
        {
          sub_1BFEE3160(v46, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
          (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v38);
          sub_1BFEE3160(v34, type metadata accessor for FeedItem);
          return __swift_destroy_boxed_opaque_existential_1(v47);
        }
      }
      else
      {
        sub_1BFEE3160(v46, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v38);
        sub_1BFEE3160(v34, type metadata accessor for FeedItem);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
      }
    default:
      (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v38);
      sub_1BFEE3160(v34, type metadata accessor for FeedItem);
      return sub_1BFEE3160(v44, type metadata accessor for FeedItem);
  }
}

uint64_t sub_1BFEE2FE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE3040(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE30A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE3100(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE3160(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE31C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE3220(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE3280(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEE32E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEE3350(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEE33B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEE3420(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEE3488(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEE34F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1BFEE3558(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *initializeWithCopy for FormatContent(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C151631C();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)((char *)a1 + v20);
  uint64_t v23 = (void *)((char *)a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (void *)((char *)a1 + v21);
  uint64_t v26 = (void *)((char *)a2 + v21);
  uint64_t v27 = v26[1];
  void *v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a3[10];
  __dst = (char *)a1 + v28;
  uint64_t v29 = (char *)a2 + v28;
  uint64_t v30 = sub_1C151D6DC();
  uint64_t v36 = *(void *)(v30 - 8);
  uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v37(v29, 1, v30))
  {
    sub_1BFEC0BBC(0, (unint64_t *)&unk_1EB882A00, MEMORY[0x1E4F7ACE8], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(__dst, v29, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(__dst, 0, 1, v30);
  }
  uint64_t v32 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v32) = *(void *)((char *)a2 + v32);
  uint64_t v33 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  *(void *)((char *)a1 + v33) = *(void *)((char *)a2 + v33);
  uint64_t v34 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *(void *)((char *)a1 + v34) = *(void *)((char *)a2 + v34);
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BFEE3854(uint64_t a1)
{
}

uint64_t sub_1BFEE3888(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  id v89 = a5;
  uint64_t v107 = a4;
  uint64_t v113 = a2;
  uint64_t v114 = a1;
  uint64_t v14 = *a3;
  uint64_t v15 = *a3;
  uint64_t v16 = sub_1C151D45C();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v88 = (uint64_t)v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_1C151D49C();
  uint64_t v91 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v90 = (char *)v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = a3;
  uint64_t v19 = *(void *)(v14 + 120);
  uint64_t v104 = *(void *)(v14 + 88);
  uint64_t v103 = v19;
  uint64_t v102 = sub_1C151A31C();
  MEMORY[0x1F4188790](v102);
  uint64_t v101 = (char *)v84 - v20;
  sub_1BFEE4C70(0);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v100 = (char *)v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for FeedItem(0);
  uint64_t v96 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v95 = (uint64_t)v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_1C151BEEC();
  uint64_t v24 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v26 = (char *)v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_1C151C1DC();
  char v106 = *(void (***)(char *, uint64_t))(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v28 = (char *)v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_1C151677C();
  uint64_t v97 = *(void (***)(void, void, void, void))(v109 - 8);
  MEMORY[0x1F4188790](v109);
  long long v115 = (char *)v84 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v30 = *(_OWORD *)(v15 + 96);
  uint64_t v105 = v15;
  long long v31 = *(_OWORD *)(v15 + 128);
  long long v120 = v30;
  long long v121 = v31;
  uint64_t v32 = sub_1C151B67C();
  swift_getWitnessTable();
  uint64_t v33 = sub_1C151E4DC();
  uint64_t v108 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  long long v35 = (char *)v84 - v34;
  swift_getWitnessTable();
  uint64_t v36 = sub_1C152037C();
  uint64_t v94 = *(void *)(v36 - 8);
  uint64_t v37 = MEMORY[0x1F4188790](v36);
  uint64_t v39 = (char *)v84 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v37);
  uint64_t v41 = (char *)v84 - v40;
  uint64_t v111 = v32;
  sub_1C151F17C();
  uint64_t v42 = v108;
  (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v39, v35, v33);
  MEMORY[0x1C18C5FE0](&v120, v33);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v33);
  *(void *)&v39[*(int *)(v36 + 36)] = v120;
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v41, v39, v36);
  uint64_t v92 = v36;
  char v43 = &v41[*(int *)(v36 + 36)];
  uint64_t v44 = *(void *)(*v93 + 144);
  uint64_t v45 = *(void *)(*v93 + 160);
  unint64_t v46 = *(void *)v43;
  sub_1C151E4BC();
  if (v46 == (void)v120) {
    return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v41, v92);
  }
  uint64_t v85 = (unint64_t *)(v107 + 16);
  uint64_t v98 = (char *)v93 + v44;
  uint64_t v86 = (char *)v93 + v45;
  uint64_t v48 = (uint64_t (**)(char *, uint64_t))(v106 + 1);
  uint64_t v108 = v24 + 16;
  uint64_t v107 = v24 + 8;
  char v106 = (void (**)(char *, uint64_t))(v97 + 1);
  uint64_t v97 = (void (**)(void, void, void, void))(v96 + 7);
  v96 += 6;
  v84[2] = (id)(v91 + 32);
  while (1)
  {
    sub_1C151E4CC();
    MEMORY[0x1C18BE280](v46, v113);
    sub_1C151B65C();
    uint64_t v50 = sub_1C151C1CC();
    uint64_t result = (*v48)(v28, v112);
    if ((v46 & 0x8000000000000000) != 0) {
      break;
    }
    if (v46 >= *(void *)(v50 + 16)) {
      goto LABEL_28;
    }
    uint64_t v51 = v43;
    uint64_t v52 = v110;
    (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))(v26, v50+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v46, v110);
    swift_bridgeObjectRelease();
    char v53 = sub_1C151BEDC();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v52);
    if ((v53 & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v54 = *(void *)(v105 + 112);
    uint64_t v116 = *(void *)(v105 + 80);
    uint64_t v117 = v104;
    uint64_t v118 = v54;
    uint64_t v119 = v103;
    sub_1C151CC9C();
    sub_1C151CCAC();
    sub_1BFC845BC(0, (unint64_t *)&qword_1EB872840);
    if (!swift_dynamicCast())
    {
      uint64_t v122 = 0;
      long long v120 = 0u;
      long long v121 = 0u;
      sub_1C124CD08((uint64_t)&v120, &qword_1EA198198, (unint64_t *)&qword_1EB872840, (uint64_t)&protocol descriptor for FeedItemRepresentable);
      uint64_t v59 = (uint64_t)v100;
      (*v97)(v100, 1, 1, v99);
LABEL_25:
      (*v106)(v115, v109);
      sub_1BFEE4BA0(v59, (uint64_t (*)(void))sub_1BFEE4C70);
      goto LABEL_9;
    }
    uint64_t v56 = *((void *)&v121 + 1);
    uint64_t v55 = v122;
    __swift_project_boxed_opaque_existential_1(&v120, *((uint64_t *)&v121 + 1));
    uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    uint64_t v58 = v55;
    uint64_t v59 = (uint64_t)v100;
    v57(v56, v58);
    uint64_t v60 = v99;
    (*v97)(v59, 0, 1, v99);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
    if ((*v96)(v59, 1, v60) == 1) {
      goto LABEL_25;
    }
    uint64_t v61 = v59;
    uint64_t v62 = v95;
    sub_1BFEE4958(v61, v95);
    uint64_t v63 = (void *)FeedItem.headline.getter();
    if (v63)
    {
      char v64 = v63;
      if ((objc_msgSend(v63, sel_isDisplayingAsNativeAd) & 1) == 0)
      {
        uint64_t v65 = (void *)sub_1C151BCBC();
        if (!v65)
        {
          swift_unknownObjectRelease();
          sub_1BFEE4BA0(v62, type metadata accessor for FeedItem);
          (*v106)(v115, v109);
          return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v41, v92);
        }
        uint64_t v66 = v65;
        objc_msgSend(v65, sel_frame);
        v124.origin.x = a6;
        v124.origin.y = a7;
        v124.size.width = a8;
        v124.size.height = a9;
        if (CGRectIntersectsRect(v123, v124))
        {
          swift_unknownObjectRetain();
          objc_msgSend(v89, sel_frame);
          CGFloat v68 = v67;
          CGFloat v70 = v69;
          CGFloat v72 = v71;
          CGFloat v74 = v73;
          v84[0] = v66;
          objc_msgSend(v66, sel_frame);
          sub_1BFEF1290(v88, v68, v70, v72, v74, v75, v76, v77, v78);
          sub_1C151D48C();
          char v79 = v85;
          swift_beginAccess();
          unint64_t v80 = *v79;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *char v79 = v80;
          v84[1] = v64;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v80 = sub_1BFEF1248(0, *(void *)(v80 + 16) + 1, 1, v80);
            *uint64_t v85 = v80;
          }
          unint64_t v83 = *(void *)(v80 + 16);
          unint64_t v82 = *(void *)(v80 + 24);
          if (v83 >= v82 >> 1)
          {
            unint64_t v80 = sub_1BFEF1248(v82 > 1, v83 + 1, 1, v80);
            *uint64_t v85 = v80;
          }
          *(void *)(v80 + 16) = v83 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v91 + 32))(v80+ ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))+ *(void *)(v91 + 72) * v83, v90, v87);
          swift_endAccess();

          swift_unknownObjectRelease();
          uint64_t v49 = v95;
          goto LABEL_7;
        }
      }
      swift_unknownObjectRelease();
    }
    uint64_t v49 = v62;
LABEL_7:
    sub_1BFEE4BA0(v49, type metadata accessor for FeedItem);
LABEL_8:
    (*v106)(v115, v109);
LABEL_9:
    char v43 = v51;
    unint64_t v46 = *(void *)v51;
    sub_1C151E4BC();
    if (v46 == (void)v120) {
      return (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v41, v92);
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1BFEE45E8(uint64_t a1, uint64_t a2)
{
  return BlueprintItem<>.feedItem.getter(a1, *(void *)(a2 - 8));
}

uint64_t FeedItem.headline.getter()
{
  uint64_t v1 = v0;
  sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v17 - v3;
  uint64_t v5 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FeedHeadline(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v1, (uint64_t)v14, type metadata accessor for FeedItem);
  uint64_t v15 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      sub_1BFEEFA80((uint64_t)v14, (uint64_t)v11, type metadata accessor for FeedHeadline);
      uint64_t v15 = *((void *)v11 + 5);
      swift_unknownObjectRetain();
      sub_1BFEEB3A0((uint64_t)v11, type metadata accessor for FeedHeadline);
      break;
    case 4u:
      sub_1BFEEFA80((uint64_t)v14, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      sub_1BFEDD238((uint64_t)&v7[*(int *)(v5 + 48)], (uint64_t)v4, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
      sub_1BFEEB3A0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
      {
        sub_1BFEDD9AC((uint64_t)v4, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline);
        goto LABEL_3;
      }
      uint64_t v15 = *((void *)v4 + 5);
      swift_unknownObjectRetain();
      sub_1BFEEB3A0((uint64_t)v4, type metadata accessor for FeedHeadline);
      break;
    case 0x11u:
      return v15;
    default:
      sub_1BFEEB3A0((uint64_t)v14, type metadata accessor for FeedItem);
LABEL_3:
      uint64_t v15 = 0;
      break;
  }
  return v15;
}

uint64_t sub_1BFEE4958(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFEE49BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEE1664(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFEE4A2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEE16C8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFEE4A88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE4AE8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEE1780(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFEE4B44(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEE3558(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFEE4BA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE4C00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEE17D4(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BFEE4C70(uint64_t a1)
{
}

uint64_t static FeedModel.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  uint64_t v8 = (int *)type metadata accessor for FeedModel();
  uint64_t v9 = *((void *)v8 - 1);
  MEMORY[0x1F4188790](v8);
  uint64_t v47 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  unint64_t v46 = (char *)&v46 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v50 = (char *)&v46 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v48 = (char *)&v46 - v16;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v46 - v18;
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v46 - v21;
  char v23 = sub_1C151E5CC();
  uint64_t v24 = *(void (**)(char *, uint64_t, int *))(v9 + 16);
  uint64_t v51 = a1;
  v24(v22, a1, v8);
  uint64_t v49 = a2;
  v24(v19, a2, v8);
  BOOL v25 = (v23 & 1) != 0 && _s8NewsFeed0B7ContextV2eeoiySbAC_ACtFZ_0((uint64_t)&v22[v8[13]], (uint64_t)&v19[v8[13]]);
  uint64_t v26 = v48;
  uint64_t v27 = *(void (**)(char *, int *))(v9 + 8);
  v27(v19, v8);
  v27(v22, v8);
  uint64_t v28 = v51;
  v24(v26, v51, v8);
  uint64_t v30 = v49;
  uint64_t v29 = v50;
  v24(v50, v49, v8);
  if (v25)
  {
    uint64_t v31 = v8[14];
    uint64_t v32 = &v26[v31];
    uint64_t v33 = *(void *)&v26[v31 + 8];
    uint64_t v34 = &v29[v31];
    uint64_t v35 = *((void *)v34 + 1);
    if (v33)
    {
      if (v35)
      {
        if (*(void *)v32 != *(void *)v34 || v33 != v35)
        {
          char v37 = sub_1C1520A9C();
          swift_bridgeObjectRetain();
          v27(v29, v8);
          v27(v26, v8);
          swift_bridgeObjectRelease();
          uint64_t v38 = v46;
          v24(v46, v51, v8);
          uint64_t v39 = v47;
          v24(v47, v30, v8);
          char v40 = 0;
          if ((v37 & 1) == 0) {
            goto LABEL_22;
          }
          goto LABEL_21;
        }
        swift_bridgeObjectRetain();
        v27(v29, v8);
        v27(v26, v8);
        swift_bridgeObjectRelease();
LABEL_20:
        uint64_t v38 = v46;
        v24(v46, v51, v8);
        uint64_t v39 = v47;
        v24(v47, v30, v8);
LABEL_21:
        uint64_t v41 = v8[15];
        uint64_t v42 = *(uint64_t (**)(char *, char *))&v38[v8[16]];
        char v43 = &v38[v41];
        uint64_t v44 = &v39[v41];
        swift_retain();
        char v40 = v42(v43, v44);
        swift_release();
        goto LABEL_22;
      }
      swift_bridgeObjectRetain();
      v27(v29, v8);
      v27(v26, v8);
    }
    else
    {
      swift_bridgeObjectRetain();
      v27(v29, v8);
      v27(v26, v8);
      if (!v35) {
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = v46;
    uint64_t v39 = v47;
    uint64_t v28 = v51;
  }
  else
  {
    v27(v29, v8);
    v27(v26, v8);
    uint64_t v38 = v46;
    uint64_t v39 = v47;
  }
  v24(v38, v28, v8);
  v24(v39, v30, v8);
  char v40 = 0;
LABEL_22:
  v27(v39, v8);
  v27(v38, v8);
  return v40 & 1;
}

uint64_t sub_1BFEE518C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = sub_1C151631C();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 | 7) + v6;
  uint64_t v61 = a1;
  uint64_t v11 = (void *)((v10 + a1) & ~(v9 | 7));
  uint64_t v12 = (void **)((v10 + a2) & ~(v9 | 7));
  uint64_t v13 = *v12;
  *uint64_t v11 = *v12;
  uint64_t v14 = v9 + 8;
  uint64_t v58 = v12;
  uint64_t v59 = v11;
  __dst = (void *)(((unint64_t)v11 + v9 + 8) & ~(v9 | 7));
  uint64_t v15 = (void *)(((unint64_t)v12 + v9 + 8) & ~(v9 | 7));
  uint64_t v16 = *(unsigned int *)(v8 + 84);
  uint64_t v17 = *(void *)(v8 + 64);
  uint64_t v18 = ((unint64_t)v15 + v9 + 8) & ~v9;
  id v19 = v13;
  if (v16 >= 0x7FFFFFFF)
  {
    uint64_t v20 = __dst;
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(((unint64_t)v15 + v9 + 8) & ~v9, v16, v7))goto LABEL_6; {
LABEL_5:
    }
    size_t v21 = ((((v17 + 9 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
    memcpy(v20, v15, v21);
    goto LABEL_7;
  }
  uint64_t v20 = __dst;
  if ((*(void *)((v17 + 9 + v18) & 0xFFFFFFFFFFFFFFF8) >> 1) >= 0x80000001) {
    goto LABEL_5;
  }
LABEL_6:
  *uint64_t v20 = *v15;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v20 + v14) & ~v9, ((unint64_t)v15 + v9 + 8) & ~v9, v7);
  uint64_t v22 = (unsigned char *)((((unint64_t)v20 + v14) & ~v9) + v17);
  *uint64_t v22 = *(unsigned char *)(v18 + v17);
  v22[1] = *(unsigned char *)(v18 + v17 + 1);
  char v23 = (_OWORD *)((unint64_t)(v22 + 9) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (_OWORD *)((v18 + v17 + 9) & 0xFFFFFFFFFFFFFFF8);
  *char v23 = *v24;
  unint64_t v25 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v25 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(unsigned char *)(v25 + 9) = *(unsigned char *)(v26 + 9);
  swift_bridgeObjectRetain();
  size_t v21 = ((((v17 + 9 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 10;
LABEL_7:
  uint64_t v27 = (char *)v20 + v21;
  *uint64_t v27 = *((unsigned char *)v15 + v21);
  *(unsigned char *)(((unint64_t)v20 + v21) | 1) = *(unsigned char *)(((unint64_t)v15 + v21) | 1);
  v27[2] = *((unsigned char *)v15 + v21 + 2);
  v27[3] = *((unsigned char *)v15 + v21 + 3);
  uint64_t v28 = (void *)(((unint64_t)v15 + v21 + 11) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)(((unint64_t)v20 + v21 + 11) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v29 = *v28;
  uint64_t v30 = (void *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *v31;
  unint64_t v32 = ((unint64_t)v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = ((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = *(void *)(v33 + 8);
  if (v34 >= 0xFFFFFFFF) {
    LODWORD(v34) = -1;
  }
  unsigned int v35 = v34 + 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35 > 1)
  {
    *(_OWORD *)unint64_t v32 = *(_OWORD *)v33;
  }
  else
  {
    *(void *)unint64_t v32 = *(void *)v33;
    *(void *)(v32 + 8) = *(void *)(v33 + 8);
    swift_bridgeObjectRetain();
  }
  *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
  uint64_t v36 = (void *)(((unint64_t)v30 + 39) & 0xFFFFFFFFFFFFFFF8);
  char v37 = (void **)(((unint64_t)v31 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v38 = *v37;
  *uint64_t v36 = *v37;
  uint64_t v39 = (void *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  char v40 = (void *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  unint64_t v41 = (((((((((v14 & ~(v9 | 7)) + v21 + 11) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v42 = (void *)((char *)v59 + v41);
  char v43 = (void **)((char *)v58 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  uint64_t v44 = *(void *)(a3 + 24);
  uint64_t v45 = *(void *)(v44 - 8);
  unint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16);
  uint64_t v47 = v45 + 16;
  uint64_t v48 = *(unsigned __int8 *)(v45 + 80);
  uint64_t v49 = ((unint64_t)v42 + v48 + 16) & ~v48;
  uint64_t v50 = ((unint64_t)v43 + v48 + 16) & ~v48;
  id v51 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46(v49, v50, v44);
  uint64_t v52 = *(void *)(v47 + 48) + 7;
  uint64_t v53 = (void *)((v52 + v49) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v54 = (void *)((v52 + v50) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  swift_retain();
  return v61;
}

uint64_t BlueprintItem<>.feedItem.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C151A30C();
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(v3, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BFEE568C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = sub_1C151631C();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (id *)((v4 + a1 + (v7 | 7)) & ~(v7 | 7));

  uint64_t v15 = v8;
  uint64_t v9 = ((unint64_t)v8 + v7 + 8) & ~(v7 | 7);
  uint64_t v10 = *(void *)(v6 + 64) + 9;
  unint64_t v11 = (((v10 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (*(_DWORD *)(v6 + 84) < 0x7FFFFFFFu)
  {
    if ((*(void *)((v10 + ((v7 + 8 + v9) & ~v7)) & 0xFFFFFFFFFFFFFFF8) >> 1) >= 0x80000001) {
      goto LABEL_6;
    }
  }
  else if ((*(unsigned int (**)(uint64_t))(v6 + 48))((v7 + 8 + v9) & ~v7))
  {
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))((v7 + 8 + v9) & ~v7, v5);
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = ((((v11 + v9 + 21) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15;
  LODWORD(v13) = -1;
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFFF8) + 8);
  }
  if ((v13 + 1) <= 1) {
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))(((unint64_t)v15
                                                                                            + ((((((((((v7 + 8) & ~(v7 | 7)) + v11 + 21) & 0xFFFFFFFFFFFFFFF8)
                                                                                                  + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                                                + 39) & 0xFFFFFFFFFFFFFFF8)
                                                                                              + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)
                                                                                            + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
  return swift_release();
}

uint64_t type metadata accessor for FeedModel()
{
  return swift_getGenericMetadata();
}

BOOL _s8NewsFeed0B7ContextV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BundleSession();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (int **)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C02DE9E8();
  uint64_t v8 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C046D828(0, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (int **)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v44 - v15;
  MEMORY[0x1F4188790](v17);
  id v19 = (char *)&v44 - v18;
  sub_1BFC39268(0, (unint64_t *)&qword_1EB87A330);
  if ((sub_1C151FB6C() & 1) == 0) {
    return 0;
  }
  uint64_t v20 = type metadata accessor for FeedContext();
  uint64_t v21 = *(int *)(v20 + 20);
  uint64_t v45 = a1;
  sub_1C046AAA8(a1 + v21, (uint64_t)v19);
  uint64_t v44 = (int *)v20;
  uint64_t v22 = *(int *)(v20 + 20);
  uint64_t v46 = a2;
  sub_1C046AAA8(a2 + v22, (uint64_t)v16);
  uint64_t v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1C046AAA8((uint64_t)v19, (uint64_t)v10);
  sub_1C046AAA8((uint64_t)v16, v23);
  uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v10, 1, v4) != 1)
  {
    sub_1C046AAA8((uint64_t)v10, (uint64_t)v13);
    if (v24(v23, 1, v4) != 1)
    {
      unint64_t v25 = v47;
      sub_1C046D7C4(v23, (uint64_t)v47);
      char v26 = _s8NewsFeed13BundleSessionV2eeoiySbAC_ACtFZ_0(v13, v25);
      sub_1C046C7E0((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for BundleSession);
      sub_1BFEC08C8((uint64_t)v16, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      sub_1BFEC08C8((uint64_t)v19, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      sub_1C046C7E0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for BundleSession);
      sub_1BFEC08C8((uint64_t)v10, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
      if ((v26 & 1) == 0) {
        return 0;
      }
      goto LABEL_9;
    }
    sub_1BFEC08C8((uint64_t)v16, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
    sub_1BFEC08C8((uint64_t)v19, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
    sub_1C046C7E0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for BundleSession);
LABEL_7:
    sub_1C046C7E0((uint64_t)v10, (uint64_t (*)(void))sub_1C02DE9E8);
    return 0;
  }
  sub_1BFEC08C8((uint64_t)v16, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
  sub_1BFEC08C8((uint64_t)v19, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
  if (v24(v23, 1, v4) != 1) {
    goto LABEL_7;
  }
  sub_1BFEC08C8((uint64_t)v10, &qword_1EB8942F0, (void (*)(uint64_t))type metadata accessor for BundleSession);
LABEL_9:
  uint64_t v28 = v44;
  uint64_t v27 = v45;
  uint64_t v29 = v46;
  if (*(unsigned __int8 *)(v45 + v44[6]) != *(unsigned __int8 *)(v46 + v44[6])) {
    return 0;
  }
  if (*(unsigned __int8 *)(v45 + v44[7]) != *(unsigned __int8 *)(v46 + v44[7])) {
    return 0;
  }
  if (*(unsigned __int8 *)(v45 + v44[8]) != *(unsigned __int8 *)(v46 + v44[8])) {
    return 0;
  }
  if (*(unsigned __int8 *)(v45 + v44[9]) != *(unsigned __int8 *)(v46 + v44[9])) {
    return 0;
  }
  if ((sub_1BFEFAE14(*(void *)(v45 + v44[10]), *(void *)(v46 + v44[10])) & 1) == 0) {
    return 0;
  }
  if ((sub_1BFEC3898(*(void *)(v27 + v28[11]), *(void *)(v29 + v28[11])) & 1) == 0) {
    return 0;
  }
  uint64_t v30 = v28[12];
  long long v31 = *(_OWORD *)(v27 + v30);
  long long v48 = *(_OWORD *)(v29 + v30);
  long long v49 = v31;
  if ((_s8NewsFeed0B8PlatformO2eeoiySbAC_ACtFZ_0((uint64_t *)&v49, (uint64_t *)&v48) & 1) == 0
    || *(unsigned __int8 *)(v27 + v28[13]) != *(unsigned __int8 *)(v29 + v28[13]))
  {
    return 0;
  }
  uint64_t v33 = v28[14];
  unint64_t v34 = *(void **)(v27 + v33);
  unsigned int v35 = *(void **)(v29 + v33);
  if (v34)
  {
    if (!v35) {
      return 0;
    }
    sub_1BFC39268(0, &qword_1EB86B458);
    id v36 = v35;
    id v37 = v34;
    char v38 = sub_1C151FB6C();

    if ((v38 & 1) == 0) {
      return 0;
    }
  }
  else if (v35)
  {
    return 0;
  }
  uint64_t v39 = v28[15];
  uint64_t v40 = *(void *)(v27 + v39);
  unint64_t v41 = *(void **)(v27 + v39 + 8);
  uint64_t v42 = (uint64_t *)(v46 + v39);
  char v43 = (void *)v42[1];
  return (sub_1BFEE6060(v40, *v42) & 1) != 0 && sub_1BFEE5EC4(v41, v43);
}

BOOL sub_1BFEE5EC4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[5];
  char v7 = sub_1C00F19FC(a1[4], a2[4]);
  BOOL result = 0;
  if ((v7 & 1) != 0 && v5 == v6)
  {
    uint64_t v9 = 1;
    do
    {
      BOOL result = v9 == v2;
      if (v9 == v2) {
        break;
      }
      uint64_t v10 = &a1[2 * v9 + 4];
      uint64_t v11 = *v10;
      uint64_t v12 = &a2[2 * v9 + 4];
      uint64_t v13 = *v12;
      uint64_t v14 = *(void *)(*v10 + 16);
      if (v14 != *(void *)(*v12 + 16)) {
        break;
      }
      uint64_t v15 = v10[1];
      uint64_t v16 = v12[1];
      if (v14) {
        BOOL v17 = v11 == v13;
      }
      else {
        BOOL v17 = 1;
      }
      if (!v17)
      {
        uint64_t v18 = v11 + 48;
        uint64_t v19 = v13 + 48;
        do
        {
          char v21 = *(unsigned char *)(v19 - 8);
          if (*(unsigned char *)(v18 - 8))
          {
            if (!*(unsigned char *)(v19 - 8)) {
              return 0;
            }
          }
          else
          {
            if (*(void *)(v18 - 16) != *(void *)(v19 - 16)) {
              char v21 = 1;
            }
            if (v21) {
              return 0;
            }
          }
          if (*(unsigned char *)(v18 + 8))
          {
            if (!*(unsigned char *)(v19 + 8)) {
              return 0;
            }
          }
          else
          {
            if (*(void *)v18 == *(void *)v19) {
              char v22 = *(unsigned char *)(v19 + 8);
            }
            else {
              char v22 = 1;
            }
            if (v22) {
              return 0;
            }
          }
          if (*(unsigned char *)(v18 + 24))
          {
            if (!*(unsigned char *)(v19 + 24)) {
              return 0;
            }
          }
          else
          {
            if (*(void *)(v18 + 16) == *(void *)(v19 + 16)) {
              char v23 = *(unsigned char *)(v19 + 24);
            }
            else {
              char v23 = 1;
            }
            if (v23) {
              return 0;
            }
          }
          if (*(unsigned char *)(v18 + 40))
          {
            if (!*(unsigned char *)(v19 + 40)) {
              return 0;
            }
          }
          else
          {
            if (*(void *)(v18 + 32) == *(void *)(v19 + 32)) {
              char v20 = *(unsigned char *)(v19 + 40);
            }
            else {
              char v20 = 1;
            }
            if (v20) {
              return 0;
            }
          }
          v19 += 64;
          v18 += 64;
        }
        while (--v14);
      }
      ++v9;
    }
    while (v15 == v16);
  }
  return result;
}

uint64_t sub_1BFEE6060(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    char v46 = *(unsigned char *)(a1 + 96);
    char v47 = *(unsigned char *)(a1 + 80);
    uint64_t v42 = *(void *)(a1 + 88);
    uint64_t v43 = *(void *)(a1 + 72);
    char v39 = *(unsigned char *)(a1 + 48);
    char v41 = *(unsigned char *)(a1 + 64);
    uint64_t v44 = *(void *)(a1 + 56);
    uint64_t v45 = *(void *)(a1 + 40);
    uint64_t v38 = *(void *)(a2 + 40);
    char v5 = *(unsigned char *)(a2 + 48);
    uint64_t v6 = *(void *)(a2 + 56);
    char v7 = *(unsigned char *)(a2 + 64);
    uint64_t v8 = *(void *)(a2 + 72);
    char v9 = *(unsigned char *)(a2 + 80);
    uint64_t v10 = *(void *)(a2 + 88);
    char v11 = *(unsigned char *)(a2 + 96);
    if (sub_1C00F19FC(*(void *)(a1 + 32), *(void *)(a2 + 32)))
    {
      uint64_t v12 = 1;
      uint64_t v13 = v42;
      char v14 = v39;
      char v15 = v41;
      uint64_t v16 = v10;
      char v17 = v11;
      uint64_t v18 = a2 + 32;
      char v19 = v9;
      uint64_t v20 = v8;
      char v21 = v7;
      uint64_t v22 = v6;
      char v23 = v5;
      uint64_t v24 = v38;
      while (1)
      {
        if (v14)
        {
          if ((v23 & 1) == 0) {
            return 0;
          }
        }
        else if (v23 & 1 | (v45 != v24))
        {
          return 0;
        }
        if (v15)
        {
          if ((v21 & 1) == 0) {
            return 0;
          }
        }
        else if (v21 & 1 | (v44 != v22))
        {
          return 0;
        }
        if (v47)
        {
          if ((v19 & 1) == 0) {
            return 0;
          }
        }
        else if (v19 & 1 | (v43 != v20))
        {
          return 0;
        }
        if (v46)
        {
          if ((v17 & 1) == 0) {
            return 0;
          }
        }
        else if (v17 & 1 | (v13 != v16))
        {
          return 0;
        }
        if (v12 == v2) {
          break;
        }
        uint64_t v25 = a1 + 32 + 72 * v12;
        uint64_t v26 = *(void *)v25;
        uint64_t v27 = (uint64_t *)(v18 + 72 * v12);
        uint64_t v28 = *v27;
        uint64_t v29 = *(void *)(*(void *)v25 + 16);
        if (v29 != *(void *)(*v27 + 16)) {
          return 0;
        }
        ++v12;
        uint64_t v45 = *(void *)(v25 + 8);
        char v14 = *(unsigned char *)(v25 + 16);
        uint64_t v44 = *(void *)(v25 + 24);
        char v15 = *(unsigned char *)(v25 + 32);
        uint64_t v43 = *(void *)(v25 + 40);
        uint64_t v13 = *(void *)(v25 + 56);
        char v46 = *(unsigned char *)(v25 + 64);
        char v47 = *(unsigned char *)(v25 + 48);
        uint64_t v24 = v27[1];
        char v23 = *((unsigned char *)v27 + 16);
        uint64_t v22 = v27[3];
        char v21 = *((unsigned char *)v27 + 32);
        uint64_t v20 = v27[5];
        char v19 = *((unsigned char *)v27 + 48);
        uint64_t v16 = v27[7];
        if (v29) {
          BOOL v30 = v26 == v28;
        }
        else {
          BOOL v30 = 1;
        }
        char v17 = *((unsigned char *)v27 + 64);
        if (!v30)
        {
          char v40 = v17;
          uint64_t v31 = v26 + 48;
          uint64_t v32 = v28 + 48;
          do
          {
            char v34 = *(unsigned char *)(v32 - 8);
            if (*(unsigned char *)(v31 - 8))
            {
              if (!*(unsigned char *)(v32 - 8)) {
                return 0;
              }
            }
            else
            {
              if (*(void *)(v31 - 16) != *(void *)(v32 - 16)) {
                char v34 = 1;
              }
              if (v34) {
                return 0;
              }
            }
            if (*(unsigned char *)(v31 + 8))
            {
              if (!*(unsigned char *)(v32 + 8)) {
                return 0;
              }
            }
            else
            {
              if (*(void *)v31 == *(void *)v32) {
                char v35 = *(unsigned char *)(v32 + 8);
              }
              else {
                char v35 = 1;
              }
              if (v35) {
                return 0;
              }
            }
            if (*(unsigned char *)(v31 + 24))
            {
              if (!*(unsigned char *)(v32 + 24)) {
                return 0;
              }
            }
            else
            {
              if (*(void *)(v31 + 16) == *(void *)(v32 + 16)) {
                char v36 = *(unsigned char *)(v32 + 24);
              }
              else {
                char v36 = 1;
              }
              if (v36) {
                return 0;
              }
            }
            if (*(unsigned char *)(v31 + 40))
            {
              if (!*(unsigned char *)(v32 + 40)) {
                return 0;
              }
            }
            else
            {
              if (*(void *)(v31 + 32) == *(void *)(v32 + 32)) {
                char v33 = *(unsigned char *)(v32 + 40);
              }
              else {
                char v33 = 1;
              }
              if (v33) {
                return 0;
              }
            }
            v32 += 64;
            v31 += 64;
            --v29;
          }
          while (v29);
          char v17 = v40;
        }
      }
      return 1;
    }
    return 0;
  }
  return 1;
}

uint64_t _s8NewsFeed0B8PlatformO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v3 != 1)
  {
    if (v3 == 2)
    {
      if (v5 == 2)
      {
        sub_1BFEE653C(*a1, 2);
        uint64_t v6 = v4;
        uint64_t v7 = 2;
        goto LABEL_10;
      }
    }
    else if (v3 == 3)
    {
      if (v5 == 3)
      {
        sub_1BFEE653C(*a1, 3);
        uint64_t v6 = v4;
        uint64_t v7 = 3;
LABEL_10:
        sub_1BFEE653C(v6, v7);
        return 1;
      }
    }
    else if ((unint64_t)(v5 - 1) >= 3)
    {
      if (v3)
      {
        if (!v5)
        {
          uint64_t v8 = *a2;
          uint64_t v9 = 0;
          goto LABEL_13;
        }
        if (v2 == v4 && v3 == v5)
        {
          sub_1BFE40340(*a1, v3);
          sub_1BFE40340(v2, v3);
          sub_1BFEE653C(v2, v3);
          uint64_t v6 = v2;
          uint64_t v7 = v3;
          goto LABEL_10;
        }
        char v11 = sub_1C1520A9C();
        sub_1BFE40340(v4, v5);
        sub_1BFE40340(v2, v3);
        sub_1BFEE653C(v2, v3);
        sub_1BFEE653C(v4, v5);
        if ((v11 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BFE40340(v4, v5);
        sub_1BFE40340(v2, 0);
        sub_1BFEE653C(v2, 0);
        sub_1BFEE653C(v4, v5);
        if (v5) {
          goto LABEL_14;
        }
      }
      return 1;
    }
LABEL_12:
    uint64_t v8 = *a2;
    uint64_t v9 = a2[1];
LABEL_13:
    sub_1BFE40340(v8, v9);
    sub_1BFE40340(v2, v3);
LABEL_14:
    sub_1BFEE653C(v2, v3);
    sub_1BFEE653C(v4, v5);
    return 0;
  }
  if (v5 != 1) {
    goto LABEL_12;
  }
  sub_1BFEE653C(*a1, 1);
  sub_1BFEE653C(v4, 1);
  return v5;
}

uint64_t sub_1BFEE653C(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BFEE6554(uint64_t a1)
{
}

uint64_t sub_1BFEE6588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for FeedItem(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a3 + 16))(a2, a3, v7);
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = 0;
    uint64_t v13 = v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v14 = *(void *)(v6 + 72);
    LOBYTE(v15) = 1;
    do
    {
      char v16 = v15;
      uint64_t v17 = v12;
      sub_1BFEE6734(v13, (uint64_t)v9);
      FeedItem.layoutDirection.getter(&v19);
      if (!v20) {
        uint64_t v12 = v19;
      }
      int v15 = (v20 & v15);
      if ((v20 & 1) == 0 && (v16 & 1) == 0)
      {
        if (v17 != v19)
        {
          swift_bridgeObjectRelease();
          sub_1BFEE6798((uint64_t)v9);
          return 0;
        }
        int v15 = 0;
        uint64_t v12 = v17;
      }
      sub_1BFEE6798((uint64_t)v9);
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    if (v15) {
      return sub_1C151768C();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1C151768C();
  }
  return v12;
}

uint64_t sub_1BFEE6734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFEE6798(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeedItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BFEE67F4(uint64_t a1, uint64_t a2)
{
  return BlueprintSection<>.feedItems.getter(a1, *(void *)(a2 - 8), *(void *)(a2 - 16));
}

uint64_t FeedItem.layoutDirection.getter@<X0>(void *a1@<X8>)
{
  CGFloat v76 = a1;
  uint64_t v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v75 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v13);
  int v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v75, (uint64_t)v18, type metadata accessor for FeedItem);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v24 = *((void *)v18 + 3);
      char v25 = v18[32];
      uint64_t v26 = *((void *)v18 + 9);
      unint64_t v27 = *((void *)v18 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFEEFC20(v26, v27);
      uint64_t v28 = v76;
      *CGFloat v76 = v24;
      *((unsigned char *)v28 + 8) = v25;
      return result;
    case 2:
      sub_1BFEEFA80((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      uint64_t v29 = &v15[*(int *)(v13 + 28)];
      uint64_t v30 = *(void *)v29;
      char v31 = v29[8];
      uint64_t result = sub_1BFEEB3A0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      uint64_t v32 = v76;
      *CGFloat v76 = v30;
      *((unsigned char *)v32 + 8) = v31;
      return result;
    case 3:
      sub_1BFEEFA80((uint64_t)v18, (uint64_t)v12, type metadata accessor for FeedHeadline);
      uint64_t v33 = *((void *)v12 + 2);
      char v34 = v12[24];
      char v35 = type metadata accessor for FeedHeadline;
      uint64_t v36 = (uint64_t)v12;
      goto LABEL_22;
    case 4:
      sub_1BFEEFA80((uint64_t)v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v33 = *((void *)v9 + 1);
      char v34 = v9[16];
      char v35 = (uint64_t (*)(void))type metadata accessor for FeedWebEmbed;
      uint64_t v36 = (uint64_t)v9;
      goto LABEL_22;
    case 5:
      long long v37 = *((_OWORD *)v18 + 7);
      long long v109 = *((_OWORD *)v18 + 6);
      v110[0] = v37;
      *(_OWORD *)((char *)v110 + 9) = *(_OWORD *)(v18 + 121);
      long long v38 = *((_OWORD *)v18 + 3);
      long long v105 = *((_OWORD *)v18 + 2);
      long long v106 = v38;
      long long v39 = *((_OWORD *)v18 + 5);
      long long v107 = *((_OWORD *)v18 + 4);
      long long v108 = v39;
      long long v40 = *((_OWORD *)v18 + 1);
      long long v103 = *(_OWORD *)v18;
      long long v104 = v40;
      uint64_t result = sub_1C01880A4((uint64_t)&v103);
      uint64_t v41 = v105;
      char v42 = BYTE8(v105);
      goto LABEL_25;
    case 6:
      sub_1C063FFF4((uint64_t)v18, (uint64_t)&v103);
      sub_1C024A070((uint64_t)&v103, (uint64_t)&v93);
      if (!v102)
      {
        long long v83 = v99;
        v84[0] = v100[0];
        *(_OWORD *)((char *)v84 + 9) = *(_OWORD *)((char *)v100 + 9);
        long long v79 = v95;
        long long v80 = v96;
        long long v81 = v97;
        long long v82 = v98;
        long long v77 = v93;
        long long v78 = v94;
        sub_1C01880A4((uint64_t)&v77);
        uint64_t v43 = v79;
        char v44 = BYTE8(v79);
        goto LABEL_27;
      }
      if (v102 == 1)
      {
        long long v91 = v99;
        v92[0] = v100[0];
        *(_OWORD *)((char *)v92 + 9) = *(_OWORD *)((char *)v100 + 9);
        long long v87 = v95;
        long long v88 = v96;
        long long v89 = v97;
        long long v90 = v98;
        v86[0] = v93;
        v86[1] = v94;
        sub_1C0A60978((uint64_t)v101, (uint64_t)&v77, (uint64_t)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEC62B8);
        sub_1C01B3B54((uint64_t)&v77);
        sub_1C01880A4((uint64_t)v86);
        uint64_t v43 = v87;
        char v44 = BYTE8(v87);
LABEL_27:
        double v71 = v76;
        *CGFloat v76 = v43;
        *((unsigned char *)v71 + 8) = v44;
        return sub_1C024A288((uint64_t)&v103);
      }
      long long v83 = v99;
      v84[0] = v100[0];
      v84[1] = v100[1];
      char v85 = v101[0];
      long long v79 = v95;
      long long v80 = v96;
      long long v81 = v97;
      long long v82 = v98;
      long long v77 = v93;
      long long v78 = v94;
      uint64_t v72 = v95;
      char v73 = BYTE8(v95);
      sub_1BFEA4290((uint64_t)&v77);
      CGFloat v74 = v76;
      *CGFloat v76 = v72;
      *((unsigned char *)v74 + 8) = v73;
      return sub_1C024A288((uint64_t)&v103);
    case 7:
      long long v45 = *((_OWORD *)v18 + 7);
      long long v109 = *((_OWORD *)v18 + 6);
      v110[0] = v45;
      v110[1] = *((_OWORD *)v18 + 8);
      LOBYTE(v111) = v18[144];
      long long v46 = *((_OWORD *)v18 + 3);
      long long v105 = *((_OWORD *)v18 + 2);
      long long v106 = v46;
      long long v47 = *((_OWORD *)v18 + 5);
      long long v107 = *((_OWORD *)v18 + 4);
      long long v108 = v47;
      long long v48 = *((_OWORD *)v18 + 1);
      long long v103 = *(_OWORD *)v18;
      long long v104 = v48;
      uint64_t v33 = v105;
      char v34 = BYTE8(v105);
      uint64_t result = sub_1BFEA4290((uint64_t)&v103);
      goto LABEL_23;
    case 8:
      uint64_t result = sub_1BFEEB3A0((uint64_t)v18, type metadata accessor for FeedItem);
      goto LABEL_16;
    case 9:
      uint64_t result = sub_1BFEEB3A0((uint64_t)v18, type metadata accessor for FeedItem);
      long long v49 = v76;
      *CGFloat v76 = 0;
      *((unsigned char *)v49 + 8) = 0;
      return result;
    case 10:
      sub_1BFEEFA80((uint64_t)v18, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      uint64_t v50 = &v6[*(int *)(v4 + 28)];
      uint64_t v33 = *(void *)v50;
      char v34 = v50[8];
      char v35 = (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner;
      uint64_t v36 = (uint64_t)v6;
      goto LABEL_22;
    case 11:
      uint64_t result = swift_release();
      goto LABEL_16;
    case 12:
      uint64_t v52 = *((void *)v18 + 3);
      char v53 = v18[32];
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v54 = v76;
      *CGFloat v76 = v52;
      *((unsigned char *)v54 + 8) = v53;
      return result;
    case 13:
      long long v55 = *((_OWORD *)v18 + 11);
      long long v112 = *((_OWORD *)v18 + 10);
      long long v113 = v55;
      long long v114 = *((_OWORD *)v18 + 12);
      long long v56 = *((_OWORD *)v18 + 7);
      long long v109 = *((_OWORD *)v18 + 6);
      v110[0] = v56;
      long long v57 = *((_OWORD *)v18 + 9);
      v110[1] = *((_OWORD *)v18 + 8);
      long long v111 = v57;
      long long v58 = *((_OWORD *)v18 + 3);
      long long v105 = *((_OWORD *)v18 + 2);
      long long v106 = v58;
      long long v59 = *((_OWORD *)v18 + 5);
      long long v107 = *((_OWORD *)v18 + 4);
      long long v108 = v59;
      long long v60 = *((_OWORD *)v18 + 1);
      long long v103 = *(_OWORD *)v18;
      long long v104 = v60;
      uint64_t v33 = *((void *)&v103 + 1);
      char v34 = v60;
      uint64_t result = sub_1C01F0A74((uint64_t)&v103);
      goto LABEL_23;
    case 14:
      uint64_t v20 = *((void *)v18 + 1);
      char v21 = v18[16];
      sub_1BFEEFC20(*((void *)v18 + 3), *((void *)v18 + 4));
      swift_unknownObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_20;
    case 15:
      sub_1BFEEFA80((uint64_t)v18, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v33 = *((void *)v3 + 1);
      char v34 = v3[16];
      char v35 = (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic;
      uint64_t v36 = (uint64_t)v3;
LABEL_22:
      uint64_t result = sub_1BFEEB3A0(v36, v35);
LABEL_23:
      uint64_t v62 = v76;
      *CGFloat v76 = v33;
      *((unsigned char *)v62 + 8) = v34;
      return result;
    case 16:
      long long v63 = *((_OWORD *)v18 + 13);
      long long v114 = *((_OWORD *)v18 + 12);
      long long v115 = v63;
      long long v116 = *((_OWORD *)v18 + 14);
      uint64_t v117 = *((void *)v18 + 30);
      long long v64 = *((_OWORD *)v18 + 9);
      v110[1] = *((_OWORD *)v18 + 8);
      long long v111 = v64;
      long long v65 = *((_OWORD *)v18 + 11);
      long long v112 = *((_OWORD *)v18 + 10);
      long long v113 = v65;
      long long v66 = *((_OWORD *)v18 + 5);
      long long v107 = *((_OWORD *)v18 + 4);
      long long v108 = v66;
      long long v67 = *((_OWORD *)v18 + 7);
      long long v109 = *((_OWORD *)v18 + 6);
      v110[0] = v67;
      long long v68 = *((_OWORD *)v18 + 1);
      long long v103 = *(_OWORD *)v18;
      long long v104 = v68;
      long long v69 = *((_OWORD *)v18 + 3);
      long long v105 = *((_OWORD *)v18 + 2);
      long long v106 = v69;
      uint64_t result = sub_1C01F0AC8((uint64_t)&v103);
      uint64_t v41 = *((void *)&v115 + 1);
      char v42 = v116;
LABEL_25:
      CGFloat v70 = v76;
      *CGFloat v76 = v41;
      *((unsigned char *)v70 + 8) = v42;
      return result;
    case 17:
LABEL_16:
      id v51 = v76;
      *CGFloat v76 = 0;
      *((unsigned char *)v51 + 8) = 1;
      return result;
    default:
      uint64_t v20 = *((void *)v18 + 3);
      char v21 = v18[32];
      uint64_t v22 = *((void *)v18 + 5);
      unint64_t v23 = *((void *)v18 + 6);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFEEFC20(v22, v23);
LABEL_20:
      uint64_t v61 = v76;
      *CGFloat v76 = v20;
      *((unsigned char *)v61 + 8) = v21;
      return result;
  }
}

uint64_t sub_1BFEE6F94()
{
  return sub_1C151E5CC() & 1;
}

Swift::Void __swiftcall FeedNativeAdRequester.processSection(at:)(Swift::Int at)
{
  uint64_t v2 = v1;
  Swift::Int v91 = at;
  uint64_t v3 = *v1;
  uint64_t v86 = v3;
  uint64_t v75 = sub_1C151635C();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  char v73 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEE7B28(0, (unint64_t *)&unk_1EB871720, MEMORY[0x1E4F7AC08]);
  uint64_t v76 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v76 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v78 = (uint64_t)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v77 = (uint64_t)v67 - v9;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  long long v87 = (char *)v67 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v84 = (uint64_t)v67 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v79 = (uint64_t)v67 - v14;
  uint64_t v82 = sub_1C151D4AC();
  uint64_t v80 = *(void *)(v82 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v82);
  uint64_t v72 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v16;
  MEMORY[0x1F4188790](v15);
  long long v83 = (char *)v67 - v17;
  sub_1BFEE7B28(0, &qword_1EB8711A8, MEMORY[0x1E4F27DE8]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v85 = (uint64_t)v67 - v19;
  uint64_t v20 = sub_1C151677C();
  uint64_t v88 = *(void *)(v20 - 8);
  uint64_t v89 = v20;
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  long long v81 = (char *)v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v3[10];
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = v3[11];
  char v25 = (void (*)(void, void, void))v3[14];
  uint64_t v26 = v3[15];
  uint64_t v94 = v23;
  uint64_t v95 = v24;
  long long v96 = v25;
  uint64_t v97 = v26;
  uint64_t v27 = sub_1C151AA8C();
  uint64_t v90 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)v67 - v28;
  uint64_t v94 = v23;
  uint64_t v95 = v24;
  long long v96 = v25;
  uint64_t v97 = v26;
  sub_1C151CC9C();
  sub_1C151CCCC();
  sub_1C151AA1C();
  sub_1BFEE7B7C();
  if (!swift_dynamicCast())
  {
    uint64_t v93 = 0;
    memset(v92, 0, sizeof(v92));
    (*(void (**)(char *, uint64_t))(v90 + 8))(v29, v27);
    sub_1BFEE8348((uint64_t)v92, &qword_1EB87AEF0, (void (*)(uint64_t))sub_1BFEE7B7C);
    return;
  }
  v67[1] = v26;
  uint64_t v68 = v24;
  uint64_t v69 = v23;
  CGFloat v70 = (void (*)(char *, uint64_t, uint64_t))v25;
  uint64_t v30 = v89;
  sub_1BFC773DC(v92, (uint64_t)&v94);
  swift_getWitnessTable();
  if (sub_1C151F15C()) {
    goto LABEL_8;
  }
  uint64_t v31 = v97;
  uint64_t v32 = v98;
  __swift_project_boxed_opaque_existential_1(&v94, v97);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v32 + 16))(v31, v32) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v33 = v2;
  char v34 = (void *)((char *)v2 + *(void *)(*v2 + 160));
  uint64_t v35 = v34[4];
  v67[0] = __swift_project_boxed_opaque_existential_1(v34, v34[3]);
  uint64_t v36 = sub_1C151AA2C();
  char v37 = (*(uint64_t (**)(uint64_t))(v35 + 8))(v36);
  swift_bridgeObjectRelease();
  if (v37)
  {
    uint64_t v38 = v85;
    sub_1C12BDF10(&v94, v91, v85);
    uint64_t v39 = v88;
    uint64_t v40 = v30;
    int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v38, 1, v30);
    uint64_t v42 = (uint64_t)v87;
    if (v41 == 1)
    {
      (*(void (**)(char *, uint64_t))(v90 + 8))(v29, v27);
      uint64_t v43 = &qword_1EB8711A8;
      char v44 = (void (*)(uint64_t))MEMORY[0x1E4F27DE8];
      uint64_t v45 = v38;
    }
    else
    {
      uint64_t v86 = v34;
      Swift::Int v91 = (Swift::Int)v29;
      uint64_t v46 = (uint64_t)v81;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v81, v38, v30);
      uint64_t v47 = v79;
      sub_1C12BE0FC(v33, v46, v79);
      uint64_t v48 = v80;
      uint64_t v49 = v82;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v47, 1, v82) != 1)
      {
        CGFloat v70 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 32);
        v70(v83, v47, v49);
        sub_1C12BE298(&v94, v33, v46, v84);
        sub_1C12BE4DC(&v94, v33, v46, v42);
        uint64_t v50 = v86[4];
        uint64_t v85 = v86[3];
        uint64_t v79 = v50;
        uint64_t v86 = __swift_project_boxed_opaque_existential_1(v86, v85);
        id v51 = v73;
        sub_1C151634C();
        uint64_t v69 = sub_1C151633C();
        uint64_t v68 = v52;
        (*(void (**)(char *, uint64_t))(v74 + 8))(v51, v75);
        uint64_t v75 = sub_1C151AA2C();
        uint64_t v74 = v53;
        char v73 = *(char **)((char *)v33 + *(void *)(*v33 + 168));
        sub_1BFC66384((uint64_t)&v94, (uint64_t)v92);
        uint64_t v54 = v72;
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v72, v83, v49);
        uint64_t v55 = v77;
        sub_1C12BEE80(v84, v77);
        uint64_t v56 = v78;
        sub_1C12BEE80(v42, v78);
        unint64_t v57 = (*(unsigned __int8 *)(v48 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
        uint64_t v58 = *(unsigned __int8 *)(v76 + 80);
        unint64_t v59 = (v71 + v58 + v57) & ~v58;
        unint64_t v60 = (v6 + v58 + v59) & ~v58;
        uint64_t v61 = swift_allocObject();
        uint64_t v76 = v27;
        uint64_t v62 = v42;
        uint64_t v63 = v61;
        sub_1BFC773DC(v92, v61 + 16);
        long long v64 = v54;
        uint64_t v65 = v82;
        v70((char *)(v63 + v57), (uint64_t)v64, v82);
        sub_1C12BF0D8(v55, v63 + v59);
        sub_1C12BF0D8(v56, v63 + v60);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t (*)(void *), uint64_t, uint64_t, uint64_t))(v79 + 16))(v69, v68, v75, v74, v73, sub_1C12BF158, v63, v85, v79);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        long long v66 = (void (*)(uint64_t))MEMORY[0x1E4F7AC08];
        sub_1BFEE8348(v62, (unint64_t *)&unk_1EB871720, MEMORY[0x1E4F7AC08]);
        sub_1BFEE8348(v84, (unint64_t *)&unk_1EB871720, v66);
        (*(void (**)(char *, uint64_t))(v48 + 8))(v83, v65);
        (*(void (**)(char *, uint64_t))(v88 + 8))(v81, v89);
        (*(void (**)(Swift::Int, uint64_t))(v90 + 8))(v91, v76);
        goto LABEL_9;
      }
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v46, v40);
      (*(void (**)(Swift::Int, uint64_t))(v90 + 8))(v91, v27);
      uint64_t v43 = (unint64_t *)&unk_1EB871720;
      char v44 = (void (*)(uint64_t))MEMORY[0x1E4F7AC08];
      uint64_t v45 = v47;
    }
    sub_1BFEE8348(v45, v43, v44);
  }
  else
  {
LABEL_8:
    (*(void (**)(char *, uint64_t))(v90 + 8))(v29, v27);
  }
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v94);
}

void sub_1BFEE7B28(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1BFEE7B7C()
{
  unint64_t result = qword_1EB873048[0];
  if (!qword_1EB873048[0])
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, qword_1EB873048);
  }
  return result;
}

uint64_t sub_1BFEE7BD4(uint64_t a1)
{
  sub_1BFEE7C5C(0, qword_1EB87D088, &qword_1EB872EA8, (uint64_t)&protocol descriptor for FeedAdGroupDataProviding, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BFEE7C5C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1BFEE7CC4(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1BFC845BC(255, a3);
    unint64_t v4 = sub_1C152089C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEE7D1C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE7D80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE7DE4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE7E48(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1BFEE7EB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE7F14(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1BFEE7F7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE7FE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE8044(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE80A8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1BFC845BC(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1BFEE8110(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C152089C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEE8164(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE81C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE822C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C152089C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEE8280(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE82E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFEE8348(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFEE7B28(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t _s8NewsFeed0B8HeadlineV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1C151D2DC();
  uint64_t v68 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v64 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEF378(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v65 = (uint64_t)&v62 - v7;
  sub_1BFEEFFA8();
  uint64_t v66 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v67 = (uint64_t)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v69);
  uint64_t v73 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v62 - v12;
  MEMORY[0x1F4188790](v14);
  uint64_t v71 = (uint64_t)&v62 - v15;
  MEMORY[0x1F4188790](v16);
  uint64_t v72 = (uint64_t)&v62 - v17;
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)&v62 - v19;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)&v62 - v22;
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = (id *)((char *)&v62 - v25);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (id *)((char *)&v62 - v28);
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BFEE90FC((uint64_t)a1, (uint64_t)&v62 - v28, type metadata accessor for FeedHeadline);
    sub_1BFEE90FC((uint64_t)a2, (uint64_t)v26, type metadata accessor for FeedHeadline);
  }
  else
  {
    char v30 = sub_1C1520A9C();
    sub_1BFEE90FC((uint64_t)a1, (uint64_t)v29, type metadata accessor for FeedHeadline);
    sub_1BFEE90FC((uint64_t)a2, (uint64_t)v26, type metadata accessor for FeedHeadline);
    if ((v30 & 1) == 0)
    {
LABEL_18:
      sub_1BFEE9164((uint64_t)v29, type metadata accessor for FeedHeadline);
      sub_1BFEE9164((uint64_t)v26, type metadata accessor for FeedHeadline);
      sub_1BFEE90FC((uint64_t)a1, (uint64_t)v23, type metadata accessor for FeedHeadline);
      sub_1BFEE90FC((uint64_t)a2, (uint64_t)v20, type metadata accessor for FeedHeadline);
      goto LABEL_19;
    }
  }
  CGFloat v70 = v13;
  uint64_t v62 = v4;
  id v31 = objc_msgSend(v29[5], sel_title, v4);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v63 = sub_1C151E62C();
    uint64_t v34 = v33;
  }
  else
  {
    uint64_t v63 = 0;
    uint64_t v34 = 0;
  }
  id v35 = objc_msgSend(v26[5], sel_title);
  if (!v35)
  {
    if (!v34) {
      goto LABEL_24;
    }
    goto LABEL_17;
  }
  uint64_t v36 = v35;
  uint64_t v37 = sub_1C151E62C();
  uint64_t v39 = v38;

  if (!v34)
  {
    if (!v39) {
      goto LABEL_24;
    }
    goto LABEL_17;
  }
  if (!v39)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v13 = v70;
    goto LABEL_18;
  }
  if (v63 == v37 && v34 == v39)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_24:
    sub_1BFEE9164((uint64_t)v29, type metadata accessor for FeedHeadline);
    sub_1BFEE9164((uint64_t)v26, type metadata accessor for FeedHeadline);
    sub_1BFEE90FC((uint64_t)a1, (uint64_t)v23, type metadata accessor for FeedHeadline);
    sub_1BFEE90FC((uint64_t)a2, (uint64_t)v20, type metadata accessor for FeedHeadline);
    uint64_t v13 = v70;
    goto LABEL_25;
  }
  char v58 = sub_1C1520A9C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BFEE9164((uint64_t)v29, type metadata accessor for FeedHeadline);
  sub_1BFEE9164((uint64_t)v26, type metadata accessor for FeedHeadline);
  sub_1BFEE90FC((uint64_t)a1, (uint64_t)v23, type metadata accessor for FeedHeadline);
  sub_1BFEE90FC((uint64_t)a2, (uint64_t)v20, type metadata accessor for FeedHeadline);
  uint64_t v13 = v70;
  if ((v58 & 1) == 0)
  {
LABEL_19:
    sub_1BFEE9164((uint64_t)v20, type metadata accessor for FeedHeadline);
    sub_1BFEE9164((uint64_t)v23, type metadata accessor for FeedHeadline);
    uint64_t v40 = v72;
    sub_1BFEE90FC((uint64_t)a1, v72, type metadata accessor for FeedHeadline);
    uint64_t v41 = v71;
    sub_1BFEE90FC((uint64_t)a2, v71, type metadata accessor for FeedHeadline);
LABEL_20:
    sub_1BFEE9164(v41, type metadata accessor for FeedHeadline);
    sub_1BFEE9164(v40, type metadata accessor for FeedHeadline);
    sub_1BFEE90FC((uint64_t)a1, (uint64_t)v13, type metadata accessor for FeedHeadline);
    uint64_t v42 = v73;
    sub_1BFEE90FC((uint64_t)a2, v73, type metadata accessor for FeedHeadline);
LABEL_21:
    sub_1BFEE9164(v42, type metadata accessor for FeedHeadline);
    uint64_t v43 = (uint64_t)v13;
    char v44 = type metadata accessor for FeedHeadline;
    goto LABEL_22;
  }
LABEL_25:
  uint64_t v47 = v69;
  char v48 = _s8NewsFeed0B8HeadlineV5StateV2eeoiySbAE_AEtFZ_0((unsigned __int8 *)&v23[*(int *)(v69 + 40)], (unsigned __int8 *)&v20[*(int *)(v69 + 40)]);
  sub_1BFEE9164((uint64_t)v20, type metadata accessor for FeedHeadline);
  sub_1BFEE9164((uint64_t)v23, type metadata accessor for FeedHeadline);
  uint64_t v40 = v72;
  sub_1BFEE90FC((uint64_t)a1, v72, type metadata accessor for FeedHeadline);
  uint64_t v41 = v71;
  sub_1BFEE90FC((uint64_t)a2, v71, type metadata accessor for FeedHeadline);
  if ((v48 & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v49 = *(void *)(v40 + 32);
  uint64_t v50 = *(void *)(v41 + 32);
  sub_1BFEE9164(v41, type metadata accessor for FeedHeadline);
  sub_1BFEE9164(v40, type metadata accessor for FeedHeadline);
  sub_1BFEE90FC((uint64_t)a1, (uint64_t)v13, type metadata accessor for FeedHeadline);
  uint64_t v42 = v73;
  sub_1BFEE90FC((uint64_t)a2, v73, type metadata accessor for FeedHeadline);
  if (v49 != v50) {
    goto LABEL_21;
  }
  uint64_t v51 = *(int *)(v47 + 44);
  uint64_t v52 = v42 + v51;
  uint64_t v53 = v67;
  uint64_t v54 = v67 + *(int *)(v66 + 48);
  sub_1BFEE91C4((uint64_t)&v13[v51], v67);
  sub_1BFEE91C4(v52, v54);
  uint64_t v55 = v68;
  uint64_t v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  uint64_t v57 = v62;
  if (v56(v53, 1, v62) == 1)
  {
    sub_1BFEE9164(v42, type metadata accessor for FeedHeadline);
    sub_1BFEE9164((uint64_t)v13, type metadata accessor for FeedHeadline);
    if (v56(v54, 1, v57) == 1)
    {
      sub_1BFEE9258(v53, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
      char v45 = 1;
      return v45 & 1;
    }
  }
  else
  {
    uint64_t v59 = v65;
    sub_1BFEE91C4(v53, v65);
    if (v56(v54, 1, v57) != 1)
    {
      unint64_t v60 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v64, v54, v57);
      sub_1C008E430(qword_1EB885490, MEMORY[0x1E4F7A860]);
      char v45 = sub_1C151E5CC();
      uint64_t v61 = *(void (**)(char *, uint64_t))(v55 + 8);
      v61(v60, v57);
      sub_1BFEE9164(v42, type metadata accessor for FeedHeadline);
      sub_1BFEE9164((uint64_t)v13, type metadata accessor for FeedHeadline);
      v61((char *)v59, v57);
      sub_1BFEE9258(v53, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
      return v45 & 1;
    }
    sub_1BFEE9164(v42, type metadata accessor for FeedHeadline);
    sub_1BFEE9164((uint64_t)v13, type metadata accessor for FeedHeadline);
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v59, v57);
  }
  char v44 = (uint64_t (*)(void))sub_1BFEEFFA8;
  uint64_t v43 = v53;
LABEL_22:
  sub_1BFEE9164(v43, v44);
  char v45 = 0;
  return v45 & 1;
}

uint64_t FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void **a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v16 = *a5;
  uint64_t v17 = *a8;
  uint64_t v18 = *(void *)a10;
  char v19 = *(unsigned char *)(a10 + 8);
  uint64_t v36 = (int *)type metadata accessor for FeedHeadline(0);
  *(_OWORD *)(a9 + v36[12]) = xmmword_1C152FC80;
  char v34 = v19;
  if (!a2)
  {
    uint64_t v20 = a6;
    id v21 = objc_msgSend(a3, sel_identifier);
    a1 = sub_1C151E62C();
    a2 = v22;

    a6 = v20;
  }
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 40) = a3;
  *(void *)(a9 + 48) = a4;
  uint64_t v23 = a6;
  sub_1BFEE91C4(a6, a9 + v36[11]);
  sub_1BFEE90FC(a7, a9 + v36[10], type metadata accessor for FeedHeadline.State);
  *(void *)(a9 + v36[14]) = v17;
  *(unsigned char *)(a9 + 56) = v16;
  id v24 = v17;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v25 = objc_msgSend(a3, sel_title);
  BOOL v29 = 0;
  if (v25)
  {
    uint64_t v26 = v25;
    sub_1C151E62C();

    uint64_t v27 = (void *)sub_1C151E5EC();
    unsigned __int8 v28 = objc_msgSend(v27, sel_ne_isNaturallyRTL);
    swift_bridgeObjectRelease();

    if (v28) {
      BOOL v29 = 1;
    }
  }
  *(void *)(a9 + 16) = v29;
  *(unsigned char *)(a9 + 24) = 0;
  sub_1BFEE966C(a7, (uint64_t)v17, v18, v34, &v37);

  *(void *)(a9 + 32) = v37;
  char v30 = (int *)type metadata accessor for FeedHeadline.State(0);
  if (*(unsigned char *)(a7 + v30[7]))
  {
    if (*(unsigned char *)(a7 + v30[9]) == 1)
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_1BFEE9164(a7, type metadata accessor for FeedHeadline.State);
      uint64_t result = sub_1BFEE9258(v23, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
      uint64_t v32 = 1;
    }
    else if (*(unsigned char *)(a7 + v30[10]) == 1)
    {
      id v33 = objc_msgSend(a3, sel_sourceChannel);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_1BFEE9164(a7, type metadata accessor for FeedHeadline.State);
      uint64_t result = sub_1BFEE9258(v23, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
      uint64_t v32 = 2;
      if (v33) {
        uint64_t v32 = (uint64_t)v33;
      }
    }
    else
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_1BFEE9164(a7, type metadata accessor for FeedHeadline.State);
      uint64_t result = sub_1BFEE9258(v23, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
      uint64_t v32 = 2;
    }
  }
  else
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_1BFEE9164(a7, type metadata accessor for FeedHeadline.State);
    uint64_t result = sub_1BFEE9258(v23, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860]);
    uint64_t v32 = 0;
  }
  *(void *)(a9 + v36[13]) = v32;
  return result;
}

uint64_t sub_1BFEE90FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEE9164(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE91C4(uint64_t a1, uint64_t a2)
{
  sub_1BFEEF378(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFEE9258(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1BFEEF378(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BFEE92C8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEE9328(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1BFF2EE3C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unsigned char *initializeWithCopy for FeedHeadline.State(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = (int *)type metadata accessor for SharedItem();
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
    v7[v9[5]] = v8[v9[5]];
    uint64_t v13 = v9[6];
    uint64_t v14 = *(void **)&v8[v13];
    *(void *)&v7[v13] = v14;
    uint64_t v15 = v9[7];
    uint64_t v22 = &v8[v15];
    uint64_t v23 = &v7[v15];
    uint64_t v16 = sub_1C1515FDC();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    id v18 = v14;
    v17(v23, v22, v16);
    (*(void (**)(char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v19 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v19] = a2[v19];
  uint64_t v20 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v20] = a2[v20];
  return a1;
}

uint64_t destroy for FeedHeadline.State(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = type metadata accessor for SharedItem();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v2, v5);

    uint64_t v6 = v2 + *(int *)(v3 + 28);
    uint64_t v7 = sub_1C1515FDC();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  return result;
}

uint64_t sub_1BFEE966C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t *a5@<X8>)
{
  swift_getObjectType();
  sub_1BFEE9730((uint64_t *)&v18);
  uint64_t result = type metadata accessor for FeedHeadline.State(0);
  BOOL v11 = (v18 & 0x1000) != 0 || *(unsigned __int8 *)(a1 + *(int *)(result + 32)) - 1 >= 2;
  unint64_t v12 = v18 | 0x1000;
  if (v11) {
    unint64_t v12 = v18;
  }
  uint64_t v13 = 0x80000000;
  if (!*(unsigned char *)(a1 + *(int *)(result + 40))) {
    uint64_t v13 = 0x100000000;
  }
  unint64_t v14 = v12 | v13;
  uint64_t v15 = (v12 >> 21) & 1;
  if (!a2) {
    LODWORD(v15) = 1;
  }
  if (v15) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v14 | 0x200000;
  }
  if (a4) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = a3;
  }
  *a5 = v16 | v17;
  return result;
}

uint64_t sub_1BFEE9730@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v19 = a1;
  uint64_t v2 = sub_1C1515FDC();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEA498(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  *(void *)&double v7 = MEMORY[0x1F4188790](v6 - 8).n128_u64[0];
  uint64_t v9 = (char *)&v18 - v8;
  if (objc_msgSend(v1, sel_hasVideo, v7)) {
    uint64_t v10 = 136;
  }
  else {
    uint64_t v10 = 128;
  }
  if (objc_msgSend(v1, sel_hasThumbnail))
  {
    FCThumbnailAspectRatioForHeadline();
    if (v11 <= 0.9)
    {
      uint64_t v12 = 260;
    }
    else if (v11 > 1.1)
    {
      uint64_t v12 = 516;
    }
    else
    {
      uint64_t v12 = 1028;
    }
    v10 |= v12;
  }
  FCHeadlineProviding.articleThumbnailModel.getter((uint64_t)&v20);
  double v13 = v21;
  if (v25 == 1)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if (v13 <= 0.9)
    {
      v10 |= 0xC000uLL;
    }
    else
    {
      uint64_t v14 = 81920;
      if (v13 <= 1.1) {
        uint64_t v14 = 147456;
      }
      v10 |= v14;
    }
  }
  else
  {
    sub_1BFEEA6F4(v20, *(uint64_t *)&v21, v22, v23, v24, 0);
  }
  id v15 = objc_msgSend(v1, sel_routeURL);
  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
    goto LABEL_22;
  }
  uint64_t v16 = v15;
  sub_1C1515F1C();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v9, 0, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
LABEL_22:
    uint64_t result = sub_1BFE54A9C((uint64_t)v9, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
    goto LABEL_23;
  }
  uint64_t result = sub_1BFE54A9C((uint64_t)v9, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0]);
  v10 |= 0x40000000uLL;
LABEL_23:
  *uint64_t v19 = v10;
  return result;
}

uint64_t sub_1BFEE9A74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEE9ADC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEE9B44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEE9BAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEE9C14(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1BFEEA21C(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1BFEE9C94(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C13B6FC4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

void sub_1BFEE9D14(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE9D78(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEE9DCC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEE9E20(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEE9E74(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEE9EC8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE9F2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEE9F90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEE9FE4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEEA038(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEA09C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEA100(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEA164(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEA1C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEEA21C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEA280(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEEA2D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEA338(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEEA38C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEEA3E0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEA444(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEEA498(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

double FCHeadlineProviding.articleThumbnailModel.getter@<D0>(uint64_t a1@<X8>)
{
  sub_1BFEEA498(0, (unint64_t *)&qword_1EB8710D0, MEMORY[0x1E4F26E08], MEMORY[0x1E4FBB718]);
  *(void *)&double v4 = MEMORY[0x1F4188790](v3 - 8).n128_u64[0];
  uint64_t v6 = (char *)&v16 - v5;
  unsigned __int8 v7 = objc_msgSend(v1, sel_respondsToSelector_, sel_layeredThumbnailJSON, v4);
  swift_unknownObjectRetain();
  if (v7)
  {
    id v8 = objc_msgSend(v1, sel_layeredThumbnailJSON);
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = sub_1C151E62C();
      uint64_t v12 = v11;

      swift_bridgeObjectRetain();
      sub_1C151545C();
      uint64_t v13 = sub_1C15154CC();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 0, 1, v13);
      LOBYTE(v9) = sub_1C151823C();
      swift_bridgeObjectRelease();
      sub_1BFE54A9C((uint64_t)v6, (unint64_t *)&qword_1EB8710D0, MEMORY[0x1E4F26E08]);
      if ((v9 & 1) == 0
        && (objc_msgSend(v1, sel_respondsToSelector_, sel_layeredThumbnailAspectRatio) & 1) != 0)
      {
        objc_msgSend(v1, sel_layeredThumbnailAspectRatio);
        *(void *)a1 = v1;
        *(void *)(a1 + 8) = v14;
        *(void *)(a1 + 16) = v10;
        *(void *)(a1 + 24) = v12;
        *(void *)(a1 + 32) = v1;
        *(unsigned char *)(a1 + 40) = 1;
        swift_unknownObjectRetain();
        return result;
      }
      swift_bridgeObjectRelease();
    }
  }
  *(void *)a1 = v1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(unsigned char *)(a1 + 40) = 0;
  return result;
}

uint64_t sub_1BFEEA6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result = swift_unknownObjectRelease();
  if (a6)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FeedItem.identifier.getter()
{
  uint64_t v1 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1F4188790](v13 - 8);
  id v15 = (uint64_t *)((char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (uint64_t *)((char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for FeedItem(0);
  MEMORY[0x1F4188790](v19);
  double v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEEB0CC(v0, (uint64_t)v21, type metadata accessor for FeedItem);
  uint64_t v22 = 1701736302;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v22 = *(void *)v21;
      uint64_t v23 = *((void *)v21 + 9);
      unint64_t v24 = *((void *)v21 + 10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEEFC20(v23, v24);
      return v22;
    case 2u:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      uint64_t v22 = *v18;
      swift_bridgeObjectRetain();
      sub_1BFEEB3A0((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
      return v22;
    case 3u:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v15, type metadata accessor for FeedHeadline);
      uint64_t v22 = *v15;
      swift_bridgeObjectRetain();
      sub_1BFEEB3A0((uint64_t)v15, type metadata accessor for FeedHeadline);
      return v22;
    case 4u:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      uint64_t v22 = *((void *)v12 + 5);
      swift_bridgeObjectRetain();
      sub_1BFEEB3A0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for FeedWebEmbed);
      return v22;
    case 5u:
      long long v25 = *((_OWORD *)v21 + 1);
      long long v75 = *(_OWORD *)v21;
      long long v76 = v25;
      long long v26 = *((_OWORD *)v21 + 7);
      long long v81 = *((_OWORD *)v21 + 6);
      v82[0] = v26;
      *(_OWORD *)((char *)v82 + 9) = *(_OWORD *)(v21 + 121);
      long long v27 = *((_OWORD *)v21 + 3);
      long long v77 = *((_OWORD *)v21 + 2);
      long long v78 = v27;
      long long v28 = *((_OWORD *)v21 + 5);
      long long v79 = *((_OWORD *)v21 + 4);
      long long v80 = v28;
      uint64_t v22 = *((void *)&v75 + 1);
      swift_bridgeObjectRetain();
      sub_1C01880A4((uint64_t)&v75);
      return v22;
    case 6u:
      sub_1C063FFF4((uint64_t)v21, (uint64_t)&v75);
      sub_1C024A070((uint64_t)&v75, (uint64_t)&v65);
      if (!v74)
      {
        long long v54 = v65;
        long long v55 = v66;
        long long v60 = v71;
        v61[0] = v72[0];
        *(_OWORD *)((char *)v61 + 9) = *(_OWORD *)((char *)v72 + 9);
        long long v56 = v67;
        long long v57 = v68;
        long long v58 = v69;
        long long v59 = v70;
        uint64_t v22 = *((void *)&v65 + 1);
        swift_bridgeObjectRetain();
        BOOL v29 = &v54;
        goto LABEL_22;
      }
      if (v74 == 1)
      {
        v63[6] = v71;
        v64[0] = v72[0];
        *(_OWORD *)((char *)v64 + 9) = *(_OWORD *)((char *)v72 + 9);
        v63[2] = v67;
        v63[3] = v68;
        void v63[4] = v69;
        v63[5] = v70;
        v63[0] = v65;
        v63[1] = v66;
        sub_1C0A60978((uint64_t)v73, (uint64_t)&v54, (uint64_t)&qword_1EB882CD0, (uint64_t)&type metadata for FeedIssue, MEMORY[0x1E4FBB718], (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))sub_1BFEC62B8);
        sub_1C01B3B54((uint64_t)&v54);
        uint64_t v22 = *((void *)&v63[0] + 1);
        swift_bridgeObjectRetain();
        BOOL v29 = v63;
LABEL_22:
        sub_1C01880A4((uint64_t)v29);
        goto LABEL_24;
      }
      long long v60 = v71;
      v61[0] = v72[0];
      v61[1] = v72[1];
      char v62 = v73[0];
      long long v56 = v67;
      long long v57 = v68;
      long long v58 = v69;
      long long v59 = v70;
      long long v54 = v65;
      long long v55 = v66;
      uint64_t v22 = v65;
      swift_bridgeObjectRetain();
      sub_1BFEA4290((uint64_t)&v54);
LABEL_24:
      sub_1C024A288((uint64_t)&v75);
      return v22;
    case 7u:
      long long v30 = *((_OWORD *)v21 + 7);
      long long v81 = *((_OWORD *)v21 + 6);
      v82[0] = v30;
      v82[1] = *((_OWORD *)v21 + 8);
      LOBYTE(v83) = v21[144];
      long long v31 = *((_OWORD *)v21 + 3);
      long long v77 = *((_OWORD *)v21 + 2);
      long long v78 = v31;
      long long v32 = *((_OWORD *)v21 + 5);
      long long v79 = *((_OWORD *)v21 + 4);
      long long v80 = v32;
      long long v33 = *((_OWORD *)v21 + 1);
      long long v75 = *(_OWORD *)v21;
      long long v76 = v33;
      uint64_t v22 = v75;
      swift_bridgeObjectRetain();
      sub_1BFEA4290((uint64_t)&v75);
      return v22;
    case 8u:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      uint64_t v22 = *v9;
      swift_bridgeObjectRetain();
      sub_1BFEEB3A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FeedCustomItem);
      return v22;
    case 9u:
      long long v34 = *((_OWORD *)v21 + 7);
      long long v81 = *((_OWORD *)v21 + 6);
      v82[0] = v34;
      v82[1] = *((_OWORD *)v21 + 8);
      *(void *)&long long v83 = *((void *)v21 + 18);
      long long v35 = *((_OWORD *)v21 + 3);
      long long v77 = *((_OWORD *)v21 + 2);
      long long v78 = v35;
      long long v36 = *((_OWORD *)v21 + 5);
      long long v79 = *((_OWORD *)v21 + 4);
      long long v80 = v36;
      long long v37 = *((_OWORD *)v21 + 1);
      long long v75 = *(_OWORD *)v21;
      long long v76 = v37;
      uint64_t v22 = v75;
      swift_bridgeObjectRetain();
      sub_1C0249FA4((uint64_t)&v75);
      return v22;
    case 0xAu:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      uint64_t v22 = *v6;
      swift_bridgeObjectRetain();
      sub_1BFEEB3A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for FeedEngagementBanner);
      return v22;
    case 0xBu:
      uint64_t v22 = _s5TeaUI11PluginModelC8NewsFeedE15debugIdentifierSSvg_0();
      swift_release();
      return v22;
    case 0xCu:
      uint64_t v22 = *(void *)v21;
      swift_unknownObjectRelease();
      return v22;
    case 0xDu:
      long long v38 = *((_OWORD *)v21 + 11);
      long long v84 = *((_OWORD *)v21 + 10);
      long long v85 = v38;
      long long v86 = *((_OWORD *)v21 + 12);
      long long v39 = *((_OWORD *)v21 + 7);
      long long v81 = *((_OWORD *)v21 + 6);
      v82[0] = v39;
      long long v40 = *((_OWORD *)v21 + 9);
      v82[1] = *((_OWORD *)v21 + 8);
      long long v83 = v40;
      long long v41 = *((_OWORD *)v21 + 3);
      long long v77 = *((_OWORD *)v21 + 2);
      long long v78 = v41;
      long long v42 = *((_OWORD *)v21 + 5);
      long long v79 = *((_OWORD *)v21 + 4);
      long long v80 = v42;
      long long v43 = *((_OWORD *)v21 + 1);
      long long v75 = *(_OWORD *)v21;
      long long v76 = v43;
      uint64_t v22 = *((void *)&v77 + 1);
      swift_bridgeObjectRetain();
      sub_1C01F0A74((uint64_t)&v75);
      return v22;
    case 0xEu:
      uint64_t v44 = *((void *)v21 + 3);
      unint64_t v45 = *((void *)v21 + 4);
      uint64_t v22 = *((void *)v21 + 5);
      swift_bridgeObjectRetain();
      sub_1BFEEFC20(v44, v45);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v22;
    case 0xFu:
      sub_1BFEEFA80((uint64_t)v21, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      uint64_t v22 = *((void *)v3 + 5);
      swift_bridgeObjectRetain();
      sub_1BFEEB3A0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for FeedPuzzleStatistic);
      return v22;
    case 0x10u:
      long long v46 = *((_OWORD *)v21 + 13);
      long long v86 = *((_OWORD *)v21 + 12);
      long long v87 = v46;
      long long v88 = *((_OWORD *)v21 + 14);
      uint64_t v89 = *((void *)v21 + 30);
      long long v47 = *((_OWORD *)v21 + 9);
      v82[1] = *((_OWORD *)v21 + 8);
      long long v83 = v47;
      long long v48 = *((_OWORD *)v21 + 11);
      long long v84 = *((_OWORD *)v21 + 10);
      long long v85 = v48;
      long long v49 = *((_OWORD *)v21 + 5);
      long long v79 = *((_OWORD *)v21 + 4);
      long long v80 = v49;
      long long v50 = *((_OWORD *)v21 + 7);
      long long v81 = *((_OWORD *)v21 + 6);
      v82[0] = v50;
      long long v51 = *((_OWORD *)v21 + 1);
      long long v75 = *(_OWORD *)v21;
      long long v76 = v51;
      long long v52 = *((_OWORD *)v21 + 3);
      long long v77 = *((_OWORD *)v21 + 2);
      long long v78 = v52;
      uint64_t v22 = v75;
      swift_bridgeObjectRetain();
      sub_1C01F0AC8((uint64_t)&v75);
      return v22;
    case 0x11u:
      return v22;
    default:
      uint64_t v22 = *(void *)v21;
      sub_1BFEEFC20(*((void *)v21 + 5), *((void *)v21 + 6));
      return v22;
  }
}

uint64_t type metadata accessor for FeedBannerAd()
{
  uint64_t result = qword_1EB895038;
  if (!qword_1EB895038) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FeedWebEmbed()
{
  uint64_t result = qword_1EB8738F8;
  if (!qword_1EB8738F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FeedCustomItem()
{
  uint64_t result = qword_1EB885828;
  if (!qword_1EB885828) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FeedPuzzleStatistic()
{
  uint64_t result = qword_1EB881358;
  if (!qword_1EB881358) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFEEB064(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEEB0CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEEB134(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEEB19C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEEB204(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEEB26C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for FeedItem(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB873448);
}

uint64_t type metadata accessor for FeedEngagementBanner()
{
  uint64_t result = qword_1EB87BF00;
  if (!qword_1EB87BF00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BFEEB340(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEEB3A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEEB400(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BFEEB460(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void destroy for FeedItem(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 48) < 0x11uLL) {
        return;
      }
      goto LABEL_81;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) < 0x11uLL) {
        return;
      }
      goto LABEL_81;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v2 = type metadata accessor for FeedBannerAd();
      uint64_t v3 = a1 + *(int *)(v2 + 20);
      uint64_t v4 = sub_1C151DBAC();
      goto LABEL_55;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v5 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v6 = a1 + v5[10];
      uint64_t v7 = v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      uint64_t v8 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
      {
        uint64_t v9 = sub_1C151631C();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);

        uint64_t v10 = v7 + *(int *)(v8 + 28);
        uint64_t v11 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
      uint64_t v12 = a1 + v5[11];
      uint64_t v13 = sub_1C151D2DC();
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      }
      if (*(void *)(a1 + v5[12] + 8) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + v5[13]) >= 3uLL) {
        swift_unknownObjectRelease();
      }
      id v15 = *(void **)(a1 + v5[14]);

      return;
    case 4u:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v16 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v17 = a1 + v16[8];
      uint64_t v18 = sub_1C1515FDC();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v20(v17, v18);
      uint64_t v21 = a1 + v16[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v21, 1, v18)) {
        v20(v21, v18);
      }
      swift_release();
      swift_release();
      uint64_t v22 = a1 + v16[12];
      uint64_t v23 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v23 - 1) + 48))(v22, 1, v23))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v24 = v23[10];
        uint64_t v25 = v22 + v24 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        uint64_t v26 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26))
        {
          uint64_t v27 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);

          v20(v25 + *(int *)(v26 + 28), v18);
        }
        uint64_t v28 = v22 + v23[11];
        uint64_t v29 = sub_1C151D2DC();
        uint64_t v30 = *(void *)(v29 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29)) {
          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
        }
        if (*(void *)(v22 + v23[12] + 8) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        if (*(void *)(v22 + v23[13]) >= 3uLL) {
          swift_unknownObjectRelease();
        }
      }
      uint64_t v31 = a1 + v16[13];
      uint64_t v32 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32)) {
        return;
      }
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_57;
      }
      swift_bridgeObjectRelease();
      uint64_t v33 = type metadata accessor for GenericDataVisualization();
      v20(v31 + *(int *)(v33 + 20), v18);
      goto LABEL_81;
    case 5u:
      goto LABEL_38;
    case 6u:
      int v34 = *(unsigned __int8 *)(a1 + 281);
      if (v34 == 2) {
        goto LABEL_42;
      }
      if (v34 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 128) >= 0x11uLL) {
          swift_bridgeObjectRelease();
        }
        long long v42 = *(void **)(a1 + 144);
        if (!v42) {
          return;
        }

        swift_bridgeObjectRelease();
        if (*(void *)(a1 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (*(void *)(a1 + 272) < 0x11uLL) {
          return;
        }
LABEL_81:
        swift_bridgeObjectRelease();
        return;
      }
      if (*(unsigned char *)(a1 + 281)) {
        return;
      }
LABEL_38:

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(a1 + 128) >= 0x11uLL) {
        goto LABEL_81;
      }
      return;
    case 7u:
LABEL_42:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 88) == 1) {
        return;
      }
      swift_bridgeObjectRelease();
      if (!*(void *)(a1 + 120)) {
        return;
      }
      uint64_t v35 = a1 + 96;
      goto LABEL_68;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v36 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = v36 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      uint64_t v38 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v37, 1, v38))
      {
        uint64_t v39 = sub_1C1515FDC();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v37, v39);
      }
      goto LABEL_81;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 56)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      }
      if (*(void *)(a1 + 96)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 72);
      }
      if (!*(void *)(a1 + 136)) {
        return;
      }
      uint64_t v35 = a1 + 112;
      goto LABEL_68;
    case 0xAu:
      swift_bridgeObjectRelease();
      uint64_t v2 = type metadata accessor for FeedEngagementBanner();
      uint64_t v3 = a1 + *(int *)(v2 + 20);
      uint64_t v4 = sub_1C151959C();
LABEL_55:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      if (*(void *)(a1 + *(int *)(v2 + 32) + 8) < 0x11uLL) {
        return;
      }
      goto LABEL_81;
    case 0xBu:
LABEL_57:
      swift_release();
      return;
    case 0xCu:
      goto LABEL_73;
    case 0xDu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 112)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 88);
      }
      if (*(void *)(a1 + 152)) {
        __swift_destroy_boxed_opaque_existential_1(a1 + 128);
      }
      if (!*(void *)(a1 + 192)) {
        return;
      }
      uint64_t v35 = a1 + 168;
LABEL_68:
      __swift_destroy_boxed_opaque_existential_1(v35);
      return;
    case 0xEu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
LABEL_73:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return;
    case 0xFu:
      if (*(void *)(a1 + 32) >= 0x11uLL) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v40 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      uint64_t v41 = v40 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_102;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            uint64_t v44 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v41, 1, v44))
            {
              uint64_t v45 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v41, v45);
            }
          }
          uint64_t v46 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          uint64_t v47 = v41 + *(int *)(v46 + 20);
          int v48 = swift_getEnumCaseMultiPayload();
          if (v48 == 5 || v48 == 4)
          {
            uint64_t v49 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v47, 1, v49))
            {
              uint64_t v50 = sub_1C151555C();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(v47, v50);
            }
          }
          v41 += *(int *)(v46 + 24);
LABEL_102:
          int v51 = swift_getEnumCaseMultiPayload();
          if (v51 == 5 || v51 == 4)
          {
            uint64_t v52 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v41, 1, v52))goto LABEL_115; {
          }
            }
          return;
        case 2u:
          uint64_t v53 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v41, 1, v53)) {
            return;
          }
          uint64_t v54 = sub_1C151631C();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v41, v54);
          uint64_t v55 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          uint64_t v56 = v41 + *(int *)(v55 + 24);
          swift_bridgeObjectRelease();
          unint64_t v57 = *(void *)(v56 + 24);
          if (v57 >> 60 != 15) {
            sub_1BFE95664(*(void *)(v56 + 16), v57);
          }
          swift_bridgeObjectRelease();
          goto LABEL_81;
        case 3u:
          uint64_t v58 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          uint64_t v59 = v41 + *(int *)(v58 + 24);
          uint64_t v60 = type metadata accessor for PuzzleStreak();
          uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48);
          if (!v61(v59, 1, v60))
          {
            uint64_t v62 = sub_1C151555C();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v59, v62);
          }
          v41 += *(int *)(v58 + 28);
          if (v61(v41, 1, v60)) {
            return;
          }
LABEL_115:
          uint64_t v63 = sub_1C151555C();
          long long v64 = *(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8);
          v64(v41, v63);
          return;
        default:
          return;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 240) >= 0x11uLL) {
        goto LABEL_81;
      }
      return;
    default:
      return;
  }
}

void *initializeWithCopy for FeedItem(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      uint64_t v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v8 = a2 + 5;
      unint64_t v9 = a2[6];
      swift_bridgeObjectRetain();
      if (v9 >= 0x11)
      {
        a1[5] = *v8;
        a1[6] = v9;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 5) = *(_OWORD *)v8;
      }
      goto LABEL_196;
    case 1u:
      uint64_t v47 = a2[1];
      *a1 = *a2;
      a1[1] = v47;
      uint64_t v48 = a2[3];
      a1[2] = a2[2];
      a1[3] = v48;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      uint64_t v49 = a2[6];
      a1[5] = a2[5];
      a1[6] = v49;
      uint64_t v50 = a2[8];
      a1[7] = a2[7];
      a1[8] = v50;
      int v51 = a2 + 9;
      unint64_t v52 = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v52 >= 0x11)
      {
        a1[9] = *v51;
        a1[10] = v52;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 9) = *(_OWORD *)v51;
      }
      goto LABEL_196;
    case 2u:
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = (int *)type metadata accessor for FeedBannerAd();
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_1C151DBAC();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      *(void *)((char *)a1 + v11[6]) = *(void *)((char *)a2 + v11[6]);
      uint64_t v17 = v11[7];
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      *(void *)uint64_t v18 = *(void *)v19;
      v18[8] = v19[8];
      uint64_t v20 = v11[8];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      unint64_t v23 = *((void *)v22 + 1);
      if (v23 >= 0x11) {
        goto LABEL_37;
      }
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      goto LABEL_196;
    case 3u:
      uint64_t v53 = a2[1];
      *a1 = *a2;
      a1[1] = v53;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v54 = a2[5];
      a1[4] = a2[4];
      a1[5] = v54;
      a1[6] = a2[6];
      *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
      char v385 = (int *)type metadata accessor for FeedHeadline(0);
      uint64_t v55 = v385[10];
      uint64_t v56 = (char *)a1 + v55;
      unint64_t v57 = (char *)a2 + v55;
      *uint64_t v56 = *((unsigned char *)a2 + v55);
      v56[1] = *((unsigned char *)a2 + v55 + 1);
      uint64_t v58 = (int *)type metadata accessor for FeedHeadline.State(0);
      uint64_t v59 = v58[6];
      __dst = &v56[v59];
      uint64_t v60 = &v57[v59];
      uint64_t v61 = (int *)type metadata accessor for SharedItem();
      uint64_t v381 = *((void *)v61 - 1);
      uint64_t v62 = *(unsigned int (**)(char *, uint64_t, int *))(v381 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v62(v60, 1, v61))
      {
        uint64_t v63 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(__dst, v60, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        uint64_t v183 = sub_1C151631C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(__dst, v60, v183);
        __dst[v61[5]] = v60[v61[5]];
        uint64_t v184 = v61[6];
        char v185 = *(void **)&v60[v184];
        *(void *)&__dst[v184] = v185;
        uint64_t v186 = v61[7];
        v390 = &v60[v186];
        long long v393 = &__dst[v186];
        uint64_t v187 = sub_1C1515FDC();
        uint64_t v380 = *(void (**)(char *, char *, uint64_t))(*(void *)(v187 - 8) + 16);
        id v188 = v185;
        v380(v393, v390, v187);
        (*(void (**)(char *, void, uint64_t, int *))(v381 + 56))(__dst, 0, 1, v61);
      }
      v56[v58[7]] = v57[v58[7]];
      v56[v58[8]] = v57[v58[8]];
      v56[v58[9]] = v57[v58[9]];
      v56[v58[10]] = v57[v58[10]];
      uint64_t v189 = v385[11];
      uint64_t v190 = (char *)a1 + v189;
      uint64_t v191 = (char *)a2 + v189;
      uint64_t v192 = sub_1C151D2DC();
      uint64_t v193 = *(void *)(v192 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48))(v191, 1, v192))
      {
        sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
        memcpy(v190, v191, *(void *)(*(void *)(v194 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v190, v191, v192);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
      }
      uint64_t v201 = v385[12];
      uint64_t v202 = (void *)((char *)a1 + v201);
      unint64_t v203 = (void *)((char *)a2 + v201);
      unint64_t v204 = v203[1];
      if (v204 >= 0x11)
      {
        *uint64_t v202 = *v203;
        v202[1] = v204;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v202 = *(_OWORD *)v203;
      }
      uint64_t v205 = v385[13];
      unint64_t v206 = *(void *)((char *)a2 + v205);
      if (v206 >= 2)
      {
        if (v206 == 2)
        {
          *(void *)((char *)a1 + v205) = 2;
        }
        else
        {
          *(void *)((char *)a1 + v205) = v206;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(void *)((char *)a1 + v205) = v206;
      }
      uint64_t v245 = v385[14];
      uint64_t v246 = *(void **)((char *)a2 + v245);
      *(void *)((char *)a1 + v245) = v246;
      id v247 = v246;
      goto LABEL_196;
    case 4u:
      uint64_t v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      uint64_t v25 = a2 + 3;
      unint64_t v26 = a2[4];
      if (v26 >= 0x11)
      {
        a1[3] = *v25;
        a1[4] = v26;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v25;
      }
      uint64_t v114 = a2[6];
      a1[5] = a2[5];
      a1[6] = v114;
      long long v115 = (int *)type metadata accessor for FeedWebEmbed();
      uint64_t v116 = v115[8];
      uint64_t v117 = (char *)a1 + v116;
      uint64_t v118 = (char *)a2 + v116;
      uint64_t v119 = sub_1C1515FDC();
      uint64_t v120 = *(void *)(v119 - 8);
      long long v121 = *(void (**)(char *, char *, uint64_t))(v120 + 16);
      swift_bridgeObjectRetain();
      v121(v117, v118, v119);
      uint64_t v122 = v115[9];
      CGRect v123 = (char *)a1 + v122;
      CGRect v124 = (char *)a2 + v122;
      uint64_t v389 = (void *)v119;
      __dsta = (void (*)(char *, char *, void *))v121;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48))((char *)a2 + v122, 1, v119))
      {
        sub_1BFEEF8E8(0, (unint64_t *)&qword_1EB8948A0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
        memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
      }
      else
      {
        v121(v123, v124, v119);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v123, 0, 1, v119);
      }
      *(void *)((char *)a1 + v115[10]) = *(void *)((char *)a2 + v115[10]);
      *(void *)((char *)a1 + v115[11]) = *(void *)((char *)a2 + v115[11]);
      uint64_t v157 = v115[12];
      BOOL v158 = (void *)((char *)a1 + v157);
      uint64_t v392 = v115;
      uint64_t v159 = (void *)((char *)a2 + v157);
      uint64_t v160 = type metadata accessor for FeedHeadline(0);
      uint64_t v161 = *(void *)(v160 - 8);
      char v162 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v161 + 48);
      swift_retain();
      swift_retain();
      if (v162(v159, 1, v160))
      {
        sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8737F0, type metadata accessor for FeedHeadline, MEMORY[0x1E4FBB718]);
        memcpy(v158, v159, *(void *)(*(void *)(v163 - 8) + 64));
        uint64_t v164 = v392;
      }
      else
      {
        uint64_t v379 = v161;
        uint64_t v382 = (int *)v160;
        uint64_t v170 = v159[1];
        *BOOL v158 = *v159;
        v158[1] = v170;
        v158[2] = v159[2];
        *((unsigned char *)v158 + 24) = *((unsigned char *)v159 + 24);
        uint64_t v171 = v159[5];
        v158[4] = v159[4];
        v158[5] = v171;
        v158[6] = v159[6];
        *((unsigned char *)v158 + 56) = *((unsigned char *)v159 + 56);
        uint64_t v172 = *(int *)(v160 + 40);
        char v378 = v158;
        uint64_t v173 = (char *)v158 + v172;
        uint64_t v174 = (char *)v159 + v172;
        unsigned char *v173 = *((unsigned char *)v159 + v172);
        v173[1] = *((unsigned char *)v159 + v172 + 1);
        uint64_t v175 = type metadata accessor for FeedHeadline.State(0);
        uint64_t v176 = *(int *)(v175 + 24);
        uint64_t v376 = &v173[v176];
        uint64_t v377 = (int *)v175;
        uint64_t v177 = &v174[v176];
        char v178 = (int *)type metadata accessor for SharedItem();
        uint64_t v375 = *((void *)v178 - 1);
        uint64_t v179 = *(unsigned int (**)(char *, uint64_t, int *))(v375 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        uint64_t v180 = v159;
        if (v179(v177, 1, v178))
        {
          uint64_t v181 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v376, v177, *(void *)(*(void *)(v181 - 8) + 64));
        }
        else
        {
          uint64_t v271 = sub_1C151631C();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 16))(v376, v177, v271);
          v376[v178[5]] = v177[v178[5]];
          uint64_t v272 = v178[6];
          uint64_t v273 = *(void **)&v177[v272];
          *(void *)&v376[v272] = v273;
          uint64_t v274 = v178[7];
          uint64_t v275 = &v376[v274];
          uint64_t v276 = &v177[v274];
          id v277 = v273;
          __dsta(v275, v276, v389);
          (*(void (**)(char *, void, uint64_t, int *))(v375 + 56))(v376, 0, 1, v178);
        }
        v173[v377[7]] = v174[v377[7]];
        v173[v377[8]] = v174[v377[8]];
        v173[v377[9]] = v174[v377[9]];
        v173[v377[10]] = v174[v377[10]];
        uint64_t v278 = v382[11];
        uint64_t v279 = (char *)v378 + v278;
        uint64_t v280 = (char *)v159 + v278;
        uint64_t v281 = sub_1C151D2DC();
        uint64_t v282 = *(void *)(v281 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48))(v280, 1, v281))
        {
          sub_1BFEEF8E8(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
          memcpy(v279, v280, *(void *)(*(void *)(v283 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v282 + 16))(v279, v280, v281);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v282 + 56))(v279, 0, 1, v281);
        }
        uint64_t v284 = v382[12];
        uint64_t v285 = (void *)((char *)v378 + v284);
        uint64_t v286 = (void *)((char *)v180 + v284);
        unint64_t v287 = v286[1];
        uint64_t v164 = v392;
        if (v287 >= 0x11)
        {
          void *v285 = *v286;
          v285[1] = v287;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)uint64_t v285 = *(_OWORD *)v286;
        }
        uint64_t v288 = v382[13];
        unint64_t v289 = *(void *)((char *)v180 + v288);
        if (v289 >= 2)
        {
          if (v289 == 2)
          {
            *(void *)((char *)v378 + v288) = 2;
          }
          else
          {
            *(void *)((char *)v378 + v288) = v289;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(void *)((char *)v378 + v288) = v289;
        }
        uint64_t v312 = v382[14];
        uint64_t v313 = *(void **)((char *)v180 + v312);
        *(void *)((char *)v378 + v312) = v313;
        char v314 = *(void (**)(void *, void, uint64_t, int *))(v379 + 56);
        id v315 = v313;
        v314(v378, 0, 1, v382);
      }
      uint64_t v316 = v164[13];
      uint64_t v317 = (void *)((char *)a1 + v316);
      BOOL v318 = (void *)((char *)a2 + v316);
      uint64_t v319 = type metadata accessor for WebEmbedDataVisualization();
      uint64_t v320 = *(void *)(v319 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v320 + 48))(v318, 1, v319))
      {
        sub_1BFEEF8E8(0, &qword_1EB88BF40, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, MEMORY[0x1E4FBB718]);
        memcpy(v317, v318, *(void *)(*(void *)(v321 - 8) + 64));
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v323 = *v318;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v324 = v318[1];
          *uint64_t v317 = v323;
          v317[1] = v324;
          uint64_t v325 = type metadata accessor for GenericDataVisualization();
          uint64_t v326 = *(int *)(v325 + 20);
          uint64_t v327 = (char *)v317 + v326;
          v328 = (char *)v318 + v326;
          swift_bridgeObjectRetain();
          v329 = v328;
          uint64_t v164 = v392;
          __dsta(v327, v329, v389);
          *(void *)((char *)v317 + *(int *)(v325 + 24)) = *(uint64_t *)((char *)v318 + *(int *)(v325 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          *uint64_t v317 = v323;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v320 + 56))(v317, 0, 1, v319);
      }
      *((unsigned char *)a1 + v164[14]) = *((unsigned char *)a2 + v164[14]);
      goto LABEL_196;
    case 5u:
      long long v64 = (void *)*a2;
      uint64_t v65 = a2[1];
      *a1 = *a2;
      a1[1] = v65;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      long long v66 = (void *)a2[7];
      a1[6] = a2[6];
      a1[7] = v66;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      uint64_t v67 = a2[10];
      id v68 = v64;
      swift_bridgeObjectRetain();
      id v69 = v66;
      if (v67 == 1)
      {
        long long v70 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 11) = v70;
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      }
      else
      {
        a1[9] = a2[9];
        a1[10] = v67;
        uint64_t v127 = a2[12];
        a1[11] = a2[11];
        a1[12] = v127;
        uint64_t v129 = (void *)a2[13];
        uint64_t v128 = a2[14];
        a1[13] = v129;
        a1[14] = v128;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v130 = v129;
      }
      char v131 = a2 + 15;
      unint64_t v132 = a2[16];
      if (v132 >= 0x11)
      {
        a1[15] = *v131;
        a1[16] = v132;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 15) = *(_OWORD *)v131;
      }
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      goto LABEL_196;
    case 6u:
      int v71 = *((unsigned __int8 *)a2 + 281);
      if (v71 == 2)
      {
        uint64_t v213 = a2[1];
        *a1 = *a2;
        a1[1] = v213;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        uint64_t v214 = a2[7];
        a1[6] = a2[6];
        a1[7] = v214;
        uint64_t v215 = a2[9];
        a1[8] = a2[8];
        a1[9] = v215;
        uint64_t v216 = a2[11];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v216 != 1)
        {
          a1[10] = a2[10];
          a1[11] = v216;
          uint64_t v255 = a2[15];
          swift_bridgeObjectRetain();
          if (v255)
          {
            uint64_t v256 = a2[16];
            a1[15] = v255;
            a1[16] = v256;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v255 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v255);
            a1[17] = a2[17];
          }
          else
          {
            long long v349 = *((_OWORD *)a2 + 7);
            *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
            *((_OWORD *)a1 + 7) = v349;
            *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
          }
          *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
          goto LABEL_168;
        }
        uint64_t v217 = a1 + 10;
        uint64_t v218 = a2 + 10;
        long long v219 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v219;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
LABEL_139:
        long long v293 = v218[1];
        *uint64_t v217 = *v218;
        v217[1] = v293;
        goto LABEL_168;
      }
      if (v71 != 1)
      {
        long long v220 = (void *)*a2;
        uint64_t v221 = a2[1];
        *a1 = *a2;
        a1[1] = v221;
        a1[2] = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        id v222 = (void *)a2[7];
        a1[6] = a2[6];
        a1[7] = v222;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v223 = a2[10];
        id v224 = v220;
        swift_bridgeObjectRetain();
        id v225 = v222;
        if (v223 == 1)
        {
          long long v226 = *(_OWORD *)(a2 + 11);
          *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
          *(_OWORD *)(a1 + 11) = v226;
          *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
        }
        else
        {
          a1[9] = a2[9];
          a1[10] = v223;
          uint64_t v257 = a2[12];
          a1[11] = a2[11];
          a1[12] = v257;
          uint64_t v259 = (void *)a2[13];
          uint64_t v258 = a2[14];
          a1[13] = v259;
          a1[14] = v258;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v260 = v259;
        }
        uint64_t v261 = a2 + 15;
        unint64_t v262 = a2[16];
        if (v262 >= 0x11)
        {
          a1[15] = *v261;
          a1[16] = v262;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 15) = *(_OWORD *)v261;
        }
        *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
        goto LABEL_168;
      }
      uint64_t v72 = (void *)*a2;
      uint64_t v73 = a2[1];
      *a1 = *a2;
      a1[1] = v73;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      char v74 = (void *)a2[7];
      a1[6] = a2[6];
      a1[7] = v74;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      uint64_t v75 = a2[10];
      id v76 = v72;
      swift_bridgeObjectRetain();
      id v77 = v74;
      if (v75 == 1)
      {
        long long v78 = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 11) = v78;
        *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
      }
      else
      {
        a1[9] = a2[9];
        a1[10] = v75;
        uint64_t v249 = a2[12];
        a1[11] = a2[11];
        a1[12] = v249;
        uint64_t v251 = (void *)a2[13];
        uint64_t v250 = a2[14];
        a1[13] = v251;
        a1[14] = v250;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v252 = v251;
      }
      long long v253 = a2 + 15;
      unint64_t v254 = a2[16];
      if (v254 >= 0x11)
      {
        a1[15] = *v253;
        a1[16] = v254;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 15) = *(_OWORD *)v253;
      }
      uint64_t v218 = a2 + 18;
      int v263 = (void *)a2[18];
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      if (!v263)
      {
        uint64_t v217 = a1 + 18;
        long long v290 = *((_OWORD *)a2 + 16);
        *((_OWORD *)a1 + 15) = *((_OWORD *)a2 + 15);
        *((_OWORD *)a1 + 16) = v290;
        *(_OWORD *)((char *)a1 + 265) = *(_OWORD *)((char *)a2 + 265);
        long long v291 = *((_OWORD *)a2 + 12);
        *((_OWORD *)a1 + 11) = *((_OWORD *)a2 + 11);
        *((_OWORD *)a1 + 12) = v291;
        long long v292 = *((_OWORD *)a2 + 14);
        *((_OWORD *)a1 + 13) = *((_OWORD *)a2 + 13);
        *((_OWORD *)a1 + 14) = v292;
        goto LABEL_139;
      }
      uint64_t v264 = a2[19];
      uint64_t v265 = a2[20];
      a1[18] = v263;
      a1[19] = v264;
      a1[20] = v265;
      *((_WORD *)a1 + 84) = *((_WORD *)a2 + 84);
      a1[22] = a2[22];
      *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
      uint64_t v266 = (void *)a2[25];
      a1[24] = a2[24];
      a1[25] = v266;
      *((unsigned char *)a1 + 208) = *((unsigned char *)a2 + 208);
      uint64_t v267 = a2[28];
      id v268 = v263;
      swift_bridgeObjectRetain();
      id v269 = v266;
      if (v267 == 1)
      {
        long long v270 = *(_OWORD *)(a2 + 29);
        *(_OWORD *)(a1 + 27) = *(_OWORD *)(a2 + 27);
        *(_OWORD *)(a1 + 29) = v270;
        *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
      }
      else
      {
        a1[27] = a2[27];
        a1[28] = v267;
        uint64_t v294 = a2[30];
        a1[29] = a2[29];
        a1[30] = v294;
        unint64_t v296 = (void *)a2[31];
        uint64_t v295 = a2[32];
        a1[31] = v296;
        a1[32] = v295;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v297 = v296;
      }
      uint64_t v298 = a2 + 33;
      unint64_t v299 = a2[34];
      if (v299 >= 0x11)
      {
        a1[33] = *v298;
        a1[34] = v299;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 33) = *(_OWORD *)v298;
      }
      *((unsigned char *)a1 + 280) = *((unsigned char *)a2 + 280);
LABEL_168:
      *((unsigned char *)a1 + 281) = v71;
LABEL_196:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 7u:
      uint64_t v79 = a2[1];
      *a1 = *a2;
      a1[1] = v79;
      a1[2] = a2[2];
      *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
      a1[4] = a2[4];
      *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
      uint64_t v80 = a2[7];
      a1[6] = a2[6];
      a1[7] = v80;
      uint64_t v81 = a2[9];
      a1[8] = a2[8];
      a1[9] = v81;
      uint64_t v82 = a2[11];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v82 == 1)
      {
        long long v83 = *((_OWORD *)a2 + 8);
        *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
        *((_OWORD *)a1 + 8) = v83;
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
        long long v84 = *((_OWORD *)a2 + 6);
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((_OWORD *)a1 + 6) = v84;
      }
      else
      {
        a1[10] = a2[10];
        a1[11] = v82;
        uint64_t v133 = a2[15];
        swift_bridgeObjectRetain();
        if (v133)
        {
          uint64_t v134 = a2[16];
          a1[15] = v133;
          a1[16] = v134;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v133 - 8))((uint64_t)(a1 + 12), (uint64_t)(a2 + 12), v133);
          a1[17] = a2[17];
        }
        else
        {
          long long v248 = *((_OWORD *)a2 + 7);
          *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
          *((_OWORD *)a1 + 7) = v248;
          *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
        }
        *((unsigned char *)a1 + 144) = *((unsigned char *)a2 + 144);
      }
      goto LABEL_196;
    case 8u:
      uint64_t v85 = a2[1];
      *a1 = *a2;
      a1[1] = v85;
      uint64_t v86 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      long long v87 = (void *)((char *)a1 + v86);
      long long v88 = (char *)a2 + v86;
      uint64_t v89 = *(void *)((char *)a2 + v86 + 8);
      *long long v87 = *(void *)((char *)a2 + v86);
      v87[1] = v89;
      uint64_t v90 = *(void *)((char *)a2 + v86 + 24);
      v87[2] = *(void *)((char *)a2 + v86 + 16);
      v87[3] = v90;
      uint64_t v91 = type metadata accessor for FormatCustomItem.Resolved();
      uint64_t v92 = *(int *)(v91 + 24);
      __n128 v388 = (char *)v87 + v92;
      uint64_t v391 = v91;
      uint64_t v93 = &v88[v92];
      uint64_t v94 = type metadata accessor for FormatCustomItem.Action();
      uint64_t v386 = *(void *)(v94 - 8);
      uint64_t v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v386 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v95(v93, 1, v94))
      {
        sub_1BFEEF8E8(0, &qword_1EB887B40, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, MEMORY[0x1E4FBB718]);
        memcpy(v388, v93, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        uint64_t v195 = sub_1C1515FDC();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v388, v93, v195);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v386 + 56))(v388, 0, 1, v94);
      }
      *(void *)((char *)v87 + *(int *)(v391 + 28)) = *(void *)&v88[*(int *)(v391 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_196;
    case 9u:
      uint64_t v27 = a2[1];
      *a1 = *a2;
      a1[1] = v27;
      uint64_t v28 = a2[3];
      a1[2] = a2[2];
      a1[3] = v28;
      uint64_t v29 = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29)
      {
        uint64_t v30 = a2[8];
        a1[7] = v29;
        a1[8] = v30;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v29 - 8))((uint64_t)(a1 + 4), (uint64_t)(a2 + 4), v29);
      }
      else
      {
        long long v152 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v152;
        a1[8] = a2[8];
      }
      uint64_t v153 = a1 + 9;
      char v154 = a2 + 9;
      uint64_t v155 = a2[12];
      if (v155)
      {
        uint64_t v156 = a2[13];
        a1[12] = v155;
        a1[13] = v156;
        (**(void (***)(_OWORD *, _OWORD *))(v155 - 8))(v153, v154);
      }
      else
      {
        long long v165 = *(_OWORD *)(a2 + 11);
        *uint64_t v153 = *v154;
        *(_OWORD *)(a1 + 11) = v165;
        a1[13] = a2[13];
      }
      uint64_t v166 = a1 + 14;
      int v167 = a2 + 14;
      uint64_t v168 = a2[17];
      if (v168)
      {
        uint64_t v169 = a2[18];
        a1[17] = v168;
        a1[18] = v169;
        (**(void (***)(_OWORD *, _OWORD *))(v168 - 8))(v166, v167);
      }
      else
      {
        long long v182 = *((_OWORD *)a2 + 8);
        *uint64_t v166 = *v167;
        *((_OWORD *)a1 + 8) = v182;
        a1[18] = a2[18];
      }
      goto LABEL_196;
    case 0xAu:
      uint64_t v97 = a2[1];
      *a1 = *a2;
      a1[1] = v97;
      uint64_t v98 = (int *)type metadata accessor for FeedEngagementBanner();
      uint64_t v99 = v98[5];
      uint64_t v100 = (char *)a1 + v99;
      uint64_t v101 = (char *)a2 + v99;
      uint64_t v102 = sub_1C151959C();
      long long v103 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16);
      swift_bridgeObjectRetain();
      v103(v100, v101, v102);
      *(void *)((char *)a1 + v98[6]) = *(void *)((char *)a2 + v98[6]);
      uint64_t v104 = v98[7];
      long long v105 = (char *)a1 + v104;
      long long v106 = (char *)a2 + v104;
      *(void *)long long v105 = *(void *)v106;
      v105[8] = v106[8];
      uint64_t v107 = v98[8];
      uint64_t v21 = (char *)a1 + v107;
      uint64_t v22 = (char *)a2 + v107;
      unint64_t v23 = *((void *)v22 + 1);
      if (v23 >= 0x11)
      {
LABEL_37:
        *(void *)uint64_t v21 = *(void *)v22;
        *((void *)v21 + 1) = v23;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      }
      goto LABEL_196;
    case 0xBu:
      *a1 = *a2;
      swift_retain();
      goto LABEL_196;
    case 0xCu:
      uint64_t v31 = a2[1];
      *a1 = *a2;
      a1[1] = v31;
      uint64_t v32 = a2[3];
      a1[2] = a2[2];
      a1[3] = v32;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_196;
    case 0xDu:
      uint64_t v108 = a2[1];
      *a1 = *a2;
      a1[1] = v108;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      long long v109 = a2 + 3;
      unint64_t v110 = a2[4];
      if (v110 >= 0x11)
      {
        a1[3] = *v109;
        a1[4] = v110;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v109;
      }
      uint64_t v135 = a2[6];
      a1[5] = a2[5];
      a1[6] = v135;
      uint64_t v136 = (void *)a2[8];
      a1[7] = a2[7];
      a1[8] = v136;
      *((unsigned char *)a1 + 72) = *((unsigned char *)a2 + 72);
      a1[10] = a2[10];
      uint64_t v137 = a2[14];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      id v138 = v136;
      swift_bridgeObjectRetain();
      if (v137)
      {
        uint64_t v139 = a2[15];
        a1[14] = v137;
        a1[15] = v139;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v137 - 8))((uint64_t)(a1 + 11), (uint64_t)(a2 + 11), v137);
      }
      else
      {
        long long v196 = *(_OWORD *)(a2 + 13);
        *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 13) = v196;
        a1[15] = a2[15];
      }
      uint64_t v197 = a1 + 16;
      uint64_t v198 = a2 + 16;
      uint64_t v199 = a2[19];
      if (v199)
      {
        uint64_t v200 = a2[20];
        a1[19] = v199;
        a1[20] = v200;
        (**(void (***)(_OWORD *, _OWORD *))(v199 - 8))(v197, v198);
      }
      else
      {
        long long v207 = *((_OWORD *)a2 + 9);
        *uint64_t v197 = *v198;
        *((_OWORD *)a1 + 9) = v207;
        a1[20] = a2[20];
      }
      uint64_t v208 = a1 + 21;
      char v209 = a2 + 21;
      uint64_t v210 = a2[24];
      if (v210)
      {
        uint64_t v211 = a2[25];
        a1[24] = v210;
        a1[25] = v211;
        (**(void (***)(_OWORD *, _OWORD *))(v210 - 8))(v208, v209);
      }
      else
      {
        long long v212 = *(_OWORD *)(a2 + 23);
        *uint64_t v208 = *v209;
        *(_OWORD *)(a1 + 23) = v212;
        a1[25] = a2[25];
      }
      goto LABEL_196;
    case 0xEu:
      uint64_t v33 = a2[1];
      *a1 = *a2;
      a1[1] = v33;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      int v34 = a2 + 3;
      unint64_t v35 = a2[4];
      if (v35 >= 0x11)
      {
        a1[3] = *v34;
        a1[4] = v35;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v34;
      }
      uint64_t v126 = a2[6];
      a1[5] = a2[5];
      a1[6] = v126;
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_196;
    case 0xFu:
      uint64_t v111 = a2[1];
      *a1 = *a2;
      a1[1] = v111;
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      long long v112 = a2 + 3;
      unint64_t v113 = a2[4];
      if (v113 >= 0x11)
      {
        a1[3] = *v112;
        a1[4] = v113;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 3) = *(_OWORD *)v112;
      }
      break;
    case 0x10u:
      uint64_t v36 = a2[1];
      *a1 = *a2;
      a1[1] = v36;
      uint64_t v37 = a2[3];
      a1[2] = a2[2];
      a1[3] = v37;
      uint64_t v38 = a2[5];
      a1[4] = a2[4];
      a1[5] = v38;
      *((_WORD *)a1 + 24) = *((_WORD *)a2 + 24);
      *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
      uint64_t v39 = a2[10];
      a1[9] = a2[9];
      a1[10] = v39;
      uint64_t v40 = a2[12];
      a1[11] = a2[11];
      a1[12] = v40;
      a1[13] = a2[13];
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      uint64_t v41 = a2[16];
      a1[15] = a2[15];
      a1[16] = v41;
      *((unsigned char *)a1 + 136) = *((unsigned char *)a2 + 136);
      uint64_t v42 = a2[19];
      a1[18] = a2[18];
      a1[19] = v42;
      uint64_t v43 = a2[21];
      a1[20] = a2[20];
      a1[21] = v43;
      *((unsigned char *)a1 + 184) = *((unsigned char *)a2 + 184);
      a1[22] = a2[22];
      uint64_t v44 = a2[25];
      a1[24] = a2[24];
      a1[25] = v44;
      *((unsigned char *)a1 + 224) = *((unsigned char *)a2 + 224);
      uint64_t v45 = a2[27];
      a1[26] = a2[26];
      a1[27] = v45;
      uint64_t v387 = a2 + 29;
      unint64_t v46 = a2[30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46 >= 0x11)
      {
        a1[29] = *v387;
        a1[30] = v46;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 29) = *(_OWORD *)v387;
      }
      goto LABEL_196;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
  uint64_t v140 = a2[6];
  a1[5] = a2[5];
  a1[6] = v140;
  uint64_t v141 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  unint64_t v142 = (char *)a1 + v141;
  uint64_t v143 = (char *)a2 + v141;
  *(void *)((char *)a1 + v141) = *(void *)((char *)a2 + v141);
  uint64_t v144 = *(int *)(type metadata accessor for PuzzleStatistic() + 20);
  uint64_t v145 = &v142[v144];
  uint64_t v146 = &v143[v144];
  type metadata accessor for PuzzleStatisticCategory(0);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v231 = type metadata accessor for PuzzleStatisticValue(0);
      int v232 = swift_getEnumCaseMultiPayload();
      if (v232 == 5)
      {
        uint64_t v233 = type metadata accessor for PuzzleStreak();
        uint64_t v234 = *(void *)(v233 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v234 + 48))(v146, 1, v233))
        {
LABEL_105:
          sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v145, v146, *(void *)(*(void *)(v235 - 8) + 64));
          goto LABEL_175;
        }
      }
      else
      {
        if (v232 != 4)
        {
          memcpy(v145, v146, *(void *)(*(void *)(v231 - 8) + 64));
          goto LABEL_176;
        }
        uint64_t v233 = type metadata accessor for PuzzleStreak();
        uint64_t v234 = *(void *)(v233 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v234 + 48))(v146, 1, v233)) {
          goto LABEL_105;
        }
      }
      uint64_t v357 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v357 - 8) + 16))(v145, v146, v357);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v234 + 56))(v145, 0, 1, v233);
LABEL_175:
      swift_storeEnumTagMultiPayload();
LABEL_176:
      uint64_t v358 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
      uint64_t v359 = *(int *)(v358 + 20);
      uint64_t v360 = &v145[v359];
      uint64_t v361 = &v146[v359];
      int v362 = swift_getEnumCaseMultiPayload();
      if (v362 == 5)
      {
        uint64_t v363 = type metadata accessor for PuzzleStreak();
        uint64_t v364 = *(void *)(v363 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v364 + 48))(v361, 1, v363))
        {
LABEL_181:
          sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v360, v361, *(void *)(*(void *)(v365 - 8) + 64));
LABEL_184:
          swift_storeEnumTagMultiPayload();
          goto LABEL_185;
        }
      }
      else
      {
        if (v362 != 4)
        {
          memcpy(v360, v361, *(void *)(*(void *)(v231 - 8) + 64));
LABEL_185:
          uint64_t v367 = *(int *)(v358 + 24);
          uint64_t v368 = &v145[v367];
          v146 += v367;
          int v369 = swift_getEnumCaseMultiPayload();
          if (v369 == 5)
          {
            uint64_t v370 = type metadata accessor for PuzzleStreak();
            uint64_t v371 = *(void *)(v370 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v371 + 48))(v146, 1, v370))
            {
LABEL_190:
              sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
              memcpy(v368, v146, *(void *)(*(void *)(v372 - 8) + 64));
              goto LABEL_194;
            }
            goto LABEL_193;
          }
          if (v369 == 4)
          {
            uint64_t v370 = type metadata accessor for PuzzleStreak();
            uint64_t v371 = *(void *)(v370 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v371 + 48))(v146, 1, v370)) {
              goto LABEL_190;
            }
LABEL_193:
            uint64_t v373 = sub_1C151555C();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v373 - 8) + 16))(v368, v146, v373);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v371 + 56))(v368, 0, 1, v370);
            goto LABEL_194;
          }
          size_t v230 = *(void *)(*(void *)(v231 - 8) + 64);
          char v348 = v368;
LABEL_192:
          memcpy(v348, v146, v230);
LABEL_195:
          swift_storeEnumTagMultiPayload();
          goto LABEL_196;
        }
        uint64_t v363 = type metadata accessor for PuzzleStreak();
        uint64_t v364 = *(void *)(v363 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v364 + 48))(v361, 1, v363)) {
          goto LABEL_181;
        }
      }
      uint64_t v366 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v366 - 8) + 16))(v360, v361, v366);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v364 + 56))(v360, 0, 1, v363);
      goto LABEL_184;
    case 2u:
      uint64_t v227 = (int *)type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
      uint64_t v228 = *((void *)v227 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v228 + 48))(v146, 1, v227))
      {
        sub_1BFEEF8E8(0, &qword_1EB884BF0, type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult, MEMORY[0x1E4FBB718]);
        size_t v230 = *(void *)(*(void *)(v229 - 8) + 64);
        goto LABEL_163;
      }
      uint64_t v300 = sub_1C151631C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v300 - 8) + 16))(v145, v146, v300);
      uint64_t v301 = (int *)type metadata accessor for PuzzleLeaderboardEntry();
      uint64_t v302 = v301[5];
      uint64_t v303 = &v145[v302];
      long long v304 = &v146[v302];
      uint64_t v305 = *((void *)v304 + 1);
      *(void *)uint64_t v303 = *(void *)v304;
      *((void *)v303 + 1) = v305;
      uint64_t v306 = v301[6];
      uint64_t v307 = &v145[v306];
      long long v308 = &v146[v306];
      uint64_t v309 = *((void *)v308 + 1);
      *(void *)uint64_t v307 = *(void *)v308;
      *((void *)v307 + 1) = v309;
      uint64_t v310 = (uint64_t *)(v308 + 16);
      unint64_t v311 = *((void *)v308 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v311 >> 60 == 15)
      {
        *((_OWORD *)v307 + 1) = *(_OWORD *)v310;
      }
      else
      {
        uint64_t v350 = *v310;
        sub_1BFE95820(*v310, v311);
        *((void *)v307 + 2) = v350;
        *((void *)v307 + 3) = v311;
      }
      *(void *)&v145[v301[7]] = *(void *)&v146[v301[7]];
      *(void *)&v145[v301[8]] = *(void *)&v146[v301[8]];
      *(void *)&v145[v227[5]] = *(void *)&v146[v227[5]];
      *(void *)&v145[v227[6]] = *(void *)&v146[v227[6]];
      uint64_t v351 = v227[7];
      __n128 v352 = &v145[v351];
      uint64_t v353 = &v146[v351];
      uint64_t v354 = *((void *)v353 + 1);
      *(void *)__n128 v352 = *(void *)v353;
      *((void *)v352 + 1) = v354;
      uint64_t v355 = *(void (**)(char *, void, uint64_t, int *))(v228 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v355(v145, 0, 1, v227);
      goto LABEL_195;
    case 3u:
      uint64_t v236 = *((void *)v146 + 1);
      *(void *)uint64_t v145 = *(void *)v146;
      *((void *)v145 + 1) = v236;
      v145[16] = v146[16];
      uint64_t v237 = (int *)type metadata accessor for PuzzleStatisticsGroupedValue(0);
      uint64_t v238 = v237[6];
      uint64_t v239 = &v145[v238];
      BOOL v240 = &v146[v238];
      uint64_t v241 = type metadata accessor for PuzzleStreak();
      uint64_t v242 = *(void *)(v241 - 8);
      unint64_t v243 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v242 + 48);
      if (v243(v240, 1, v241))
      {
        sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v239, v240, *(void *)(*(void *)(v244 - 8) + 64));
      }
      else
      {
        uint64_t v330 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v330 - 8) + 16))(v239, v240, v330);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v239, 0, 1, v241);
      }
      uint64_t v331 = v237[7];
      uint64_t v332 = &v145[v331];
      uint64_t v333 = &v146[v331];
      if (v243(&v146[v331], 1, v241))
      {
        sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
        memcpy(v332, v333, *(void *)(*(void *)(v334 - 8) + 64));
      }
      else
      {
        uint64_t v335 = sub_1C151555C();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v332, v333, v335);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v242 + 56))(v332, 0, 1, v241);
      }
      uint64_t v336 = v237[8];
      uint64_t v337 = &v145[v336];
      uint64_t v338 = &v146[v336];
      long long v339 = *((_OWORD *)v338 + 1);
      *(_OWORD *)uint64_t v337 = *(_OWORD *)v338;
      *((_OWORD *)v337 + 1) = v339;
      *(_OWORD *)(v337 + 25) = *(_OWORD *)(v338 + 25);
      uint64_t v340 = v237[9];
      uint64_t v341 = &v145[v340];
      char v342 = &v146[v340];
      *(_OWORD *)(v341 + 25) = *(_OWORD *)(v342 + 25);
      long long v343 = *((_OWORD *)v342 + 1);
      *(_OWORD *)uint64_t v341 = *(_OWORD *)v342;
      *((_OWORD *)v341 + 1) = v343;
      uint64_t v344 = v237[10];
      uint64_t v345 = &v145[v344];
      BOOL v346 = &v146[v344];
      long long v347 = *((_OWORD *)v346 + 1);
      *(_OWORD *)uint64_t v345 = *(_OWORD *)v346;
      *((_OWORD *)v345 + 1) = v347;
      *(_OWORD *)(v345 + 25) = *(_OWORD *)(v346 + 25);
      goto LABEL_195;
    default:
      uint64_t v147 = type metadata accessor for PuzzleStatisticValue(0);
      int v148 = swift_getEnumCaseMultiPayload();
      if (v148 == 5)
      {
        uint64_t v149 = type metadata accessor for PuzzleStreak();
        uint64_t v150 = *(void *)(v149 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(v146, 1, v149)) {
          goto LABEL_60;
        }
      }
      else
      {
        if (v148 != 4)
        {
          size_t v230 = *(void *)(*(void *)(v147 - 8) + 64);
LABEL_163:
          char v348 = v145;
          goto LABEL_192;
        }
        uint64_t v149 = type metadata accessor for PuzzleStreak();
        uint64_t v150 = *(void *)(v149 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48))(v146, 1, v149))
        {
LABEL_60:
          sub_1BFEEF8E8(0, &qword_1EB882A40, (uint64_t (*)(uint64_t))type metadata accessor for PuzzleStreak, MEMORY[0x1E4FBB718]);
          memcpy(v145, v146, *(void *)(*(void *)(v151 - 8) + 64));
          goto LABEL_194;
        }
      }
      uint64_t v356 = sub_1C151555C();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v356 - 8) + 16))(v145, v146, v356);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v145, 0, 1, v149);
LABEL_194:
      swift_storeEnumTagMultiPayload();
      goto LABEL_195;
  }
}

uint64_t type metadata accessor for FeedHeadline(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB873788);
}

uint64_t initializeWithCopy for FeedHeadline(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v7 = a3[10];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  *uint64_t v8 = *(unsigned char *)(a2 + v7);
  v8[1] = *(unsigned char *)(a2 + v7 + 1);
  uint64_t v10 = type metadata accessor for FeedHeadline.State(0);
  uint64_t v11 = *(int *)(v10 + 24);
  __dst = &v8[v11];
  uint64_t v43 = (int *)v10;
  uint64_t v12 = (char *)(v9 + v11);
  uint64_t v13 = (int *)type metadata accessor for SharedItem();
  uint64_t v40 = *((void *)v13 - 1);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, int *))(v40 + 48);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  if (v14(v12, 1, v13))
  {
    uint64_t v15 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(__dst, v12, v16);
    __dst[v13[5]] = v12[v13[5]];
    uint64_t v17 = v13[6];
    uint64_t v18 = *(void **)&v12[v17];
    *(void *)&__dst[v17] = v18;
    uint64_t v19 = v13[7];
    uint64_t v41 = &__dst[v19];
    uint64_t v39 = &v12[v19];
    uint64_t v20 = sub_1C1515FDC();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    id v22 = v18;
    v21(v41, v39, v20);
    (*(void (**)(char *, void, uint64_t, int *))(v40 + 56))(__dst, 0, 1, v13);
  }
  v8[v43[7]] = *(unsigned char *)(v9 + v43[7]);
  v8[v43[8]] = *(unsigned char *)(v9 + v43[8]);
  v8[v43[9]] = *(unsigned char *)(v9 + v43[9]);
  v8[v43[10]] = *(unsigned char *)(v9 + v43[10]);
  uint64_t v23 = a3[11];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = sub_1C151D2DC();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1BFEEF378(0, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v29 = a3[12];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (void *)(a2 + v29);
  unint64_t v32 = v31[1];
  if (v32 >= 0x11)
  {
    *uint64_t v30 = *v31;
    v30[1] = v32;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  }
  uint64_t v33 = a3[13];
  unint64_t v34 = *(void *)(a2 + v33);
  if (v34 >= 2)
  {
    if (v34 == 2)
    {
      *(void *)(a1 + v33) = 2;
    }
    else
    {
      *(void *)(a1 + v33) = v34;
      swift_unknownObjectRetain();
    }
  }
  else
  {
    *(void *)(a1 + v33) = v34;
  }
  uint64_t v35 = a3[14];
  uint64_t v36 = *(void **)(a2 + v35);
  *(void *)(a1 + v35) = v36;
  id v37 = v36;
  return a1;
}

uint64_t type metadata accessor for FeedItem.SharedState(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, (uint64_t *)&unk_1EB87D1D8);
}

void sub_1BFEEF2C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEEF314(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEF378(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEF3DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEF440(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEEF494(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEF4F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void destroy for FeedHeadline(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v4 = a1 + a2[10];
  uint64_t v5 = v4 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  uint64_t v6 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    uint64_t v7 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);

    uint64_t v8 = v5 + *(int *)(v6 + 28);
    uint64_t v9 = sub_1C1515FDC();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + a2[11];
  uint64_t v11 = sub_1C151D2DC();
  uint64_t v12 = *(void *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  if (*(void *)(a1 + a2[12] + 8) >= 0x11uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + a2[13]) >= 3uLL) {
    swift_unknownObjectRelease();
  }
  uint64_t v13 = *(void **)(a1 + a2[14]);
}

uint64_t type metadata accessor for FeedHeadline.State(uint64_t a1)
{
  return sub_1BFC5CCB4(a1, qword_1EB87D3A0);
}

uint64_t type metadata accessor for SharedItem()
{
  uint64_t result = qword_1EB8963D8;
  if (!qword_1EB8963D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SharedItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C13A53BC);
}

void sub_1BFEEF7DC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEEF830(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C151FD8C();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BFEEF884(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEF8E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1BFEEF94C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BFEEF9B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEEFA18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEEFA80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEEFAE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEEFB50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEEFBB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BFEEFC20(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x11) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for FeedItem.SharedState(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for SharedItem();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_1C151631C();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    a1[v6[5]] = a2[v6[5]];
    uint64_t v9 = v6[6];
    uint64_t v10 = *(void **)&a2[v9];
    *(void *)&a1[v9] = v10;
    uint64_t v11 = v6[7];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = sub_1C1515FDC();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    id v16 = v10;
    v15(v12, v13, v14);
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t _s8NewsFeed0B8HeadlineV5StateV2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2
    && a1[1] == a2[1]
    && (unint64_t v4 = (int *)type metadata accessor for FeedHeadline.State(0),
        (_s8NewsFeed0B4ItemO11SharedStateO2eeoiySbAE_AEtFZ_0((uint64_t)&a1[v4[6]], (uint64_t)&a2[v4[6]]) & 1) != 0)
    && a1[v4[7]] == a2[v4[7]]
    && a1[v4[8]] == a2[v4[8]]
    && a1[v4[9]] == a2[v4[9]])
  {
    char v5 = a1[v4[10]] ^ a2[v4[10]] ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t destroy for FeedItem.SharedState(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedItem();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_1C151631C();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

    uint64_t v5 = a1 + *(int *)(v2 + 28);
    uint64_t v6 = sub_1C1515FDC();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  return result;
}

void sub_1BFEEFFA8()
{
  if (!qword_1EB8854A8)
  {
    sub_1BFEEF378(255, (unint64_t *)&unk_1EB8716B0, MEMORY[0x1E4F7A860], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB8854A8);
    }
  }
}

uint64_t _s8NewsFeed0B4ItemO11SharedStateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedItem();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = type metadata accessor for FeedItem.SharedState(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BFEF0340();
  MEMORY[0x1F4188790](v14 - 8);
  id v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v16[*(int *)(v17 + 56)];
  sub_1BFEEB0CC(a1, (uint64_t)v16, type metadata accessor for FeedItem.SharedState);
  sub_1BFEEB0CC(a2, v18, type metadata accessor for FeedItem.SharedState);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v16, 1, v4) == 1)
  {
    char v20 = 1;
    int v21 = v19(v18, 1, v4);
    id v22 = type metadata accessor for FeedItem.SharedState;
    if (v21 == 1) {
      goto LABEL_8;
    }
  }
  else
  {
    sub_1BFEEB0CC((uint64_t)v16, (uint64_t)v13, type metadata accessor for FeedItem.SharedState);
    if (v19(v18, 1, v4) != 1)
    {
      sub_1BFEEFA80((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SharedItem);
      sub_1BFEEFA80(v18, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SharedItem);
      char v20 = _s8NewsFeed10SharedItemV2eeoiySbAC_ACtFZ_0((uint64_t)v10, (uint64_t)v7);
      sub_1BFEEB3A0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SharedItem);
      sub_1BFEEB3A0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SharedItem);
      id v22 = type metadata accessor for FeedItem.SharedState;
      goto LABEL_8;
    }
    sub_1BFEEB3A0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SharedItem);
  }
  char v20 = 0;
  id v22 = (uint64_t (*)(void))sub_1BFEF0340;
LABEL_8:
  sub_1BFEEB3A0((uint64_t)v16, v22);
  return v20 & 1;
}

void sub_1BFEF0340()
{
  if (!qword_1EB87C610)
  {
    type metadata accessor for FeedItem.SharedState(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EB87C610);
    }
  }
}

void sub_1BFEF03A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v127 = (_OWORD *)a2;
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  uint64_t v6 = sub_1C151D4AC();
  uint64_t v103 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v97 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v96 = (char *)&v95 - v9;
  uint64_t v10 = v4[12];
  uint64_t v11 = v4[15];
  uint64_t v12 = v4[16];
  uint64_t v128 = v2;
  uint64_t v13 = v4[17];
  long long v129 = *((_OWORD *)v5 + 5);
  uint64_t v118 = v10;
  uint64_t v130 = v10;
  long long v115 = *(_OWORD *)(v5 + 13);
  long long v131 = v115;
  uint64_t v132 = v11;
  uint64_t v133 = v12;
  uint64_t v117 = v12;
  uint64_t v116 = v13;
  uint64_t v134 = v13;
  uint64_t v14 = type metadata accessor for FeedAdGroupDataProvider.FailureReason();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v104 = v6;
  uint64_t v99 = v14;
  uint64_t v98 = WitnessTable;
  uint64_t v16 = sub_1C1520E6C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v17 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v111 = (char *)&v95 - v18;
  uint64_t v110 = v16;
  uint64_t v123 = *(void *)(v16 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v101 = (uint64_t *)((char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v102 = (char *)&v95 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v119 = (_OWORD *)((char *)&v95 - v24);
  MEMORY[0x1F4188790](v23);
  uint64_t v120 = (_OWORD *)((char *)&v95 - v25);
  uint64_t v114 = sub_1C151B62C();
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  long long v112 = (char *)&v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1C151D87C();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v121 = v27;
  uint64_t v122 = v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v126 = (uint64_t)&v95 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for FeedBannerAd();
  MEMORY[0x1F4188790](v30);
  unint64_t v32 = (char *)&v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_1C151D33C();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v95 = (char *)&v95 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v100 = (char *)&v95 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v41 = (char *)&v95 - v40;
  MEMORY[0x1F4188790](v39);
  uint64_t v43 = (char *)&v95 - v42;
  uint64_t v125 = (char *)a1 + *(int *)(v30 + 20);
  sub_1C151DB8C();
  uint64_t v44 = *(void (**)(void))(v34 + 104);
  int v106 = *MEMORY[0x1E4F7A8B8];
  CGRect v124 = (void (*)(char *, void, uint64_t))v44;
  v44(v41);
  char v45 = MEMORY[0x1C18C4E50](v43, v41);
  uint64_t v107 = v34;
  uint64_t v48 = *(char **)(v34 + 8);
  unint64_t v46 = (void (*)(char *, void, uint64_t))(v34 + 8);
  uint64_t v47 = v48;
  ((void (*)(char *, uint64_t))v48)(v41, v33);
  ((void (*)(char *, uint64_t))v48)(v43, v33);
  long long v105 = a1;
  sub_1BFEEB064((uint64_t)a1, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
  uint64_t v109 = v33;
  if (v45)
  {
    sub_1BFEE189C((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    uint64_t v49 = v128;
  }
  else
  {
    sub_1C151DB8C();
    uint64_t v50 = *MEMORY[0x1E4F7A8A0];
    uint64_t v51 = sub_1C151D32C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 104))(v41, v50, v51);
    v124(v41, *MEMORY[0x1E4F7A898], v33);
    LOBYTE(v50) = MEMORY[0x1C18C4E50](v43, v41);
    ((void (*)(char *, uint64_t))v47)(v41, v33);
    ((void (*)(char *, uint64_t))v47)(v43, v33);
    sub_1BFEE189C((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for FeedBannerAd);
    uint64_t v49 = v128;
    if ((v50 & 1) == 0) {
      return;
    }
  }
  uint64_t v52 = sub_1C151BCBC();
  if (v52)
  {
    uint64_t v53 = (void *)v52;
    sub_1C151DB4C();
    objc_msgSend(v53, sel_size);
    *(void *)&long long v129 = v118;
    *((void *)&v129 + 1) = v115;
    uint64_t v130 = v117;
    *(void *)&long long v131 = v116;
    sub_1C151A79C();
    uint64_t v54 = v112;
    sub_1C151A75C();
    sub_1C151B61C();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v54, v114);
    sub_1C151F7EC();
    uint64_t v55 = v126;
    sub_1C151D85C();
    uint64_t v56 = &v49[*(void *)(*(void *)v49 + 184)];
    uint64_t v57 = *((void *)v56 + 4);
    __swift_project_boxed_opaque_existential_1(v56, *((void *)v56 + 3));
    uint64_t v58 = sub_1C151D86C();
    char v59 = (*(uint64_t (**)(uint64_t))(v57 + 8))(v58);
    swift_bridgeObjectRelease();
    if (v59)
    {
      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v55, v121);

      return;
    }
    CGRect v124 = v46;
    uint64_t v128 = v47;
    uint64_t v60 = v120;
    uint64_t v61 = (uint64_t)v127;
    FeedAdGroupDataProvider.groupData(before:)((uint64_t)v127, v120);
    uint64_t v62 = v119;
    FeedAdGroupDataProvider.groupData(after:)(v61, v119);
    uint64_t v63 = v111;
    long long v64 = (uint64_t *)&v111[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v65 = *(void (**)(char *, _OWORD *, uint64_t))(v123 + 16);
    uint64_t v66 = v110;
    v65(v111, v60, v110);
    v65((char *)v64, v62, v66);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v127 = v64;
      uint64_t v67 = v101;
      v65((char *)v101, v63, v66);
      uint64_t v69 = *v67;
      unint64_t v68 = v67[1];
      long long v70 = v100;
      sub_1C151DB8C();
      uint64_t v71 = v109;
      int v72 = (*(uint64_t (**)(char *, uint64_t))(v107 + 88))(v70, v109);
      if (v72 == v106)
      {
        ((void (*)(char *, uint64_t))v128)(v70, v71);
        uint64_t v73 = swift_allocError();
        *char v74 = v69;
        v74[1] = v68;
        sub_1C002BBF8(v105, v73);

        uint64_t v75 = *(void (**)(_OWORD *, uint64_t))(v123 + 8);
        v75(v119, v66);
        v75(v120, v66);
        (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v126, v121);
        id v76 = (void *)v73;
        uint64_t v63 = v111;
      }
      else
      {
        sub_1BFFBE2A8(v69, v68);

        uint64_t v75 = *(void (**)(_OWORD *, uint64_t))(v123 + 8);
        v75(v119, v66);
        v75(v120, v66);
        (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v126, v121);
        ((void (*)(char *, uint64_t))v128)(v70, v71);
      }
      v75(v127, v66);
    }
    else
    {
      id v77 = v102;
      v65(v102, v63, v66);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v79 = v109;
      if (EnumCaseMultiPayload == 1)
      {
        (*(void (**)(char *, uint64_t))(v103 + 8))(v77, v104);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          sub_1C1520A8C();
          __break(1u);
          return;
        }
        uint64_t v81 = *v64;
        unint64_t v80 = v64[1];
        uint64_t v82 = v95;
        sub_1C151DB8C();
        int v83 = (*(uint64_t (**)(char *, uint64_t))(v107 + 88))(v82, v79);
        if (v83 == v106)
        {
          ((void (*)(char *, uint64_t))v128)(v82, v79);
          long long v84 = (void *)swift_allocError();
          *uint64_t v85 = v81;
          v85[1] = v80;
          sub_1C002BBF8(v105, (uint64_t)v84);

          uint64_t v75 = *(void (**)(_OWORD *, uint64_t))(v123 + 8);
          v75(v119, v66);
          v75(v120, v66);
          (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v126, v121);
        }
        else
        {
          sub_1BFFBE2A8(v81, v80);

          uint64_t v75 = *(void (**)(_OWORD *, uint64_t))(v123 + 8);
          v75(v119, v66);
          v75(v120, v66);
          (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v126, v121);
          ((void (*)(char *, uint64_t))v128)(v82, v79);
        }
      }
      else
      {
        uint64_t v86 = v103;
        long long v87 = v64;
        long long v88 = *(void (**)(char *, char *, uint64_t))(v103 + 32);
        uint64_t v89 = (uint64_t)v96;
        uint64_t v90 = v77;
        uint64_t v91 = v104;
        v88(v96, v90, v104);
        uint64_t v92 = (uint64_t)v97;
        v88(v97, (char *)v87, v91);
        uint64_t v93 = v126;
        sub_1C002C858(v105, v126, v53, v89, v92);

        uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
        v94(v92, v91);
        v94(v89, v91);
        uint64_t v75 = *(void (**)(_OWORD *, uint64_t))(v123 + 8);
        v75(v119, v66);
        v75(v120, v66);
        (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v93, v121);
      }
      uint64_t v63 = v111;
    }
    v75(v63, v66);
  }
}

uint64_t type metadata accessor for FeedAdGroupDataProvider.FailureReason()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1BFEF1248(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C0EDF7CC(a1, a2, a3, a4, &qword_1EB8903D8, MEMORY[0x1E4F7ABF8], MEMORY[0x1E4F7ABF8], MEMORY[0x1E4F7ABF8]);
}

uint64_t sub_1BFEF1290@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>, CGFloat a7@<D5>, CGFloat a8@<D6>, CGFloat a9@<D7>)
{
  v30.origin.x = a6;
  v30.origin.y = a7;
  v30.size.width = a8;
  v30.size.height = a9;
  double MidX = CGRectGetMidX(v30);
  v31.origin.x = a2;
  v31.origin.y = a3;
  v31.size.width = a4;
  v31.size.height = a5;
  double v18 = MidX - CGRectGetMidX(v31);
  v32.origin.x = a6;
  v32.origin.y = a7;
  v32.size.width = a8;
  v32.size.height = a9;
  double MidY = CGRectGetMidY(v32);
  v33.origin.x = a2;
  v33.origin.y = a3;
  v33.size.width = a4;
  v33.size.height = a5;
  double v20 = MidY - CGRectGetMidY(v33);
  uint64_t v21 = sub_1C151D45C();
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104);
  uint64_t v23 = (unsigned int *)MEMORY[0x1E4F7A9F0];
  if (v20 > 0.0) {
    uint64_t v23 = (unsigned int *)MEMORY[0x1E4F7AA08];
  }
  uint64_t v24 = (unsigned int *)MEMORY[0x1E4F7A9F8];
  if (v18 > 0.0) {
    uint64_t v24 = (unsigned int *)MEMORY[0x1E4F7AA00];
  }
  if (v18 >= v20) {
    uint64_t v23 = v24;
  }
  uint64_t v25 = *v23;
  return v22(a1, v25, v21);
}

uint64_t sub_1BFEF13D8(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v67 = type metadata accessor for FormatOption();
  MEMORY[0x1F4188790](v67);
  uint64_t v66 = (uint64_t *)((char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v4);
  uint64_t v74 = (uint64_t)&v61 - v5;
  MEMORY[0x1F4188790](v6);
  uint64_t v73 = (uint64_t)&v61 - v7;
  MEMORY[0x1F4188790](v8);
  uint64_t v65 = (uint64_t)&v61 - v9;
  MEMORY[0x1F4188790](v10);
  uint64_t v64 = (uint64_t)&v61 - v11;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v61 - v13);
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v16 = (unint64_t *)(a1 + 32);
    unint64_t v17 = MEMORY[0x1E4FBC868];
    while (1)
    {
      unint64_t v19 = *v16++;
      unint64_t v18 = v19;
      sub_1BFEF9524((uint64_t)v14);
      uint64_t v20 = *v14;
      uint64_t v21 = v14[1];
      uint64_t v77 = v19 & 0xFFFFFFFFFFFFFFBLL;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C12450A4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
      if (*(void *)(v17 + 16) && (unint64_t v22 = sub_1BFEF2D8C(v20, v21), (v23 & 1) != 0))
      {
        uint64_t v24 = *(void *)(*(void *)(v17 + 56) + 8 * v22);
        swift_retain();
        swift_bridgeObjectRelease();
        unsigned int v25 = (v18 >> 59) & 0x1E | (v18 >> 2) & 1;
        if (v25 > 0x12) {
          unint64_t v26 = 10;
        }
        else {
          unint64_t v26 = qword_1C15DA430[v25];
        }
        unint64_t v31 = *(void *)(v24 + 16);
        unsigned int v32 = (v31 >> 59) & 0x1E | (v31 >> 2) & 1;
        uint64_t v75 = v24;
        id v76 = v16;
        if (v32 > 0x12 || qword_1C15DA430[v32] >= v26)
        {
          uint64_t v46 = v73;
          sub_1BFEF9524(v73);
          uint64_t v47 = *(void *)(v46 + 16);
          swift_retain();
          sub_1C12450A4(v46, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v48 = v74;
          sub_1BFEF9524(v74);
          unint64_t v49 = *(void *)(v48 + 16);
          swift_retain();
          sub_1C12450A4(v48, (uint64_t (*)(void))type metadata accessor for FormatOption);
          if (v49 >> 60 != 5 || (v47 & 0xF000000000000000) != 0x1000000000000000)
          {
            swift_release();
            swift_release();
            unint64_t v78 = v18;
            type metadata accessor for FormatOptionElement();
            swift_allocObject();
            swift_retain();
            uint64_t v27 = sub_1BFEF24A4(&v78);
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v16 = v76;
            goto LABEL_8;
          }
          uint64_t v50 = *(uint64_t (**)())((v49 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v51 = *(void *)((v49 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v70 = *(void *)((v49 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v71 = v50;
          uint64_t v52 = *(void *)((v47 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v69 = *(void *)((v47 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v53 = v66;
          sub_1BFEF9524((uint64_t)v66);
          uint64_t v54 = v53[1];
          uint64_t v68 = *v53;
          swift_retain();
          swift_bridgeObjectRetain();
          int v72 = (uint64_t (*)(void))type metadata accessor for FormatOption;
          sub_1C12450A4((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v55 = swift_allocObject();
          uint64_t v56 = v68;
          *(void *)(v55 + 16) = v69;
          *(void *)(v55 + 24) = v52;
          uint64_t v57 = v71;
          *(void *)(v55 + 32) = v70;
          *(void *)(v55 + 40) = v57;
          *(void *)(v55 + 48) = v51;
          *uint64_t v14 = v56;
          v14[1] = v54;
          void v14[2] = v55 | 0x1000000000000000;
          v14[3] = 1;
          uint64_t v58 = (char *)v14 + *(int *)(v67 + 28);
          uint64_t v59 = type metadata accessor for FormatVersionRequirement(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 1, 1, v59);
          sub_1C12435E8((uint64_t)v14, v18, &v78);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C12450A4((uint64_t)v14, v72);
        }
        else
        {
          uint64_t v33 = v64;
          sub_1BFEF9524(v64);
          uint64_t v34 = *(void *)(v33 + 16);
          swift_retain();
          int v72 = (uint64_t (*)(void))(v31 & 0xFFFFFFFFFFFFFFBLL);
          swift_retain();
          sub_1C12450A4(v33, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v35 = v65;
          sub_1BFEF9524(v65);
          unint64_t v36 = *(void *)(v35 + 16);
          swift_retain();
          sub_1C12450A4(v35, (uint64_t (*)(void))type metadata accessor for FormatOption);
          if (v36 >> 60 != 5 || (v34 & 0xF000000000000000) != 0x1000000000000000)
          {
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v16 = v76;
            goto LABEL_9;
          }
          uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v38 = *(void *)((v36 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
          uint64_t v69 = *(void *)((v36 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v70 = v37;
          uint64_t v39 = *(void *)((v34 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v68 = *(void *)((v34 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
          uint64_t v40 = v66;
          sub_1BFEF9524((uint64_t)v66);
          uint64_t v41 = v40[1];
          uint64_t v61 = *v40;
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v71 = type metadata accessor for FormatOption;
          sub_1C12450A4((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v42 = swift_allocObject();
          *(void *)(v42 + 16) = v68;
          *(void *)(v42 + 24) = v39;
          uint64_t v43 = v70;
          *(void *)(v42 + 32) = v69;
          *(void *)(v42 + 40) = v43;
          *(void *)(v42 + 48) = v38;
          *uint64_t v14 = v61;
          v14[1] = v41;
          void v14[2] = v42 | 0x1000000000000000;
          v14[3] = 1;
          uint64_t v44 = (char *)v14 + *(int *)(v67 + 28);
          uint64_t v45 = type metadata accessor for FormatVersionRequirement(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
          sub_1C12435E8((uint64_t)v14, v31, &v78);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C12450A4((uint64_t)v14, (uint64_t (*)(void))v71);
          swift_release();
        }
        swift_release_n();
        swift_release();
        type metadata accessor for FormatOptionElement();
        swift_allocObject();
        uint64_t v27 = sub_1BFEF24A4(&v78);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v16 = v76;
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v78 = v18;
        type metadata accessor for FormatOptionElement();
        swift_allocObject();
        swift_retain();
        uint64_t v27 = sub_1BFEF24A4(&v78);
        swift_bridgeObjectRelease();
      }
LABEL_8:
      sub_1BFEF9524((uint64_t)v14);
      uint64_t v28 = *v14;
      uint64_t v29 = v14[1];
      swift_bridgeObjectRetain();
      sub_1C12450A4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v78 = v17;
      sub_1BFEF248C((uint64_t)v27, v28, v29, isUniquelyReferenced_nonNull_native);
      unint64_t v17 = v78;
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      if (!--v15) {
        goto LABEL_24;
      }
    }
  }
  unint64_t v17 = MEMORY[0x1E4FBC868];
LABEL_24:
  uint64_t result = v63;
  *(void *)(v63 + 16) = v62;
  *(void *)(result + 24) = v17;
  return result;
}

uint64_t sub_1BFEF1B58(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v71 = type metadata accessor for FormatOption();
  MEMORY[0x1F4188790](v71);
  uint64_t v70 = (uint64_t *)((char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v5);
  uint64_t v73 = (uint64_t)&v63 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v72 = (uint64_t)&v63 - v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v77 = (uint64_t)&v63 - v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v76 = (uint64_t)&v63 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v63 - v14);
  swift_beginAccess();
  uint64_t v69 = v1;
  unint64_t v16 = v1[3];
  unint64_t v17 = *(uint64_t (**)())(a1 + 16);
  if (v17)
  {
    uint64_t v63 = v3;
    uint64_t v80 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v68 = a1;
    uint64_t result = swift_bridgeObjectRetain();
    LODWORD(v75) = 0;
    unint64_t v19 = 0;
    uint64_t v74 = (uint64_t (*)())((char *)v17 - 1);
    unint64_t v78 = v17;
    uint64_t v79 = v15;
LABEL_5:
    if ((unint64_t)v19 <= (unint64_t)v17) {
      uint64_t v24 = v17;
    }
    else {
      uint64_t v24 = v19;
    }
    unint64_t v81 = v16;
    uint64_t v82 = v24;
    unsigned int v25 = v19;
    while (v82 != v25)
    {
      unint64_t v26 = *(void *)(v80 + 8 * (void)v25);
      sub_1BFEF9524((uint64_t)v15);
      uint64_t v27 = *v15;
      uint64_t v28 = v15[1];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C12450A4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatOption);
      if (!*(void *)(v16 + 16) || (unint64_t v29 = sub_1BFEF2D8C(v27, v28), (v30 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        unint64_t v84 = v26;
        type metadata accessor for FormatOptionElement();
        swift_allocObject();
        swift_retain();
        uint64_t v20 = sub_1BFEF24A4(&v84);
        swift_bridgeObjectRelease();
LABEL_4:
        sub_1BFEF9524((uint64_t)v15);
        uint64_t v21 = *v15;
        uint64_t v22 = v15[1];
        swift_bridgeObjectRetain();
        sub_1C12450A4((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for FormatOption);
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v84 = v16;
        sub_1BFEF248C((uint64_t)v20, v21, v22, isUniquelyReferenced_nonNull_native);
        unint64_t v16 = v84;
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v19 = (uint64_t (*)())((char *)v25 + 1);
        LODWORD(v75) = 1;
        if (v74 != v25) {
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
LABEL_31:
        uint64_t v62 = v69[2];
        uint64_t v61 = swift_allocObject();
        *(void *)(v61 + 16) = v62;
        *(void *)(v61 + 24) = v16;
        swift_retain();
        return v61;
      }
      uint64_t v31 = *(void *)(*(void *)(v16 + 56) + 8 * v29);
      swift_retain();
      swift_bridgeObjectRelease();
      unsigned int v32 = (v26 >> 59) & 0x1E | (v26 >> 2) & 1;
      if (v32 > 0x12) {
        unint64_t v33 = 10;
      }
      else {
        unint64_t v33 = qword_1C15DA430[v32];
      }
      unint64_t v34 = *(void *)(v31 + 16);
      unsigned int v35 = (v34 >> 59) & 0x1E | (v34 >> 2) & 1;
      if (v35 > 0x12 || qword_1C15DA430[v35] >= v33)
      {
        uint64_t v48 = v72;
        sub_1BFEF9524(v72);
        uint64_t v49 = *(void *)(v48 + 16);
        uint64_t v50 = v49 & 0xFFFFFFFFFFFFFFFLL;
        swift_retain();
        sub_1C12450A4(v48, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v51 = v73;
        sub_1BFEF9524(v73);
        unint64_t v52 = *(void *)(v51 + 16);
        uint64_t v53 = v52 & 0xFFFFFFFFFFFFFFFLL;
        swift_retain();
        sub_1C12450A4(v51, (uint64_t (*)(void))type metadata accessor for FormatOption);
        if (v52 >> 60 == 5 && (v49 & 0xF000000000000000) == 0x1000000000000000)
        {
          uint64_t v54 = *(void *)((v52 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v82 = *(uint64_t (**)())(v53 + 32);
          uint64_t v67 = *(void *)(v53 + 16);
          uint64_t v55 = *(void *)((v49 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
          uint64_t v66 = *(void *)(v50 + 16);
          uint64_t v75 = v55;
          uint64_t v56 = v70;
          sub_1BFEF9524((uint64_t)v70);
          uint64_t v57 = v56[1];
          uint64_t v65 = *v56;
          swift_retain();
          swift_bridgeObjectRetain();
          int v83 = type metadata accessor for FormatOption;
          sub_1C12450A4((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v58 = swift_allocObject();
          *(void *)(v58 + 16) = v66;
          *(void *)(v58 + 24) = v55;
          *(void *)(v58 + 32) = v67;
          *(void *)(v58 + 40) = v54;
          *(void *)(v58 + 48) = v82;
          uint64_t v15 = v79;
          *uint64_t v79 = v65;
          v15[1] = v57;
          void v15[2] = v58 | 0x1000000000000000;
          _OWORD v15[3] = 1;
          uint64_t v59 = (char *)v15 + *(int *)(v71 + 28);
          uint64_t v60 = type metadata accessor for FormatVersionRequirement(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
          sub_1C12435E8((uint64_t)v15, v26, &v84);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C12450A4((uint64_t)v15, (uint64_t (*)(void))v83);
          swift_release_n();
          swift_release();
          type metadata accessor for FormatOptionElement();
          swift_allocObject();
          uint64_t v20 = sub_1BFEF24A4(&v84);
          unint64_t v16 = v81;
          swift_bridgeObjectRelease();
          swift_release();
        }
        else
        {
          swift_release();
          swift_release();
          unint64_t v84 = v26;
          type metadata accessor for FormatOptionElement();
          swift_allocObject();
          swift_retain();
          uint64_t v20 = sub_1BFEF24A4(&v84);
          unint64_t v16 = v81;
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v15 = v79;
        }
LABEL_25:
        unint64_t v17 = v78;
        goto LABEL_4;
      }
      int v83 = (uint64_t (*)())v31;
      uint64_t v36 = v76;
      sub_1BFEF9524(v76);
      uint64_t v37 = *(void *)(v36 + 16);
      uint64_t v38 = v37 & 0xFFFFFFFFFFFFFFFLL;
      swift_retain();
      swift_retain();
      sub_1C12450A4(v36, (uint64_t (*)(void))type metadata accessor for FormatOption);
      uint64_t v39 = v77;
      sub_1BFEF9524(v77);
      unint64_t v40 = *(void *)(v39 + 16);
      swift_retain();
      sub_1C12450A4(v39, (uint64_t (*)(void))type metadata accessor for FormatOption);
      if (v40 >> 60 == 5 && (v37 & 0xF000000000000000) == 0x1000000000000000)
      {
        uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v75 = *(void *)((v40 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
        uint64_t v66 = *(void *)((v40 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
        uint64_t v42 = *(void *)((v37 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v65 = *(void *)(v38 + 16);
        uint64_t v67 = v42;
        uint64_t v43 = v70;
        sub_1BFEF9524((uint64_t)v70);
        uint64_t v44 = v43[1];
        uint64_t v64 = *v43;
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v82 = type metadata accessor for FormatOption;
        sub_1C12450A4((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for FormatOption);
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = v65;
        *(void *)(v45 + 24) = v42;
        *(void *)(v45 + 32) = v66;
        *(void *)(v45 + 40) = v41;
        *(void *)(v45 + 48) = v75;
        uint64_t v15 = v79;
        *uint64_t v79 = v64;
        v15[1] = v44;
        void v15[2] = v45 | 0x1000000000000000;
        _OWORD v15[3] = 1;
        uint64_t v46 = (char *)v15 + *(int *)(v71 + 28);
        uint64_t v47 = type metadata accessor for FormatVersionRequirement(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 1, 1, v47);
        sub_1C12435E8((uint64_t)v15, v34, &v84);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C12450A4((uint64_t)v15, (uint64_t (*)(void))v82);
        swift_release();
        swift_release_n();
        swift_release();
        type metadata accessor for FormatOptionElement();
        swift_allocObject();
        uint64_t v20 = sub_1BFEF24A4(&v84);
        unint64_t v16 = v81;
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_25;
      }
      unsigned int v25 = (uint64_t (*)())((char *)v25 + 1);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      unint64_t v16 = v81;
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      unint64_t v17 = v78;
      uint64_t v15 = v79;
      if (v78 == v25)
      {
        swift_bridgeObjectRelease();
        if ((v75 & 1) == 0) {
          goto LABEL_29;
        }
        goto LABEL_31;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_29:
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FormatOptionElement()
{
  return self;
}

uint64_t sub_1BFEF248C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1BFEF2C04(a1, a2, a3, a4, (void (*)(void))sub_1BFEF3110);
}

void *sub_1BFEF24A4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatOption();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v18 - v8;
  v2[2] = *a1;
  sub_1BFEF9524((uint64_t)&v18 - v8);
  uint64_t v18 = *((void *)v9 + 2);
  swift_retain();
  uint64_t v10 = sub_1BFEF2694();
  uint64_t v12 = v11;
  if (v11 >= 2)
  {
    uint64_t v18 = 36;
    unint64_t v19 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1C151E80C();
    swift_bridgeObjectRelease();
    sub_1C151E80C();
    sub_1C151E80C();
    sub_1BFEF2F40(v10, v12);
    uint64_t v10 = v18;
    uint64_t v12 = v19;
  }
  sub_1C01A0054((uint64_t)v9);
  v2[3] = v10;
  v2[4] = v12;
  sub_1BFEF9524((uint64_t)v6);
  uint64_t v13 = sub_1BFEF2810();
  uint64_t v15 = v14;
  sub_1C01A0054((uint64_t)v6);
  v2[5] = v13;
  v2[6] = v15;
  uint64_t v18 = 36;
  unint64_t v19 = 0xE100000000000000;
  sub_1BFEF9524((uint64_t)v6);
  swift_release();
  swift_bridgeObjectRetain();
  sub_1C01A0054((uint64_t)v6);
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  unint64_t v16 = v19;
  v2[7] = v18;
  v2[8] = v16;
  return v2;
}

uint64_t sub_1BFEF2694()
{
  uint64_t v1 = *v0;
  uint64_t result = 0;
  switch((unint64_t)*v0 >> 60)
  {
    case 1uLL:
      uint64_t v3 = v1 & 0xFFFFFFFFFFFFFFFLL;
      if (*(void *)(*(void *)(v3 + 48) + 16)) {
        goto LABEL_11;
      }
      uint64_t v4 = *(void *)(v3 + 16);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t result = v4;
      break;
    case 2uLL:
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
      return result;
    case 4uLL:
      if (*(void *)(*(void *)((v1 & 0xFFFFFFFFFFFFFFFLL) + 0x18) + 16)) {
        goto LABEL_11;
      }
      sub_1BFF01BC4();
      uint64_t result = sub_1C151FF2C();
      break;
    case 8uLL:
      uint64_t result = sub_1BFEF2694(0, 1);
      break;
    default:
      if (*(void *)(*(void *)(v1 + 24) + 16))
      {
LABEL_11:
        uint64_t result = 0;
      }
      else if (*(unsigned char *)(v1 + 16))
      {
        uint64_t result = 1702195828;
      }
      else
      {
        uint64_t result = 0x65736C6166;
      }
      break;
  }
  return result;
}

uint64_t sub_1BFEF2810()
{
  char v0 = sub_1BFEF28D0();
  if (v0 == 2) {
    return 0;
  }
  if (v0 == 3 || (v0 & 1) == 0) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_1C151E80C();
  swift_bridgeObjectRelease();
  sub_1C151E80C();
  return 36;
}

uint64_t sub_1BFEF28D0()
{
  uint64_t v1 = *v0 >> 60;
  uint64_t result = 3;
  if (((1 << v1) & 0x3EDF) == 0)
  {
    if (v1 == 5)
    {
      if (*(void *)(*(void *)((*v0 & 0xFFFFFFFFFFFFFFFLL) + 0x20) + 16))
      {
        return 2;
      }
      else
      {
        unint64_t v3 = *(void *)((*v0 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
        uint64_t v4 = *(void *)((*v0 & 0xFFFFFFFFFFFFFFFLL) + 0x10) & 0xFFFFFFFFFFFFLL;
        if ((v3 & 0x2000000000000000) != 0) {
          uint64_t v4 = HIBYTE(v3) & 0xF;
        }
        return v4 == 0;
      }
    }
    else
    {
      return sub_1BFEF28D0(3);
    }
  }
  return result;
}

uint64_t FormatOptionCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FormatOption();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void *)(v3 + 16);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v15 + 16) + 16))
  {
    swift_endAccess();
    goto LABEL_6;
  }
  swift_bridgeObjectRetain();
  sub_1BFEF2D8C(a1, a2);
  if ((v16 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
LABEL_6:
    swift_beginAccess();
    if (*(void *)(*(void *)(v4 + 24) + 16))
    {
      swift_bridgeObjectRetain();
      sub_1BFEF2D8C(a1, a2);
      if (v18)
      {
        swift_endAccess();
        swift_retain();
        swift_bridgeObjectRelease();
        swift_retain();
        swift_release();
        sub_1BFEF9524(a3);
        swift_release();
        uint64_t v17 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v17, 1, v8);
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_endAccess();
    }
    uint64_t v17 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v17, 1, v8);
  }
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_release();
  sub_1BFEF9524((uint64_t)v11);
  swift_release();
  sub_1C124503C((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for FormatOption);
  sub_1C124503C((uint64_t)v14, a3, (uint64_t (*)(void))type metadata accessor for FormatOption);
  uint64_t v17 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v17, 1, v8);
}

uint64_t sub_1BFEF2C04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void))
{
  uint64_t v7 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_1BFEF2D8C(a2, a3);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1BFEF2F54(a5);
LABEL_7:
    uint64_t v20 = (void *)*v7;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1BFF01C3C(v17, a4 & 1, a5);
  unint64_t v23 = sub_1BFEF2D8C(a2, a3);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v7;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  unsigned int v25 = (uint64_t *)(v20[6] + 16 * v14);
  uint64_t *v25 = a2;
  v25[1] = a3;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v26 = v20[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v28;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BFEF2D8C(uint64_t a1, uint64_t a2)
{
  sub_1C1520DBC();
  sub_1C151E77C();
  uint64_t v4 = sub_1C1520E0C();
  return sub_1BFEF2E04(a1, a2, v4);
}

unint64_t sub_1BFEF2E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C1520A9C() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        char v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C1520A9C() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1BFEF2EE8()
{
  swift_release();
  sub_1BFEF2F40(v0[3], v0[4]);
  sub_1BFEF2F40(v0[5], v0[6]);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BFEF2F40(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1BFEF2F54(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C15204DC();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    char v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1BFEF3110()
{
  if (!qword_1EB890328)
  {
    type metadata accessor for FormatOptionElement();
    unint64_t v0 = sub_1C152051C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB890328);
    }
  }
}

void *sub_1BFEF3178()
{
  return sub_1BFEF2F54((void (*)(void))sub_1BFEF3110);
}

uint64_t sub_1BFEF3190(uint64_t a1)
{
  int64_t v2 = 0;
  uint64_t result = 0;
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v8) {
      return result;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v2;
    if (!v12)
    {
      int64_t v2 = v11 + 1;
      if (v11 + 1 >= v8) {
        return result;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v2);
      if (!v12)
      {
        int64_t v2 = v11 + 2;
        if (v11 + 2 >= v8) {
          return result;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v2);
        if (!v12)
        {
          int64_t v2 = v11 + 3;
          if (v11 + 3 >= v8) {
            return result;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v2);
          if (!v12)
          {
            int64_t v2 = v11 + 4;
            if (v11 + 4 >= v8) {
              return result;
            }
            unint64_t v12 = *(void *)(v4 + 8 * v2);
            if (!v12) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v2 << 6);
LABEL_5:
    uint64_t result = result | dword_1C153E900[*(char *)(*(void *)(a1 + 48) + v10)];
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v8) {
    return result;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v2 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v2 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v2 >= v8) {
      return result;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v2);
    ++v13;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BFEF32C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t (*a6)(uint64_t), uint64_t (*a7)(uint64_t, uint64_t), void (*a8)(void), void (*a9)(uint64_t))
{
  uint64_t v12 = v9;
  sub_1C1517EFC();
  uint64_t v15 = *(void *)(*(void *)(v50 + 40) + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v15 + 16) + 16))
  {
    uint64_t v51 = *(void *)(v50 + 56);
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_1BFEF3B08(v16);
    sub_1BFEF3808(v17);
    swift_release();
    uint64_t v18 = v51;
    if (a1) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v18 = sub_1BFEF3784();
  swift_release();
  if (!a1) {
    goto LABEL_14;
  }
LABEL_3:
  if (!*(void *)(a4 + 16))
  {
LABEL_16:
    swift_retain();
    a5(v18);
    swift_release();
    uint64_t v31 = swift_bridgeObjectRelease();
    uint64_t v30 = a6(v31);
LABEL_17:
    swift_release();
    return v30;
  }
  uint64_t v19 = *(void *)(a1 + 32);
  uint64_t v20 = *(void *)(a1 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_1BFEF2D8C(v19, v20);
  if ((v22 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v23 = *(void *)(*(void *)(a4 + 56) + 8 * v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v24 = a7(v23, a1);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v26 = v24 >> 62;
  if (!(v24 >> 62))
  {
    uint64_t v27 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v27) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C15204BC();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v27)
  {
LABEL_38:
    swift_bridgeObjectRelease();
    a5(v18);
    uint64_t v47 = swift_bridgeObjectRelease();
    uint64_t v30 = a6(v47);
    swift_release();
    goto LABEL_17;
  }
LABEL_7:
  unint64_t v28 = v24 & 0xC000000000000001;
  if ((v24 & 0xC000000000000001) == 0)
  {
    if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    uint64_t result = swift_retain();
    if ((v27 & 0x8000000000000000) == 0) {
      goto LABEL_10;
    }
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t result = MEMORY[0x1C18C7CB0](0, v24);
  if (v27 < 0) {
    goto LABEL_40;
  }
LABEL_10:
  if (v26)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_1C15204BC();
    uint64_t result = swift_bridgeObjectRelease();
    if (v32 >= 1)
    {
      unint64_t v28 = v24 & 0xC000000000000001;
      unint64_t v26 = v24 >> 62;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_1C15204BC();
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v29 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v29) {
    goto LABEL_42;
  }
LABEL_21:
  if (v29 < v27)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v28 && v27 != 1)
  {
    a8(0);
    uint64_t result = 1;
    do
    {
      uint64_t v33 = result + 1;
      sub_1C152015C();
      uint64_t result = v33;
    }
    while (v27 != v33);
  }
  if (!v26)
  {
    uint64_t v34 = (v24 & 0xFFFFFFFFFFFFFF8) + 32;
    uint64_t v35 = 1;
    uint64_t v37 = v27 - 1;
    BOOL v36 = v27 <= 1;
    if (v27 != 1) {
      goto LABEL_28;
    }
LABEL_33:
    swift_retain();
    goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  sub_1C15204CC();
  uint64_t v34 = v40;
  uint64_t v35 = v41;
  unint64_t v43 = v42;
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v37 = (v43 >> 1) - v35;
  BOOL v36 = (uint64_t)(v43 >> 1) <= v35;
  if (v43 >> 1 == v35) {
    goto LABEL_33;
  }
LABEL_28:
  if (!v36)
  {
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v38 = v34 + 8 * v35;
    do
    {
      v38 += 8;
      uint64_t v39 = swift_retain();
      a9(v39);
      swift_release();
      swift_release();
      --v37;
    }
    while (v37);
    swift_unknownObjectRelease();
LABEL_34:
    uint64_t v44 = ((uint64_t (*)(uint64_t))a5)(v18);
    swift_release();
    uint64_t v45 = swift_bridgeObjectRelease();
    uint64_t v30 = v44;
    uint64_t v46 = a6(v45);
    if (!v12) {
      uint64_t v30 = v46;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    return v30;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1BFEF3784()
{
  if (*(void *)(v0 + 48))
  {
    uint64_t v1 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v2 = v0;
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_1BFEF3B08(v3);
    sub_1BFEF3808(v4);
    uint64_t v1 = v6;
    *(void *)(v2 + 48) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BFEF3808(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    unint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1BFEFFC1C(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_1BFEF3988(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1BFEFFC1C(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BFEF3B08(uint64_t a1)
{
  sub_1C12451C4(0, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v40 - v4;
  uint64_t v6 = type metadata accessor for FormatOption();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (uint64_t *)((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = sub_1C019F328(a1);
  v50[6] = a1;
  uint64_t v51 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF3808(v11);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 24);
  uint64_t v13 = v6;
  uint64_t v14 = *(void *)(v12 + 64);
  uint64_t v43 = v12 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  uint64_t v17 = v16 & v14;
  uint64_t v46 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v47 = v10 + 16;
  int64_t v44 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v45 = (uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v48 = v12;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  uint64_t v40 = v6;
  uint64_t v41 = v5;
  unint64_t v42 = v9;
  if (v17) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v20 = v19 + 1;
  if (!__OFADD__(v19, 1))
  {
    if (v20 < v44)
    {
      uint64_t v21 = *(void *)(v43 + 8 * v20);
      int64_t v22 = v19 + 1;
      if (v21) {
        goto LABEL_22;
      }
      int64_t v22 = v19 + 2;
      if (v19 + 2 >= v44) {
        goto LABEL_39;
      }
      uint64_t v21 = *(void *)(v43 + 8 * v22);
      if (v21) {
        goto LABEL_22;
      }
      int64_t v22 = v19 + 3;
      if (v19 + 3 >= v44) {
        goto LABEL_39;
      }
      uint64_t v21 = *(void *)(v43 + 8 * v22);
      if (v21) {
        goto LABEL_22;
      }
      int64_t v22 = v19 + 4;
      if (v19 + 4 >= v44) {
        goto LABEL_39;
      }
      uint64_t v21 = *(void *)(v43 + 8 * v22);
      if (v21)
      {
LABEL_22:
        uint64_t v17 = (v21 - 1) & v21;
        for (int64_t i = v22; ; int64_t i = v19)
        {
          sub_1BFEF9524((uint64_t)v9);
          uint64_t v25 = *v9;
          uint64_t v24 = v9[1];
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1C12450A4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FormatOption);
          uint64_t v26 = v47;
          swift_beginAccess();
          if (*(void *)(*(void *)v26 + 16))
          {
            swift_bridgeObjectRetain();
            sub_1BFEF2D8C(v25, v24);
            if (v27)
            {
              swift_endAccess();
              swift_retain();
              swift_bridgeObjectRelease();
              swift_retain();
              swift_release();
              sub_1BFEF9524((uint64_t)v5);
              swift_release();
              uint64_t v28 = 0;
              goto LABEL_29;
            }
            swift_endAccess();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_endAccess();
          }
          uint64_t v28 = 1;
LABEL_29:
          (*v46)(v5, v28, 1, v13);
          swift_bridgeObjectRelease();
          int v29 = (*v45)(v5, 1, v13);
          sub_1C1245104((uint64_t)v5, (unint64_t *)&qword_1EB891010, (void (*)(uint64_t))type metadata accessor for FormatOption);
          if (v29 == 1)
          {
            uint64_t v30 = swift_bridgeObjectRetain();
            uint64_t v31 = sub_1BFEF970C(v30);
            swift_bridgeObjectRelease();
            uint64_t v32 = *(void *)(v31 + 16);
            if (v32)
            {
              swift_bridgeObjectRetain();
              uint64_t v33 = (uint64_t *)(v31 + 40);
              uint64_t v34 = (uint64_t *)(v31 + 40);
              uint64_t v35 = v32;
              do
              {
                uint64_t v36 = *(v34 - 1);
                uint64_t v37 = *v34;
                swift_bridgeObjectRetain();
                sub_1BFEFFC1C(v50, v36, v37);
                swift_bridgeObjectRelease();
                v34 += 2;
                --v35;
              }
              while (v35);
              swift_bridgeObjectRelease();
              uint64_t v5 = v41;
              do
              {
                uint64_t v38 = *(v33 - 1);
                uint64_t v39 = *v33;
                swift_bridgeObjectRetain();
                sub_1BFEFFC1C(v50, v38, v39);
                swift_bridgeObjectRelease();
                v33 += 2;
                --v32;
              }
              while (v32);
              swift_release();
              uint64_t result = swift_bridgeObjectRelease();
              uint64_t v13 = v40;
            }
            else
            {
              swift_release();
              uint64_t result = swift_bridgeObjectRelease();
            }
            unint64_t v9 = v42;
            int64_t v19 = i;
            if (!v17) {
              goto LABEL_7;
            }
          }
          else
          {
            uint64_t result = swift_release();
            int64_t v19 = i;
            if (!v17) {
              goto LABEL_7;
            }
          }
LABEL_6:
          v17 &= v17 - 1;
        }
      }
      uint64_t v23 = v19 + 5;
      if (v19 + 5 < v44)
      {
        uint64_t v21 = *(void *)(v43 + 8 * v23);
        if (v21)
        {
          int64_t v22 = v19 + 5;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v22 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            goto LABEL_41;
          }
          if (v22 >= v44) {
            break;
          }
          uint64_t v21 = *(void *)(v43 + 8 * v22);
          ++v23;
          if (v21) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_39:
    swift_release();
    swift_bridgeObjectRelease();
    return v51;
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BFEF4060(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C151EFFC();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1BFEFFC1C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1BFEF40F8(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v4 = v1;
  uint64_t v74 = *v1;
  sub_1C12A7FB8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v75 = (uint64_t)&v52 - v7;
  swift_beginAccess();
  uint64_t v8 = v1[3];
  uint64_t v77 = v1[2];
  uint64_t v9 = v1[4];
  uint64_t v10 = v4[5];
  swift_beginAccess();
  uint64_t v11 = v4[6];
  uint64_t v12 = v4[7];
  uint64_t v76 = v9;
  if (v12)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1517EFC();
    double v13 = sub_1BFF493E4(v81, v12);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    double v16 = v13;
    swift_release();
    uint64_t v17 = swift_allocObject();
    *(double *)(v17 + 16) = v16;
    sub_1BFFC0BF8();
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1C1529AE0;
    *(void *)(v15 + 32) = v17;
    *(unsigned char *)(v15 + 40) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
  }
  uint64_t v97 = v15;
  uint64_t v18 = swift_beginAccess();
  uint64_t v19 = v4[8];
  if (v19)
  {
    *(void *)&long long v81 = a1;
    MEMORY[0x1F4188790](v18);
    uint64_t v51 = &v81;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C0182860((void (*)(void *__return_ptr, unsigned char *, uint64_t *))sub_1C12A801C, (uint64_t)&v49, v19);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v73 = v20;
    uint64_t v18 = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v73 = 0;
  }
  uint64_t v21 = v4[9];
  if ((~v21 & 0xF000000000000007) != 0)
  {
    swift_retain();
    sub_1BFF07448(a1, v21, &v81);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v21;
LABEL_35:
      sub_1BFEF68C0(v22);
      return swift_bridgeObjectRelease();
    }
    uint64_t v18 = sub_1BFEF68C0(v21);
    uint64_t v21 = v81;
  }
  uint64_t v96 = v21;
  if (v4[10])
  {
    *(void *)&long long v81 = a1;
    MEMORY[0x1F4188790](v18);
    uint64_t v51 = &v81;
    uint64_t v24 = sub_1C0182288((void (*)(uint64_t *__return_ptr, void *, uint64_t *))sub_1BFFC2654, (uint64_t)&v49, v23);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEF68C0(v21);
      return swift_bridgeObjectRelease();
    }
    uint64_t v57 = v21;
    uint64_t v62 = a1;
    uint64_t v61 = v24;
  }
  else
  {
    uint64_t v57 = v21;
    uint64_t v62 = a1;
    uint64_t v61 = 0;
  }
  char v95 = *((unsigned char *)v4 + 88);
  uint64_t v25 = v4[12];
  uint64_t v26 = v4[13];
  int v27 = *((unsigned __int8 *)v4 + 112);
  v93[0] = v25;
  v93[1] = v26;
  char v94 = v27;
  unint64_t v28 = v4[15];
  unint64_t v92 = v28;
  char v91 = *((unsigned char *)v4 + 128);
  uint64_t v64 = v4[17];
  uint64_t v71 = v4[18];
  uint64_t v66 = v4[19];
  uint64_t v67 = v4[20];
  uint64_t v72 = v4[21];
  uint64_t v68 = v4[22];
  uint64_t v69 = v4[23];
  uint64_t v70 = v4[24];
  uint64_t v63 = v4[25];
  uint64_t v65 = v4[26];
  int v29 = *((unsigned __int8 *)v4 + 216);
  int v60 = v27;
  uint64_t v59 = v26;
  uint64_t v58 = v25;
  if (v29 == 254)
  {
    sub_1BFEF6828(v25, v26, v27);
    sub_1BFEF6854(v28);
    unint64_t v56 = v28;
    uint64_t v30 = v70;
    uint64_t v31 = v69;
    uint64_t v32 = v68;
    uint64_t v33 = v67;
    uint64_t v34 = v66;
    uint64_t v35 = v71;
    uint64_t v36 = v72;
  }
  else
  {
    sub_1BFEF6828(v25, v26, v27);
    sub_1BFEF6854(v28);
    unint64_t v37 = v72;
    sub_1BFEF8708(v64, v71, v66, v67, v72, v68, v69, v70, v63, v65, v29);
    sub_1BFF64090(v62, v37, (uint64_t *)&v81);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEF8738(v64, v71, v66, v67, v72, v68, v69, v70, v63, v65, v29);
      unint64_t v38 = v28;
LABEL_34:
      sub_1BFEF68D8(v38);
      sub_1BFEF68AC(v58, v59, v60);
      uint64_t v22 = v57;
      goto LABEL_35;
    }
    unsigned int v39 = v71;
    sub_1BFEF8738(v64, v71, v66, v67, v72, v68, v69, v70, v63, v65, v29);
    uint64_t v36 = v81;
    uint64_t v35 = v39;
    unint64_t v56 = v28;
    uint64_t v30 = v70;
    uint64_t v31 = v69;
    uint64_t v32 = v68;
    uint64_t v33 = v67;
    uint64_t v34 = v66;
  }
  uint64_t v40 = v64;
  uint64_t v41 = v63;
  *(void *)&long long v81 = v64;
  uint64_t v71 = v35;
  *((void *)&v81 + 1) = v35;
  uint64_t v82 = v34;
  uint64_t v83 = v33;
  uint64_t v84 = v36;
  uint64_t v85 = v32;
  uint64_t v86 = v31;
  uint64_t v87 = v30;
  uint64_t v88 = v63;
  uint64_t v89 = v65;
  char v90 = v29;
  uint64_t v42 = v4[28];
  if ((~v42 & 0xF000000000000007) != 0)
  {
    uint64_t v72 = v36;
    swift_retain();
    sub_1BFF64090(v62, v42, &v78);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFDC11BC(v42);
      LOBYTE(v51) = v29;
      uint64_t v49 = v41;
      uint64_t v50 = v65;
      uint64_t v43 = v64;
LABEL_33:
      sub_1BFEF8738(v43, v71, v66, v67, v72, v68, v69, v70, v49, v50, v51);
      unint64_t v38 = v56;
      goto LABEL_34;
    }
    sub_1BFDC11BC(v42);
    uint64_t v42 = v78;
    uint64_t v36 = v72;
    uint64_t v40 = v64;
  }
  uint64_t v80 = v42;
  int v55 = *((unsigned __int8 *)v4 + 232);
  uint64_t v44 = v4[30];
  uint64_t v45 = v4[31];
  uint64_t v63 = v44;
  if (v44 != 1)
  {
    uint64_t v54 = v42;
    int v53 = v29;
    uint64_t v72 = v36;
    uint64_t v46 = v45;
    swift_bridgeObjectRetain();
    uint64_t v47 = v63;
    swift_bridgeObjectRetain();
    sub_1BFCD9588(v62, v47, v46, &v78);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BFEF68E8(v63);
      sub_1BFDC11BC(v54);
      LOBYTE(v51) = v53;
      uint64_t v49 = v41;
      uint64_t v50 = v65;
      uint64_t v43 = v40;
      goto LABEL_33;
    }
    sub_1BFEF68E8(v63);
    uint64_t v44 = v78;
    uint64_t v45 = v79;
  }
  uint64_t v78 = v44;
  uint64_t v79 = v45;
  uint64_t v48 = v75;
  sub_1BFF235F0((uint64_t)v4 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask, v75, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  swift_allocObject();
  return FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(v77, v8, v76, v10, v11, &v97, v73, &v96, v61, &v95, v93, (uint64_t *)&v92, &v91, &v81, &v80, v55, &v78, v48);
}

uint64_t sub_1BFEF4BB8(uint64_t a1)
{
  uint64_t v113 = a1;
  uint64_t v114 = 0;
  uint64_t v141 = *MEMORY[0x1E4F143B8];
  uint64_t v107 = *v1;
  swift_beginAccess();
  uint64_t v102 = v1;
  uint64_t v2 = v1[6];
  int64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v5 = sub_1BFEF6940(0, v3, 0, MEMORY[0x1E4FBC860]);
  uint64_t v103 = sub_1BFF0117C(0, v3, 0, v4);
  uint64_t v106 = *(void *)(v2 + 16);
  if (!v106)
  {
LABEL_32:
    sub_1BFF0157C();
    uint64_t v62 = sub_1C151EC0C();
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void *)(v62 + 16);
    if (v63)
    {
      uint64_t v64 = v63 - 1;
      for (uint64_t i = 32; ; i += 208)
      {
        long long v128 = *(_OWORD *)(v62 + i);
        long long v66 = *(_OWORD *)(v62 + i + 16);
        long long v67 = *(_OWORD *)(v62 + i + 32);
        long long v68 = *(_OWORD *)(v62 + i + 64);
        long long v131 = *(_OWORD *)(v62 + i + 48);
        long long v132 = v68;
        long long v129 = v66;
        long long v130 = v67;
        long long v69 = *(_OWORD *)(v62 + i + 80);
        long long v70 = *(_OWORD *)(v62 + i + 96);
        long long v71 = *(_OWORD *)(v62 + i + 128);
        long long v135 = *(_OWORD *)(v62 + i + 112);
        long long v136 = v71;
        long long v133 = v69;
        long long v134 = v70;
        long long v72 = *(_OWORD *)(v62 + i + 144);
        long long v73 = *(_OWORD *)(v62 + i + 160);
        long long v74 = *(_OWORD *)(v62 + i + 192);
        long long v139 = *(_OWORD *)(v62 + i + 176);
        long long v140 = v74;
        long long v137 = v72;
        long long v138 = v73;
        sub_1C05DC8FC((uint64_t)&v128);
        unint64_t v76 = v5[2];
        unint64_t v75 = v5[3];
        if (v76 >= v75 >> 1) {
          uint64_t v5 = sub_1BFEF6940((void *)(v75 > 1), v76 + 1, 1, v5);
        }
        v5[2] = v76 + 1;
        uint64_t v77 = &v5[25 * v76];
        *((_OWORD *)v77 + 2) = v128;
        long long v78 = v129;
        long long v79 = v130;
        long long v80 = v132;
        *((_OWORD *)v77 + 5) = v131;
        *((_OWORD *)v77 + 6) = v80;
        *((_OWORD *)v77 + 3) = v78;
        *((_OWORD *)v77 + 4) = v79;
        long long v81 = v133;
        long long v82 = v134;
        long long v83 = v136;
        *((_OWORD *)v77 + 9) = v135;
        *((_OWORD *)v77 + 10) = v83;
        *((_OWORD *)v77 + 7) = v81;
        *((_OWORD *)v77 + 8) = v82;
        long long v84 = v137;
        long long v85 = v138;
        long long v86 = v139;
        v77[28] = v140;
        *((_OWORD *)v77 + 12) = v85;
        *((_OWORD *)v77 + 13) = v86;
        *((_OWORD *)v77 + 11) = v84;
        if (!v64) {
          break;
        }
        --v64;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v87 = v5[2];
    if (v87)
    {
      uint64_t v88 = (uint64_t)v102;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v89 = v87 - 1;
      uint64_t v90 = v88;
      for (uint64_t j = 4; ; j += 25)
      {
        long long v128 = *(_OWORD *)&v5[j];
        long long v92 = *(_OWORD *)&v5[j + 2];
        long long v93 = *(_OWORD *)&v5[j + 4];
        long long v94 = *(_OWORD *)&v5[j + 8];
        long long v131 = *(_OWORD *)&v5[j + 6];
        long long v132 = v94;
        long long v129 = v92;
        long long v130 = v93;
        long long v95 = *(_OWORD *)&v5[j + 10];
        long long v96 = *(_OWORD *)&v5[j + 12];
        long long v97 = *(_OWORD *)&v5[j + 16];
        long long v135 = *(_OWORD *)&v5[j + 14];
        long long v136 = v97;
        long long v133 = v95;
        long long v134 = v96;
        long long v98 = *(_OWORD *)&v5[j + 18];
        long long v99 = *(_OWORD *)&v5[j + 20];
        long long v100 = *(_OWORD *)&v5[j + 22];
        *(void *)&long long v140 = v5[j + 24];
        long long v138 = v99;
        long long v139 = v100;
        long long v137 = v98;
        long long v125 = v99;
        long long v126 = v100;
        uint64_t v127 = v140;
        long long v121 = v134;
        long long v122 = v135;
        long long v123 = v97;
        long long v124 = v98;
        long long v117 = v130;
        long long v118 = v131;
        long long v119 = v132;
        long long v120 = v133;
        long long v115 = v128;
        long long v116 = v129;
        swift_allocObject();
        sub_1C05DC8FC((uint64_t)&v128);
        uint64_t v90 = sub_1BFF00C84(v90, &v115);
        swift_release();
        if (!v89) {
          break;
        }
        --v89;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v90 = (uint64_t)v102;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v90;
  }
  uint64_t v105 = v2 + 32;
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  uint64_t v104 = v2;
LABEL_3:
  unint64_t v109 = v6;
  uint64_t v7 = v105 + 200 * v6;
  long long v128 = *(_OWORD *)v7;
  long long v8 = *(_OWORD *)(v7 + 16);
  long long v9 = *(_OWORD *)(v7 + 32);
  long long v10 = *(_OWORD *)(v7 + 64);
  long long v131 = *(_OWORD *)(v7 + 48);
  long long v132 = v10;
  long long v129 = v8;
  long long v130 = v9;
  long long v11 = *(_OWORD *)(v7 + 80);
  long long v12 = *(_OWORD *)(v7 + 96);
  long long v13 = *(_OWORD *)(v7 + 128);
  long long v135 = *(_OWORD *)(v7 + 112);
  long long v136 = v13;
  long long v133 = v11;
  long long v134 = v12;
  long long v14 = *(_OWORD *)(v7 + 144);
  long long v15 = *(_OWORD *)(v7 + 160);
  long long v16 = *(_OWORD *)(v7 + 176);
  *(void *)&long long v140 = *(void *)(v7 + 192);
  long long v138 = v15;
  long long v139 = v16;
  long long v137 = v14;
  long long v17 = v128;
  sub_1C05DC8FC((uint64_t)&v128);
  if (qword_1EB87F148 != -1) {
    swift_once();
  }
  long long v115 = v17;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1BFEF53C0((uint64_t *)&v115);
  swift_bridgeObjectRelease();
  uint64_t v111 = *(void *)(v18 + 16);
  if (!v111)
  {
    swift_bridgeObjectRelease();
    sub_1C05DCA1C((uint64_t)&v128);
    goto LABEL_23;
  }
  uint64_t v108 = v5;
  unint64_t v19 = 0;
  uint64_t v20 = (uint64_t *)(v18 + 64);
  while (1)
  {
    if (v19 >= *(void *)(v18 + 16))
    {
      __break(1u);
      goto LABEL_46;
    }
    uint64_t v110 = *(v20 - 2);
    uint64_t v22 = *(v20 - 1);
    uint64_t v21 = *v20;
    char v23 = *(unsigned char *)(v22 + 32);
    unsigned int v24 = v23 & 0x3F;
    unint64_t v25 = (unint64_t)((1 << v23) + 63) >> 6;
    size_t v26 = 8 * v25;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v24 > 0xD)
    {
      uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
      if ((isStackAllocationSafe & 1) == 0)
      {
        unint64_t v28 = (char *)swift_slowAlloc();
        bzero(v28, v26);
        uint64_t v32 = v25;
        uint64_t v30 = v114;
        uint64_t v31 = sub_1BFEFB09C((uint64_t)v28, v32, v22, v113);
        swift_bridgeObjectRelease();
        if (v30) {
          goto LABEL_48;
        }
        uint64_t v114 = 0;
        MEMORY[0x1C18C9B00](v28, -1, -1);
        goto LABEL_15;
      }
    }
    long long v112 = &v102;
    MEMORY[0x1F4188790](isStackAllocationSafe);
    unint64_t v28 = (char *)&v102 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v28, v26);
    uint64_t v29 = v25;
    uint64_t v30 = v114;
    uint64_t v31 = sub_1BFEFB09C((uint64_t)v28, v29, v22, v113);
    swift_bridgeObjectRelease();
    if (v30) {
      break;
    }
    uint64_t v114 = 0;
LABEL_15:
    char v33 = sub_1BFEFAE14(v31, v22);
    swift_release();
    if (v33 & 1) != 0 && (sub_1BFEFB810(v113, v21))
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = v110;
      if (v110 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C05DC8FC((uint64_t)&v128);
        uint64_t v5 = v108;
        unint64_t v39 = v109;
        unint64_t v51 = v108[2];
        unint64_t v50 = v108[3];
        uint64_t v36 = v104;
        if (v51 >= v50 >> 1) {
          uint64_t v5 = sub_1BFEF6940((void *)(v50 > 1), v51 + 1, 1, v108);
        }
        v5[2] = v51 + 1;
        uint64_t v52 = &v5[25 * v51];
        *((_OWORD *)v52 + 2) = v128;
        long long v53 = v129;
        long long v54 = v130;
        long long v55 = v132;
        *((_OWORD *)v52 + 5) = v131;
        *((_OWORD *)v52 + 6) = v55;
        *((_OWORD *)v52 + 3) = v53;
        *((_OWORD *)v52 + 4) = v54;
        long long v56 = v133;
        long long v57 = v134;
        long long v58 = v136;
        *((_OWORD *)v52 + 9) = v135;
        *((_OWORD *)v52 + 10) = v58;
        *((_OWORD *)v52 + 7) = v56;
        *((_OWORD *)v52 + 8) = v57;
        long long v59 = v137;
        long long v60 = v138;
        long long v61 = v139;
        v52[28] = v140;
        *((_OWORD *)v52 + 12) = v60;
        *((_OWORD *)v52 + 13) = v61;
        *((_OWORD *)v52 + 11) = v59;
      }
      else
      {
        sub_1C05DC8FC((uint64_t)&v128);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = v103;
        uint64_t v36 = v104;
        unint64_t v38 = v103[2];
        unint64_t v37 = v103[3];
        uint64_t v5 = v108;
        unint64_t v39 = v109;
        if (v38 >= v37 >> 1) {
          uint64_t v35 = sub_1BFF0117C((void *)(v37 > 1), v38 + 1, 1, v103);
        }
        long long v117 = v130;
        long long v118 = v131;
        long long v121 = v134;
        long long v122 = v135;
        long long v119 = v132;
        long long v120 = v133;
        uint64_t v127 = v140;
        long long v125 = v138;
        long long v126 = v139;
        long long v123 = v136;
        long long v124 = v137;
        long long v115 = v128;
        long long v116 = v129;
        v35[2] = v38 + 1;
        uint64_t v103 = v35;
        uint64_t v40 = &v35[26 * v38];
        *((_OWORD *)v40 + 2) = v115;
        long long v41 = v116;
        long long v42 = v117;
        long long v43 = v119;
        *((_OWORD *)v40 + 5) = v118;
        *((_OWORD *)v40 + 6) = v43;
        *((_OWORD *)v40 + 3) = v41;
        *((_OWORD *)v40 + 4) = v42;
        long long v44 = v120;
        long long v45 = v121;
        long long v46 = v123;
        *((_OWORD *)v40 + 9) = v122;
        *((_OWORD *)v40 + 10) = v46;
        *((_OWORD *)v40 + 7) = v44;
        *((_OWORD *)v40 + 8) = v45;
        long long v47 = v124;
        long long v48 = v126;
        uint64_t v49 = v127;
        *((_OWORD *)v40 + 12) = v125;
        *((_OWORD *)v40 + 13) = v48;
        *((_OWORD *)v40 + 11) = v47;
        v40[28] = v49;
        v40[29] = v34;
      }
      sub_1C05DCA1C((uint64_t)&v128);
LABEL_28:
      unint64_t v6 = v39 + 1;
      if (v6 == v106)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      if (v6 >= *(void *)(v36 + 16)) {
LABEL_46:
      }
        __break(1u);
      goto LABEL_3;
    }
    ++v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 += 5;
    if (v111 == v19)
    {
      swift_bridgeObjectRelease();
      sub_1C05DCA1C((uint64_t)&v128);
      uint64_t v5 = v108;
LABEL_23:
      uint64_t v36 = v104;
      unint64_t v39 = v109;
      goto LABEL_28;
    }
  }
  swift_willThrow();

  __break(1u);
LABEL_48:

  uint64_t result = MEMORY[0x1C18C9B00](v28, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BFEF53C0(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  sub_1C1517E7C();
  uint64_t v4 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 16);
  if (!*(void *)(v5 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BFEF2D8C(v3, v2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    v13[0] = v3;
    v13[1] = v2;
    swift_bridgeObjectRetain();
    sub_1BFF04A00(v13, v14);
    uint64_t v10 = v14[0];
    uint64_t v9 = v14[1];
    uint64_t v8 = v14[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13[0] = *v4;
    *uint64_t v4 = 0x8000000000000000;
    sub_1BFF05DB4(v10, v9, v8, v3, v2, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v13[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(*(void *)(v5 + 56) + 24 * v6 + 16);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRelease();
  sub_1C1517E8C();
  return v8;
}

uint64_t sub_1BFEF554C(uint64_t a1)
{
  uint64_t v289 = *v1;
  sub_1BFE79DD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v290 = (uint64_t)&v264 - v4;
  swift_beginAccess();
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  swift_beginAccess();
  long long v291 = v1;
  uint64_t v9 = v1[6];
  swift_beginAccess();
  uint64_t v292 = a1;
  uint64_t v10 = *(void *)(a1 + 48);
  int v369 = (void *)MEMORY[0x1E4FBC868];
  int64_t v11 = *(void *)(v9 + 16);
  if (__OFADD__(v11, *(void *)(v10 + 16)))
  {
LABEL_99:
    __break(1u);
LABEL_100:
    uint64_t result = sub_1C1520CFC();
    __break(1u);
    return result;
  }
  uint64_t v294 = *(void **)(v10 + 16);
  uint64_t v285 = v7;
  uint64_t v288 = v6;
  sub_1BFEF7564();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C151E3AC();
  uint64_t v295 = sub_1BFEF692C(0, v11, 0, MEMORY[0x1E4FBC860]);
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v286 = v8;
  uint64_t v287 = v5;
  uint64_t v293 = v10;
  if (!v12) {
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  long long v13 = *(_OWORD *)(v9 + 192);
  long long v365 = *(_OWORD *)(v9 + 176);
  long long v366 = v13;
  long long v367 = *(_OWORD *)(v9 + 208);
  uint64_t v368 = *(void *)(v9 + 224);
  long long v14 = *(_OWORD *)(v9 + 128);
  long long v361 = *(_OWORD *)(v9 + 112);
  long long v362 = v14;
  long long v15 = *(_OWORD *)(v9 + 160);
  long long v363 = *(_OWORD *)(v9 + 144);
  long long v364 = v15;
  long long v16 = *(_OWORD *)(v9 + 48);
  long long v17 = *(_OWORD *)(v9 + 80);
  long long v18 = *(_OWORD *)(v9 + 96);
  long long v358 = *(_OWORD *)(v9 + 64);
  long long v359 = v17;
  long long v360 = v18;
  uint64_t v19 = v9;
  long long v20 = *(_OWORD *)(v9 + 32);
  long long v357 = v16;
  long long v356 = v20;
  uint64_t v21 = *((void *)&v20 + 1);
  uint64_t v22 = v12 - 1;
  for (uint64_t i = 232; ; i += 200)
  {
    uint64_t v24 = v356;
    sub_1C05DC8FC((uint64_t)&v356);
    sub_1C05DC8FC((uint64_t)&v356);
    swift_bridgeObjectRetain();
    uint64_t v25 = (uint64_t)v369;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v340 = v25;
    unint64_t v28 = sub_1BFEF2D8C(v24, v21);
    uint64_t v29 = *(void *)(v25 + 16);
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
      goto LABEL_99;
    }
    char v32 = v27;
    if (*(void *)(v25 + 24) >= v31)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v27) {
          goto LABEL_11;
        }
      }
      else
      {
        sub_1C10719F0();
        if (v32) {
          goto LABEL_11;
        }
      }
    }
    else
    {
      sub_1C105F7B0(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_1BFEF2D8C(v24, v21);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_100;
      }
      unint64_t v28 = v33;
      if (v32)
      {
LABEL_11:
        uint64_t v35 = (void *)v340;
        uint64_t v36 = *(void *)(v340 + 56) + 200 * v28;
        long long v348 = *(_OWORD *)v36;
        long long v37 = *(_OWORD *)(v36 + 48);
        long long v39 = *(_OWORD *)(v36 + 16);
        long long v38 = *(_OWORD *)(v36 + 32);
        v351[1] = *(_OWORD *)(v36 + 64);
        v351[0] = v37;
        long long v349 = v39;
        long long v350 = v38;
        long long v40 = *(_OWORD *)(v36 + 112);
        long long v42 = *(_OWORD *)(v36 + 80);
        long long v41 = *(_OWORD *)(v36 + 96);
        v351[5] = *(_OWORD *)(v36 + 128);
        v351[4] = v40;
        v351[2] = v42;
        v351[3] = v41;
        long long v44 = *(_OWORD *)(v36 + 160);
        long long v43 = *(_OWORD *)(v36 + 176);
        long long v45 = *(_OWORD *)(v36 + 144);
        uint64_t v355 = *(void *)(v36 + 192);
        long long v354 = v43;
        long long v352 = v45;
        long long v353 = v44;
        sub_1C05DCA1C((uint64_t)&v348);
        *(_OWORD *)uint64_t v36 = v356;
        long long v46 = v360;
        long long v47 = v358;
        long long v48 = v357;
        *(_OWORD *)(v36 + 48) = v359;
        *(_OWORD *)(v36 + 64) = v46;
        *(_OWORD *)(v36 + 16) = v48;
        *(_OWORD *)(v36 + 32) = v47;
        long long v49 = v364;
        long long v50 = v362;
        long long v51 = v361;
        *(_OWORD *)(v36 + 112) = v363;
        *(_OWORD *)(v36 + 128) = v49;
        *(_OWORD *)(v36 + 80) = v51;
        *(_OWORD *)(v36 + 96) = v50;
        long long v52 = v367;
        long long v53 = v366;
        long long v54 = v365;
        *(void *)(v36 + 192) = v368;
        *(_OWORD *)(v36 + 160) = v53;
        *(_OWORD *)(v36 + 176) = v52;
        *(_OWORD *)(v36 + 144) = v54;
        goto LABEL_15;
      }
    }
    uint64_t v35 = (void *)v340;
    *(void *)(v340 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    long long v55 = (uint64_t *)(v35[6] + 16 * v28);
    *long long v55 = v24;
    v55[1] = v21;
    uint64_t v56 = v35[7] + 200 * v28;
    uint64_t v57 = v368;
    long long v58 = v367;
    long long v59 = v366;
    *(_OWORD *)(v56 + 144) = v365;
    *(_OWORD *)(v56 + 160) = v59;
    *(_OWORD *)(v56 + 176) = v58;
    *(void *)(v56 + 192) = v57;
    long long v60 = v364;
    long long v61 = v363;
    long long v62 = v362;
    *(_OWORD *)(v56 + 80) = v361;
    *(_OWORD *)(v56 + 96) = v62;
    *(_OWORD *)(v56 + 112) = v61;
    *(_OWORD *)(v56 + 128) = v60;
    long long v63 = v360;
    long long v64 = v359;
    long long v65 = v358;
    *(_OWORD *)(v56 + 16) = v357;
    *(_OWORD *)(v56 + 32) = v65;
    *(_OWORD *)(v56 + 48) = v64;
    *(_OWORD *)(v56 + 64) = v63;
    *(_OWORD *)uint64_t v56 = v356;
    uint64_t v66 = v35[2];
    BOOL v67 = __OFADD__(v66, 1);
    uint64_t v68 = v66 + 1;
    if (v67) {
      goto LABEL_95;
    }
    v35[2] = v68;
    swift_bridgeObjectRetain();
LABEL_15:
    int v369 = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v69 = v295[2];
    unint64_t v70 = v295[3];
    swift_bridgeObjectRetain();
    if (v69 >= v70 >> 1) {
      uint64_t v295 = sub_1BFEF692C((void *)(v70 > 1), v69 + 1, 1, v295);
    }
    long long v71 = v295;
    v295[2] = v69 + 1;
    long long v72 = &v71[2 * v69];
    v72[4] = v24;
    v72[5] = v21;
    sub_1C05DCA1C((uint64_t)&v356);
    if (!v22) {
      break;
    }
    long long v356 = *(_OWORD *)(v19 + i);
    long long v73 = *(_OWORD *)(v19 + i + 16);
    long long v74 = *(_OWORD *)(v19 + i + 32);
    long long v75 = *(_OWORD *)(v19 + i + 48);
    long long v360 = *(_OWORD *)(v19 + i + 64);
    long long v359 = v75;
    long long v358 = v74;
    long long v357 = v73;
    long long v76 = *(_OWORD *)(v19 + i + 80);
    long long v77 = *(_OWORD *)(v19 + i + 96);
    long long v78 = *(_OWORD *)(v19 + i + 112);
    long long v364 = *(_OWORD *)(v19 + i + 128);
    long long v363 = v78;
    long long v362 = v77;
    long long v361 = v76;
    long long v79 = *(_OWORD *)(v19 + i + 144);
    long long v80 = *(_OWORD *)(v19 + i + 160);
    long long v81 = *(_OWORD *)(v19 + i + 176);
    uint64_t v368 = *(void *)(v19 + i + 192);
    long long v367 = v81;
    long long v366 = v80;
    long long v365 = v79;
    uint64_t v21 = *((void *)&v356 + 1);
    --v22;
  }
  uint64_t v9 = v19;
  swift_bridgeObjectRelease();
  uint64_t v10 = v293;
LABEL_20:
  long long v82 = sub_1BFEF692C(0, (int64_t)v294, 0, MEMORY[0x1E4FBC860]);
  long long v83 = v82;
  uint64_t v84 = *(void *)(v10 + 16);
  uint64_t v284 = (void *)v9;
  if (v84)
  {
    swift_bridgeObjectRetain();
    uint64_t v85 = v84 - 1;
    uint64_t v86 = 32;
    uint64_t v87 = v83;
    while (1)
    {
      long long v356 = *(_OWORD *)(v10 + v86);
      long long v88 = *(_OWORD *)(v10 + v86 + 16);
      long long v89 = *(_OWORD *)(v10 + v86 + 32);
      long long v90 = *(_OWORD *)(v10 + v86 + 48);
      long long v360 = *(_OWORD *)(v10 + v86 + 64);
      long long v359 = v90;
      long long v358 = v89;
      long long v357 = v88;
      long long v91 = *(_OWORD *)(v10 + v86 + 80);
      long long v92 = *(_OWORD *)(v10 + v86 + 96);
      long long v93 = *(_OWORD *)(v10 + v86 + 112);
      long long v364 = *(_OWORD *)(v10 + v86 + 128);
      long long v363 = v93;
      long long v362 = v92;
      long long v361 = v91;
      long long v94 = *(_OWORD *)(v10 + v86 + 144);
      long long v95 = *(_OWORD *)(v10 + v86 + 160);
      long long v96 = *(_OWORD *)(v10 + v86 + 176);
      uint64_t v368 = *(void *)(v10 + v86 + 192);
      long long v367 = v96;
      long long v366 = v95;
      long long v365 = v94;
      long long v97 = v356;
      long long v352 = *(_OWORD *)(v10 + v86 + 144);
      long long v353 = *(_OWORD *)(v10 + v86 + 160);
      long long v354 = *(_OWORD *)(v10 + v86 + 176);
      uint64_t v355 = *(void *)(v10 + v86 + 192);
      v351[2] = *(_OWORD *)(v10 + v86 + 80);
      v351[3] = *(_OWORD *)(v10 + v86 + 96);
      v351[4] = *(_OWORD *)(v10 + v86 + 112);
      v351[5] = *(_OWORD *)(v10 + v86 + 128);
      long long v349 = *(_OWORD *)(v10 + v86 + 16);
      long long v350 = *(_OWORD *)(v10 + v86 + 32);
      v351[0] = *(_OWORD *)(v10 + v86 + 48);
      v351[1] = *(_OWORD *)(v10 + v86 + 64);
      long long v348 = *(_OWORD *)(v10 + v86);
      long long v98 = v369;
      uint64_t v99 = v369[2];
      sub_1C05DC8FC((uint64_t)&v356);
      if (v99)
      {
        swift_bridgeObjectRetain();
        unint64_t v100 = sub_1BFEF2D8C(v97, *((uint64_t *)&v97 + 1));
        if (v101)
        {
          uint64_t v294 = v87;
          uint64_t v102 = v98[7] + 200 * v100;
          long long v311 = *(_OWORD *)v102;
          long long v103 = *(_OWORD *)(v102 + 48);
          long long v104 = *(_OWORD *)(v102 + 64);
          long long v105 = *(_OWORD *)(v102 + 32);
          long long v312 = *(_OWORD *)(v102 + 16);
          long long v313 = v105;
          long long v314 = v103;
          long long v315 = v104;
          long long v106 = *(_OWORD *)(v102 + 80);
          long long v107 = *(_OWORD *)(v102 + 96);
          long long v108 = *(_OWORD *)(v102 + 128);
          long long v318 = *(_OWORD *)(v102 + 112);
          long long v319 = v108;
          long long v316 = v106;
          long long v317 = v107;
          long long v109 = *(_OWORD *)(v102 + 144);
          long long v110 = *(_OWORD *)(v102 + 160);
          long long v111 = *(_OWORD *)(v102 + 176);
          uint64_t v323 = *(void *)(v102 + 192);
          long long v321 = v110;
          long long v322 = v111;
          long long v320 = v109;
          sub_1C05DC8FC((uint64_t)&v311);
          swift_bridgeObjectRelease();
          long long v345 = v321;
          long long v346 = v322;
          v343[3] = v317;
          v343[4] = v318;
          long long v344 = v320;
          v343[5] = v319;
          long long v342 = v313;
          v343[0] = v314;
          long long v112 = v311;
          uint64_t v347 = v323;
          v343[2] = v316;
          v343[1] = v315;
          long long v341 = v312;
          long long v340 = v311;
          sub_1BFEF70DC((uint64_t)&v348, (uint64_t)&v324);
          swift_bridgeObjectRetain();
          char v113 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v337 = v98;
          unint64_t v115 = sub_1BFEF2D8C(v112, *((uint64_t *)&v112 + 1));
          uint64_t v116 = v98[2];
          BOOL v117 = (v114 & 1) == 0;
          uint64_t v118 = v116 + v117;
          if (__OFADD__(v116, v117)) {
            goto LABEL_97;
          }
          char v119 = v114;
          if (v98[3] >= v118)
          {
            if (v113)
            {
              if ((v114 & 1) == 0) {
                goto LABEL_49;
              }
            }
            else
            {
              sub_1C10719F0();
              if ((v119 & 1) == 0) {
                goto LABEL_49;
              }
            }
          }
          else
          {
            sub_1C105F7B0(v118, v113);
            unint64_t v120 = sub_1BFEF2D8C(v112, *((uint64_t *)&v112 + 1));
            if ((v119 & 1) != (v121 & 1)) {
              goto LABEL_100;
            }
            unint64_t v115 = v120;
            if ((v119 & 1) == 0)
            {
LABEL_49:
              uint64_t v153 = v337;
              v337[(v115 >> 6) + 8] |= 1 << v115;
              *(_OWORD *)(v153[6] + 16 * v115) = v112;
              uint64_t v185 = v153[7] + 200 * v115;
              long long v186 = v327;
              *(_OWORD *)(v185 + 32) = v326;
              *(_OWORD *)(v185 + 48) = v186;
              long long v187 = v325;
              *(_OWORD *)uint64_t v185 = v324;
              *(_OWORD *)(v185 + 16) = v187;
              long long v188 = v331;
              *(_OWORD *)(v185 + 96) = v330;
              *(_OWORD *)(v185 + 112) = v188;
              long long v189 = v329;
              *(_OWORD *)(v185 + 64) = v328;
              *(_OWORD *)(v185 + 80) = v189;
              *(void *)(v185 + 192) = v336;
              long long v190 = v335;
              *(_OWORD *)(v185 + 160) = v334;
              *(_OWORD *)(v185 + 176) = v190;
              long long v191 = v333;
              *(_OWORD *)(v185 + 128) = v332;
              *(_OWORD *)(v185 + 144) = v191;
              uint64_t v192 = v153[2];
              BOOL v67 = __OFADD__(v192, 1);
              uint64_t v193 = v192 + 1;
              if (v67) {
                goto LABEL_98;
              }
              v153[2] = v193;
              swift_bridgeObjectRetain();
LABEL_51:
              int v369 = v153;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v296[10] = v345;
              v296[11] = v346;
              uint64_t v297 = v347;
              v296[6] = v343[3];
              v296[7] = v343[4];
              v296[8] = v343[5];
              v296[9] = v344;
              v296[2] = v342;
              v296[3] = v343[0];
              v296[4] = v343[1];
              v296[5] = v343[2];
              v296[0] = v340;
              v296[1] = v341;
              sub_1C05DCA1C((uint64_t)v296);
              long long v308 = v353;
              long long v309 = v354;
              uint64_t v310 = v355;
              long long v304 = v351[3];
              long long v305 = v351[4];
              long long v306 = v351[5];
              long long v307 = v352;
              long long v300 = v350;
              long long v301 = v351[0];
              long long v302 = v351[1];
              long long v303 = v351[2];
              long long v298 = v348;
              long long v299 = v349;
              sub_1C05DCA1C((uint64_t)&v298);
              uint64_t v10 = v293;
              uint64_t v87 = v294;
              if (!v85) {
                goto LABEL_53;
              }
              goto LABEL_52;
            }
          }
          uint64_t v153 = v337;
          uint64_t v154 = v337[7] + 200 * v115;
          long long v298 = *(_OWORD *)v154;
          long long v155 = *(_OWORD *)(v154 + 64);
          long long v157 = *(_OWORD *)(v154 + 16);
          long long v156 = *(_OWORD *)(v154 + 32);
          long long v301 = *(_OWORD *)(v154 + 48);
          long long v302 = v155;
          long long v299 = v157;
          long long v300 = v156;
          long long v158 = *(_OWORD *)(v154 + 128);
          long long v160 = *(_OWORD *)(v154 + 80);
          long long v159 = *(_OWORD *)(v154 + 96);
          long long v305 = *(_OWORD *)(v154 + 112);
          long long v306 = v158;
          long long v303 = v160;
          long long v304 = v159;
          long long v162 = *(_OWORD *)(v154 + 160);
          long long v161 = *(_OWORD *)(v154 + 176);
          long long v163 = *(_OWORD *)(v154 + 144);
          uint64_t v310 = *(void *)(v154 + 192);
          long long v308 = v162;
          long long v309 = v161;
          long long v307 = v163;
          sub_1C05DCA1C((uint64_t)&v298);
          long long v164 = v335;
          *(_OWORD *)(v154 + 160) = v334;
          *(_OWORD *)(v154 + 176) = v164;
          *(void *)(v154 + 192) = v336;
          long long v165 = v331;
          *(_OWORD *)(v154 + 96) = v330;
          *(_OWORD *)(v154 + 112) = v165;
          long long v166 = v333;
          *(_OWORD *)(v154 + 128) = v332;
          *(_OWORD *)(v154 + 144) = v166;
          long long v167 = v327;
          *(_OWORD *)(v154 + 32) = v326;
          *(_OWORD *)(v154 + 48) = v167;
          long long v168 = v329;
          *(_OWORD *)(v154 + 64) = v328;
          *(_OWORD *)(v154 + 80) = v168;
          long long v169 = v325;
          *(_OWORD *)uint64_t v154 = v324;
          *(_OWORD *)(v154 + 16) = v169;
          goto LABEL_51;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v294 = (void *)v86;
      uint64_t v122 = v85;
      long long v123 = v87;
      sub_1C05DC8FC((uint64_t)&v356);
      swift_bridgeObjectRetain();
      char v124 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v324 = v98;
      unint64_t v126 = sub_1BFEF2D8C(v97, *((uint64_t *)&v97 + 1));
      uint64_t v127 = v98[2];
      BOOL v128 = (v125 & 1) == 0;
      uint64_t v129 = v127 + v128;
      if (__OFADD__(v127, v128)) {
        goto LABEL_94;
      }
      char v130 = v125;
      if (v98[3] >= v129)
      {
        if (v124)
        {
          if (v125) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_1C10719F0();
          if (v130) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_1C105F7B0(v129, v124);
        unint64_t v131 = sub_1BFEF2D8C(v97, *((uint64_t *)&v97 + 1));
        if ((v130 & 1) != (v132 & 1)) {
          goto LABEL_100;
        }
        unint64_t v126 = v131;
        if (v130)
        {
LABEL_37:
          long long v133 = (void *)v324;
          uint64_t v134 = *(void *)(v324 + 56) + 200 * v126;
          long long v340 = *(_OWORD *)v134;
          long long v135 = *(_OWORD *)(v134 + 48);
          long long v137 = *(_OWORD *)(v134 + 16);
          long long v136 = *(_OWORD *)(v134 + 32);
          v343[1] = *(_OWORD *)(v134 + 64);
          v343[0] = v135;
          long long v341 = v137;
          long long v342 = v136;
          long long v138 = *(_OWORD *)(v134 + 112);
          long long v140 = *(_OWORD *)(v134 + 80);
          long long v139 = *(_OWORD *)(v134 + 96);
          v343[5] = *(_OWORD *)(v134 + 128);
          v343[4] = v138;
          v343[2] = v140;
          v343[3] = v139;
          long long v142 = *(_OWORD *)(v134 + 160);
          long long v141 = *(_OWORD *)(v134 + 176);
          long long v143 = *(_OWORD *)(v134 + 144);
          uint64_t v347 = *(void *)(v134 + 192);
          long long v346 = v141;
          long long v344 = v143;
          long long v345 = v142;
          sub_1C05DCA1C((uint64_t)&v340);
          *(_OWORD *)uint64_t v134 = v356;
          long long v144 = v360;
          long long v145 = v358;
          long long v146 = v357;
          *(_OWORD *)(v134 + 48) = v359;
          *(_OWORD *)(v134 + 64) = v144;
          *(_OWORD *)(v134 + 16) = v146;
          *(_OWORD *)(v134 + 32) = v145;
          long long v147 = v364;
          long long v148 = v362;
          long long v149 = v361;
          *(_OWORD *)(v134 + 112) = v363;
          *(_OWORD *)(v134 + 128) = v147;
          *(_OWORD *)(v134 + 80) = v149;
          *(_OWORD *)(v134 + 96) = v148;
          long long v150 = v367;
          long long v151 = v366;
          long long v152 = v365;
          *(void *)(v134 + 192) = v368;
          *(_OWORD *)(v134 + 160) = v151;
          *(_OWORD *)(v134 + 176) = v150;
          *(_OWORD *)(v134 + 144) = v152;
          goto LABEL_44;
        }
      }
      long long v133 = (void *)v324;
      *(void *)(v324 + 8 * (v126 >> 6) + 64) |= 1 << v126;
      *(_OWORD *)(v133[6] + 16 * v126) = v97;
      uint64_t v170 = v133[7] + 200 * v126;
      uint64_t v171 = v368;
      long long v172 = v367;
      long long v173 = v366;
      *(_OWORD *)(v170 + 144) = v365;
      *(_OWORD *)(v170 + 160) = v173;
      *(_OWORD *)(v170 + 176) = v172;
      *(void *)(v170 + 192) = v171;
      long long v174 = v364;
      long long v175 = v363;
      long long v176 = v362;
      *(_OWORD *)(v170 + 80) = v361;
      *(_OWORD *)(v170 + 96) = v176;
      *(_OWORD *)(v170 + 112) = v175;
      *(_OWORD *)(v170 + 128) = v174;
      long long v177 = v360;
      long long v178 = v359;
      long long v179 = v358;
      *(_OWORD *)(v170 + 16) = v357;
      *(_OWORD *)(v170 + 32) = v179;
      *(_OWORD *)(v170 + 48) = v178;
      *(_OWORD *)(v170 + 64) = v177;
      *(_OWORD *)uint64_t v170 = v356;
      uint64_t v180 = v133[2];
      BOOL v67 = __OFADD__(v180, 1);
      uint64_t v181 = v180 + 1;
      if (v67) {
        goto LABEL_96;
      }
      long long v133[2] = v181;
      swift_bridgeObjectRetain();
LABEL_44:
      int v369 = v133;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v182 = v348;
      uint64_t v87 = v123;
      unint64_t v183 = v123[2];
      unint64_t v184 = v123[3];
      swift_bridgeObjectRetain();
      uint64_t v10 = v293;
      if (v183 >= v184 >> 1) {
        uint64_t v87 = sub_1BFEF692C((void *)(v184 > 1), v183 + 1, 1, v123);
      }
      uint64_t v85 = v122;
      v87[2] = v183 + 1;
      *(_OWORD *)&v87[2 * v183 + 4] = v182;
      long long v340 = v182;
      long long v341 = v349;
      long long v342 = v350;
      LOBYTE(v343[0]) = v351[0];
      *(_OWORD *)((char *)v343 + 8) = *(_OWORD *)((char *)v351 + 8);
      *(_OWORD *)((char *)&v343[1] + 8) = *(_OWORD *)((char *)&v351[1] + 8);
      *(_OWORD *)((char *)&v343[2] + 8) = *(_OWORD *)((char *)&v351[2] + 8);
      *(_OWORD *)((char *)&v343[3] + 8) = *(_OWORD *)((char *)&v351[3] + 8);
      *(_OWORD *)((char *)&v343[4] + 8) = *(_OWORD *)((char *)&v351[4] + 8);
      BYTE8(v343[5]) = BYTE8(v351[5]);
      *(void *)&long long v344 = v352;
      WORD4(v344) = WORD4(v352);
      BYTE10(v344) = BYTE10(v352);
      long long v345 = v353;
      long long v346 = v354;
      uint64_t v347 = v355;
      sub_1C05DCA1C((uint64_t)&v340);
      uint64_t v86 = (uint64_t)v294;
      if (!v85)
      {
LABEL_53:
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
LABEL_52:
      --v85;
      v86 += 200;
    }
  }
  uint64_t v87 = v82;
LABEL_55:
  *(void *)&long long v356 = v87;
  swift_bridgeObjectRetain();
  uint64_t v194 = swift_bridgeObjectRetain();
  sub_1BFEF6AA0(v194);
  uint64_t v195 = v356;
  uint64_t v196 = *(void *)(v356 + 16);
  if (v196)
  {
    uint64_t v294 = v87;
    swift_bridgeObjectRetain();
    uint64_t v197 = (uint64_t *)(v195 + 40);
    uint64_t v198 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v199 = (uint64_t)v369;
      if (v369[2])
      {
        uint64_t v200 = *(v197 - 1);
        uint64_t v201 = *v197;
        swift_bridgeObjectRetain_n();
        unint64_t v202 = sub_1BFEF2D8C(v200, v201);
        if (v203)
        {
          uint64_t v204 = *(void *)(v199 + 56) + 200 * v202;
          long long v356 = *(_OWORD *)v204;
          long long v205 = *(_OWORD *)(v204 + 48);
          long long v206 = *(_OWORD *)(v204 + 64);
          long long v207 = *(_OWORD *)(v204 + 32);
          long long v357 = *(_OWORD *)(v204 + 16);
          long long v358 = v207;
          long long v360 = v206;
          long long v359 = v205;
          long long v208 = *(_OWORD *)(v204 + 80);
          long long v209 = *(_OWORD *)(v204 + 96);
          long long v210 = *(_OWORD *)(v204 + 112);
          long long v364 = *(_OWORD *)(v204 + 128);
          long long v363 = v210;
          long long v362 = v209;
          long long v361 = v208;
          long long v211 = *(_OWORD *)(v204 + 144);
          long long v212 = *(_OWORD *)(v204 + 160);
          long long v213 = *(_OWORD *)(v204 + 176);
          uint64_t v368 = *(void *)(v204 + 192);
          long long v367 = v213;
          long long v366 = v212;
          long long v365 = v211;
          sub_1C05DC8FC((uint64_t)&v356);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v198 = sub_1BFEF6940(0, v198[2] + 1, 1, v198);
          }
          unint64_t v215 = v198[2];
          unint64_t v214 = v198[3];
          if (v215 >= v214 >> 1) {
            uint64_t v198 = sub_1BFEF6940((void *)(v214 > 1), v215 + 1, 1, v198);
          }
          v198[2] = v215 + 1;
          uint64_t v216 = &v198[25 * v215];
          *((_OWORD *)v216 + 2) = v356;
          long long v217 = v357;
          long long v218 = v358;
          long long v219 = v360;
          *((_OWORD *)v216 + 5) = v359;
          *((_OWORD *)v216 + 6) = v219;
          *((_OWORD *)v216 + 3) = v217;
          *((_OWORD *)v216 + 4) = v218;
          long long v220 = v361;
          long long v221 = v362;
          long long v222 = v364;
          *((_OWORD *)v216 + 9) = v363;
          *((_OWORD *)v216 + 10) = v222;
          *((_OWORD *)v216 + 7) = v220;
          *((_OWORD *)v216 + 8) = v221;
          long long v223 = v365;
          long long v224 = v366;
          long long v225 = v367;
          v216[28] = v368;
          *((_OWORD *)v216 + 12) = v224;
          *((_OWORD *)v216 + 13) = v225;
          *((_OWORD *)v216 + 11) = v223;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v197 += 2;
      --v196;
    }
    while (v196);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v198 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v226 = v291;
  uint64_t v227 = v291[7];
  uint64_t v293 = v227;
  if (!v227) {
    uint64_t v227 = swift_bridgeObjectRetain();
  }
  *(void *)&long long v298 = v227;
  swift_beginAccess();
  uint64_t v295 = (void *)v226[8];
  uint64_t v284 = v295;
  if (!v295)
  {
    uint64_t v228 = v292;
    swift_beginAccess();
    uint64_t v295 = *(void **)(v228 + 64);
    swift_bridgeObjectRetain();
  }
  uint64_t v229 = v226[9];
  uint64_t v283 = v229;
  if ((~v229 & 0xF000000000000007) == 0)
  {
    uint64_t v229 = *(void *)(v292 + 72);
    sub_1BFEF683C(v229);
  }
  *(void *)&v296[0] = v229;
  uint64_t v230 = v226[10];
  uint64_t v282 = v230;
  if (!v230) {
    uint64_t v230 = swift_bridgeObjectRetain();
  }
  uint64_t v294 = (void *)v230;
  int v231 = *((unsigned __int8 *)v226 + 88);
  if (v231 == 9) {
    LOBYTE(v231) = *(unsigned char *)(v292 + 88);
  }
  char v339 = v231;
  uint64_t v232 = v226[12];
  uint64_t v233 = v226[13];
  unsigned int v234 = *((unsigned __int8 *)v226 + 112);
  uint64_t v280 = v233;
  uint64_t v281 = v232;
  char v235 = v234;
  unsigned int v279 = v234;
  if (v234 >= 0xFE)
  {
    uint64_t v232 = *(void *)(v292 + 96);
    uint64_t v233 = *(void *)(v292 + 104);
    char v235 = *(unsigned char *)(v292 + 112);
    sub_1BFEF6828(v232, v233, v235);
  }
  *(void *)&long long v324 = v232;
  *((void *)&v324 + 1) = v233;
  LOBYTE(v325) = v235;
  unint64_t v236 = v226[15];
  unint64_t v278 = v236;
  if (v236 == 3)
  {
    unint64_t v236 = *(void *)(v292 + 120);
    sub_1BFEF6854(v236);
  }
  int v369 = (void *)v236;
  int v237 = *((unsigned __int8 *)v226 + 128);
  if (v237 == 4) {
    LOBYTE(v237) = *(unsigned char *)(v292 + 128);
  }
  uint64_t v238 = v226[17];
  uint64_t v239 = v226[18];
  uint64_t v240 = v226[19];
  uint64_t v241 = v226[20];
  uint64_t v242 = v226[21];
  uint64_t v243 = v226[22];
  uint64_t v244 = v226[23];
  uint64_t v245 = v226[24];
  uint64_t v246 = v226[25];
  uint64_t v247 = v226[26];
  uint64_t v276 = v239;
  uint64_t v277 = v238;
  uint64_t v248 = v238;
  uint64_t v274 = v241;
  uint64_t v275 = v240;
  uint64_t v249 = v226;
  uint64_t v250 = v241;
  uint64_t v272 = v243;
  uint64_t v273 = v242;
  uint64_t v270 = v245;
  uint64_t v271 = v244;
  uint64_t v268 = v247;
  uint64_t v269 = v246;
  char v338 = v237;
  int v251 = *((unsigned __int8 *)v249 + 216);
  int v267 = v251;
  if (v251 == 254)
  {
    uint64_t v252 = *(void *)(v292 + 136);
    uint64_t v265 = *(void *)(v292 + 144);
    uint64_t v266 = v252;
    uint64_t v250 = *(void *)(v292 + 160);
    uint64_t v264 = *(void *)(v292 + 152);
    uint64_t v242 = *(void *)(v292 + 168);
    uint64_t v243 = *(void *)(v292 + 176);
    uint64_t v244 = *(void *)(v292 + 184);
    uint64_t v245 = *(void *)(v292 + 192);
    uint64_t v246 = *(void *)(v292 + 200);
    uint64_t v247 = *(void *)(v292 + 208);
    LOBYTE(v251) = *(unsigned char *)(v292 + 216);
    sub_1BFEF8708(v252, v265, v264, v250, v242, v243, v244, v245, v246, v247, v251);
    uint64_t v240 = v264;
    uint64_t v239 = v265;
    uint64_t v248 = v266;
  }
  *(void *)&long long v356 = v248;
  *((void *)&v356 + 1) = v239;
  *(void *)&long long v357 = v240;
  *((void *)&v357 + 1) = v250;
  *(void *)&long long v358 = v242;
  *((void *)&v358 + 1) = v243;
  *(void *)&long long v359 = v244;
  *((void *)&v359 + 1) = v245;
  *(void *)&long long v360 = v246;
  *((void *)&v360 + 1) = v247;
  long long v253 = v291;
  uint64_t v254 = v291[28];
  uint64_t v255 = v254;
  LOBYTE(v361) = v251;
  if ((~v254 & 0xF000000000000007) == 0)
  {
    uint64_t v255 = *(void *)(v292 + 224);
    sub_1BFDC11A4(v255);
  }
  uint64_t v337 = (void *)v255;
  int v256 = *((unsigned __int8 *)v253 + 232);
  uint64_t v257 = v285;
  if (v256 == 2) {
    LOBYTE(v256) = *(unsigned char *)(v292 + 232);
  }
  uint64_t v258 = v253[30];
  uint64_t v259 = v258;
  uint64_t v260 = v253[31];
  if (v258 == 1)
  {
    uint64_t v259 = *(void *)(v292 + 240);
    uint64_t v260 = *(void *)(v292 + 248);
    sub_1BFEF6864(v259);
  }
  *(void *)&long long v311 = v259;
  *((void *)&v311 + 1) = v260;
  uint64_t v261 = v290;
  sub_1BFEF6CE8((uint64_t)v291 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask, v290);
  uint64_t v262 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v283);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v281, v280, v279);
  sub_1BFEF6854(v278);
  sub_1BFEF8708(v277, v276, v275, v274, v273, v272, v271, v270, v269, v268, v267);
  sub_1BFDC11A4(v254);
  sub_1BFEF6864(v258);
  FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(v288, v287, v257, v286, (uint64_t)v198, (uint64_t *)&v298, (uint64_t)v295, (uint64_t *)v296, (uint64_t)v294, &v339, (uint64_t *)&v324, (uint64_t *)&v369, &v338, &v356, (uint64_t *)&v337, v256, (uint64_t *)&v311, v261);
  return v262;
}

uint64_t sub_1BFEF6828(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFDu) {
    return sub_1BFF046A0(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1BFEF683C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_1BFEF6854(unint64_t result)
{
  if (result != 3) {
    return sub_1BFEF6A90(result);
  }
  return result;
}

uint64_t sub_1BFEF6864(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFEF68AC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFDu) {
    return sub_1BFF04738(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_1BFEF68C0(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1BFEF68D8(unint64_t result)
{
  if (result != 3) {
    return sub_1BFEF70CC(result);
  }
  return result;
}

uint64_t sub_1BFEF68E8(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1BFEF692C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1C0EE1F1C(a1, a2, a3, a4, (unint64_t *)&unk_1EB880EB0, (uint64_t)&type metadata for FormatSelector);
}

void *sub_1BFEF6940(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, &qword_1EB883238, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 200);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[25 * v8 + 4]) {
          memmove(v12, a4 + 4, 200 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BFEF6FD8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BFEF6A90(unint64_t result)
{
  if (result >= 3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BFEF6AA0(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_1BFEF692C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFEF6BF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFEF6CE8(uint64_t a1, uint64_t a2)
{
  sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t FormatImageNodeStyle.init(identifier:class:selectors:alpha:adjustments:background:borders:contentMode:cornerRadius:renderingMode:resize:shadow:tintColor:ignoresSmartInvertColors:request:imageMask:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, uint64_t a9, char *a10, uint64_t *a11, uint64_t *a12, char *a13, long long *a14, uint64_t *a15, char a16, uint64_t *a17, uint64_t a18)
{
  uint64_t v24 = *a6;
  uint64_t v25 = *a8;
  char v41 = *a10;
  uint64_t v26 = *a11;
  uint64_t v40 = a11[1];
  char v39 = *((unsigned char *)a11 + 16);
  uint64_t v38 = *a12;
  char v37 = *a13;
  long long v35 = a14[1];
  long long v36 = *a14;
  long long v33 = a14[3];
  long long v34 = a14[2];
  uint64_t v32 = *((void *)a14 + 8);
  uint64_t v31 = *((void *)a14 + 9);
  char v30 = *((unsigned char *)a14 + 80);
  uint64_t v29 = *a15;
  uint64_t v42 = a17[1];
  uint64_t v43 = *a17;
  *(void *)(v18 + 64) = 0;
  swift_beginAccess();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  swift_beginAccess();
  *(void *)(v18 + 48) = a5;
  *(void *)(v18 + 56) = v24;
  swift_beginAccess();
  *(void *)(v18 + 64) = a7;
  swift_bridgeObjectRelease();
  *(void *)(v18 + 72) = v25;
  *(void *)(v18 + 80) = a9;
  *(unsigned char *)(v18 + 88) = v41;
  *(void *)(v18 + 96) = v26;
  *(void *)(v18 + 104) = v40;
  *(unsigned char *)(v18 + 112) = v39;
  *(void *)(v18 + 120) = v38;
  *(unsigned char *)(v18 + 128) = v37;
  *(_OWORD *)(v18 + 136) = v36;
  *(_OWORD *)(v18 + 152) = v35;
  *(_OWORD *)(v18 + 168) = v34;
  *(_OWORD *)(v18 + 184) = v33;
  *(void *)(v18 + 200) = v32;
  *(void *)(v18 + 208) = v31;
  *(unsigned char *)(v18 + 216) = v30;
  *(void *)(v18 + 224) = v29;
  *(unsigned char *)(v18 + 232) = a16;
  uint64_t v27 = v18 + OBJC_IVAR____TtC8NewsFeed20FormatImageNodeStyle_imageMask;
  *(void *)(v18 + 240) = v43;
  *(void *)(v18 + 248) = v42;
  sub_1BFEF6F58(a18, v27);
  return v18;
}

uint64_t sub_1BFEF6F58(uint64_t a1, uint64_t a2)
{
  sub_1BFE79AD8(0, (unint64_t *)&qword_1EB884FE0, MEMORY[0x1E4FAAFC8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BFEF6FD8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 200 * a1 + 32;
    unint64_t v6 = a3 + 200 * v4;
    if (v5 >= v6 || v5 + 200 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

unint64_t sub_1BFEF70CC(unint64_t result)
{
  if (result >= 3) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFEF70DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v72 = *v2;
  uint64_t v73 = v2[1];
  uint64_t v6 = v2[3];
  uint64_t v83 = v2[5];
  uint64_t v84 = v2[4];
  unsigned int v82 = *((unsigned __int8 *)v2 + 48);
  uint64_t v7 = v2[7];
  uint64_t v8 = v2[9];
  uint64_t v91 = v2[10];
  uint64_t v92 = v2[8];
  uint64_t v89 = v2[12];
  uint64_t v90 = v2[11];
  uint64_t v87 = v2[14];
  uint64_t v88 = v2[13];
  uint64_t v80 = v2[16];
  uint64_t v81 = v2[15];
  int v79 = *((unsigned __int8 *)v2 + 136);
  uint64_t v86 = v2[18];
  int v70 = *((unsigned __int8 *)v2 + 153);
  int v71 = *((unsigned __int8 *)v2 + 152);
  int v69 = *((unsigned __int8 *)v2 + 154);
  unint64_t v85 = v2[20];
  uint64_t v93 = v2[22];
  uint64_t v94 = v2[21];
  uint64_t v62 = v2[24];
  uint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v39 = *(void *)(a1 + 64);
  uint64_t v45 = v2[23];
  uint64_t v46 = *(void *)(a1 + 72);
  uint64_t v48 = *(void *)(a1 + 80);
  uint64_t v50 = *(void *)(a1 + 88);
  uint64_t v52 = *(void *)(a1 + 96);
  uint64_t v54 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 120);
  uint64_t v56 = *(void *)(a1 + 112);
  uint64_t v58 = *(void *)(a1 + 128);
  unsigned __int8 v60 = *(unsigned char *)(a1 + 136);
  char v68 = *(unsigned char *)(a1 + 152);
  char v67 = *(unsigned char *)(a1 + 153);
  char v66 = *(unsigned char *)(a1 + 154);
  uint64_t v40 = *(void *)(a1 + 144);
  unint64_t v41 = *(void *)(a1 + 160);
  uint64_t v37 = *(void *)(a1 + 168);
  uint64_t v38 = *(void *)(a1 + 176);
  uint64_t v43 = *(void *)(a1 + 184);
  uint64_t v78 = v2[2];
  uint64_t v42 = *(void *)(a1 + 192);
  uint64_t v74 = v78;
  if ((~v78 & 0xF000000000000007) == 0)
  {
    uint64_t v78 = *(void *)(a1 + 16);
    uint64_t v13 = v2[3];
    sub_1BFEF683C(v78);
    uint64_t v6 = v13;
  }
  uint64_t v14 = v6;
  if (!v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = v4;
  }
  uint64_t v65 = v14;
  uint64_t v16 = v83;
  uint64_t v15 = v84;
  char v17 = v82;
  if (v82 >= 0xFE)
  {
    sub_1BFEF6828(v5, v9, v10);
    uint64_t v15 = v5;
    uint64_t v16 = v9;
    char v17 = v10;
  }
  uint64_t v64 = v15;
  uint64_t v77 = v7;
  uint64_t v18 = v92;
  uint64_t v75 = v8;
  uint64_t v76 = v8;
  uint64_t v19 = v90;
  uint64_t v20 = v91;
  uint64_t v21 = v88;
  uint64_t v22 = v89;
  uint64_t v23 = v87;
  uint64_t v25 = v80;
  uint64_t v24 = v81;
  unsigned __int8 v26 = v79;
  char v63 = v17;
  uint64_t v44 = v16;
  if (v79 == 254)
  {
    uint64_t v18 = v39;
    uint64_t v20 = v48;
    uint64_t v22 = v52;
    sub_1BFEF8708(v11, v39, v46, v48, v50, v52, v54, v56, v12, v58, v60);
    uint64_t v76 = v46;
    uint64_t v77 = v11;
    uint64_t v19 = v50;
    uint64_t v21 = v54;
    uint64_t v23 = v56;
    uint64_t v24 = v12;
    uint64_t v25 = v58;
    unsigned __int8 v26 = v60;
  }
  unsigned __int8 v47 = v26;
  uint64_t v49 = v25;
  uint64_t v51 = v24;
  uint64_t v53 = v23;
  uint64_t v55 = v21;
  uint64_t v57 = v22;
  uint64_t v59 = v19;
  uint64_t v61 = v20;
  uint64_t v27 = v86;
  if ((~v86 & 0xF000000000000007) == 0)
  {
    sub_1BFDC11A4(v40);
    uint64_t v27 = v40;
  }
  unint64_t v28 = v85;
  if (v85 == 3)
  {
    unint64_t v28 = v41;
    sub_1BFEF6854(v41);
  }
  uint64_t v29 = v94;
  if (!v94)
  {
    uint64_t v29 = v37;
    swift_bridgeObjectRetain();
  }
  uint64_t v30 = v93;
  if (!v93)
  {
    uint64_t v30 = v38;
    swift_bridgeObjectRetain();
  }
  uint64_t v31 = v45;
  uint64_t v32 = v62;
  if (v45 == 1)
  {
    uint64_t v31 = v43;
    sub_1BFEF6864(v43);
    uint64_t v32 = v42;
  }
  char v33 = v69;
  if (v69 == 9) {
    char v33 = v66;
  }
  *(void *)a2 = v72;
  *(void *)(a2 + 8) = v73;
  char v34 = v67;
  if (v70 != 4) {
    char v34 = v70;
  }
  char v35 = v71;
  if (v71 == 2) {
    char v35 = v68;
  }
  *(void *)(a2 + 16) = v78;
  *(void *)(a2 + 24) = v65;
  *(void *)(a2 + 32) = v64;
  *(void *)(a2 + 40) = v44;
  *(unsigned char *)(a2 + 48) = v63;
  *(void *)(a2 + 56) = v77;
  *(void *)(a2 + 64) = v18;
  *(void *)(a2 + 72) = v76;
  *(void *)(a2 + 80) = v61;
  *(void *)(a2 + 88) = v59;
  *(void *)(a2 + 96) = v57;
  *(void *)(a2 + 104) = v55;
  *(void *)(a2 + 112) = v53;
  *(void *)(a2 + 120) = v51;
  *(void *)(a2 + 128) = v49;
  *(unsigned char *)(a2 + 136) = v47;
  *(void *)(a2 + 144) = v27;
  *(unsigned char *)(a2 + 152) = v35;
  *(unsigned char *)(a2 + 153) = v34;
  *(unsigned char *)(a2 + 154) = v33;
  *(void *)(a2 + 160) = v28;
  *(void *)(a2 + 168) = v29;
  *(void *)(a2 + 176) = v30;
  *(void *)(a2 + 184) = v31;
  *(void *)(a2 + 192) = v32;
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v74);
  swift_bridgeObjectRetain();
  sub_1BFEF6828(v84, v83, v82);
  sub_1BFEF8708(v7, v92, v75, v91, v90, v89, v88, v87, v81, v80, v79);
  sub_1BFDC11A4(v86);
  sub_1BFEF6854(v85);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BFEF6864(v45);
}

void sub_1BFEF7564()
{
  if (!qword_1EB88FEC8)
  {
    sub_1C008192C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB88FEC8);
    }
  }
}

uint64_t sub_1BFEF75C8(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  unint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_1BFF66964((uint64_t)(v1 + 37), (uint64_t)v182, (unint64_t *)&qword_1EB876CA0);
  sub_1BFF66964((uint64_t)v182, (uint64_t)v183, (unint64_t *)&qword_1EB876CA0);
  int v5 = sub_1C01CDAD8((uint64_t)v183);
  uint64_t v138 = v4;
  uint64_t v6 = v4 + 296;
  if (v5 == 1)
  {
    sub_1BFF66964(v6, (uint64_t)v179, (unint64_t *)&qword_1EB876CA0);
    sub_1BFF66964((uint64_t)v179, (uint64_t)__dst, (unint64_t *)&qword_1EB876CA0);
    sub_1C01CDAD8((uint64_t)__dst);
    uint64_t v7 = v179;
  }
  else
  {
    sub_1BFF66964(v6, (uint64_t)v179, (unint64_t *)&qword_1EB876CA0);
    sub_1BFF66964((uint64_t)v179, (uint64_t)__dst, (unint64_t *)&qword_1EB876CA0);
    if (sub_1C01CDAD8((uint64_t)__dst) == 1)
    {
      uint64_t v7 = v182;
    }
    else
    {
      v178[10] = v183[10];
      v178[11] = v183[11];
      LOWORD(v178[12]) = v184;
      v178[6] = v183[6];
      v178[7] = v183[7];
      v178[9] = v183[9];
      v178[8] = v183[8];
      v178[2] = v183[2];
      v178[3] = v183[3];
      v178[5] = v183[5];
      v178[4] = v183[4];
      v178[1] = v183[1];
      v178[0] = v183[0];
      __src[10] = __dst[10];
      __src[11] = __dst[11];
      LOWORD(__src[12]) = __dst[12];
      __src[6] = __dst[6];
      __src[7] = __dst[7];
      __src[9] = __dst[9];
      __src[8] = __dst[8];
      __src[2] = __dst[2];
      __src[3] = __dst[3];
      __src[5] = __dst[5];
      __src[4] = __dst[4];
      __src[1] = __dst[1];
      __src[0] = __dst[0];
      FormatParagraphStyle.merge(other:)((unint64_t)__src, (uint64_t)v173);
      v178[10] = v173[10];
      v178[11] = v173[11];
      LOWORD(v178[12]) = v173[12];
      v178[6] = v173[6];
      v178[7] = v173[7];
      v178[9] = v173[9];
      v178[8] = v173[8];
      v178[2] = v173[2];
      v178[3] = v173[3];
      v178[5] = v173[5];
      v178[4] = v173[4];
      v178[1] = v173[1];
      v178[0] = v173[0];
      nullsub_1(v178);
      uint64_t v7 = v178;
    }
  }
  sub_1BFF66964((uint64_t)v7, (uint64_t)v181, (unint64_t *)&qword_1EB876CA0);
  swift_beginAccess();
  uint64_t v8 = v1[2];
  uint64_t v9 = v2[3];
  uint64_t v10 = v2[5];
  uint64_t v136 = v2[4];
  swift_beginAccess();
  uint64_t v11 = v2[6];
  swift_beginAccess();
  uint64_t v12 = *(void *)(v4 + 48);
  v175[0] = MEMORY[0x1E4FBC868];
  int64_t v13 = *(void *)(v11 + 16);
  int64_t v14 = *(void *)(v12 + 16);
  if (__OFADD__(v13, v14)) {
    goto LABEL_104;
  }
  uint64_t v135 = v8;
  long long v137 = v2;
  sub_1BFEF94B0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v146 = v12;
  swift_bridgeObjectRetain();
  sub_1C151E3AC();
  long long v168 = sub_1BFEF692C(0, v13, 0, MEMORY[0x1E4FBC860]);
  uint64_t v15 = *(void *)(v11 + 16);
  uint64_t v133 = v10;
  uint64_t v134 = v9;
  uint64_t v16 = v11;
  if (v15)
  {
    int64_t v166 = v14;
    swift_bridgeObjectRetain();
    memcpy(__dst, (const void *)(v11 + 32), 0x210uLL);
    uint64_t v17 = *((void *)&__dst[0] + 1);
    uint64_t v18 = v15 - 1;
    for (uint64_t i = 560; ; i += 528)
    {
      uint64_t v20 = *(void *)&__dst[0];
      sub_1C05DC340((uint64_t)__dst);
      sub_1C05DC340((uint64_t)__dst);
      swift_bridgeObjectRetain();
      uint64_t v21 = v175[0];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v178[0] = v21;
      unint64_t v24 = sub_1BFEF2D8C(v20, v17);
      uint64_t v25 = *(void *)(v21 + 16);
      BOOL v26 = (v23 & 1) == 0;
      uint64_t v27 = v25 + v26;
      if (__OFADD__(v25, v26))
      {
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        uint64_t result = sub_1C1520CFC();
        __break(1u);
        return result;
      }
      char v28 = v23;
      if (*(void *)(v21 + 24) >= v27)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v23) {
            goto LABEL_16;
          }
        }
        else
        {
          sub_1C10717CC();
          if (v28) {
            goto LABEL_16;
          }
        }
      }
      else
      {
        sub_1C105F100(v27, isUniquelyReferenced_nonNull_native);
        unint64_t v29 = sub_1BFEF2D8C(v20, v17);
        if ((v28 & 1) != (v30 & 1)) {
          goto LABEL_105;
        }
        unint64_t v24 = v29;
        if (v28)
        {
LABEL_16:
          uint64_t v31 = *(void **)&v178[0];
          uint64_t v32 = (void *)(*(void *)(*(void *)&v178[0] + 56) + 528 * v24);
          memcpy(v179, v32, sizeof(v179));
          sub_1C05DC4C4((uint64_t)v179);
          memcpy(v32, __dst, 0x210uLL);
          goto LABEL_20;
        }
      }
      uint64_t v31 = *(void **)&v178[0];
      *(void *)(*(void *)&v178[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
      char v33 = (uint64_t *)(v31[6] + 16 * v24);
      *char v33 = v20;
      v33[1] = v17;
      memcpy((void *)(v31[7] + 528 * v24), __dst, 0x210uLL);
      uint64_t v34 = v31[2];
      BOOL v35 = __OFADD__(v34, 1);
      uint64_t v36 = v34 + 1;
      if (v35) {
        goto LABEL_100;
      }
      long long v31[2] = v36;
      swift_bridgeObjectRetain();
LABEL_20:
      v175[0] = (uint64_t)v31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v37 = v168[2];
      unint64_t v38 = v168[3];
      swift_bridgeObjectRetain();
      if (v37 >= v38 >> 1) {
        long long v168 = sub_1BFEF692C((void *)(v38 > 1), v37 + 1, 1, v168);
      }
      v168[2] = v37 + 1;
      uint64_t v39 = &v168[2 * v37];
      unsigned char v39[4] = v20;
      v39[5] = v17;
      sub_1C05DC4C4((uint64_t)__dst);
      if (!v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = v12;
        int64_t v14 = v166;
        goto LABEL_26;
      }
      memcpy(__dst, (const void *)(v16 + i), 0x210uLL);
      uint64_t v17 = *((void *)&__dst[0] + 1);
      --v18;
    }
  }
  uint64_t v40 = v12;
LABEL_26:
  long long v167 = sub_1BFEF692C(0, v14, 0, MEMORY[0x1E4FBC860]);
  uint64_t v41 = *(void *)(v40 + 16);
  if (!v41) {
    goto LABEL_60;
  }
  swift_bridgeObjectRetain();
  uint64_t v42 = v41 - 1;
  for (uint64_t j = 32; ; j += 528)
  {
    memcpy(__dst, (const void *)(v40 + j), 0x210uLL);
    long long v44 = __dst[0];
    memcpy(v179, __dst, sizeof(v179));
    uint64_t v45 = (void *)v175[0];
    uint64_t v46 = *(void *)(v175[0] + 16);
    sub_1C05DC340((uint64_t)__dst);
    if (!v46) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v47 = sub_1BFEF2D8C(v44, *((uint64_t *)&v44 + 1));
    if ((v48 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      break;
    }
    memcpy(__src, (const void *)(v45[7] + 528 * v47), sizeof(__src));
    sub_1C05DC340((uint64_t)__src);
    swift_bridgeObjectRelease();
    long long v49 = __src[0];
    memcpy(v178, __src, sizeof(v178));
    sub_1BFEF8E18((uint64_t)v179, (uint64_t)v173);
    swift_bridgeObjectRetain();
    char v50 = swift_isUniquelyReferenced_nonNull_native();
    long long v177 = v45;
    unint64_t v52 = sub_1BFEF2D8C(v49, *((uint64_t *)&v49 + 1));
    uint64_t v53 = v45[2];
    BOOL v54 = (v51 & 1) == 0;
    uint64_t v55 = v53 + v54;
    if (__OFADD__(v53, v54)) {
      goto LABEL_102;
    }
    char v56 = v51;
    if (v45[3] >= v55)
    {
      if (v50)
      {
        if (v51) {
          goto LABEL_46;
        }
      }
      else
      {
        sub_1C10717CC();
        if (v56) {
          goto LABEL_46;
        }
      }
    }
    else
    {
      sub_1C105F100(v55, v50);
      unint64_t v57 = sub_1BFEF2D8C(v49, *((uint64_t *)&v49 + 1));
      if ((v56 & 1) != (v58 & 1)) {
        goto LABEL_105;
      }
      unint64_t v52 = v57;
      if (v56)
      {
LABEL_46:
        int v71 = v177;
        uint64_t v72 = (void *)(v177[7] + 528 * v52);
        memcpy(v171, v72, sizeof(v171));
        sub_1C05DC4C4((uint64_t)v171);
        memcpy(v72, v173, 0x210uLL);
        goto LABEL_57;
      }
    }
    int v71 = v177;
    v177[(v52 >> 6) + 8] |= 1 << v52;
    *(_OWORD *)(v71[6] + 16 * v52) = v49;
    memcpy((void *)(v71[7] + 528 * v52), v173, 0x210uLL);
    uint64_t v90 = v71[2];
    BOOL v35 = __OFADD__(v90, 1);
    uint64_t v91 = v90 + 1;
    if (v35) {
      goto LABEL_103;
    }
    uint64_t v71[2] = v91;
    swift_bridgeObjectRetain();
LABEL_57:
    v175[0] = (uint64_t)v71;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v170, v178, sizeof(v170));
    sub_1C05DC4C4((uint64_t)v170);
    memcpy(v171, v179, sizeof(v171));
    sub_1C05DC4C4((uint64_t)v171);
    if (!v42) {
      goto LABEL_59;
    }
LABEL_58:
    --v42;
  }
  uint64_t v164 = j;
  sub_1C05DC340((uint64_t)__dst);
  swift_bridgeObjectRetain();
  char v59 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v173[0] = v45;
  unint64_t v61 = sub_1BFEF2D8C(v44, *((uint64_t *)&v44 + 1));
  uint64_t v62 = v45[2];
  BOOL v63 = (v60 & 1) == 0;
  uint64_t v64 = v62 + v63;
  uint64_t v65 = v167;
  if (__OFADD__(v62, v63)) {
    goto LABEL_99;
  }
  char v66 = v60;
  if (v45[3] >= v64)
  {
    if (v59)
    {
      if ((v60 & 1) == 0) {
        goto LABEL_48;
      }
    }
    else
    {
      sub_1C10717CC();
      if ((v66 & 1) == 0) {
        goto LABEL_48;
      }
    }
    goto LABEL_43;
  }
  sub_1C105F100(v64, v59);
  unint64_t v67 = sub_1BFEF2D8C(v44, *((uint64_t *)&v44 + 1));
  if ((v66 & 1) != (v68 & 1)) {
    goto LABEL_105;
  }
  unint64_t v61 = v67;
  if (v66)
  {
LABEL_43:
    int v69 = *(void **)&v173[0];
    int v70 = (void *)(*(void *)(*(void *)&v173[0] + 56) + 528 * v61);
    memcpy(v178, v70, sizeof(v178));
    sub_1C05DC4C4((uint64_t)v178);
    memcpy(v70, __dst, 0x210uLL);
    goto LABEL_50;
  }
LABEL_48:
  int v69 = *(void **)&v173[0];
  *(void *)(*(void *)&v173[0] + 8 * (v61 >> 6) + 64) |= 1 << v61;
  *(_OWORD *)(v69[6] + 16 * v61) = v44;
  memcpy((void *)(v69[7] + 528 * v61), __dst, 0x210uLL);
  uint64_t v73 = v69[2];
  BOOL v35 = __OFADD__(v73, 1);
  uint64_t v74 = v73 + 1;
  if (v35) {
    goto LABEL_101;
  }
  v69[2] = v74;
  swift_bridgeObjectRetain();
LABEL_50:
  v175[0] = (uint64_t)v69;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v75 = v179[0];
  uint64_t v76 = v179[1];
  unint64_t v77 = v167[2];
  unint64_t v78 = v167[3];
  swift_bridgeObjectRetain();
  uint64_t v162 = v42;
  if (v77 >= v78 >> 1) {
    uint64_t v65 = sub_1BFEF692C((void *)(v78 > 1), v77 + 1, 1, v167);
  }
  v65[2] = v77 + 1;
  long long v167 = v65;
  int v79 = &v65[2 * v77];
  v79[4] = v75;
  v79[5] = v76;
  uint64_t v80 = v179[2];
  sub_1BFF66964((uint64_t)&v179[3], (uint64_t)__src, (unint64_t *)&qword_1EB873B18);
  long long v158 = *(_OWORD *)&v179[21];
  long long v160 = *(_OWORD *)&v179[19];
  long long v154 = *(_OWORD *)&v179[25];
  long long v156 = *(_OWORD *)&v179[23];
  long long v152 = *(_OWORD *)&v179[27];
  uint64_t v81 = v179[29];
  char v82 = v179[30];
  uint64_t v83 = v179[31];
  sub_1BFF66964((uint64_t)&v179[32], (uint64_t)v173, (unint64_t *)&qword_1EB876CA0);
  char v84 = v179[58];
  long long v148 = *(_OWORD *)&v179[61];
  long long v150 = *(_OWORD *)&v179[59];
  uint64_t v85 = v179[57];
  uint64_t v86 = v179[63];
  char v87 = v179[64];
  uint64_t v88 = v75;
  uint64_t v89 = v179[65];
  *(void *)&v178[0] = v88;
  *((void *)&v178[0] + 1) = v76;
  *(void *)&v178[1] = v80;
  sub_1BFF66964((uint64_t)__src, (uint64_t)&v178[1] + 8, (unint64_t *)&qword_1EB873B18);
  *(_OWORD *)((char *)&v178[9] + 8) = v160;
  *(_OWORD *)((char *)&v178[10] + 8) = v158;
  *(_OWORD *)((char *)&v178[11] + 8) = v156;
  *(_OWORD *)((char *)&v178[12] + 8) = v154;
  *(_OWORD *)((char *)&v178[13] + 8) = v152;
  *((void *)&v178[14] + 1) = v81;
  LOBYTE(v178[15]) = v82;
  *((void *)&v178[15] + 1) = v83;
  sub_1BFF66964((uint64_t)v173, (uint64_t)&v178[16], (unint64_t *)&qword_1EB876CA0);
  LOBYTE(v178[29]) = v84;
  *(_OWORD *)((char *)&v178[29] + 8) = v150;
  *(_OWORD *)((char *)&v178[30] + 8) = v148;
  *((void *)&v178[28] + 1) = v85;
  *((void *)&v178[31] + 1) = v86;
  LOBYTE(v178[32]) = v87;
  *((void *)&v178[32] + 1) = v89;
  sub_1C05DC4C4((uint64_t)v178);
  uint64_t v40 = v146;
  uint64_t v42 = v162;
  uint64_t j = v164;
  if (v162) {
    goto LABEL_58;
  }
LABEL_59:
  swift_bridgeObjectRelease();
LABEL_60:
  *(void *)&__dst[0] = v167;
  swift_bridgeObjectRetain();
  uint64_t v92 = swift_bridgeObjectRetain();
  sub_1BFEF6AA0(v92);
  uint64_t v93 = *(void *)&__dst[0];
  uint64_t v94 = *(void *)(*(void *)&__dst[0] + 16);
  if (v94)
  {
    swift_bridgeObjectRetain();
    long long v95 = (uint64_t *)(v93 + 40);
    long long v96 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v97 = v175[0];
      if (*(void *)(v175[0] + 16))
      {
        uint64_t v99 = *(v95 - 1);
        uint64_t v98 = *v95;
        swift_bridgeObjectRetain_n();
        unint64_t v100 = sub_1BFEF2D8C(v99, v98);
        if (v101)
        {
          memcpy(__dst, (const void *)(*(void *)(v97 + 56) + 528 * v100), 0x210uLL);
          sub_1C05DC340((uint64_t)__dst);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v96 = sub_1BFEF8AD8(0, v96[2] + 1, 1, v96);
          }
          unint64_t v103 = v96[2];
          unint64_t v102 = v96[3];
          if (v103 >= v102 >> 1) {
            long long v96 = sub_1BFEF8AD8((void *)(v102 > 1), v103 + 1, 1, v96);
          }
          _OWORD v96[2] = v103 + 1;
          memcpy(&v96[66 * v103 + 4], __dst, 0x210uLL);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v95 += 2;
      --v94;
    }
    while (v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    long long v96 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v169 = v137[7];
  uint64_t v104 = v169;
  if ((~v169 & 0xF000000000000007) == 0)
  {
    uint64_t v104 = *(void *)(v138 + 56);
    sub_1BFEF683C(v104);
  }
  long long v177 = (void *)v104;
  sub_1BFF66964((uint64_t)(v137 + 8), (uint64_t)v178, (unint64_t *)&qword_1EB873B18);
  sub_1BFF66964((uint64_t)v178, (uint64_t)v179, (unint64_t *)&qword_1EB873B18);
  if (sub_1C044587C((uint64_t)v179) == 1)
  {
    sub_1BFF66964(v138 + 64, (uint64_t)__dst, (unint64_t *)&qword_1EB873B18);
    sub_1BFF65020(__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
    long long v105 = __dst;
  }
  else
  {
    long long v105 = v178;
  }
  sub_1BFF66964((uint64_t)v105, (uint64_t)v173, (unint64_t *)&qword_1EB873B18);
  sub_1BFF66964((uint64_t)v173, (uint64_t)__src, (unint64_t *)&qword_1EB873B18);
  uint64_t v106 = v137[24];
  if (!v106) {
    uint64_t v106 = swift_bridgeObjectRetain();
  }
  uint64_t v149 = v106;
  uint64_t v107 = v137[26];
  uint64_t v108 = v137[27];
  uint64_t v109 = v137[28];
  uint64_t v110 = v137[30];
  uint64_t v111 = v137[31];
  uint64_t v112 = v137[32];
  uint64_t v114 = v137[33];
  uint64_t v113 = v137[34];
  uint64_t v163 = v107;
  uint64_t v165 = v137[25];
  uint64_t v115 = v165;
  uint64_t v161 = v108;
  uint64_t v159 = v109;
  uint64_t v157 = v137[29];
  uint64_t v116 = v157;
  uint64_t v155 = v110;
  uint64_t v153 = v111;
  uint64_t v151 = v112;
  uint64_t v145 = v113;
  uint64_t v147 = v114;
  int v117 = *((unsigned __int8 *)v137 + 280);
  unsigned __int8 v144 = *((unsigned char *)v137 + 280);
  if (v117 == 254)
  {
    uint64_t v140 = *(void *)(v138 + 208);
    uint64_t v142 = *(void *)(v138 + 200);
    uint64_t v108 = *(void *)(v138 + 216);
    uint64_t v109 = *(void *)(v138 + 224);
    uint64_t v116 = *(void *)(v138 + 232);
    uint64_t v110 = *(void *)(v138 + 240);
    uint64_t v111 = *(void *)(v138 + 248);
    uint64_t v112 = *(void *)(v138 + 256);
    uint64_t v114 = *(void *)(v138 + 264);
    uint64_t v113 = *(void *)(v138 + 272);
    LOBYTE(v117) = *(unsigned char *)(v138 + 280);
    sub_1BFEF8708(v142, v140, v108, v109, v116, v110, v111, v112, v114, v113, v117);
    uint64_t v107 = v140;
    uint64_t v115 = v142;
  }
  *(void *)&v171[0] = v115;
  *((void *)&v171[0] + 1) = v107;
  *(void *)&v171[1] = v108;
  *((void *)&v171[1] + 1) = v109;
  *(void *)&v171[2] = v116;
  *((void *)&v171[2] + 1) = v110;
  *(void *)&v171[3] = v111;
  *((void *)&v171[3] + 1) = v112;
  *(void *)&_OWORD v171[4] = v114;
  *((void *)&v171[4] + 1) = v113;
  uint64_t v118 = v137[36];
  LOBYTE(v171[5]) = v117;
  if (!v118)
  {
    uint64_t v118 = *(void *)(v138 + 288);
    swift_bridgeObjectRetain();
  }
  sub_1BFF66964((uint64_t)v181, (uint64_t)__dst, (unint64_t *)&qword_1EB876CA0);
  if (*((unsigned char *)v137 + 504) == 1)
  {
    char v119 = (void *)v138;
    char v139 = *(unsigned char *)(v138 + 504);
  }
  else
  {
    char v139 = 0;
    char v119 = v137;
  }
  uint64_t v141 = v119[62];
  uint64_t v143 = v118;
  uint64_t v120 = v137[64];
  if (!v120) {
    uint64_t v120 = swift_bridgeObjectRetain();
  }
  uint64_t v176 = v120;
  uint64_t v121 = v137[65];
  uint64_t v122 = v137[66];
  uint64_t v123 = v121;
  uint64_t v124 = v122;
  if (v121 == 9)
  {
    uint64_t v123 = *(void *)(v138 + 520);
    uint64_t v124 = *(void *)(v138 + 528);
    sub_1BFEF8720(v123, v124);
  }
  v170[0] = v123;
  v170[1] = v124;
  uint64_t v125 = v137[67];
  uint64_t v126 = v137[68];
  uint64_t v127 = v125;
  uint64_t v128 = v126;
  if (v125 == 9)
  {
    uint64_t v127 = *(void *)(v138 + 536);
    uint64_t v128 = *(void *)(v138 + 544);
    sub_1BFEF8720(v127, v128);
  }
  v175[0] = v127;
  v175[1] = v128;
  int v129 = *((unsigned __int8 *)v137 + 552);
  if (v129 == 2) {
    LOBYTE(v129) = *(unsigned char *)(v138 + 552);
  }
  uint64_t v130 = v137[70];
  if (!v130) {
    uint64_t v130 = swift_bridgeObjectRetain();
  }
  uint64_t v174 = v130;
  uint64_t v131 = swift_allocObject();
  FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(v135, v134, v136, v133, (uint64_t)v96, (uint64_t *)&v177, (uint64_t)__src, v149, v171, v143, (uint64_t)__dst, v141, v139, &v176, v170, v175, v129, &v174);
  sub_1BFEF683C(v169);
  sub_1BFF65020(v178, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
  swift_bridgeObjectRetain();
  sub_1BFEF8708(v165, v163, v161, v159, v157, v155, v153, v151, v147, v145, v144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF8720(v121, v122);
  sub_1BFEF8720(v125, v126);
  swift_bridgeObjectRetain();
  return v131;
}

uint64_t sub_1BFEF8708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a11 != 254) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BFEF8720(uint64_t result, uint64_t a2)
{
  if (result != 9) {
    return sub_1BFDC11A4(a2);
  }
  return result;
}

uint64_t sub_1BFEF8738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a11 != 254) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1BFEF8750(uint64_t result, uint64_t a2)
{
  if (result != 9) {
    return sub_1BFDC11BC(a2);
  }
  return result;
}

uint64_t sub_1BFEF8768(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  if (a14 >> 1 != 0xFFFFFFFF) {
    return sub_1BFEF87A0(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  }
  return result;
}

uint64_t sub_1BFEF87A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  switch(a14 >> 62)
  {
    case 1uLL:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1BFDB3920(a7);
      break;
    case 2uLL:
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3uLL:
      uint64_t result = sub_1BFF7B774(a1);
      break;
    default:
      swift_retain();
      uint64_t result = swift_retain();
      break;
  }
  return result;
}

uint64_t sub_1BFEF88A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  if (a14 >> 1 != 0xFFFFFFFF) {
    return sub_1BFEF89EC(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  }
  return result;
}

uint64_t destroy for FormatTextNodeStyle.Selector(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if ((~*(void *)(a1 + 16) & 0xF000000000000007) != 0) {
    swift_release();
  }
  unint64_t v2 = *(void *)(a1 + 128);
  if (v2 >> 1 != 0xFFFFFFFF) {
    sub_1BFEF89EC(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), v2);
  }
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 240) != 254) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a1 + 480) != 9 && (~*(void *)(a1 + 488) & 0xF000000000000007) != 0) {
    swift_release();
  }
  if (*(unsigned char *)(a1 + 496) != 9 && (~*(void *)(a1 + 504) & 0xF000000000000007) != 0) {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFEF89EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14)
{
  switch(a14 >> 62)
  {
    case 1uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1BFDB3960(a7);
      break;
    case 2uLL:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3uLL:
      uint64_t result = sub_1BFF7C0EC(a1);
      break;
    default:
      swift_release();
      uint64_t result = swift_release();
      break;
  }
  return result;
}

void *sub_1BFEF8AD8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&unk_1EB890410, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      void v10[3] = 2 * ((uint64_t)(v11 - 32) / 528);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[66 * v8 + 4]) {
          memmove(v12, a4 + 4, 528 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BFEF93B8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t FormatTextNodeStyle.init(identifier:class:selectors:font:fill:borders:shadow:transforms:paragraphStyle:tracking:alpha:strikethrough:underline:ignoresSmartInvertColors:baselineOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8, long long *a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t *a14, uint64_t *a15, uint64_t *a16, char a17, uint64_t *a18)
{
  uint64_t v34 = *a6;
  sub_1BFF66964(a7, (uint64_t)v40, (unint64_t *)&qword_1EB873B18);
  long long v32 = a9[1];
  long long v33 = *a9;
  long long v30 = a9[3];
  long long v31 = a9[2];
  uint64_t v21 = *((void *)a9 + 9);
  uint64_t v29 = *((void *)a9 + 8);
  char v22 = *((unsigned char *)a9 + 80);
  sub_1BFF66964(a11, (uint64_t)v41, (unint64_t *)&qword_1EB876CA0);
  uint64_t v23 = *a14;
  uint64_t v24 = *a15;
  uint64_t v25 = a15[1];
  uint64_t v26 = a16[1];
  uint64_t v35 = *a16;
  uint64_t v27 = *a18;
  swift_beginAccess();
  *(void *)(v18 + 16) = a1;
  *(void *)(v18 + 24) = a2;
  *(void *)(v18 + 32) = a3;
  *(void *)(v18 + 40) = a4;
  swift_beginAccess();
  *(void *)(v18 + 48) = a5;
  *(void *)(v18 + 56) = v34;
  sub_1BFF66964((uint64_t)v40, v18 + 64, (unint64_t *)&qword_1EB873B18);
  *(void *)(v18 + 192) = a8;
  *(_OWORD *)(v18 + 200) = v33;
  *(_OWORD *)(v18 + 216) = v32;
  *(_OWORD *)(v18 + 232) = v31;
  *(_OWORD *)(v18 + 248) = v30;
  *(void *)(v18 + 264) = v29;
  *(void *)(v18 + 272) = v21;
  *(unsigned char *)(v18 + 280) = v22;
  *(void *)(v18 + 288) = a10;
  sub_1BFF66964((uint64_t)v41, v18 + 296, (unint64_t *)&qword_1EB876CA0);
  *(void *)(v18 + 496) = a12;
  *(unsigned char *)(v18 + 504) = a13 & 1;
  *(void *)(v18 + 512) = v23;
  *(void *)(v18 + 520) = v24;
  *(void *)(v18 + 528) = v25;
  *(void *)(v18 + 536) = v35;
  *(void *)(v18 + 544) = v26;
  *(unsigned char *)(v18 + 552) = a17;
  *(void *)(v18 + 560) = v27;
  return v18;
}

uint64_t sub_1BFEF8E18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = *(void *)(a1 + 16);
  sub_1BFF66964(a1 + 24, (uint64_t)v97, (unint64_t *)&qword_1EB873B18);
  uint64_t v58 = *(void *)(a1 + 168);
  uint64_t v60 = *(void *)(a1 + 160);
  uint64_t v54 = *(void *)(a1 + 184);
  uint64_t v56 = *(void *)(a1 + 176);
  uint64_t v50 = *(void *)(a1 + 200);
  uint64_t v52 = *(void *)(a1 + 192);
  uint64_t v46 = *(void *)(a1 + 216);
  uint64_t v48 = *(void *)(a1 + 208);
  uint64_t v64 = *(void *)(a1 + 232);
  unsigned __int8 v62 = *(unsigned char *)(a1 + 240);
  uint64_t v44 = *(void *)(a1 + 224);
  sub_1BFF66964(a1 + 256, (uint64_t)v98, (unint64_t *)&qword_1EB876CA0);
  char v72 = *(unsigned char *)(a1 + 464);
  uint64_t v40 = *(void *)(a1 + 480);
  uint64_t v39 = *(void *)(a1 + 496);
  uint64_t v37 = *(void *)(a1 + 488);
  uint64_t v38 = *(void *)(a1 + 504);
  char v70 = *(unsigned char *)(a1 + 512);
  uint64_t v36 = *(void *)(a1 + 520);
  uint64_t v71 = *v2;
  uint64_t v5 = v2[2];
  uint64_t v73 = *(void *)(a1 + 456);
  uint64_t v74 = v2[1];
  sub_1BFF66964((uint64_t)(v2 + 3), (uint64_t)v99, (unint64_t *)&qword_1EB873B18);
  uint64_t v6 = v2[19];
  uint64_t v7 = v2[20];
  uint64_t v9 = v2[21];
  uint64_t v8 = v2[22];
  uint64_t v91 = v2[24];
  uint64_t v92 = v2[23];
  uint64_t v89 = v2[26];
  uint64_t v90 = v2[25];
  uint64_t v88 = v2[27];
  uint64_t v83 = v2[29];
  uint64_t v84 = v2[28];
  int v82 = *((unsigned __int8 *)v2 + 240);
  uint64_t v10 = v2[31];
  sub_1BFF66964((uint64_t)(v2 + 32), (uint64_t)v100, (unint64_t *)&qword_1EB876CA0);
  uint64_t v69 = v2[57];
  uint64_t v81 = v2[59];
  uint64_t v11 = v2[62];
  uint64_t v85 = v2[61];
  uint64_t v86 = v2[60];
  uint64_t v87 = v2[63];
  int v67 = *((unsigned __int8 *)v2 + 512);
  int v68 = *((unsigned __int8 *)v2 + 464);
  uint64_t v12 = v5;
  uint64_t v42 = v2[65];
  uint64_t v75 = v5;
  if ((~v5 & 0xF000000000000007) == 0)
  {
    sub_1BFEF683C(v78);
    uint64_t v12 = v78;
  }
  uint64_t v66 = v12;
  int64_t v13 = v99;
  sub_1BFF66964((uint64_t)v99, (uint64_t)v96, (unint64_t *)&qword_1EB873B18);
  if (sub_1C044587C((uint64_t)v96) == 1)
  {
    int64_t v13 = v97;
    sub_1BFF65020(v97, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
  }
  sub_1BFF66964((uint64_t)v13, (uint64_t)v95, (unint64_t *)&qword_1EB873B18);
  uint64_t v14 = v6;
  uint64_t v15 = v7;
  if (!v6) {
    uint64_t v14 = swift_bridgeObjectRetain();
  }
  uint64_t v65 = v14;
  uint64_t v76 = v8;
  uint64_t v77 = v9;
  uint64_t v79 = v7;
  uint64_t v16 = v9;
  uint64_t v18 = v91;
  uint64_t v17 = v92;
  uint64_t v20 = v89;
  uint64_t v19 = v90;
  uint64_t v21 = v88;
  uint64_t v23 = v83;
  uint64_t v22 = v84;
  unsigned __int8 v24 = v82;
  uint64_t v80 = v11;
  if (v82 == 254)
  {
    uint64_t v15 = v60;
    uint64_t v17 = v54;
    uint64_t v18 = v52;
    uint64_t v20 = v48;
    sub_1BFEF8708(v60, v58, v56, v54, v52, v50, v48, v46, v44, v64, v62);
    uint64_t v16 = v58;
    uint64_t v8 = v56;
    uint64_t v19 = v50;
    uint64_t v21 = v46;
    uint64_t v22 = v44;
    uint64_t v23 = v64;
    unsigned __int8 v24 = v62;
  }
  unsigned __int8 v45 = v24;
  uint64_t v47 = v23;
  uint64_t v49 = v22;
  uint64_t v51 = v21;
  uint64_t v53 = v20;
  uint64_t v55 = v19;
  uint64_t v57 = v18;
  uint64_t v59 = v17;
  uint64_t v61 = v8;
  uint64_t v63 = v16;
  uint64_t v25 = v10;
  if (!v10) {
    uint64_t v25 = swift_bridgeObjectRetain();
  }
  uint64_t v43 = v25;
  sub_1BFF66964((uint64_t)v100, (uint64_t)v94, (unint64_t *)&qword_1EB876CA0);
  if (sub_1C01CDAD8((uint64_t)v94) == 1) {
    uint64_t v26 = v98;
  }
  else {
    uint64_t v26 = v100;
  }
  sub_1BFF66964((uint64_t)v26, (uint64_t)v93, (unint64_t *)&qword_1EB876CA0);
  uint64_t v27 = v81;
  if (!v81) {
    uint64_t v27 = swift_bridgeObjectRetain();
  }
  uint64_t v41 = v27;
  uint64_t v28 = v85;
  uint64_t v29 = v86;
  if (v86 == 9)
  {
    uint64_t v28 = v37;
    sub_1BFEF8720(v40, v37);
    uint64_t v29 = v40;
  }
  uint64_t v30 = v11;
  uint64_t v31 = v87;
  if (v11 == 9)
  {
    uint64_t v31 = v38;
    uint64_t v30 = v39;
    sub_1BFEF8720(v39, v38);
  }
  uint64_t v32 = v42;
  if (!v42)
  {
    uint64_t v32 = v36;
    swift_bridgeObjectRetain();
  }
  if (v67 == 2) {
    char v33 = v70;
  }
  else {
    char v33 = v67;
  }
  if (v68) {
    uint64_t v34 = v73;
  }
  else {
    uint64_t v34 = v69;
  }
  *(void *)a2 = v71;
  *(void *)(a2 + 8) = v74;
  *(void *)(a2 + 16) = v66;
  sub_1BFF66964((uint64_t)v95, a2 + 24, (unint64_t *)&qword_1EB873B18);
  *(void *)(a2 + 152) = v65;
  *(void *)(a2 + 160) = v15;
  *(void *)(a2 + 168) = v63;
  *(void *)(a2 + 176) = v61;
  *(void *)(a2 + 184) = v59;
  *(void *)(a2 + 192) = v57;
  *(void *)(a2 + 200) = v55;
  *(void *)(a2 + 208) = v53;
  *(void *)(a2 + 216) = v51;
  *(void *)(a2 + 224) = v49;
  *(void *)(a2 + 232) = v47;
  *(unsigned char *)(a2 + 240) = v45;
  *(void *)(a2 + 248) = v43;
  sub_1BFF66964((uint64_t)v93, a2 + 256, (unint64_t *)&qword_1EB876CA0);
  *(void *)(a2 + 456) = v34;
  *(unsigned char *)(a2 + 464) = v68 & v72;
  *(void *)(a2 + 472) = v41;
  *(void *)(a2 + 480) = v29;
  *(void *)(a2 + 488) = v28;
  *(void *)(a2 + 496) = v30;
  *(void *)(a2 + 504) = v31;
  *(unsigned char *)(a2 + 512) = v33;
  *(void *)(a2 + 520) = v32;
  swift_bridgeObjectRetain();
  sub_1BFEF683C(v75);
  sub_1BFF65020(v99, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BFEF8768);
  swift_bridgeObjectRetain();
  sub_1BFEF8708(v79, v77, v76, v92, v91, v90, v89, v88, v84, v83, v82);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BFEF8720(v86, v85);
  sub_1BFEF8720(v80, v87);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BFEF93B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 528 * a1 + 32;
    unint64_t v6 = a3 + 528 * v4;
    if (v5 >= v6 || v5 + 528 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

void sub_1BFEF94B0()
{
  if (!qword_1EB8831F8)
  {
    sub_1C008192C();
    unint64_t v0 = sub_1C151E41C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB8831F8);
    }
  }
}

uint64_t sub_1BFEF9514(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BFEF9524@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for FormatOption();
  uint64_t v2 = swift_projectBox();
  return sub_1C1244FD4(v2, a1, (uint64_t (*)(void))type metadata accessor for FormatOption);
}

uint64_t sub_1BFEF95A8(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFEF95B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1BFEF9B68(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1C152052C();
  __break(1u);
  return result;
}

uint64_t sub_1BFEF970C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FormatOption();
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v34 - v8;
  sub_1BFEF9A78();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C1529AE0;
  uint64_t v11 = v1[7];
  uint64_t v12 = v1[8];
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v12;
  uint64_t v13 = v2[4];
  if (v13)
  {
    if (v13 == 1)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = v2[6];
      if (!v14)
      {
LABEL_16:
        sub_1BFEF9524((uint64_t)v6);
        uint64_t v34 = *((void *)v6 + 2);
        swift_retain();
        char v27 = sub_1C0EC07A8(a1);
        swift_release();
        if (v27)
        {
          uint64_t v34 = 36;
          unint64_t v35 = 0xE100000000000000;
          swift_bridgeObjectRetain();
          sub_1C151E80C();
          swift_bridgeObjectRelease();
          sub_1C151E80C();
          uint64_t v28 = v34;
          unint64_t v29 = v35;
          sub_1C01A0054((uint64_t)v6);
          unint64_t v31 = *(void *)(v10 + 16);
          unint64_t v30 = *(void *)(v10 + 24);
          if (v31 >= v30 >> 1) {
            uint64_t v10 = (uint64_t)sub_1BFEF9B68((void *)(v30 > 1), v31 + 1, 1, (void *)v10);
          }
          *(void *)(v10 + 16) = v31 + 1;
          uint64_t v32 = v10 + 16 * v31;
          *(void *)(v32 + 32) = v28;
          *(void *)(v32 + 40) = v29;
        }
        else
        {
          sub_1C01A0054((uint64_t)v6);
        }
        return v10;
      }
    }
    else
    {
      uint64_t v22 = v2[3];
      swift_bridgeObjectRetain();
      sub_1BFEF9C98(v22, v13);
      uint64_t v10 = (uint64_t)sub_1BFEF9B68((void *)1, 2, 1, (void *)v10);
      *(void *)(v10 + 16) = 2;
      *(void *)(v10 + 48) = v22;
      *(void *)(v10 + 56) = v13;
      uint64_t v14 = v2[6];
      if (!v14) {
        goto LABEL_16;
      }
    }
  }
  else
  {
    sub_1BFEF9524((uint64_t)v9);
    uint64_t v34 = *((void *)v9 + 2);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BFEF9CAC(a1);
    uint64_t v16 = v15;
    swift_release();
    if (v16)
    {
      uint64_t v34 = 36;
      unint64_t v35 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      sub_1C151E80C();
      sub_1C151E80C();
      swift_bridgeObjectRelease();
      uint64_t v17 = v34;
      unint64_t v18 = v35;
      sub_1C01A0054((uint64_t)v9);
      unint64_t v20 = *(void *)(v10 + 16);
      unint64_t v19 = *(void *)(v10 + 24);
      if (v20 >= v19 >> 1) {
        uint64_t v10 = (uint64_t)sub_1BFEF9B68((void *)(v19 > 1), v20 + 1, 1, (void *)v10);
      }
      *(void *)(v10 + 16) = v20 + 1;
      uint64_t v21 = v10 + 16 * v20;
      *(void *)(v21 + 32) = v17;
      *(void *)(v21 + 40) = v18;
      uint64_t v14 = v2[6];
      if (!v14) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1C01A0054((uint64_t)v9);
      uint64_t v14 = v2[6];
      if (!v14) {
        goto LABEL_16;
      }
    }
  }
  if (v14 != 1)
  {
    uint64_t v23 = v2[5];
    unint64_t v24 = *(void *)(v10 + 16);
    unint64_t v25 = *(void *)(v10 + 24);
    swift_bridgeObjectRetain();
    if (v24 >= v25 >> 1) {
      uint64_t v10 = (uint64_t)sub_1BFEF9B68((void *)(v25 > 1), v24 + 1, 1, (void *)v10);
    }
    *(void *)(v10 + 16) = v24 + 1;
    uint64_t v26 = v10 + 16 * v24;
    *(void *)(v26 + 32) = v23;
    *(void *)(v26 + 40) = v14;
  }
  return v10;
}

void sub_1BFEF9A78()
{
  if (!qword_1EB87A890)
  {
    unint64_t v0 = sub_1C152089C();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EB87A890);
    }
  }
}

void sub_1BFEF9AD0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1BFEF9B1C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void *sub_1BFEF9B68(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1BFE9DFF4(0, (unint64_t *)&qword_1EB87A890, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      void v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BFEFBA94(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BFEF9C98(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BFEF9CAC(uint64_t a1)
{
  uint64_t v178 = a1;
  uint64_t v184 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *v1;
  uint64_t v3 = 0;
  switch((unint64_t)*v1 >> 60)
  {
    case 1uLL:
      char v5 = (void *)(v2 & 0xFFFFFFFFFFFFFFFLL);
      uint64_t v6 = v5[3];
      uint64_t v7 = v5[4];
      uint64_t v8 = v5[5];
      uint64_t v166 = v5[2];
      uint64_t v167 = v7;
      uint64_t v9 = v5[6];
      uint64_t v171 = *(void *)(v9 + 16);
      if (!v171)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v163 = v6;
LABEL_114:
        uint64_t v181 = v166;
        uint64_t v182 = v163;
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRetain();
        sub_1C151E80C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v181;
      }
      uint64_t v165 = v6;
      uint64_t v170 = v9 + 32;
      v164[1] = v9;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v10 = 0;
      uint64_t v168 = v8;
      uint64_t v169 = v8;
LABEL_7:
      uint64_t v12 = (uint64_t *)(v170 + 32 * v10);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      uint64_t v15 = v12[3];
      uint64_t v172 = v12[2];
      uint64_t v16 = qword_1EB87F148;
      swift_bridgeObjectRetain();
      uint64_t v175 = v15;
      swift_bridgeObjectRetain();
      if (v16 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_1EB93C770;
      uint64_t v18 = *(void *)(qword_1EB93C770 + 24);
      swift_bridgeObjectRetain();
      sub_1C1517E7C();
      unint64_t v19 = (uint64_t *)(v17 + 16);
      swift_beginAccess();
      uint64_t v20 = *(void *)(v17 + 16);
      uint64_t v21 = *(void *)(v20 + 16);
      uint64_t v176 = v10;
      if (!v21) {
        goto LABEL_13;
      }
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_1BFEF2D8C(v14, v13);
      if (v23)
      {
        uint64_t v24 = *(void *)(*(void *)(v20 + 56) + 24 * v22 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_25:
        swift_bridgeObjectRelease();
        sub_1C1517E8C();
        swift_bridgeObjectRelease();
        uint64_t v46 = *(void *)(v24 + 16);
        if (!v46)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v11 = v176;
          goto LABEL_6;
        }
        uint64_t v174 = v13;
        uint64_t v177 = v24;
        uint64_t v47 = (uint64_t *)(v24 + 64);
        while (1)
        {
          uint64_t v48 = *(v47 - 1);
          uint64_t v49 = *v47;
          char v50 = *(unsigned char *)(v48 + 32);
          unsigned int v51 = v50 & 0x3F;
          unint64_t v52 = (unint64_t)((1 << v50) + 63) >> 6;
          size_t v53 = 8 * v52;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v51 <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1F4188790](isStackAllocationSafe);
            bzero((char *)v164 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v53);
            uint64_t v55 = sub_1BFEFB09C((uint64_t)v164 - ((v53 + 15) & 0x3FFFFFFFFFFFFFF0), v52, v48, v178);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v56 = (void *)swift_slowAlloc();
            bzero(v56, v53);
            uint64_t v55 = sub_1BFEFB09C((uint64_t)v56, v52, v48, v178);
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v56, -1, -1);
          }
          char v57 = sub_1BFEFAE14(v55, v48);
          swift_release();
          if (v57)
          {
            char v58 = sub_1BFEFB810(v178, v49);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v11 = v176;
              uint64_t v167 = v172;
              uint64_t v168 = v175;
LABEL_6:
              swift_bridgeObjectRelease();
              uint64_t v10 = v11 + 1;
              if (v10 == v171)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                uint64_t v163 = v165;
                swift_bridgeObjectRetain();
                goto LABEL_114;
              }
              goto LABEL_7;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v47 += 5;
          if (!--v46) {
            goto LABEL_5;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_13:
      uint64_t v173 = v18;
      swift_endAccess();
      long long v179 = (void *)v14;
      uint64_t v180 = v13;
      swift_bridgeObjectRetain();
      sub_1BFF04A00((uint64_t *)&v179, &v181);
      uint64_t v25 = v182;
      uint64_t v174 = v181;
      uint64_t v26 = v183;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v177 = v26;
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      long long v179 = (void *)*v19;
      uint64_t v28 = (uint64_t)v179;
      *unint64_t v19 = 0x8000000000000000;
      uint64_t v29 = v14;
      unint64_t v31 = sub_1BFEF2D8C(v14, v13);
      uint64_t v32 = *(void *)(v28 + 16);
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33))
      {
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
      }
      char v35 = v30;
      if (*(void *)(v28 + 24) < v34)
      {
        sub_1BFFDF158(v34, isUniquelyReferenced_nonNull_native);
        unint64_t v36 = sub_1BFEF2D8C(v29, v13);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_121;
        }
        unint64_t v31 = v36;
        uint64_t v38 = v179;
        if ((v35 & 1) == 0) {
          goto LABEL_22;
        }
LABEL_20:
        uint64_t v39 = (uint64_t *)(v38[7] + 24 * v31);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *uint64_t v39 = v174;
        v39[1] = v25;
        uint64_t v40 = v177;
        v39[2] = v177;
        uint64_t v24 = v40;
LABEL_24:
        *unint64_t v19 = (uint64_t)v38;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_25;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v38 = v179;
        if (v30) {
          goto LABEL_20;
        }
      }
      else
      {
        sub_1C106B39C();
        uint64_t v38 = v179;
        if (v35) {
          goto LABEL_20;
        }
      }
LABEL_22:
      v38[(v31 >> 6) + 8] |= 1 << v31;
      uint64_t v41 = (uint64_t *)(v38[6] + 16 * v31);
      *uint64_t v41 = v29;
      v41[1] = v13;
      uint64_t v42 = (uint64_t *)(v38[7] + 24 * v31);
      *uint64_t v42 = v174;
      v42[1] = v25;
      uint64_t v24 = v177;
      v42[2] = v177;
      uint64_t v43 = v38[2];
      BOOL v44 = __OFADD__(v43, 1);
      uint64_t v45 = v43 + 1;
      if (v44) {
        goto LABEL_118;
      }
      void v38[2] = v45;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    case 2uLL:
    case 3uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xBuLL:
    case 0xCuLL:
    case 0xDuLL:
      return v3;
    case 4uLL:
      uint64_t v59 = v2 & 0xFFFFFFFFFFFFFFFLL;
      uint64_t v61 = *(void *)(v59 + 16);
      uint64_t v60 = *(void *)(v59 + 24);
      uint64_t v171 = *(void *)(v60 + 16);
      if (!v171) {
        goto LABEL_112;
      }
      uint64_t v169 = v61;
      uint64_t v170 = v60 + 32;
      uint64_t v168 = v60;
      swift_bridgeObjectRetain();
      uint64_t v62 = 0;
      while (1)
      {
        uint64_t v63 = (uint64_t *)(v170 + 24 * v62);
        uint64_t v64 = *v63;
        uint64_t v65 = v63[1];
        uint64_t v66 = v63[2];
        uint64_t v67 = qword_1EB87F148;
        swift_bridgeObjectRetain();
        if (v67 != -1) {
          swift_once();
        }
        uint64_t v68 = qword_1EB93C770;
        uint64_t v69 = *(void *)(qword_1EB93C770 + 24);
        swift_bridgeObjectRetain();
        uint64_t v176 = v69;
        sub_1C1517E7C();
        char v70 = (uint64_t *)(v68 + 16);
        swift_beginAccess();
        uint64_t v71 = *(void *)(v68 + 16);
        uint64_t v72 = *(void *)(v71 + 16);
        uint64_t v73 = v65;
        uint64_t v175 = v62;
        uint64_t v172 = v66;
        if (!v72) {
          goto LABEL_47;
        }
        swift_bridgeObjectRetain();
        unint64_t v74 = sub_1BFEF2D8C(v64, v65);
        if ((v75 & 1) == 0) {
          break;
        }
        uint64_t v76 = *(void *)(*(void *)(v71 + 56) + 24 * v74 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_59:
        swift_bridgeObjectRelease();
        sub_1C1517E8C();
        swift_bridgeObjectRelease();
        uint64_t v98 = *(void *)(v76 + 16);
        if (!v98)
        {
LABEL_39:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_40;
        }
        uint64_t v176 = v73;
        uint64_t v177 = v76;
        uint64_t v99 = (uint64_t *)(v76 + 64);
        while (1)
        {
          uint64_t v100 = *(v99 - 1);
          uint64_t v101 = *v99;
          char v102 = *(unsigned char *)(v100 + 32);
          unsigned int v103 = v102 & 0x3F;
          unint64_t v104 = (unint64_t)((1 << v102) + 63) >> 6;
          size_t v105 = 8 * v104;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v106 = swift_bridgeObjectRetain();
          if (v103 <= 0xD || (uint64_t v106 = swift_stdlib_isStackAllocationSafe(), (v106 & 1) != 0))
          {
            MEMORY[0x1F4188790](v106);
            bzero((char *)v164 - ((v105 + 15) & 0x3FFFFFFFFFFFFFF0), v105);
            uint64_t v107 = sub_1BFEFB09C((uint64_t)v164 - ((v105 + 15) & 0x3FFFFFFFFFFFFFF0), v104, v100, v178);
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v108 = (void *)swift_slowAlloc();
            bzero(v108, v105);
            uint64_t v107 = sub_1BFEFB09C((uint64_t)v108, v104, v100, v178);
            swift_bridgeObjectRelease();
            MEMORY[0x1C18C9B00](v108, -1, -1);
          }
          char v109 = sub_1BFEFAE14(v107, v100);
          swift_release();
          if (v109) {
            break;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_62:
          v99 += 5;
          if (!--v98) {
            goto LABEL_39;
          }
        }
        char v110 = sub_1BFEFB810(v178, v101);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v110 & 1) == 0) {
          goto LABEL_62;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v169 = v172;
LABEL_40:
        uint64_t v62 = v175 + 1;
        if (v175 + 1 == v171)
        {
          swift_bridgeObjectRelease();
          uint64_t v61 = v169;
LABEL_112:
          uint64_t v181 = v61;
          sub_1BFF01BC4();
          return sub_1C151FF2C();
        }
      }
      swift_bridgeObjectRelease();
LABEL_47:
      swift_endAccess();
      long long v179 = (void *)v64;
      uint64_t v180 = v65;
      swift_bridgeObjectRetain();
      sub_1BFF04A00((uint64_t *)&v179, &v181);
      uint64_t v77 = v182;
      uint64_t v173 = v181;
      uint64_t v78 = v183;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v174 = v77;
      swift_bridgeObjectRetain();
      uint64_t v177 = v78;
      swift_bridgeObjectRetain();
      char v79 = swift_isUniquelyReferenced_nonNull_native();
      long long v179 = (void *)*v70;
      uint64_t v80 = (uint64_t)v179;
      *char v70 = 0x8000000000000000;
      uint64_t v81 = v73;
      unint64_t v83 = sub_1BFEF2D8C(v64, v73);
      uint64_t v84 = *(void *)(v80 + 16);
      BOOL v85 = (v82 & 1) == 0;
      uint64_t v86 = v84 + v85;
      if (__OFADD__(v84, v85)) {
        goto LABEL_116;
      }
      char v87 = v82;
      if (*(void *)(v80 + 24) < v86)
      {
        sub_1BFFDF158(v86, v79);
        unint64_t v88 = sub_1BFEF2D8C(v64, v81);
        if ((v87 & 1) != (v89 & 1)) {
          goto LABEL_121;
        }
        unint64_t v83 = v88;
        uint64_t v90 = v179;
        if ((v87 & 1) == 0) {
          goto LABEL_56;
        }
LABEL_54:
        uint64_t v91 = (uint64_t *)(v90[7] + 24 * v83);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v92 = v174;
        *uint64_t v91 = v173;
        v91[1] = v92;
        uint64_t v76 = v177;
        v91[2] = v177;
        uint64_t v73 = v81;
LABEL_58:
        *char v70 = (uint64_t)v90;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_59;
      }
      if (v79)
      {
        uint64_t v90 = v179;
        if (v82) {
          goto LABEL_54;
        }
      }
      else
      {
        sub_1C106B39C();
        uint64_t v90 = v179;
        if (v87) {
          goto LABEL_54;
        }
      }
LABEL_56:
      v90[(v83 >> 6) + 8] |= 1 << v83;
      uint64_t v93 = (uint64_t *)(v90[6] + 16 * v83);
      *uint64_t v93 = v64;
      v93[1] = v81;
      uint64_t v94 = (uint64_t *)(v90[7] + 24 * v83);
      uint64_t v95 = v174;
      *uint64_t v94 = v173;
      v94[1] = v95;
      uint64_t v76 = v177;
      v94[2] = v177;
      uint64_t v96 = v90[2];
      BOOL v44 = __OFADD__(v96, 1);
      uint64_t v97 = v96 + 1;
      if (v44) {
        goto LABEL_119;
      }
      uint64_t v73 = v81;
      v90[2] = v97;
      swift_bridgeObjectRetain();
      goto LABEL_58;
    case 8uLL:
      uint64_t v181 = *(void *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
      swift_retain_n();
      swift_retain();
      uint64_t v3 = sub_1BFEF9CAC(v178);
      swift_release_n();
      swift_release();
      return v3;
    default:
      int v111 = *(unsigned __int8 *)(v2 + 16);
      uint64_t v112 = *(void *)(v2 + 24);
      uint64_t v172 = *(void *)(v112 + 16);
      if (!v172) {
        goto LABEL_108;
      }
      LODWORD(v170) = v111;
      uint64_t v171 = v112 + 32;
      uint64_t v169 = v112;
      swift_bridgeObjectRetain();
      uint64_t v113 = 0;
      break;
  }
  while (2)
  {
    uint64_t v114 = v171 + 24 * v113;
    uint64_t v116 = *(void *)v114;
    uint64_t v115 = *(void *)(v114 + 8);
    LODWORD(v173) = *(unsigned __int8 *)(v114 + 16);
    uint64_t v117 = qword_1EB87F148;
    swift_bridgeObjectRetain();
    if (v117 != -1) {
      swift_once();
    }
    uint64_t v118 = qword_1EB93C770;
    uint64_t v119 = *(void *)(qword_1EB93C770 + 24);
    swift_bridgeObjectRetain();
    sub_1C1517E7C();
    uint64_t v120 = (uint64_t *)(v118 + 16);
    swift_beginAccess();
    uint64_t v121 = *(void *)(v118 + 16);
    uint64_t v122 = *(void *)(v121 + 16);
    uint64_t v176 = v113;
    if (!v122)
    {
LABEL_81:
      uint64_t v174 = v119;
      swift_endAccess();
      long long v179 = (void *)v116;
      uint64_t v180 = v115;
      swift_bridgeObjectRetain();
      sub_1BFF04A00((uint64_t *)&v179, &v181);
      uint64_t v126 = v115;
      uint64_t v128 = v181;
      uint64_t v127 = v182;
      uint64_t v129 = v183;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      uint64_t v175 = v127;
      swift_bridgeObjectRetain();
      uint64_t v177 = v129;
      swift_bridgeObjectRetain();
      char v130 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v131 = v116;
      char v132 = v130;
      long long v179 = (void *)*v120;
      uint64_t v133 = (uint64_t)v179;
      *uint64_t v120 = 0x8000000000000000;
      uint64_t v134 = v131;
      uint64_t v115 = v126;
      unint64_t v136 = sub_1BFEF2D8C(v131, v126);
      uint64_t v137 = *(void *)(v133 + 16);
      BOOL v138 = (v135 & 1) == 0;
      uint64_t v139 = v137 + v138;
      if (__OFADD__(v137, v138)) {
        goto LABEL_117;
      }
      char v140 = v135;
      if (*(void *)(v133 + 24) < v139)
      {
        sub_1BFFDF158(v139, v132);
        unint64_t v141 = sub_1BFEF2D8C(v134, v115);
        if ((v140 & 1) != (v142 & 1))
        {
LABEL_121:
          uint64_t result = sub_1C1520CFC();
          __break(1u);
          return result;
        }
        unint64_t v136 = v141;
        uint64_t v143 = v179;
        if ((v140 & 1) == 0) {
          goto LABEL_90;
        }
LABEL_88:
        unsigned __int8 v144 = (uint64_t *)(v143[7] + 24 * v136);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *unsigned __int8 v144 = v128;
        uint64_t v145 = v177;
        v144[1] = v175;
        v144[2] = v145;
        uint64_t v125 = v145;
LABEL_92:
        *uint64_t v120 = (uint64_t)v143;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_93;
      }
      if (v132)
      {
        uint64_t v143 = v179;
        if (v135) {
          goto LABEL_88;
        }
      }
      else
      {
        sub_1C106B39C();
        uint64_t v143 = v179;
        if (v140) {
          goto LABEL_88;
        }
      }
LABEL_90:
      v143[(v136 >> 6) + 8] |= 1 << v136;
      uint64_t v146 = (uint64_t *)(v143[6] + 16 * v136);
      *uint64_t v146 = v134;
      v146[1] = v115;
      uint64_t v147 = (uint64_t *)(v143[7] + 24 * v136);
      *uint64_t v147 = v128;
      uint64_t v125 = v177;
      v147[1] = v175;
      v147[2] = v125;
      uint64_t v148 = v143[2];
      BOOL v44 = __OFADD__(v148, 1);
      uint64_t v149 = v148 + 1;
      if (v44) {
        goto LABEL_120;
      }
      v143[2] = v149;
      swift_bridgeObjectRetain();
      goto LABEL_92;
    }
    swift_bridgeObjectRetain();
    unint64_t v123 = sub_1BFEF2D8C(v116, v115);
    if ((v124 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_81;
    }
    uint64_t v125 = *(void *)(*(void *)(v121 + 56) + 24 * v123 + 16);
    swift_endAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_93:
    swift_bridgeObjectRelease();
    sub_1C1517E8C();
    swift_bridgeObjectRelease();
    uint64_t v150 = *(void *)(v125 + 16);
    if (!v150)
    {
LABEL_73:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_74;
    }
    uint64_t v175 = v115;
    uint64_t v177 = v125;
    uint64_t v151 = (uint64_t *)(v125 + 64);
    while (1)
    {
      uint64_t v152 = *(v151 - 1);
      uint64_t v153 = *v151;
      char v154 = *(unsigned char *)(v152 + 32);
      unsigned int v155 = v154 & 0x3F;
      unint64_t v156 = (unint64_t)((1 << v154) + 63) >> 6;
      size_t v157 = 8 * v156;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v158 = swift_bridgeObjectRetain();
      if (v155 <= 0xD || (uint64_t v158 = swift_stdlib_isStackAllocationSafe(), (v158 & 1) != 0))
      {
        MEMORY[0x1F4188790](v158);
        bzero((char *)v164 - ((v157 + 15) & 0x3FFFFFFFFFFFFFF0), v157);
        uint64_t v159 = sub_1BFEFB09C((uint64_t)v164 - ((v157 + 15) & 0x3FFFFFFFFFFFFFF0), v156, v152, v178);
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v160 = (void *)swift_slowAlloc();
        bzero(v160, v157);
        uint64_t v159 = sub_1BFEFB09C((uint64_t)v160, v156, v152, v178);
        swift_bridgeObjectRelease();
        MEMORY[0x1C18C9B00](v160, -1, -1);
      }
      char v161 = sub_1BFEFAE14(v159, v152);
      swift_release();
      if (v161) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_96:
      v151 += 5;
      if (!--v150) {
        goto LABEL_73;
      }
    }
    char v162 = sub_1BFEFB810(v178, v153);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v162 & 1) == 0) {
      goto LABEL_96;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LODWORD(v170) = v173;
LABEL_74:
    uint64_t v113 = v176 + 1;
    if (v176 + 1 != v172) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  LOBYTE(v111) = v170;
LABEL_108:
  if (v111) {
    return 1702195828;
  }
  else {
    return 0x65736C6166;
  }
}